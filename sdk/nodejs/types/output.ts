// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export namespace Adm {
    export interface GetKnowledgebasesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetKnowledgebasesKnowledgeBaseCollection {
        items: outputs.Adm.GetKnowledgebasesKnowledgeBaseCollectionItem[];
    }

    export interface GetKnowledgebasesKnowledgeBaseCollectionItem {
        /**
         * A filter to return only resources that belong to the specified compartment identifier.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the specified identifier.
         */
        id: string;
        /**
         * A filter to return only Knowledge Bases that match the specified lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The creation date and time of the Knowledge Base (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        timeCreated: string;
        /**
         * The date and time the Knowledge Base was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        timeUpdated: string;
    }

    export interface GetVulnerabilityAuditApplicationDependency {
        applicationDependencyNodeIds: string[];
        gav: string;
        nodeId: string;
    }

    export interface GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollection {
        /**
         * List of Vulnerability Audit summaries.
         */
        items: outputs.Adm.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItem[];
    }

    export interface GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItem {
        /**
         * List of Vulnerability Audit summaries.
         */
        items: outputs.Adm.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItem[];
    }

    export interface GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItem {
        /**
         * List of (Application Dependencies) node identifiers on which this node depends.
         */
        applicationDependencyNodeIds: string[];
        /**
         * A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
         */
        gav: string;
        /**
         * Indicates if the artifact is found in the knowledge base.
         */
        isFoundInKnowledgeBase: boolean;
        /**
         * Unique identifier of an Application Dependency node.
         */
        nodeId: string;
        /**
         * List of vulnerabilities for the Application Dependency.
         */
        vulnerabilities: outputs.Adm.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItemVulnerability[];
    }

    export interface GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItemVulnerability {
        /**
         * Common Vulnerability Scoring System (CVSS) Version 2.
         */
        cvssV2score: number;
        /**
         * Common Vulnerability Scoring System (CVSS) Version 3.
         */
        cvssV3score: number;
        /**
         * Unique vulnerability identifier.
         */
        id: string;
        /**
         * Indicates if the vulnerability was ignored according to the audit configuration.
         */
        isIgnored: boolean;
    }

    export interface GetVulnerabilityAuditApplicationDependencyVulnerabilitiesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVulnerabilityAuditApplicationDependencyVulnerabilityItem {
        /**
         * List of (Application Dependencies) node identifiers on which this node depends.
         */
        applicationDependencyNodeIds: string[];
        /**
         * A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
         */
        gav: string;
        /**
         * Indicates if the artifact is found in the knowledge base.
         */
        isFoundInKnowledgeBase: boolean;
        /**
         * Unique identifier of an Application Dependency node.
         */
        nodeId: string;
        /**
         * List of vulnerabilities for the Application Dependency.
         */
        vulnerabilities: outputs.Adm.GetVulnerabilityAuditApplicationDependencyVulnerabilityItemVulnerability[];
    }

    export interface GetVulnerabilityAuditApplicationDependencyVulnerabilityItemVulnerability {
        /**
         * Common Vulnerability Scoring System (CVSS) Version 2.
         */
        cvssV2score: number;
        /**
         * Common Vulnerability Scoring System (CVSS) Version 3.
         */
        cvssV3score: number;
        /**
         * Unique vulnerability identifier.
         */
        id: string;
        /**
         * Indicates if the vulnerability was ignored according to the audit configuration.
         */
        isIgnored: boolean;
    }

    export interface GetVulnerabilityAuditConfiguration {
        /**
         * Pattern to exclude artifacts from audit.
         */
        exclusions: string[];
        /**
         * The minimum CVSS V2 score for a vulnerability to be considered by the audit as failed.
         */
        maxPermissibleCvssV2score: number;
        /**
         * The minimum CVSS V3 score for a vulnerability to be considered by the audit as failed.
         */
        maxPermissibleCvssV3score: number;
    }

    export interface GetVulnerabilityAuditVulnerability {
        /**
         * Common Vulnerability Scoring System (CVSS) Version 2.
         */
        cvssV2score: number;
        /**
         * Common Vulnerability Scoring System (CVSS) Version 3.
         */
        cvssV3score: number;
        /**
         * Unique vulnerability identifier.
         */
        id: string;
        /**
         * Indicates if the vulnerability was ignored according to the audit configuration.
         */
        isIgnored: boolean;
    }

    export interface GetVulnerabilityAuditsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVulnerabilityAuditsVulnerabilityAuditCollection {
        items: outputs.Adm.GetVulnerabilityAuditsVulnerabilityAuditCollectionItem[];
    }

    export interface GetVulnerabilityAuditsVulnerabilityAuditCollectionItem {
        applicationDependencies: outputs.Adm.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemApplicationDependency[];
        /**
         * The type of the build tool.
         */
        buildType: string;
        /**
         * A filter to return only resources that belong to the specified compartment identifier.
         */
        compartmentId: string;
        /**
         * Configuration for a Vulnerability Audit type: object
         */
        configurations: outputs.Adm.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemConfiguration[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the specified identifier.
         */
        id: string;
        /**
         * A filter to return only successful or failed Vulnerability Audits.
         */
        isSuccess: boolean;
        /**
         * A filter to return only Vulnerability Audits that were created against the specified knowledge base.
         */
        knowledgeBaseId: string;
        /**
         * Maximum Common Vulnerability Scoring System Version 2 score of vulnerabilities.
         */
        maxObservedCvssV2score: number;
        /**
         * Maximum Common Vulnerability Scoring System Version 3 score of vulnerabilities.
         */
        maxObservedCvssV3score: number;
        /**
         * A filter to return only Vulnerability Audits that match the specified lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        timeCreated: string;
        /**
         * The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        timeUpdated: string;
        /**
         * List of vulnerabilities found in the Vulnerability Audit.
         */
        vulnerabilities: outputs.Adm.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemVulnerability[];
        /**
         * Count of vulnerable artifacts.
         */
        vulnerableArtifactsCount: number;
    }

    export interface GetVulnerabilityAuditsVulnerabilityAuditCollectionItemApplicationDependency {
        applicationDependencyNodeIds: string[];
        gav: string;
        nodeId: string;
    }

    export interface GetVulnerabilityAuditsVulnerabilityAuditCollectionItemConfiguration {
        /**
         * Pattern to exclude artifacts from audit.
         */
        exclusions: string[];
        /**
         * The minimum CVSS V2 score for a vulnerability to be considered by the audit as failed.
         */
        maxPermissibleCvssV2score: number;
        /**
         * The minimum CVSS V3 score for a vulnerability to be considered by the audit as failed.
         */
        maxPermissibleCvssV3score: number;
    }

    export interface GetVulnerabilityAuditsVulnerabilityAuditCollectionItemVulnerability {
        /**
         * Common Vulnerability Scoring System (CVSS) Version 2.
         */
        cvssV2score: number;
        /**
         * Common Vulnerability Scoring System (CVSS) Version 3.
         */
        cvssV3score: number;
        /**
         * A filter to return only resources that match the specified identifier.
         */
        id: string;
        /**
         * Indicates if the vulnerability was ignored according to the audit configuration.
         */
        isIgnored: boolean;
    }

    export interface VulnerabilityAuditApplicationDependency {
        /**
         * List of (Application Dependencies) node identifiers on which this node depends.
         */
        applicationDependencyNodeIds: string[];
        /**
         * Unique Group Artifact Version (GAV) identifier (Group:Artifact:Version).
         */
        gav: string;
        /**
         * Unique identifier of an Application Dependency node.
         */
        nodeId: string;
    }

    export interface VulnerabilityAuditConfiguration {
        /**
         * Pattern to exclude artifacts from audit.
         */
        exclusions: string[];
        /**
         * The minimum CVSS V2 score for a vulnerability to be considered by the audit as failed.
         */
        maxPermissibleCvssV2score: number;
        /**
         * The minimum CVSS V3 score for a vulnerability to be considered by the audit as failed.
         */
        maxPermissibleCvssV3score: number;
    }

    export interface VulnerabilityAuditVulnerability {
        /**
         * Common Vulnerability Scoring System (CVSS) Version 2.
         */
        cvssV2score: number;
        /**
         * Common Vulnerability Scoring System (CVSS) Version 3.
         */
        cvssV3score: number;
        /**
         * Unique vulnerability identifier.
         */
        id: string;
        /**
         * Indicates if the vulnerability was ignored according to the audit configuration.
         */
        isIgnored: boolean;
    }
}

export namespace AiAnomalyDetection {
    export interface DataAssetDataSourceDetails {
        /**
         * atp db password Secret Id
         */
        atpPasswordSecretId: string;
        /**
         * atp db user name
         */
        atpUserName: string;
        /**
         * Bucket Name for influx connection
         */
        bucket: string;
        /**
         * OCID of the secret containing the containers certificates of ATP wallet
         */
        cwalletFileSecretId: string;
        /**
         * Data source type where actually data asset is being stored
         */
        dataSourceType: string;
        /**
         * DB Name for influx connection
         */
        databaseName: string;
        /**
         * OCID of the secret containing the PDB'S certificates of ATP wallet
         */
        ewalletFileSecretId: string;
        /**
         * OCID of the secret containing Keystore.jks file of the ATP wallet
         */
        keyStoreFileSecretId: string;
        /**
         * Measurement name for influx
         */
        measurementName: string;
        /**
         * Object storage namespace
         */
        namespace: string;
        /**
         * File name
         */
        object: string;
        /**
         * OCID of the secret that contains jdbc properties file of ATP wallet
         */
        ojdbcFileSecretId: string;
        /**
         * Password Secret Id for the influx connection
         */
        passwordSecretId: string;
        /**
         * atp database table name
         */
        tableName: string;
        /**
         * OCID of the secret that contains the tnsnames file of ATP wallet
         */
        tnsnamesFileSecretId: string;
        /**
         * OCID of the secret containing truststore.jks file of the ATP wallet
         */
        truststoreFileSecretId: string;
        /**
         * public IP address and port to influx DB
         */
        url: string;
        /**
         * Username for connection to Influx
         */
        userName: string;
        /**
         * Possible data sources
         */
        versionSpecificDetails: outputs.AiAnomalyDetection.DataAssetDataSourceDetailsVersionSpecificDetails;
        /**
         * wallet password Secret ID in String format
         */
        walletPasswordSecretId: string;
    }

    export interface DataAssetDataSourceDetailsVersionSpecificDetails {
        /**
         * Bucket Name for influx connection
         */
        bucket: string;
        /**
         * DB Name for influx connection
         */
        databaseName: string;
        /**
         * Data source type where actually data asset is being stored
         */
        influxVersion: string;
        /**
         * Org name for the influx db
         */
        organizationName: string;
        /**
         * retention policy is how long the bucket would last
         */
        retentionPolicyName: string;
    }

    export interface GetAiPrivateEndpointsAiPrivateEndpointCollection {
        items: outputs.AiAnomalyDetection.GetAiPrivateEndpointsAiPrivateEndpointCollectionItem[];
    }

    export interface GetAiPrivateEndpointsAiPrivateEndpointCollectionItem {
        /**
         * The list of dataAssets using the private reverse connection endpoint.
         */
        attachedDataAssets: string[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * List of DNS zones to be used by the data assets. Example: custpvtsubnet.oraclevcn.com for data asset: db.custpvtsubnet.oraclevcn.com
         */
        dnsZones: string[];
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * unique AiPrivateEndpoint identifier
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in 'Failed' state.
         */
        lifecycleDetails: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * Subnet Identifier
         */
        subnetId: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the private endpoint was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the private endpoint was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetAiPrivateEndpointsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDetectionDataAssetDataSourceDetail {
        /**
         * atp db password Secret Id
         */
        atpPasswordSecretId: string;
        /**
         * atp db user name
         */
        atpUserName: string;
        /**
         * Bucket Name for influx connection
         */
        bucket: string;
        /**
         * OCID of the secret containing the containers certificates of ATP wallet
         */
        cwalletFileSecretId: string;
        /**
         * Data source type where actually data asset is being stored
         */
        dataSourceType: string;
        /**
         * DB Name for influx connection
         */
        databaseName: string;
        /**
         * OCID of the secret containing the PDB'S certificates of ATP wallet
         */
        ewalletFileSecretId: string;
        /**
         * OCID of the secret containing Keystore.jks file of the ATP wallet
         */
        keyStoreFileSecretId: string;
        /**
         * Measurement name for influx
         */
        measurementName: string;
        /**
         * Object storage namespace
         */
        namespace: string;
        /**
         * File name
         */
        object: string;
        /**
         * OCID of the secret that contains jdbc properties file of ATP wallet
         */
        ojdbcFileSecretId: string;
        /**
         * Password Secret Id for the influx connection
         */
        passwordSecretId: string;
        /**
         * atp database table name
         */
        tableName: string;
        /**
         * OCID of the secret that contains the tnsnames file of ATP wallet
         */
        tnsnamesFileSecretId: string;
        /**
         * OCID of the secret containing truststore.jks file of the ATP wallet
         */
        truststoreFileSecretId: string;
        /**
         * public IP address and port to influx DB
         */
        url: string;
        /**
         * Username for connection to Influx
         */
        userName: string;
        /**
         * Possible data sources
         */
        versionSpecificDetails: outputs.AiAnomalyDetection.GetDetectionDataAssetDataSourceDetailVersionSpecificDetail[];
        /**
         * wallet password Secret ID in String format
         */
        walletPasswordSecretId: string;
    }

    export interface GetDetectionDataAssetDataSourceDetailVersionSpecificDetail {
        /**
         * Bucket Name for influx connection
         */
        bucket: string;
        /**
         * DB Name for influx connection
         */
        databaseName: string;
        /**
         * Data source type where actually data asset is being stored
         */
        influxVersion: string;
        /**
         * Org name for the influx db
         */
        organizationName: string;
        /**
         * retention policy is how long the bucket would last
         */
        retentionPolicyName: string;
    }

    export interface GetDetectionDataAssetsDataAssetCollection {
        items: outputs.AiAnomalyDetection.GetDetectionDataAssetsDataAssetCollectionItem[];
    }

    export interface GetDetectionDataAssetsDataAssetCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Possible data sources
         */
        dataSourceDetails: outputs.AiAnomalyDetection.GetDetectionDataAssetsDataAssetCollectionItemDataSourceDetail[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A short description of the data asset.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The Unique Oracle ID (OCID) that is immutable on creation.
         */
        id: string;
        /**
         * OCID of Private Endpoint.
         */
        privateEndpointId: string;
        /**
         * The ID of the project for which to list the objects.
         */
        projectId: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the the DataAsset was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the the DataAsset was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface GetDetectionDataAssetsDataAssetCollectionItemDataSourceDetail {
        /**
         * atp db password Secret Id
         */
        atpPasswordSecretId: string;
        /**
         * atp db user name
         */
        atpUserName: string;
        /**
         * Bucket Name for influx connection
         */
        bucket: string;
        /**
         * OCID of the secret containing the containers certificates of ATP wallet
         */
        cwalletFileSecretId: string;
        /**
         * Data source type where actually data asset is being stored
         */
        dataSourceType: string;
        /**
         * DB Name for influx connection
         */
        databaseName: string;
        /**
         * OCID of the secret containing the PDB'S certificates of ATP wallet
         */
        ewalletFileSecretId: string;
        /**
         * OCID of the secret containing Keystore.jks file of the ATP wallet
         */
        keyStoreFileSecretId: string;
        /**
         * Measurement name for influx
         */
        measurementName: string;
        /**
         * Object storage namespace
         */
        namespace: string;
        /**
         * File name
         */
        object: string;
        /**
         * OCID of the secret that contains jdbc properties file of ATP wallet
         */
        ojdbcFileSecretId: string;
        /**
         * Password Secret Id for the influx connection
         */
        passwordSecretId: string;
        /**
         * atp database table name
         */
        tableName: string;
        /**
         * OCID of the secret that contains the tnsnames file of ATP wallet
         */
        tnsnamesFileSecretId: string;
        /**
         * OCID of the secret containing truststore.jks file of the ATP wallet
         */
        truststoreFileSecretId: string;
        /**
         * public IP address and port to influx DB
         */
        url: string;
        /**
         * Username for connection to Influx
         */
        userName: string;
        /**
         * Possible data sources
         */
        versionSpecificDetails: outputs.AiAnomalyDetection.GetDetectionDataAssetsDataAssetCollectionItemDataSourceDetailVersionSpecificDetail[];
        /**
         * wallet password Secret ID in String format
         */
        walletPasswordSecretId: string;
    }

    export interface GetDetectionDataAssetsDataAssetCollectionItemDataSourceDetailVersionSpecificDetail {
        /**
         * Bucket Name for influx connection
         */
        bucket: string;
        /**
         * DB Name for influx connection
         */
        databaseName: string;
        /**
         * Data source type where actually data asset is being stored
         */
        influxVersion: string;
        /**
         * Org name for the influx db
         */
        organizationName: string;
        /**
         * retention policy is how long the bucket would last
         */
        retentionPolicyName: string;
    }

    export interface GetDetectionDataAssetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDetectionModelModelTrainingDetail {
        /**
         * The list of OCIDs of the data assets to train the model. The dataAssets have to be in the same project where the ai model would reside.
         */
        dataAssetIds: string[];
        /**
         * A target model accuracy metric user provides as their requirement
         */
        targetFap: number;
        /**
         * Fraction of total data that is used for training the model. The remaining is used for validation of the model.
         */
        trainingFraction: number;
    }

    export interface GetDetectionModelModelTrainingResult {
        /**
         * Accuracy metric for a signal.
         */
        fap: number;
        /**
         * A boolean value to indicate if train goal/targetFap is achieved for trained model
         */
        isTrainingGoalAchieved: boolean;
        /**
         * The model accuracy metric on timestamp level.
         */
        multivariateFap: number;
        /**
         * Information regarding how/what row reduction methods will be applied. If this property is not present or is null, then it means row reduction is not applied.
         */
        rowReductionDetails: outputs.AiAnomalyDetection.GetDetectionModelModelTrainingResultRowReductionDetail[];
        /**
         * The list of signal details.
         */
        signalDetails: outputs.AiAnomalyDetection.GetDetectionModelModelTrainingResultSignalDetail[];
        /**
         * A warning message to explain the reason when targetFap cannot be achieved for trained model
         */
        warning: string;
    }

    export interface GetDetectionModelModelTrainingResultRowReductionDetail {
        /**
         * A boolean value to indicate if row reduction is applied
         */
        isReductionEnabled: boolean;
        /**
         * Method for row reduction:
         * * DELETE_ROW - delete rows with equal intervals
         * * AVERAGE_ROW - average multiple rows to one row
         */
        reductionMethod: string;
        /**
         * A percentage to reduce data size down to on top of original data
         */
        reductionPercentage: number;
    }

    export interface GetDetectionModelModelTrainingResultSignalDetail {
        /**
         * detailed information for a signal.
         */
        details: string;
        /**
         * Accuracy metric for a signal.
         */
        fap: number;
        /**
         * A boolean value to indicate if a signal is quantized or not.
         */
        isQuantized: boolean;
        /**
         * Max value within a signal.
         */
        max: number;
        /**
         * Min value within a signal.
         */
        min: number;
        /**
         * The ratio of missing values in a signal filled/imputed by the IDP algorithm.
         */
        mviRatio: number;
        /**
         * The name of a signal.
         */
        signalName: string;
        /**
         * Status of the signal:
         * * ACCEPTED - the signal is used for training the model
         * * DROPPED - the signal does not meet requirement, and is dropped before training the model.
         * * OTHER - placeholder for other status
         */
        status: string;
        /**
         * Standard deviation of values within a signal.
         */
        std: number;
    }

    export interface GetDetectionModelsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDetectionModelsModelCollection {
        items: outputs.AiAnomalyDetection.GetDetectionModelsModelCollectionItem[];
    }

    export interface GetDetectionModelsModelCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A short description of the Model.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the model that is immutable on creation.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Specifies the details of the MSET model during the create call.
         */
        modelTrainingDetails: outputs.AiAnomalyDetection.GetDetectionModelsModelCollectionItemModelTrainingDetail[];
        /**
         * Specifies the details for an Anomaly Detection model trained with MSET.
         */
        modelTrainingResults: outputs.AiAnomalyDetection.GetDetectionModelsModelCollectionItemModelTrainingResult[];
        /**
         * The ID of the project for which to list the objects.
         */
        projectId: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the the Model was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the Model was updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetDetectionModelsModelCollectionItemModelTrainingDetail {
        /**
         * The list of OCIDs of the data assets to train the model. The dataAssets have to be in the same project where the ai model would reside.
         */
        dataAssetIds: string[];
        /**
         * A target model accuracy metric user provides as their requirement
         */
        targetFap: number;
        /**
         * Fraction of total data that is used for training the model. The remaining is used for validation of the model.
         */
        trainingFraction: number;
    }

    export interface GetDetectionModelsModelCollectionItemModelTrainingResult {
        /**
         * Accuracy metric for a signal.
         */
        fap: number;
        /**
         * A boolean value to indicate if train goal/targetFap is achieved for trained model
         */
        isTrainingGoalAchieved: boolean;
        /**
         * The model accuracy metric on timestamp level.
         */
        multivariateFap: number;
        /**
         * Information regarding how/what row reduction methods will be applied. If this property is not present or is null, then it means row reduction is not applied.
         */
        rowReductionDetails: outputs.AiAnomalyDetection.GetDetectionModelsModelCollectionItemModelTrainingResultRowReductionDetail[];
        /**
         * The list of signal details.
         */
        signalDetails: outputs.AiAnomalyDetection.GetDetectionModelsModelCollectionItemModelTrainingResultSignalDetail[];
        /**
         * A warning message to explain the reason when targetFap cannot be achieved for trained model
         */
        warning: string;
    }

    export interface GetDetectionModelsModelCollectionItemModelTrainingResultRowReductionDetail {
        /**
         * A boolean value to indicate if row reduction is applied
         */
        isReductionEnabled: boolean;
        /**
         * Method for row reduction:
         * * DELETE_ROW - delete rows with equal intervals
         * * AVERAGE_ROW - average multiple rows to one row
         */
        reductionMethod: string;
        /**
         * A percentage to reduce data size down to on top of original data
         */
        reductionPercentage: number;
    }

    export interface GetDetectionModelsModelCollectionItemModelTrainingResultSignalDetail {
        /**
         * detailed information for a signal.
         */
        details: string;
        /**
         * Accuracy metric for a signal.
         */
        fap: number;
        /**
         * A boolean value to indicate if a signal is quantized or not.
         */
        isQuantized: boolean;
        /**
         * Max value within a signal.
         */
        max: number;
        /**
         * Min value within a signal.
         */
        min: number;
        /**
         * The ratio of missing values in a signal filled/imputed by the IDP algorithm.
         */
        mviRatio: number;
        /**
         * The name of a signal.
         */
        signalName: string;
        /**
         * Status of the signal:
         * * ACCEPTED - the signal is used for training the model
         * * DROPPED - the signal does not meet requirement, and is dropped before training the model.
         * * OTHER - placeholder for other status
         */
        status: string;
        /**
         * Standard deviation of values within a signal.
         */
        std: number;
    }

    export interface GetDetectionProjectsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDetectionProjectsProjectCollection {
        items: outputs.AiAnomalyDetection.GetDetectionProjectsProjectCollectionItem[];
    }

    export interface GetDetectionProjectsProjectCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A short description of the project.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the project that is immutable on creation.
         */
        id: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the resource was updated in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface ModelModelTrainingDetails {
        /**
         * The list of OCIDs of the data assets to train the model. The dataAssets have to be in the same project where the ai model would reside.
         */
        dataAssetIds: string[];
        /**
         * A target model accuracy metric user provides as their requirement
         */
        targetFap: number;
        /**
         * Fraction of total data that is used for training the model. The remaining is used for validation of the model.
         */
        trainingFraction: number;
    }

    export interface ModelModelTrainingResult {
        /**
         * Accuracy metric for a signal.
         */
        fap: number;
        /**
         * A boolean value to indicate if train goal/targetFap is achieved for trained model
         */
        isTrainingGoalAchieved: boolean;
        /**
         * The model accuracy metric on timestamp level.
         */
        multivariateFap: number;
        /**
         * Information regarding how/what row reduction methods will be applied. If this property is not present or is null, then it means row reduction is not applied.
         */
        rowReductionDetails: outputs.AiAnomalyDetection.ModelModelTrainingResultRowReductionDetail[];
        /**
         * The list of signal details.
         */
        signalDetails: outputs.AiAnomalyDetection.ModelModelTrainingResultSignalDetail[];
        /**
         * A warning message to explain the reason when targetFap cannot be achieved for trained model
         */
        warning: string;
    }

    export interface ModelModelTrainingResultRowReductionDetail {
        /**
         * A boolean value to indicate if row reduction is applied
         */
        isReductionEnabled: boolean;
        /**
         * Method for row reduction:
         * * DELETE_ROW - delete rows with equal intervals
         * * AVERAGE_ROW - average multiple rows to one row
         */
        reductionMethod: string;
        /**
         * A percentage to reduce data size down to on top of original data
         */
        reductionPercentage: number;
    }

    export interface ModelModelTrainingResultSignalDetail {
        /**
         * detailed information for a signal.
         */
        details: string;
        /**
         * Accuracy metric for a signal.
         */
        fap: number;
        /**
         * A boolean value to indicate if a signal is quantized or not.
         */
        isQuantized: boolean;
        /**
         * Max value within a signal.
         */
        max: number;
        /**
         * Min value within a signal.
         */
        min: number;
        /**
         * The ratio of missing values in a signal filled/imputed by the IDP algorithm.
         */
        mviRatio: number;
        /**
         * The name of a signal.
         */
        signalName: string;
        /**
         * Status of the signal:
         * * ACCEPTED - the signal is used for training the model
         * * DROPPED - the signal does not meet requirement, and is dropped before training the model.
         * * OTHER - placeholder for other status
         */
        status: string;
        /**
         * Standard deviation of values within a signal.
         */
        std: number;
    }

}

export namespace AiVision {
    export interface GetModelTestingDataset {
        /**
         * The name of the ObjectStorage bucket that contains the input data file.
         */
        bucket: string;
        /**
         * The OCID of the Data Science Labeling Dataset.
         */
        datasetId: string;
        /**
         * Type of the Dataset.
         */
        datasetType: string;
        /**
         * The namespace name of the ObjectStorage bucket that contains the input data file.
         */
        namespaceName: string;
        /**
         * The object name of the input data file.
         */
        object: string;
    }

    export interface GetModelTrainingDataset {
        /**
         * The name of the ObjectStorage bucket that contains the input data file.
         */
        bucket: string;
        /**
         * The OCID of the Data Science Labeling Dataset.
         */
        datasetId: string;
        /**
         * Type of the Dataset.
         */
        datasetType: string;
        /**
         * The namespace name of the ObjectStorage bucket that contains the input data file.
         */
        namespaceName: string;
        /**
         * The object name of the input data file.
         */
        object: string;
    }

    export interface GetModelValidationDataset {
        /**
         * The name of the ObjectStorage bucket that contains the input data file.
         */
        bucket: string;
        /**
         * The OCID of the Data Science Labeling Dataset.
         */
        datasetId: string;
        /**
         * Type of the Dataset.
         */
        datasetType: string;
        /**
         * The namespace name of the ObjectStorage bucket that contains the input data file.
         */
        namespaceName: string;
        /**
         * The object name of the input data file.
         */
        object: string;
    }

    export interface GetModelsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetModelsModelCollection {
        items: outputs.AiVision.GetModelsModelCollectionItem[];
    }

    export interface GetModelsModelCollectionItem {
        /**
         * Average precision of the trained model
         */
        averagePrecision: number;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Confidence ratio of the calculation
         */
        confidenceThreshold: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A short description of the model.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * unique Model identifier
         */
        id: string;
        /**
         * If It's true, Training is set for recommended epochs needed for quick training.
         */
        isQuickMode: boolean;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * The maximum duration in hours for which the training will run.
         */
        maxTrainingDurationInHours: number;
        /**
         * Complete Training Metrics for successful trained model
         */
        metrics: string;
        /**
         * Type of the Model.
         */
        modelType: string;
        /**
         * The version of the model
         */
        modelVersion: string;
        /**
         * Precision of the trained model
         */
        precision: number;
        /**
         * The ID of the project for which to list the objects.
         */
        projectId: string;
        /**
         * Recall of the trained model
         */
        recall: number;
        /**
         * A filter to return only resources their lifecycleState matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Total number of testing Images
         */
        testImageCount: number;
        /**
         * The base entity for a Dataset, which is the input for Model creation.
         */
        testingDatasets: outputs.AiVision.GetModelsModelCollectionItemTestingDataset[];
        /**
         * The time the Model was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the Model was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
        /**
         * Total number of training Images
         */
        totalImageCount: number;
        /**
         * Total hours actually used for training
         */
        trainedDurationInHours: number;
        /**
         * The base entity for a Dataset, which is the input for Model creation.
         */
        trainingDatasets: outputs.AiVision.GetModelsModelCollectionItemTrainingDataset[];
        /**
         * The base entity for a Dataset, which is the input for Model creation.
         */
        validationDatasets: outputs.AiVision.GetModelsModelCollectionItemValidationDataset[];
    }

    export interface GetModelsModelCollectionItemTestingDataset {
        /**
         * The name of the ObjectStorage bucket that contains the input data file.
         */
        bucket: string;
        /**
         * The OCID of the Data Science Labeling Dataset.
         */
        datasetId: string;
        /**
         * Type of the Dataset.
         */
        datasetType: string;
        namespaceName: string;
        /**
         * The object name of the input data file.
         */
        object: string;
    }

    export interface GetModelsModelCollectionItemTrainingDataset {
        /**
         * The name of the ObjectStorage bucket that contains the input data file.
         */
        bucket: string;
        /**
         * The OCID of the Data Science Labeling Dataset.
         */
        datasetId: string;
        /**
         * Type of the Dataset.
         */
        datasetType: string;
        namespaceName: string;
        /**
         * The object name of the input data file.
         */
        object: string;
    }

    export interface GetModelsModelCollectionItemValidationDataset {
        /**
         * The name of the ObjectStorage bucket that contains the input data file.
         */
        bucket: string;
        /**
         * The OCID of the Data Science Labeling Dataset.
         */
        datasetId: string;
        /**
         * Type of the Dataset.
         */
        datasetType: string;
        namespaceName: string;
        /**
         * The object name of the input data file.
         */
        object: string;
    }

    export interface GetProjectsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProjectsProjectCollection {
        items: outputs.AiVision.GetProjectsProjectCollectionItem[];
    }

    export interface GetProjectsProjectCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A short description of the project.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * unique Project identifier
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources their lifecycleState matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the Project was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the Project was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface ModelTestingDataset {
        /**
         * The name of the ObjectStorage bucket that contains the input data file.
         */
        bucket: string;
        /**
         * The OCID of the Data Science Labeling Dataset.
         */
        datasetId: string;
        /**
         * Type of the Dataset.
         */
        datasetType: string;
        /**
         * The namespace name of the ObjectStorage bucket that contains the input data file.
         */
        namespaceName: string;
        /**
         * The object name of the input data file.
         */
        object: string;
    }

    export interface ModelTrainingDataset {
        /**
         * The name of the ObjectStorage bucket that contains the input data file.
         */
        bucket: string;
        /**
         * The OCID of the Data Science Labeling Dataset.
         */
        datasetId: string;
        /**
         * Type of the Dataset.
         */
        datasetType: string;
        /**
         * The namespace name of the ObjectStorage bucket that contains the input data file.
         */
        namespaceName: string;
        /**
         * The object name of the input data file.
         */
        object: string;
    }

    export interface ModelValidationDataset {
        /**
         * The name of the ObjectStorage bucket that contains the input data file.
         */
        bucket: string;
        /**
         * The OCID of the Data Science Labeling Dataset.
         */
        datasetId: string;
        /**
         * Type of the Dataset.
         */
        datasetType: string;
        /**
         * The namespace name of the ObjectStorage bucket that contains the input data file.
         */
        namespaceName: string;
        /**
         * The object name of the input data file.
         */
        object: string;
    }

}

export namespace Analytics {
    export interface AnalyticsInstanceCapacity {
        /**
         * The capacity model to use.
         */
        capacityType: string;
        /**
         * (Updatable) The capacity value selected (OLPU count, number of users, ...etc...). This parameter affects the number of CPUs, amount of memory or other resources allocated to the instance.
         */
        capacityValue: number;
    }

    export interface AnalyticsInstanceNetworkEndpointDetails {
        /**
         * The type of network endpoint.
         */
        networkEndpointType: string;
        /**
         * The subnet OCID for the private endpoint.
         */
        subnetId: string;
        /**
         * The VCN OCID for the private endpoint.
         */
        vcnId: string;
        /**
         * Source IP addresses or IP address ranges igress rules.
         */
        whitelistedIps: string[];
        /**
         * Virtual Cloud Networks allowed to access this network endpoint.
         */
        whitelistedVcns: outputs.Analytics.AnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn[];
    }

    export interface AnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn {
        /**
         * The Virtual Cloud Network OCID.
         */
        id: string;
        /**
         * Source IP addresses or IP address ranges igress rules.
         */
        whitelistedIps: string[];
    }

    export interface AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone {
        /**
         * (Updatable) Description of private source dns zone.
         */
        description: string;
        /**
         * (Updatable) Private Source DNS Zone. Ex: example-vcn.oraclevcn.com, corp.example.com.
         */
        dnsZone: string;
    }

    export interface GetAnalyticsInstanceCapacity {
        /**
         * The capacity model to use.
         */
        capacityType: string;
        /**
         * The capacity value selected (OLPU count, number of users, ...etc...). This parameter affects the number of CPUs, amount of memory or other resources allocated to the instance.
         */
        capacityValue: number;
    }

    export interface GetAnalyticsInstanceNetworkEndpointDetail {
        /**
         * The type of network endpoint.
         */
        networkEndpointType: string;
        /**
         * OCID of the customer subnet connected to private access channel.
         */
        subnetId: string;
        /**
         * OCID of the customer VCN peered with private access channel.
         */
        vcnId: string;
        /**
         * Source IP addresses or IP address ranges igress rules.
         */
        whitelistedIps: string[];
        /**
         * Virtual Cloud Networks allowed to access this network endpoint.
         */
        whitelistedVcns: outputs.Analytics.GetAnalyticsInstanceNetworkEndpointDetailWhitelistedVcn[];
    }

    export interface GetAnalyticsInstanceNetworkEndpointDetailWhitelistedVcn {
        /**
         * The Virtual Cloud Network OCID.
         */
        id: string;
        /**
         * Source IP addresses or IP address ranges igress rules.
         */
        whitelistedIps: string[];
    }

    export interface GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone {
        /**
         * Description of private source dns zone.
         */
        description: string;
        /**
         * Private Source DNS Zone. Ex: example-vcn.oraclevcn.com, corp.example.com.
         */
        dnsZone: string;
    }

    export interface GetAnalyticsInstancesAnalyticsInstance {
        /**
         * Service instance capacity metadata (e.g.: OLPU count, number of users, ...etc...).
         */
        capacities: outputs.Analytics.GetAnalyticsInstancesAnalyticsInstanceCapacity[];
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the vanity url.
         */
        description: string;
        /**
         * Email address receiving notifications.
         */
        emailNotification: string;
        /**
         * A filter to only return resources matching the feature set. Values are case-insensitive.
         */
        featureSet: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The Virtual Cloud Network OCID.
         */
        id: string;
        idcsAccessToken: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure Vault Key encrypting the customer data stored in this Analytics instance. A null value indicates Oracle managed default encryption.
         */
        kmsKeyId: string;
        /**
         * The license used for the service.
         */
        licenseType: string;
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        /**
         * Base representation of a network endpoint.
         */
        networkEndpointDetails: outputs.Analytics.GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetail[];
        /**
         * URL of the Analytics service.
         */
        serviceUrl: string;
        /**
         * A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the instance was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time the instance was last updated (in the format defined by RFC3339). This timestamp represents updates made through this API. External events do not influence it.
         */
        timeUpdated: string;
    }

    export interface GetAnalyticsInstancesAnalyticsInstanceCapacity {
        /**
         * A filter to only return resources matching the capacity type enum. Values are case-insensitive.
         */
        capacityType: string;
        /**
         * The capacity value selected (OLPU count, number of users, ...etc...). This parameter affects the number of CPUs, amount of memory or other resources allocated to the instance.
         */
        capacityValue: number;
    }

    export interface GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetail {
        /**
         * The type of network endpoint.
         */
        networkEndpointType: string;
        /**
         * OCID of the customer subnet connected to private access channel.
         */
        subnetId: string;
        /**
         * OCID of the customer VCN peered with private access channel.
         */
        vcnId: string;
        /**
         * Source IP addresses or IP address ranges igress rules.
         */
        whitelistedIps: string[];
        /**
         * Virtual Cloud Networks allowed to access this network endpoint.
         */
        whitelistedVcns: outputs.Analytics.GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetailWhitelistedVcn[];
    }

    export interface GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetailWhitelistedVcn {
        /**
         * The Virtual Cloud Network OCID.
         */
        id: string;
        /**
         * Source IP addresses or IP address ranges igress rules.
         */
        whitelistedIps: string[];
    }

    export interface GetAnalyticsInstancesFilter {
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace AnnouncementsService {
    export interface AnnouncementSubscriptionFilterGroups {
        /**
         * A list of filters against which the Announcements service matches announcements. You cannot have more than one of any given filter type within a filter group.
         */
        filters: outputs.AnnouncementsService.AnnouncementSubscriptionFilterGroupsFilter[];
        /**
         * The name of the group. The name must be unique and it cannot be changed. Avoid entering confidential information.
         */
        name: string;
    }

    export interface AnnouncementSubscriptionFilterGroupsFilter {
        /**
         * The type of filter.
         */
        type: string;
        /**
         * The value of the filter.
         */
        value: string;
    }

    export interface AnnouncementSubscriptionsFilterGroupFilter {
        /**
         * (Updatable) The type of filter.
         */
        type: string;
        /**
         * (Updatable) The value of the filter.
         */
        value: string;
    }

    export interface GetAnnouncementSubscriptionFilterGroup {
        /**
         * A list of filters against which the Announcements service matches announcements. You cannot have more than one of any given filter type within a filter group. You also cannot combine the RESOURCE_ID filter with any other type of filter within a given filter group.
         */
        filters: outputs.AnnouncementsService.GetAnnouncementSubscriptionFilterGroupFilter[];
        /**
         * The name of the group. The name must be unique and it cannot be changed. Avoid entering confidential information.
         */
        name: string;
    }

    export interface GetAnnouncementSubscriptionFilterGroupFilter {
        /**
         * The type of filter.
         */
        type: string;
        /**
         * The value of the filter.
         */
        value: string;
    }

    export interface GetAnnouncementSubscriptionsAnnouncementSubscriptionCollection {
        items: outputs.AnnouncementsService.GetAnnouncementSubscriptionsAnnouncementSubscriptionCollectionItem[];
    }

    export interface GetAnnouncementSubscriptionsAnnouncementSubscriptionCollectionItem {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A description of the announcement subscription. Avoid entering confidential information.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A list of filter groups for the announcement subscription. A filter group is a combination of multiple filters applied to announcements for matching purposes.
         */
        filterGroups: outputs.AnnouncementsService.GetAnnouncementSubscriptionsAnnouncementSubscriptionCollectionItemFilterGroup[];
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the announcement subscription.
         */
        id: string;
        /**
         * A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription.
         */
        onsTopicId: string;
        /**
         * A filter to return only announcement subscriptions that match the given lifecycle state.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
         */
        timeCreated: string;
        /**
         * The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
         */
        timeUpdated: string;
    }

    export interface GetAnnouncementSubscriptionsAnnouncementSubscriptionCollectionItemFilterGroup {
        /**
         * A list of filters against which the Announcements service matches announcements. You cannot have more than one of any given filter type within a filter group. You also cannot combine the RESOURCE_ID filter with any other type of filter within a given filter group.
         */
        filters: outputs.AnnouncementsService.GetAnnouncementSubscriptionsAnnouncementSubscriptionCollectionItemFilterGroupFilter[];
        /**
         * The name of the group. The name must be unique and it cannot be changed. Avoid entering confidential information.
         */
        name: string;
    }

    export interface GetAnnouncementSubscriptionsAnnouncementSubscriptionCollectionItemFilterGroupFilter {
        /**
         * The type of filter.
         */
        type: string;
        /**
         * The value of the filter.
         */
        value: string;
    }

    export interface GetAnnouncementSubscriptionsFilter {
        /**
         * The name of the group. The name must be unique and it cannot be changed. Avoid entering confidential information.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace ApiGateway {
    export interface ApiValidationResult {
        /**
         * Name of the validation.
         */
        name: string;
        /**
         * Result of the validation.
         */
        result: string;
    }

    export interface DeploymentSpecification {
        /**
         * (Updatable) Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
         */
        loggingPolicies: outputs.ApiGateway.DeploymentSpecificationLoggingPolicies;
        /**
         * (Updatable) Behavior applied to any requests received by the API on this route.
         */
        requestPolicies: outputs.ApiGateway.DeploymentSpecificationRequestPolicies;
        /**
         * (Updatable) A list of routes that this API exposes.
         */
        routes: outputs.ApiGateway.DeploymentSpecificationRoute[];
    }

    export interface DeploymentSpecificationLoggingPolicies {
        /**
         * (Updatable) Configures the logging policies for the access logs of an API Deployment.
         */
        accessLog: outputs.ApiGateway.DeploymentSpecificationLoggingPoliciesAccessLog;
        /**
         * (Updatable) Configures the logging policies for the execution logs of an API Deployment.
         */
        executionLog: outputs.ApiGateway.DeploymentSpecificationLoggingPoliciesExecutionLog;
    }

    export interface DeploymentSpecificationLoggingPoliciesAccessLog {
        /**
         * (Updatable) Whether this policy is currently enabled.
         */
        isEnabled: boolean;
    }

    export interface DeploymentSpecificationLoggingPoliciesExecutionLog {
        /**
         * (Updatable) Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * (Updatable) Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
         */
        logLevel: string;
    }

    export interface DeploymentSpecificationRequestPolicies {
        /**
         * (Updatable) Information on how to authenticate incoming requests.
         */
        authentication: outputs.ApiGateway.DeploymentSpecificationRequestPoliciesAuthentication;
        /**
         * (Updatable) Enable CORS (Cross-Origin-Resource-Sharing) request handling.
         */
        cors: outputs.ApiGateway.DeploymentSpecificationRequestPoliciesCors;
        /**
         * (Updatable) Properties used to configure client mTLS verification when API Consumer makes connection to the gateway.
         */
        mutualTls: outputs.ApiGateway.DeploymentSpecificationRequestPoliciesMutualTls;
        /**
         * (Updatable) Limit the number of requests that should be handled for the specified window using a specfic key.
         */
        rateLimiting: outputs.ApiGateway.DeploymentSpecificationRequestPoliciesRateLimiting;
        /**
         * (Updatable) Usage plan policies for this deployment
         */
        usagePlans: outputs.ApiGateway.DeploymentSpecificationRequestPoliciesUsagePlans;
    }

    export interface DeploymentSpecificationRequestPoliciesAuthentication {
        /**
         * (Updatable) The list of intended recipients for the token.
         */
        audiences: string[];
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
         */
        functionId: string;
        /**
         * (Updatable) Whether an unauthenticated user may access the API. Must be "true" to enable ANONYMOUS route authorization.
         */
        isAnonymousAccessAllowed: boolean;
        /**
         * (Updatable) A list of parties that could have issued the token.
         */
        issuers: string[];
        /**
         * (Updatable) The maximum expected time difference between the system clocks of the token issuer and the API Gateway.
         */
        maxClockSkewInSeconds: number;
        /**
         * (Updatable) A set of Public Keys that will be used to verify the JWT signature.
         */
        publicKeys: outputs.ApiGateway.DeploymentSpecificationRequestPoliciesAuthenticationPublicKeys;
        /**
         * (Updatable) The authentication scheme that is to be used when authenticating the token. This must to be provided if "tokenHeader" is specified.
         */
        tokenAuthScheme: string;
        /**
         * (Updatable) The name of the header containing the authentication token.
         */
        tokenHeader: string;
        /**
         * (Updatable) The name of the query parameter containing the authentication token.
         */
        tokenQueryParam: string;
        /**
         * (Updatable) Type of the Response Cache Store Policy.
         */
        type: string;
        /**
         * (Updatable) A list of claims which should be validated to consider the token valid.
         */
        verifyClaims: outputs.ApiGateway.DeploymentSpecificationRequestPoliciesAuthenticationVerifyClaim[];
    }

    export interface DeploymentSpecificationRequestPoliciesAuthenticationPublicKeys {
        /**
         * (Updatable) Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * (Updatable) The set of static public keys.
         */
        keys: outputs.ApiGateway.DeploymentSpecificationRequestPoliciesAuthenticationPublicKeysKey[];
        /**
         * (Updatable) The duration for which the JWKS should be cached before it is fetched again.
         */
        maxCacheDurationInHours: number;
        /**
         * (Updatable) Type of the Response Cache Store Policy.
         */
        type: string;
        /**
         * (Updatable) The uri from which to retrieve the key. It must be accessible without authentication.
         */
        uri: string;
    }

    export interface DeploymentSpecificationRequestPoliciesAuthenticationPublicKeysKey {
        /**
         * (Updatable) The algorithm intended for use with this key.
         */
        alg: string;
        /**
         * (Updatable) The base64 url encoded exponent of the RSA public key represented by this key.
         */
        e: string;
        /**
         * (Updatable) The format of the public key.
         */
        format: string;
        /**
         * (Updatable) Name of the claim.
         */
        key: string;
        /**
         * (Updatable) The operations for which this key is to be used.
         */
        keyOps: string[];
        /**
         * (Updatable) A unique key ID. This key will be used to verify the signature of a JWT with matching "kid".
         */
        kid: string;
        /**
         * (Updatable) The key type.
         */
        kty: string;
        /**
         * (Updatable) The base64 url encoded modulus of the RSA public key represented by this key.
         */
        n: string;
        /**
         * (Updatable) The intended use of the public key.
         */
        use: string;
    }

    export interface DeploymentSpecificationRequestPoliciesAuthenticationVerifyClaim {
        /**
         * (Updatable) Whether the claim is required to be present in the JWT or not. If set to "false", the claim values will be matched only if the claim is present in the JWT.
         */
        isRequired: boolean;
        /**
         * (Updatable) Name of the claim.
         */
        key: string;
        /**
         * (Updatable) A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface DeploymentSpecificationRequestPoliciesCors {
        /**
         * (Updatable) The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
         */
        allowedHeaders: string[];
        /**
         * (Updatable) The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
         */
        allowedMethods: string[];
        /**
         * (Updatable) The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
         */
        allowedOrigins: string[];
        /**
         * (Updatable) The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
         */
        exposedHeaders: string[];
        /**
         * (Updatable) Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
         */
        isAllowCredentialsEnabled: boolean;
        /**
         * (Updatable) The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
         */
        maxAgeInSeconds: number;
    }

    export interface DeploymentSpecificationRequestPoliciesMutualTls {
        /**
         * (Updatable) Allowed list of CN or SAN which will be used for verification of certificate.
         */
        allowedSans: string[];
        /**
         * (Updatable) Determines whether to enable client verification when API Consumer makes connection to the gateway.
         */
        isVerifiedCertificateRequired: boolean;
    }

    export interface DeploymentSpecificationRequestPoliciesRateLimiting {
        /**
         * (Updatable) The maximum number of requests per second to allow.
         */
        rateInRequestsPerSecond: number;
        /**
         * (Updatable) The key used to group requests together.
         */
        rateKey: string;
    }

    export interface DeploymentSpecificationRequestPoliciesUsagePlans {
        /**
         * (Updatable) A list of context variables specifying where API tokens may be located in a request. Example locations:
         * * "request.headers[token]"
         * * "request.query[token]"
         * * "request.auth[Token]"
         * * "request.path[TOKEN]"
         */
        tokenLocations: string[];
    }

    export interface DeploymentSpecificationRoute {
        /**
         * (Updatable) The backend to forward requests to.
         */
        backend: outputs.ApiGateway.DeploymentSpecificationRouteBackend;
        /**
         * (Updatable) Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
         */
        loggingPolicies: outputs.ApiGateway.DeploymentSpecificationRouteLoggingPolicies;
        /**
         * (Updatable) A list of allowed methods on this route.
         */
        methods: string[];
        /**
         * (Updatable) A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
         */
        path: string;
        /**
         * (Updatable) Behavior applied to any requests received by the API on this route.
         */
        requestPolicies: outputs.ApiGateway.DeploymentSpecificationRouteRequestPolicies;
        /**
         * (Updatable) Behavior applied to any responses sent by the API for requests on this route.
         */
        responsePolicies: outputs.ApiGateway.DeploymentSpecificationRouteResponsePolicies;
    }

    export interface DeploymentSpecificationRouteBackend {
        /**
         * (Updatable) The body of the stock response from the mock backend.
         */
        body: string;
        /**
         * (Updatable) Defines a timeout for establishing a connection with a proxied server.
         */
        connectTimeoutInSeconds: number;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
         */
        functionId: string;
        /**
         * (Updatable)
         */
        headers: outputs.ApiGateway.DeploymentSpecificationRouteBackendHeader[];
        /**
         * (Updatable) Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * (Updatable) Defines a timeout for reading a response from the proxied server.
         */
        readTimeoutInSeconds: number;
        /**
         * (Updatable) Defines a timeout for transmitting a request to the proxied server.
         */
        sendTimeoutInSeconds: number;
        /**
         * (Updatable) The status code of the stock response from the mock backend.
         */
        status: number;
        /**
         * (Updatable) Type of the Response Cache Store Policy.
         */
        type: string;
        /**
         * (Updatable)
         */
        url: string;
    }

    export interface DeploymentSpecificationRouteBackendHeader {
        /**
         * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * (Updatable) Value of the header.
         */
        value: string;
    }

    export interface DeploymentSpecificationRouteLoggingPolicies {
        /**
         * (Updatable) Configures the logging policies for the access logs of an API Deployment.
         */
        accessLog: outputs.ApiGateway.DeploymentSpecificationRouteLoggingPoliciesAccessLog;
        /**
         * (Updatable) Configures the logging policies for the execution logs of an API Deployment.
         */
        executionLog: outputs.ApiGateway.DeploymentSpecificationRouteLoggingPoliciesExecutionLog;
    }

    export interface DeploymentSpecificationRouteLoggingPoliciesAccessLog {
        /**
         * (Updatable) Whether this policy is currently enabled.
         */
        isEnabled: boolean;
    }

    export interface DeploymentSpecificationRouteLoggingPoliciesExecutionLog {
        /**
         * (Updatable) Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * (Updatable) Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
         */
        logLevel: string;
    }

    export interface DeploymentSpecificationRouteRequestPolicies {
        /**
         * (Updatable) If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
         */
        authorization: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesAuthorization;
        /**
         * (Updatable) Validate the payload body of the incoming API requests on a specific route.
         */
        bodyValidation: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesBodyValidation;
        /**
         * (Updatable) Enable CORS (Cross-Origin-Resource-Sharing) request handling.
         */
        cors: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesCors;
        /**
         * (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
         */
        headerTransformations: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesHeaderTransformations;
        /**
         * (Updatable) Validate the HTTP headers on the incoming API requests on a specific route.
         */
        headerValidations: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesHeaderValidations;
        /**
         * (Updatable) A set of transformations to apply to query parameters that pass through the gateway.
         */
        queryParameterTransformations: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations;
        /**
         * (Updatable) Validate the URL query parameters on the incoming API requests on a specific route.
         */
        queryParameterValidations: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesQueryParameterValidations;
        /**
         * (Updatable) Base policy for Response Cache lookup.
         */
        responseCacheLookup: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesResponseCacheLookup;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesAuthorization {
        /**
         * (Updatable) A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
         */
        allowedScopes: string[];
        /**
         * (Updatable) Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesBodyValidation {
        /**
         * (Updatable) The content of the request body.
         */
        contents: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesBodyValidationContent[];
        /**
         * (Updatable) Determines if the parameter is required in the request.
         */
        required: boolean;
        /**
         * (Updatable) Validation behavior mode.
         */
        validationMode: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesBodyValidationContent {
        /**
         * (Updatable) The mediaType is a [media type range](https://tools.ietf.org/html/rfc7231#appendix-D) subset restricted to the following schema
         */
        mediaType: string;
        /**
         * (Updatable) Validation type defines the content validation method.
         */
        validationType: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesCors {
        /**
         * (Updatable) The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
         */
        allowedHeaders: string[];
        /**
         * (Updatable) The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
         */
        allowedMethods: string[];
        /**
         * (Updatable) The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
         */
        allowedOrigins: string[];
        /**
         * (Updatable) The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
         */
        exposedHeaders: string[];
        /**
         * (Updatable) Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
         */
        isAllowCredentialsEnabled: boolean;
        /**
         * (Updatable) The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
         */
        maxAgeInSeconds: number;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesHeaderTransformations {
        /**
         * (Updatable) Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterHeaders: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders;
        /**
         * (Updatable) Rename HTTP headers as they pass through the gateway.
         */
        renameHeaders: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders;
        /**
         * (Updatable) Set HTTP headers as they pass through the gateway.
         */
        setHeaders: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders {
        /**
         * (Updatable) The list of headers.
         */
        items: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem[];
        /**
         * (Updatable) Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem {
        /**
         * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders {
        /**
         * (Updatable) The list of headers.
         */
        items: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem[];
    }

    export interface DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem {
        /**
         * (Updatable) The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * (Updatable) The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders {
        /**
         * (Updatable) The list of headers.
         */
        items: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem[];
    }

    export interface DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem {
        /**
         * (Updatable) If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * (Updatable) A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface DeploymentSpecificationRouteRequestPoliciesHeaderValidations {
        /**
         * (Updatable)
         */
        headers: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader[];
        /**
         * (Updatable) Validation behavior mode.
         */
        validationMode: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader {
        /**
         * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * (Updatable) Determines if the parameter is required in the request.
         */
        required: boolean;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations {
        /**
         * (Updatable) Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterQueryParameters: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters;
        /**
         * (Updatable) Rename parameters on the query string as they pass through the gateway.
         */
        renameQueryParameters: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters;
        /**
         * (Updatable) Set parameters on the query string as they pass through the gateway.
         */
        setQueryParameters: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters {
        /**
         * (Updatable) The list of headers.
         */
        items: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem[];
        /**
         * (Updatable) Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem {
        /**
         * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters {
        /**
         * (Updatable) The list of headers.
         */
        items: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem[];
    }

    export interface DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem {
        /**
         * (Updatable) The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * (Updatable) The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters {
        /**
         * (Updatable) The list of headers.
         */
        items: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem[];
    }

    export interface DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem {
        /**
         * (Updatable) If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * (Updatable) A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface DeploymentSpecificationRouteRequestPoliciesQueryParameterValidations {
        /**
         * (Updatable)
         */
        parameters: outputs.ApiGateway.DeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter[];
        /**
         * (Updatable) Validation behavior mode.
         */
        validationMode: string;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter {
        /**
         * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * (Updatable) Determines if the parameter is required in the request.
         */
        required: boolean;
    }

    export interface DeploymentSpecificationRouteRequestPoliciesResponseCacheLookup {
        /**
         * (Updatable) A list of context expressions whose values will be added to the base cache key. Values should contain an expression enclosed within ${} delimiters. Only the request context is available.
         */
        cacheKeyAdditions: string[];
        /**
         * (Updatable) Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * (Updatable) Set true to allow caching responses where the request has an Authorization header. Ensure you have configured your  cache key additions to get the level of isolation across authenticated requests that you require.
         */
        isPrivateCachingEnabled: boolean;
        /**
         * (Updatable) Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface DeploymentSpecificationRouteResponsePolicies {
        /**
         * (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
         */
        headerTransformations: outputs.ApiGateway.DeploymentSpecificationRouteResponsePoliciesHeaderTransformations;
        /**
         * (Updatable) Base policy for how a response from a backend is cached in the Response Cache.
         */
        responseCacheStore: outputs.ApiGateway.DeploymentSpecificationRouteResponsePoliciesResponseCacheStore;
    }

    export interface DeploymentSpecificationRouteResponsePoliciesHeaderTransformations {
        /**
         * (Updatable) Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterHeaders: outputs.ApiGateway.DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders;
        /**
         * (Updatable) Rename HTTP headers as they pass through the gateway.
         */
        renameHeaders: outputs.ApiGateway.DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders;
        /**
         * (Updatable) Set HTTP headers as they pass through the gateway.
         */
        setHeaders: outputs.ApiGateway.DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders;
    }

    export interface DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders {
        /**
         * (Updatable) The list of headers.
         */
        items: outputs.ApiGateway.DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem[];
        /**
         * (Updatable) Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem {
        /**
         * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders {
        /**
         * (Updatable) The list of headers.
         */
        items: outputs.ApiGateway.DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem[];
    }

    export interface DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem {
        /**
         * (Updatable) The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * (Updatable) The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders {
        /**
         * (Updatable) The list of headers.
         */
        items: outputs.ApiGateway.DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem[];
    }

    export interface DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem {
        /**
         * (Updatable) If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * (Updatable) A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface DeploymentSpecificationRouteResponsePoliciesResponseCacheStore {
        /**
         * (Updatable) Sets the number of seconds for a response from a backend being stored in the Response Cache before it expires.
         */
        timeToLiveInSeconds: number;
        /**
         * (Updatable) Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GatewayCaBundle {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        caBundleId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        certificateAuthorityId: string;
        /**
         * (Updatable) Type of the Response Cache.
         */
        type: string;
    }

    export interface GatewayIpAddress {
        /**
         * An IP address.
         */
        ipAddress: string;
    }

    export interface GatewayResponseCacheDetails {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
         */
        authenticationSecretId: string;
        /**
         * (Updatable) The version number of the authentication secret to use.
         */
        authenticationSecretVersionNumber: string;
        /**
         * (Updatable) Defines the timeout for establishing a connection with the Response Cache.
         */
        connectTimeoutInMs: number;
        /**
         * (Updatable) Defines if the connection should be over SSL.
         */
        isSslEnabled: boolean;
        /**
         * (Updatable) Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * (Updatable) Defines the timeout for reading data from the Response Cache.
         */
        readTimeoutInMs: number;
        /**
         * (Updatable) Defines the timeout for transmitting data to the Response Cache.
         */
        sendTimeoutInMs: number;
        /**
         * (Updatable) The set of cache store members to connect to. At present only a single server is supported.
         */
        servers: outputs.ApiGateway.GatewayResponseCacheDetailsServer[];
        /**
         * (Updatable) Type of the Response Cache.
         */
        type: string;
    }

    export interface GatewayResponseCacheDetailsServer {
        /**
         * (Updatable) Hostname or IP address (IPv4 only) where the cache store is running.
         */
        host: string;
        /**
         * (Updatable) The port the cache store is exposed on.
         */
        port: number;
    }

    export interface GetApiDeploymentSpecificationLoggingPolicy {
        /**
         * Configures the logging policies for the access logs of an API Deployment.
         */
        accessLogs: outputs.ApiGateway.GetApiDeploymentSpecificationLoggingPolicyAccessLog[];
        /**
         * Configures the logging policies for the execution logs of an API Deployment.
         */
        executionLogs: outputs.ApiGateway.GetApiDeploymentSpecificationLoggingPolicyExecutionLog[];
    }

    export interface GetApiDeploymentSpecificationLoggingPolicyAccessLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
    }

    export interface GetApiDeploymentSpecificationLoggingPolicyExecutionLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
         */
        logLevel: string;
    }

    export interface GetApiDeploymentSpecificationRequestPolicy {
        /**
         * Information on how to authenticate incoming requests.
         */
        authentications: outputs.ApiGateway.GetApiDeploymentSpecificationRequestPolicyAuthentication[];
        /**
         * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
         */
        cors: outputs.ApiGateway.GetApiDeploymentSpecificationRequestPolicyCor[];
        /**
         * Properties used to configure client mTLS verification when API Consumer makes connection to the gateway.
         */
        mutualTls: outputs.ApiGateway.GetApiDeploymentSpecificationRequestPolicyMutualTl[];
        /**
         * Limit the number of requests that should be handled for the specified window using a specfic key.
         */
        rateLimitings: outputs.ApiGateway.GetApiDeploymentSpecificationRequestPolicyRateLimiting[];
        /**
         * Usage plan policies for this deployment
         */
        usagePlans: outputs.ApiGateway.GetApiDeploymentSpecificationRequestPolicyUsagePlan[];
    }

    export interface GetApiDeploymentSpecificationRequestPolicyAuthentication {
        /**
         * The list of intended recipients for the token.
         */
        audiences: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
         */
        functionId: string;
        /**
         * Whether an unauthenticated user may access the API. Must be "true" to enable ANONYMOUS route authorization.
         */
        isAnonymousAccessAllowed: boolean;
        /**
         * A list of parties that could have issued the token.
         */
        issuers: string[];
        /**
         * The maximum expected time difference between the system clocks of the token issuer and the API Gateway.
         */
        maxClockSkewInSeconds: number;
        /**
         * A set of Public Keys that will be used to verify the JWT signature.
         */
        publicKeys: outputs.ApiGateway.GetApiDeploymentSpecificationRequestPolicyAuthenticationPublicKey[];
        /**
         * The authentication scheme that is to be used when authenticating the token. This must to be provided if "tokenHeader" is specified.
         */
        tokenAuthScheme: string;
        /**
         * The name of the header containing the authentication token.
         */
        tokenHeader: string;
        /**
         * The name of the query parameter containing the authentication token.
         */
        tokenQueryParam: string;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
        /**
         * A list of claims which should be validated to consider the token valid.
         */
        verifyClaims: outputs.ApiGateway.GetApiDeploymentSpecificationRequestPolicyAuthenticationVerifyClaim[];
    }

    export interface GetApiDeploymentSpecificationRequestPolicyAuthenticationPublicKey {
        /**
         * Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * The set of static public keys.
         */
        keys: outputs.ApiGateway.GetApiDeploymentSpecificationRequestPolicyAuthenticationPublicKeyKey[];
        /**
         * The duration for which the JWKS should be cached before it is fetched again.
         */
        maxCacheDurationInHours: number;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
        /**
         * The uri from which to retrieve the key. It must be accessible without authentication.
         */
        uri: string;
    }

    export interface GetApiDeploymentSpecificationRequestPolicyAuthenticationPublicKeyKey {
        /**
         * The algorithm intended for use with this key.
         */
        alg: string;
        /**
         * The base64 url encoded exponent of the RSA public key represented by this key.
         */
        e: string;
        /**
         * The format of the public key.
         */
        format: string;
        /**
         * Name of the claim.
         */
        key: string;
        /**
         * The operations for which this key is to be used.
         */
        keyOps: string[];
        /**
         * A unique key ID. This key will be used to verify the signature of a JWT with matching "kid".
         */
        kid: string;
        /**
         * The key type.
         */
        kty: string;
        /**
         * The base64 url encoded modulus of the RSA public key represented by this key.
         */
        n: string;
        /**
         * The intended use of the public key.
         */
        use: string;
    }

    export interface GetApiDeploymentSpecificationRequestPolicyAuthenticationVerifyClaim {
        /**
         * Whether the claim is required to be present in the JWT or not. If set to "false", the claim values will be matched only if the claim is present in the JWT.
         */
        isRequired: boolean;
        /**
         * Name of the claim.
         */
        key: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetApiDeploymentSpecificationRequestPolicyCor {
        /**
         * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
         */
        allowedHeaders: string[];
        /**
         * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
         */
        allowedMethods: string[];
        /**
         * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
         */
        allowedOrigins: string[];
        /**
         * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
         */
        exposedHeaders: string[];
        /**
         * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
         */
        isAllowCredentialsEnabled: boolean;
        /**
         * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
         */
        maxAgeInSeconds: number;
    }

    export interface GetApiDeploymentSpecificationRequestPolicyMutualTl {
        /**
         * Allowed list of CN or SAN which will be used for verification of certificate.
         */
        allowedSans: string[];
        /**
         * Determines whether to enable client verification when API Consumer makes connection to the gateway.
         */
        isVerifiedCertificateRequired: boolean;
    }

    export interface GetApiDeploymentSpecificationRequestPolicyRateLimiting {
        /**
         * The maximum number of requests per second to allow.
         */
        rateInRequestsPerSecond: number;
        /**
         * The key used to group requests together.
         */
        rateKey: string;
    }

    export interface GetApiDeploymentSpecificationRequestPolicyUsagePlan {
        /**
         * A list of context variables specifying where API tokens may be located in a request. Example locations:
         * * "request.headers[token]"
         * * "request.query[token]"
         * * "request.auth[Token]"
         * * "request.path[TOKEN]"
         */
        tokenLocations: string[];
    }

    export interface GetApiDeploymentSpecificationRoute {
        /**
         * The backend to forward requests to.
         */
        backends: outputs.ApiGateway.GetApiDeploymentSpecificationRouteBackend[];
        /**
         * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
         */
        loggingPolicies: outputs.ApiGateway.GetApiDeploymentSpecificationRouteLoggingPolicy[];
        /**
         * A list of allowed methods on this route.
         */
        methods: string[];
        /**
         * A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
         */
        path: string;
        /**
         * Behavior applied to any requests received by the API on this route.
         */
        requestPolicies: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicy[];
        /**
         * Behavior applied to any responses sent by the API for requests on this route.
         */
        responsePolicies: outputs.ApiGateway.GetApiDeploymentSpecificationRouteResponsePolicy[];
    }

    export interface GetApiDeploymentSpecificationRouteBackend {
        /**
         * The body of the stock response from the mock backend.
         */
        body: string;
        /**
         * Defines a timeout for establishing a connection with a proxied server.
         */
        connectTimeoutInSeconds: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
         */
        functionId: string;
        headers: outputs.ApiGateway.GetApiDeploymentSpecificationRouteBackendHeader[];
        /**
         * Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * Defines a timeout for reading a response from the proxied server.
         */
        readTimeoutInSeconds: number;
        /**
         * Defines a timeout for transmitting a request to the proxied server.
         */
        sendTimeoutInSeconds: number;
        /**
         * The status code of the stock response from the mock backend.
         */
        status: number;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
        url: string;
    }

    export interface GetApiDeploymentSpecificationRouteBackendHeader {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * Value of the header.
         */
        value: string;
    }

    export interface GetApiDeploymentSpecificationRouteLoggingPolicy {
        /**
         * Configures the logging policies for the access logs of an API Deployment.
         */
        accessLogs: outputs.ApiGateway.GetApiDeploymentSpecificationRouteLoggingPolicyAccessLog[];
        /**
         * Configures the logging policies for the execution logs of an API Deployment.
         */
        executionLogs: outputs.ApiGateway.GetApiDeploymentSpecificationRouteLoggingPolicyExecutionLog[];
    }

    export interface GetApiDeploymentSpecificationRouteLoggingPolicyAccessLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
    }

    export interface GetApiDeploymentSpecificationRouteLoggingPolicyExecutionLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
         */
        logLevel: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicy {
        /**
         * If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
         */
        authorizations: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyAuthorization[];
        /**
         * Validate the payload body of the incoming API requests on a specific route.
         */
        bodyValidations: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyBodyValidation[];
        /**
         * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
         */
        cors: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyCor[];
        /**
         * A set of transformations to apply to HTTP headers that pass through the gateway.
         */
        headerTransformations: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformation[];
        /**
         * Validate the HTTP headers on the incoming API requests on a specific route.
         */
        headerValidations: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidation[];
        /**
         * A set of transformations to apply to query parameters that pass through the gateway.
         */
        queryParameterTransformations: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation[];
        /**
         * Validate the URL query parameters on the incoming API requests on a specific route.
         */
        queryParameterValidations: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidation[];
        /**
         * Base policy for Response Cache lookup.
         */
        responseCacheLookups: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyResponseCacheLookup[];
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyAuthorization {
        /**
         * A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
         */
        allowedScopes: string[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyBodyValidation {
        /**
         * The content of the request body.
         */
        contents: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyBodyValidationContent[];
        /**
         * Determines if the parameter is required in the request.
         */
        required: boolean;
        /**
         * Validation behavior mode.
         */
        validationMode: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyBodyValidationContent {
        /**
         * The media type is a [media type range](https://tools.ietf.org/html/rfc7231#appendix-D) subset restricted to the following schema
         */
        mediaType: string;
        /**
         * Validation type defines the content validation method.
         */
        validationType: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyCor {
        /**
         * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
         */
        allowedHeaders: string[];
        /**
         * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
         */
        allowedMethods: string[];
        /**
         * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
         */
        allowedOrigins: string[];
        /**
         * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
         */
        exposedHeaders: string[];
        /**
         * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
         */
        isAllowCredentialsEnabled: boolean;
        /**
         * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
         */
        maxAgeInSeconds: number;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformation {
        /**
         * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterHeaders: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationFilterHeader[];
        /**
         * Rename HTTP headers as they pass through the gateway.
         */
        renameHeaders: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationRenameHeader[];
        /**
         * Set HTTP headers as they pass through the gateway.
         */
        setHeaders: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationSetHeader[];
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationFilterHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationFilterHeaderItem[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationFilterHeaderItem {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationRenameHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationRenameHeaderItem[];
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationRenameHeaderItem {
        /**
         * The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationSetHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationSetHeaderItem[];
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformationSetHeaderItem {
        /**
         * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidation {
        headers: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidationHeader[];
        /**
         * Validation behavior mode.
         */
        validationMode: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidationHeader {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * Determines if the parameter is required in the request.
         */
        required: boolean;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation {
        /**
         * Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterQueryParameters: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameter[];
        /**
         * Rename parameters on the query string as they pass through the gateway.
         */
        renameQueryParameters: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameter[];
        /**
         * Set parameters on the query string as they pass through the gateway.
         */
        setQueryParameters: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameter[];
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameter {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameterItem[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameterItem {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameter {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameterItem[];
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameterItem {
        /**
         * The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameter {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameterItem[];
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameterItem {
        /**
         * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidation {
        parameters: outputs.ApiGateway.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidationParameter[];
        /**
         * Validation behavior mode.
         */
        validationMode: string;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidationParameter {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * Determines if the parameter is required in the request.
         */
        required: boolean;
    }

    export interface GetApiDeploymentSpecificationRouteRequestPolicyResponseCacheLookup {
        /**
         * A list of context expressions whose values will be added to the base cache key. Values should contain an expression enclosed within ${} delimiters. Only the request context is available.
         */
        cacheKeyAdditions: string[];
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Set true to allow caching responses where the request has an Authorization header. Ensure you have configured your  cache key additions to get the level of isolation across authenticated requests that you require.
         */
        isPrivateCachingEnabled: boolean;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetApiDeploymentSpecificationRouteResponsePolicy {
        /**
         * A set of transformations to apply to HTTP headers that pass through the gateway.
         */
        headerTransformations: outputs.ApiGateway.GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformation[];
        /**
         * Base policy for how a response from a backend is cached in the Response Cache.
         */
        responseCacheStores: outputs.ApiGateway.GetApiDeploymentSpecificationRouteResponsePolicyResponseCacheStore[];
    }

    export interface GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformation {
        /**
         * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterHeaders: outputs.ApiGateway.GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader[];
        /**
         * Rename HTTP headers as they pass through the gateway.
         */
        renameHeaders: outputs.ApiGateway.GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader[];
        /**
         * Set HTTP headers as they pass through the gateway.
         */
        setHeaders: outputs.ApiGateway.GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader[];
    }

    export interface GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeaderItem[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeaderItem {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeaderItem[];
    }

    export interface GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeaderItem {
        /**
         * The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeaderItem[];
    }

    export interface GetApiDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeaderItem {
        /**
         * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetApiDeploymentSpecificationRouteResponsePolicyResponseCacheStore {
        /**
         * Sets the number of seconds for a response from a backend being stored in the Response Cache before it expires.
         */
        timeToLiveInSeconds: number;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetApiValidationResult {
        /**
         * Name of the validation.
         */
        name: string;
        /**
         * Result of the validation.
         */
        result: string;
    }

    export interface GetApiValidationValidation {
        /**
         * Details of validation.
         */
        details: outputs.ApiGateway.GetApiValidationValidationDetail[];
        /**
         * Name of the validation.
         */
        name: string;
        /**
         * Result of the validation.
         */
        result: string;
    }

    export interface GetApiValidationValidationDetail {
        /**
         * Description of the warning/error.
         */
        msg: string;
        /**
         * Severity of the issue.
         */
        severity: string;
        /**
         * Position of the issue in the specification file (line, column).
         */
        srcs: outputs.ApiGateway.GetApiValidationValidationDetailSrc[];
    }

    export interface GetApiValidationValidationDetailSrc {
        items: any[];
    }

    export interface GetApisApiCollection {
        items: outputs.ApiGateway.GetApisApiCollectionItem[];
    }

    export interface GetApisApiCollectionItem {
        /**
         * The ocid of the compartment in which to list resources.
         */
        compartmentId: string;
        content: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        id: string;
        /**
         * A message describing the current lifecycleState in more detail. For ACTIVE state it describes if the document has been validated and the possible values are:
         * * 'New' for just updated API Specifications
         * * 'Validating' for a document which is being validated.
         * * 'Valid' the document has been validated without any errors or warnings
         * * 'Warning' the document has been validated and contains warnings
         * * 'Error' the document has been validated and contains errors
         * * 'Failed' the document validation failed
         * * 'Canceled' the document validation was canceled
         */
        lifecycleDetails: string;
        /**
         * Type of API Specification file.
         */
        specificationType: string;
        /**
         * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
         */
        state: string;
        /**
         * The time this resource was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time this resource was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * Status of each feature available from the API.
         */
        validationResults: outputs.ApiGateway.GetApisApiCollectionItemValidationResult[];
    }

    export interface GetApisApiCollectionItemValidationResult {
        /**
         * Name of the validation.
         */
        name: string;
        /**
         * Result of the validation.
         */
        result: string;
    }

    export interface GetApisFilter {
        /**
         * Name of the validation.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCertificatesCertificateCollection {
        items: outputs.ApiGateway.GetCertificatesCertificateCollectionItem[];
    }

    export interface GetCertificatesCertificateCollectionItem {
        /**
         * The data of the leaf certificate in pem format.
         */
        certificate: string;
        /**
         * The ocid of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        id: string;
        /**
         * The intermediate certificate data associated with the certificate in pem format.
         */
        intermediateCertificates: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        privateKey: string;
        /**
         * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE` or `DELETED`
         */
        state: string;
        /**
         * The entity to be secured by the certificate and additional host names.
         */
        subjectNames: string[];
        /**
         * The time this resource was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The date and time the certificate will expire.
         */
        timeNotValidAfter: string;
        /**
         * The time this resource was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetCertificatesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDeploymentSpecification {
        /**
         * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
         */
        loggingPolicies: outputs.ApiGateway.GetDeploymentSpecificationLoggingPolicy[];
        /**
         * Behavior applied to any requests received by the API on this route.
         */
        requestPolicies: outputs.ApiGateway.GetDeploymentSpecificationRequestPolicy[];
        /**
         * A list of routes that this API exposes.
         */
        routes: outputs.ApiGateway.GetDeploymentSpecificationRoute[];
    }

    export interface GetDeploymentSpecificationLoggingPolicy {
        /**
         * Configures the logging policies for the access logs of an API Deployment.
         */
        accessLogs: outputs.ApiGateway.GetDeploymentSpecificationLoggingPolicyAccessLog[];
        /**
         * Configures the logging policies for the execution logs of an API Deployment.
         */
        executionLogs: outputs.ApiGateway.GetDeploymentSpecificationLoggingPolicyExecutionLog[];
    }

    export interface GetDeploymentSpecificationLoggingPolicyAccessLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
    }

    export interface GetDeploymentSpecificationLoggingPolicyExecutionLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
         */
        logLevel: string;
    }

    export interface GetDeploymentSpecificationRequestPolicy {
        /**
         * Information on how to authenticate incoming requests.
         */
        authentications: outputs.ApiGateway.GetDeploymentSpecificationRequestPolicyAuthentication[];
        /**
         * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
         */
        cors: outputs.ApiGateway.GetDeploymentSpecificationRequestPolicyCor[];
        /**
         * Properties used to configure client mTLS verification when API Consumer makes connection to the gateway.
         */
        mutualTls: outputs.ApiGateway.GetDeploymentSpecificationRequestPolicyMutualTl[];
        /**
         * Limit the number of requests that should be handled for the specified window using a specfic key.
         */
        rateLimitings: outputs.ApiGateway.GetDeploymentSpecificationRequestPolicyRateLimiting[];
        /**
         * Usage plan policies for this deployment
         */
        usagePlans: outputs.ApiGateway.GetDeploymentSpecificationRequestPolicyUsagePlan[];
    }

    export interface GetDeploymentSpecificationRequestPolicyAuthentication {
        /**
         * The list of intended recipients for the token.
         */
        audiences: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
         */
        functionId: string;
        /**
         * Whether an unauthenticated user may access the API. Must be "true" to enable ANONYMOUS route authorization.
         */
        isAnonymousAccessAllowed: boolean;
        /**
         * A list of parties that could have issued the token.
         */
        issuers: string[];
        /**
         * The maximum expected time difference between the system clocks of the token issuer and the API Gateway.
         */
        maxClockSkewInSeconds: number;
        /**
         * A set of Public Keys that will be used to verify the JWT signature.
         */
        publicKeys: outputs.ApiGateway.GetDeploymentSpecificationRequestPolicyAuthenticationPublicKey[];
        /**
         * The authentication scheme that is to be used when authenticating the token. This must to be provided if "tokenHeader" is specified.
         */
        tokenAuthScheme: string;
        /**
         * The name of the header containing the authentication token.
         */
        tokenHeader: string;
        /**
         * The name of the query parameter containing the authentication token.
         */
        tokenQueryParam: string;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
        /**
         * A list of claims which should be validated to consider the token valid.
         */
        verifyClaims: outputs.ApiGateway.GetDeploymentSpecificationRequestPolicyAuthenticationVerifyClaim[];
    }

    export interface GetDeploymentSpecificationRequestPolicyAuthenticationPublicKey {
        /**
         * Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * The set of static public keys.
         */
        keys: outputs.ApiGateway.GetDeploymentSpecificationRequestPolicyAuthenticationPublicKeyKey[];
        /**
         * The duration for which the JWKS should be cached before it is fetched again.
         */
        maxCacheDurationInHours: number;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
        /**
         * The uri from which to retrieve the key. It must be accessible without authentication.
         */
        uri: string;
    }

    export interface GetDeploymentSpecificationRequestPolicyAuthenticationPublicKeyKey {
        /**
         * The algorithm intended for use with this key.
         */
        alg: string;
        /**
         * The base64 url encoded exponent of the RSA public key represented by this key.
         */
        e: string;
        /**
         * The format of the public key.
         */
        format: string;
        /**
         * Name of the claim.
         */
        key: string;
        /**
         * The operations for which this key is to be used.
         */
        keyOps: string[];
        /**
         * A unique key ID. This key will be used to verify the signature of a JWT with matching "kid".
         */
        kid: string;
        /**
         * The key type.
         */
        kty: string;
        /**
         * The base64 url encoded modulus of the RSA public key represented by this key.
         */
        n: string;
        /**
         * The intended use of the public key.
         */
        use: string;
    }

    export interface GetDeploymentSpecificationRequestPolicyAuthenticationVerifyClaim {
        /**
         * Whether the claim is required to be present in the JWT or not. If set to "false", the claim values will be matched only if the claim is present in the JWT.
         */
        isRequired: boolean;
        /**
         * Name of the claim.
         */
        key: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetDeploymentSpecificationRequestPolicyCor {
        /**
         * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
         */
        allowedHeaders: string[];
        /**
         * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
         */
        allowedMethods: string[];
        /**
         * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
         */
        allowedOrigins: string[];
        /**
         * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
         */
        exposedHeaders: string[];
        /**
         * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
         */
        isAllowCredentialsEnabled: boolean;
        /**
         * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
         */
        maxAgeInSeconds: number;
    }

    export interface GetDeploymentSpecificationRequestPolicyMutualTl {
        /**
         * Allowed list of CN or SAN which will be used for verification of certificate.
         */
        allowedSans: string[];
        /**
         * Determines whether to enable client verification when API Consumer makes connection to the gateway.
         */
        isVerifiedCertificateRequired: boolean;
    }

    export interface GetDeploymentSpecificationRequestPolicyRateLimiting {
        /**
         * The maximum number of requests per second to allow.
         */
        rateInRequestsPerSecond: number;
        /**
         * The key used to group requests together.
         */
        rateKey: string;
    }

    export interface GetDeploymentSpecificationRequestPolicyUsagePlan {
        /**
         * A list of context variables specifying where API tokens may be located in a request. Example locations:
         * * "request.headers[token]"
         * * "request.query[token]"
         * * "request.auth[Token]"
         * * "request.path[TOKEN]"
         */
        tokenLocations: string[];
    }

    export interface GetDeploymentSpecificationRoute {
        /**
         * The backend to forward requests to.
         */
        backends: outputs.ApiGateway.GetDeploymentSpecificationRouteBackend[];
        /**
         * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
         */
        loggingPolicies: outputs.ApiGateway.GetDeploymentSpecificationRouteLoggingPolicy[];
        /**
         * A list of allowed methods on this route.
         */
        methods: string[];
        /**
         * A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
         */
        path: string;
        /**
         * Behavior applied to any requests received by the API on this route.
         */
        requestPolicies: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicy[];
        /**
         * Behavior applied to any responses sent by the API for requests on this route.
         */
        responsePolicies: outputs.ApiGateway.GetDeploymentSpecificationRouteResponsePolicy[];
    }

    export interface GetDeploymentSpecificationRouteBackend {
        /**
         * The body of the stock response from the mock backend.
         */
        body: string;
        /**
         * Defines a timeout for establishing a connection with a proxied server.
         */
        connectTimeoutInSeconds: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
         */
        functionId: string;
        headers: outputs.ApiGateway.GetDeploymentSpecificationRouteBackendHeader[];
        /**
         * Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * Defines a timeout for reading a response from the proxied server.
         */
        readTimeoutInSeconds: number;
        /**
         * Defines a timeout for transmitting a request to the proxied server.
         */
        sendTimeoutInSeconds: number;
        /**
         * The status code of the stock response from the mock backend.
         */
        status: number;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
        url: string;
    }

    export interface GetDeploymentSpecificationRouteBackendHeader {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * Value of the header.
         */
        value: string;
    }

    export interface GetDeploymentSpecificationRouteLoggingPolicy {
        /**
         * Configures the logging policies for the access logs of an API Deployment.
         */
        accessLogs: outputs.ApiGateway.GetDeploymentSpecificationRouteLoggingPolicyAccessLog[];
        /**
         * Configures the logging policies for the execution logs of an API Deployment.
         */
        executionLogs: outputs.ApiGateway.GetDeploymentSpecificationRouteLoggingPolicyExecutionLog[];
    }

    export interface GetDeploymentSpecificationRouteLoggingPolicyAccessLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
    }

    export interface GetDeploymentSpecificationRouteLoggingPolicyExecutionLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
         */
        logLevel: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicy {
        /**
         * If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
         */
        authorizations: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyAuthorization[];
        /**
         * Validate the payload body of the incoming API requests on a specific route.
         */
        bodyValidations: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyBodyValidation[];
        /**
         * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
         */
        cors: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyCor[];
        /**
         * A set of transformations to apply to HTTP headers that pass through the gateway.
         */
        headerTransformations: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyHeaderTransformation[];
        /**
         * Validate the HTTP headers on the incoming API requests on a specific route.
         */
        headerValidations: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyHeaderValidation[];
        /**
         * A set of transformations to apply to query parameters that pass through the gateway.
         */
        queryParameterTransformations: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation[];
        /**
         * Validate the URL query parameters on the incoming API requests on a specific route.
         */
        queryParameterValidations: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidation[];
        /**
         * Base policy for Response Cache lookup.
         */
        responseCacheLookups: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyResponseCacheLookup[];
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyAuthorization {
        /**
         * A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
         */
        allowedScopes: string[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyBodyValidation {
        /**
         * The content of the request body.
         */
        contents: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyBodyValidationContent[];
        /**
         * Determines if the parameter is required in the request.
         */
        required: boolean;
        /**
         * Validation behavior mode.
         */
        validationMode: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyBodyValidationContent {
        /**
         * The media type is a [media type range](https://tools.ietf.org/html/rfc7231#appendix-D) subset restricted to the following schema
         */
        mediaType: string;
        /**
         * Validation type defines the content validation method.
         */
        validationType: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyCor {
        /**
         * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
         */
        allowedHeaders: string[];
        /**
         * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
         */
        allowedMethods: string[];
        /**
         * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
         */
        allowedOrigins: string[];
        /**
         * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
         */
        exposedHeaders: string[];
        /**
         * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
         */
        isAllowCredentialsEnabled: boolean;
        /**
         * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
         */
        maxAgeInSeconds: number;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyHeaderTransformation {
        /**
         * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterHeaders: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationFilterHeader[];
        /**
         * Rename HTTP headers as they pass through the gateway.
         */
        renameHeaders: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationRenameHeader[];
        /**
         * Set HTTP headers as they pass through the gateway.
         */
        setHeaders: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationSetHeader[];
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationFilterHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationFilterHeaderItem[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationFilterHeaderItem {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationRenameHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationRenameHeaderItem[];
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationRenameHeaderItem {
        /**
         * The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationSetHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationSetHeaderItem[];
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyHeaderTransformationSetHeaderItem {
        /**
         * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyHeaderValidation {
        headers: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyHeaderValidationHeader[];
        /**
         * Validation behavior mode.
         */
        validationMode: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyHeaderValidationHeader {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * Determines if the parameter is required in the request.
         */
        required: boolean;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation {
        /**
         * Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterQueryParameters: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameter[];
        /**
         * Rename parameters on the query string as they pass through the gateway.
         */
        renameQueryParameters: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameter[];
        /**
         * Set parameters on the query string as they pass through the gateway.
         */
        setQueryParameters: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameter[];
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameter {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameterItem[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameterItem {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameter {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameterItem[];
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameterItem {
        /**
         * The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameter {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameterItem[];
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameterItem {
        /**
         * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidation {
        parameters: outputs.ApiGateway.GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidationParameter[];
        /**
         * Validation behavior mode.
         */
        validationMode: string;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidationParameter {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * Determines if the parameter is required in the request.
         */
        required: boolean;
    }

    export interface GetDeploymentSpecificationRouteRequestPolicyResponseCacheLookup {
        /**
         * A list of context expressions whose values will be added to the base cache key. Values should contain an expression enclosed within ${} delimiters. Only the request context is available.
         */
        cacheKeyAdditions: string[];
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Set true to allow caching responses where the request has an Authorization header. Ensure you have configured your  cache key additions to get the level of isolation across authenticated requests that you require.
         */
        isPrivateCachingEnabled: boolean;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentSpecificationRouteResponsePolicy {
        /**
         * A set of transformations to apply to HTTP headers that pass through the gateway.
         */
        headerTransformations: outputs.ApiGateway.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformation[];
        /**
         * Base policy for how a response from a backend is cached in the Response Cache.
         */
        responseCacheStores: outputs.ApiGateway.GetDeploymentSpecificationRouteResponsePolicyResponseCacheStore[];
    }

    export interface GetDeploymentSpecificationRouteResponsePolicyHeaderTransformation {
        /**
         * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterHeaders: outputs.ApiGateway.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader[];
        /**
         * Rename HTTP headers as they pass through the gateway.
         */
        renameHeaders: outputs.ApiGateway.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader[];
        /**
         * Set HTTP headers as they pass through the gateway.
         */
        setHeaders: outputs.ApiGateway.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader[];
    }

    export interface GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeaderItem[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeaderItem {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeaderItem[];
    }

    export interface GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeaderItem {
        /**
         * The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeaderItem[];
    }

    export interface GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeaderItem {
        /**
         * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetDeploymentSpecificationRouteResponsePolicyResponseCacheStore {
        /**
         * Sets the number of seconds for a response from a backend being stored in the Response Cache before it expires.
         */
        timeToLiveInSeconds: number;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentsDeploymentCollection {
        /**
         * The ocid of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * The endpoint to access this deployment on the gateway.
         */
        endpoint: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Filter deployments by the gateway ocid.
         */
        gatewayId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * A path on which to deploy all routes contained in the API deployment specification. For more information, see [Deploying an API on an API Gateway by Creating an API Deployment](https://docs.cloud.oracle.com/iaas/Content/APIGateway/Tasks/apigatewaycreatingdeployment.htm).
         */
        pathPrefix: string;
        /**
         * The logical configuration of the API exposed by a deployment.
         */
        specifications: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecification[];
        /**
         * A filter to return only resources that match the given lifecycle state.  Example: `SUCCEEDED`
         */
        state: string;
        /**
         * The time this resource was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time this resource was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecification {
        /**
         * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
         */
        loggingPolicies: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationLoggingPolicy[];
        /**
         * Behavior applied to any requests received by the API on this route.
         */
        requestPolicies: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRequestPolicy[];
        /**
         * A list of routes that this API exposes.
         */
        routes: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRoute[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationLoggingPolicy {
        /**
         * Configures the logging policies for the access logs of an API Deployment.
         */
        accessLogs: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationLoggingPolicyAccessLog[];
        /**
         * Configures the logging policies for the execution logs of an API Deployment.
         */
        executionLogs: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationLoggingPolicyExecutionLog[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationLoggingPolicyAccessLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationLoggingPolicyExecutionLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
         */
        logLevel: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRequestPolicy {
        /**
         * Information on how to authenticate incoming requests.
         */
        authentications: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRequestPolicyAuthentication[];
        /**
         * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
         */
        cors: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRequestPolicyCor[];
        /**
         * Properties used to configure client mTLS verification when API Consumer makes connection to the gateway.
         */
        mutualTls: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRequestPolicyMutualTl[];
        /**
         * Limit the number of requests that should be handled for the specified window using a specfic key.
         */
        rateLimitings: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRequestPolicyRateLimiting[];
        /**
         * Usage plan policies for this deployment
         */
        usagePlans: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRequestPolicyUsagePlan[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRequestPolicyAuthentication {
        /**
         * The list of intended recipients for the token.
         */
        audiences: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
         */
        functionId: string;
        /**
         * Whether an unauthenticated user may access the API. Must be "true" to enable ANONYMOUS route authorization.
         */
        isAnonymousAccessAllowed: boolean;
        /**
         * A list of parties that could have issued the token.
         */
        issuers: string[];
        /**
         * The maximum expected time difference between the system clocks of the token issuer and the API Gateway.
         */
        maxClockSkewInSeconds: number;
        /**
         * A set of Public Keys that will be used to verify the JWT signature.
         */
        publicKeys: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRequestPolicyAuthenticationPublicKey[];
        /**
         * The authentication scheme that is to be used when authenticating the token. This must to be provided if "tokenHeader" is specified.
         */
        tokenAuthScheme: string;
        /**
         * The name of the header containing the authentication token.
         */
        tokenHeader: string;
        /**
         * The name of the query parameter containing the authentication token.
         */
        tokenQueryParam: string;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
        /**
         * A list of claims which should be validated to consider the token valid.
         */
        verifyClaims: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRequestPolicyAuthenticationVerifyClaim[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRequestPolicyAuthenticationPublicKey {
        /**
         * Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * The set of static public keys.
         */
        keys: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRequestPolicyAuthenticationPublicKeyKey[];
        /**
         * The duration for which the JWKS should be cached before it is fetched again.
         */
        maxCacheDurationInHours: number;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
        /**
         * The uri from which to retrieve the key. It must be accessible without authentication.
         */
        uri: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRequestPolicyAuthenticationPublicKeyKey {
        /**
         * The algorithm intended for use with this key.
         */
        alg: string;
        /**
         * The base64 url encoded exponent of the RSA public key represented by this key.
         */
        e: string;
        /**
         * The format of the public key.
         */
        format: string;
        /**
         * Name of the claim.
         */
        key: string;
        /**
         * The operations for which this key is to be used.
         */
        keyOps: string[];
        /**
         * A unique key ID. This key will be used to verify the signature of a JWT with matching "kid".
         */
        kid: string;
        /**
         * The key type.
         */
        kty: string;
        /**
         * The base64 url encoded modulus of the RSA public key represented by this key.
         */
        n: string;
        /**
         * The intended use of the public key.
         */
        use: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRequestPolicyAuthenticationVerifyClaim {
        /**
         * Whether the claim is required to be present in the JWT or not. If set to "false", the claim values will be matched only if the claim is present in the JWT.
         */
        isRequired: boolean;
        /**
         * Name of the claim.
         */
        key: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRequestPolicyCor {
        /**
         * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
         */
        allowedHeaders: string[];
        /**
         * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
         */
        allowedMethods: string[];
        /**
         * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
         */
        allowedOrigins: string[];
        /**
         * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
         */
        exposedHeaders: string[];
        /**
         * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
         */
        isAllowCredentialsEnabled: boolean;
        /**
         * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
         */
        maxAgeInSeconds: number;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRequestPolicyMutualTl {
        /**
         * Allowed list of CN or SAN which will be used for verification of certificate.
         */
        allowedSans: string[];
        /**
         * Determines whether to enable client verification when API Consumer makes connection to the gateway.
         */
        isVerifiedCertificateRequired: boolean;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRequestPolicyRateLimiting {
        /**
         * The maximum number of requests per second to allow.
         */
        rateInRequestsPerSecond: number;
        /**
         * The key used to group requests together.
         */
        rateKey: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRequestPolicyUsagePlan {
        /**
         * A list of context variables specifying where API tokens may be located in a request. Example locations:
         * * "request.headers[token]"
         * * "request.query[token]"
         * * "request.auth[Token]"
         * * "request.path[TOKEN]"
         */
        tokenLocations: string[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRoute {
        /**
         * The backend to forward requests to.
         */
        backends: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteBackend[];
        /**
         * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
         */
        loggingPolicies: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy[];
        /**
         * A list of allowed methods on this route.
         */
        methods: string[];
        /**
         * A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
         */
        path: string;
        /**
         * Behavior applied to any requests received by the API on this route.
         */
        requestPolicies: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicy[];
        /**
         * Behavior applied to any responses sent by the API for requests on this route.
         */
        responsePolicies: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicy[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteBackend {
        /**
         * The body of the stock response from the mock backend.
         */
        body: string;
        /**
         * Defines a timeout for establishing a connection with a proxied server.
         */
        connectTimeoutInSeconds: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
         */
        functionId: string;
        headers: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteBackendHeader[];
        /**
         * Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * Defines a timeout for reading a response from the proxied server.
         */
        readTimeoutInSeconds: number;
        /**
         * Defines a timeout for transmitting a request to the proxied server.
         */
        sendTimeoutInSeconds: number;
        /**
         * The status code of the stock response from the mock backend.
         */
        status: number;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
        url: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteBackendHeader {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * Value of the header.
         */
        value: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy {
        /**
         * Configures the logging policies for the access logs of an API Deployment.
         */
        accessLogs: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyAccessLog[];
        /**
         * Configures the logging policies for the execution logs of an API Deployment.
         */
        executionLogs: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyExecutionLog[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyAccessLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyExecutionLog {
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
         */
        logLevel: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicy {
        /**
         * If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
         */
        authorizations: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyAuthorization[];
        /**
         * Validate the payload body of the incoming API requests on a specific route.
         */
        bodyValidations: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyBodyValidation[];
        /**
         * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
         */
        cors: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyCor[];
        /**
         * A set of transformations to apply to HTTP headers that pass through the gateway.
         */
        headerTransformations: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformation[];
        /**
         * Validate the HTTP headers on the incoming API requests on a specific route.
         */
        headerValidations: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderValidation[];
        /**
         * A set of transformations to apply to query parameters that pass through the gateway.
         */
        queryParameterTransformations: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformation[];
        /**
         * Validate the URL query parameters on the incoming API requests on a specific route.
         */
        queryParameterValidations: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterValidation[];
        /**
         * Base policy for Response Cache lookup.
         */
        responseCacheLookups: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyResponseCacheLookup[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyAuthorization {
        /**
         * A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
         */
        allowedScopes: string[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyBodyValidation {
        /**
         * The content of the request body.
         */
        contents: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyBodyValidationContent[];
        /**
         * Determines if the parameter is required in the request.
         */
        required: boolean;
        /**
         * Validation behavior mode.
         */
        validationMode: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyBodyValidationContent {
        /**
         * The key is a [media type range](https://tools.ietf.org/html/rfc7231#appendix-D) subset restricted to the following schema
         */
        mediaType: string;
        /**
         * Validation type defines the content validation method.
         */
        validationType: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyCor {
        /**
         * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
         */
        allowedHeaders: string[];
        /**
         * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
         */
        allowedMethods: string[];
        /**
         * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
         */
        allowedOrigins: string[];
        /**
         * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
         */
        exposedHeaders: string[];
        /**
         * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
         */
        isAllowCredentialsEnabled: boolean;
        /**
         * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
         */
        maxAgeInSeconds: number;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformation {
        /**
         * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterHeaders: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationFilterHeader[];
        /**
         * Rename HTTP headers as they pass through the gateway.
         */
        renameHeaders: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationRenameHeader[];
        /**
         * Set HTTP headers as they pass through the gateway.
         */
        setHeaders: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationSetHeader[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationFilterHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationFilterHeaderItem[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationFilterHeaderItem {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationRenameHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationRenameHeaderItem[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationRenameHeaderItem {
        /**
         * The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationSetHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationSetHeaderItem[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationSetHeaderItem {
        /**
         * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderValidation {
        headers: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderValidationHeader[];
        /**
         * Validation behavior mode.
         */
        validationMode: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderValidationHeader {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * Determines if the parameter is required in the request.
         */
        required: boolean;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformation {
        /**
         * Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterQueryParameters: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameter[];
        /**
         * Rename parameters on the query string as they pass through the gateway.
         */
        renameQueryParameters: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameter[];
        /**
         * Set parameters on the query string as they pass through the gateway.
         */
        setQueryParameters: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameter[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameter {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameterItem[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationFilterQueryParameterItem {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameter {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameterItem[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationRenameQueryParameterItem {
        /**
         * The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameter {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameterItem[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationSetQueryParameterItem {
        /**
         * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterValidation {
        parameters: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterValidationParameter[];
        /**
         * Validation behavior mode.
         */
        validationMode: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterValidationParameter {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * Determines if the parameter is required in the request.
         */
        required: boolean;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyResponseCacheLookup {
        /**
         * A list of context expressions whose values will be added to the base cache key. Values should contain an expression enclosed within ${} delimiters. Only the request context is available.
         */
        cacheKeyAdditions: string[];
        /**
         * Whether this policy is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Set true to allow caching responses where the request has an Authorization header. Ensure you have configured your  cache key additions to get the level of isolation across authenticated requests that you require.
         */
        isPrivateCachingEnabled: boolean;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicy {
        /**
         * A set of transformations to apply to HTTP headers that pass through the gateway.
         */
        headerTransformations: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformation[];
        /**
         * Base policy for how a response from a backend is cached in the Response Cache.
         */
        responseCacheStores: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyResponseCacheStore[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformation {
        /**
         * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         */
        filterHeaders: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationFilterHeader[];
        /**
         * Rename HTTP headers as they pass through the gateway.
         */
        renameHeaders: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationRenameHeader[];
        /**
         * Set HTTP headers as they pass through the gateway.
         */
        setHeaders: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationSetHeader[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationFilterHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationFilterHeaderItem[];
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationFilterHeaderItem {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationRenameHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationRenameHeaderItem[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationRenameHeaderItem {
        /**
         * The original case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        from: string;
        /**
         * The new name of the header.  This name must be unique across transformation policies.
         */
        to: string;
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationSetHeader {
        /**
         * The list of headers.
         */
        items: outputs.ApiGateway.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationSetHeaderItem[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyHeaderTransformationSetHeaderItem {
        /**
         * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
         */
        ifExists: string;
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicyResponseCacheStore {
        /**
         * Sets the number of seconds for a response from a backend being stored in the Response Cache before it expires.
         */
        timeToLiveInSeconds: number;
        /**
         * Type of the Response Cache Store Policy.
         */
        type: string;
    }

    export interface GetDeploymentsFilter {
        /**
         * The case-insensitive name of the header.  This name must be unique across transformation policies.
         */
        name: string;
        regex?: boolean;
        /**
         * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
         */
        values: string[];
    }

    export interface GetGatewayCaBundle {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        caBundleId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        certificateAuthorityId: string;
        /**
         * Type of the Response Cache.
         */
        type: string;
    }

    export interface GetGatewayIpAddress {
        /**
         * An IP address.
         */
        ipAddress: string;
    }

    export interface GetGatewayResponseCacheDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
         */
        authenticationSecretId: string;
        /**
         * The version number of the authentication secret to use.
         */
        authenticationSecretVersionNumber: string;
        /**
         * Defines the timeout for establishing a connection with the Response Cache.
         */
        connectTimeoutInMs: number;
        /**
         * Defines if the connection should be over SSL.
         */
        isSslEnabled: boolean;
        /**
         * Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * Defines the timeout for reading data from the Response Cache.
         */
        readTimeoutInMs: number;
        /**
         * Defines the timeout for transmitting data to the Response Cache.
         */
        sendTimeoutInMs: number;
        /**
         * The set of cache store members to connect to. At present only a single server is supported.
         */
        servers: outputs.ApiGateway.GetGatewayResponseCacheDetailServer[];
        /**
         * Type of the Response Cache.
         */
        type: string;
    }

    export interface GetGatewayResponseCacheDetailServer {
        /**
         * Hostname or IP address (IPv4 only) where the cache store is running.
         */
        host: string;
        /**
         * The port the cache store is exposed on.
         */
        port: number;
    }

    export interface GetGatewaysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetGatewaysGatewayCollection {
        /**
         * An array of CA bundles that should be used on the Gateway for TLS validation.
         */
        caBundles: outputs.ApiGateway.GetGatewaysGatewayCollectionCaBundle[];
        /**
         * Filter gateways by the certificate ocid.
         */
        certificateId: string;
        /**
         * The ocid of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Gateway endpoint type. `PUBLIC` will have a public ip address assigned to it, while `PRIVATE` will only be accessible on a private IP address on the subnet.  Example: `PUBLIC` or `PRIVATE`
         */
        endpointType: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for APIs deployed on the gateway.
         */
        hostname: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        id: string;
        /**
         * An array of IP addresses associated with the gateway.
         */
        ipAddresses: outputs.ApiGateway.GetGatewaysGatewayCollectionIpAddress[];
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * An array of Network Security Groups OCIDs associated with this API Gateway.
         */
        networkSecurityGroupIds: string[];
        /**
         * Base Gateway response cache.
         */
        responseCacheDetails: outputs.ApiGateway.GetGatewaysGatewayCollectionResponseCacheDetail[];
        /**
         * A filter to return only resources that match the given lifecycle state.  Example: `SUCCEEDED`
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet in which related resources are created.
         */
        subnetId: string;
        /**
         * The time this resource was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time this resource was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetGatewaysGatewayCollectionCaBundle {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        caBundleId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        certificateAuthorityId: string;
        /**
         * Type of the Response Cache.
         */
        type: string;
    }

    export interface GetGatewaysGatewayCollectionIpAddress {
        /**
         * An IP address.
         */
        ipAddress: string;
    }

    export interface GetGatewaysGatewayCollectionResponseCacheDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
         */
        authenticationSecretId: string;
        /**
         * The version number of the authentication secret to use.
         */
        authenticationSecretVersionNumber: string;
        /**
         * Defines the timeout for establishing a connection with the Response Cache.
         */
        connectTimeoutInMs: number;
        /**
         * Defines if the connection should be over SSL.
         */
        isSslEnabled: boolean;
        /**
         * Defines whether or not to uphold SSL verification.
         */
        isSslVerifyDisabled: boolean;
        /**
         * Defines the timeout for reading data from the Response Cache.
         */
        readTimeoutInMs: number;
        /**
         * Defines the timeout for transmitting data to the Response Cache.
         */
        sendTimeoutInMs: number;
        /**
         * The set of cache store members to connect to. At present only a single server is supported.
         */
        servers: outputs.ApiGateway.GetGatewaysGatewayCollectionResponseCacheDetailServer[];
        /**
         * Type of the Response Cache.
         */
        type: string;
    }

    export interface GetGatewaysGatewayCollectionResponseCacheDetailServer {
        /**
         * Hostname or IP address (IPv4 only) where the cache store is running.
         */
        host: string;
        /**
         * The port the cache store is exposed on.
         */
        port: number;
    }

    export interface GetSubscriberClient {
        /**
         * The name of the client. Must be unique within a subscriber.
         */
        name: string;
        /**
         * The token for the client. Must be unique within a tenancy.
         */
        token: string;
    }

    export interface GetSubscribersFilter {
        /**
         * The name of the client. Must be unique within a subscriber.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubscribersSubscriberCollection {
        items: outputs.ApiGateway.GetSubscribersSubscriberCollectionItem[];
    }

    export interface GetSubscribersSubscriberCollectionItem {
        /**
         * The clients belonging to this subscriber.
         */
        clients: outputs.ApiGateway.GetSubscribersSubscriberCollectionItemClient[];
        /**
         * The ocid of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state. Example: `ACTIVE`
         */
        state: string;
        /**
         * The time this resource was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time this resource was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * An array of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of usage plan resources.
         */
        usagePlans: string[];
    }

    export interface GetSubscribersSubscriberCollectionItemClient {
        /**
         * The name of the client. Must be unique within a subscriber.
         */
        name: string;
        /**
         * The token for the client. Must be unique within a tenancy.
         */
        token: string;
    }

    export interface GetUsagePlanEntitlement {
        /**
         * A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
         */
        description: string;
        /**
         * An entitlement name, unique within a usage plan.
         */
        name: string;
        /**
         * Quota policy for a usage plan.
         */
        quotas: outputs.ApiGateway.GetUsagePlanEntitlementQuota[];
        /**
         * Rate-limiting policy for a usage plan.
         */
        rateLimits: outputs.ApiGateway.GetUsagePlanEntitlementRateLimit[];
        /**
         * A collection of targeted deployments that the entitlement will be applied to.
         */
        targets: outputs.ApiGateway.GetUsagePlanEntitlementTarget[];
    }

    export interface GetUsagePlanEntitlementQuota {
        /**
         * What the usage plan will do when a quota is breached: `REJECT` will allow no further requests `ALLOW` will continue to allow further requests
         */
        operationOnBreach: string;
        /**
         * The policy that controls when quotas will reset. Example: `CALENDAR`
         */
        resetPolicy: string;
        /**
         * The unit of time over which rate limits are calculated. Example: `SECOND`
         */
        unit: string;
        /**
         * The number of requests that can be made per time period.
         */
        value: number;
    }

    export interface GetUsagePlanEntitlementRateLimit {
        /**
         * The unit of time over which rate limits are calculated. Example: `SECOND`
         */
        unit: string;
        /**
         * The number of requests that can be made per time period.
         */
        value: number;
    }

    export interface GetUsagePlanEntitlementTarget {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a deployment resource.
         */
        deploymentId: string;
    }

    export interface GetUsagePlansFilter {
        /**
         * An entitlement name, unique within a usage plan.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetUsagePlansUsagePlanCollection {
        items: outputs.ApiGateway.GetUsagePlansUsagePlanCollectionItem[];
    }

    export interface GetUsagePlansUsagePlanCollectionItem {
        /**
         * The ocid of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * A collection of entitlements currently assigned to the usage plan.
         */
        entitlements: outputs.ApiGateway.GetUsagePlansUsagePlanCollectionItemEntitlement[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a usage plan resource.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state. Example: `ACTIVE`
         */
        state: string;
        /**
         * The time this resource was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time this resource was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetUsagePlansUsagePlanCollectionItemEntitlement {
        /**
         * A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
         */
        description: string;
        /**
         * An entitlement name, unique within a usage plan.
         */
        name: string;
        /**
         * Quota policy for a usage plan.
         */
        quotas: outputs.ApiGateway.GetUsagePlansUsagePlanCollectionItemEntitlementQuota[];
        /**
         * Rate-limiting policy for a usage plan.
         */
        rateLimits: outputs.ApiGateway.GetUsagePlansUsagePlanCollectionItemEntitlementRateLimit[];
        /**
         * A collection of targeted deployments that the entitlement will be applied to.
         */
        targets: outputs.ApiGateway.GetUsagePlansUsagePlanCollectionItemEntitlementTarget[];
    }

    export interface GetUsagePlansUsagePlanCollectionItemEntitlementQuota {
        /**
         * What the usage plan will do when a quota is breached: `REJECT` will allow no further requests `ALLOW` will continue to allow further requests
         */
        operationOnBreach: string;
        /**
         * The policy that controls when quotas will reset. Example: `CALENDAR`
         */
        resetPolicy: string;
        /**
         * The unit of time over which rate limits are calculated. Example: `SECOND`
         */
        unit: string;
        /**
         * The number of requests that can be made per time period.
         */
        value: number;
    }

    export interface GetUsagePlansUsagePlanCollectionItemEntitlementRateLimit {
        /**
         * The unit of time over which rate limits are calculated. Example: `SECOND`
         */
        unit: string;
        /**
         * The number of requests that can be made per time period.
         */
        value: number;
    }

    export interface GetUsagePlansUsagePlanCollectionItemEntitlementTarget {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a deployment resource.
         */
        deploymentId: string;
    }

    export interface SubscriberClient {
        /**
         * (Updatable) The name of the client. Must be unique within a subscriber.
         */
        name: string;
        /**
         * (Updatable) The token for the client. Must be unique within a tenancy.
         */
        token: string;
    }

    export interface UsagePlanEntitlement {
        /**
         * (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
         */
        description: string;
        /**
         * (Updatable) An entitlement name, unique within a usage plan.
         */
        name: string;
        /**
         * (Updatable) Quota policy for a usage plan.
         */
        quota: outputs.ApiGateway.UsagePlanEntitlementQuota;
        /**
         * (Updatable) Rate-limiting policy for a usage plan.
         */
        rateLimit: outputs.ApiGateway.UsagePlanEntitlementRateLimit;
        /**
         * (Updatable) A collection of targeted deployments that the entitlement will be applied to.
         */
        targets: outputs.ApiGateway.UsagePlanEntitlementTarget[];
    }

    export interface UsagePlanEntitlementQuota {
        /**
         * (Updatable) What the usage plan will do when a quota is breached: `REJECT` will allow no further requests `ALLOW` will continue to allow further requests
         */
        operationOnBreach: string;
        /**
         * (Updatable) The policy that controls when quotas will reset. Example: `CALENDAR`
         */
        resetPolicy: string;
        /**
         * (Updatable) The unit of time over which rate limits are calculated. Example: `SECOND`
         */
        unit: string;
        /**
         * (Updatable) The number of requests that can be made per time period.
         */
        value: number;
    }

    export interface UsagePlanEntitlementRateLimit {
        /**
         * (Updatable) The unit of time over which rate limits are calculated. Example: `SECOND`
         */
        unit: string;
        /**
         * (Updatable) The number of requests that can be made per time period.
         */
        value: number;
    }

    export interface UsagePlanEntitlementTarget {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a deployment resource.
         */
        deploymentId: string;
    }

}

export namespace Apm {
    export interface GetApmDomainsApmDomain {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * The endpoint where the APM agents upload their observations and metrics.
         */
        dataUploadEndpoint: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the APM domain.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier that is immutable on creation.
         */
        id: string;
        /**
         * Indicates if this is an Always Free resource.
         */
        isFreeTier: boolean;
        /**
         * A filter to return only resources that match the given life-cycle state.
         */
        state: string;
        /**
         * The time the APM domain was created, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
        /**
         * The time the APM domain was updated, expressed in RFC 3339 timestamp format.
         */
        timeUpdated: string;
    }

    export interface GetApmDomainsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDataKeysDataKey {
        /**
         * Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
         */
        name: string;
        /**
         * Type of the Data Key.
         */
        type: string;
        /**
         * Value of the Data Key.
         */
        value: string;
    }

    export interface GetDataKeysFilter {
        /**
         * Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace ApmConfig {
    export interface ConfigDimension {
        /**
         * (Updatable) The name of the metric. This must be a known metric name.
         */
        name: string;
        /**
         * (Updatable) This must not be set.
         */
        valueSource: string;
    }

    export interface ConfigMetric {
        /**
         * (Updatable) A description of the metric.
         */
        description: string;
        /**
         * (Updatable) The name of the metric. This must be a known metric name.
         */
        name: string;
        /**
         * (Updatable) The unit of the metric.
         */
        unit: string;
        /**
         * (Updatable) This must not be set.
         */
        valueSource: string;
    }

    export interface ConfigRule {
        /**
         * (Updatable) The name by which a configuration entity is displayed to the end user.
         */
        displayName: string;
        /**
         * (Updatable) The string that defines the Span Filter expression.
         */
        filterText: string;
        /**
         * (Updatable) Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
         */
        isApplyToErrorSpans: boolean;
        /**
         * (Updatable) Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
         */
        isEnabled: boolean;
        /**
         * (Updatable) The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
         */
        priority: number;
        /**
         * (Updatable) The maximum response time in milliseconds that is considered "satisfactory" for the end user.
         */
        satisfiedResponseTime: number;
        /**
         * (Updatable) The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
         */
        toleratingResponseTime: number;
    }

    export interface GetConfigDimension {
        /**
         * The name of the metric. This must be a known metric name.
         */
        name: string;
        /**
         * This must not be set.
         */
        valueSource: string;
    }

    export interface GetConfigMetric {
        /**
         * A description of the metric.
         */
        description: string;
        /**
         * The name of the metric. This must be a known metric name.
         */
        name: string;
        /**
         * The unit of the metric.
         */
        unit: string;
        /**
         * This must not be set.
         */
        valueSource: string;
    }

    export interface GetConfigRule {
        /**
         * The name by which a configuration entity is displayed to the end user.
         */
        displayName: string;
        /**
         * The string that defines the Span Filter expression.
         */
        filterText: string;
        /**
         * Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
         */
        isApplyToErrorSpans: boolean;
        /**
         * Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
         */
        isEnabled: boolean;
        /**
         * The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
         */
        priority: number;
        /**
         * The maximum response time in milliseconds that is considered "satisfactory" for the end user.
         */
        satisfiedResponseTime: number;
        /**
         * The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
         */
        toleratingResponseTime: number;
    }

    export interface GetConfigsConfigCollection {
        items: outputs.ApmConfig.GetConfigsConfigCollectionItem[];
    }

    export interface GetConfigsConfigCollectionItem {
        /**
         * The APM Domain ID the request is intended for.
         */
        apmDomainId: string;
        /**
         * A filter to match configuration items of a given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
         */
        configType: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A description of the metric.
         */
        description: string;
        /**
         * A list of dimensions for the metric. This variable should not be used.
         */
        dimensions: outputs.ApmConfig.GetConfigsConfigCollectionItemDimension[];
        /**
         * A filter to return resources that match the given display name.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
         */
        filterId: string;
        /**
         * The string that defines the Span Filter expression.
         */
        filterText: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A string that specifies the group that an OPTIONS item belongs to.
         */
        group: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
         */
        id: string;
        /**
         * The list of metrics in this group.
         */
        metrics: outputs.ApmConfig.GetConfigsConfigCollectionItemMetric[];
        /**
         * The namespace to which the metrics are published. It must be one of several predefined namespaces.
         */
        namespace: string;
        opcDryRun: string;
        /**
         * The options are stored here as JSON.
         */
        options: string;
        rules: outputs.ApmConfig.GetConfigsConfigCollectionItemRule[];
        /**
         * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
         */
        timeCreated: string;
        /**
         * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
         */
        timeUpdated: string;
    }

    export interface GetConfigsConfigCollectionItemDimension {
        /**
         * The name of the metric. This must be a known metric name.
         */
        name: string;
        /**
         * This must not be set.
         */
        valueSource: string;
    }

    export interface GetConfigsConfigCollectionItemMetric {
        /**
         * A description of the metric.
         */
        description: string;
        /**
         * The name of the metric. This must be a known metric name.
         */
        name: string;
        /**
         * The unit of the metric.
         */
        unit: string;
        /**
         * This must not be set.
         */
        valueSource: string;
    }

    export interface GetConfigsConfigCollectionItemRule {
        /**
         * A filter to return resources that match the given display name.
         */
        displayName: string;
        /**
         * The string that defines the Span Filter expression.
         */
        filterText: string;
        /**
         * Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
         */
        isApplyToErrorSpans: boolean;
        /**
         * Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
         */
        isEnabled: boolean;
        /**
         * The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
         */
        priority: number;
        /**
         * The maximum response time in milliseconds that is considered "satisfactory" for the end user.
         */
        satisfiedResponseTime: number;
        /**
         * The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
         */
        toleratingResponseTime: number;
    }

    export interface GetConfigsFilter {
        /**
         * The name of the metric. This must be a known metric name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace ApmSynthetics {
    export interface ConfigConfiguration {
        /**
         * (Updatable) Type of configuration.
         */
        configType: string;
        /**
         * (Updatable) Dns settings.
         */
        dnsConfiguration: outputs.ApmSynthetics.ConfigConfigurationDnsConfiguration;
        /**
         * (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
         */
        isCertificateValidationEnabled: boolean;
        /**
         * (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
         */
        isFailureRetried: boolean;
        /**
         * (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
         */
        isRedirectionEnabled: boolean;
        /**
         * (Updatable) Details of the network configuration.
         */
        networkConfiguration: outputs.ApmSynthetics.ConfigConfigurationNetworkConfiguration;
        /**
         * (Updatable) Details for request HTTP authentication.
         */
        reqAuthenticationDetails: outputs.ApmSynthetics.ConfigConfigurationReqAuthenticationDetails;
        /**
         * (Updatable) Request http authentication scheme.
         */
        reqAuthenticationScheme: string;
        /**
         * (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
         */
        requestHeaders: outputs.ApmSynthetics.ConfigConfigurationRequestHeader[];
        /**
         * (Updatable) Request HTTP method.
         */
        requestMethod: string;
        /**
         * (Updatable) Request post body content.
         */
        requestPostBody: string;
        /**
         * (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
         */
        requestQueryParams: outputs.ApmSynthetics.ConfigConfigurationRequestQueryParam[];
        /**
         * (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
         */
        verifyResponseCodes: string[];
        /**
         * (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
         */
        verifyResponseContent: string;
        /**
         * (Updatable) Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
         */
        verifyTexts: outputs.ApmSynthetics.ConfigConfigurationVerifyText[];
    }

    export interface ConfigConfigurationDnsConfiguration {
        /**
         * (Updatable) If isOverrideDns is true, then dns will be overridden.
         */
        isOverrideDns: boolean;
        /**
         * (Updatable) Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
         */
        overrideDnsIp: string;
    }

    export interface ConfigConfigurationNetworkConfiguration {
        /**
         * (Updatable) Number of hops.
         */
        numberOfHops: number;
        /**
         * (Updatable) Type of probe mode when TCP protocol is selected.
         */
        probeMode: string;
        /**
         * (Updatable) Number of probes per hop.
         */
        probePerHop: number;
        /**
         * (Updatable) Type of protocol.
         */
        protocol: string;
        /**
         * (Updatable) Number of probe packets sent out simultaneously.
         */
        transmissionRate: number;
    }

    export interface ConfigConfigurationReqAuthenticationDetails {
        /**
         * (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
         */
        authHeaders: outputs.ApmSynthetics.ConfigConfigurationReqAuthenticationDetailsAuthHeader[];
        /**
         * (Updatable) Request method.
         */
        authRequestMethod: string;
        /**
         * (Updatable) Request post body.
         */
        authRequestPostBody: string;
        /**
         * (Updatable) Authentication token.
         */
        authToken: string;
        /**
         * (Updatable) URL to get authetication token.
         */
        authUrl: string;
        /**
         * (Updatable) Username for authentication.
         */
        authUserName: string;
        /**
         * (Updatable) User password for authentication.
         */
        authUserPassword: string;
        /**
         * (Updatable) Request http oauth scheme.
         */
        oauthScheme: string;
    }

    export interface ConfigConfigurationReqAuthenticationDetailsAuthHeader {
        /**
         * (Updatable) Name of the header.
         */
        headerName: string;
        /**
         * (Updatable) Value of the header.
         */
        headerValue: string;
    }

    export interface ConfigConfigurationRequestHeader {
        /**
         * (Updatable) Name of the header.
         */
        headerName: string;
        /**
         * (Updatable) Value of the header.
         */
        headerValue: string;
    }

    export interface ConfigConfigurationRequestQueryParam {
        /**
         * (Updatable) Name of the parameter.
         */
        paramName: string;
        /**
         * (Updatable) Value of the parameter.
         */
        paramValue: string;
    }

    export interface ConfigConfigurationVerifyText {
        /**
         * (Updatable) Verification text in the response.
         */
        text: string;
    }

    export interface ConfigScriptParameter {
        /**
         * If parameter value is default or overwritten.
         */
        isOverwritten: boolean;
        /**
         * Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
         */
        isSecret: boolean;
        /**
         * Details of the script parameter that can be used to overwrite the parameter present in the script.
         */
        monitorScriptParameters: outputs.ApmSynthetics.ConfigScriptParameterMonitorScriptParameter[];
        /**
         * (Updatable) Name of the parameter.
         */
        paramName: string;
        /**
         * (Updatable) Value of the parameter.
         */
        paramValue: string;
    }

    export interface ConfigScriptParameterMonitorScriptParameter {
        /**
         * (Updatable) Name of the parameter.
         */
        paramName: string;
        /**
         * (Updatable) Value of the parameter.
         */
        paramValue: string;
    }

    export interface DedicatedVantagePointDvpStackDetails {
        /**
         * (Updatable) Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
         */
        dvpStackId: string;
        /**
         * (Updatable) Type of stack.
         */
        dvpStackType: string;
        /**
         * (Updatable) Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
         */
        dvpStreamId: string;
        /**
         * (Updatable) Version of the dedicated vantage point.
         */
        dvpVersion: string;
    }

    export interface DedicatedVantagePointMonitorStatusCountMap {
        /**
         * Number of disabled monitors using the script.
         */
        disabled: number;
        /**
         * Number of enabled monitors using the script.
         */
        enabled: number;
        /**
         * Number of invalid monitors using the script.
         */
        invalid: number;
        /**
         * Total number of monitors using the script.
         */
        total: number;
    }

    export interface GetDedicatedVantagePointDvpStackDetail {
        /**
         * Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
         */
        dvpStackId: string;
        /**
         * Type of stack.
         */
        dvpStackType: string;
        /**
         * Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
         */
        dvpStreamId: string;
        /**
         * Version of the dedicated vantage point.
         */
        dvpVersion: string;
    }

    export interface GetDedicatedVantagePointMonitorStatusCountMap {
        /**
         * Number of disabled monitors using the script.
         */
        disabled: number;
        /**
         * Number of enabled monitors using the script.
         */
        enabled: number;
        /**
         * Number of invalid monitors using the script.
         */
        invalid: number;
        /**
         * Total number of monitors using the script.
         */
        total: number;
    }

    export interface GetDedicatedVantagePointsDedicatedVantagePointCollection {
        items: outputs.ApmSynthetics.GetDedicatedVantagePointsDedicatedVantagePointCollectionItem[];
    }

    export interface GetDedicatedVantagePointsDedicatedVantagePointCollectionItem {
        /**
         * The APM domain ID the request is intended for.
         */
        apmDomainId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only the resources that match the entire display name.
         */
        displayName: string;
        /**
         * Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
         */
        dvpStackDetails: outputs.ApmSynthetics.GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail[];
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated vantage point.
         */
        id: string;
        /**
         * Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
         */
        monitorStatusCountMaps: outputs.ApmSynthetics.GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap[];
        /**
         * A filter to return only the resources that match the entire name.
         */
        name: string;
        /**
         * Name of the region.
         */
        region: string;
        /**
         * A filter to return only the dedicated vantage points that match a given status.
         */
        status: string;
        /**
         * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
         */
        timeCreated: string;
        /**
         * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
         */
        timeUpdated: string;
    }

    export interface GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail {
        /**
         * Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
         */
        dvpStackId: string;
        /**
         * Type of stack.
         */
        dvpStackType: string;
        /**
         * Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
         */
        dvpStreamId: string;
        /**
         * Version of the dedicated vantage point.
         */
        dvpVersion: string;
    }

    export interface GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap {
        /**
         * Number of disabled monitors using the script.
         */
        disabled: number;
        /**
         * Number of enabled monitors using the script.
         */
        enabled: number;
        /**
         * Number of invalid monitors using the script.
         */
        invalid: number;
        /**
         * Total number of monitors using the script.
         */
        total: number;
    }

    export interface GetDedicatedVantagePointsFilter {
        /**
         * A filter to return only the resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMonitorConfiguration {
        /**
         * Type of configuration.
         */
        configType: string;
        /**
         * Dns settings.
         */
        dnsConfigurations: outputs.ApmSynthetics.GetMonitorConfigurationDnsConfiguration[];
        /**
         * If certificate validation is enabled, then the call will fail in case of certification errors.
         */
        isCertificateValidationEnabled: boolean;
        /**
         * If isFailureRetried is enabled, then a failed call will be retried.
         */
        isFailureRetried: boolean;
        /**
         * If redirection enabled, then redirects will be allowed while accessing target URL.
         */
        isRedirectionEnabled: boolean;
        /**
         * Details of the network configuration.
         */
        networkConfigurations: outputs.ApmSynthetics.GetMonitorConfigurationNetworkConfiguration[];
        /**
         * Details for request HTTP authentication.
         */
        reqAuthenticationDetails: outputs.ApmSynthetics.GetMonitorConfigurationReqAuthenticationDetail[];
        /**
         * Request http authentication scheme.
         */
        reqAuthenticationScheme: string;
        /**
         * List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
         */
        requestHeaders: outputs.ApmSynthetics.GetMonitorConfigurationRequestHeader[];
        /**
         * Request HTTP method.
         */
        requestMethod: string;
        /**
         * Request post body content.
         */
        requestPostBody: string;
        /**
         * List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
         */
        requestQueryParams: outputs.ApmSynthetics.GetMonitorConfigurationRequestQueryParam[];
        /**
         * Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
         */
        verifyResponseCodes: string[];
        /**
         * Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
         */
        verifyResponseContent: string;
        /**
         * Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
         */
        verifyTexts: outputs.ApmSynthetics.GetMonitorConfigurationVerifyText[];
    }

    export interface GetMonitorConfigurationDnsConfiguration {
        /**
         * If isOverrideDns is true, then dns will be overridden.
         */
        isOverrideDns: boolean;
        /**
         * Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
         */
        overrideDnsIp: string;
    }

    export interface GetMonitorConfigurationNetworkConfiguration {
        /**
         * Number of hops.
         */
        numberOfHops: number;
        /**
         * Type of probe mode when TCP protocol is selected.
         */
        probeMode: string;
        /**
         * Number of probes per hop.
         */
        probePerHop: number;
        /**
         * Type of protocol.
         */
        protocol: string;
        /**
         * Number of probe packets sent out simultaneously.
         */
        transmissionRate: number;
    }

    export interface GetMonitorConfigurationReqAuthenticationDetail {
        /**
         * List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
         */
        authHeaders: outputs.ApmSynthetics.GetMonitorConfigurationReqAuthenticationDetailAuthHeader[];
        /**
         * Request method.
         */
        authRequestMethod: string;
        /**
         * Request post body.
         */
        authRequestPostBody: string;
        /**
         * Authentication token.
         */
        authToken: string;
        /**
         * URL to get authetication token.
         */
        authUrl: string;
        /**
         * Username for authentication.
         */
        authUserName: string;
        /**
         * User password for authentication.
         */
        authUserPassword: string;
        /**
         * Request http oauth scheme.
         */
        oauthScheme: string;
    }

    export interface GetMonitorConfigurationReqAuthenticationDetailAuthHeader {
        /**
         * Name of the header.
         */
        headerName: string;
        /**
         * Value of the header.
         */
        headerValue: string;
    }

    export interface GetMonitorConfigurationRequestHeader {
        /**
         * Name of the header.
         */
        headerName: string;
        /**
         * Value of the header.
         */
        headerValue: string;
    }

    export interface GetMonitorConfigurationRequestQueryParam {
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
    }

    export interface GetMonitorConfigurationVerifyText {
        /**
         * Verification text in the response.
         */
        text: string;
    }

    export interface GetMonitorScriptParameter {
        /**
         * If parameter value is default or overwritten.
         */
        isOverwritten: boolean;
        /**
         * Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
         */
        isSecret: boolean;
        /**
         * Details of the script parameter that can be used to overwrite the parameter present in the script.
         */
        monitorScriptParameters: outputs.ApmSynthetics.GetMonitorScriptParameterMonitorScriptParameter[];
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
    }

    export interface GetMonitorScriptParameterMonitorScriptParameter {
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
    }

    export interface GetMonitorsFilter {
        /**
         * Name of the vantage point.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMonitorsMonitorCollection {
        items: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItem[];
    }

    export interface GetMonitorsMonitorCollectionItem {
        /**
         * The APM domain ID the request is intended for.
         */
        apmDomainId: string;
        /**
         * Time interval between 2 runs in round robin batch mode (*SchedulingPolicy - BATCHED_ROUND_ROBIN).
         */
        batchIntervalInSeconds: number;
        /**
         * Details of monitor configuration.
         */
        configurations: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemConfiguration[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only the resources that match the entire display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
         */
        id: string;
        /**
         * If isRunNow is enabled, then the monitor will run now.
         */
        isRunNow: boolean;
        /**
         * If runOnce is enabled, then the monitor will run once.
         */
        isRunOnce: boolean;
        /**
         * A filter to return only monitors that match the given monitor type. Supported values are SCRIPTED_BROWSER, BROWSER, SCRIPTED_REST and REST.
         */
        monitorType: string;
        /**
         * Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
         */
        repeatIntervalInSeconds: number;
        /**
         * Scheduling policy on Vantage points.
         */
        schedulingPolicy: string;
        /**
         * A filter to return only monitors using scriptId.
         */
        scriptId: string;
        /**
         * Name of the script.
         */
        scriptName: string;
        /**
         * List of script parameters. Example: `[{"monitorScriptParameter": {"paramName": "userid", "paramValue":"testuser"}, "isSecret": false, "isOverwritten": false}]`
         */
        scriptParameters: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemScriptParameter[];
        /**
         * A filter to return only monitors that match the status given.
         */
        status: string;
        /**
         * Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
         */
        target: string;
        /**
         * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
         */
        timeCreated: string;
        /**
         * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
         */
        timeUpdated: string;
        /**
         * Timeout in seconds. Timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
         */
        timeoutInSeconds: number;
        /**
         * Number of vantage points where monitor is running.
         */
        vantagePointCount: number;
        /**
         * List of public and dedicated vantage points where the monitor is running.
         */
        vantagePoints: string[];
    }

    export interface GetMonitorsMonitorCollectionItemConfiguration {
        /**
         * Type of configuration.
         */
        configType: string;
        /**
         * Dns settings.
         */
        dnsConfigurations: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration[];
        /**
         * If certificate validation is enabled, then the call will fail in case of certification errors.
         */
        isCertificateValidationEnabled: boolean;
        /**
         * If isFailureRetried is enabled, then a failed call will be retried.
         */
        isFailureRetried: boolean;
        /**
         * If redirection enabled, then redirects will be allowed while accessing target URL.
         */
        isRedirectionEnabled: boolean;
        /**
         * Details of the network configuration.
         */
        networkConfigurations: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration[];
        /**
         * Details for request HTTP authentication.
         */
        reqAuthenticationDetails: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail[];
        /**
         * Request http authentication scheme.
         */
        reqAuthenticationScheme: string;
        /**
         * List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
         */
        requestHeaders: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemConfigurationRequestHeader[];
        /**
         * Request HTTP method.
         */
        requestMethod: string;
        /**
         * Request post body content.
         */
        requestPostBody: string;
        /**
         * List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
         */
        requestQueryParams: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam[];
        /**
         * Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
         */
        verifyResponseCodes: string[];
        /**
         * Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
         */
        verifyResponseContent: string;
        /**
         * Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
         */
        verifyTexts: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemConfigurationVerifyText[];
    }

    export interface GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration {
        /**
         * If isOverrideDns is true, then dns will be overridden.
         */
        isOverrideDns: boolean;
        /**
         * Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
         */
        overrideDnsIp: string;
    }

    export interface GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration {
        /**
         * Number of hops.
         */
        numberOfHops: number;
        /**
         * Type of probe mode when TCP protocol is selected.
         */
        probeMode: string;
        /**
         * Number of probes per hop.
         */
        probePerHop: number;
        /**
         * Type of protocol.
         */
        protocol: string;
        /**
         * Number of probe packets sent out simultaneously.
         */
        transmissionRate: number;
    }

    export interface GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail {
        /**
         * List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
         */
        authHeaders: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader[];
        /**
         * Request method.
         */
        authRequestMethod: string;
        /**
         * Request post body.
         */
        authRequestPostBody: string;
        /**
         * Authentication token.
         */
        authToken: string;
        /**
         * URL to get authetication token.
         */
        authUrl: string;
        /**
         * Username for authentication.
         */
        authUserName: string;
        /**
         * User password for authentication.
         */
        authUserPassword: string;
        /**
         * Request http oauth scheme.
         */
        oauthScheme: string;
    }

    export interface GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader {
        /**
         * Name of the header.
         */
        headerName: string;
        /**
         * Value of the header.
         */
        headerValue: string;
    }

    export interface GetMonitorsMonitorCollectionItemConfigurationRequestHeader {
        /**
         * Name of the header.
         */
        headerName: string;
        /**
         * Value of the header.
         */
        headerValue: string;
    }

    export interface GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam {
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
    }

    export interface GetMonitorsMonitorCollectionItemConfigurationVerifyText {
        /**
         * Verification text in the response.
         */
        text: string;
    }

    export interface GetMonitorsMonitorCollectionItemScriptParameter {
        /**
         * If parameter value is default or overwritten.
         */
        isOverwritten: boolean;
        /**
         * Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
         */
        isSecret: boolean;
        /**
         * Details of the script parameter that can be used to overwrite the parameter present in the script.
         */
        monitorScriptParameters: outputs.ApmSynthetics.GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter[];
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
    }

    export interface GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter {
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
    }

    export interface GetResultResultDataSet {
        /**
         * Data content in byte format. Example: Zip or Screenshot.
         */
        byteContent: string;
        /**
         * Name of the data.
         */
        name: string;
        /**
         * Data content in string format. Example: HAR.
         */
        stringContent: string;
        /**
         * The time when the data was generated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
         */
        timestamp: string;
    }

    export interface GetScriptMonitorStatusCountMap {
        /**
         * Number of disabled monitors using the script.
         */
        disabled: number;
        /**
         * Number of enabled monitors using the script.
         */
        enabled: number;
        /**
         * Number of invalid monitors using the script.
         */
        invalid: number;
        /**
         * Total number of monitors using the script.
         */
        total: number;
    }

    export interface GetScriptParameter {
        /**
         * If parameter value is default or overwritten.
         */
        isOverwritten: boolean;
        /**
         * If the parameter value is secret and should be kept confidential, then set isSecret to true.
         */
        isSecret: boolean;
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
        /**
         * Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
         */
        scriptParameters: outputs.ApmSynthetics.GetScriptParameterScriptParameter[];
    }

    export interface GetScriptParameterScriptParameter {
        /**
         * If the parameter value is secret and should be kept confidential, then set isSecret to true.
         */
        isSecret: boolean;
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
    }

    export interface GetScriptsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetScriptsScriptCollection {
        items: outputs.ApmSynthetics.GetScriptsScriptCollectionItem[];
    }

    export interface GetScriptsScriptCollectionItem {
        /**
         * The APM domain ID the request is intended for.
         */
        apmDomainId: string;
        /**
         * The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `<ORAP><ON>param name</ON><OV>param value</OV><OS>isParamValueSecret(true/false)</OS></ORAP>`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `<ORAP><ON>param name</ON></ORAP>` With parameter name and value : `<ORAP><ON>param name</ON><OV>param value</OV></ORAP>` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
         */
        content: string;
        /**
         * File name of the uploaded script content.
         */
        contentFileName: string;
        /**
         * Size of the script content.
         */
        contentSizeInBytes: number;
        /**
         * A filter to return only resources that match the content type given.
         */
        contentType: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only the resources that match the entire display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
         */
        id: string;
        /**
         * Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
         */
        monitorStatusCountMaps: outputs.ApmSynthetics.GetScriptsScriptCollectionItemMonitorStatusCountMap[];
        /**
         * List of script parameters. Example: `[{"scriptParameter": {"paramName": "userid", "paramValue":"testuser", "isSecret": false}, "isOverwritten": false}]`
         */
        parameters: outputs.ApmSynthetics.GetScriptsScriptCollectionItemParameter[];
        /**
         * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
         */
        timeCreated: string;
        /**
         * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
         */
        timeUpdated: string;
        /**
         * The time the script was uploaded.
         */
        timeUploaded: string;
    }

    export interface GetScriptsScriptCollectionItemMonitorStatusCountMap {
        /**
         * Number of disabled monitors using the script.
         */
        disabled: number;
        /**
         * Number of enabled monitors using the script.
         */
        enabled: number;
        /**
         * Number of invalid monitors using the script.
         */
        invalid: number;
        /**
         * Total number of monitors using the script.
         */
        total: number;
    }

    export interface GetScriptsScriptCollectionItemParameter {
        /**
         * If parameter value is default or overwritten.
         */
        isOverwritten: boolean;
        /**
         * If the parameter value is secret and should be kept confidential, then set isSecret to true.
         */
        isSecret: boolean;
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
        /**
         * Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
         */
        scriptParameters: outputs.ApmSynthetics.GetScriptsScriptCollectionItemParameterScriptParameter[];
    }

    export interface GetScriptsScriptCollectionItemParameterScriptParameter {
        /**
         * If the parameter value is secret and should be kept confidential, then set isSecret to true.
         */
        isSecret: boolean;
        /**
         * Name of the parameter.
         */
        paramName: string;
        /**
         * Value of the parameter.
         */
        paramValue: string;
    }

    export interface GetVantagePointItem {
        /**
         * A filter to return only the resources that match the entire display name.
         */
        displayName: string;
        /**
         * Geographic summary of a vantage point.
         */
        geos: outputs.ApmSynthetics.GetVantagePointItemGeo[];
        /**
         * A filter to return only the resources that match the entire name.
         */
        name: string;
    }

    export interface GetVantagePointItemGeo {
        /**
         * The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
         */
        adminDivCode: string;
        /**
         * Common English-language name for the city.
         */
        cityName: string;
        /**
         * The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
         */
        countryCode: string;
        /**
         * The common English-language name for the country.
         */
        countryName: string;
        /**
         * Degrees north of the Equator.
         */
        latitude: number;
        /**
         * Degrees east of the prime meridian.
         */
        longitude: number;
    }

    export interface GetVantagePointsFilter {
        /**
         * A filter to return only the resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVantagePointsPublicVantagePointCollection {
        /**
         * List of PublicVantagePointSummary items.
         */
        items: outputs.ApmSynthetics.GetVantagePointsPublicVantagePointCollectionItem[];
    }

    export interface GetVantagePointsPublicVantagePointCollectionItem {
        /**
         * A filter to return only the resources that match the entire display name.
         */
        displayName: string;
        /**
         * Geographic summary of a vantage point.
         */
        geos: outputs.ApmSynthetics.GetVantagePointsPublicVantagePointCollectionItemGeo[];
        /**
         * A filter to return only the resources that match the entire name.
         */
        name: string;
    }

    export interface GetVantagePointsPublicVantagePointCollectionItemGeo {
        /**
         * The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
         */
        adminDivCode: string;
        /**
         * Common English-language name for the city.
         */
        cityName: string;
        /**
         * The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
         */
        countryCode: string;
        /**
         * The common English-language name for the country.
         */
        countryName: string;
        /**
         * Degrees north of the Equator.
         */
        latitude: number;
        /**
         * Degrees east of the prime meridian.
         */
        longitude: number;
    }

    export interface ScriptMonitorStatusCountMap {
        /**
         * Number of disabled monitors using the script.
         */
        disabled: number;
        /**
         * Number of enabled monitors using the script.
         */
        enabled: number;
        /**
         * Number of invalid monitors using the script.
         */
        invalid: number;
        /**
         * Total number of monitors using the script.
         */
        total: number;
    }

    export interface ScriptParameter {
        /**
         * If parameter value is default or overwritten.
         */
        isOverwritten: boolean;
        /**
         * (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
         */
        isSecret: boolean;
        /**
         * (Updatable) Name of the parameter.
         */
        paramName: string;
        /**
         * (Updatable) Value of the parameter.
         */
        paramValue: string;
        /**
         * Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
         */
        scriptParameters: outputs.ApmSynthetics.ScriptParameterScriptParameter[];
    }

    export interface ScriptParameterScriptParameter {
        /**
         * (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
         */
        isSecret: boolean;
        /**
         * (Updatable) Name of the parameter.
         */
        paramName: string;
        /**
         * (Updatable) Value of the parameter.
         */
        paramValue: string;
    }
}

export namespace ApmTraces {
    export interface GetQueryQuickPicksFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetQueryQuickPicksQuickPick {
        /**
         * Quick Pick name for the query.
         */
        quickPickName: string;
        /**
         * Query for the Quick Pick.
         */
        quickPickQuery: string;
    }

    export interface GetTraceAggregatedSnapshotDataDetail {
        /**
         * Name of the property.
         */
        key: string;
        /**
         * Value of the property.
         */
        value: string;
    }

    export interface GetTraceServiceSummary {
        /**
         * Number of spans with errors for serviceName in the trace.
         */
        errorSpans: string;
        /**
         * Name associated with the service.
         */
        spanServiceName: string;
        /**
         * Number of spans for serviceName in the trace.
         */
        totalSpans: string;
    }

    export interface GetTraceSnapshotDataTraceSnapshotDetail {
        /**
         * Name of the property.
         */
        key: string;
        /**
         * Value of the property.
         */
        value: string;
    }

    export interface GetTraceSpan {
        /**
         * Total span duration in milliseconds.
         */
        durationInMs: string;
        /**
         * Indicates if the span has an error.
         */
        isError: boolean;
        /**
         * Unique identifier (spanId) for the span.  Note that this field is defined as spanKey in the API and it maps to the spanId in the trace data in Application Performance Monitoring.
         */
        key: string;
        /**
         * Kind associated with the span.
         */
        kind: string;
        /**
         * List of logs associated with the span.
         */
        logs: outputs.ApmTraces.GetTraceSpanLog[];
        /**
         * Span name associated with the trace.  This is usually the method or URI of the request.
         */
        operationName: string;
        /**
         * Unique parent identifier for the span if one exists. For root spans this will be null.
         */
        parentSpanKey: string;
        /**
         * Service name associated with the span.
         */
        serviceName: string;
        /**
         * List of tags associated with the span.
         */
        tags: outputs.ApmTraces.GetTraceSpanTag[];
        /**
         * Span end time.  Timestamp when the span was completed.
         */
        timeEnded: string;
        /**
         * Span start time.  Timestamp when the span was started.
         */
        timeStarted: string;
        /**
         * Unique Application Performance Monitoring trace identifier (traceId).
         */
        traceKey: string;
    }

    export interface GetTraceSpanLog {
        /**
         * List of logs associated with the span at the given timestamp.
         */
        spanLogs: outputs.ApmTraces.GetTraceSpanLogSpanLog[];
        /**
         * Timestamp at which the log is created.
         */
        timeCreated: string;
    }

    export interface GetTraceSpanLogSpanLog {
        /**
         * Key that specifies the log name.
         */
        logKey: string;
        /**
         * Value associated with the log key.
         */
        logValue: string;
    }

    export interface GetTraceSpanSummary {
        /**
         * The number of spans with errors that have been processed by the system for the trace. Note that the number of spans with errors will be less than or equal to the total number of spans in the trace.
         */
        errorSpanCount: number;
        /**
         * Boolean flag that indicates whether the trace has an error.
         */
        isFault: boolean;
        /**
         * Unique identifier (spanId) for the span.  Note that this field is defined as spanKey in the API and it maps to the spanId in the trace data in Application Performance Monitoring.
         */
        key: string;
        /**
         * Time taken for the root span operation to complete in milliseconds.
         */
        rootSpanDurationInMs: number;
        /**
         * Root span name associated with the trace. This is the flow start operation name. Null is displayed if the root span is not yet completed.
         */
        rootSpanOperationName: string;
        /**
         * Service associated with the trace.
         */
        rootSpanServiceName: string;
        /**
         * A summary of the spans by service.
         */
        serviceSummaries: outputs.ApmTraces.GetTraceSpanSummaryServiceSummary[];
        /**
         * The number of spans that have been processed by the system for the trace.  Note that there could be additional spans that have not been processed or reported yet if the trace is still in progress.
         */
        spanCount: number;
        /**
         * Start time of the earliest span in the span collection.
         */
        timeEarliestSpanStarted: string;
        /**
         * End time of the span that most recently ended in the span collection.
         */
        timeLatestSpanEnded: string;
        /**
         * End time of the root span for the span collection.
         */
        timeRootSpanEnded: string;
        /**
         * Start time of the root span for the span collection.
         */
        timeRootSpanStarted: string;
        /**
         * Time between the start of the earliest span and the end of the most recent span in milliseconds.
         */
        traceDurationInMs: number;
        /**
         * Error code of the trace.
         */
        traceErrorCode: string;
        /**
         * Error type of the trace.
         */
        traceErrorType: string;
        /**
         * The status of the trace. The trace statuses are defined as follows: complete - a root span has been recorded, but there is no information on the errors. success - a complete root span is recorded there is a successful error type and error code - HTTP 200. incomplete - the root span has not yet been received. error - the root span returned with an error. There may or may not be an associated error code or error type.
         */
        traceStatus: string;
    }

    export interface GetTraceSpanSummaryServiceSummary {
        /**
         * Number of spans with errors for serviceName in the trace.
         */
        errorSpans: string;
        /**
         * Name associated with the service.
         */
        spanServiceName: string;
        /**
         * Number of spans for serviceName in the trace.
         */
        totalSpans: string;
    }

    export interface GetTraceSpanTag {
        /**
         * Key that specifies the tag name.
         */
        tagName: string;
        /**
         * Value associated with the tag key.
         */
        tagValue: string;
    }

}

export namespace AppMgmtControl {
    export interface GetMonitoredInstancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMonitoredInstancesMonitoredInstanceCollection {
        items: outputs.AppMgmtControl.GetMonitoredInstancesMonitoredInstanceCollectionItem[];
    }

    export interface GetMonitoredInstancesMonitoredInstanceCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored instance.
         */
        instanceId: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Used to invoke manage operations on Management Agent Cloud Service.
         */
        managementAgentId: string;
        /**
         * Monitoring status. Can be either enabled or disabled.
         */
        monitoringState: string;
        /**
         * The current state of the monitored instance.
         */
        state: string;
        /**
         * The time the MonitoredInstance was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the MonitoredInstance was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

}

export namespace Artifacts {
    export interface ContainerRepositoryReadme {
        /**
         * (Updatable) Readme content. Avoid entering confidential information.
         */
        content: string;
        /**
         * (Updatable) Readme format. Supported formats are text/plain and text/markdown.
         */
        format: string;
    }

    export interface GetContainerImageLayer {
        /**
         * The sha256 digest of the image layer.
         */
        digest: string;
        /**
         * The size of the layer in bytes.
         */
        sizeInBytes: string;
        /**
         * The creation time of the version.
         */
        timeCreated: string;
    }

    export interface GetContainerImageVersion {
        /**
         * The OCID of the user or principal that pushed the version.
         */
        createdBy: string;
        /**
         * The creation time of the version.
         */
        timeCreated: string;
        /**
         * The version name.
         */
        version: string;
    }

    export interface GetContainerImagesContainerImageCollection {
        items: outputs.Artifacts.GetContainerImagesContainerImageCollectionItem[];
        remainingItemsCount: number;
    }

    export interface GetContainerImagesContainerImageCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The OCID of the user or principal that pushed the version.
         */
        createdBy: string;
        /**
         * The sha256 digest of the image layer.
         */
        digest: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
         */
        id: string;
        /**
         * Layers of which the image is composed, ordered by the layer digest.
         */
        layers: outputs.Artifacts.GetContainerImagesContainerImageCollectionItemLayer[];
        /**
         * The total size of the container image layers in bytes.
         */
        layersSizeInBytes: string;
        /**
         * The size of the container image manifest in bytes.
         */
        manifestSizeInBytes: number;
        /**
         * Total number of pulls.
         */
        pullCount: string;
        /**
         * A filter to return container images only for the specified container repository OCID.
         */
        repositoryId: string;
        /**
         * A filter to return container images or container image signatures that match the repository name.  Example: `foo` or `foo*`
         */
        repositoryName: string;
        /**
         * A filter to return only resources that match the given lifecycle state name exactly.
         */
        state: string;
        /**
         * The creation time of the version.
         */
        timeCreated: string;
        /**
         * An RFC 3339 timestamp indicating when the image was last pulled.
         */
        timeLastPulled: string;
        /**
         * A filter to return container images that match the version.  Example: `foo` or `foo*`
         */
        version: string;
        /**
         * The versions associated with this image.
         */
        versions: outputs.Artifacts.GetContainerImagesContainerImageCollectionItemVersion[];
    }

    export interface GetContainerImagesContainerImageCollectionItemLayer {
        /**
         * The sha256 digest of the image layer.
         */
        digest: string;
        /**
         * The size of the layer in bytes.
         */
        sizeInBytes: string;
        /**
         * The creation time of the version.
         */
        timeCreated: string;
    }

    export interface GetContainerImagesContainerImageCollectionItemVersion {
        /**
         * The OCID of the user or principal that pushed the version.
         */
        createdBy: string;
        /**
         * The creation time of the version.
         */
        timeCreated: string;
        /**
         * A filter to return container images that match the version.  Example: `foo` or `foo*`
         */
        version: string;
    }

    export interface GetContainerImagesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetContainerRepositoriesContainerRepositoryCollection {
        /**
         * Total number of images.
         */
        imageCount: number;
        items: outputs.Artifacts.GetContainerRepositoriesContainerRepositoryCollectionItem[];
        /**
         * Total number of layers.
         */
        layerCount: number;
        /**
         * Total storage in bytes consumed by layers.
         */
        layersSizeInBytes: string;
        remainingItemsCount: number;
        repositoryCount: number;
    }

    export interface GetContainerRepositoriesContainerRepositoryCollectionItem {
        /**
         * Total storage size in GBs that will be charged.
         */
        billableSizeInGbs: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The id of the user or principal that created the resource.
         */
        createdBy: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container repository.  Example: `ocid1.containerrepo.oc1..exampleuniqueID`
         */
        id: string;
        /**
         * Total number of images.
         */
        imageCount: number;
        /**
         * Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
         */
        isImmutable: boolean;
        /**
         * A filter to return resources that match the isPublic value.
         */
        isPublic: boolean;
        /**
         * Total number of layers.
         */
        layerCount: number;
        /**
         * Total storage in bytes consumed by layers.
         */
        layersSizeInBytes: string;
        /**
         * Container repository readme.
         */
        readmes: outputs.Artifacts.GetContainerRepositoriesContainerRepositoryCollectionItemReadme[];
        /**
         * A filter to return only resources that match the given lifecycle state name exactly.
         */
        state: string;
        /**
         * An RFC 3339 timestamp indicating when the repository was created.
         */
        timeCreated: string;
        /**
         * An RFC 3339 timestamp indicating when an image was last pushed to the repository.
         */
        timeLastPushed: string;
    }

    export interface GetContainerRepositoriesContainerRepositoryCollectionItemReadme {
        /**
         * Readme content. Avoid entering confidential information.
         */
        content: string;
        /**
         * Readme format. Supported formats are text/plain and text/markdown.
         */
        format: string;
    }

    export interface GetContainerRepositoriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetContainerRepositoryReadme {
        /**
         * Readme content. Avoid entering confidential information.
         */
        content: string;
        /**
         * Readme format. Supported formats are text/plain and text/markdown.
         */
        format: string;
    }

    export interface GetContainerSignaturesContainerImageSignatureCollection {
        items: outputs.Artifacts.GetContainerSignaturesContainerImageSignatureCollectionItem[];
        remainingItemsCount: number;
    }

    export interface GetContainerSignaturesContainerImageSignatureCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The id of the user or principal that created the resource.
         */
        createdBy: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image signature.  Example: `ocid1.containerimagesignature.oc1..exampleuniqueID`
         */
        id: string;
        /**
         * A filter to return a container image summary only for the specified container image OCID.
         */
        imageId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
         */
        kmsKeyId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
         */
        kmsKeyVersionId: string;
        /**
         * The base64 encoded signature payload that was signed.
         */
        message: string;
        /**
         * The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
         */
        signature: string;
        /**
         * The algorithm to be used for signing. These are the only supported signing algorithms for container images.
         */
        signingAlgorithm: string;
        /**
         * An RFC 3339 timestamp indicating when the image was created.
         */
        timeCreated: string;
    }

    export interface GetContainerSignaturesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetGenericArtifactsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetGenericArtifactsGenericArtifactCollection {
        items: outputs.Artifacts.GetGenericArtifactsGenericArtifactCollectionItem[];
    }

    export interface GetGenericArtifactsGenericArtifactCollectionItem {
        artifactId: string;
        /**
         * Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
         */
        artifactPath: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return the resources for the specified OCID.
         */
        id: string;
        /**
         * A filter to return the artifacts only for the specified repository OCID.
         */
        repositoryId: string;
        /**
         * Filter results by a specified SHA256 digest for the artifact.
         */
        sha256: string;
        /**
         * The size of the artifact in bytes.
         */
        sizeInBytes: string;
        /**
         * A filter to return only resources that match the given lifecycle state name exactly.
         */
        state: string;
        /**
         * An RFC 3339 timestamp indicating when the repository was created.
         */
        timeCreated: string;
        /**
         * Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
         */
        version: string;
    }

    export interface GetRepositoriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRepositoriesRepositoryCollection {
        items: outputs.Artifacts.GetRepositoriesRepositoryCollectionItem[];
    }

    export interface GetRepositoriesRepositoryCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The repository description.
         */
        description: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return the resources for the specified OCID.
         */
        id: string;
        /**
         * A filter to return resources that match the isImmutable value.
         */
        isImmutable: boolean;
        /**
         * The repository's supported artifact type.
         */
        repositoryType: string;
        /**
         * A filter to return only resources that match the given lifecycle state name exactly.
         */
        state: string;
        /**
         * An RFC 3339 timestamp indicating when the repository was created.
         */
        timeCreated: string;
    }

}

export namespace Audit {
    export interface GetEventsAuditEvent {
        /**
         * The version of the CloudEvents specification. The structure of the envelope follows the  [CloudEvents](https://github.com/cloudevents/spec) industry standard format hosted by the [Cloud Native Computing Foundation ( CNCF)](https://www.cncf.io/).
         */
        cloudEventsVersion: string;
        /**
         * The content type of the data contained in `data`.  Example: `application/json`
         */
        contentType: string;
        /**
         * The payload of the event. Information within `data` comes from the resource emitting the event.
         */
        datas: outputs.Audit.GetEventsAuditEventData[];
        /**
         * The GUID of the event.
         */
        eventId: string;
        /**
         * The time the event occurred, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.252Z`
         */
        eventTime: string;
        /**
         * The type of event that happened.
         */
        eventType: string;
        /**
         * The version of the event type. This version applies to the payload of the event, not the envelope. Use `cloudEventsVersion` to determine the version of the envelope.  Example: `2.0`
         */
        eventTypeVersion: string;
        /**
         * The source of the event.  Example: `ComputeApi`
         */
        source: string;
    }

    export interface GetEventsAuditEventData {
        /**
         * A container object for attribues unique to the resource emitting the event.
         */
        additionalDetails: {[key: string]: any};
        /**
         * The availability domain where the resource resides.
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The name of the compartment. This value is the friendly name associated with compartmentId. This value can change, but the service logs the value that appeared at the time of the audit event.  Example: `CompartmentA`
         */
        compartmentName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * This value links multiple audit events that are part of the same API operation. For example,  a long running API operations that emit an event at the start and the end of an operation would use the same value in this field for both events.
         */
        eventGroupingId: string;
        /**
         * Name of the API operation that generated this event.  Example: `GetInstance`
         */
        eventName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name,  type, or namespace. Exists for cross-compatibility only. For more information,  see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A container object for identity attributes.
         */
        identities: outputs.Audit.GetEventsAuditEventDataIdentity[];
        /**
         * A container object for request attributes.
         */
        requests: outputs.Audit.GetEventsAuditEventDataRequest[];
        /**
         * An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) or some other ID for the resource emitting the event.
         */
        resourceId: string;
        /**
         * The name of the resource emitting the event.
         */
        resourceName: string;
        /**
         * A container object for response attributes.
         */
        responses: outputs.Audit.GetEventsAuditEventDataResponse[];
        /**
         * A container object for state change attributes.
         */
        stateChanges: outputs.Audit.GetEventsAuditEventDataStateChange[];
    }

    export interface GetEventsAuditEventDataIdentity {
        /**
         * The type of authentication used.  Example: `natv`
         */
        authType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the caller. The caller that made a  request on behalf of the prinicpal.
         */
        callerId: string;
        /**
         * The name of the user or service. This value is the friendly name associated with `callerId`.
         */
        callerName: string;
        /**
         * This value identifies any Console session associated with this request.
         */
        consoleSessionId: string;
        /**
         * The credential ID of the user. This value is extracted from the HTTP 'Authorization' request header. It consists of the tenantId, userId, and user fingerprint, all delimited by a slash (/).
         */
        credentials: string;
        /**
         * The IP address of the source of the request.  Example: `172.24.80.88`
         */
        ipAddress: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
         */
        principalId: string;
        /**
         * The name of the user or service. This value is the friendly name associated with `principalId`.  Example: `ExampleName`
         */
        principalName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenant.
         */
        tenantId: string;
        /**
         * The user agent of the client that made the request.  Example: `Jersey/2.23 (HttpUrlConnection 1.8.0_212)`
         */
        userAgent: string;
    }

    export interface GetEventsAuditEventDataRequest {
        /**
         * The HTTP method of the request.  Example: `GET`
         */
        action: string;
        /**
         * The headers of the response.
         */
        headers: {[key: string]: any};
        /**
         * The opc-request-id of the request.
         */
        id: string;
        /**
         * The parameters supplied by the caller during this operation.
         */
        parameters: {[key: string]: any};
        /**
         * The full path of the API request.  Example: `/20160918/instances/ocid1.instance.oc1.phx.<unique_ID>`
         */
        path: string;
    }

    export interface GetEventsAuditEventDataResponse {
        /**
         * The headers of the response.
         */
        headers: {[key: string]: any};
        /**
         * A friendly description of what happened during the operation. Use this for troubleshooting.
         */
        message: string;
        /**
         * This value is included for backward compatibility with the Audit version 1 schema, where  it contained metadata of interest from the response payload.
         */
        payload: {[key: string]: any};
        /**
         * The time of the response to the audited request, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.278Z`
         */
        responseTime: string;
        /**
         * The status code of the response.  Example: `200`
         */
        status: string;
    }

    export interface GetEventsAuditEventDataStateChange {
        /**
         * Provides the current state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `previous`.
         */
        current: {[key: string]: any};
        /**
         * Provides the previous state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `current`.
         */
        previous: {[key: string]: any};
    }

    export interface GetEventsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace Autoscaling {
    export interface AutoScalingConfigurationAutoScalingResources {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource that is managed by the autoscaling configuration.
         */
        id: string;
        /**
         * The type of action to take.
         */
        type: string;
    }

    export interface AutoScalingConfigurationPolicy {
        /**
         * The capacity requirements of the autoscaling policy.
         */
        capacity: outputs.Autoscaling.AutoScalingConfigurationPolicyCapacity;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * An execution schedule for an autoscaling policy.
         */
        executionSchedule: outputs.Autoscaling.AutoScalingConfigurationPolicyExecutionSchedule;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource that is managed by the autoscaling configuration.
         */
        id: string;
        /**
         * Whether the autoscaling policy is enabled.
         */
        isEnabled: boolean;
        /**
         * The type of autoscaling policy.
         */
        policyType: string;
        /**
         * An action that can be executed against a resource.
         */
        resourceAction: outputs.Autoscaling.AutoScalingConfigurationPolicyResourceAction;
        rules: outputs.Autoscaling.AutoScalingConfigurationPolicyRule[];
        /**
         * The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface AutoScalingConfigurationPolicyCapacity {
        /**
         * For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
         */
        initial: number;
        /**
         * For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
         */
        max: number;
        /**
         * For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
         */
        min: number;
    }

    export interface AutoScalingConfigurationPolicyExecutionSchedule {
        /**
         * A cron expression that represents the time at which to execute the autoscaling policy.
         */
        expression: string;
        /**
         * The time zone for the execution schedule.
         */
        timezone: string;
        /**
         * The type of action to take.
         */
        type: string;
    }

    export interface AutoScalingConfigurationPolicyResourceAction {
        /**
         * The action to take when autoscaling is triggered.
         */
        action: string;
        /**
         * The type of resource action.
         */
        actionType: string;
    }

    export interface AutoScalingConfigurationPolicyRule {
        /**
         * The action to take when autoscaling is triggered.
         */
        action: outputs.Autoscaling.AutoScalingConfigurationPolicyRuleAction;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource that is managed by the autoscaling configuration.
         */
        id: string;
        /**
         * Metric and threshold details for triggering an autoscaling action.
         */
        metric: outputs.Autoscaling.AutoScalingConfigurationPolicyRuleMetric;
    }

    export interface AutoScalingConfigurationPolicyRuleAction {
        /**
         * The type of action to take.
         */
        type: string;
        value: number;
    }

    export interface AutoScalingConfigurationPolicyRuleMetric {
        metricType: string;
        threshold: outputs.Autoscaling.AutoScalingConfigurationPolicyRuleMetricThreshold;
    }

    export interface AutoScalingConfigurationPolicyRuleMetricThreshold {
        /**
         * The comparison operator to use. Options are greater than (`GT`), greater than or equal to (`GTE`), less than (`LT`), and less than or equal to (`LTE`).
         */
        operator: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationAutoScalingResource {
        /**
         * ID of the condition that is assigned after creation.
         */
        id: string;
        /**
         * The type of action to take.
         */
        type: string;
    }

    export interface GetAutoScalingConfigurationPolicy {
        /**
         * The capacity requirements of the autoscaling policy.
         */
        capacities: outputs.Autoscaling.GetAutoScalingConfigurationPolicyCapacity[];
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The schedule for executing the autoscaling policy.
         */
        executionSchedules: outputs.Autoscaling.GetAutoScalingConfigurationPolicyExecutionSchedule[];
        /**
         * ID of the condition that is assigned after creation.
         */
        id: string;
        /**
         * Whether the autoscaling policy is enabled.
         */
        isEnabled: boolean;
        /**
         * The type of autoscaling policy.
         */
        policyType: string;
        /**
         * An action that can be executed against a resource.
         */
        resourceActions: outputs.Autoscaling.GetAutoScalingConfigurationPolicyResourceAction[];
        rules: outputs.Autoscaling.GetAutoScalingConfigurationPolicyRule[];
        /**
         * The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetAutoScalingConfigurationPolicyCapacity {
        /**
         * For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
         */
        initial: number;
        /**
         * For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
         */
        max: number;
        /**
         * For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
         */
        min: number;
    }

    export interface GetAutoScalingConfigurationPolicyExecutionSchedule {
        /**
         * A cron expression that represents the time at which to execute the autoscaling policy.
         */
        expression: string;
        /**
         * The time zone for the execution schedule.
         */
        timezone: string;
        /**
         * The type of action to take.
         */
        type: string;
    }

    export interface GetAutoScalingConfigurationPolicyResourceAction {
        /**
         * The action to take when autoscaling is triggered.
         */
        action: string;
        /**
         * The type of resource action.
         */
        actionType: string;
    }

    export interface GetAutoScalingConfigurationPolicyRule {
        /**
         * The action to take when autoscaling is triggered.
         */
        actions: outputs.Autoscaling.GetAutoScalingConfigurationPolicyRuleAction[];
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * ID of the condition that is assigned after creation.
         */
        id: string;
        /**
         * Metric and threshold details for triggering an autoscaling action.
         */
        metrics: outputs.Autoscaling.GetAutoScalingConfigurationPolicyRuleMetric[];
    }

    export interface GetAutoScalingConfigurationPolicyRuleAction {
        /**
         * The type of action to take.
         */
        type: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationPolicyRuleMetric {
        metricType: string;
        thresholds: outputs.Autoscaling.GetAutoScalingConfigurationPolicyRuleMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationPolicyRuleMetricThreshold {
        /**
         * The comparison operator to use. Options are greater than (`GT`), greater than or equal to (`GTE`), less than (`LT`), and less than or equal to (`LTE`).
         */
        operator: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfiguration {
        /**
         * A resource that is managed by an autoscaling configuration. The only supported type is "instancePool."
         */
        autoScalingResources: outputs.Autoscaling.GetAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResource[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.
         */
        compartmentId: string;
        /**
         * For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
         */
        coolDownInSeconds: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * ID of the condition that is assigned after creation.
         */
        id: string;
        /**
         * Whether the autoscaling policy is enabled.
         */
        isEnabled: boolean;
        /**
         * The maximum number of resources to scale out to.
         */
        maxResourceCount: number;
        /**
         * The minimum number of resources to scale in to.
         */
        minResourceCount: number;
        /**
         * Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
         */
        policies: outputs.Autoscaling.GetAutoScalingConfigurationsAutoScalingConfigurationPolicy[];
        /**
         * The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResource {
        /**
         * ID of the condition that is assigned after creation.
         */
        id: string;
        /**
         * The type of action to take.
         */
        type: string;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicy {
        /**
         * The capacity requirements of the autoscaling policy.
         */
        capacities: outputs.Autoscaling.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity[];
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The schedule for executing the autoscaling policy.
         */
        executionSchedules: outputs.Autoscaling.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule[];
        /**
         * ID of the condition that is assigned after creation.
         */
        id: string;
        /**
         * Whether the autoscaling policy is enabled.
         */
        isEnabled: boolean;
        /**
         * The type of autoscaling policy.
         */
        policyType: string;
        /**
         * An action that can be executed against a resource.
         */
        resourceActions: outputs.Autoscaling.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction[];
        rules: outputs.Autoscaling.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule[];
        /**
         * The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity {
        /**
         * For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
         */
        initial: number;
        /**
         * For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
         */
        max: number;
        /**
         * For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
         */
        min: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule {
        /**
         * A cron expression that represents the time at which to execute the autoscaling policy.
         */
        expression: string;
        /**
         * The time zone for the execution schedule.
         */
        timezone: string;
        /**
         * The type of action to take.
         */
        type: string;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction {
        /**
         * The action to take when autoscaling is triggered.
         */
        action: string;
        /**
         * The type of resource action.
         */
        actionType: string;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule {
        /**
         * The action to take when autoscaling is triggered.
         */
        actions: outputs.Autoscaling.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleAction[];
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * ID of the condition that is assigned after creation.
         */
        id: string;
        /**
         * Metric and threshold details for triggering an autoscaling action.
         */
        metrics: outputs.Autoscaling.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetric[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleAction {
        /**
         * The type of action to take.
         */
        type: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetric {
        metricType: string;
        thresholds: outputs.Autoscaling.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetricThreshold {
        /**
         * The comparison operator to use. Options are greater than (`GT`), greater than or equal to (`GTE`), less than (`LT`), and less than or equal to (`LTE`).
         */
        operator: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace Bastion {
    export interface GetBastionsBastion {
        /**
         * The type of bastion.
         */
        bastionType: string;
        /**
         * A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
         */
        clientCidrBlockAllowLists: string[];
        /**
         * The unique identifier (OCID) of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The unique identifier (OCID) of the bastion, which can't be changed after creation.
         */
        id: string;
        /**
         * A message describing the current state in more detail.
         */
        lifecycleDetails: string;
        /**
         * The maximum amount of time that any session on the bastion can remain active.
         */
        maxSessionTtlInSeconds: number;
        /**
         * The maximum number of active sessions allowed on the bastion.
         */
        maxSessionsAllowed: number;
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
         */
        phoneBookEntry: string;
        /**
         * The private IP address of the created private endpoint.
         */
        privateEndpointIpAddress: string;
        /**
         * The current state of the bastion.
         */
        state: string;
        /**
         * A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
         */
        staticJumpHostIpAddresses: string[];
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The unique identifier (OCID) of the subnet that the bastion connects to.
         */
        targetSubnetId: string;
        /**
         * The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
         */
        targetVcnId: string;
        /**
         * The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         */
        timeUpdated: string;
    }

    export interface GetBastionsFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSessionKeyDetail {
        /**
         * The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
         */
        publicKeyContent: string;
    }

    export interface GetSessionTargetResourceDetail {
        /**
         * The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
         */
        sessionType: string;
        /**
         * The display name of the target Compute instance that the session connects to.
         */
        targetResourceDisplayName: string;
        /**
         * The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
         */
        targetResourceId: string;
        /**
         * The name of the user on the target resource operating system that the session uses for the connection.
         */
        targetResourceOperatingSystemUserName: string;
        /**
         * The port number to connect to on the target resource.
         */
        targetResourcePort: number;
        /**
         * The private IP address of the target resource that the session connects to.
         */
        targetResourcePrivateIpAddress: string;
    }

    export interface GetSessionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSessionsSession {
        /**
         * The unique identifier (OCID) of the bastion in which to list sessions.
         */
        bastionId: string;
        /**
         * The name of the bastion that is hosting this session.
         */
        bastionName: string;
        /**
         * The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
         */
        bastionPublicHostKeyInfo: string;
        /**
         * The username that the session uses to connect to the target resource.
         */
        bastionUserName: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * The unique identifier (OCID) of the session, which can't be changed after creation.
         */
        id: string;
        /**
         * Public key details for a bastion session.
         */
        keyDetails: outputs.Bastion.GetSessionsSessionKeyDetail[];
        /**
         * The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
         */
        keyType: string;
        /**
         * A message describing the current session state in more detail.
         */
        lifecycleDetails: string;
        /**
         * The amount of time the session can remain active.
         */
        sessionTtlInSeconds: number;
        /**
         * The connection message for the session.
         */
        sshMetadata: {[key: string]: any};
        /**
         * The current state of the session.
         */
        state: string;
        /**
         * Details about a bastion session's target resource.
         */
        targetResourceDetails: outputs.Bastion.GetSessionsSessionTargetResourceDetail[];
        /**
         * The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         */
        timeUpdated: string;
    }

    export interface GetSessionsSessionKeyDetail {
        /**
         * The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
         */
        publicKeyContent: string;
    }

    export interface GetSessionsSessionTargetResourceDetail {
        /**
         * The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
         */
        sessionType: string;
        /**
         * The display name of the target Compute instance that the session connects to.
         */
        targetResourceDisplayName: string;
        /**
         * The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
         */
        targetResourceId: string;
        /**
         * The name of the user on the target resource operating system that the session uses for the connection.
         */
        targetResourceOperatingSystemUserName: string;
        /**
         * The port number to connect to on the target resource.
         */
        targetResourcePort: number;
        /**
         * The private IP address of the target resource that the session connects to.
         */
        targetResourcePrivateIpAddress: string;
    }

    export interface SessionKeyDetails {
        /**
         * The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
         */
        publicKeyContent: string;
    }

    export interface SessionTargetResourceDetails {
        /**
         * The session type.
         */
        sessionType: string;
        /**
         * The display name of the target Compute instance that the session connects to.
         */
        targetResourceDisplayName: string;
        /**
         * The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to. It's optional depends on the type of session you want to create.
         * * (Required) For MANAGED_SSH session type, we can only use targetResourceId to create session.
         * * (Optional) For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
         */
        targetResourceId?: string;
        /**
         * The name of the user on the target resource operating system that the session uses for the connection.
         */
        targetResourceOperatingSystemUserName: string;
        /**
         * The port number to connect to on the target resource.
         */
        targetResourcePort: number;
        /**
         * The private IP address of the target resource that the session connects to. For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
         */
        targetResourcePrivateIpAddress: string;
    }

}

export namespace BigDataService {
    export interface AutoScalingConfigurationPolicy {
        /**
         * Type of autoscaling policy.
         */
        policyType: string;
        /**
         * (Updatable) The list of rules for autoscaling. If an action has multiple rules, the last rule in the array will be applied.
         */
        rules: outputs.BigDataService.AutoScalingConfigurationPolicyRule[];
    }

    export interface AutoScalingConfigurationPolicyDetails {
        /**
         * The type of autoscaling action to take.
         */
        actionType: string;
        /**
         * Type of autoscaling policy.
         */
        policyType: string;
        /**
         * (Updatable) Configration for a metric based vertical scale-down policy.
         */
        scaleDownConfig: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleDownConfig;
        /**
         * (Updatable) Configration for a metric based horizontal scale-in policy.
         */
        scaleInConfig: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleInConfig;
        /**
         * (Updatable) Configration for a metric based horizontal scale-out policy.
         */
        scaleOutConfig: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleOutConfig;
        /**
         * (Updatable) Configration for a metric based vertical scale-up policy.
         */
        scaleUpConfig: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleUpConfig;
        /**
         * (Updatable)
         */
        scheduleDetails: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScheduleDetail[];
        /**
         * (Updatable) The time zone of the execution schedule, in IANA time zone database name format
         */
        timezone: string;
        /**
         * The type of autoscaling trigger.
         */
        triggerType: string;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleDownConfig {
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the size of memory in GBs to add to each node during a scale-up event. This value is not used for nodes with fixed compute shapes.
         */
        memoryStepSize: number;
        /**
         * (Updatable) Metric and threshold details for triggering an autoscale action.
         */
        metric: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleDownConfigMetric;
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the minimum memory in GBs each node can be scaled-down to. This value is not used for nodes with fixed compute shapes.
         */
        minMemoryPerNode: number;
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the minimum number of OCPUs each node can be scaled-down to. This value is not used for nodes with fixed compute shapes.
         */
        minOcpusPerNode: number;
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the number of OCPUs to add to each node during a scale-up event. This value is not used for nodes with fixed compute shapes.
         */
        ocpuStepSize: number;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleDownConfigMetric {
        /**
         * (Updatable) Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * (Updatable) An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        threshold: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleDownConfigMetricThreshold;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleDownConfigMetricThreshold {
        /**
         * (Updatable) This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * (Updatable) Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleInConfig {
        /**
         * (Updatable) Metric and threshold details for triggering an autoscale action.
         */
        metric: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleInConfigMetric;
        /**
         * (Updatable) This value is the minimum number of nodes the cluster can be scaled-in to.
         */
        minNodeCount: number;
        /**
         * (Updatable) This value is the number of nodes to add during a scale-out event.
         */
        stepSize: number;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleInConfigMetric {
        /**
         * (Updatable) Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * (Updatable) An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        threshold: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThreshold;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThreshold {
        /**
         * (Updatable) This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * (Updatable) Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleOutConfig {
        /**
         * (Updatable) This value is the maximum number of nodes the cluster can be scaled-out to.
         */
        maxNodeCount: number;
        /**
         * (Updatable) Metric and threshold details for triggering an autoscale action.
         */
        metric: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleOutConfigMetric;
        /**
         * (Updatable) This value is the number of nodes to add during a scale-out event.
         */
        stepSize: number;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleOutConfigMetric {
        /**
         * (Updatable) Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * (Updatable) An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        threshold: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleOutConfigMetricThreshold;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleOutConfigMetricThreshold {
        /**
         * (Updatable) This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * (Updatable) Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleUpConfig {
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the maximum memory in GBs each node can be scaled-up to. This value is not used for nodes with fixed compute shapes.
         */
        maxMemoryPerNode: number;
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the maximum number of OCPUs each node can be scaled-up to. This value is not used for nodes with fixed compute shapes.
         */
        maxOcpusPerNode: number;
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the size of memory in GBs to add to each node during a scale-up event. This value is not used for nodes with fixed compute shapes.
         */
        memoryStepSize: number;
        /**
         * (Updatable) Metric and threshold details for triggering an autoscale action.
         */
        metric: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleUpConfigMetric;
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the number of OCPUs to add to each node during a scale-up event. This value is not used for nodes with fixed compute shapes.
         */
        ocpuStepSize: number;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleUpConfigMetric {
        /**
         * (Updatable) Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * (Updatable) An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        threshold: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScaleUpConfigMetricThreshold;
    }

    export interface AutoScalingConfigurationPolicyDetailsScaleUpConfigMetricThreshold {
        /**
         * (Updatable) This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * (Updatable) Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface AutoScalingConfigurationPolicyDetailsScheduleDetail {
        /**
         * (Updatable) The type of schedule.
         */
        scheduleType: string;
        /**
         * (Updatable)
         */
        timeAndHorizontalScalingConfigs: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScheduleDetailTimeAndHorizontalScalingConfig[];
        /**
         * (Updatable)
         */
        timeAndVerticalScalingConfigs: outputs.BigDataService.AutoScalingConfigurationPolicyDetailsScheduleDetailTimeAndVerticalScalingConfig[];
    }

    export interface AutoScalingConfigurationPolicyDetailsScheduleDetailTimeAndHorizontalScalingConfig {
        /**
         * (Updatable) This value is the desired number of nodes in the cluster.
         */
        targetNodeCount: number;
        /**
         * (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger autoscaling action. Currently only WEEKLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR and BYMINUTE fields. Other fields are not supported.
         */
        timeRecurrence: string;
    }

    export interface AutoScalingConfigurationPolicyDetailsScheduleDetailTimeAndVerticalScalingConfig {
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the desired memory in GBs on each node. This value is not used for nodes with fixed compute shapes.
         */
        targetMemoryPerNode: number;
        /**
         * (Updatable) For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the desired OCPUs count on each node. This value is not used for nodes with fixed compute shapes.
         */
        targetOcpusPerNode: number;
        /**
         * (Updatable) For nodes with [fixed compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the desired shape of each node. This value is not used for nodes with flexible compute shapes.
         */
        targetShape: string;
        /**
         * (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger autoscaling action. Currently only WEEKLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR and BYMINUTE fields. Other fields are not supported.
         */
        timeRecurrence: string;
    }

    export interface AutoScalingConfigurationPolicyRule {
        /**
         * (Updatable) The valid value are CHANGE_SHAPE_SCALE_UP or CHANGE_SHAPE_SCALE_DOWN.
         */
        action: string;
        /**
         * (Updatable) Metric and threshold details for triggering an autoscale action.
         */
        metric: outputs.BigDataService.AutoScalingConfigurationPolicyRuleMetric;
    }

    export interface AutoScalingConfigurationPolicyRuleMetric {
        /**
         * (Updatable) Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * (Updatable) An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        threshold: outputs.BigDataService.AutoScalingConfigurationPolicyRuleMetricThreshold;
    }

    export interface AutoScalingConfigurationPolicyRuleMetricThreshold {
        /**
         * (Updatable) This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * (Updatable) Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface BdsInstanceCloudSqlDetail {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * IP address of the node
         */
        ipAddress: string;
        /**
         * Boolean flag specifying whether or not are Kerberos principals mapped to database users.
         */
        isKerberosMappedToDatabaseUsers: boolean;
        /**
         * Details about Kerberos principals
         */
        kerberosDetails: outputs.BigDataService.BdsInstanceCloudSqlDetailKerberosDetail[];
        /**
         * Shape of the node
         */
        shape: string;
    }

    export interface BdsInstanceCloudSqlDetailKerberosDetail {
        /**
         * Location of the keytab file
         */
        keytabFile: string;
        /**
         * Name of the Kerberos principal
         */
        principalName: string;
    }

    export interface BdsInstanceClusterDetail {
        /**
         * The URL of Ambari
         */
        ambariUrl: string;
        /**
         * Cloud SQL cell version
         */
        bdCellVersion: string;
        /**
         * BDA version installed in the cluster
         */
        bdaVersion: string;
        /**
         * Big Data Manager version installed in the cluster
         */
        bdmVersion: string;
        /**
         * Big Data Service version installed in the cluster
         */
        bdsVersion: string;
        /**
         * The URL of a Big Data Manager
         */
        bigDataManagerUrl: string;
        /**
         * The URL of a Cloudera Manager
         */
        clouderaManagerUrl: string;
        /**
         * Big Data SQL version
         */
        csqlCellVersion: string;
        /**
         * Query Server Database version
         */
        dbVersion: string;
        /**
         * The URL of a Hue Server
         */
        hueServerUrl: string;
        /**
         * The URL of the Jupyterhub.
         */
        jupyterHubUrl: string;
        /**
         * Version of the ODH (Oracle Distribution including Apache Hadoop) installed on the cluster.
         */
        odhVersion: string;
        /**
         * Oracle Linux version installed in the cluster
         */
        osVersion: string;
        /**
         * The time the BDS instance was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the BDS instance was automatically, or manually refreshed. An RFC3339 formatted datetime string
         */
        timeRefreshed: string;
    }

    export interface BdsInstanceComputeOnlyWorkerNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The amount of worker nodes should be created
         */
        numberOfNodes: number;
        /**
         * Shape of the node
         */
        shape: string;
        /**
         * The shape configuration requested for the node.
         */
        shapeConfig?: outputs.BigDataService.BdsInstanceComputeOnlyWorkerNodeShapeConfig;
        /**
         * The OCID of the subnet in which the node should be created
         */
        subnetId: string;
    }

    export interface BdsInstanceComputeOnlyWorkerNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes
         */
        memoryInGbs?: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus?: number;
    }

    export interface BdsInstanceMasterNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The amount of worker nodes should be created
         */
        numberOfNodes: number;
        /**
         * Shape of the node
         */
        shape: string;
        /**
         * The shape configuration requested for the node.
         */
        shapeConfig?: outputs.BigDataService.BdsInstanceMasterNodeShapeConfig;
        /**
         * The OCID of the subnet in which the node should be created
         */
        subnetId: string;
    }

    export interface BdsInstanceMasterNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes
         */
        memoryInGbs?: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus?: number;
    }

    export interface BdsInstanceNetworkConfig {
        /**
         * The CIDR IP address block of the VCN.
         */
        cidrBlock: string;
        /**
         * A boolean flag whether to configure a NAT gateway.
         */
        isNatGatewayRequired: boolean;
    }

    export interface BdsInstanceNode {
        /**
         * The list of block volumes attached to a given node.
         */
        attachedBlockVolumes: outputs.BigDataService.BdsInstanceNodeAttachedBlockVolume[];
        /**
         * The name of the availability domain the node is running in
         */
        availabilityDomain: string;
        /**
         * (Updatable) Name of the BDS instance
         */
        displayName: string;
        /**
         * The name of the fault domain the node is running in
         */
        faultDomain: string;
        /**
         * The fully-qualified hostname (FQDN) of the node
         */
        hostname: string;
        /**
         * The OCID of the image from which the node was created
         */
        imageId: string;
        /**
         * The OCID of the underlying compute instance
         */
        instanceId: string;
        /**
         * IP address of the node
         */
        ipAddress: string;
        /**
         * The total amount of memory available to the node, in gigabytes
         */
        memoryInGbs: number;
        /**
         * BDS instance node type
         */
        nodeType: string;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
        /**
         * Shape of the node
         */
        shape: string;
        /**
         * The fingerprint of the SSH key used for node access
         */
        sshFingerprint: string;
        /**
         * The state of the BDS instance
         */
        state: string;
        /**
         * The OCID of the subnet in which the node should be created
         */
        subnetId: string;
        /**
         * The time the BDS instance was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
    }

    export interface BdsInstanceNodeAttachedBlockVolume {
        /**
         * The OCID of the volume attachment.
         */
        volumeAttachmentId: string;
        /**
         * The size of the volume in GBs.
         */
        volumeSizeInGbs: string;
    }

    export interface BdsInstanceUtilNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The amount of worker nodes should be created
         */
        numberOfNodes: number;
        /**
         * Shape of the node
         */
        shape: string;
        /**
         * The shape configuration requested for the node.
         */
        shapeConfig?: outputs.BigDataService.BdsInstanceUtilNodeShapeConfig;
        /**
         * The OCID of the subnet in which the node should be created
         */
        subnetId: string;
    }

    export interface BdsInstanceUtilNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes
         */
        memoryInGbs?: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus?: number;
    }

    export interface BdsInstanceWorkerNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The amount of worker nodes should be created
         */
        numberOfNodes: number;
        /**
         * Shape of the node
         */
        shape: string;
        /**
         * The shape configuration requested for the node.
         */
        shapeConfig?: outputs.BigDataService.BdsInstanceWorkerNodeShapeConfig;
        /**
         * The OCID of the subnet in which the node should be created
         */
        subnetId: string;
    }

    export interface BdsInstanceWorkerNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes
         */
        memoryInGbs?: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus?: number;
    }

    export interface GetAutoScalingConfigurationPolicy {
        /**
         * Type of autoscaling policy.
         */
        policyType: string;
        /**
         * The list of rules for autoscaling. If an action has multiple rules, the last rule in the array will be applied.
         */
        rules: outputs.BigDataService.GetAutoScalingConfigurationPolicyRule[];
    }

    export interface GetAutoScalingConfigurationPolicyDetail {
        /**
         * The type of autoscaling action to take.
         */
        actionType: string;
        /**
         * Type of autoscaling policy.
         */
        policyType: string;
        /**
         * Configration for a metric based vertical scale-down policy.
         */
        scaleDownConfigs: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleDownConfig[];
        /**
         * Configration for a metric based horizontal scale-in policy.
         */
        scaleInConfigs: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleInConfig[];
        /**
         * Configration for a metric based horizontal scale-out policy.
         */
        scaleOutConfigs: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleOutConfig[];
        /**
         * Configration for a metric based vertical scale-up policy.
         */
        scaleUpConfigs: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleUpConfig[];
        scheduleDetails: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScheduleDetail[];
        /**
         * The time zone of the execution schedule, in IANA time zone database name format
         */
        timezone: string;
        /**
         * The type of autoscaling trigger.
         */
        triggerType: string;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleDownConfig {
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the size of memory in GBs to add to each node during a scale-up event. This value is not used for nodes with fixed compute shapes.
         */
        memoryStepSize: number;
        /**
         * Metric and threshold details for triggering an autoscale action.
         */
        metrics: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleDownConfigMetric[];
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the minimum memory in GBs each node can be scaled-down to. This value is not used for nodes with fixed compute shapes.
         */
        minMemoryPerNode: number;
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the minimum number of OCPUs each node can be scaled-down to. This value is not used for nodes with fixed compute shapes.
         */
        minOcpusPerNode: number;
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the number of OCPUs to add to each node during a scale-up event. This value is not used for nodes with fixed compute shapes.
         */
        ocpuStepSize: number;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleDownConfigMetric {
        /**
         * Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleDownConfigMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleDownConfigMetricThreshold {
        /**
         * This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleInConfig {
        /**
         * Metric and threshold details for triggering an autoscale action.
         */
        metrics: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleInConfigMetric[];
        /**
         * This value is the minimum number of nodes the cluster can be scaled-in to.
         */
        minNodeCount: number;
        /**
         * This value is the number of nodes to add during a scale-out event.
         */
        stepSize: number;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleInConfigMetric {
        /**
         * Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleInConfigMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleInConfigMetricThreshold {
        /**
         * This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleOutConfig {
        /**
         * This value is the maximum number of nodes the cluster can be scaled-out to.
         */
        maxNodeCount: number;
        /**
         * Metric and threshold details for triggering an autoscale action.
         */
        metrics: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleOutConfigMetric[];
        /**
         * This value is the number of nodes to add during a scale-out event.
         */
        stepSize: number;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleOutConfigMetric {
        /**
         * Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleOutConfigMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleOutConfigMetricThreshold {
        /**
         * This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleUpConfig {
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the maximum memory in GBs each node can be scaled-up to. This value is not used for nodes with fixed compute shapes.
         */
        maxMemoryPerNode: number;
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the maximum number of OCPUs each node can be scaled-up to. This value is not used for nodes with fixed compute shapes.
         */
        maxOcpusPerNode: number;
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the size of memory in GBs to add to each node during a scale-up event. This value is not used for nodes with fixed compute shapes.
         */
        memoryStepSize: number;
        /**
         * Metric and threshold details for triggering an autoscale action.
         */
        metrics: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleUpConfigMetric[];
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the number of OCPUs to add to each node during a scale-up event. This value is not used for nodes with fixed compute shapes.
         */
        ocpuStepSize: number;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleUpConfigMetric {
        /**
         * Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScaleUpConfigMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationPolicyDetailScaleUpConfigMetricThreshold {
        /**
         * This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScheduleDetail {
        /**
         * The type of schedule.
         */
        scheduleType: string;
        timeAndHorizontalScalingConfigs: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig[];
        timeAndVerticalScalingConfigs: outputs.BigDataService.GetAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndVerticalScalingConfig[];
    }

    export interface GetAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig {
        /**
         * This value is the desired number of nodes in the cluster.
         */
        targetNodeCount: number;
        /**
         * Day/time recurrence (specified following RFC 5545) at which to trigger autoscaling action. Currently only WEEKLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR and BYMINUTE fields. Other fields are not supported.
         */
        timeRecurrence: string;
    }

    export interface GetAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndVerticalScalingConfig {
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the desired memory in GBs on each node. This value is not used for nodes with fixed compute shapes.
         */
        targetMemoryPerNode: number;
        /**
         * For nodes with [flexible compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the desired OCPUs count on each node. This value is not used for nodes with fixed compute shapes.
         */
        targetOcpusPerNode: number;
        /**
         * For nodes with [fixed compute shapes](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-plan-shape), this value is the desired shape of each node. This value is not used for nodes with flexible compute shapes.
         */
        targetShape: string;
        /**
         * Day/time recurrence (specified following RFC 5545) at which to trigger autoscaling action. Currently only WEEKLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR and BYMINUTE fields. Other fields are not supported.
         */
        timeRecurrence: string;
    }

    export interface GetAutoScalingConfigurationPolicyRule {
        /**
         * The valid value are CHANGE_SHAPE_SCALE_UP or CHANGE_SHAPE_SCALE_DOWN.
         */
        action: string;
        /**
         * Metric and threshold details for triggering an autoscale action.
         */
        metrics: outputs.BigDataService.GetAutoScalingConfigurationPolicyRuleMetric[];
    }

    export interface GetAutoScalingConfigurationPolicyRuleMetric {
        /**
         * Allowed value is CPU_UTILIZATION.
         */
        metricType: string;
        /**
         * An autoscale action is triggered when a performance metric exceeds a threshold.
         */
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationPolicyRuleMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationPolicyRuleMetricThreshold {
        /**
         * This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         */
        durationInMinutes: number;
        /**
         * The comparison operator to use. Options are greater than (GT) or less than (LT).
         */
        operator: string;
        /**
         * Integer non-negative value. 0 < value < 100
         */
        value: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfiguration {
        bdsInstanceId: string;
        clusterAdminPassword: string;
        displayName: string;
        id: string;
        isEnabled: boolean;
        nodeType: string;
        policies: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicy[];
        policyDetails: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetail[];
        state: string;
        timeCreated: string;
        timeUpdated: string;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicy {
        policyType: string;
        rules: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetail {
        actionType: string;
        policyType: string;
        scaleDownConfigs: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleDownConfig[];
        scaleInConfigs: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleInConfig[];
        scaleOutConfigs: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleOutConfig[];
        scaleUpConfigs: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleUpConfig[];
        scheduleDetails: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetail[];
        timezone: string;
        triggerType: string;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleDownConfig {
        memoryStepSize: number;
        metrics: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleDownConfigMetric[];
        minMemoryPerNode: number;
        minOcpusPerNode: number;
        ocpuStepSize: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleDownConfigMetric {
        metricType: string;
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleDownConfigMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleDownConfigMetricThreshold {
        durationInMinutes: number;
        operator: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleInConfig {
        metrics: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleInConfigMetric[];
        minNodeCount: number;
        stepSize: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleInConfigMetric {
        metricType: string;
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleInConfigMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleInConfigMetricThreshold {
        durationInMinutes: number;
        operator: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleOutConfig {
        maxNodeCount: number;
        metrics: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleOutConfigMetric[];
        stepSize: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleOutConfigMetric {
        metricType: string;
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleOutConfigMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleOutConfigMetricThreshold {
        durationInMinutes: number;
        operator: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleUpConfig {
        maxMemoryPerNode: number;
        maxOcpusPerNode: number;
        memoryStepSize: number;
        metrics: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleUpConfigMetric[];
        ocpuStepSize: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleUpConfigMetric {
        metricType: string;
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleUpConfigMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScaleUpConfigMetricThreshold {
        durationInMinutes: number;
        operator: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetail {
        scheduleType: string;
        timeAndHorizontalScalingConfigs: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig[];
        timeAndVerticalScalingConfigs: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndVerticalScalingConfig[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig {
        targetNodeCount: number;
        timeRecurrence: string;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndVerticalScalingConfig {
        targetMemoryPerNode: number;
        targetOcpusPerNode: number;
        targetShape: string;
        timeRecurrence: string;
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule {
        action: string;
        metrics: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetric[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetric {
        metricType: string;
        thresholds: outputs.BigDataService.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetricThreshold[];
    }

    export interface GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetricThreshold {
        durationInMinutes: number;
        operator: string;
        value: number;
    }

    export interface GetAutoScalingConfigurationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBdsInstanceApiKeysBdsApiKey {
        /**
         * The OCID of the cluster.
         */
        bdsInstanceId: string;
        /**
         * The name of the region to establish the Object Storage endpoint which was set as part of key creation operation. If no region was provided this will be set to be the same region where the cluster lives. Example us-phoenix-1 .
         */
        defaultRegion: string;
        /**
         * The fingerprint that corresponds to the public API key requested.
         */
        fingerprint: string;
        /**
         * Identifier of the user's API key.
         */
        id: string;
        /**
         * User friendly identifier used to uniquely differentiate between different API keys. Only ASCII alphanumeric characters with no spaces allowed.
         */
        keyAlias: string;
        passphrase: string;
        /**
         * The full path and file name of the private key used for authentication. This location will be automatically selected on the BDS local file system.
         */
        pemfilepath: string;
        /**
         * The current status of the API key.
         */
        state: string;
        /**
         * The OCID of your tenancy.
         */
        tenantId: string;
        /**
         * The time the API key was created, shown as an RFC 3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The user OCID for which this API key was created.
         */
        userId: string;
    }

    export interface GetBdsInstanceApiKeysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBdsInstanceCloudSqlDetail {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * IP address of the node.
         */
        ipAddress: string;
        /**
         * Boolean flag specifying whether or not Kerberos principals are mapped to database users.
         */
        isKerberosMappedToDatabaseUsers: boolean;
        /**
         * Details about the Kerberos principals.
         */
        kerberosDetails: outputs.BigDataService.GetBdsInstanceCloudSqlDetailKerberosDetail[];
        /**
         * Shape of the node.
         */
        shape: string;
    }

    export interface GetBdsInstanceCloudSqlDetailKerberosDetail {
        /**
         * Location of the keytab file
         */
        keytabFile: string;
        /**
         * Name of the Kerberos principal.
         */
        principalName: string;
    }

    export interface GetBdsInstanceClusterDetail {
        /**
         * The URL of Ambari
         */
        ambariUrl: string;
        /**
         * Cloud SQL cell version.
         */
        bdCellVersion: string;
        /**
         * BDA version installed in the cluster
         */
        bdaVersion: string;
        /**
         * Big Data Manager version installed in the cluster.
         */
        bdmVersion: string;
        /**
         * Big Data Service version installed in the cluster.
         */
        bdsVersion: string;
        /**
         * The URL of Big Data Manager.
         */
        bigDataManagerUrl: string;
        /**
         * The URL of Cloudera Manager
         */
        clouderaManagerUrl: string;
        /**
         * Big Data SQL version.
         */
        csqlCellVersion: string;
        /**
         * Cloud SQL query server database version.
         */
        dbVersion: string;
        /**
         * The URL of the Hue server.
         */
        hueServerUrl: string;
        /**
         * The URL of the Jupyterhub.
         */
        jupyterHubUrl: string;
        /**
         * Version of the ODH (Oracle Distribution including Apache Hadoop) installed on the cluster.
         */
        odhVersion: string;
        /**
         * Oracle Linux version installed in the cluster.
         */
        osVersion: string;
        /**
         * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the cluster was automatically or manually refreshed, shown as an RFC 3339 formatted datetime string.
         */
        timeRefreshed: string;
    }

    export interface GetBdsInstanceComputeOnlyWorkerNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The number of nodes that form the cluster.
         */
        numberOfNodes: number;
        /**
         * Shape of the node.
         */
        shape: string;
        shapeConfigs: outputs.BigDataService.GetBdsInstanceComputeOnlyWorkerNodeShapeConfig[];
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
    }

    export interface GetBdsInstanceComputeOnlyWorkerNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
    }

    export interface GetBdsInstanceMasterNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The number of nodes that form the cluster.
         */
        numberOfNodes: number;
        /**
         * Shape of the node.
         */
        shape: string;
        shapeConfigs: outputs.BigDataService.GetBdsInstanceMasterNodeShapeConfig[];
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
    }

    export interface GetBdsInstanceMasterNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
    }

    export interface GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration {
        activateTrigger: number;
        /**
         * The ID of the API key that is associated with the external metastore in the metastore configuration
         */
        bdsApiKeyId: string;
        bdsApiKeyPassphrase: string;
        /**
         * The OCID of the cluster.
         */
        bdsInstanceId: string;
        clusterAdminPassword: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * The ID of the metastore configuration
         */
        id: string;
        /**
         * The OCID of the Data Catalog metastore in the metastore configuration
         */
        metastoreId: string;
        /**
         * The type of the metastore in the metastore configuration
         */
        metastoreType: string;
        /**
         * The lifecycle state of the metastore in the metastore configuration
         */
        state: string;
        /**
         * The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetBdsInstanceMetastoreConfigsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBdsInstanceNetworkConfig {
        /**
         * The CIDR IP address block of the VCN.
         */
        cidrBlock: string;
        /**
         * A boolean flag whether to configure a NAT gateway.
         */
        isNatGatewayRequired: boolean;
    }

    export interface GetBdsInstanceNode {
        /**
         * The list of block volumes attached to a given node.
         */
        attachedBlockVolumes: outputs.BigDataService.GetBdsInstanceNodeAttachedBlockVolume[];
        /**
         * The name of the availability domain in which the node is running.
         */
        availabilityDomain: string;
        /**
         * The name of the node.
         */
        displayName: string;
        /**
         * The name of the fault domain in which the node is running.
         */
        faultDomain: string;
        /**
         * The fully-qualified hostname (FQDN) of the node.
         */
        hostname: string;
        /**
         * The OCID of the image from which the node was created.
         */
        imageId: string;
        /**
         * The OCID of the underlying Oracle Cloud Infrastructure Compute instance.
         */
        instanceId: string;
        /**
         * IP address of the node.
         */
        ipAddress: string;
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * Cluster node type.
         */
        nodeType: string;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
        /**
         * Shape of the node.
         */
        shape: string;
        /**
         * The fingerprint of the SSH key used for node access.
         */
        sshFingerprint: string;
        /**
         * The state of the cluster.
         */
        state: string;
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
        /**
         * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
         */
        timeCreated: string;
    }

    export interface GetBdsInstanceNodeAttachedBlockVolume {
        /**
         * The OCID of the volume attachment.
         */
        volumeAttachmentId: string;
        /**
         * The size of the volume in GBs.
         */
        volumeSizeInGbs: string;
    }

    export interface GetBdsInstancePatchHistoriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBdsInstancePatchHistoriesPatchHistory {
        /**
         * The status of the patch.
         */
        state: string;
        /**
         * The time when the patch history was last updated.
         */
        timeUpdated: string;
        /**
         * The version of the patch.
         */
        version: string;
    }

    export interface GetBdsInstancePatchesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBdsInstancePatchesPatch {
        /**
         * The time when the patch was released.
         */
        timeReleased: string;
        /**
         * The version of the patch.
         */
        version: string;
    }

    export interface GetBdsInstanceUtilNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The number of nodes that form the cluster.
         */
        numberOfNodes: number;
        /**
         * Shape of the node.
         */
        shape: string;
        shapeConfigs: outputs.BigDataService.GetBdsInstanceUtilNodeShapeConfig[];
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
    }

    export interface GetBdsInstanceUtilNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
    }

    export interface GetBdsInstanceWorkerNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The number of nodes that form the cluster.
         */
        numberOfNodes: number;
        /**
         * Shape of the node.
         */
        shape: string;
        shapeConfigs: outputs.BigDataService.GetBdsInstanceWorkerNodeShapeConfig[];
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
    }

    export interface GetBdsInstanceWorkerNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
    }

    export interface GetBdsInstancesBdsInstance {
        /**
         * pre-authenticated URL of the bootstrap script in Object Store that can be downloaded and executed.
         */
        bootstrapScriptUrl: string;
        /**
         * The information about added Cloud SQL capability
         */
        cloudSqlDetails: outputs.BigDataService.GetBdsInstancesBdsInstanceCloudSqlDetail[];
        clusterAdminPassword: string;
        /**
         * Specific info about a Hadoop cluster
         */
        clusterDetails: outputs.BigDataService.GetBdsInstancesBdsInstanceClusterDetail[];
        clusterPublicKey: string;
        /**
         * Version of the Hadoop distribution.
         */
        clusterVersion: string;
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        computeOnlyWorkerNodes: outputs.BigDataService.GetBdsInstancesBdsInstanceComputeOnlyWorkerNode[];
        /**
         * The user who created the cluster.
         */
        createdBy: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Big Data Service resource.
         */
        id: string;
        /**
         * Boolean flag specifying whether or not Cloud SQL should be configured.
         */
        isCloudSqlConfigured: boolean;
        /**
         * Boolean flag specifying whether or not the cluster is highly available (HA)
         */
        isHighAvailability: boolean;
        /**
         * Boolean flag specifying whether or not the cluster should be set up as secure.
         */
        isSecure: boolean;
        kerberosRealmName: string;
        /**
         * The OCID of the Key Management master encryption key.
         */
        kmsKeyId: string;
        masterNodes: outputs.BigDataService.GetBdsInstancesBdsInstanceMasterNode[];
        /**
         * Additional configuration of the user's network.
         */
        networkConfigs: outputs.BigDataService.GetBdsInstancesBdsInstanceNetworkConfig[];
        /**
         * The list of nodes in the cluster.
         */
        nodes: outputs.BigDataService.GetBdsInstancesBdsInstanceNode[];
        /**
         * The number of nodes that form the cluster.
         */
        numberOfNodes: number;
        /**
         * The state of the cluster.
         */
        state: string;
        /**
         * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
         */
        timeUpdated: string;
        utilNodes: outputs.BigDataService.GetBdsInstancesBdsInstanceUtilNode[];
        workerNodes: outputs.BigDataService.GetBdsInstancesBdsInstanceWorkerNode[];
    }

    export interface GetBdsInstancesBdsInstanceCloudSqlDetail {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * IP address of the node.
         */
        ipAddress: string;
        /**
         * Boolean flag specifying whether or not Kerberos principals are mapped to database users.
         */
        isKerberosMappedToDatabaseUsers: boolean;
        /**
         * Details about the Kerberos principals.
         */
        kerberosDetails: outputs.BigDataService.GetBdsInstancesBdsInstanceCloudSqlDetailKerberosDetail[];
        /**
         * Shape of the node.
         */
        shape: string;
    }

    export interface GetBdsInstancesBdsInstanceCloudSqlDetailKerberosDetail {
        /**
         * Location of the keytab file
         */
        keytabFile: string;
        /**
         * Name of the Kerberos principal.
         */
        principalName: string;
    }

    export interface GetBdsInstancesBdsInstanceClusterDetail {
        /**
         * The URL of Ambari
         */
        ambariUrl: string;
        /**
         * Cloud SQL cell version.
         */
        bdCellVersion: string;
        /**
         * BDA version installed in the cluster
         */
        bdaVersion: string;
        /**
         * Big Data Manager version installed in the cluster.
         */
        bdmVersion: string;
        /**
         * Big Data Service version installed in the cluster.
         */
        bdsVersion: string;
        /**
         * The URL of Big Data Manager.
         */
        bigDataManagerUrl: string;
        /**
         * The URL of Cloudera Manager
         */
        clouderaManagerUrl: string;
        /**
         * Big Data SQL version.
         */
        csqlCellVersion: string;
        /**
         * Cloud SQL query server database version.
         */
        dbVersion: string;
        /**
         * The URL of the Hue server.
         */
        hueServerUrl: string;
        /**
         * The URL of the Jupyterhub.
         */
        jupyterHubUrl: string;
        /**
         * Version of the ODH (Oracle Distribution including Apache Hadoop) installed on the cluster.
         */
        odhVersion: string;
        /**
         * Oracle Linux version installed in the cluster.
         */
        osVersion: string;
        /**
         * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the cluster was automatically or manually refreshed, shown as an RFC 3339 formatted datetime string.
         */
        timeRefreshed: string;
    }

    export interface GetBdsInstancesBdsInstanceComputeOnlyWorkerNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The number of nodes that form the cluster.
         */
        numberOfNodes: number;
        /**
         * Shape of the node.
         */
        shape: string;
        shapeConfigs: outputs.BigDataService.GetBdsInstancesBdsInstanceComputeOnlyWorkerNodeShapeConfig[];
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
    }

    export interface GetBdsInstancesBdsInstanceComputeOnlyWorkerNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
    }

    export interface GetBdsInstancesBdsInstanceMasterNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The number of nodes that form the cluster.
         */
        numberOfNodes: number;
        /**
         * Shape of the node.
         */
        shape: string;
        shapeConfigs: outputs.BigDataService.GetBdsInstancesBdsInstanceMasterNodeShapeConfig[];
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
    }

    export interface GetBdsInstancesBdsInstanceMasterNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
    }

    export interface GetBdsInstancesBdsInstanceNetworkConfig {
        /**
         * The CIDR IP address block of the VCN.
         */
        cidrBlock: string;
        /**
         * A boolean flag whether to configure a NAT gateway.
         */
        isNatGatewayRequired: boolean;
    }

    export interface GetBdsInstancesBdsInstanceNode {
        /**
         * The list of block volumes attached to a given node.
         */
        attachedBlockVolumes: outputs.BigDataService.GetBdsInstancesBdsInstanceNodeAttachedBlockVolume[];
        /**
         * The name of the availability domain in which the node is running.
         */
        availabilityDomain: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * The name of the fault domain in which the node is running.
         */
        faultDomain: string;
        /**
         * The fully-qualified hostname (FQDN) of the node.
         */
        hostname: string;
        /**
         * The OCID of the image from which the node was created.
         */
        imageId: string;
        /**
         * The OCID of the underlying Oracle Cloud Infrastructure Compute instance.
         */
        instanceId: string;
        /**
         * IP address of the node.
         */
        ipAddress: string;
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * Cluster node type.
         */
        nodeType: string;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
        /**
         * Shape of the node.
         */
        shape: string;
        /**
         * The fingerprint of the SSH key used for node access.
         */
        sshFingerprint: string;
        /**
         * The state of the cluster.
         */
        state: string;
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
        /**
         * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
         */
        timeCreated: string;
    }

    export interface GetBdsInstancesBdsInstanceNodeAttachedBlockVolume {
        /**
         * The OCID of the volume attachment.
         */
        volumeAttachmentId: string;
        /**
         * The size of the volume in GBs.
         */
        volumeSizeInGbs: string;
    }

    export interface GetBdsInstancesBdsInstanceUtilNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The number of nodes that form the cluster.
         */
        numberOfNodes: number;
        /**
         * Shape of the node.
         */
        shape: string;
        shapeConfigs: outputs.BigDataService.GetBdsInstancesBdsInstanceUtilNodeShapeConfig[];
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
    }

    export interface GetBdsInstancesBdsInstanceUtilNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
    }

    export interface GetBdsInstancesBdsInstanceWorkerNode {
        /**
         * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
         */
        blockVolumeSizeInGbs: string;
        /**
         * The number of nodes that form the cluster.
         */
        numberOfNodes: number;
        /**
         * Shape of the node.
         */
        shape: string;
        shapeConfigs: outputs.BigDataService.GetBdsInstancesBdsInstanceWorkerNodeShapeConfig[];
        /**
         * The OCID of the subnet in which the node is to be created.
         */
        subnetId: string;
    }

    export interface GetBdsInstancesBdsInstanceWorkerNodeShapeConfig {
        /**
         * The total amount of memory available to the node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the node.
         */
        ocpus: number;
    }

    export interface GetBdsInstancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace Blockchain {
    export interface BlockchainPlatformComponentDetail {
        /**
         * List of OSNs
         */
        osns: outputs.Blockchain.BlockchainPlatformComponentDetailOsn[];
        /**
         * List of Peers
         */
        peers: outputs.Blockchain.BlockchainPlatformComponentDetailPeer[];
    }

    export interface BlockchainPlatformComponentDetailOsn {
        /**
         * Availability Domain of peer
         */
        ad: string;
        /**
         * OCPU allocation parameter
         */
        ocpuAllocationParams: outputs.Blockchain.BlockchainPlatformComponentDetailOsnOcpuAllocationParam[];
        /**
         * OSN identifier
         */
        osnKey: string;
        /**
         * The current state of the Platform Instance.
         */
        state: string;
    }

    export interface BlockchainPlatformComponentDetailOsnOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface BlockchainPlatformComponentDetailPeer {
        /**
         * Availability Domain of peer
         */
        ad: string;
        /**
         * peer alias
         */
        alias: string;
        /**
         * Host name of VM
         */
        host: string;
        /**
         * OCPU allocation parameter
         */
        ocpuAllocationParams: outputs.Blockchain.BlockchainPlatformComponentDetailPeerOcpuAllocationParam[];
        /**
         * peer identifier
         */
        peerKey: string;
        /**
         * Peer role
         */
        role: string;
        /**
         * The current state of the Platform Instance.
         */
        state: string;
    }

    export interface BlockchainPlatformComponentDetailPeerOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface BlockchainPlatformHostOcpuUtilizationInfo {
        /**
         * Host name of VM
         */
        host: string;
        /**
         * Number of total OCPU capacity on the host
         */
        ocpuCapacityNumber: number;
        /**
         * Number of OCPU utilized
         */
        ocpuUtilizationNumber: number;
    }

    export interface BlockchainPlatformReplicas {
        /**
         * Number of CA replicas
         */
        caCount: number;
        /**
         * Number of console replicas
         */
        consoleCount: number;
        /**
         * Number of REST proxy replicas
         */
        proxyCount: number;
    }

    export interface GetBlockchainPlatformComponentDetail {
        /**
         * List of OSNs
         */
        osns: outputs.Blockchain.GetBlockchainPlatformComponentDetailOsn[];
        /**
         * List of Peers
         */
        peers: outputs.Blockchain.GetBlockchainPlatformComponentDetailPeer[];
    }

    export interface GetBlockchainPlatformComponentDetailOsn {
        /**
         * Availability Domain of peer
         */
        ad: string;
        /**
         * OCPU allocation parameter
         */
        ocpuAllocationParams: outputs.Blockchain.GetBlockchainPlatformComponentDetailOsnOcpuAllocationParam[];
        /**
         * OSN identifier
         */
        osnKey: string;
        /**
         * The current state of the Platform Instance.
         */
        state: string;
    }

    export interface GetBlockchainPlatformComponentDetailOsnOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface GetBlockchainPlatformComponentDetailPeer {
        /**
         * Availability Domain of peer
         */
        ad: string;
        /**
         * peer alias
         */
        alias: string;
        /**
         * Host name of VM
         */
        host: string;
        /**
         * OCPU allocation parameter
         */
        ocpuAllocationParams: outputs.Blockchain.GetBlockchainPlatformComponentDetailPeerOcpuAllocationParam[];
        /**
         * peer identifier
         */
        peerKey: string;
        /**
         * Peer role
         */
        role: string;
        /**
         * The current state of the Platform Instance.
         */
        state: string;
    }

    export interface GetBlockchainPlatformComponentDetailPeerOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface GetBlockchainPlatformHostOcpuUtilizationInfo {
        /**
         * Host name of VM
         */
        host: string;
        /**
         * Number of total OCPU capacity on the host
         */
        ocpuCapacityNumber: number;
        /**
         * Number of OCPU utilized
         */
        ocpuUtilizationNumber: number;
    }

    export interface GetBlockchainPlatformPatchesBlockchainPlatformPatchCollection {
        /**
         * Collection of PatchSummary
         */
        items: outputs.Blockchain.GetBlockchainPlatformPatchesBlockchainPlatformPatchCollectionItem[];
    }

    export interface GetBlockchainPlatformPatchesBlockchainPlatformPatchCollectionItem {
        /**
         * Collection of PatchSummary
         */
        items: outputs.Blockchain.GetBlockchainPlatformPatchesBlockchainPlatformPatchCollectionItemItem[];
    }

    export interface GetBlockchainPlatformPatchesBlockchainPlatformPatchCollectionItemItem {
        /**
         * patch id
         */
        id: string;
        /**
         * A URL for the patch specific documentation
         */
        patchInfoUrl: string;
        /**
         * patch service version
         */
        serviceVersion: string;
        /**
         * patch due date for customer initiated patching
         */
        timePatchDue: string;
    }

    export interface GetBlockchainPlatformPatchesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBlockchainPlatformReplica {
        /**
         * Number of CA replicas
         */
        caCount: number;
        /**
         * Number of console replicas
         */
        consoleCount: number;
        /**
         * Number of REST proxy replicas
         */
        proxyCount: number;
    }

    export interface GetBlockchainPlatformsBlockchainPlatformCollection {
        items: outputs.Blockchain.GetBlockchainPlatformsBlockchainPlatformCollectionItem[];
    }

    export interface GetBlockchainPlatformsBlockchainPlatformCollectionItem {
        caCertArchiveText: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Blockchain Platform component details.
         */
        componentDetails: outputs.Blockchain.GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetail[];
        /**
         * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
         */
        computeShape: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Platform Instance Description
         */
        description: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
         */
        displayName: string;
        federatedUserId: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * List of OcpuUtilization for all hosts
         */
        hostOcpuUtilizationInfos: outputs.Blockchain.GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo[];
        /**
         * unique identifier that is immutable on creation
         */
        id: string;
        idcsAccessToken: string;
        /**
         * Bring your own license
         */
        isByol: boolean;
        /**
         * True for multi-AD blockchain plaforms, false for single-AD
         */
        isMultiAd: boolean;
        /**
         * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
         */
        loadBalancerShape: string;
        /**
         * Role of platform - FOUNDER or PARTICIPANT
         */
        platformRole: string;
        /**
         * Type of Platform shape - DEFAULT or CUSTOM
         */
        platformShapeType: string;
        /**
         * Platform Version
         */
        platformVersion: string;
        /**
         * Number of replicas of service components like Rest Proxy, CA and Console
         */
        replicas: outputs.Blockchain.GetBlockchainPlatformsBlockchainPlatformCollectionItemReplica[];
        /**
         * Service endpoint URL, valid post-provisioning
         */
        serviceEndpoint: string;
        /**
         * The version of the Platform Instance.
         */
        serviceVersion: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * Storage size in TBs
         */
        storageSizeInTbs: number;
        /**
         * Storage used in TBs
         */
        storageUsedInTbs: number;
        /**
         * The time the the Platform Instance was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the Platform Instance was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
        /**
         * Number of total OCPUs allocated to the platform cluster
         */
        totalOcpuCapacity: number;
    }

    export interface GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetail {
        /**
         * List of OSNs
         */
        osns: outputs.Blockchain.GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsn[];
        /**
         * List of Peers
         */
        peers: outputs.Blockchain.GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailPeer[];
    }

    export interface GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsn {
        /**
         * Availability Domain of peer
         */
        ad: string;
        /**
         * OCPU allocation parameter
         */
        ocpuAllocationParams: outputs.Blockchain.GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParam[];
        /**
         * OSN identifier
         */
        osnKey: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
    }

    export interface GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailPeer {
        /**
         * Availability Domain of peer
         */
        ad: string;
        /**
         * peer alias
         */
        alias: string;
        /**
         * Host name of VM
         */
        host: string;
        /**
         * OCPU allocation parameter
         */
        ocpuAllocationParams: outputs.Blockchain.GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailPeerOcpuAllocationParam[];
        /**
         * peer identifier
         */
        peerKey: string;
        /**
         * Peer role
         */
        role: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
    }

    export interface GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailPeerOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo {
        /**
         * Host name of VM
         */
        host: string;
        /**
         * Number of total OCPU capacity on the host
         */
        ocpuCapacityNumber: number;
        /**
         * Number of OCPU utilized
         */
        ocpuUtilizationNumber: number;
    }

    export interface GetBlockchainPlatformsBlockchainPlatformCollectionItemReplica {
        /**
         * Number of CA replicas
         */
        caCount: number;
        /**
         * Number of console replicas
         */
        consoleCount: number;
        /**
         * Number of REST proxy replicas
         */
        proxyCount: number;
    }

    export interface GetBlockchainPlatformsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOsnOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface GetOsnsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOsnsOsnCollection {
        items: outputs.Blockchain.GetOsnsOsnCollectionItem[];
    }

    export interface GetOsnsOsnCollectionItem {
        /**
         * Availability Domain of OSN
         */
        ad: string;
        /**
         * Unique service identifier.
         */
        blockchainPlatformId: string;
        /**
         * OCPU allocation parameter
         */
        ocpuAllocationParam: outputs.Blockchain.GetOsnsOsnCollectionItemOcpuAllocationParam;
        /**
         * OSN identifier
         */
        osnKey: string;
        /**
         * The current state of the OSN.
         */
        state: string;
    }

    export interface GetOsnsOsnCollectionItemOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface GetPeerOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface GetPeersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPeersPeerCollection {
        items: outputs.Blockchain.GetPeersPeerCollectionItem[];
    }

    export interface GetPeersPeerCollectionItem {
        /**
         * Availability Domain of peer
         */
        ad: string;
        /**
         * peer alias
         */
        alias: string;
        /**
         * Unique service identifier.
         */
        blockchainPlatformId: string;
        /**
         * Host on which the Peer exists
         */
        host: string;
        /**
         * OCPU allocation parameter
         */
        ocpuAllocationParam: outputs.Blockchain.GetPeersPeerCollectionItemOcpuAllocationParam;
        /**
         * peer identifier
         */
        peerKey: string;
        /**
         * Peer role
         */
        role: string;
        /**
         * The current state of the peer.
         */
        state: string;
    }

    export interface GetPeersPeerCollectionItemOcpuAllocationParam {
        /**
         * Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface OsnOcpuAllocationParam {
        /**
         * (Updatable) Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

    export interface PeerOcpuAllocationParam {
        /**
         * (Updatable) Number of OCPU allocation
         */
        ocpuAllocationNumber: number;
    }

}

export namespace Budget {
    export interface GetAlertRulesAlertRule {
        /**
         * The unique budget OCID.
         */
        budgetId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the alert rule.
         */
        description: string;
        /**
         * A user-friendly name. This does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the alert rule.
         */
        id: string;
        /**
         * The custom message that will be sent when the alert is triggered.
         */
        message: string;
        /**
         * The delimited list of email addresses to receive the alert when it triggers. Delimiter characters can be a comma, space, TAB, or semicolon.
         */
        recipients: string;
        /**
         * The current state of the resource to filter by.
         */
        state: string;
        /**
         * The threshold for triggering the alert. If the thresholdType is PERCENTAGE, the maximum value is 10000.
         */
        threshold: number;
        /**
         * The type of threshold.
         */
        thresholdType: string;
        /**
         * The time when the budget was created.
         */
        timeCreated: string;
        /**
         * The time when the budget was updated.
         */
        timeUpdated: string;
        /**
         * The type of the alert. Valid values are ACTUAL (the alert triggers based on actual usage), or FORECAST (the alert triggers based on predicted usage).
         */
        type: string;
        /**
         * The version of the alert rule. Starts from 1 and increments by 1.
         */
        version: number;
    }

    export interface GetAlertRulesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBudgetsBudget {
        /**
         * The actual spend in currency for the current budget cycle.
         */
        actualSpend: number;
        /**
         * The total number of alert rules in the budget.
         */
        alertRuleCount: number;
        /**
         * The amount of the budget, expressed in the currency of the customer's rate card.
         */
        amount: number;
        /**
         * The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
         */
        budgetProcessingPeriodStartOffset: number;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the budget.
         */
        description: string;
        /**
         * A user-friendly name. This does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * The forecasted spend in currency by the end of the current budget cycle.
         */
        forecastedSpend: number;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the budget.
         */
        id: string;
        /**
         * The type of the budget processing period. Valid values are INVOICE and MONTH.
         */
        processingPeriodType: string;
        /**
         * The reset period for the budget.
         */
        resetPeriod: string;
        /**
         * The current state of the resource to filter by.
         */
        state: string;
        /**
         * This is DEPRECATED. For backwards compatability, the property is populated when the targetType is "COMPARTMENT", and targets contain the specific target compartment OCID. For all other scenarios, this property will be left empty.
         *
         * @deprecated The 'target_compartment_id' field has been deprecated. Please use 'target_type' instead.
         */
        targetCompartmentId: string;
        /**
         * The type of target to filter by:
         * * ALL - List all budgets
         * * COMPARTMENT - List all budgets with targetType == "COMPARTMENT"
         * * TAG - List all budgets with targetType == "TAG"
         */
        targetType: string;
        /**
         * The list of targets on which the budget is applied. If the targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If the targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}".
         */
        targets: string[];
        /**
         * The time that the budget was created.
         */
        timeCreated: string;
        /**
         * The time that the budget spend was last computed.
         */
        timeSpendComputed: string;
        /**
         * The time that the budget was updated.
         */
        timeUpdated: string;
        /**
         * The version of the budget. Starts from 1 and increments by 1.
         */
        version: number;
    }

    export interface GetBudgetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace CertificatesManagement {
    export interface CertificateAuthorityCertificateAuthorityConfig {
        /**
         * (Updatable) The origin of the CA.
         */
        configType: string;
        /**
         * The OCID of the private CA.
         */
        issuerCertificateAuthorityId?: string;
        /**
         * The algorithm used to sign public key certificates that the CA issues.
         */
        signingAlgorithm?: string;
        /**
         * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
         */
        subject: outputs.CertificatesManagement.CertificateAuthorityCertificateAuthorityConfigSubject;
        /**
         * (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validity?: outputs.CertificatesManagement.CertificateAuthorityCertificateAuthorityConfigValidity;
        /**
         * (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
         */
        versionName?: string;
    }

    export interface CertificateAuthorityCertificateAuthorityConfigSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country?: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier?: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent?: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier?: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName?: string;
        /**
         * Personal initials.
         */
        initials?: string;
        /**
         * Locality (RDN L).
         */
        localityName?: string;
        /**
         * Organization (RDN O).
         */
        organization?: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit?: string;
        /**
         * Subject pseudonym.
         */
        pseudonym?: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber?: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName?: string;
        /**
         * Street address (RDN STREET).
         */
        street?: string;
        /**
         * Personal surname (RDN SN).
         */
        surname?: string;
        /**
         * Title (RDN T or TITLE).
         */
        title?: string;
        /**
         * User ID (RDN UID).
         */
        userId?: string;
    }

    export interface CertificateAuthorityCertificateAuthorityConfigValidity {
        /**
         * (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore?: string;
    }

    export interface CertificateAuthorityCertificateAuthorityRule {
        /**
         * (Updatable) A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        certificateAuthorityMaxValidityDuration?: string;
        /**
         * (Updatable) A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        leafCertificateMaxValidityDuration?: string;
        /**
         * (Updatable) The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
         */
        ruleType: string;
    }

    export interface CertificateAuthorityCertificateRevocationListDetails {
        /**
         * (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        customFormattedUrls: string[];
        /**
         * (Updatable) The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
         */
        objectStorageConfig: outputs.CertificatesManagement.CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig;
    }

    export interface CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig {
        /**
         * (Updatable) The name of the bucket where the CRL is stored.
         */
        objectStorageBucketName: string;
        /**
         * (Updatable) The tenancy of the bucket where the CRL is stored.
         */
        objectStorageNamespace: string;
        /**
         * (Updatable) The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        objectStorageObjectNameFormat: string;
    }

    export interface CertificateAuthorityCurrentVersion {
        /**
         * The OCID of the CA.
         */
        certificateAuthorityId: string;
        /**
         * The version number of the issuing CA.
         */
        issuerCaVersionNumber: string;
        /**
         * The current revocation status of the entity.
         */
        revocationStatuses: outputs.CertificatesManagement.CertificateAuthorityCurrentVersionRevocationStatus[];
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * A list of rotation states for this CA version.
         */
        stages: string[];
        /**
         * A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.CertificateAuthorityCurrentVersionValidity[];
        /**
         * (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
         */
        versionName: string;
        /**
         * The version number of the CA.
         */
        versionNumber: string;
    }

    export interface CertificateAuthorityCurrentVersionRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface CertificateAuthorityCurrentVersionValidity {
        /**
         * (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface CertificateAuthoritySubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface CertificateCertificateConfig {
        /**
         * The name of the profile used to create the certificate, which depends on the type of certificate you need.
         */
        certificateProfileType?: string;
        /**
         * (Updatable) The origin of the certificate.
         */
        configType: string;
        /**
         * (Updatable) The certificate signing request (in PEM format).
         */
        csrPem?: string;
        /**
         * The OCID of the private CA.
         */
        issuerCertificateAuthorityId?: string;
        /**
         * The algorithm to use to create key pairs.
         */
        keyAlgorithm: string;
        /**
         * The algorithm to use to sign the public key certificate.
         */
        signatureAlgorithm: string;
        /**
         * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
         */
        subject?: outputs.CertificatesManagement.CertificateCertificateConfigSubject;
        /**
         * A list of subject alternative names.
         */
        subjectAlternativeNames?: outputs.CertificatesManagement.CertificateCertificateConfigSubjectAlternativeName[];
        /**
         * (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validity?: outputs.CertificatesManagement.CertificateCertificateConfigValidity;
        /**
         * (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
         */
        versionName?: string;
    }

    export interface CertificateCertificateConfigSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country?: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier?: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent?: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier?: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName?: string;
        /**
         * Personal initials.
         */
        initials?: string;
        /**
         * Locality (RDN L).
         */
        localityName?: string;
        /**
         * Organization (RDN O).
         */
        organization?: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit?: string;
        /**
         * Subject pseudonym.
         */
        pseudonym?: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber?: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName?: string;
        /**
         * Street address (RDN STREET).
         */
        street?: string;
        /**
         * Personal surname (RDN SN).
         */
        surname?: string;
        /**
         * Title (RDN T or TITLE).
         */
        title?: string;
        /**
         * User ID (RDN UID).
         */
        userId?: string;
    }

    export interface CertificateCertificateConfigSubjectAlternativeName {
        /**
         * The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         */
        type: string;
        /**
         * The subject alternative name.
         */
        value: string;
    }

    export interface CertificateCertificateConfigValidity {
        /**
         * (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore?: string;
    }

    export interface CertificateCertificateRevocationListDetail {
        /**
         * Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        customFormattedUrls: string[];
        /**
         * The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
         */
        objectStorageConfigs: outputs.CertificatesManagement.CertificateCertificateRevocationListDetailObjectStorageConfig[];
    }

    export interface CertificateCertificateRevocationListDetailObjectStorageConfig {
        /**
         * The name of the bucket where the CRL is stored.
         */
        objectStorageBucketName: string;
        /**
         * The tenancy of the bucket where the CRL is stored.
         */
        objectStorageNamespace: string;
        /**
         * The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        objectStorageObjectNameFormat: string;
    }

    export interface CertificateCertificateRule {
        /**
         * (Updatable) A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        advanceRenewalPeriod: string;
        /**
         * (Updatable) A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        renewalInterval: string;
        /**
         * (Updatable) The type of rule.
         */
        ruleType: string;
    }

    export interface CertificateCurrentVersion {
        /**
         * The OCID of the certificate.
         */
        certificateId: string;
        /**
         * The version number of the issuing certificate authority (CA).
         */
        issuerCaVersionNumber: string;
        /**
         * The current revocation status of the entity.
         */
        revocationStatuses: outputs.CertificatesManagement.CertificateCurrentVersionRevocationStatus[];
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * A list of rotation states for this certificate version.
         */
        stages: string[];
        /**
         * A list of subject alternative names.
         */
        subjectAlternativeNames: outputs.CertificatesManagement.CertificateCurrentVersionSubjectAlternativeName[];
        /**
         * A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.CertificateCurrentVersionValidity[];
        /**
         * (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
         */
        versionName: string;
        /**
         * The version number of the certificate.
         */
        versionNumber: string;
    }

    export interface CertificateCurrentVersionRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface CertificateCurrentVersionSubjectAlternativeName {
        /**
         * The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         */
        type: string;
        /**
         * The subject alternative name.
         */
        value: string;
    }

    export interface CertificateCurrentVersionValidity {
        /**
         * (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface CertificateSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface GetAssociationsAssociationCollection {
        items: outputs.CertificatesManagement.GetAssociationsAssociationCollectionItem[];
    }

    export interface GetAssociationsAssociationCollectionItem {
        /**
         * A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
         */
        associatedResourceId: string;
        /**
         * Type of associations to list. If the parameter is set to null, the service lists all types of associations.
         */
        associationType: string;
        /**
         * A filter that returns only resources that match the given OCID of a certificate-related resource.
         */
        certificatesResourceId: string;
        /**
         * A filter that returns only resources that match the given compartment OCID.
         */
        compartmentId: string;
        /**
         * The OCID of the association.
         */
        id: string;
        /**
         * A filter that returns only resources that match the specified name.
         */
        name: string;
        /**
         * The current lifecycle state of the association.
         */
        state: string;
        /**
         * A property indicating when the association was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetAssociationsFilter {
        /**
         * A filter that returns only resources that match the specified name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCaBundlesCaBundleCollection {
        items: outputs.CertificatesManagement.GetCaBundlesCaBundleCollectionItem[];
    }

    export interface GetCaBundlesCaBundleCollectionItem {
        caBundlePem: string;
        /**
         * A filter that returns only resources that match the given compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A brief description of the CA bundle.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the CA bundle.
         */
        id: string;
        /**
         * Additional information about the current lifecycle state of the CA bundle.
         */
        lifecycleDetails: string;
        /**
         * A filter that returns only resources that match the specified name.
         */
        name: string;
        /**
         * A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * A property indicating when the CA bundle was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetCaBundlesFilter {
        /**
         * A filter that returns only resources that match the specified name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollection {
        items: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItem[];
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItem {
        certificateAuthorityConfigs: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig[];
        /**
         * An optional list of rules that control how the CA is used and managed.
         */
        certificateAuthorityRules: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule[];
        /**
         * The details of the certificate revocation list (CRL).
         */
        certificateRevocationListDetails: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail[];
        /**
         * A filter that returns only resources that match the given compartment OCID.
         */
        compartmentId: string;
        /**
         * The origin of the CA.
         */
        configType: string;
        /**
         * The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
         */
        currentVersions: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion[];
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A brief description of the CA.
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the CA.
         */
        id: string;
        /**
         * The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
         */
        issuerCertificateAuthorityId: string;
        /**
         * The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
         */
        kmsKeyId: string;
        /**
         * Additional information about the current CA lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter that returns only resources that match the specified name.
         */
        name: string;
        /**
         * The algorithm used to sign public key certificates that the CA issues.
         */
        signingAlgorithm: string;
        /**
         * A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
         */
        subjects: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject[];
        /**
         * A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig {
        /**
         * The origin of the CA.
         */
        configType: string;
        /**
         * The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
         */
        issuerCertificateAuthorityId: string;
        /**
         * The algorithm used to sign public key certificates that the CA issues.
         */
        signingAlgorithm: string;
        /**
         * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
         */
        subjects: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject[];
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity[];
        /**
         * The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
         */
        versionName: string;
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule {
        /**
         * A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        certificateAuthorityMaxValidityDuration: string;
        /**
         * A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        leafCertificateMaxValidityDuration: string;
        /**
         * The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
         */
        ruleType: string;
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail {
        /**
         * Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        customFormattedUrls: string[];
        /**
         * The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
         */
        objectStorageConfigs: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig[];
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig {
        /**
         * The name of the bucket where the CRL is stored.
         */
        objectStorageBucketName: string;
        /**
         * The tenancy of the bucket where the CRL is stored.
         */
        objectStorageNamespace: string;
        /**
         * The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        objectStorageObjectNameFormat: string;
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion {
        /**
         * The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
         */
        certificateAuthorityId: string;
        /**
         * The version number of the issuing CA.
         */
        issuerCaVersionNumber: string;
        /**
         * The current revocation status of the entity.
         */
        revocationStatuses: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus[];
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * A list of rotation states for this CA version.
         */
        stages: string[];
        /**
         * A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity[];
        /**
         * The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
         */
        versionName: string;
        /**
         * The version number of the CA.
         */
        versionNumber: string;
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface GetCertificateAuthoritiesFilter {
        /**
         * A filter that returns only resources that match the specified name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCertificateAuthorityCertificateAuthorityConfig {
        /**
         * The origin of the CA.
         */
        configType: string;
        /**
         * The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
         */
        issuerCertificateAuthorityId: string;
        /**
         * The algorithm used to sign public key certificates that the CA issues.
         */
        signingAlgorithm: string;
        /**
         * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
         */
        subjects: outputs.CertificatesManagement.GetCertificateAuthorityCertificateAuthorityConfigSubject[];
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificateAuthorityCertificateAuthorityConfigValidity[];
        /**
         * The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
         */
        versionName: string;
    }

    export interface GetCertificateAuthorityCertificateAuthorityConfigSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface GetCertificateAuthorityCertificateAuthorityConfigValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateAuthorityCertificateAuthorityRule {
        /**
         * A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        certificateAuthorityMaxValidityDuration: string;
        /**
         * A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        leafCertificateMaxValidityDuration: string;
        /**
         * The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
         */
        ruleType: string;
    }

    export interface GetCertificateAuthorityCertificateRevocationListDetail {
        /**
         * Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        customFormattedUrls: string[];
        /**
         * The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
         */
        objectStorageConfigs: outputs.CertificatesManagement.GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig[];
    }

    export interface GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig {
        /**
         * The name of the bucket where the CRL is stored.
         */
        objectStorageBucketName: string;
        /**
         * The tenancy of the bucket where the CRL is stored.
         */
        objectStorageNamespace: string;
        /**
         * The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        objectStorageObjectNameFormat: string;
    }

    export interface GetCertificateAuthorityCurrentVersion {
        /**
         * The OCID of the certificate authority (CA).
         */
        certificateAuthorityId: string;
        /**
         * The version number of the issuing CA.
         */
        issuerCaVersionNumber: string;
        /**
         * The current revocation status of the entity.
         */
        revocationStatuses: outputs.CertificatesManagement.GetCertificateAuthorityCurrentVersionRevocationStatus[];
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * A list of rotation states for this CA version.
         */
        stages: string[];
        /**
         * A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificateAuthorityCurrentVersionValidity[];
        /**
         * The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
         */
        versionName: string;
        /**
         * The version number of the CA.
         */
        versionNumber: string;
    }

    export interface GetCertificateAuthorityCurrentVersionRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface GetCertificateAuthorityCurrentVersionValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateAuthoritySubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface GetCertificateAuthorityVersionRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface GetCertificateAuthorityVersionSubjectAlternativeName {
        type: string;
        value: string;
    }

    export interface GetCertificateAuthorityVersionValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection {
        /**
         * A list of certificate authority version summary objects.
         */
        items: outputs.CertificatesManagement.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem[];
    }

    export interface GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem {
        /**
         * The OCID of the certificate authority (CA).
         */
        certificateAuthorityId: string;
        /**
         * The version number of the issuing CA.
         */
        issuerCaVersionNumber: string;
        /**
         * The current revocation status of the entity.
         */
        revocationStatuses: outputs.CertificatesManagement.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus[];
        /**
         * A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
         */
        serialNumber: string;
        /**
         * A list of rotation states for this CA version.
         */
        stages: string[];
        /**
         * A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity[];
        /**
         * The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
         */
        versionName: string;
        /**
         * A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
         */
        versionNumber: string;
    }

    export interface GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateAuthorityVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCertificateCertificateConfig {
        /**
         * The name of the profile used to create the certificate, which depends on the type of certificate you need.
         */
        certificateProfileType: string;
        /**
         * The origin of the certificate.
         */
        configType: string;
        csrPem: string;
        /**
         * The OCID of the certificate authority (CA) that issued the certificate.
         */
        issuerCertificateAuthorityId: string;
        /**
         * The algorithm used to create key pairs.
         */
        keyAlgorithm: string;
        /**
         * The algorithm used to sign the public key certificate.
         */
        signatureAlgorithm: string;
        /**
         * A list of subject alternative names.
         */
        subjectAlternativeNames: outputs.CertificatesManagement.GetCertificateCertificateConfigSubjectAlternativeName[];
        /**
         * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
         */
        subjects: outputs.CertificatesManagement.GetCertificateCertificateConfigSubject[];
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificateCertificateConfigValidity[];
        /**
         * The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
         */
        versionName: string;
    }

    export interface GetCertificateCertificateConfigSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface GetCertificateCertificateConfigSubjectAlternativeName {
        /**
         * The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         */
        type: string;
        /**
         * The subject alternative name.
         */
        value: string;
    }

    export interface GetCertificateCertificateConfigValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateCertificateRevocationListDetail {
        /**
         * Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        customFormattedUrls: string[];
        /**
         * The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
         */
        objectStorageConfigs: outputs.CertificatesManagement.GetCertificateCertificateRevocationListDetailObjectStorageConfig[];
    }

    export interface GetCertificateCertificateRevocationListDetailObjectStorageConfig {
        /**
         * The name of the bucket where the CRL is stored.
         */
        objectStorageBucketName: string;
        /**
         * The tenancy of the bucket where the CRL is stored.
         */
        objectStorageNamespace: string;
        /**
         * The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        objectStorageObjectNameFormat: string;
    }

    export interface GetCertificateCertificateRule {
        /**
         * A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        advanceRenewalPeriod: string;
        /**
         * A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        renewalInterval: string;
        /**
         * The type of rule.
         */
        ruleType: string;
    }

    export interface GetCertificateCurrentVersion {
        /**
         * The OCID of the certificate.
         */
        certificateId: string;
        /**
         * The version number of the issuing certificate authority (CA).
         */
        issuerCaVersionNumber: string;
        /**
         * The current revocation status of the entity.
         */
        revocationStatuses: outputs.CertificatesManagement.GetCertificateCurrentVersionRevocationStatus[];
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * A list of rotation states for this certificate version.
         */
        stages: string[];
        /**
         * A list of subject alternative names.
         */
        subjectAlternativeNames: outputs.CertificatesManagement.GetCertificateCurrentVersionSubjectAlternativeName[];
        /**
         * A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificateCurrentVersionValidity[];
        /**
         * The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
         */
        versionName: string;
        /**
         * The version number of the certificate.
         */
        versionNumber: string;
    }

    export interface GetCertificateCurrentVersionRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface GetCertificateCurrentVersionSubjectAlternativeName {
        /**
         * The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         */
        type: string;
        /**
         * The subject alternative name.
         */
        value: string;
    }

    export interface GetCertificateCurrentVersionValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface GetCertificateVersionRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface GetCertificateVersionSubjectAlternativeName {
        /**
         * The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         */
        type: string;
        /**
         * The subject alternative name.
         */
        value: string;
    }

    export interface GetCertificateVersionValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateVersionsCertificateVersionCollection {
        /**
         * A list of certificate version summary objects.
         */
        items: outputs.CertificatesManagement.GetCertificateVersionsCertificateVersionCollectionItem[];
    }

    export interface GetCertificateVersionsCertificateVersionCollectionItem {
        /**
         * The OCID of the certificate.
         */
        certificateId: string;
        /**
         * The version number of the issuing certificate authority (CA).
         */
        issuerCaVersionNumber: string;
        /**
         * The current revocation status of the entity.
         */
        revocationStatuses: outputs.CertificatesManagement.GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus[];
        /**
         * A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
         */
        serialNumber: string;
        /**
         * A list of rotation states for this certificate version.
         */
        stages: string[];
        /**
         * A list of subject alternative names.
         */
        subjectAlternativeNames: outputs.CertificatesManagement.GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName[];
        /**
         * A optional property indicating the time when the certificate version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificateVersionsCertificateVersionCollectionItemValidity[];
        /**
         * The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
         */
        versionName: string;
        /**
         * A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
         */
        versionNumber: string;
    }

    export interface GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName {
        /**
         * The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         */
        type: string;
        /**
         * The subject alternative name.
         */
        value: string;
    }

    export interface GetCertificateVersionsCertificateVersionCollectionItemValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificateVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCertificatesCertificateCollection {
        items: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItem[];
    }

    export interface GetCertificatesCertificateCollectionItem {
        certificateConfigs: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCertificateConfig[];
        /**
         * The name of the profile used to create the certificate, which depends on the type of certificate you need.
         */
        certificateProfileType: string;
        /**
         * The details of the certificate revocation list (CRL).
         */
        certificateRevocationListDetails: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCertificateRevocationListDetail[];
        /**
         * A list of rules that control how the certificate is used and managed.
         */
        certificateRules: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCertificateRule[];
        /**
         * A filter that returns only resources that match the given compartment OCID.
         */
        compartmentId: string;
        /**
         * The origin of the certificate.
         */
        configType: string;
        /**
         * The details of the certificate version. This object does not contain the certificate contents.
         */
        currentVersions: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCurrentVersion[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A brief description of the certificate. Avoid entering confidential information.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the certificate.
         */
        id: string;
        /**
         * The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
         */
        issuerCertificateAuthorityId: string;
        /**
         * The algorithm used to create key pairs.
         */
        keyAlgorithm: string;
        /**
         * Additional information about the current lifecycle state of the certificate.
         */
        lifecycleDetails: string;
        /**
         * A filter that returns only resources that match the specified name.
         */
        name: string;
        /**
         * The algorithm used to sign the public key certificate.
         */
        signatureAlgorithm: string;
        /**
         * A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
         */
        subjects: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemSubject[];
        /**
         * A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
    }

    export interface GetCertificatesCertificateCollectionItemCertificateConfig {
        /**
         * The name of the profile used to create the certificate, which depends on the type of certificate you need.
         */
        certificateProfileType: string;
        /**
         * The origin of the certificate.
         */
        configType: string;
        csrPem: string;
        /**
         * The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
         */
        issuerCertificateAuthorityId: string;
        /**
         * The algorithm used to create key pairs.
         */
        keyAlgorithm: string;
        /**
         * The algorithm used to sign the public key certificate.
         */
        signatureAlgorithm: string;
        /**
         * A list of subject alternative names.
         */
        subjectAlternativeNames: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName[];
        /**
         * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
         */
        subjects: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCertificateConfigSubject[];
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCertificateConfigValidity[];
        /**
         * The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
         */
        versionName: string;
    }

    export interface GetCertificatesCertificateCollectionItemCertificateConfigSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName {
        /**
         * The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         */
        type: string;
        /**
         * The subject alternative name.
         */
        value: string;
    }

    export interface GetCertificatesCertificateCollectionItemCertificateConfigValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificatesCertificateCollectionItemCertificateRevocationListDetail {
        /**
         * Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        customFormattedUrls: string[];
        /**
         * The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
         */
        objectStorageConfigs: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig[];
    }

    export interface GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig {
        /**
         * The name of the bucket where the CRL is stored.
         */
        objectStorageBucketName: string;
        /**
         * The tenancy of the bucket where the CRL is stored.
         */
        objectStorageNamespace: string;
        /**
         * The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         */
        objectStorageObjectNameFormat: string;
    }

    export interface GetCertificatesCertificateCollectionItemCertificateRule {
        /**
         * A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        advanceRenewalPeriod: string;
        /**
         * A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         */
        renewalInterval: string;
        /**
         * The type of rule.
         */
        ruleType: string;
    }

    export interface GetCertificatesCertificateCollectionItemCurrentVersion {
        /**
         * The OCID of the certificate. If the parameter is set to null, the service lists all certificates.
         */
        certificateId: string;
        /**
         * The version number of the issuing certificate authority (CA).
         */
        issuerCaVersionNumber: string;
        /**
         * The current revocation status of the entity.
         */
        revocationStatuses: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus[];
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * A list of rotation states for this certificate version.
         */
        stages: string[];
        /**
         * A list of subject alternative names.
         */
        subjectAlternativeNames: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName[];
        /**
         * A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
         */
        validities: outputs.CertificatesManagement.GetCertificatesCertificateCollectionItemCurrentVersionValidity[];
        /**
         * The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
         */
        versionName: string;
        /**
         * The version number of the certificate.
         */
        versionNumber: string;
    }

    export interface GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus {
        /**
         * The reason the certificate or certificate authority (CA) was revoked.
         */
        revocationReason: string;
        /**
         * The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfRevocation: string;
    }

    export interface GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName {
        /**
         * The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         */
        type: string;
        /**
         * The subject alternative name.
         */
        value: string;
    }

    export interface GetCertificatesCertificateCollectionItemCurrentVersionValidity {
        /**
         * The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotAfter: string;
        /**
         * The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfValidityNotBefore: string;
    }

    export interface GetCertificatesCertificateCollectionItemSubject {
        /**
         * Common name or fully-qualified domain name (RDN CN).
         */
        commonName: string;
        /**
         * Country name (RDN C).
         */
        country: string;
        /**
         * Distinguished name qualifier(RDN DNQ).
         */
        distinguishedNameQualifier: string;
        /**
         * Domain component (RDN DC).
         */
        domainComponent: string;
        /**
         * Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
         */
        generationQualifier: string;
        /**
         * Personal given name (RDN G or GN).
         */
        givenName: string;
        /**
         * Personal initials.
         */
        initials: string;
        /**
         * Locality (RDN L).
         */
        localityName: string;
        /**
         * Organization (RDN O).
         */
        organization: string;
        /**
         * Organizational unit (RDN OU).
         */
        organizationalUnit: string;
        /**
         * Subject pseudonym.
         */
        pseudonym: string;
        /**
         * Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
         */
        serialNumber: string;
        /**
         * State or province name (RDN ST or S).
         */
        stateOrProvinceName: string;
        /**
         * Street address (RDN STREET).
         */
        street: string;
        /**
         * Personal surname (RDN SN).
         */
        surname: string;
        /**
         * Title (RDN T or TITLE).
         */
        title: string;
        /**
         * User ID (RDN UID).
         */
        userId: string;
    }

    export interface GetCertificatesFilter {
        /**
         * A filter that returns only resources that match the specified name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace CloudGuard {
    export interface DataMaskRuleTargetSelected {
        /**
         * (Updatable) Target selection.
         */
        kind: string;
        /**
         * (Updatable) Types of Targets
         */
        values: string[];
    }

    export interface DetectorRecipeDetectorRule {
        /**
         * List of CandidateResponderRule related to this rule
         */
        candidateResponderRules: outputs.CloudGuard.DetectorRecipeDetectorRuleCandidateResponderRule[];
        /**
         * (Updatable) Detector recipe description.
         */
        description: string;
        /**
         * (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
         */
        details: outputs.CloudGuard.DetectorRecipeDetectorRuleDetails;
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * (Updatable) DetectorRecipeRule Identifier
         */
        detectorRuleId: string;
        /**
         * (Updatable) Detector recipe display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for DetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The current state of the resource.
         */
        state: string;
        /**
         * The date and time the detector recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the detector recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface DetectorRecipeDetectorRuleCandidateResponderRule {
        /**
         * (Updatable) Detector recipe display name.
         */
        displayName: string;
        /**
         * Ocid for detector recipe
         */
        id: string;
        /**
         * Preferred state
         */
        isPreferred: boolean;
    }

    export interface DetectorRecipeDetectorRuleDetails {
        /**
         * (Updatable) Base condition object
         */
        condition: string;
        /**
         * (Updatable) Configuration details
         */
        configurations: outputs.CloudGuard.DetectorRecipeDetectorRuleDetailsConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * (Updatable) Enables the control
         */
        isEnabled: boolean;
        /**
         * (Updatable) user defined labels for a detector rule
         */
        labels: string[];
        /**
         * (Updatable) The Risk Level
         */
        riskLevel: string;
    }

    export interface DetectorRecipeDetectorRuleDetailsConfiguration {
        /**
         * (Updatable) Unique name of the configuration
         */
        configKey: string;
        /**
         * (Updatable) configuration data type
         */
        dataType: string;
        /**
         * (Updatable) configuration name
         */
        name: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
        /**
         * (Updatable) List of configuration values
         */
        values: outputs.CloudGuard.DetectorRecipeDetectorRuleDetailsConfigurationValue[];
    }

    export interface DetectorRecipeDetectorRuleDetailsConfigurationValue {
        /**
         * (Updatable) configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * (Updatable) type of the managed list
         */
        managedListType: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
    }

    export interface DetectorRecipeEffectiveDetectorRule {
        /**
         * List of CandidateResponderRule related to this rule
         */
        candidateResponderRules: outputs.CloudGuard.DetectorRecipeEffectiveDetectorRuleCandidateResponderRule[];
        /**
         * (Updatable) Detector recipe description.
         */
        description: string;
        /**
         * (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
         */
        details: outputs.CloudGuard.DetectorRecipeEffectiveDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * (Updatable) DetectorRecipeRule Identifier
         */
        detectorRuleId: string;
        /**
         * (Updatable) Detector recipe display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for DetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The current state of the resource.
         */
        state: string;
        /**
         * The date and time the detector recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the detector recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface DetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
        /**
         * (Updatable) Detector recipe display name.
         */
        displayName: string;
        /**
         * Ocid for detector recipe
         */
        id: string;
        /**
         * Preferred state
         */
        isPreferred: boolean;
    }

    export interface DetectorRecipeEffectiveDetectorRuleDetail {
        /**
         * (Updatable) Base condition object
         */
        condition: string;
        /**
         * (Updatable) Configuration details
         */
        configurations: outputs.CloudGuard.DetectorRecipeEffectiveDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * (Updatable) Enables the control
         */
        isEnabled: boolean;
        /**
         * (Updatable) user defined labels for a detector rule
         */
        labels: string[];
        /**
         * (Updatable) The Risk Level
         */
        riskLevel: string;
    }

    export interface DetectorRecipeEffectiveDetectorRuleDetailConfiguration {
        /**
         * (Updatable) Unique name of the configuration
         */
        configKey: string;
        /**
         * (Updatable) configuration data type
         */
        dataType: string;
        /**
         * (Updatable) configuration name
         */
        name: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
        /**
         * (Updatable) List of configuration values
         */
        values: outputs.CloudGuard.DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue[];
    }

    export interface DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
        /**
         * (Updatable) configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * (Updatable) type of the managed list
         */
        managedListType: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
    }

    export interface GetDataMaskRuleTargetSelected {
        /**
         * Target selection.
         */
        kind: string;
        /**
         * Types of Targets
         */
        values: string[];
    }

    export interface GetDataMaskRulesDataMaskRuleCollection {
        items: outputs.CloudGuard.GetDataMaskRulesDataMaskRuleCollectionItem[];
    }

    export interface GetDataMaskRulesDataMaskRuleCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Data Mask Categories
         */
        dataMaskCategories: string[];
        /**
         * The status of the dataMaskRule.
         */
        dataMaskRuleStatus: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The data mask rule description.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * OCID of iamGroup
         */
        iamGroupId: string;
        /**
         * Unique identifier that is immutable on creation
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecyleDetails: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Target Selection eg select ALL or select on basis of TargetResourceTypes or TargetIds.
         */
        targetSelecteds: outputs.CloudGuard.GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected {
        /**
         * Target selection.
         */
        kind: string;
        /**
         * Types of Targets
         */
        values: string[];
    }

    export interface GetDataMaskRulesFilter {
        name: string;
        regex?: boolean;
        /**
         * Types of Targets
         */
        values: string[];
    }

    export interface GetDetectorRecipeDetectorRule {
        /**
         * List of CandidateResponderRule related to this rule
         */
        candidateResponderRules: outputs.CloudGuard.GetDetectorRecipeDetectorRuleCandidateResponderRule[];
        /**
         * Description for DetectorRecipeDetectorRule.
         */
        description: string;
        /**
         * Details of a Detector Rule
         */
        details: outputs.CloudGuard.GetDetectorRecipeDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * The unique identifier of the detector rule.
         */
        detectorRuleId: string;
        /**
         * Display name for DetectorRecipeDetectorRule.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for DetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The current state of the resource.
         */
        state: string;
        /**
         * The date and time the detector recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the detector recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetDetectorRecipeDetectorRuleCandidateResponderRule {
        /**
         * Display name for DetectorRecipeDetectorRule.
         */
        displayName: string;
        /**
         * Ocid for detector recipe
         */
        id: string;
        /**
         * Preferred state
         */
        isPreferred: boolean;
    }

    export interface GetDetectorRecipeDetectorRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * Configuration details
         */
        configurations: outputs.CloudGuard.GetDetectorRecipeDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Enables the control
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface GetDetectorRecipeDetectorRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.GetDetectorRecipeDetectorRuleDetailConfigurationValue[];
    }

    export interface GetDetectorRecipeDetectorRuleDetailConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetDetectorRecipeEffectiveDetectorRule {
        /**
         * List of CandidateResponderRule related to this rule
         */
        candidateResponderRules: outputs.CloudGuard.GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule[];
        /**
         * Description for DetectorRecipeDetectorRule.
         */
        description: string;
        /**
         * Details of a Detector Rule
         */
        details: outputs.CloudGuard.GetDetectorRecipeEffectiveDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * The unique identifier of the detector rule.
         */
        detectorRuleId: string;
        /**
         * Display name for DetectorRecipeDetectorRule.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for DetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The current state of the resource.
         */
        state: string;
        /**
         * The date and time the detector recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the detector recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
        /**
         * Display name for DetectorRecipeDetectorRule.
         */
        displayName: string;
        /**
         * Ocid for detector recipe
         */
        id: string;
        /**
         * Preferred state
         */
        isPreferred: boolean;
    }

    export interface GetDetectorRecipeEffectiveDetectorRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * Configuration details
         */
        configurations: outputs.CloudGuard.GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Enables the control
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue[];
    }

    export interface GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetDetectorRecipesDetectorRecipeCollection {
        items: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItem[];
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description for DetectorRecipeDetectorRule.
         */
        description: string;
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * List of detector rules for the detector type for recipe - user input
         */
        detectorRules: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * List of effective detector rules for the detector type for recipe after applying defaults
         */
        effectiveDetectorRules: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule[];
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Ocid for detector recipe
         */
        id: string;
        /**
         * Owner of detector recipe
         */
        owner: string;
        /**
         * Recipe Ocid of the Source Recipe to be cloned
         */
        sourceDetectorRecipeId: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the detector recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the detector recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule {
        /**
         * List of CandidateResponderRule related to this rule
         */
        candidateResponderRules: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule[];
        /**
         * Description for DetectorRecipeDetectorRule.
         */
        description: string;
        /**
         * Details of a Detector Rule
         */
        details: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * The unique identifier of the detector rule.
         */
        detectorRuleId: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for DetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * The date and time the detector recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the detector recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule {
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Ocid for detector recipe
         */
        id: string;
        /**
         * Preferred state
         */
        isPreferred: boolean;
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * Configuration details
         */
        configurations: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Enables the control
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue[];
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule {
        /**
         * List of CandidateResponderRule related to this rule
         */
        candidateResponderRules: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule[];
        /**
         * Description for DetectorRecipeDetectorRule.
         */
        description: string;
        /**
         * Details of a Detector Rule
         */
        details: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * The unique identifier of the detector rule.
         */
        detectorRuleId: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for DetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * The date and time the detector recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the detector recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule {
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Ocid for detector recipe
         */
        id: string;
        /**
         * Preferred state
         */
        isPreferred: boolean;
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * Configuration details
         */
        configurations: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Enables the control
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue[];
    }

    export interface GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetDetectorRecipesFilter {
        /**
         * configuration name
         */
        name: string;
        regex?: boolean;
        /**
         * List of configuration values
         */
        values: string[];
    }

    export interface GetGuardTargetTargetDetail {
        /**
         * The name of the security zone to associate this compartment with.
         */
        securityZoneDisplayName: string;
        /**
         * The OCID of the security zone to associate this compartment with.
         */
        securityZoneId: string;
        /**
         * possible type of targets
         */
        targetResourceType: string;
        /**
         * The list of security zone recipes to associate this compartment with.
         */
        targetSecurityZoneRecipes: outputs.CloudGuard.GetGuardTargetTargetDetailTargetSecurityZoneRecipe[];
    }

    export interface GetGuardTargetTargetDetailTargetSecurityZoneRecipe {
        /**
         * Compartment Identifier
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * ResponderRule display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * The list of `SecurityPolicy` ids that are included in the recipe
         */
        securityPolicies: string[];
        /**
         * The current state of the ResponderRule.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetTargetDetectorRecipe {
        /**
         * Compartment Identifier
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * Unique identifier for Detector Recipe of which this is an extension
         */
        detectorRecipeId: string;
        /**
         * List of detector rules for the detector type for recipe - user input
         */
        detectorRules: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeDetectorRule[];
        /**
         * ResponderRule display name.
         */
        displayName: string;
        /**
         * List of effective detector rules for the detector type for recipe after applying defaults
         */
        effectiveDetectorRules: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule[];
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * The current state of the ResponderRule.
         */
        state: string;
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetTargetDetectorRecipeDetectorRule {
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * The unique identifier of the detector rule.
         */
        detectorRuleId: string;
        /**
         * ResponderRule display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for TargetDetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The current state of the ResponderRule.
         */
        state: string;
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetTargetDetectorRecipeDetectorRuleDetail {
        /**
         * Condition group corresponding to each compartment
         */
        conditionGroups: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup[];
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup {
        /**
         * Compartment Identifier
         */
        compartmentId: string;
        /**
         * Base condition object
         */
        condition: string;
    }

    export interface GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue[];
    }

    export interface GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule {
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * The unique identifier of the detector rule.
         */
        detectorRuleId: string;
        /**
         * ResponderRule display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for TargetDetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The current state of the ResponderRule.
         */
        state: string;
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail {
        /**
         * Condition group corresponding to each compartment
         */
        conditionGroups: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup[];
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
        /**
         * Compartment Identifier
         */
        compartmentId: string;
        /**
         * Base condition object
         */
        condition: string;
    }

    export interface GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue[];
    }

    export interface GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetGuardTargetTargetResponderRecipe {
        /**
         * Compartment Identifier
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * ResponderRule display name.
         */
        displayName: string;
        /**
         * List of responder rules associated with the recipe after applying all defaults
         */
        effectiveResponderRules: outputs.CloudGuard.GetGuardTargetTargetResponderRecipeEffectiveResponderRule[];
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * Unique identifier for Responder Recipe of which this is an extension.
         */
        responderRecipeId: string;
        /**
         * List of responder rules associated with the recipe - user input
         */
        responderRules: outputs.CloudGuard.GetGuardTargetTargetResponderRecipeResponderRule[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetTargetResponderRecipeEffectiveResponderRule {
        /**
         * Compartment Identifier
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail[];
        /**
         * ResponderRule display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * Unique ResponderRule identifier.
         */
        responderRuleId: string;
        /**
         * The current state of the ResponderRule.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetGuardTargetTargetResponderRecipeResponderRule {
        /**
         * Compartment Identifier
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetGuardTargetTargetResponderRecipeResponderRuleDetail[];
        /**
         * ResponderRule display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * Unique ResponderRule identifier.
         */
        responderRuleId: string;
        /**
         * The current state of the ResponderRule.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface GetGuardTargetTargetResponderRecipeResponderRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetGuardTargetsFilter {
        /**
         * configuration name
         */
        name: string;
        regex?: boolean;
        /**
         * List of configuration values
         */
        values: string[];
    }

    export interface GetGuardTargetsTargetCollection {
        items: outputs.CloudGuard.GetGuardTargetsTargetCollectionItem[];
    }

    export interface GetGuardTargetsTargetCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * List of inherited compartments
         */
        inheritedByCompartments: string[];
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecyleDetails: string;
        /**
         * Total number of recipes attached to target
         */
        recipeCount: number;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Details specific to the target type.
         */
        targetDetails: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetail[];
        /**
         * List of detector recipes associated with target
         */
        targetDetectorRecipes: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipe[];
        /**
         * Resource ID which the target uses to monitor
         */
        targetResourceId: string;
        /**
         * possible type of targets
         */
        targetResourceType: string;
        /**
         * List of responder recipes associated with target
         */
        targetResponderRecipes: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetResponderRecipe[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetail {
        /**
         * The name of the security zone to associate this compartment with.
         */
        securityZoneDisplayName: string;
        /**
         * The OCID of the security zone to associate this compartment with.
         */
        securityZoneId: string;
        /**
         * possible type of targets
         */
        targetResourceType: string;
        /**
         * The list of security zone recipes to associate this compartment with.
         */
        targetSecurityZoneRecipes: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe[];
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * The list of `SecurityPolicy` ids that are included in the recipe
         */
        securityPolicies: string[];
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipe {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * Unique identifier for Detector Recipe of which this is an extension
         */
        detectorRecipeId: string;
        /**
         * List of detector rules for the detector type for recipe - user input
         */
        detectorRules: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * List of effective detector rules for the detector type for recipe after applying defaults
         */
        effectiveDetectorRules: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule[];
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule {
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * The unique identifier of the detector rule.
         */
        detectorRuleId: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for TargetDetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail {
        /**
         * Condition group corresponding to each compartment
         */
        conditionGroups: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup[];
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Base condition object
         */
        condition: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue[];
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule {
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * The unique identifier of the detector rule.
         */
        detectorRuleId: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for TargetDetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail {
        /**
         * Condition group corresponding to each compartment
         */
        conditionGroups: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup[];
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Base condition object
         */
        condition: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue[];
    }

    export interface GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetResponderRecipe {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * List of responder rules associated with the recipe after applying all defaults
         */
        effectiveResponderRules: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule[];
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * Unique identifier for Responder Recipe of which this is an extension.
         */
        responderRecipeId: string;
        /**
         * List of responder rules associated with the recipe - user input
         */
        responderRules: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * Unique ResponderRule identifier.
         */
        responderRuleId: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * Unique ResponderRule identifier.
         */
        responderRuleId: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetManagedListsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedListsManagedListCollection {
        items: outputs.CloudGuard.GetManagedListsManagedListCollectionItem[];
    }

    export interface GetManagedListsManagedListCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * ManagedList description.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * provider of the feed
         */
        feedProvider: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier that is immutable on creation
         */
        id: string;
        /**
         * If this list is editable or not
         */
        isEditable: boolean;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecyleDetails: string;
        /**
         * List of ManagedListItem
         */
        listItems: string[];
        /**
         * The type of the ManagedList.
         */
        listType: string;
        /**
         * OCID of the Source ManagedList
         */
        sourceManagedListId: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the managed list was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the managed list was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetResponderRecipeEffectiveResponderRule {
        /**
         * Compartment Identifier
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetResponderRecipeEffectiveResponderRuleDetail[];
        /**
         * ResponderRule display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * Identifier for ResponderRule.
         */
        responderRuleId: string;
        /**
         * The current state of the Example.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the responder recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the responder recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface GetResponderRecipeEffectiveResponderRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetResponderRecipeEffectiveResponderRuleDetailConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface GetResponderRecipeEffectiveResponderRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetResponderRecipeResponderRule {
        /**
         * Compartment Identifier
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetResponderRecipeResponderRuleDetail[];
        /**
         * ResponderRule display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * Identifier for ResponderRule.
         */
        responderRuleId: string;
        /**
         * The current state of the Example.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the responder recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the responder recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface GetResponderRecipeResponderRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetResponderRecipeResponderRuleDetailConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface GetResponderRecipeResponderRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetResponderRecipesFilter {
        /**
         * configuration name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetResponderRecipesResponderRecipeCollection {
        items: outputs.CloudGuard.GetResponderRecipesResponderRecipeCollectionItem[];
    }

    export interface GetResponderRecipesResponderRecipeCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * List of responder rules associated with the recipe
         */
        effectiveResponderRules: outputs.CloudGuard.GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule[];
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Identifier for ResponderRecipe.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * List of responder rules associated with the recipe
         */
        responderRules: outputs.CloudGuard.GetResponderRecipesResponderRecipeCollectionItemResponderRule[];
        /**
         * The id of the source responder recipe.
         */
        sourceResponderRecipeId: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the responder recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the responder recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * Identifier for ResponderRule.
         */
        responderRuleId: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the responder recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the responder recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetResponderRecipesResponderRecipeCollectionItemResponderRule {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * ResponderRule description.
         */
        description: string;
        /**
         * Details of ResponderRule.
         */
        details: outputs.CloudGuard.GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * Identifier for ResponderRule.
         */
        responderRuleId: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the responder recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the responder recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface GetSecurityPoliciesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSecurityPoliciesSecurityPolicyCollection {
        items: outputs.CloudGuard.GetSecurityPoliciesSecurityPolicyCollectionItem[];
    }

    export interface GetSecurityPoliciesSecurityPolicyCollectionItem {
        /**
         * The category of security policy
         */
        category: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The security policy's description
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A shorter version of the security policy's name
         */
        friendlyName: string;
        /**
         * The unique identifier of the security zone policy (`SecurityPolicy`)
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, this can be used to provide actionable information for a resource in a `Failed` state.
         */
        lifecycleDetails: string;
        /**
         * The owner of the security policy
         */
        owner: string;
        /**
         * The list of services that the security policy protects
         */
        services: string[];
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the security policy was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the security policy was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetSecurityRecipesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSecurityRecipesSecurityRecipeCollection {
        items: outputs.CloudGuard.GetSecurityRecipesSecurityRecipeCollectionItem[];
    }

    export interface GetSecurityRecipesSecurityRecipeCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The recipe's description
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The unique identifier of the security zone recipe (`SecurityRecipe`)
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, this can be used to provide actionable information for a recipe in the `Failed` state.
         */
        lifecycleDetails: string;
        /**
         * The owner of the recipe
         */
        owner: string;
        /**
         * The list of `SecurityPolicy` ids that are included in the recipe
         */
        securityPolicies: string[];
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the recipe was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the recipe was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetSecurityZonesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSecurityZonesSecurityZoneCollection {
        items: outputs.CloudGuard.GetSecurityZonesSecurityZoneCollectionItem[];
    }

    export interface GetSecurityZonesSecurityZoneCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The security zone's description
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The unique identifier of the security zone (`SecurityZone`)
         */
        id: string;
        /**
         * List of inherited compartments
         */
        inheritedByCompartments: string[];
        /**
         * A message describing the current state in more detail. For example, this can be used to provide actionable information for a zone in the `Failed` state.
         */
        lifecycleDetails: string;
        /**
         * The OCID of the recipe (`SecurityRecipe`) for the security zone
         */
        securityZoneRecipeId: string;
        /**
         * The OCID of the target associated with the security zone
         */
        securityZoneTargetId: string;
        /**
         * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the security zone was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the security zone was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface ResponderRecipeEffectiveResponderRule {
        /**
         * (Updatable) Compartment Identifier
         */
        compartmentId: string;
        /**
         * (Updatable) Responder recipe description.
         */
        description: string;
        /**
         * (Updatable) Details of UpdateResponderRuleDetails.
         */
        details: outputs.CloudGuard.ResponderRecipeEffectiveResponderRuleDetail[];
        /**
         * (Updatable) Responder recipe display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * (Updatable) ResponderRecipeRule Identifier
         */
        responderRuleId: string;
        /**
         * The current state of the Example.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the responder recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the responder recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface ResponderRecipeEffectiveResponderRuleDetail {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.ResponderRecipeEffectiveResponderRuleDetailConfiguration[];
        /**
         * (Updatable) Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface ResponderRecipeEffectiveResponderRuleDetailConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface ResponderRecipeResponderRule {
        /**
         * (Updatable) Compartment Identifier
         */
        compartmentId: string;
        /**
         * (Updatable) Responder recipe description.
         */
        description: string;
        /**
         * (Updatable) Details of UpdateResponderRuleDetails.
         */
        details: outputs.CloudGuard.ResponderRecipeResponderRuleDetails;
        /**
         * (Updatable) Responder recipe display name.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * (Updatable) ResponderRecipeRule Identifier
         */
        responderRuleId: string;
        /**
         * The current state of the Example.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the responder recipe was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the responder recipe was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface ResponderRecipeResponderRuleDetails {
        /**
         * Base condition object
         */
        condition: string;
        /**
         * ResponderRule configurations
         */
        configurations: outputs.CloudGuard.ResponderRecipeResponderRuleDetailsConfiguration[];
        /**
         * (Updatable) Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface ResponderRecipeResponderRuleDetailsConfiguration {
        /**
         * Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration name
         */
        name: string;
        /**
         * configuration value
         */
        value: string;
    }

    export interface TargetTargetDetail {
        /**
         * The name of the security zone to associate this compartment with.
         */
        securityZoneDisplayName: string;
        /**
         * The OCID of the security zone to associate this compartment with.
         */
        securityZoneId: string;
        /**
         * possible type of targets(compartment/HCMCloud/ERPCloud)
         */
        targetResourceType: string;
        /**
         * The list of security zone recipes to associate this compartment with.
         */
        targetSecurityZoneRecipes: outputs.CloudGuard.TargetTargetDetailTargetSecurityZoneRecipe[];
    }

    export interface TargetTargetDetailTargetSecurityZoneRecipe {
        /**
         * (Updatable) compartment associated with condition
         */
        compartmentId: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The target description.
         */
        description: string;
        /**
         * (Updatable) DetectorTemplate identifier.
         */
        displayName: string;
        /**
         * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * The list of `SecurityPolicy` ids that are included in the recipe
         */
        securityPolicies: string[];
        /**
         * (Updatable) The current state of the DetectorRule.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface TargetTargetDetectorRecipe {
        /**
         * (Updatable) compartment associated with condition
         */
        compartmentId: string;
        /**
         * The target description.
         */
        description: string;
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * Identifier for DetectorRecipe.
         */
        detectorRecipeId: string;
        /**
         * (Updatable) Overrides to be applied to Detector Rule associated with the target
         */
        detectorRules: outputs.CloudGuard.TargetTargetDetectorRecipeDetectorRule[];
        /**
         * (Updatable) DetectorTemplate identifier.
         */
        displayName: string;
        /**
         * List of effective detector rules for the detector type for recipe after applying defaults
         */
        effectiveDetectorRules: outputs.CloudGuard.TargetTargetDetectorRecipeEffectiveDetectorRule[];
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * (Updatable) The current state of the DetectorRule.
         */
        state: string;
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface TargetTargetDetectorRecipeDetectorRule {
        /**
         * The target description.
         */
        description: string;
        /**
         * (Updatable) Details of ResponderRule.
         */
        details: outputs.CloudGuard.TargetTargetDetectorRecipeDetectorRuleDetails;
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * (Updatable) Identifier for DetectorRule.
         */
        detectorRuleId: string;
        /**
         * (Updatable) DetectorTemplate identifier.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for TargetDetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * (Updatable) The current state of the DetectorRule.
         */
        state: string;
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface TargetTargetDetectorRecipeDetectorRuleDetails {
        /**
         * (Updatable) Condition group corresponding to each compartment
         */
        conditionGroups: outputs.CloudGuard.TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup[];
        /**
         * (Updatable) Configurations associated with the ResponderRule
         */
        configurations: outputs.CloudGuard.TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
        /**
         * (Updatable) compartment associated with condition
         */
        compartmentId: string;
        /**
         * (Updatable) Base condition object
         */
        condition: string;
    }

    export interface TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
        /**
         * (Updatable) Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * (Updatable) configuration name
         */
        name: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue[];
    }

    export interface TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
    }

    export interface TargetTargetDetectorRecipeEffectiveDetectorRule {
        /**
         * The target description.
         */
        description: string;
        /**
         * (Updatable) Details of ResponderRule.
         */
        details: outputs.CloudGuard.TargetTargetDetectorRecipeEffectiveDetectorRuleDetail[];
        /**
         * detector for the rule
         */
        detector: string;
        /**
         * (Updatable) Identifier for DetectorRule.
         */
        detectorRuleId: string;
        /**
         * (Updatable) DetectorTemplate identifier.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of cloudguard managed list types related to this rule
         */
        managedListTypes: string[];
        /**
         * Recommendation for TargetDetectorRecipeDetectorRule
         */
        recommendation: string;
        /**
         * resource type of the configuration to which the rule is applied
         */
        resourceType: string;
        /**
         * service type of the configuration to which the rule is applied
         */
        serviceType: string;
        /**
         * (Updatable) The current state of the DetectorRule.
         */
        state: string;
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface TargetTargetDetectorRecipeEffectiveDetectorRuleDetail {
        /**
         * (Updatable) Condition group corresponding to each compartment
         */
        conditionGroups: outputs.CloudGuard.TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup[];
        /**
         * (Updatable) Configurations associated with the ResponderRule
         */
        configurations: outputs.CloudGuard.TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration[];
        /**
         * configuration allowed or not
         */
        isConfigurationAllowed: boolean;
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * user defined labels for a detector rule
         */
        labels: string[];
        /**
         * The Risk Level
         */
        riskLevel: string;
    }

    export interface TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
        /**
         * (Updatable) compartment associated with condition
         */
        compartmentId: string;
        /**
         * (Updatable) Base condition object
         */
        condition: string;
    }

    export interface TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
        /**
         * (Updatable) Unique name of the configuration
         */
        configKey: string;
        /**
         * configuration data type
         */
        dataType: string;
        /**
         * (Updatable) configuration name
         */
        name: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
        /**
         * List of configuration values
         */
        values: outputs.CloudGuard.TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue[];
    }

    export interface TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
        /**
         * configuration list item type, either CUSTOM or MANAGED
         */
        listType: string;
        /**
         * type of the managed list
         */
        managedListType: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
    }

    export interface TargetTargetResponderRecipe {
        /**
         * (Updatable) compartment associated with condition
         */
        compartmentId: string;
        /**
         * The target description.
         */
        description: string;
        /**
         * (Updatable) DetectorTemplate identifier.
         */
        displayName: string;
        /**
         * List of responder rules associated with the recipe after applying all defaults
         */
        effectiveResponderRules: outputs.CloudGuard.TargetTargetResponderRecipeEffectiveResponderRule[];
        /**
         * Unique identifier of TargetResponderRecipe that can't be changed after creation.
         */
        id: string;
        /**
         * Owner of ResponderRecipe
         */
        owner: string;
        /**
         * Identifier for ResponderRecipe.
         */
        responderRecipeId: string;
        /**
         * (Updatable) Override responder rules associated with reponder recipe in a target.
         */
        responderRules: outputs.CloudGuard.TargetTargetResponderRecipeResponderRule[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface TargetTargetResponderRecipeEffectiveResponderRule {
        /**
         * (Updatable) compartment associated with condition
         */
        compartmentId: string;
        /**
         * The target description.
         */
        description: string;
        /**
         * (Updatable) Details of ResponderRule.
         */
        details: outputs.CloudGuard.TargetTargetResponderRecipeEffectiveResponderRuleDetail[];
        /**
         * (Updatable) DetectorTemplate identifier.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * (Updatable) Identifier for ResponderRule.
         */
        responderRuleId: string;
        /**
         * (Updatable) The current state of the DetectorRule.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface TargetTargetResponderRecipeEffectiveResponderRuleDetail {
        /**
         * (Updatable) Base condition object
         */
        condition: string;
        /**
         * (Updatable) Configurations associated with the ResponderRule
         */
        configurations: outputs.CloudGuard.TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * (Updatable) Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
        /**
         * (Updatable) Unique name of the configuration
         */
        configKey: string;
        /**
         * (Updatable) configuration name
         */
        name: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
    }

    export interface TargetTargetResponderRecipeResponderRule {
        /**
         * (Updatable) compartment associated with condition
         */
        compartmentId: string;
        /**
         * The target description.
         */
        description: string;
        /**
         * (Updatable) Details of ResponderRule.
         */
        details: outputs.CloudGuard.TargetTargetResponderRecipeResponderRuleDetails;
        /**
         * (Updatable) DetectorTemplate identifier.
         */
        displayName: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * List of Policy
         */
        policies: string[];
        /**
         * (Updatable) Identifier for ResponderRule.
         */
        responderRuleId: string;
        /**
         * (Updatable) The current state of the DetectorRule.
         */
        state: string;
        /**
         * Supported Execution Modes
         */
        supportedModes: string[];
        /**
         * The date and time the target was created. Format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the target was updated. Format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * Type of Responder
         */
        type: string;
    }

    export interface TargetTargetResponderRecipeResponderRuleDetails {
        /**
         * (Updatable) Base condition object
         */
        condition: string;
        /**
         * (Updatable) Configurations associated with the ResponderRule
         */
        configurations: outputs.CloudGuard.TargetTargetResponderRecipeResponderRuleDetailsConfiguration[];
        /**
         * Identifies state for ResponderRule
         */
        isEnabled: boolean;
        /**
         * (Updatable) Execution Mode for ResponderRule
         */
        mode: string;
    }

    export interface TargetTargetResponderRecipeResponderRuleDetailsConfiguration {
        /**
         * (Updatable) Unique name of the configuration
         */
        configKey: string;
        /**
         * (Updatable) configuration name
         */
        name: string;
        /**
         * (Updatable) configuration value
         */
        value: string;
    }
}

export namespace ComputeInstanceAgent {
    export interface GetInstanceAgentPluginsFilter {
        /**
         * The plugin name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInstanceAgentPluginsInstanceAgentPlugin {
        /**
         * The optional message from the agent plugin
         */
        message: string;
        /**
         * The plugin name
         */
        name: string;
        /**
         * The plugin status
         */
        status: string;
        /**
         * The last update time of the plugin in UTC
         */
        timeLastUpdatedUtc: string;
    }

    export interface GetInstanceAvailablePluginAvailablePlugin {
        /**
         * Is the plugin enabled or disabled by default
         */
        isEnabledByDefault: boolean;
        /**
         * Is the plugin supported or not
         */
        isSupported: boolean;
        /**
         * The plugin name
         */
        name: string;
        /**
         * A brief description of the plugin functionality
         */
        summary: string;
    }

    export interface GetInstanceAvailablePluginFilter {
        /**
         * The plugin name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace ContainerEngine {
    export interface ClusterClusterPodNetworkOption {
        /**
         * The CNI used by the node pools of this cluster
         */
        cniType: string;
    }

    export interface ClusterEndpoint {
        /**
         * The non-native networking Kubernetes API server endpoint.
         */
        kubernetes: string;
        /**
         * The private native networking Kubernetes API server endpoint.
         */
        privateEndpoint: string;
        /**
         * The public native networking Kubernetes API server endpoint, if one was requested.
         */
        publicEndpoint: string;
        /**
         * The FQDN assigned to the Kubernetes API private endpoint. Example: 'https://yourVcnHostnameEndpoint'
         */
        vcnHostnameEndpoint: string;
    }

    export interface ClusterEndpointConfig {
        /**
         * Whether the cluster should be assigned a public IP address. Defaults to false. If set to true on a private subnet, the cluster provisioning will fail.
         */
        isPublicIpEnabled: boolean;
        /**
         * A list of the OCIDs of the network security groups (NSGs) to apply to the cluster endpoint. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
         */
        nsgIds?: string[];
        /**
         * The OCID of the regional subnet in which to place the Cluster endpoint.
         */
        subnetId: string;
    }

    export interface ClusterImagePolicyConfig {
        /**
         * (Updatable) Whether the image verification policy is enabled. Defaults to false. If set to true, the images will be verified against the policy at runtime.
         */
        isPolicyEnabled: boolean;
        /**
         * (Updatable) A list of KMS key details.
         */
        keyDetails: outputs.ContainerEngine.ClusterImagePolicyConfigKeyDetail[];
    }

    export interface ClusterImagePolicyConfigKeyDetail {
        /**
         * The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption. When used, `kubernetesVersion` must be at least `v1.13.0`.
         */
        kmsKeyId: string;
    }

    export interface ClusterMetadata {
        /**
         * The user who created the cluster.
         */
        createdByUserId: string;
        /**
         * The OCID of the work request which created the cluster.
         */
        createdByWorkRequestId: string;
        /**
         * The user who deleted the cluster.
         */
        deletedByUserId: string;
        /**
         * The OCID of the work request which deleted the cluster.
         */
        deletedByWorkRequestId: string;
        /**
         * The time the cluster was created.
         */
        timeCreated: string;
        /**
         * The time the cluster was deleted.
         */
        timeDeleted: string;
        /**
         * The time the cluster was updated.
         */
        timeUpdated: string;
        /**
         * The user who updated the cluster.
         */
        updatedByUserId: string;
        /**
         * The OCID of the work request which updated the cluster.
         */
        updatedByWorkRequestId: string;
    }

    export interface ClusterOptions {
        /**
         * Configurable cluster add-ons
         */
        addOns: outputs.ContainerEngine.ClusterOptionsAddOns;
        /**
         * (Updatable) Configurable cluster admission controllers
         */
        admissionControllerOptions: outputs.ContainerEngine.ClusterOptionsAdmissionControllerOptions;
        /**
         * Network configuration for Kubernetes.
         */
        kubernetesNetworkConfig: outputs.ContainerEngine.ClusterOptionsKubernetesNetworkConfig;
        /**
         * (Updatable) Configuration to be applied to block volumes created by Kubernetes Persistent Volume Claims (PVC)
         */
        persistentVolumeConfig: outputs.ContainerEngine.ClusterOptionsPersistentVolumeConfig;
        /**
         * (Updatable) Configuration to be applied to load balancers created by Kubernetes services
         */
        serviceLbConfig: outputs.ContainerEngine.ClusterOptionsServiceLbConfig;
        /**
         * The OCIDs of the subnets used for Kubernetes services load balancers.
         */
        serviceLbSubnetIds: string[];
    }

    export interface ClusterOptionsAddOns {
        /**
         * Whether or not to enable the Kubernetes Dashboard add-on.
         */
        isKubernetesDashboardEnabled: boolean;
        /**
         * Whether or not to enable the Tiller add-on.
         */
        isTillerEnabled: boolean;
    }

    export interface ClusterOptionsAdmissionControllerOptions {
        /**
         * (Updatable) Whether or not to enable the Pod Security Policy admission controller.
         */
        isPodSecurityPolicyEnabled: boolean;
    }

    export interface ClusterOptionsKubernetesNetworkConfig {
        /**
         * The CIDR block for Kubernetes pods. Optional, defaults to 10.244.0.0/16.
         */
        podsCidr: string;
        /**
         * The CIDR block for Kubernetes services. Optional, defaults to 10.96.0.0/16.
         */
        servicesCidr: string;
    }

    export interface ClusterOptionsPersistentVolumeConfig {
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
    }

    export interface ClusterOptionsServiceLbConfig {
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
    }

    export interface GetClusterOptionClusterPodNetworkOption {
        /**
         * The CNI used by the node pools of this cluster
         */
        cniType: string;
    }

    export interface GetClustersCluster {
        /**
         * Available Kubernetes versions to which the clusters masters may be upgraded.
         */
        availableKubernetesUpgrades: string[];
        /**
         * Available CNIs and network options for existing and new node pools of the cluster
         */
        clusterPodNetworkOptions: outputs.ContainerEngine.GetClustersClusterClusterPodNetworkOption[];
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The network configuration for access to the Cluster control plane.
         */
        endpointConfigs: outputs.ContainerEngine.GetClustersClusterEndpointConfig[];
        /**
         * Endpoints served up by the cluster masters.
         */
        endpoints: outputs.ContainerEngine.GetClustersClusterEndpoint[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the cluster.
         */
        id: string;
        /**
         * The image verification policy for signature validation.
         */
        imagePolicyConfigs: outputs.ContainerEngine.GetClustersClusterImagePolicyConfig[];
        /**
         * The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
         */
        kmsKeyId: string;
        /**
         * The version of Kubernetes running on the cluster masters.
         */
        kubernetesVersion: string;
        /**
         * Details about the state of the cluster masters.
         */
        lifecycleDetails: string;
        /**
         * Metadata about the cluster.
         */
        metadatas: outputs.ContainerEngine.GetClustersClusterMetadata[];
        /**
         * The name to filter on.
         */
        name: string;
        /**
         * Optional attributes for the cluster.
         */
        options: outputs.ContainerEngine.GetClustersClusterOption[];
        /**
         * A cluster lifecycle state to filter on. Can have multiple parameters of this name.
         */
        state: string;
        /**
         * The OCID of the virtual cloud network (VCN) in which the cluster exists.
         */
        vcnId: string;
    }

    export interface GetClustersClusterClusterPodNetworkOption {
        /**
         * The CNI used by the node pools of this cluster
         */
        cniType: string;
    }

    export interface GetClustersClusterEndpoint {
        /**
         * The non-native networking Kubernetes API server endpoint.
         */
        kubernetes: string;
        /**
         * The private native networking Kubernetes API server endpoint.
         */
        privateEndpoint: string;
        /**
         * The public native networking Kubernetes API server endpoint, if one was requested.
         */
        publicEndpoint: string;
        /**
         * The FQDN assigned to the Kubernetes API private endpoint. Example: 'https://yourVcnHostnameEndpoint'
         */
        vcnHostnameEndpoint: string;
    }

    export interface GetClustersClusterEndpointConfig {
        /**
         * Whether the cluster should be assigned a public IP address. Defaults to false. If set to true on a private subnet, the cluster provisioning will fail.
         */
        isPublicIpEnabled: boolean;
        /**
         * A list of the OCIDs of the network security groups (NSGs) to apply to the cluster endpoint. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * The OCID of the regional subnet in which to place the Cluster endpoint.
         */
        subnetId: string;
    }

    export interface GetClustersClusterImagePolicyConfig {
        /**
         * Whether the image verification policy is enabled. Defaults to false. If set to true, the images will be verified against the policy at runtime.
         */
        isPolicyEnabled: boolean;
        /**
         * A list of KMS key details.
         */
        keyDetails: outputs.ContainerEngine.GetClustersClusterImagePolicyConfigKeyDetail[];
    }

    export interface GetClustersClusterImagePolicyConfigKeyDetail {
        /**
         * The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
         */
        kmsKeyId: string;
    }

    export interface GetClustersClusterMetadata {
        /**
         * The user who created the cluster.
         */
        createdByUserId: string;
        /**
         * The OCID of the work request which created the cluster.
         */
        createdByWorkRequestId: string;
        /**
         * The user who deleted the cluster.
         */
        deletedByUserId: string;
        /**
         * The OCID of the work request which deleted the cluster.
         */
        deletedByWorkRequestId: string;
        /**
         * The time the cluster was created.
         */
        timeCreated: string;
        /**
         * The time the cluster was deleted.
         */
        timeDeleted: string;
        /**
         * The time the cluster was updated.
         */
        timeUpdated: string;
        /**
         * The user who updated the cluster.
         */
        updatedByUserId: string;
        /**
         * The OCID of the work request which updated the cluster.
         */
        updatedByWorkRequestId: string;
    }

    export interface GetClustersClusterOption {
        /**
         * Configurable cluster add-ons
         */
        addOns: outputs.ContainerEngine.GetClustersClusterOptionAddOn[];
        /**
         * Configurable cluster admission controllers
         */
        admissionControllerOptions: outputs.ContainerEngine.GetClustersClusterOptionAdmissionControllerOption[];
        /**
         * Network configuration for Kubernetes.
         */
        kubernetesNetworkConfigs: outputs.ContainerEngine.GetClustersClusterOptionKubernetesNetworkConfig[];
        /**
         * Configuration to be applied to block volumes created by Kubernetes Persistent Volume Claims (PVC)
         */
        persistentVolumeConfigs: outputs.ContainerEngine.GetClustersClusterOptionPersistentVolumeConfig[];
        /**
         * Configuration to be applied to load balancers created by Kubernetes services
         */
        serviceLbConfigs: outputs.ContainerEngine.GetClustersClusterOptionServiceLbConfig[];
        /**
         * The OCIDs of the subnets used for Kubernetes services load balancers.
         */
        serviceLbSubnetIds: string[];
    }

    export interface GetClustersClusterOptionAddOn {
        /**
         * Whether or not to enable the Kubernetes Dashboard add-on.
         */
        isKubernetesDashboardEnabled: boolean;
        /**
         * Whether or not to enable the Tiller add-on.
         */
        isTillerEnabled: boolean;
    }

    export interface GetClustersClusterOptionAdmissionControllerOption {
        /**
         * Whether or not to enable the Pod Security Policy admission controller.
         */
        isPodSecurityPolicyEnabled: boolean;
    }

    export interface GetClustersClusterOptionKubernetesNetworkConfig {
        /**
         * The CIDR block for Kubernetes pods. Optional, defaults to 10.244.0.0/16.
         */
        podsCidr: string;
        /**
         * The CIDR block for Kubernetes services. Optional, defaults to 10.96.0.0/16.
         */
        servicesCidr: string;
    }

    export interface GetClustersClusterOptionPersistentVolumeConfig {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
    }

    export interface GetClustersClusterOptionServiceLbConfig {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
    }

    export interface GetClustersFilter {
        /**
         * The name to filter on.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNodePoolInitialNodeLabel {
        /**
         * The key of the pair.
         */
        key: string;
        /**
         * The value of the pair.
         */
        value: string;
    }

    export interface GetNodePoolNode {
        /**
         * The name of the availability domain in which this node is placed.
         */
        availabilityDomain: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * An error that may be associated with the node.
         */
        errors: outputs.ContainerEngine.GetNodePoolNodeError[];
        /**
         * The fault domain of this node.
         */
        faultDomain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the compute instance backing this node.
         */
        id: string;
        /**
         * The version of Kubernetes this node is running.
         */
        kubernetesVersion: string;
        /**
         * Details about the state of the node.
         */
        lifecycleDetails: string;
        /**
         * The name of the node.
         */
        name: string;
        /**
         * The OCID of the node pool.
         */
        nodePoolId: string;
        /**
         * The private IP address of this node.
         */
        privateIp: string;
        /**
         * The public IP address of this node.
         */
        publicIp: string;
        /**
         * The state of the nodepool.
         */
        state: string;
        /**
         * The OCID of the subnet in which this node is placed.
         */
        subnetId: string;
    }

    export interface GetNodePoolNodeConfigDetail {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Whether to enable in-transit encryption for the data volume's paravirtualized attachment. This field applies to both block volumes and boot volumes. The default value is false.
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * The OCID of the Key Management Service key assigned to the boot volume.
         */
        kmsKeyId: string;
        /**
         * The CNI related configuration of pods in the node pool.
         */
        nodePoolPodNetworkOptionDetails: outputs.ContainerEngine.GetNodePoolNodeConfigDetailNodePoolPodNetworkOptionDetail[];
        /**
         * The OCIDs of the Network Security Group(s) to associate nodes for this node pool with. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * The placement configurations for the node pool. Provide one placement configuration for each availability domain in which you intend to launch a node.
         */
        placementConfigs: outputs.ContainerEngine.GetNodePoolNodeConfigDetailPlacementConfig[];
        /**
         * The number of nodes in the node pool.
         */
        size: number;
    }

    export interface GetNodePoolNodeConfigDetailNodePoolPodNetworkOptionDetail {
        /**
         * The CNI plugin used by this node pool
         */
        cniType: string;
        /**
         * The max number of pods per node in the node pool. This value will be limited by the number of VNICs attachable to the node pool shape
         */
        maxPodsPerNode: number;
        /**
         * The OCIDs of the Network Security Group(s) to associate pods for this node pool with. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
         */
        podNsgIds: string[];
        /**
         * The OCIDs of the subnets in which to place pods for this node pool. This can be one of the node pool subnet IDs
         */
        podSubnetIds: string[];
    }

    export interface GetNodePoolNodeConfigDetailPlacementConfig {
        /**
         * The name of the availability domain in which this node is placed.
         */
        availabilityDomain: string;
        /**
         * The OCID of the compute capacity reservation in which to place the compute instance.
         */
        capacityReservationId: string;
        /**
         * A list of fault domains in which to place nodes.
         */
        faultDomains: string[];
        /**
         * The OCID of the subnet in which this node is placed.
         */
        subnetId: string;
    }

    export interface GetNodePoolNodeError {
        /**
         * A short error code that defines the upstream error, meant for programmatic parsing. See [API Errors](https://docs.cloud.oracle.com/iaas/Content/API/References/apierrors.htm).
         */
        code: string;
        /**
         * A human-readable error string of the upstream error.
         */
        message: string;
        /**
         * The status of the HTTP response encountered in the upstream error.
         */
        status: string;
    }

    export interface GetNodePoolNodeEvictionNodePoolSetting {
        /**
         * Duration after which OKE will give up eviction of the pods on the node. PT0M will indicate you want to delete the node without cordon and drain. Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601 e.g PT30M
         */
        evictionGraceDuration: string;
        /**
         * If the underlying compute instance should be deleted if you cannot evict all the pods in grace period
         */
        isForceDeleteAfterGraceDuration: boolean;
    }

    export interface GetNodePoolNodeShapeConfig {
        /**
         * The total amount of memory available to each node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to each node in the node pool. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetNodePoolNodeSource {
        /**
         * The OCID of the image used to boot the node.
         */
        imageId: string;
        /**
         * The user-friendly name of the entity corresponding to the OCID.
         */
        sourceName: string;
        /**
         * The source type for the node. Use `IMAGE` when specifying an OCID of an image.
         */
        sourceType: string;
    }

    export interface GetNodePoolNodeSourceDetail {
        /**
         * The size of the boot volume in GBs. Minimum value is 50 GB. See [here](https://docs.cloud.oracle.com/en-us/iaas/Content/Block/Concepts/bootvolumes.htm) for max custom boot volume sizing and OS-specific requirements.
         */
        bootVolumeSizeInGbs: string;
        /**
         * The OCID of the image used to boot the node.
         */
        imageId: string;
        /**
         * The source type for the node. Use `IMAGE` when specifying an OCID of an image.
         */
        sourceType: string;
    }

    export interface GetNodePoolOptionSource {
        /**
         * The OCID of the image.
         */
        imageId: string;
        /**
         * The user-friendly name of the entity corresponding to the OCID.
         */
        sourceName: string;
        /**
         * The source type of this option. `IMAGE` means the OCID is of an image.
         */
        sourceType: string;
    }

    export interface GetNodePoolsFilter {
        /**
         * The name to filter on.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNodePoolsNodePool {
        /**
         * The OCID of the cluster.
         */
        clusterId: string;
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the compute instance backing this node.
         */
        id: string;
        /**
         * A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
         */
        initialNodeLabels: outputs.ContainerEngine.GetNodePoolsNodePoolInitialNodeLabel[];
        /**
         * The version of Kubernetes this node is running.
         */
        kubernetesVersion: string;
        /**
         * Details about the state of the node.
         */
        lifecycleDetails: string;
        /**
         * The name to filter on.
         */
        name: string;
        /**
         * The configuration of nodes in the node pool.
         */
        nodeConfigDetails: outputs.ContainerEngine.GetNodePoolsNodePoolNodeConfigDetail[];
        /**
         * Node Eviction Details configuration
         */
        nodeEvictionNodePoolSettings: outputs.ContainerEngine.GetNodePoolsNodePoolNodeEvictionNodePoolSetting[];
        /**
         * Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
         *
         * @deprecated The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
         */
        nodeImageId: string;
        /**
         * Deprecated. see `nodeSource`. The name of the image running on the nodes in the node pool.
         *
         * @deprecated The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
         */
        nodeImageName: string;
        /**
         * A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
         */
        nodeMetadata: {[key: string]: any};
        /**
         * The OCID of the node pool to which this node belongs.
         */
        nodePoolId: string;
        /**
         * The name of the node shape of the nodes in the node pool.
         */
        nodeShape: string;
        /**
         * The shape configuration of the nodes.
         */
        nodeShapeConfigs: outputs.ContainerEngine.GetNodePoolsNodePoolNodeShapeConfig[];
        /**
         * Source running on the nodes in the node pool.
         */
        nodeSourceDetails: outputs.ContainerEngine.GetNodePoolsNodePoolNodeSourceDetail[];
        /**
         * Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
         */
        nodeSources: outputs.ContainerEngine.GetNodePoolsNodePoolNodeSource[];
        /**
         * The nodes in the node pool.
         */
        nodes: outputs.ContainerEngine.GetNodePoolsNodePoolNode[];
        /**
         * The number of nodes in each subnet.
         */
        quantityPerSubnet: number;
        /**
         * The SSH public key on each node in the node pool on launch.
         */
        sshPublicKey: string;
        /**
         * A list of nodepool lifecycle states on which to filter on, matching any of the list items (OR logic). eg. [ACTIVE, DELETING]
         */
        state: string;
        /**
         * The OCIDs of the subnets in which to place nodes for this node pool.
         */
        subnetIds: string[];
    }

    export interface GetNodePoolsNodePoolInitialNodeLabel {
        /**
         * The key of the pair.
         */
        key: string;
        /**
         * The value of the pair.
         */
        value: string;
    }

    export interface GetNodePoolsNodePoolNode {
        /**
         * The name of the availability domain in which this node is placed.
         */
        availabilityDomain: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * An error that may be associated with the node.
         */
        errors: outputs.ContainerEngine.GetNodePoolsNodePoolNodeError[];
        /**
         * The fault domain of this node.
         */
        faultDomain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the compute instance backing this node.
         */
        id: string;
        /**
         * The version of Kubernetes this node is running.
         */
        kubernetesVersion: string;
        /**
         * Details about the state of the node.
         */
        lifecycleDetails: string;
        /**
         * The name to filter on.
         */
        name: string;
        /**
         * The OCID of the node pool to which this node belongs.
         */
        nodePoolId: string;
        /**
         * The private IP address of this node.
         */
        privateIp: string;
        /**
         * The public IP address of this node.
         */
        publicIp: string;
        /**
         * A list of nodepool lifecycle states on which to filter on, matching any of the list items (OR logic). eg. [ACTIVE, DELETING]
         */
        state: string;
        /**
         * The OCID of the subnet in which this node is placed.
         */
        subnetId: string;
    }

    export interface GetNodePoolsNodePoolNodeConfigDetail {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Whether to enable in-transit encryption for the data volume's paravirtualized attachment. This field applies to both block volumes and boot volumes. The default value is false.
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * The OCID of the Key Management Service key assigned to the boot volume.
         */
        kmsKeyId: string;
        /**
         * The CNI related configuration of pods in the node pool.
         */
        nodePoolPodNetworkOptionDetails: outputs.ContainerEngine.GetNodePoolsNodePoolNodeConfigDetailNodePoolPodNetworkOptionDetail[];
        /**
         * The OCIDs of the Network Security Group(s) to associate nodes for this node pool with. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * The placement configurations for the node pool. Provide one placement configuration for each availability domain in which you intend to launch a node.
         */
        placementConfigs: outputs.ContainerEngine.GetNodePoolsNodePoolNodeConfigDetailPlacementConfig[];
        /**
         * The number of nodes in the node pool.
         */
        size: number;
    }

    export interface GetNodePoolsNodePoolNodeConfigDetailNodePoolPodNetworkOptionDetail {
        /**
         * The CNI plugin used by this node pool
         */
        cniType: string;
        /**
         * The max number of pods per node in the node pool. This value will be limited by the number of VNICs attachable to the node pool shape
         */
        maxPodsPerNode: number;
        /**
         * The OCIDs of the Network Security Group(s) to associate pods for this node pool with. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
         */
        podNsgIds: string[];
        /**
         * The OCIDs of the subnets in which to place pods for this node pool. This can be one of the node pool subnet IDs
         */
        podSubnetIds: string[];
    }

    export interface GetNodePoolsNodePoolNodeConfigDetailPlacementConfig {
        /**
         * The name of the availability domain in which this node is placed.
         */
        availabilityDomain: string;
        /**
         * The OCID of the compute capacity reservation in which to place the compute instance.
         */
        capacityReservationId: string;
        /**
         * A list of fault domains in which to place nodes.
         */
        faultDomains: string[];
        /**
         * The OCID of the subnet in which this node is placed.
         */
        subnetId: string;
    }

    export interface GetNodePoolsNodePoolNodeError {
        /**
         * A short error code that defines the upstream error, meant for programmatic parsing. See [API Errors](https://docs.cloud.oracle.com/iaas/Content/API/References/apierrors.htm).
         */
        code: string;
        /**
         * A human-readable error string of the upstream error.
         */
        message: string;
        /**
         * The status of the HTTP response encountered in the upstream error.
         */
        status: string;
    }

    export interface GetNodePoolsNodePoolNodeEvictionNodePoolSetting {
        /**
         * Duration after which OKE will give up eviction of the pods on the node. PT0M will indicate you want to delete the node without cordon and drain. Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601 e.g PT30M
         */
        evictionGraceDuration: string;
        /**
         * If the underlying compute instance should be deleted if you cannot evict all the pods in grace period
         */
        isForceDeleteAfterGraceDuration: boolean;
    }

    export interface GetNodePoolsNodePoolNodeShapeConfig {
        /**
         * The total amount of memory available to each node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to each node in the node pool. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetNodePoolsNodePoolNodeSource {
        /**
         * The OCID of the image used to boot the node.
         */
        imageId: string;
        /**
         * The user-friendly name of the entity corresponding to the OCID.
         */
        sourceName: string;
        /**
         * The source type for the node. Use `IMAGE` when specifying an OCID of an image.
         */
        sourceType: string;
    }

    export interface GetNodePoolsNodePoolNodeSourceDetail {
        /**
         * The size of the boot volume in GBs. Minimum value is 50 GB. See [here](https://docs.cloud.oracle.com/en-us/iaas/Content/Block/Concepts/bootvolumes.htm) for max custom boot volume sizing and OS-specific requirements.
         */
        bootVolumeSizeInGbs: string;
        /**
         * The OCID of the image used to boot the node.
         */
        imageId: string;
        /**
         * The source type for the node. Use `IMAGE` when specifying an OCID of an image.
         */
        sourceType: string;
    }

    export interface GetWorkRequestErrorsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetWorkRequestErrorsWorkRequestError {
        /**
         * A short error code that defines the error, meant for programmatic parsing. See [API Errors](https://docs.cloud.oracle.com/iaas/Content/API/References/apierrors.htm).
         */
        code: string;
        /**
         * A human-readable error string.
         */
        message: string;
        /**
         * The date and time the error occurred.
         */
        timestamp: string;
    }

    export interface GetWorkRequestLogEntriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetWorkRequestLogEntriesWorkRequestLogEntry {
        /**
         * The description of an action that occurred.
         */
        message: string;
        /**
         * The date and time the log entry occurred.
         */
        timestamp: string;
    }

    export interface GetWorkRequestsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetWorkRequestsWorkRequest {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * The OCID of the work request.
         */
        id: string;
        /**
         * The type of work the work request is doing.
         */
        operationType: string;
        /**
         * The resources this work request affects.
         */
        resources: outputs.ContainerEngine.GetWorkRequestsWorkRequestResource[];
        /**
         * A work request status to filter on. Can have multiple parameters of this name.
         */
        status: string;
        /**
         * The time the work request was accepted.
         */
        timeAccepted: string;
        /**
         * The time the work request was finished.
         */
        timeFinished: string;
        /**
         * The time the work request was started.
         */
        timeStarted: string;
    }

    export interface GetWorkRequestsWorkRequestResource {
        /**
         * The way in which this resource was affected by the work tracked by the work request.
         */
        actionType: string;
        /**
         * The resource type the work request affects.
         */
        entityType: string;
        /**
         * The URI path on which the user can issue a GET request to access the resource metadata.
         */
        entityUri: string;
        /**
         * The OCID of the resource the work request affects.
         */
        identifier: string;
    }

    export interface NodePoolInitialNodeLabel {
        /**
         * (Updatable) The key of the pair.
         */
        key: string;
        /**
         * (Updatable) The value of the pair.
         */
        value: string;
    }

    export interface NodePoolNode {
        /**
         * (Updatable) The availability domain in which to place nodes. Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * An error that may be associated with the node.
         */
        errors: outputs.ContainerEngine.NodePoolNodeError[];
        /**
         * The fault domain of this node.
         */
        faultDomain: string;
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the compute instance backing this node.
         */
        id: string;
        /**
         * (Updatable) The version of Kubernetes to install on the nodes in the node pool.
         */
        kubernetesVersion: string;
        /**
         * Details about the state of the node.
         */
        lifecycleDetails: string;
        /**
         * (Updatable) The name of the node pool. Avoid entering confidential information.
         */
        name: string;
        /**
         * The OCID of the node pool to which this node belongs.
         */
        nodePoolId: string;
        /**
         * The private IP address of this node.
         */
        privateIp: string;
        /**
         * The public IP address of this node.
         */
        publicIp: string;
        /**
         * The state of the nodepool.
         */
        state: string;
        /**
         * (Updatable) The OCID of the subnet in which to place nodes.
         */
        subnetId: string;
    }

    export interface NodePoolNodeConfigDetails {
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * (Updatable) Whether to enable in-transit encryption for the data volume's paravirtualized attachment. This field applies to both block volumes and boot volumes. The default value is false.
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * (Updatable) The OCID of the Key Management Service key assigned to the boot volume.
         */
        kmsKeyId: string;
        /**
         * (Updatable) The CNI related configuration of pods in the node pool.
         */
        nodePoolPodNetworkOptionDetails: outputs.ContainerEngine.NodePoolNodeConfigDetailsNodePoolPodNetworkOptionDetails;
        /**
         * (Updatable) The OCIDs of the Network Security Group(s) to associate nodes for this node pool with. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * (Updatable) The placement configurations for the node pool. Provide one placement configuration for each availability domain in which you intend to launch a node.
         */
        placementConfigs: outputs.ContainerEngine.NodePoolNodeConfigDetailsPlacementConfig[];
        /**
         * (Updatable) The number of nodes that should be in the node pool.
         */
        size: number;
    }

    export interface NodePoolNodeConfigDetailsNodePoolPodNetworkOptionDetails {
        /**
         * (Updatable) The CNI plugin used by this node pool
         */
        cniType: string;
        /**
         * (Updatable) The max number of pods per node in the node pool. This value will be limited by the number of VNICs attachable to the node pool shape
         */
        maxPodsPerNode: number;
        /**
         * (Updatable) The OCIDs of the Network Security Group(s) to associate pods for this node pool with. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
         */
        podNsgIds: string[];
        /**
         * (Updatable) The OCIDs of the subnets in which to place pods for this node pool. This can be one of the node pool subnet IDs
         */
        podSubnetIds: string[];
    }

    export interface NodePoolNodeConfigDetailsPlacementConfig {
        /**
         * (Updatable) The availability domain in which to place nodes. Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * (Updatable) The OCID of the compute capacity reservation in which to place the compute instance.
         */
        capacityReservationId: string;
        /**
         * (Updatable) A list of fault domains in which to place nodes.
         */
        faultDomains: string[];
        /**
         * (Updatable) The OCID of the subnet in which to place nodes.
         */
        subnetId: string;
    }

    export interface NodePoolNodeError {
        /**
         * A short error code that defines the upstream error, meant for programmatic parsing. See [API Errors](https://docs.cloud.oracle.com/iaas/Content/API/References/apierrors.htm).
         */
        code: string;
        /**
         * A human-readable error string of the upstream error.
         */
        message: string;
        /**
         * The status of the HTTP response encountered in the upstream error.
         */
        status: string;
    }

    export interface NodePoolNodeEvictionNodePoolSettings {
        /**
         * (Updatable) Duration after which OKE will give up eviction of the pods on the node. PT0M will indicate you want to delete the node without cordon and drain. Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601 e.g PT30M
         */
        evictionGraceDuration: string;
        /**
         * (Updatable) If the underlying compute instance should be deleted if you cannot evict all the pods in grace period
         */
        isForceDeleteAfterGraceDuration: boolean;
    }

    export interface NodePoolNodeShapeConfig {
        /**
         * (Updatable) The total amount of memory available to each node, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * (Updatable) The total number of OCPUs available to each node in the node pool. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface NodePoolNodeSource {
        /**
         * (Updatable) The OCID of the image used to boot the node.
         */
        imageId: string;
        /**
         * The user-friendly name of the entity corresponding to the OCID.
         */
        sourceName: string;
        /**
         * (Updatable) The source type for the node. Use `IMAGE` when specifying an OCID of an image.
         */
        sourceType: string;
    }

    export interface NodePoolNodeSourceDetails {
        /**
         * (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB. See [here](https://docs.cloud.oracle.com/en-us/iaas/Content/Block/Concepts/bootvolumes.htm) for max custom boot volume sizing and OS-specific requirements.
         */
        bootVolumeSizeInGbs: string;
        /**
         * (Updatable) The OCID of the image used to boot the node.
         */
        imageId: string;
        /**
         * (Updatable) The source type for the node. Use `IMAGE` when specifying an OCID of an image.
         */
        sourceType: string;
    }
}

export namespace Core {
    export interface BootVolumeBackupSourceDetails {
        bootVolumeBackupId: string;
        /**
         * The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
         */
        kmsKeyId?: string;
        /**
         * The region of the volume backup source.
         */
        region: string;
    }

    export interface BootVolumeBootVolumeReplica {
        /**
         * (Updatable) The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The boot volume replica's Oracle ID (OCID).
         */
        bootVolumeReplicaId: string;
        /**
         * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface BootVolumeSourceDetails {
        /**
         * The OCID of the boot volume replica.
         */
        id: string;
        /**
         * The type can be one of these values: `bootVolume`, `bootVolumeBackup`, `bootVolumeReplica`
         */
        type: string;
    }

    export interface CaptureFilterVtapCaptureFilterRule {
        /**
         * (Updatable) Traffic sent to this CIDR block through the VTAP source will be mirrored to the VTAP target.
         */
        destinationCidr: string;
        /**
         * (Updatable) Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
         * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
         * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
         */
        icmpOptions: outputs.Core.CaptureFilterVtapCaptureFilterRuleIcmpOptions;
        /**
         * (Updatable) The transport protocol used in the filter. If do not choose a protocol, all protocols will be used in the filter. Supported options are:
         * * 1 = ICMP
         * * 6 = TCP
         * * 17 = UDP
         */
        protocol: string;
        /**
         * (Updatable) Include or exclude packets meeting this definition from mirrored traffic.
         */
        ruleAction: string;
        /**
         * (Updatable) Traffic from this CIDR block to the VTAP source will be mirrored to the VTAP target.
         */
        sourceCidr: string;
        /**
         * (Updatable) Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
         */
        tcpOptions: outputs.Core.CaptureFilterVtapCaptureFilterRuleTcpOptions;
        /**
         * (Updatable) The traffic direction the VTAP is configured to mirror.
         */
        trafficDirection: string;
        /**
         * (Updatable) Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
         */
        udpOptions: outputs.Core.CaptureFilterVtapCaptureFilterRuleUdpOptions;
    }

    export interface CaptureFilterVtapCaptureFilterRuleIcmpOptions {
        /**
         * (Updatable) The ICMP code (optional).
         */
        code: number;
        /**
         * (Updatable) The ICMP type.
         */
        type: number;
    }

    export interface CaptureFilterVtapCaptureFilterRuleTcpOptions {
        /**
         * (Updatable)
         */
        destinationPortRange: outputs.Core.CaptureFilterVtapCaptureFilterRuleTcpOptionsDestinationPortRange;
        /**
         * (Updatable)
         */
        sourcePortRange: outputs.Core.CaptureFilterVtapCaptureFilterRuleTcpOptionsSourcePortRange;
    }

    export interface CaptureFilterVtapCaptureFilterRuleTcpOptionsDestinationPortRange {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface CaptureFilterVtapCaptureFilterRuleTcpOptionsSourcePortRange {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface CaptureFilterVtapCaptureFilterRuleUdpOptions {
        /**
         * (Updatable)
         */
        destinationPortRange: outputs.Core.CaptureFilterVtapCaptureFilterRuleUdpOptionsDestinationPortRange;
        /**
         * (Updatable)
         */
        sourcePortRange: outputs.Core.CaptureFilterVtapCaptureFilterRuleUdpOptionsSourcePortRange;
    }

    export interface CaptureFilterVtapCaptureFilterRuleUdpOptionsDestinationPortRange {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface CaptureFilterVtapCaptureFilterRuleUdpOptionsSourcePortRange {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface ClusterNetworkInstancePool {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
         */
        compartmentId: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
         */
        displayName: string;
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
         */
        instanceConfigurationId: string;
        /**
         * The load balancers attached to the instance pool.
         */
        loadBalancers: outputs.Core.ClusterNetworkInstancePoolLoadBalancer[];
        /**
         * The placement configurations for the instance pool.
         */
        placementConfigurations: outputs.Core.ClusterNetworkInstancePoolPlacementConfiguration[];
        /**
         * (Updatable) The number of instances that should be in the instance pool.
         */
        size: number;
        /**
         * The current state of the cluster network.
         */
        state: string;
        /**
         * The date and time the resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface ClusterNetworkInstancePoolLoadBalancer {
        /**
         * The name of the backend set on the load balancer.
         */
        backendSetName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
         */
        instancePoolId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
         */
        loadBalancerId: string;
        /**
         * The port value used for the backends.
         */
        port: number;
        /**
         * The current state of the cluster network.
         */
        state: string;
        /**
         * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
         */
        vnicSelection: string;
    }

    export interface ClusterNetworkInstancePoolPlacementConfiguration {
        /**
         * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The fault domains to place instances.
         */
        faultDomains: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
         */
        primarySubnetId: string;
        /**
         * The set of secondary VNIC data for instances in the pool.
         */
        secondaryVnicSubnets: outputs.Core.ClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
    }

    export interface ClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet {
        /**
         * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
         */
        displayName: string;
        /**
         * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
         */
        subnetId: string;
    }

    export interface ClusterNetworkPlacementConfiguration {
        /**
         * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
         */
        primarySubnetId: string;
        /**
         * The set of secondary VNIC data for instances in the pool.
         */
        secondaryVnicSubnets: outputs.Core.ClusterNetworkPlacementConfigurationSecondaryVnicSubnet[];
    }

    export interface ClusterNetworkPlacementConfigurationSecondaryVnicSubnet {
        /**
         * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
         */
        displayName: string;
        /**
         * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
         */
        subnetId: string;
    }

    export interface ComputeCapacityReservationInstanceReservationConfig {
        /**
         * (Updatable) The fault domain to use for instances created using this capacity configuration. For more information, see [Fault Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm#fault). If you do not specify the fault domain, the capacity is available for an instance that does not specify a fault domain. To change the fault domain for a reservation, delete the reservation and create a new one in the preferred fault domain.
         */
        faultDomain?: string;
        /**
         * (Updatable) The shape requested when launching instances using reserved capacity. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
         */
        instanceShape: string;
        /**
         * (Updatable) The shape configuration requested when launching instances in a compute capacity reservation.
         */
        instanceShapeConfig: outputs.Core.ComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig;
        /**
         * (Updatable) The total number of instances that can be launched from the capacity configuration.
         */
        reservedCount: string;
        /**
         * The amount of capacity in use out of the total capacity reserved in this capacity configuration.
         */
        usedCount: string;
    }

    export interface ComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig {
        /**
         * (Updatable) The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * (Updatable) The total number of OCPUs available to the instance.
         */
        ocpus: number;
    }

    export interface CrossConnectGroupMacsecProperties {
        /**
         * Type of encryption cipher suite to use for the MACsec connection.
         */
        encryptionCipher: string;
        /**
         * An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
         */
        primaryKey: outputs.Core.CrossConnectGroupMacsecPropertiesPrimaryKey;
        /**
         * The cross-connect group's current state.
         */
        state: string;
    }

    export interface CrossConnectGroupMacsecPropertiesPrimaryKey {
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity Association Key (CAK) of this MACsec key.
         */
        connectivityAssociationKeySecretId: string;
        /**
         * The secret version of the `connectivityAssociationKey` secret in Vault.
         */
        connectivityAssociationKeySecretVersion: string;
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity association Key Name (CKN) of this MACsec key.
         */
        connectivityAssociationNameSecretId: string;
        /**
         * The secret version of the connectivity association name secret in Vault.
         */
        connectivityAssociationNameSecretVersion: string;
    }

    export interface CrossConnectMacsecProperties {
        /**
         * Type of encryption cipher suite to use for the MACsec connection.
         */
        encryptionCipher: string;
        /**
         * An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
         */
        primaryKey: outputs.Core.CrossConnectMacsecPropertiesPrimaryKey;
        /**
         * The cross-connect's current state.
         */
        state: string;
    }

    export interface CrossConnectMacsecPropertiesPrimaryKey {
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity Association Key (CAK) of this MACsec key.
         */
        connectivityAssociationKeySecretId: string;
        /**
         * The secret version of the `connectivityAssociationKey` secret in Vault.
         */
        connectivityAssociationKeySecretVersion: string;
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity association Key Name (CKN) of this MACsec key.
         */
        connectivityAssociationNameSecretId: string;
        /**
         * The secret version of the connectivity association name secret in Vault.
         */
        connectivityAssociationNameSecretVersion: string;
    }

    export interface DefaultDhcpOptionsOption {
        customDnsServers?: string[];
        searchDomainNames: string[];
        serverType: string;
        type: string;
    }

    export interface DefaultRouteTableRouteRule {
        /**
         * @deprecated The 'cidr_block' field has been deprecated. Please use 'destination' instead.
         */
        cidrBlock: string;
        description: string;
        destination: string;
        destinationType: string;
        networkEntityId: string;
        routeType: string;
    }

    export interface DefaultSecurityListEgressSecurityRule {
        description: string;
        destination: string;
        destinationType: string;
        icmpOptions?: outputs.Core.DefaultSecurityListEgressSecurityRuleIcmpOptions;
        protocol: string;
        stateless: boolean;
        tcpOptions?: outputs.Core.DefaultSecurityListEgressSecurityRuleTcpOptions;
        udpOptions?: outputs.Core.DefaultSecurityListEgressSecurityRuleUdpOptions;
    }

    export interface DefaultSecurityListEgressSecurityRuleIcmpOptions {
        code?: number;
        type: number;
    }

    export interface DefaultSecurityListEgressSecurityRuleTcpOptions {
        max?: number;
        min?: number;
        sourcePortRange?: outputs.Core.DefaultSecurityListEgressSecurityRuleTcpOptionsSourcePortRange;
    }

    export interface DefaultSecurityListEgressSecurityRuleTcpOptionsSourcePortRange {
        max: number;
        min: number;
    }

    export interface DefaultSecurityListEgressSecurityRuleUdpOptions {
        max?: number;
        min?: number;
        sourcePortRange?: outputs.Core.DefaultSecurityListEgressSecurityRuleUdpOptionsSourcePortRange;
    }

    export interface DefaultSecurityListEgressSecurityRuleUdpOptionsSourcePortRange {
        max: number;
        min: number;
    }

    export interface DefaultSecurityListIngressSecurityRule {
        description: string;
        icmpOptions?: outputs.Core.DefaultSecurityListIngressSecurityRuleIcmpOptions;
        protocol: string;
        source: string;
        sourceType: string;
        stateless?: boolean;
        tcpOptions?: outputs.Core.DefaultSecurityListIngressSecurityRuleTcpOptions;
        udpOptions?: outputs.Core.DefaultSecurityListIngressSecurityRuleUdpOptions;
    }

    export interface DefaultSecurityListIngressSecurityRuleIcmpOptions {
        code?: number;
        type: number;
    }

    export interface DefaultSecurityListIngressSecurityRuleTcpOptions {
        max?: number;
        min?: number;
        sourcePortRange?: outputs.Core.DefaultSecurityListIngressSecurityRuleTcpOptionsSourcePortRange;
    }

    export interface DefaultSecurityListIngressSecurityRuleTcpOptionsSourcePortRange {
        max: number;
        min: number;
    }

    export interface DefaultSecurityListIngressSecurityRuleUdpOptions {
        max?: number;
        min?: number;
        sourcePortRange?: outputs.Core.DefaultSecurityListIngressSecurityRuleUdpOptionsSourcePortRange;
    }

    export interface DefaultSecurityListIngressSecurityRuleUdpOptionsSourcePortRange {
        max: number;
        min: number;
    }

    export interface DhcpOptionsOption {
        /**
         * (Updatable) If you set `serverType` to `CustomDnsServer`, specify the IP address of at least one DNS server of your choice (three maximum).
         */
        customDnsServers?: string[];
        /**
         * (Updatable) A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query, the OS will append this search domain name to the value being queried.
         */
        searchDomainNames: string[];
        /**
         * (Updatable) 
         * * **VcnLocal:** Reserved for future use.
         * * **VcnLocalPlusInternet:** Also referred to as "Internet and VCN Resolver". Instances can resolve internet hostnames (no internet gateway is required), and can resolve hostnames of instances in the VCN. This is the default value in the default set of DHCP options in the VCN. For the Internet and VCN Resolver to work across the VCN, there must also be a DNS label set for the VCN, a DNS label set for each subnet, and a hostname for each instance. The Internet and VCN Resolver also enables reverse DNS lookup, which lets you determine the hostname corresponding to the private IP address. For more information, see [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/dns.htm).
         * * **CustomDnsServer:** Instances use a DNS server of your choice (three maximum).
         */
        serverType: string;
        /**
         * (Updatable) The specific DHCP option. Either `DomainNameServer` (for [DhcpDnsOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpDnsOption/)) or `SearchDomain` (for [DhcpSearchDomainOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpSearchDomainOption/)).
         */
        type: string;
    }

    export interface DrgAttachmentManagementNetworkDetails {
        /**
         * -(Required) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
         */
        id: string;
        /**
         * The IPSec connection that contains the attached IPSec tunnel.
         */
        ipsecConnectionId: string;
        /**
         * (Updatable)- The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the DRG attachment is using.
         */
        routeTableId: string;
        /**
         * The type can be one of these values: `IPSEC_TUNNEL`, `REMOTE_PEERING_CONNECTION`, `VCN`,`VIRTUAL_CIRCUIT`
         * * `routeTableId`(Optional)(Updatable) - The OCID of the route table the DRG attachment is using.
         */
        type: string;
    }

    export interface DrgAttachmentNetworkDetails {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
         */
        id: string;
        /**
         * The IPSec connection that contains the attached IPSec tunnel.
         */
        ipsecConnectionId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table used by the DRG attachment.
         */
        routeTableId: string;
        /**
         * (Updatable) The type can be one of these values: `IPSEC_TUNNEL`, `REMOTE_PEERING_CONNECTION`, `VCN`, `VIRTUAL_CIRCUIT`
         */
        type: string;
        /**
         * (Updatable) Indicates whether the VCN CIDRs or the individual subnet CIDRs are imported from the attachment. Routes from the VCN ingress route table are always imported.
         */
        vcnRouteType: string;
    }

    export interface DrgAttachmentsListDrgAllAttachment {
        /**
         * The Oracle-assigned ID of the DRG attachment
         */
        id: string;
    }

    export interface DrgDefaultDrgRouteTable {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table assigned to DRG attachments of type IPSEC_TUNNEL on creation.
         */
        ipsecTunnel: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type REMOTE_PEERING_CONNECTION on creation.
         */
        remotePeeringConnection: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type VCN on creation.
         */
        vcn: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type VIRTUAL_CIRCUIT on creation.
         */
        virtualCircuit: string;
    }

    export interface DrgRouteDistributionStatementMatchCriteria {
        /**
         * The type of the network resource to be included in this match. A match for a network type implies that all DRG attachments of that type insert routes into the table.
         */
        attachmentType?: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG attachment.
         */
        drgAttachmentId?: string;
        /**
         * (Updatable) The type of the match criteria for a route distribution statement.
         */
        matchType?: string;
    }

    export interface GetAppCatalogListingResourceVersionsAppCatalogListingResourceVersion {
        /**
         * List of accessible ports for instances launched with this listing resource version.
         */
        accessiblePorts: number[];
        /**
         * Allowed actions for the listing resource.
         */
        allowedActions: string[];
        /**
         * List of regions that this listing resource version is available.
         */
        availableRegions: string[];
        /**
         * Array of shapes compatible with this resource.
         */
        compatibleShapes: string[];
        /**
         * The OCID of the listing.
         */
        listingId: string;
        /**
         * OCID of the listing resource.
         */
        listingResourceId: string;
        /**
         * Resource Version.
         */
        listingResourceVersion: string;
        /**
         * Date and time the listing resource version was published, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
         */
        timePublished: string;
    }

    export interface GetAppCatalogListingResourceVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAppCatalogListingsAppCatalogListing {
        /**
         * Listing's contact URL.
         */
        contactUrl: string;
        /**
         * Description of the listing.
         */
        description: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * the region free ocid of the listing resource.
         */
        listingId: string;
        /**
         * Publisher's logo URL.
         */
        publisherLogoUrl: string;
        /**
         * A filter to return only the publisher that matches the given publisher name exactly.
         */
        publisherName: string;
        /**
         * The short summary for the listing.
         */
        summary: string;
        /**
         * Date and time the listing was published, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
         */
        timePublished: string;
    }

    export interface GetAppCatalogListingsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAppCatalogSubscriptionsAppCatalogSubscription {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        eulaLink?: string;
        /**
         * A filter to return only the listings that matches the given listing id.
         */
        listingId: string;
        /**
         * Listing resource id.
         */
        listingResourceId: string;
        /**
         * Listing resource version.
         */
        listingResourceVersion: string;
        oracleTermsOfUseLink: string;
        /**
         * Name of the publisher who published this listing.
         */
        publisherName: string;
        signature: string;
        /**
         * The short summary to the listing.
         */
        summary: string;
        /**
         * Date and time at which the subscription was created, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
         */
        timeCreated: string;
        timeRetrieved: string;
    }

    export interface GetAppCatalogSubscriptionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBlockVolumeReplicasBlockVolumeReplica {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The OCID of the source block volume.
         */
        blockVolumeId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The block volume replica's Oracle ID (OCID).
         */
        id: string;
        /**
         * The size of the source block volume, in GBs.
         */
        sizeInGbs: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the block volume replica was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the block volume replica was last synced from the source block volume. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeLastSynced: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the volume group replica.
         */
        volumeGroupReplicaId: string;
    }

    export interface GetBlockVolumeReplicasFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBootVolumeAttachmentsBootVolumeAttachment {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The OCID of the boot volume.
         */
        bootVolumeId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Refer the top-level definition of encryptionInTransitType. The default value is NONE.
         */
        encryptionInTransitType: string;
        /**
         * The OCID of the boot volume attachment.
         */
        id: string;
        /**
         * The OCID of the instance.
         */
        instanceId: string;
        /**
         * Whether in-transit encryption for the boot volume's paravirtualized attachment is enabled or not.
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * The current state of the boot volume attachment.
         */
        state: string;
        /**
         * The date and time the boot volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetBootVolumeAttachmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBootVolumeBackupSourceDetail {
        /**
         * The OCID of the boot volume backup.
         */
        bootVolumeBackupId: string;
        /**
         * The OCID of the Key Management master encryption assigned to the boot volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
         */
        kmsKeyId: string;
        region: string;
    }

    export interface GetBootVolumeBackupsBootVolumeBackup {
        /**
         * The OCID of the boot volume.
         */
        bootVolumeId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
         */
        expirationTime: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the boot volume backup.
         */
        id: string;
        /**
         * The image OCID used to create the boot volume the backup is taken from.
         */
        imageId: string;
        /**
         * The OCID of the Key Management master encryption assigned to the boot volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
         */
        kmsKeyId: string;
        /**
         * The size of the boot volume, in GBs.
         */
        sizeInGbs: string;
        /**
         * A filter to return only resources that originated from the given source boot volume backup.
         */
        sourceBootVolumeBackupId: string;
        sourceDetails: outputs.Core.GetBootVolumeBackupsBootVolumeBackupSourceDetail[];
        /**
         * Specifies whether the backup was created manually, or via scheduled backup policy.
         */
        sourceType: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the boot volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the request to create the boot volume backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeRequestReceived: string;
        /**
         * The type of a volume backup. Supported values are 'FULL' or 'INCREMENTAL'.
         */
        type: string;
        /**
         * The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the boot volume and whether the backup is full or incremental.
         */
        uniqueSizeInGbs: string;
    }

    export interface GetBootVolumeBackupsBootVolumeBackupSourceDetail {
        bootVolumeBackupId: string;
        /**
         * The OCID of the Key Management master encryption assigned to the boot volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
         */
        kmsKeyId: string;
        region: string;
    }

    export interface GetBootVolumeBackupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBootVolumeBootVolumeReplica {
        /**
         * The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The boot volume replica's Oracle ID (OCID).
         */
        bootVolumeReplicaId: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetBootVolumeReplicasBootVolumeReplica {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The OCID of the source boot volume.
         */
        bootVolumeId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The boot volume replica's Oracle ID (OCID).
         */
        id: string;
        /**
         * The image OCID used to create the boot volume the replica is replicated from.
         */
        imageId: string;
        /**
         * The size of the source boot volume, in GBs.
         */
        sizeInGbs: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the boot volume replica was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the boot volume replica was last synced from the source boot volume. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeLastSynced: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the volume group replica.
         */
        volumeGroupReplicaId: string;
    }

    export interface GetBootVolumeReplicasFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBootVolumeSourceDetail {
        /**
         * The OCID of the boot volume replica.
         */
        id: string;
        /**
         * The type can be one of these values: `bootVolume`, `bootVolumeBackup`, `bootVolumeReplica`
         */
        type: string;
    }

    export interface GetBootVolumesBootVolume {
        /**
         * The number of Volume Performance Units per GB that this boot volume is effectively tuned to when it's idle.
         */
        autoTunedVpusPerGb: string;
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * @deprecated The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
         */
        backupPolicyId: string;
        /**
         * The list of boot volume replicas of this boot volume
         */
        bootVolumeReplicas: outputs.Core.GetBootVolumesBootVolumeBootVolumeReplica[];
        bootVolumeReplicasDeletion: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the boot volume replica.
         */
        id: string;
        /**
         * The image OCID used to create the boot volume.
         */
        imageId: string;
        /**
         * Specifies whether the auto-tune performance is enabled for this boot volume.
         */
        isAutoTuneEnabled: boolean;
        /**
         * Specifies whether the boot volume's data has finished copying from the source boot volume or boot volume backup.
         */
        isHydrated: boolean;
        /**
         * The OCID of the Key Management master encryption key assigned to the boot volume.
         */
        kmsKeyId: string;
        /**
         * The size of the boot volume in GBs.
         */
        sizeInGbs: string;
        /**
         * The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
         */
        sizeInMbs: string;
        sourceDetails: outputs.Core.GetBootVolumesBootVolumeSourceDetail[];
        /**
         * The current state of a boot volume.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the boot volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The OCID of the volume group.
         */
        volumeGroupId: string;
        /**
         * The number of volume performance units (VPUs) that will be applied to this boot volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        vpusPerGb: string;
    }

    export interface GetBootVolumesBootVolumeBootVolumeReplica {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The boot volume replica's Oracle ID (OCID).
         */
        bootVolumeReplicaId: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetBootVolumesBootVolumeSourceDetail {
        /**
         * The OCID of the boot volume replica.
         */
        id: string;
        /**
         * The type can be one of these values: `bootVolume`, `bootVolumeBackup`, `bootVolumeReplica`
         */
        type: string;
    }

    export interface GetBootVolumesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetByoipAllocatedRangesByoipAllocatedRangeCollection {
        /**
         * A list of subranges of a BYOIP CIDR block allocated to an IP pool.
         */
        items: outputs.Core.GetByoipAllocatedRangesByoipAllocatedRangeCollectionItem[];
    }

    export interface GetByoipAllocatedRangesByoipAllocatedRangeCollectionItem {
        /**
         * The BYOIP CIDR block range or subrange allocated to an IP pool. This could be all or part of a BYOIP CIDR block.
         */
        cidrBlock: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IP pool containing the CIDR block.
         */
        publicIpPoolId: string;
    }

    export interface GetByoipAllocatedRangesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetByoipRangeByoipRangeVcnIpv6allocation {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `ByoipRange` resource containing the BYOIP CIDR block.
         */
        byoipRangeId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the BYOIP CIDR block.
         */
        compartmentId: string;
        /**
         * The IPv6 CIDR block being imported to the Oracle cloud. This CIDR block must be /48 or larger, and can be subdivided into sub-ranges used across multiple VCNs. A BYOIPv6 prefix can be also assigned across multiple VCNs, and each VCN must be /64 or larger. You may specify a ULA or private IPv6 prefix of /64 or larger to use in the VCN. IPv6-enabled subnets will remain a fixed /64 in size.
         */
        ipv6cidrBlock: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `Vcn` resource to which the ByoipRange belongs.
         */
        vcnId: string;
    }

    export interface GetByoipRangesByoipRangeCollection {
        items: outputs.Core.GetByoipRangesByoipRangeCollectionItem[];
    }

    export interface GetByoipRangesByoipRangeCollectionItem {
        /**
         * A list of `ByoipRangeVcnIpv6AllocationSummary` objects.
         */
        byoipRangeVcnIpv6allocations: outputs.Core.GetByoipRangesByoipRangeCollectionItemByoipRangeVcnIpv6allocation[];
        /**
         * The public IPv4 CIDR block being imported from on-premises to the Oracle cloud.
         */
        cidrBlock?: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId?: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `ByoipRange` resource.
         */
        id: string;
        /**
         * The IPv6 CIDR block being imported to the Oracle cloud. This CIDR block must be /48 or larger, and can be subdivided into sub-ranges used across multiple VCNs. A BYOIPv6 prefix can be also assigned across multiple VCNs, and each VCN must be /64 or larger. You may specify a ULA or private IPv6 prefix of /64 or larger to use in the VCN. IPv6-enabled subnets will remain a fixed /64 in size.
         */
        ipv6cidrBlock: string;
        /**
         * The `ByoipRange` resource's current status.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state name exactly.
         */
        state: string;
        /**
         * The date and time the `ByoipRange` resource was advertised to the internet by BGP, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeAdvertised: string;
        /**
         * The date and time the `ByoipRange` resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time the `ByoipRange` resource was validated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeValidated: string;
        /**
         * The date and time the `ByoipRange` resource was withdrawn from advertisement by BGP to the internet, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeWithdrawn: string;
        /**
         * The validation token is an internally-generated ASCII string used in the validation process. See [Importing a CIDR block](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/BYOIP.htm#import_cidr) for details.
         */
        validationToken: string;
    }

    export interface GetByoipRangesByoipRangeCollectionItemByoipRangeVcnIpv6allocation {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `ByoipRange` resource to which the CIDR block belongs.
         */
        byoipRangeId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The IPv6 CIDR block being imported to the Oracle cloud. This CIDR block must be /48 or larger, and can be subdivided into sub-ranges used across multiple VCNs. A BYOIPv6 prefix can be also assigned across multiple VCNs, and each VCN must be /64 or larger. You may specify a ULA or private IPv6 prefix of /64 or larger to use in the VCN. IPv6-enabled subnets will remain a fixed /64 in size.
         */
        ipv6cidrBlock: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `Vcn` resource to which the ByoipRange belongs.
         */
        vcnId: string;
    }

    export interface GetByoipRangesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCaptureFilterVtapCaptureFilterRule {
        /**
         * Traffic sent to this CIDR block through the VTAP source will be mirrored to the VTAP target.
         */
        destinationCidr: string;
        /**
         * Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
         * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
         * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
         */
        icmpOptions: outputs.Core.GetCaptureFilterVtapCaptureFilterRuleIcmpOption[];
        /**
         * The transport protocol used in the filter. If do not choose a protocol, all protocols will be used in the filter. Supported options are:
         * * 1 = ICMP
         * * 6 = TCP
         * * 17 = UDP
         */
        protocol: string;
        /**
         * Include or exclude packets meeting this definition from mirrored traffic.
         */
        ruleAction: string;
        /**
         * Traffic from this CIDR block to the VTAP source will be mirrored to the VTAP target.
         */
        sourceCidr: string;
        /**
         * Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
         */
        tcpOptions: outputs.Core.GetCaptureFilterVtapCaptureFilterRuleTcpOption[];
        /**
         * The traffic direction the VTAP is configured to mirror.
         */
        trafficDirection: string;
        /**
         * Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
         */
        udpOptions: outputs.Core.GetCaptureFilterVtapCaptureFilterRuleUdpOption[];
    }

    export interface GetCaptureFilterVtapCaptureFilterRuleIcmpOption {
        /**
         * The ICMP code (optional).
         */
        code: number;
        /**
         * The ICMP type.
         */
        type: number;
    }

    export interface GetCaptureFilterVtapCaptureFilterRuleTcpOption {
        destinationPortRanges: outputs.Core.GetCaptureFilterVtapCaptureFilterRuleTcpOptionDestinationPortRange[];
        sourcePortRanges: outputs.Core.GetCaptureFilterVtapCaptureFilterRuleTcpOptionSourcePortRange[];
    }

    export interface GetCaptureFilterVtapCaptureFilterRuleTcpOptionDestinationPortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetCaptureFilterVtapCaptureFilterRuleTcpOptionSourcePortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetCaptureFilterVtapCaptureFilterRuleUdpOption {
        destinationPortRanges: outputs.Core.GetCaptureFilterVtapCaptureFilterRuleUdpOptionDestinationPortRange[];
        sourcePortRanges: outputs.Core.GetCaptureFilterVtapCaptureFilterRuleUdpOptionSourcePortRange[];
    }

    export interface GetCaptureFilterVtapCaptureFilterRuleUdpOptionDestinationPortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetCaptureFilterVtapCaptureFilterRuleUdpOptionSourcePortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetCaptureFiltersCaptureFilter {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Indicates which service will use this capture filter
         */
        filterType: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The capture filter's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * A filter to return only resources that match the given capture filter lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the capture filter was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2021-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The set of rules governing what traffic a VTAP mirrors.
         */
        vtapCaptureFilterRules: outputs.Core.GetCaptureFiltersCaptureFilterVtapCaptureFilterRule[];
    }

    export interface GetCaptureFiltersCaptureFilterVtapCaptureFilterRule {
        /**
         * Traffic sent to this CIDR block through the VTAP source will be mirrored to the VTAP target.
         */
        destinationCidr: string;
        /**
         * Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
         * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
         * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
         */
        icmpOptions: outputs.Core.GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleIcmpOption[];
        /**
         * The transport protocol used in the filter. If do not choose a protocol, all protocols will be used in the filter. Supported options are:
         * * 1 = ICMP
         * * 6 = TCP
         * * 17 = UDP
         */
        protocol: string;
        /**
         * Include or exclude packets meeting this definition from mirrored traffic.
         */
        ruleAction: string;
        /**
         * Traffic from this CIDR block to the VTAP source will be mirrored to the VTAP target.
         */
        sourceCidr: string;
        /**
         * Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
         */
        tcpOptions: outputs.Core.GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleTcpOption[];
        /**
         * The traffic direction the VTAP is configured to mirror.
         */
        trafficDirection: string;
        /**
         * Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
         */
        udpOptions: outputs.Core.GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleUdpOption[];
    }

    export interface GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleIcmpOption {
        /**
         * The ICMP code (optional).
         */
        code: number;
        /**
         * The ICMP type.
         */
        type: number;
    }

    export interface GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleTcpOption {
        destinationPortRanges: outputs.Core.GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleTcpOptionDestinationPortRange[];
        sourcePortRanges: outputs.Core.GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleTcpOptionSourcePortRange[];
    }

    export interface GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleTcpOptionDestinationPortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleTcpOptionSourcePortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleUdpOption {
        destinationPortRanges: outputs.Core.GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleUdpOptionDestinationPortRange[];
        sourcePortRanges: outputs.Core.GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleUdpOptionSourcePortRange[];
    }

    export interface GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleUdpOptionDestinationPortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetCaptureFiltersCaptureFilterVtapCaptureFilterRuleUdpOptionSourcePortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetCaptureFiltersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetClusterNetworkInstancePool {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
         */
        instanceConfigurationId: string;
        /**
         * The load balancers attached to the instance pool.
         */
        loadBalancers: outputs.Core.GetClusterNetworkInstancePoolLoadBalancer[];
        /**
         * The placement configurations for the instance pool.
         */
        placementConfigurations: outputs.Core.GetClusterNetworkInstancePoolPlacementConfiguration[];
        /**
         * The number of instances that should be in the instance pool.
         */
        size: number;
        /**
         * The current state of the cluster network.
         */
        state: string;
        /**
         * The date and time the resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetClusterNetworkInstancePoolLoadBalancer {
        /**
         * The name of the backend set on the load balancer.
         */
        backendSetName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
         */
        instancePoolId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
         */
        loadBalancerId: string;
        /**
         * The port value used for the backends.
         */
        port: number;
        /**
         * The current state of the cluster network.
         */
        state: string;
        /**
         * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
         */
        vnicSelection: string;
    }

    export interface GetClusterNetworkInstancePoolPlacementConfiguration {
        /**
         * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The fault domains to place instances.
         */
        faultDomains: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
         */
        primarySubnetId: string;
        /**
         * The set of secondary VNIC data for instances in the pool.
         */
        secondaryVnicSubnets: outputs.Core.GetClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
    }

    export interface GetClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet {
        /**
         * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
         */
        displayName: string;
        /**
         * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
         */
        subnetId: string;
    }

    export interface GetClusterNetworkInstancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetClusterNetworkInstancesInstance {
        /**
         * The availability domain the instance is running in.
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The fault domain the instance is running in.
         */
        faultDomain: string;
        /**
         * The OCID of the instance.
         */
        id: string;
        /**
         * The OCID of the instance confgiuration used to create the instance.
         */
        instanceConfigurationId: string;
        /**
         * The load balancer backends that are configured for the instance pool instance.
         */
        loadBalancerBackends: outputs.Core.GetClusterNetworkInstancesInstanceLoadBalancerBackend[];
        /**
         * The region that contains the availability domain the instance is running in.
         */
        region: string;
        /**
         * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
         */
        shape: string;
        /**
         * The current state of the instance pool instance.
         */
        state: string;
        /**
         * The date and time the instance pool instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetClusterNetworkInstancesInstanceLoadBalancerBackend {
        /**
         * The health of the backend as observed by the load balancer.
         */
        backendHealthStatus: string;
        /**
         * The name of the backend in the backend set.
         */
        backendName: string;
        /**
         * The name of the backend set on the load balancer.
         */
        backendSetName: string;
        /**
         * The OCID of the load balancer attached to the instance pool.
         */
        loadBalancerId: string;
        /**
         * The current state of the instance pool instance.
         */
        state: string;
    }

    export interface GetClusterNetworkPlacementConfiguration {
        /**
         * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
         */
        primarySubnetId: string;
        /**
         * The set of secondary VNIC data for instances in the pool.
         */
        secondaryVnicSubnets: outputs.Core.GetClusterNetworkPlacementConfigurationSecondaryVnicSubnet[];
    }

    export interface GetClusterNetworkPlacementConfigurationSecondaryVnicSubnet {
        /**
         * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
         */
        displayName: string;
        /**
         * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
         */
        subnetId: string;
    }

    export interface GetClusterNetworksClusterNetwork {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The instance pools in the cluster network.
         */
        instancePools: outputs.Core.GetClusterNetworksClusterNetworkInstancePool[];
        /**
         * The location for where the instance pools in a cluster network will place instances.
         */
        placementConfigurations: outputs.Core.GetClusterNetworksClusterNetworkPlacementConfiguration[];
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time the resource was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeUpdated: string;
    }

    export interface GetClusterNetworksClusterNetworkInstancePool {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
         */
        instanceConfigurationId: string;
        /**
         * The load balancers attached to the instance pool.
         */
        loadBalancers: outputs.Core.GetClusterNetworksClusterNetworkInstancePoolLoadBalancer[];
        /**
         * The placement configurations for the instance pool.
         */
        placementConfigurations: outputs.Core.GetClusterNetworksClusterNetworkInstancePoolPlacementConfiguration[];
        /**
         * The number of instances that should be in the instance pool.
         */
        size: number;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetClusterNetworksClusterNetworkInstancePoolLoadBalancer {
        /**
         * The name of the backend set on the load balancer.
         */
        backendSetName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
         */
        instancePoolId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
         */
        loadBalancerId: string;
        /**
         * The port value used for the backends.
         */
        port: number;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
         */
        vnicSelection: string;
    }

    export interface GetClusterNetworksClusterNetworkInstancePoolPlacementConfiguration {
        /**
         * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The fault domains to place instances.
         */
        faultDomains: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
         */
        primarySubnetId: string;
        /**
         * The set of secondary VNIC data for instances in the pool.
         */
        secondaryVnicSubnets: outputs.Core.GetClusterNetworksClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
    }

    export interface GetClusterNetworksClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet {
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
         */
        subnetId: string;
    }

    export interface GetClusterNetworksClusterNetworkPlacementConfiguration {
        /**
         * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
         */
        primarySubnetId: string;
        /**
         * The set of secondary VNIC data for instances in the pool.
         */
        secondaryVnicSubnets: outputs.Core.GetClusterNetworksClusterNetworkPlacementConfigurationSecondaryVnicSubnet[];
    }

    export interface GetClusterNetworksClusterNetworkPlacementConfigurationSecondaryVnicSubnet {
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
         */
        subnetId: string;
    }

    export interface GetClusterNetworksFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetComputeCapacityReservationInstanceReservationConfig {
        /**
         * The fault domain of this reservation configuration.  If a value is not supplied, this reservation configuration is applicable to all fault domains in the specified availability domain. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm).
         */
        faultDomain: string;
        /**
         * The shape to use when launching instances using compute capacity reservations. The shape determines the number of CPUs, the amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
         */
        instanceShape: string;
        /**
         * The shape configuration requested when launching instances in a compute capacity reservation.
         */
        instanceShapeConfigs: outputs.Core.GetComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig[];
        /**
         * The total number of instances that can be launched from the capacity configuration.
         */
        reservedCount: string;
        /**
         * The amount of capacity in use out of the total capacity reserved in this capacity configuration.
         */
        usedCount: string;
    }

    export interface GetComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig {
        /**
         * The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the instance.
         */
        ocpus: number;
    }

    export interface GetComputeCapacityReservationInstanceShapesComputeCapacityReservationInstanceShape {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The name of the available shape used to launch instances in a compute capacity reservation.
         */
        instanceShape: string;
    }

    export interface GetComputeCapacityReservationInstanceShapesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetComputeCapacityReservationInstancesCapacityReservationInstance {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The fault domain the instance is running in.
         */
        faultDomain: string;
        /**
         * The OCID of the instance.
         */
        id: string;
        /**
         * The shape of the instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
         */
        shape: string;
        /**
         * The shape configuration requested when launching instances in a compute capacity reservation.
         */
        shapeConfigs: outputs.Core.GetComputeCapacityReservationInstancesCapacityReservationInstanceShapeConfig[];
    }

    export interface GetComputeCapacityReservationInstancesCapacityReservationInstanceShapeConfig {
        /**
         * The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the instance.
         */
        ocpus: number;
    }

    export interface GetComputeCapacityReservationInstancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetComputeCapacityReservationsComputeCapacityReservation {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute capacity reservation.
         */
        id: string;
        /**
         * The capacity configurations for the capacity reservation.
         */
        instanceReservationConfigs: outputs.Core.GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfig[];
        /**
         * Whether this capacity reservation is the default. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
         */
        isDefaultReservation: boolean;
        /**
         * The number of instances for which capacity will be held with this compute capacity reservation. This number is the sum of the values of the `reservedCount` fields for all of the instance capacity configurations under this reservation. The purpose of this field is to calculate the percentage usage of the reservation.
         */
        reservedInstanceCount: string;
        /**
         * A filter to only return resources that match the given lifecycle state.
         */
        state: string;
        /**
         * The date and time the compute capacity reservation was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time the compute capacity reservation was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeUpdated: string;
        /**
         * The total number of instances currently consuming space in this compute capacity reservation. This number is the sum of the values of the `usedCount` fields for all of the instance capacity configurations under this reservation. The purpose of this field is to calculate the percentage usage of the reservation.
         */
        usedInstanceCount: string;
    }

    export interface GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfig {
        /**
         * The fault domain of this reservation configuration.  If a value is not supplied, this reservation configuration is applicable to all fault domains in the specified availability domain. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm).
         */
        faultDomain: string;
        /**
         * The shape to use when launching instances using compute capacity reservations. The shape determines the number of CPUs, the amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
         */
        instanceShape: string;
        /**
         * The shape configuration requested when launching instances in a compute capacity reservation.
         */
        instanceShapeConfigs: outputs.Core.GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig[];
        /**
         * The total number of instances that can be launched from the capacity configuration.
         */
        reservedCount: string;
        /**
         * The amount of capacity in use out of the total capacity reserved in this capacity configuration.
         */
        usedCount: string;
    }

    export interface GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig {
        /**
         * The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs available to the instance.
         */
        ocpus: number;
    }

    export interface GetComputeCapacityReservationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetComputeGlobalImageCapabilitySchemasComputeGlobalImageCapabilitySchema {
        /**
         * A filter to return only resources that match the given compartment OCID exactly.
         */
        compartmentId: string;
        /**
         * The name of the global capabilities version resource that is considered the current version.
         */
        currentVersionName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute global image capability schema
         */
        id: string;
        /**
         * The date and time the compute global image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetComputeGlobalImageCapabilitySchemasFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetComputeGlobalImageCapabilitySchemasVersionsComputeGlobalImageCapabilitySchemaVersion {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute global image capability schema
         */
        computeGlobalImageCapabilitySchemaId: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The name of the compute global image capability schema version
         */
        name: string;
        /**
         * The map of each capability name to its ImageCapabilityDescriptor.
         */
        schemaData: {[key: string]: any};
        /**
         * The date and time the compute global image capability schema version was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetComputeGlobalImageCapabilitySchemasVersionsFilter {
        /**
         * The name of the compute global image capability schema version
         */
        name: string;
        regex?: boolean;
        /**
         * the list of values for the enum
         */
        values: string[];
    }

    export interface GetComputeImageCapabilitySchemasComputeImageCapabilitySchema {
        /**
         * A filter to return only resources that match the given compartment OCID exactly.
         */
        compartmentId: string;
        /**
         * The ocid of the compute global image capability schema
         */
        computeGlobalImageCapabilitySchemaId: string;
        /**
         * The name of the compute global image capability schema version
         */
        computeGlobalImageCapabilitySchemaVersionName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The compute image capability schema [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of an image.
         */
        imageId: string;
        /**
         * A mapping of each capability name to its ImageCapabilityDescriptor.
         */
        schemaData: {[key: string]: any};
        /**
         * The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetComputeImageCapabilitySchemasFilter {
        name: string;
        regex?: boolean;
        /**
         * the list of values for the enum
         */
        values: string[];
    }

    export interface GetConsoleHistoriesConsoleHistory {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the console history metadata object.
         */
        id: string;
        /**
         * The OCID of the instance.
         */
        instanceId: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the history was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetConsoleHistoriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCpeDeviceShapeCpeDeviceInfo {
        /**
         * The platform or software version of the CPE device.
         */
        platformSoftwareVersion: string;
        /**
         * The vendor that makes the CPE device.
         */
        vendor: string;
    }

    export interface GetCpeDeviceShapeParameter {
        /**
         * A descriptive label for the question (for example, to display in a form in a graphical interface). Avoid entering confidential information.
         */
        displayName: string;
        /**
         * A description or explanation of the question, to help the customer answer accurately.
         */
        explanation: string;
        /**
         * A string that identifies the question.
         */
        key: string;
    }

    export interface GetCpeDeviceShapesCpeDeviceShape {
        /**
         * Basic information about a particular CPE device type.
         */
        cpeDeviceInfos: outputs.Core.GetCpeDeviceShapesCpeDeviceShapeCpeDeviceInfo[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE device shape. This value uniquely identifies the type of CPE device.
         */
        cpeDeviceShapeId: string;
        /**
         * A template of CPE device configuration information that will be merged with the customer's answers to the questions to render the final CPE device configuration content. Also see:
         * * [GetCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/GetCpeDeviceConfigContent)
         * * [GetIpsecCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnection/GetIpsecCpeDeviceConfigContent)
         * * [GetTunnelCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/TunnelCpeDeviceConfig/GetTunnelCpeDeviceConfigContent)
         */
        template: string;
    }

    export interface GetCpeDeviceShapesCpeDeviceShapeCpeDeviceInfo {
        /**
         * The platform or software version of the CPE device.
         */
        platformSoftwareVersion: string;
        /**
         * The vendor that makes the CPE device.
         */
        vendor: string;
    }

    export interface GetCpeDeviceShapesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCpesCpe {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE's device type. The Networking service maintains a general list of CPE device types (for example, Cisco ASA). For each type, Oracle provides CPE configuration content that can help a network engineer configure the CPE. The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) uniquely identifies the type of device. To get the OCIDs for the device types on the list, see [ListCpeDeviceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CpeDeviceShapeSummary/ListCpeDeviceShapes).
         */
        cpeDeviceShapeId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The CPE's Oracle ID (OCID).
         */
        id: string;
        /**
         * The public IP address of the on-premises router.
         */
        ipAddress: string;
        /**
         * The date and time the CPE was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetCpesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCrossConnectGroupMacsecProperty {
        /**
         * Type of encryption cipher suite to use for the MACsec connection.
         */
        encryptionCipher: string;
        /**
         * An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
         */
        primaryKeys: outputs.Core.GetCrossConnectGroupMacsecPropertyPrimaryKey[];
        /**
         * The cross-connect group's current state.
         */
        state: string;
    }

    export interface GetCrossConnectGroupMacsecPropertyPrimaryKey {
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity Association Key (CAK) of this MACsec key.
         */
        connectivityAssociationKeySecretId: string;
        /**
         * The secret version of the `connectivityAssociationKey` secret in Vault.
         */
        connectivityAssociationKeySecretVersion: string;
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity association Key Name (CKN) of this MACsec key.
         */
        connectivityAssociationNameSecretId: string;
        /**
         * The secret version of the connectivity association name secret in Vault.
         */
        connectivityAssociationNameSecretVersion: string;
    }

    export interface GetCrossConnectGroupsCrossConnectGroup {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * A reference name or identifier for the physical fiber connection that this cross-connect group uses.
         */
        customerReferenceName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The cross-connect group's Oracle ID (OCID).
         */
        id: string;
        /**
         * Properties used for MACsec (if capable).
         */
        macsecProperties: outputs.Core.GetCrossConnectGroupsCrossConnectGroupMacsecProperty[];
        /**
         * The FastConnect device that terminates the logical connection. This device might be different than the device that terminates the physical connection.
         */
        ociLogicalDeviceName: string;
        /**
         * The FastConnect device that terminates the physical connection.
         */
        ociPhysicalDeviceName: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * The date and time the cross-connect group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetCrossConnectGroupsCrossConnectGroupMacsecProperty {
        /**
         * Type of encryption cipher suite to use for the MACsec connection.
         */
        encryptionCipher: string;
        /**
         * An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
         */
        primaryKeys: outputs.Core.GetCrossConnectGroupsCrossConnectGroupMacsecPropertyPrimaryKey[];
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
    }

    export interface GetCrossConnectGroupsCrossConnectGroupMacsecPropertyPrimaryKey {
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity Association Key (CAK) of this MACsec key.
         */
        connectivityAssociationKeySecretId: string;
        /**
         * The secret version of the `connectivityAssociationKey` secret in Vault.
         */
        connectivityAssociationKeySecretVersion: string;
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity association Key Name (CKN) of this MACsec key.
         */
        connectivityAssociationNameSecretId: string;
        /**
         * The secret version of the connectivity association name secret in Vault.
         */
        connectivityAssociationNameSecretVersion: string;
    }

    export interface GetCrossConnectGroupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCrossConnectLocationsCrossConnectLocation {
        /**
         * A description of the location.
         */
        description: string;
        /**
         * The name of the location.  Example: `CyrusOne, Chandler, AZ`
         */
        name: string;
    }

    export interface GetCrossConnectLocationsFilter {
        /**
         * The name of the location.  Example: `CyrusOne, Chandler, AZ`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCrossConnectMacsecProperty {
        /**
         * Type of encryption cipher suite to use for the MACsec connection.
         */
        encryptionCipher: string;
        /**
         * An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
         */
        primaryKeys: outputs.Core.GetCrossConnectMacsecPropertyPrimaryKey[];
        /**
         * The cross-connect's current state.
         */
        state: string;
    }

    export interface GetCrossConnectMacsecPropertyPrimaryKey {
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity Association Key (CAK) of this MACsec key.
         */
        connectivityAssociationKeySecretId: string;
        /**
         * The secret version of the `connectivityAssociationKey` secret in Vault.
         */
        connectivityAssociationKeySecretVersion: string;
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity association Key Name (CKN) of this MACsec key.
         */
        connectivityAssociationNameSecretId: string;
        /**
         * The secret version of the connectivity association name secret in Vault.
         */
        connectivityAssociationNameSecretVersion: string;
    }

    export interface GetCrossConnectPortSpeedShapeCrossConnectPortSpeedShape {
        /**
         * The name of the port speed shape.  Example: `10 Gbps`
         */
        name: string;
        /**
         * The port speed in Gbps.  Example: `10`
         */
        portSpeedInGbps: number;
    }

    export interface GetCrossConnectPortSpeedShapeFilter {
        /**
         * The name of the port speed shape.  Example: `10 Gbps`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCrossConnectsCrossConnect {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect group.
         */
        crossConnectGroupId: string;
        /**
         * A reference name or identifier for the physical fiber connection that this cross-connect uses.
         */
        customerReferenceName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        farCrossConnectOrCrossConnectGroupId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The cross-connect's Oracle ID (OCID).
         */
        id: string;
        isActive: boolean;
        /**
         * The name of the FastConnect location where this cross-connect is installed.
         */
        locationName: string;
        /**
         * Properties used for MACsec (if capable).
         */
        macsecProperties: outputs.Core.GetCrossConnectsCrossConnectMacsecProperty[];
        nearCrossConnectOrCrossConnectGroupId: string;
        /**
         * The FastConnect device that terminates the logical connection. This device might be different than the device that terminates the physical connection.
         */
        ociLogicalDeviceName: string;
        /**
         * The FastConnect device that terminates the physical connection.
         */
        ociPhysicalDeviceName: string;
        /**
         * A string identifying the meet-me room port for this cross-connect.
         */
        portName: string;
        /**
         * The port speed for this cross-connect.  Example: `10 Gbps`
         */
        portSpeedShapeName: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * The date and time the cross-connect was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetCrossConnectsCrossConnectMacsecProperty {
        /**
         * Type of encryption cipher suite to use for the MACsec connection.
         */
        encryptionCipher: string;
        /**
         * An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
         */
        primaryKeys: outputs.Core.GetCrossConnectsCrossConnectMacsecPropertyPrimaryKey[];
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
    }

    export interface GetCrossConnectsCrossConnectMacsecPropertyPrimaryKey {
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity Association Key (CAK) of this MACsec key.
         */
        connectivityAssociationKeySecretId: string;
        /**
         * The secret version of the `connectivityAssociationKey` secret in Vault.
         */
        connectivityAssociationKeySecretVersion: string;
        /**
         * Secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) containing the Connectivity association Key Name (CKN) of this MACsec key.
         */
        connectivityAssociationNameSecretId: string;
        /**
         * The secret version of the connectivity association name secret in Vault.
         */
        connectivityAssociationNameSecretVersion: string;
    }

    export interface GetCrossConnectsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDedicatedVmHostInstanceShapesDedicatedVmHostInstanceShape {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The name of the virtual machine instance shapes that can be launched on a dedicated VM host.
         */
        instanceShapeName: string;
    }

    export interface GetDedicatedVmHostInstanceShapesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDedicatedVmHostInstancesDedicatedVmHostInstance {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The OCID of the virtual machine instance.
         */
        instanceId: string;
        /**
         * The shape of the VM instance.
         */
        shape: string;
        /**
         * The date and time the virtual machine instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetDedicatedVmHostInstancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDedicatedVmHostShapesDedicatedVmHostShape {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The name of the dedicated VM host shape. You can enumerate all available shapes by calling [ListDedicatedVmHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/dedicatedVmHostShapes).
         */
        dedicatedVmHostShape: string;
    }

    export interface GetDedicatedVmHostShapesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDedicatedVmHostsDedicatedVmHost {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The dedicated virtual machine host shape. The shape determines the number of CPUs and other resources available for VMs.
         */
        dedicatedVmHostShape: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The fault domain for the dedicated virtual machine host's assigned instances. For more information, see [Fault Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm#fault).
         */
        faultDomain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated VM host.
         */
        id: string;
        /**
         * The current available memory of the dedicated VM host, in GBs.
         */
        remainingMemoryInGbs: number;
        /**
         * The current available OCPUs of the dedicated VM host.
         */
        remainingOcpus: number;
        /**
         * A filter to only return resources that match the given lifecycle state.
         */
        state: string;
        /**
         * The date and time the dedicated VM host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The current total memory of the dedicated VM host, in GBs.
         */
        totalMemoryInGbs: number;
        /**
         * The current total OCPUs of the dedicated VM host.
         */
        totalOcpus: number;
    }

    export interface GetDedicatedVmHostsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDhcpOptionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDhcpOptionsOption {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The search domain name type of DHCP options
         */
        domainNameType: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) for the set of DHCP options.
         */
        id: string;
        /**
         * The collection of individual DHCP options.
         */
        options: outputs.Core.GetDhcpOptionsOptionOption[];
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the set of DHCP options was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetDhcpOptionsOptionOption {
        /**
         * If you set `serverType` to `CustomDnsServer`, specify the IP address of at least one DNS server of your choice (three maximum).
         */
        customDnsServers: string[];
        /**
         * A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query, the OS will append this search domain name to the value being queried.
         */
        searchDomainNames: string[];
        /**
         * * **VcnLocal:** Reserved for future use.
         * * **VcnLocalPlusInternet:** Also referred to as "Internet and VCN Resolver". Instances can resolve internet hostnames (no internet gateway is required), and can resolve hostnames of instances in the VCN. This is the default value in the default set of DHCP options in the VCN. For the Internet and VCN Resolver to work across the VCN, there must also be a DNS label set for the VCN, a DNS label set for each subnet, and a hostname for each instance. The Internet and VCN Resolver also enables reverse DNS lookup, which lets you determine the hostname corresponding to the private IP address. For more information, see [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/dns.htm).
         * * **CustomDnsServer:** Instances use a DNS server of your choice (three maximum).
         */
        serverType: string;
        /**
         * The specific DHCP option. Either `DomainNameServer` (for [DhcpDnsOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpDnsOption/)) or `SearchDomain` (for [DhcpSearchDomainOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpSearchDomainOption/)).
         */
        type: string;
    }

    export interface GetDrgAttachmentsDrgAttachment {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
         */
        drgId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table assigned to the DRG attachment.
         */
        drgRouteTableId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export route distribution used to specify how routes in the assigned DRG route table are advertised to the attachment. If this value is null, no routes are advertised through this attachment.
         */
        exportDrgRouteDistributionId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
         */
        id: string;
        /**
         * Indicates whether the DRG attachment and attached network live in a different tenancy than the DRG.  Example: `false`
         */
        isCrossTenancy: boolean;
        networkDetails: outputs.Core.GetDrgAttachmentsDrgAttachmentNetworkDetail[];
        removeExportDrgRouteDistributionTrigger: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the DRG attachment is using.
         */
        routeTableId: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * The date and time the DRG attachment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetDrgAttachmentsDrgAttachmentNetworkDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
         */
        id: string;
        /**
         * The IPSec connection that contains the attached IPSec tunnel.
         */
        ipsecConnectionId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the DRG attachment is using.
         */
        routeTableId: string;
        /**
         * The type can be one of these values: `IPSEC_TUNNEL`, `REMOTE_PEERING_CONNECTION`, `VCN`, `VIRTUAL_CIRCUIT`
         */
        type: string;
        /**
         * Indicates whether the VCN CIDRs or the individual subnet CIDRs are imported from the attachment. Routes from the VCN ingress route table are always imported.
         */
        vcnRouteType: string;
    }

    export interface GetDrgAttachmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDrgRouteDistributionStatementsDrgRouteDistributionStatement {
        /**
         * `ACCEPT` indicates the route should be imported or exported as-is.
         */
        action: string;
        /**
         * The Oracle-assigned ID of the route distribution statement.
         */
        id: string;
        /**
         * The action is applied only if all of the match criteria is met. If match type is MATCH_ALL, any input is considered a match.
         */
        matchCriterias: outputs.Core.GetDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria[];
        /**
         * This field specifies the priority of each statement in a route distribution. Priorities must be unique within a particular route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
         */
        priority: number;
    }

    export interface GetDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria {
        /**
         * The type of the network resource to be included in this match. A match for a network type implies that all DRG attachments of that type insert routes into the table.
         */
        attachmentType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG attachment.
         */
        drgAttachmentId: string;
        /**
         * The type of the match criteria for a route distribution statement.
         */
        matchType: string;
    }

    export interface GetDrgRouteDistributionStatementsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDrgRouteDistributionsDrgRouteDistribution {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the route distribution.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Whether this distribution defines how routes get imported into route tables or exported through DRG attachments.
         */
        distributionType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
         */
        drgId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The route distribution's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * A filter that only returns resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * The date and time the route distribution was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetDrgRouteDistributionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDrgRouteTableRouteRulesDrgRouteRule {
        /**
         * Additional properties for the route, computed by the service.
         */
        attributes: {[key: string]: any};
        /**
         * Represents the range of IP addresses to match against when routing traffic.
         */
        destination: string;
        /**
         * The type of destination for the rule. the type is required if `direction` = `EGRESS`.
         */
        destinationType: string;
        /**
         * The Oracle-assigned ID of the DRG route rule.
         */
        id: string;
        /**
         * Indicates that if the next hop attachment does not exist, so traffic for this route is discarded without notification.
         */
        isBlackhole: boolean;
        /**
         * Indicates that the route was not imported due to a conflict between route rules.
         */
        isConflict: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next hop DRG attachment responsible for reaching the network destination.
         */
        nextHopDrgAttachmentId: string;
        /**
         * The earliest origin of a route. If a route is advertised to a DRG through an IPsec tunnel attachment, and is propagated to peered DRGs via RPC attachments, the route's provenance in the peered DRGs remains `IPSEC_TUNNEL`, because that is the earliest origin.
         */
        routeProvenance: string;
        /**
         * Static routes are specified through the DRG route table API. Dynamic routes are learned by the DRG from the DRG attachments through various routing protocols.
         */
        routeType: string;
    }

    export interface GetDrgRouteTableRouteRulesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDrgRouteTablesDrgRouteTable {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment the DRG is in. The DRG route table is always in the same compartment as the DRG.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
         */
        drgId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the import route distribution.
         */
        importDrgRouteDistributionId: string;
        /**
         * If you want traffic to be routed using ECMP across your virtual circuits or IPSec tunnels to your on-premises network, enable ECMP on the DRG route table to which these attachments import routes.
         */
        isEcmpEnabled: boolean;
        removeImportTrigger: boolean;
        /**
         * A filter that only returns matches for the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * The date and time the DRG route table was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetDrgRouteTablesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDrgsDrg {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The default DRG route table for this DRG. Each network type has a default DRG route table.
         */
        defaultDrgRouteTables: outputs.Core.GetDrgsDrgDefaultDrgRouteTable[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this DRG's default export route distribution for the DRG attachments.
         */
        defaultExportDrgRouteDistributionId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The DRG's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        redundancyStatus: string;
        /**
         * The DRG's current state.
         */
        state: string;
        /**
         * The date and time the DRG was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetDrgsDrgDefaultDrgRouteTable {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table assigned to DRG attachments of type IPSEC_TUNNEL on creation.
         */
        ipsecTunnel: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type REMOTE_PEERING_CONNECTION on creation.
         */
        remotePeeringConnection: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type VCN on creation.
         */
        vcn: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type VIRTUAL_CIRCUIT on creation.
         */
        virtualCircuit: string;
    }

    export interface GetDrgsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFastConnectProviderServicesFastConnectProviderService {
        /**
         * Who is responsible for managing the virtual circuit bandwidth.
         */
        bandwithShapeManagement: string;
        /**
         * Who is responsible for managing the ASN information for the network at the other end of the connection from Oracle.
         */
        customerAsnManagement: string;
        /**
         * The location of the provider's website or portal. This portal is where you can get information about the provider service, create a virtual circuit connection from the provider to Oracle Cloud Infrastructure, and retrieve your provider service key for that virtual circuit connection.  Example: `https://example.com`
         */
        description: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service offered by the provider.
         */
        id: string;
        /**
         * Who is responsible for managing the private peering BGP information.
         */
        privatePeeringBgpManagement: string;
        /**
         * The name of the provider.
         */
        providerName: string;
        /**
         * Who is responsible for managing the provider service key.
         */
        providerServiceKeyManagement: string;
        /**
         * The name of the service offered by the provider.
         */
        providerServiceName: string;
        /**
         * Who is responsible for managing the public peering BGP information.
         */
        publicPeeringBgpManagement: string;
        /**
         * Total number of cross-connect or cross-connect groups required for the virtual circuit.
         */
        requiredTotalCrossConnects: number;
        /**
         * An array of virtual circuit types supported by this service.
         */
        supportedVirtualCircuitTypes: string[];
        /**
         * Provider service type.
         */
        type: string;
    }

    export interface GetFastConnectProviderServicesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetImageAgentFeature {
        /**
         * This attribute is not used.
         */
        isManagementSupported: boolean;
        /**
         * This attribute is not used.
         */
        isMonitoringSupported: boolean;
    }

    export interface GetImageImageSourceDetail {
        bucketName: string;
        namespaceName: string;
        objectName: string;
        /**
         * The image's operating system.  Example: `Oracle Linux`
         */
        operatingSystem: string;
        /**
         * The image's operating system version.  Example: `7.2`
         */
        operatingSystemVersion: string;
        sourceImageType: string;
        sourceType: string;
        sourceUri: string;
    }

    export interface GetImageLaunchOption {
        /**
         * Emulation type for the boot volume.
         */
        bootVolumeType: string;
        /**
         * Firmware used to boot VM. Select the option that matches your operating system.
         */
        firmware: string;
        /**
         * Whether to enable consistent volume naming feature. Defaults to false.
         */
        isConsistentVolumeNamingEnabled: boolean;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Emulation type for the physical network interface card (NIC).
         */
        networkType: string;
        /**
         * Emulation type for volume.
         */
        remoteDataVolumeType: string;
    }

    export interface GetImageShapeMemoryConstraint {
        /**
         * The maximum amount of memory, in gigabytes.
         */
        maxInGbs: number;
        /**
         * The minimum amount of memory, in gigabytes.
         */
        minInGbs: number;
    }

    export interface GetImageShapeOcpuConstraint {
        /**
         * The maximum number of OCPUs supported for this image and shape.
         */
        max: number;
        /**
         * The minimum number of OCPUs supported for this image and shape.
         */
        min: number;
    }

    export interface GetImageShapesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetImageShapesImageShapeCompatibility {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
         */
        imageId: string;
        /**
         * For a flexible image and shape, the amount of memory supported for instances that use this image.
         */
        memoryConstraints: outputs.Core.GetImageShapesImageShapeCompatibilityMemoryConstraint[];
        /**
         * OCPU options for an image and shape.
         */
        ocpuConstraints: outputs.Core.GetImageShapesImageShapeCompatibilityOcpuConstraint[];
        /**
         * The shape name.
         */
        shape: string;
    }

    export interface GetImageShapesImageShapeCompatibilityMemoryConstraint {
        /**
         * The maximum amount of memory, in gigabytes.
         */
        maxInGbs: number;
        /**
         * The minimum amount of memory, in gigabytes.
         */
        minInGbs: number;
    }

    export interface GetImageShapesImageShapeCompatibilityOcpuConstraint {
        /**
         * The maximum number of OCPUs supported for this image and shape.
         */
        max: number;
        /**
         * The minimum number of OCPUs supported for this image and shape.
         */
        min: number;
    }

    export interface GetImagesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetImagesImage {
        /**
         * Oracle Cloud Agent features supported on the image.
         */
        agentFeatures: outputs.Core.GetImagesImageAgentFeature[];
        /**
         * The OCID of the image originally used to launch the instance.
         */
        baseImageId: string;
        /**
         * The size of the internal storage for this image that is subject to billing (1 GB = 1,073,741,824 bytes).  Example: `100`
         */
        billableSizeInGbs: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Whether instances launched with this image can be used to create new images. For example, you cannot create an image of an Oracle Database instance.  Example: `true`
         */
        createImageAllowed: boolean;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the image.
         */
        id: string;
        imageSourceDetails: outputs.Core.GetImagesImageImageSourceDetail[];
        instanceId: string;
        /**
         * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
         */
        launchMode: string;
        /**
         * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
         */
        launchOptions: outputs.Core.GetImagesImageLaunchOption[];
        /**
         * The listing type of the image. The default value is "NONE".
         */
        listingType: string;
        /**
         * The image's operating system.  Example: `Oracle Linux`
         */
        operatingSystem: string;
        /**
         * The image's operating system version.  Example: `7.2`
         */
        operatingSystemVersion: string;
        /**
         * The boot volume size for an instance launched from this image (1 MB = 1,048,576 bytes). Note this is not the same as the size of the image when it was exported or the actual size of the image.  Example: `47694`
         */
        sizeInMbs: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the image was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetImagesImageAgentFeature {
        /**
         * This attribute is not used.
         */
        isManagementSupported: boolean;
        /**
         * This attribute is not used.
         */
        isMonitoringSupported: boolean;
    }

    export interface GetImagesImageImageSourceDetail {
        bucketName: string;
        namespaceName: string;
        objectName: string;
        /**
         * The image's operating system.  Example: `Oracle Linux`
         */
        operatingSystem: string;
        /**
         * The image's operating system version.  Example: `7.2`
         */
        operatingSystemVersion: string;
        sourceImageType: string;
        sourceType: string;
        sourceUri: string;
    }

    export interface GetImagesImageLaunchOption {
        /**
         * Emulation type for the boot volume.
         */
        bootVolumeType: string;
        /**
         * Firmware used to boot VM. Select the option that matches your operating system.
         */
        firmware: string;
        /**
         * Whether to enable consistent volume naming feature. Defaults to false.
         */
        isConsistentVolumeNamingEnabled: boolean;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Emulation type for the physical network interface card (NIC).
         */
        networkType: string;
        /**
         * Emulation type for volume.
         */
        remoteDataVolumeType: string;
    }

    export interface GetInstanceAgentConfig {
        /**
         * Whether Oracle Cloud Agent can run all of the available plugins. This includes the management and monitoring plugins.
         */
        areAllPluginsDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can run all the available management plugins.
         */
        isManagementDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins.
         */
        isMonitoringDisabled: boolean;
        /**
         * The configuration of plugins associated with this instance.
         */
        pluginsConfigs: outputs.Core.GetInstanceAgentConfigPluginsConfig[];
    }

    export interface GetInstanceAgentConfigPluginsConfig {
        /**
         * Whether the plugin should be enabled or disabled.
         */
        desiredState: string;
        /**
         * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         */
        name: string;
    }

    export interface GetInstanceAvailabilityConfig {
        /**
         * Whether live migration is preferred for infrastructure maintenance.  If null preference is specified, live migration will be preferred for infrastructure maintenance for applicable instances.
         */
        isLiveMigrationPreferred: boolean;
        /**
         * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
         */
        recoveryAction: string;
    }

    export interface GetInstanceConfigurationInstanceDetail {
        blockVolumes: outputs.Core.GetInstanceConfigurationInstanceDetailBlockVolume[];
        /**
         * The type of instance details. Supported instanceType is compute
         */
        instanceType: string;
        /**
         * Instance launch details for creating an instance from an instance configuration. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
         */
        launchDetails: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetail[];
        secondaryVnics: outputs.Core.GetInstanceConfigurationInstanceDetailSecondaryVnic[];
    }

    export interface GetInstanceConfigurationInstanceDetailBlockVolume {
        /**
         * Volume attachmentDetails. Please see [AttachVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/AttachVolumeDetails/)
         */
        attachDetails: outputs.Core.GetInstanceConfigurationInstanceDetailBlockVolumeAttachDetail[];
        /**
         * Creates a new block volume. Please see [CreateVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVolumeDetails/)
         */
        createDetails: outputs.Core.GetInstanceConfigurationInstanceDetailBlockVolumeCreateDetail[];
        /**
         * The OCID of the volume.
         */
        volumeId: string;
    }

    export interface GetInstanceConfigurationInstanceDetailBlockVolumeAttachDetail {
        /**
         * The device name.
         */
        device: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Whether the attachment should be created in read-only mode.
         */
        isReadOnly: boolean;
        /**
         * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
         */
        isShareable: boolean;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
        /**
         * Whether to use CHAP authentication for the volume attachment. Defaults to false.
         */
        useChap: boolean;
    }

    export interface GetInstanceConfigurationInstanceDetailBlockVolumeCreateDetail {
        /**
         * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
         */
        backupPolicyId: string;
        /**
         * The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment as the instance that was used to create the instance configuration.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Key Management key to assign as the master encryption key for the volume.
         */
        kmsKeyId: string;
        /**
         * The size of the volume in GBs.
         */
        sizeInGbs: string;
        sourceDetails: outputs.Core.GetInstanceConfigurationInstanceDetailBlockVolumeCreateDetailSourceDetail[];
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        vpusPerGb: string;
    }

    export interface GetInstanceConfigurationInstanceDetailBlockVolumeCreateDetailSourceDetail {
        /**
         * The OCID of the volume backup.
         */
        id: string;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetail {
        /**
         * Configuration options for the Oracle Cloud Agent software running on the instance.
         */
        agentConfigs: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfig[];
        /**
         * Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
         */
        availabilityConfigs: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig[];
        /**
         * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The OCID of the compute capacity reservation this instance is launched under.
         */
        capacityReservationId: string;
        /**
         * The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment as the instance that was used to create the instance configuration.
         */
        compartmentId: string;
        /**
         * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
         */
        createVnicDetails: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail[];
        /**
         * The OCID of dedicated VM host.
         */
        dedicatedVmHostId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         */
        extendedMetadata: {[key: string]: any};
        /**
         * A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
         */
        faultDomain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
         */
        instanceOptions: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailInstanceOption[];
        /**
         * This is an advanced option.
         */
        ipxeScript: string;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
         */
        launchMode: string;
        /**
         * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
         */
        launchOptions: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailLaunchOption[];
        /**
         * Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
         */
        metadata: {[key: string]: any};
        /**
         * The platform configuration requested for the instance.
         */
        platformConfigs: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig[];
        /**
         * Configuration options for preemptible instances.
         */
        preemptibleInstanceConfigs: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig[];
        /**
         * The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
         */
        preferredMaintenanceAction: string;
        /**
         * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
         */
        shape: string;
        /**
         * The shape configuration requested for the instance.
         */
        shapeConfigs: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailShapeConfig[];
        sourceDetails: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail[];
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfig {
        /**
         * Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
         */
        areAllPluginsDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
         */
        isManagementDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
         */
        isMonitoringDisabled: boolean;
        /**
         * The configuration of plugins associated with this instance.
         */
        pluginsConfigs: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfigPluginsConfig[];
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfigPluginsConfig {
        /**
         * Whether the plugin should be enabled or disabled. Accepted values are `ENABLED` and `DISABLED`
         */
        desiredState: string;
        /**
         * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         */
        name: string;
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig {
        /**
         * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
         */
        recoveryAction: string;
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail {
        /**
         * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
         */
        assignPrivateDnsRecord: boolean;
        /**
         * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        assignPublicIp: boolean;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        hostnameLabel: string;
        /**
         * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        privateIp: string;
        /**
         * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        skipSourceDestCheck: boolean;
        /**
         * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        subnetId: string;
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailInstanceOption {
        /**
         * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
         */
        areLegacyImdsEndpointsDisabled: boolean;
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailLaunchOption {
        /**
         * Emulation type for the boot volume.
         */
        bootVolumeType: string;
        /**
         * Firmware used to boot VM. Select the option that matches your operating system.
         */
        firmware: string;
        /**
         * Whether to enable consistent volume naming feature. Defaults to false.
         */
        isConsistentVolumeNamingEnabled: boolean;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Emulation type for the physical network interface card (NIC).
         */
        networkType: string;
        /**
         * Emulation type for volume.
         */
        remoteDataVolumeType: string;
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig {
        /**
         * Whether virtualization instructions are available.
         */
        areVirtualInstructionsEnabled: boolean;
        /**
         * Whether the Access Control Service is enabled on the instance. When enabled, the platform can enforce PCIe device isolation, required for VFIO device passthrough.
         */
        isAccessControlServiceEnabled: boolean;
        /**
         * Whether the input-output memory management unit is enabled.
         */
        isInputOutputMemoryManagementUnitEnabled: boolean;
        /**
         * Whether the Measured Boot feature is enabled on the instance.
         */
        isMeasuredBootEnabled: boolean;
        /**
         * Whether Secure Boot is enabled on the instance.
         */
        isSecureBootEnabled: boolean;
        /**
         * Whether symmetric multi-threading is enabled on the instance.
         */
        isSymmetricMultiThreadingEnabled: boolean;
        /**
         * Whether the Trusted Platform Module (TPM) is enabled on the instance.
         */
        isTrustedPlatformModuleEnabled: boolean;
        /**
         * The number of NUMA nodes per socket (NPS).
         */
        numaNodesPerSocket: string;
        /**
         * The percentage of cores enabled.
         */
        percentageOfCoresEnabled: number;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig {
        /**
         * The action to run when the preemptible instance is interrupted for eviction.
         */
        preemptionActions: outputs.Core.GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfigPreemptionAction[];
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfigPreemptionAction {
        /**
         * Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
         */
        preserveBootVolume: boolean;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailShapeConfig {
        /**
         * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
         */
        baselineOcpuUtilization: string;
        /**
         * The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The number of NVMe drives to be used for storage. A single drive has 6.8 TB available.
         */
        nvmes: number;
        /**
         * The total number of OCPUs available to the instance.
         */
        ocpus: number;
    }

    export interface GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail {
        /**
         * The OCID of the boot volume used to boot the instance.
         */
        bootVolumeId: string;
        /**
         * The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
         */
        bootVolumeSizeInGbs: string;
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        bootVolumeVpusPerGb: string;
        /**
         * The OCID of the image used to boot the instance.
         */
        imageId: string;
        /**
         * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
         */
        sourceType: string;
    }

    export interface GetInstanceConfigurationInstanceDetailSecondaryVnic {
        /**
         * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
         */
        createVnicDetails: outputs.Core.GetInstanceConfigurationInstanceDetailSecondaryVnicCreateVnicDetail[];
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Which physical network interface card (NIC) the VNIC will use. Defaults to 0. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
         */
        nicIndex: number;
    }

    export interface GetInstanceConfigurationInstanceDetailSecondaryVnicCreateVnicDetail {
        /**
         * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
         */
        assignPrivateDnsRecord: boolean;
        /**
         * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        assignPublicIp: boolean;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        hostnameLabel: string;
        /**
         * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        privateIp: string;
        /**
         * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        skipSourceDestCheck: boolean;
        /**
         * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        subnetId: string;
    }

    export interface GetInstanceConfigurationsFilter {
        /**
         * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInstanceConfigurationsInstanceConfiguration {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Parameters that were not specified when the instance configuration was created, but that are required to launch an instance from the instance configuration. See the [LaunchInstanceConfiguration](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance/LaunchInstanceConfiguration) operation.
         */
        deferredFields: string[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the volume backup.
         */
        id: string;
        instanceDetails: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetail[];
        instanceId: string;
        source: string;
        /**
         * The date and time the instance configuration was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetail {
        blockVolumes: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailBlockVolume[];
        /**
         * The type of instance details. Supported instanceType is compute
         */
        instanceType: string;
        /**
         * Instance launch details for creating an instance from an instance configuration. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
         */
        launchDetails: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetail[];
        secondaryVnics: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailSecondaryVnic[];
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailBlockVolume {
        /**
         * Volume attachmentDetails. Please see [AttachVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/AttachVolumeDetails/)
         */
        attachDetails: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailBlockVolumeAttachDetail[];
        /**
         * Creates a new block volume. Please see [CreateVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVolumeDetails/)
         */
        createDetails: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailBlockVolumeCreateDetail[];
        /**
         * The OCID of the volume.
         */
        volumeId: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailBlockVolumeAttachDetail {
        /**
         * The device name.
         */
        device: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Whether the attachment should be created in read-only mode.
         */
        isReadOnly: boolean;
        /**
         * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
         */
        isShareable: boolean;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
        /**
         * Whether to use CHAP authentication for the volume attachment. Defaults to false.
         */
        useChap: boolean;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailBlockVolumeCreateDetail {
        /**
         * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
         */
        backupPolicyId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Key Management key to assign as the master encryption key for the volume.
         */
        kmsKeyId: string;
        /**
         * The size of the volume in GBs.
         */
        sizeInGbs: string;
        sourceDetails: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailBlockVolumeCreateDetailSourceDetail[];
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        vpusPerGb: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailBlockVolumeCreateDetailSourceDetail {
        /**
         * The OCID of the volume backup.
         */
        id: string;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetail {
        /**
         * Configuration options for the Oracle Cloud Agent software running on the instance.
         */
        agentConfigs: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailAgentConfig[];
        /**
         * Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
         */
        availabilityConfigs: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig[];
        /**
         * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The OCID of the compute capacity reservation this instance is launched under.
         */
        capacityReservationId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
         */
        createVnicDetails: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail[];
        /**
         * The OCID of dedicated VM host.
         */
        dedicatedVmHostId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         */
        extendedMetadata: {[key: string]: any};
        /**
         * A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
         */
        faultDomain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
         */
        instanceOptions: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailInstanceOption[];
        /**
         * This is an advanced option.
         */
        ipxeScript: string;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
         */
        launchMode: string;
        /**
         * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
         */
        launchOptions: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailLaunchOption[];
        /**
         * Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
         */
        metadata: {[key: string]: any};
        /**
         * The platform configuration requested for the instance.
         */
        platformConfigs: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig[];
        /**
         * Configuration options for preemptible instances.
         */
        preemptibleInstanceConfigs: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig[];
        /**
         * The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
         */
        preferredMaintenanceAction: string;
        /**
         * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
         */
        shape: string;
        /**
         * The shape configuration requested for the instance.
         */
        shapeConfigs: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailShapeConfig[];
        sourceDetails: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailSourceDetail[];
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailAgentConfig {
        /**
         * Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
         */
        areAllPluginsDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
         */
        isManagementDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
         */
        isMonitoringDisabled: boolean;
        /**
         * The configuration of plugins associated with this instance.
         */
        pluginsConfigs: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailAgentConfigPluginsConfig[];
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailAgentConfigPluginsConfig {
        /**
         * Whether the plugin should be enabled or disabled. Accepted values are `ENABLED` and `DISABLED`
         */
        desiredState: string;
        /**
         * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         */
        name: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig {
        /**
         * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
         */
        recoveryAction: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail {
        /**
         * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
         */
        assignPrivateDnsRecord: boolean;
        /**
         * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        assignPublicIp: boolean;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        hostnameLabel: string;
        /**
         * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        privateIp: string;
        /**
         * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        skipSourceDestCheck: boolean;
        /**
         * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        subnetId: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailInstanceOption {
        /**
         * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
         */
        areLegacyImdsEndpointsDisabled: boolean;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailLaunchOption {
        /**
         * Emulation type for the boot volume.
         */
        bootVolumeType: string;
        /**
         * Firmware used to boot VM. Select the option that matches your operating system.
         */
        firmware: string;
        /**
         * Whether to enable consistent volume naming feature. Defaults to false.
         */
        isConsistentVolumeNamingEnabled: boolean;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Emulation type for the physical network interface card (NIC).
         */
        networkType: string;
        /**
         * Emulation type for volume.
         */
        remoteDataVolumeType: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig {
        /**
         * Whether virtualization instructions are available.
         */
        areVirtualInstructionsEnabled: boolean;
        /**
         * Whether the Access Control Service is enabled on the instance. When enabled, the platform can enforce PCIe device isolation, required for VFIO device passthrough.
         */
        isAccessControlServiceEnabled: boolean;
        /**
         * Whether the input-output memory management unit is enabled.
         */
        isInputOutputMemoryManagementUnitEnabled: boolean;
        /**
         * Whether the Measured Boot feature is enabled on the instance.
         */
        isMeasuredBootEnabled: boolean;
        /**
         * Whether Secure Boot is enabled on the instance.
         */
        isSecureBootEnabled: boolean;
        /**
         * Whether symmetric multi-threading is enabled on the instance.
         */
        isSymmetricMultiThreadingEnabled: boolean;
        /**
         * Whether the Trusted Platform Module (TPM) is enabled on the instance.
         */
        isTrustedPlatformModuleEnabled: boolean;
        /**
         * The number of NUMA nodes per socket (NPS).
         */
        numaNodesPerSocket: string;
        /**
         * The percentage of cores enabled.
         */
        percentageOfCoresEnabled: number;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig {
        /**
         * The action to run when the preemptible instance is interrupted for eviction.
         */
        preemptionActions: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfigPreemptionAction[];
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfigPreemptionAction {
        /**
         * Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
         */
        preserveBootVolume: boolean;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailShapeConfig {
        /**
         * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
         */
        baselineOcpuUtilization: string;
        /**
         * The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The number of NVMe drives to be used for storage. A single drive has 6.8 TB available.
         */
        nvmes: number;
        /**
         * The total number of OCPUs available to the instance.
         */
        ocpus: number;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailLaunchDetailSourceDetail {
        /**
         * The OCID of the boot volume used to boot the instance.
         */
        bootVolumeId: string;
        /**
         * The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
         */
        bootVolumeSizeInGbs: string;
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        bootVolumeVpusPerGb: string;
        /**
         * The OCID of the image used to boot the instance.
         */
        imageId: string;
        /**
         * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
         */
        sourceType: string;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailSecondaryVnic {
        /**
         * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
         */
        createVnicDetails: outputs.Core.GetInstanceConfigurationsInstanceConfigurationInstanceDetailSecondaryVnicCreateVnicDetail[];
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Which physical network interface card (NIC) the VNIC will use. Defaults to 0. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
         */
        nicIndex: number;
    }

    export interface GetInstanceConfigurationsInstanceConfigurationInstanceDetailSecondaryVnicCreateVnicDetail {
        /**
         * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
         */
        assignPrivateDnsRecord: boolean;
        /**
         * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        assignPublicIp: boolean;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        hostnameLabel: string;
        /**
         * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        privateIp: string;
        /**
         * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        skipSourceDestCheck: boolean;
        /**
         * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        subnetId: string;
    }

    export interface GetInstanceConsoleConnectionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInstanceConsoleConnectionsInstanceConsoleConnection {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The SSH connection string for the console connection.
         */
        connectionString: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The SSH public key's fingerprint for client authentication to the console connection.
         */
        fingerprint: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the console connection.
         */
        id: string;
        /**
         * The OCID of the instance.
         */
        instanceId: string;
        publicKey: string;
        /**
         * The SSH public key's fingerprint for the console connection service host.
         */
        serviceHostKeyFingerprint: string;
        /**
         * The current state of the console connection.
         */
        state: string;
        /**
         * The SSH connection string for the SSH tunnel used to connect to the console connection over VNC.
         */
        vncConnectionString: string;
    }

    export interface GetInstanceCreateVnicDetail {
        assignPrivateDnsRecord: boolean;
        assignPublicIp: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the instance VNIC's primary private IP.
         */
        hostnameLabel: string;
        nsgIds: string[];
        /**
         * The private IP address of instance VNIC. To set the private IP address, use the `privateIp` argument in create_vnic_details.
         */
        privateIp: string;
        skipSourceDestCheck: boolean;
        subnetId: string;
        vlanId: string;
    }

    export interface GetInstanceDevicesDevice {
        /**
         * A filter to return only available devices or only used devices.
         */
        isAvailable: boolean;
        /**
         * A filter to return only devices that match the given name exactly.
         */
        name: string;
    }

    export interface GetInstanceDevicesFilter {
        /**
         * A filter to return only devices that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInstanceInstanceOption {
        /**
         * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
         */
        areLegacyImdsEndpointsDisabled: boolean;
    }

    export interface GetInstanceLaunchOption {
        /**
         * Emulation type for the boot volume.
         */
        bootVolumeType: string;
        /**
         * Firmware used to boot VM. Select the option that matches your operating system.
         */
        firmware: string;
        /**
         * Whether to enable consistent volume naming feature. Defaults to false.
         */
        isConsistentVolumeNamingEnabled: boolean;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Emulation type for the physical network interface card (NIC).
         */
        networkType: string;
        /**
         * Emulation type for volume.
         */
        remoteDataVolumeType: string;
    }

    export interface GetInstanceMeasuredBootReportMeasurement {
        /**
         * The list of actual PCR entries measured during boot.
         */
        actuals: outputs.Core.GetInstanceMeasuredBootReportMeasurementActual[];
        /**
         * The list of expected PCR entries to use during verification.
         */
        policies: outputs.Core.GetInstanceMeasuredBootReportMeasurementPolicy[];
    }

    export interface GetInstanceMeasuredBootReportMeasurementActual {
        /**
         * The type of algorithm used to calculate the hash.
         */
        hashAlgorithm: string;
        /**
         * The index of the policy.
         */
        pcrIndex: string;
        /**
         * The hashed PCR value.
         */
        value: string;
    }

    export interface GetInstanceMeasuredBootReportMeasurementPolicy {
        /**
         * The type of algorithm used to calculate the hash.
         */
        hashAlgorithm: string;
        /**
         * The index of the policy.
         */
        pcrIndex: string;
        /**
         * The hashed PCR value.
         */
        value: string;
    }

    export interface GetInstancePlatformConfig {
        /**
         * Whether virtualization instructions are available.
         */
        areVirtualInstructionsEnabled: boolean;
        /**
         * Whether the Access Control Service is enabled on the instance. When enabled, the platform can enforce PCIe device isolation, required for VFIO device passthrough.
         */
        isAccessControlServiceEnabled: boolean;
        /**
         * Whether the input-output memory management unit is enabled.
         */
        isInputOutputMemoryManagementUnitEnabled: boolean;
        /**
         * Whether the Measured Boot is to be enabled on the instance
         */
        isMeasuredBootEnabled: boolean;
        /**
         * Whether the Secure Boot is to be enabled on the instance.
         */
        isSecureBootEnabled: boolean;
        /**
         * Whether symmetric multi-threading is enabled on the instance.
         */
        isSymmetricMultiThreadingEnabled: boolean;
        /**
         * Whether the Trusted Platform Module (TPM) is to be enabled on the instance.
         */
        isTrustedPlatformModuleEnabled: boolean;
        /**
         * The number of NUMA nodes per socket (NPS).
         */
        numaNodesPerSocket: string;
        /**
         * The percentage of cores enabled.
         */
        percentageOfCoresEnabled: number;
        /**
         * (Required) The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstancePoolInstancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInstancePoolInstancesInstance {
        autoTerminateInstanceOnDelete: boolean;
        /**
         * The availability domain the instance is running in.
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        decrementSizeOnDelete: boolean;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The fault domain the instance is running in.
         */
        faultDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration used to create the instance.
         */
        instanceConfigurationId: string;
        instanceId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool.
         */
        instancePoolId: string;
        /**
         * The load balancer backends that are configured for the instance pool instance.
         */
        loadBalancerBackends: outputs.Core.GetInstancePoolInstancesInstanceLoadBalancerBackend[];
        /**
         * The region that contains the availability domain the instance is running in.
         */
        region: string;
        /**
         * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
         */
        shape: string;
        /**
         * The lifecycle state of the instance. Refer to `lifecycleState` in the [Instance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance) resource.
         */
        state: string;
        /**
         * The date and time the instance pool instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetInstancePoolInstancesInstanceLoadBalancerBackend {
        /**
         * The health of the backend as observed by the load balancer.
         */
        backendHealthStatus: string;
        /**
         * The name of the backend in the backend set.
         */
        backendName: string;
        /**
         * The name of the backend set on the load balancer.
         */
        backendSetName: string;
        /**
         * The OCID of the load balancer attached to the instance pool.
         */
        loadBalancerId: string;
        /**
         * The lifecycle state of the instance. Refer to `lifecycleState` in the [Instance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance) resource.
         */
        state: string;
    }

    export interface GetInstancePoolLoadBalancer {
        /**
         * The name of the backend set on the load balancer.
         */
        backendSetName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool.
         */
        instancePoolId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
         */
        loadBalancerId: string;
        /**
         * The port value used for the backends.
         */
        port: number;
        /**
         * The current state of the instance pool.
         */
        state: string;
        /**
         * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
         */
        vnicSelection: string;
    }

    export interface GetInstancePoolPlacementConfiguration {
        /**
         * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The fault domains to place instances.
         */
        faultDomains: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
         */
        primarySubnetId: string;
        /**
         * The set of secondary VNIC data for instances in the pool.
         */
        secondaryVnicSubnets: outputs.Core.GetInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
    }

    export interface GetInstancePoolPlacementConfigurationSecondaryVnicSubnet {
        /**
         * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
         */
        displayName: string;
        /**
         * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
         */
        subnetId: string;
    }

    export interface GetInstancePoolsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInstancePoolsInstancePool {
        actualSize: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
         */
        instanceConfigurationId: string;
        /**
         * The load balancers attached to the instance pool.
         */
        loadBalancers: outputs.Core.GetInstancePoolsInstancePoolLoadBalancer[];
        /**
         * The placement configurations for the instance pool.
         */
        placementConfigurations: outputs.Core.GetInstancePoolsInstancePoolPlacementConfiguration[];
        /**
         * The number of actual instances in the instance pool on the cloud. This attribute will be different when instance pool is used along with autoScaling Configuration.
         */
        size: number;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the instance pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetInstancePoolsInstancePoolLoadBalancer {
        /**
         * The name of the backend set on the load balancer.
         */
        backendSetName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
         */
        instancePoolId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
         */
        loadBalancerId: string;
        /**
         * The port value used for the backends.
         */
        port: number;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
         */
        vnicSelection: string;
    }

    export interface GetInstancePoolsInstancePoolPlacementConfiguration {
        /**
         * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The fault domains to place instances.
         */
        faultDomains: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
         */
        primarySubnetId: string;
        /**
         * The set of secondary VNIC data for instances in the pool.
         */
        secondaryVnicSubnets: outputs.Core.GetInstancePoolsInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
    }

    export interface GetInstancePoolsInstancePoolPlacementConfigurationSecondaryVnicSubnet {
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
         */
        subnetId: string;
    }

    export interface GetInstancePreemptibleInstanceConfig {
        /**
         * (Required) The action to run when the preemptible instance is interrupted for eviction.
         */
        preemptionActions: outputs.Core.GetInstancePreemptibleInstanceConfigPreemptionAction[];
    }

    export interface GetInstancePreemptibleInstanceConfigPreemptionAction {
        /**
         * (Optional) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
         */
        preserveBootVolume: boolean;
        /**
         * (Required) The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstanceShapeConfig {
        /**
         * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
         */
        baselineOcpuUtilization: string;
        /**
         * A short description of the instance's graphics processing unit (GPU).
         */
        gpuDescription: string;
        /**
         * The number of GPUs available to the instance.
         */
        gpus: number;
        /**
         * A short description of the local disks available to this instance.
         */
        localDiskDescription: string;
        /**
         * The number of local disks available to the instance.
         */
        localDisks: number;
        /**
         * The aggregate size of all local disks, in gigabytes.
         */
        localDisksTotalSizeInGbs: number;
        /**
         * The maximum number of VNIC attachments for the instance.
         */
        maxVnicAttachments: number;
        /**
         * The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The networking bandwidth available to the instance, in gigabits per second.
         */
        networkingBandwidthInGbps: number;
        nvmes: number;
        /**
         * The total number of OCPUs available to the instance.
         */
        ocpus: number;
        /**
         * A short description of the instance's processor (CPU).
         */
        processorDescription: string;
    }

    export interface GetInstanceSourceDetail {
        /**
         * The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
         */
        bootVolumeSizeInGbs: string;
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        bootVolumeVpusPerGb: string;
        /**
         * The OCID of the Key Management key to assign as the master encryption key for the boot volume.
         */
        kmsKeyId: string;
        /**
         * The OCID of an image or a boot volume to use, depending on the value of `sourceType`.
         */
        sourceId: string;
        /**
         * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
         */
        sourceType: string;
    }

    export interface GetInstancesFilter {
        /**
         * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInstancesInstance {
        /**
         * Configuration options for the Oracle Cloud Agent software running on the instance.
         */
        agentConfigs: outputs.Core.GetInstancesInstanceAgentConfig[];
        async: boolean;
        /**
         * Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
         */
        availabilityConfigs: outputs.Core.GetInstancesInstanceAvailabilityConfig[];
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The OCID of the attached boot volume. If the `sourceType` is `bootVolume`, this will be the same OCID as the `sourceId`.
         */
        bootVolumeId: string;
        /**
         * The OCID of the compute capacity reservation.
         */
        capacityReservationId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        createVnicDetails: outputs.Core.GetInstancesInstanceCreateVnicDetail[];
        /**
         * The OCID of dedicated VM host.
         */
        dedicatedVmHostId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         */
        extendedMetadata: {[key: string]: any};
        /**
         * The name of the fault domain the instance is running in.
         */
        faultDomain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * @deprecated The 'hostname_label' field has been deprecated. Please use 'hostname_label under create_vnic_details' instead.
         */
        hostnameLabel: string;
        /**
         * The OCID of the instance.
         */
        id: string;
        /**
         * Deprecated. Use `sourceDetails` instead.
         *
         * @deprecated The 'image' field has been deprecated. Please use 'source_details' instead. If both fields are specified, then 'source_details' will be used.
         */
        image: string;
        /**
         * Optional mutable instance options
         */
        instanceOptions: outputs.Core.GetInstancesInstanceInstanceOption[];
        /**
         * When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
         */
        ipxeScript: string;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
         */
        launchMode: string;
        /**
         * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
         */
        launchOptions: outputs.Core.GetInstancesInstanceLaunchOption[];
        /**
         * Custom metadata that you provide.
         */
        metadata: {[key: string]: any};
        /**
         * The platform configuration for the instance.
         */
        platformConfigs: outputs.Core.GetInstancesInstancePlatformConfig[];
        /**
         * (Optional) Configuration options for preemptible instances.
         */
        preemptibleInstanceConfigs: outputs.Core.GetInstancesInstancePreemptibleInstanceConfig[];
        /**
         * (Optional) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
         */
        preserveBootVolume: boolean;
        privateIp: string;
        publicIp: string;
        /**
         * The region that contains the availability domain the instance is running in.
         */
        region: string;
        /**
         * The shape of the instance. The shape determines the number of CPUs and the amount of memory allocated to the instance. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
         */
        shape: string;
        /**
         * The shape configuration for an instance. The shape configuration determines the resources allocated to an instance.
         */
        shapeConfigs: outputs.Core.GetInstancesInstanceShapeConfig[];
        sourceDetails: outputs.Core.GetInstancesInstanceSourceDetail[];
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * @deprecated The 'subnet_id' field has been deprecated. Please use 'subnet_id under create_vnic_details' instead.
         */
        subnetId: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time the instance is expected to be stopped / started,  in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). After that time if instance hasn't been rebooted, Oracle will reboot the instance within 24 hours of the due time. Regardless of how the instance was stopped, the flag will be reset to empty as soon as instance reaches Stopped state. Example: `2018-05-25T21:10:29.600Z`
         */
        timeMaintenanceRebootDue: string;
    }

    export interface GetInstancesInstanceAgentConfig {
        /**
         * Whether Oracle Cloud Agent can run all of the available plugins. This includes the management and monitoring plugins.
         */
        areAllPluginsDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can run all the available management plugins.
         */
        isManagementDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins.
         */
        isMonitoringDisabled: boolean;
        /**
         * The configuration of plugins associated with this instance.
         */
        pluginsConfigs: outputs.Core.GetInstancesInstanceAgentConfigPluginsConfig[];
    }

    export interface GetInstancesInstanceAgentConfigPluginsConfig {
        /**
         * Whether the plugin should be enabled or disabled.
         */
        desiredState: string;
        /**
         * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         */
        name: string;
    }

    export interface GetInstancesInstanceAvailabilityConfig {
        /**
         * Whether live migration is preferred for infrastructure maintenance.  If null preference is specified, live migration will be preferred for infrastructure maintenance for applicable instances.
         */
        isLiveMigrationPreferred: boolean;
        /**
         * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
         */
        recoveryAction: string;
    }

    export interface GetInstancesInstanceCreateVnicDetail {
        assignPrivateDnsRecord: boolean;
        assignPublicIp: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        hostnameLabel: string;
        nsgIds: string[];
        privateIp: string;
        skipSourceDestCheck: boolean;
        subnetId: string;
        vlanId: string;
    }

    export interface GetInstancesInstanceInstanceOption {
        /**
         * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
         */
        areLegacyImdsEndpointsDisabled: boolean;
    }

    export interface GetInstancesInstanceLaunchOption {
        /**
         * Emulation type for the boot volume.
         */
        bootVolumeType: string;
        /**
         * Firmware used to boot VM. Select the option that matches your operating system.
         */
        firmware: string;
        /**
         * Whether to enable consistent volume naming feature. Defaults to false.
         */
        isConsistentVolumeNamingEnabled: boolean;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Emulation type for the physical network interface card (NIC).
         */
        networkType: string;
        /**
         * Emulation type for volume.
         */
        remoteDataVolumeType: string;
    }

    export interface GetInstancesInstancePlatformConfig {
        /**
         * Whether virtualization instructions are available.
         */
        areVirtualInstructionsEnabled: boolean;
        /**
         * Whether the Access Control Service is enabled on the instance. When enabled, the platform can enforce PCIe device isolation, required for VFIO device passthrough.
         */
        isAccessControlServiceEnabled: boolean;
        /**
         * Whether the input-output memory management unit is enabled.
         */
        isInputOutputMemoryManagementUnitEnabled: boolean;
        /**
         * Whether the Measured Boot is to be enabled on the instance.
         */
        isMeasuredBootEnabled: boolean;
        /**
         * Whether the Secure Boot is to be enabled on the instance.
         */
        isSecureBootEnabled: boolean;
        /**
         * Whether symmetric multi-threading is enabled on the instance.
         */
        isSymmetricMultiThreadingEnabled: boolean;
        /**
         * Whether the Trusted Platform Module (TPM) is to be enabled on the instance.
         */
        isTrustedPlatformModuleEnabled: boolean;
        /**
         * The number of NUMA nodes per socket (NPS).
         */
        numaNodesPerSocket: string;
        /**
         * The percentage of cores enabled.
         */
        percentageOfCoresEnabled: number;
        /**
         * (Required) The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstancesInstancePreemptibleInstanceConfig {
        /**
         * (Required) The action to run when the preemptible instance is interrupted for eviction.
         */
        preemptionActions: outputs.Core.GetInstancesInstancePreemptibleInstanceConfigPreemptionAction[];
    }

    export interface GetInstancesInstancePreemptibleInstanceConfigPreemptionAction {
        /**
         * (Optional) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
         */
        preserveBootVolume: boolean;
        /**
         * (Required) The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface GetInstancesInstanceShapeConfig {
        /**
         * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
         */
        baselineOcpuUtilization: string;
        /**
         * A short description of the instance's graphics processing unit (GPU).
         */
        gpuDescription: string;
        /**
         * The number of GPUs available to the instance.
         */
        gpus: number;
        /**
         * A short description of the local disks available to this instance.
         */
        localDiskDescription: string;
        /**
         * The number of local disks available to the instance.
         */
        localDisks: number;
        /**
         * The aggregate size of all local disks, in gigabytes.
         */
        localDisksTotalSizeInGbs: number;
        /**
         * The maximum number of VNIC attachments for the instance.
         */
        maxVnicAttachments: number;
        /**
         * The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The networking bandwidth available to the instance, in gigabits per second.
         */
        networkingBandwidthInGbps: number;
        nvmes: number;
        /**
         * The total number of OCPUs available to the instance.
         */
        ocpus: number;
        /**
         * A short description of the instance's processor (CPU).
         */
        processorDescription: string;
    }

    export interface GetInstancesInstanceSourceDetail {
        /**
         * The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
         */
        bootVolumeSizeInGbs: string;
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        bootVolumeVpusPerGb: string;
        /**
         * The OCID of the Key Management key to assign as the master encryption key for the boot volume.
         */
        kmsKeyId: string;
        /**
         * The OCID of an image or a boot volume to use, depending on the value of `sourceType`.
         */
        sourceId: string;
        /**
         * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
         */
        sourceType: string;
    }

    export interface GetInternetGatewaysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInternetGatewaysGateway {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Whether the gateway is enabled. When the gateway is disabled, traffic is not routed to/from the Internet, regardless of route rules.
         */
        enabled: boolean;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The internet gateway's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the Internet Gateway is using.
         */
        routeTableId: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the internet gateway was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetIpsecAlgorithmAllowedPhaseOneParameter {
        /**
         * Allowed phase two authentication algorithms.
         */
        authenticationAlgorithms: string[];
        /**
         * Allowed phase one Diffie-Hellman groups.
         */
        dhGroups: string[];
        /**
         * Allowed phase two encryption algorithms.
         */
        encryptionAlgorithms: string[];
    }

    export interface GetIpsecAlgorithmAllowedPhaseTwoParameter {
        /**
         * Allowed phase two authentication algorithms.
         */
        authenticationAlgorithms: string[];
        /**
         * Allowed phase two encryption algorithms.
         */
        encryptionAlgorithms: string[];
        /**
         * Allowed perfect forward secrecy Diffie-Hellman groups.
         */
        pfsDhGroups: string[];
    }

    export interface GetIpsecAlgorithmDefaultPhaseOneParameter {
        /**
         * Default phase two authentication algorithms.
         */
        defaultAuthenticationAlgorithms: string[];
        /**
         * Default phase one Diffie-Hellman groups.
         */
        defaultDhGroups: string[];
        /**
         * Default phase two encryption algorithms.
         */
        defaultEncryptionAlgorithms: string[];
    }

    export interface GetIpsecAlgorithmDefaultPhaseTwoParameter {
        /**
         * Default phase two authentication algorithms.
         */
        defaultAuthenticationAlgorithms: string[];
        /**
         * Default phase two encryption algorithms.
         */
        defaultEncryptionAlgorithms: string[];
        /**
         * Default perfect forward secrecy Diffie-Hellman groups.
         */
        defaultPfsDhGroup: string;
    }

    export interface GetIpsecConfigFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIpsecConfigTunnel {
        /**
         * The IP address of Oracle's VPN headend.  Example: `203.0.113.50 `
         */
        ipAddress: string;
        /**
         * The shared secret of the IPSec tunnel.
         */
        sharedSecret: string;
        /**
         * The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetIpsecConnectionTunnelBgpSessionInfo {
        bgpIpv6state: string;
        /**
         * the state of the BGP.
         */
        bgpState: string;
        /**
         * This is the value of the remote Bgp ASN in asplain format, as a string. Example: 1587232876 (4 byte ASN) or 12345 (2 byte ASN)
         */
        customerBgpAsn: string;
        /**
         * This is the IPv4 Address used in the BGP peering session for the non-Oracle router. Example: 10.0.0.2/31
         */
        customerInterfaceIp: string;
        /**
         * This is the value of the Oracle Bgp ASN in asplain format, as a string. Example: 1587232876 (4 byte ASN) or 12345 (2 byte ASN)
         */
        oracleBgpAsn: string;
        /**
         * This is the IPv4 Address used in the BGP peering session for the Oracle router. Example: 10.0.0.1/31
         */
        oracleInterfaceIp: string;
    }

    export interface GetIpsecConnectionTunnelEncryptionDomainConfig {
        /**
         * Lists IPv4 or IPv6-enabled subnets in your on-premises network.
         */
        cpeTrafficSelectors: string[];
        /**
         * Lists IPv4 or IPv6-enabled subnets in your Oracle tenancy.
         */
        oracleTrafficSelectors: string[];
    }

    export interface GetIpsecConnectionTunnelRoutesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIpsecConnectionTunnelRoutesTunnelRoute {
        /**
         * Specifies the advertiser of the routes. If set to `ORACLE`, this returns only the routes advertised by Oracle. When set to `CUSTOMER`, this returns only the routes advertised by the CPE.
         */
        advertiser: string;
        /**
         * The age of the route.
         */
        age: string;
        /**
         * A list of ASNs in AS_Path.
         */
        asPaths: number[];
        /**
         * Indicates this is the best route.
         */
        isBestPath: boolean;
        /**
         * The BGP network layer reachability information.
         */
        prefix: string;
    }

    export interface GetIpsecConnectionTunnelsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIpsecConnectionTunnelsIpSecConnectionTunnel {
        /**
         * Information for establishing a BGP session for the IPSec tunnel.
         */
        bgpSessionInfos: outputs.Core.GetIpsecConnectionTunnelsIpSecConnectionTunnelBgpSessionInfo[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the tunnel.
         */
        compartmentId: string;
        /**
         * The IP address of the CPE device's VPN headend.  Example: `203.0.113.22`
         */
        cpeIp: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Dead peer detection (DPD) mode set on the Oracle side of the connection. This mode sets whether Oracle can only respond to a request from the CPE device to start DPD, or both respond to and initiate requests.
         */
        dpdMode: string;
        /**
         * DPD timeout in seconds.
         */
        dpdTimeoutInSec: number;
        /**
         * Configuration information used by the encryption domain policy.
         */
        encryptionDomainConfigs: outputs.Core.GetIpsecConnectionTunnelsIpSecConnectionTunnelEncryptionDomainConfig[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
         */
        id: string;
        /**
         * Internet Key Exchange protocol version.
         */
        ikeVersion: string;
        /**
         * By default (the `AUTO` setting), IKE sends packets with a source and destination port set to 500, and when it detects that the port used to forward packets has changed (most likely because a NAT device is between the CPE device and the Oracle VPN headend) it will try to negotiate the use of NAT-T.
         */
        natTranslationEnabled: string;
        /**
         * Indicates whether Oracle can only respond to a request to start an IPSec tunnel from the CPE device, or both respond to and initiate requests.
         */
        oracleCanInitiate: string;
        /**
         * IPSec tunnel details specific to ISAKMP phase one.
         */
        phaseOneDetails: outputs.Core.GetIpsecConnectionTunnelsIpSecConnectionTunnelPhaseOneDetail[];
        /**
         * IPsec tunnel detail information specific to phase two.
         */
        phaseTwoDetails: outputs.Core.GetIpsecConnectionTunnelsIpSecConnectionTunnelPhaseTwoDetail[];
        /**
         * The type of routing used for this tunnel (BGP dynamic routing, static routing, or policy-based routing).
         */
        routing: string;
        /**
         * The tunnel's lifecycle state.
         */
        state: string;
        /**
         * The status of the tunnel based on IPSec protocol characteristics.
         */
        status: string;
        /**
         * The date and time the IPSec tunnel was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * When the status of the IPSec tunnel last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeStatusUpdated: string;
        /**
         * The IP address of the Oracle VPN headend for the connection.  Example: `203.0.113.21`
         */
        vpnIp: string;
    }

    export interface GetIpsecConnectionTunnelsIpSecConnectionTunnelBgpSessionInfo {
        /**
         * The state of the BGP IPv6 session.
         */
        bgpIpv6state: string;
        /**
         * The state of the BGP session.
         */
        bgpState: string;
        /**
         * If the tunnel's `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this ASN is required and used for the tunnel's BGP session. This is the ASN of the network on the CPE end of the BGP session. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.
         */
        customerBgpAsn: string;
        /**
         * The IP address for the CPE end of the inside tunnel interface.
         */
        customerInterfaceIp: string;
        /**
         * The IPv6 address for the CPE end of the inside tunnel interface. This IP address is optional.
         */
        customerInterfaceIpv6: string;
        /**
         * The Oracle BGP ASN.
         */
        oracleBgpAsn: string;
        /**
         * The IP address for the Oracle end of the inside tunnel interface.
         */
        oracleInterfaceIp: string;
        /**
         * The IPv6 address for the Oracle end of the inside tunnel interface. This IP address is optional.
         */
        oracleInterfaceIpv6: string;
    }

    export interface GetIpsecConnectionTunnelsIpSecConnectionTunnelEncryptionDomainConfig {
        /**
         * Lists IPv4 or IPv6-enabled subnets in your on-premises network.
         */
        cpeTrafficSelectors: string[];
        /**
         * Lists IPv4 or IPv6-enabled subnets in your Oracle tenancy.
         */
        oracleTrafficSelectors: string[];
    }

    export interface GetIpsecConnectionTunnelsIpSecConnectionTunnelPhaseOneDetail {
        /**
         * Phase two authentication algorithm proposed during tunnel negotiation.
         */
        customAuthenticationAlgorithm: string;
        /**
         * The proposed custom Diffie-Hellman group.
         */
        customDhGroup: string;
        /**
         * The proposed custom phase two encryption algorithm.
         */
        customEncryptionAlgorithm: string;
        /**
         * Indicates whether custom phase one configuration is enabled. If this option is not enabled, default settings are proposed.
         */
        isCustomPhaseOneConfig: boolean;
        /**
         * Indicates whether IKE phase one is established.
         */
        isIkeEstablished: boolean;
        /**
         * The total configured lifetime of the IKE security association.
         */
        lifetime: number;
        /**
         * The negotiated phase two authentication algorithm.
         */
        negotiatedAuthenticationAlgorithm: string;
        /**
         * The negotiated Diffie-Hellman group.
         */
        negotiatedDhGroup: string;
        /**
         * The negotiated encryption algorithm.
         */
        negotiatedEncryptionAlgorithm: string;
        /**
         * The remaining lifetime before the key is refreshed.
         */
        remainingLifetime: string;
        /**
         * The date and time the remaining lifetime was last retrieved, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        remainingLifetimeLastRetrieved: string;
    }

    export interface GetIpsecConnectionTunnelsIpSecConnectionTunnelPhaseTwoDetail {
        /**
         * Phase two authentication algorithm proposed during tunnel negotiation.
         */
        customAuthenticationAlgorithm: string;
        /**
         * The proposed custom phase two encryption algorithm.
         */
        customEncryptionAlgorithm: string;
        /**
         * The proposed Diffie-Hellman group.
         */
        dhGroup: string;
        /**
         * Indicates whether custom phase two configuration is enabled. If this option is not enabled, default settings are proposed.
         */
        isCustomPhaseTwoConfig: boolean;
        /**
         * Indicates that ESP phase two is established.
         */
        isEspEstablished: boolean;
        /**
         * Indicates that PFS (perfect forward secrecy) is enabled.
         */
        isPfsEnabled: boolean;
        /**
         * The total configured lifetime of the IKE security association.
         */
        lifetime: number;
        /**
         * The negotiated phase two authentication algorithm.
         */
        negotiatedAuthenticationAlgorithm: string;
        /**
         * The negotiated Diffie-Hellman group.
         */
        negotiatedDhGroup: string;
        /**
         * The negotiated encryption algorithm.
         */
        negotiatedEncryptionAlgorithm: string;
        /**
         * The remaining lifetime before the key is refreshed.
         */
        remainingLifetime: string;
        /**
         * The date and time the remaining lifetime was last retrieved, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        remainingLifetimeLastRetrieved: string;
    }

    export interface GetIpsecConnectionsConnection {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE.
         */
        cpeId: string;
        /**
         * Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier here must correspond to the value for `cpeLocalIdentifierType`.
         */
        cpeLocalIdentifier: string;
        /**
         * The type of identifier for your CPE device. The value here must correspond to the value for `cpeLocalIdentifier`.
         */
        cpeLocalIdentifierType: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
         */
        drgId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The IPSec connection's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * The IPSec connection's current state.
         */
        state: string;
        /**
         * Static routes to the CPE. The CIDR must not be a multicast address or class E address.
         */
        staticRoutes: string[];
        /**
         * The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetIpsecConnectionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIpsecStatusFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIpsecStatusTunnel {
        /**
         * The IP address of Oracle's VPN headend.  Example: `203.0.113.50`
         */
        ipAddress: string;
        /**
         * The tunnel's current state.
         */
        state: string;
        /**
         * The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * When the state of the tunnel last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeStateModified: string;
    }

    export interface GetIpv6sFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIpv6sIpv6 {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the IPv6. This is the same as the VNIC's compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPv6.
         */
        id: string;
        /**
         * An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
         */
        ipAddress: string;
        ipv6subnetCidr: string;
        /**
         * The IPv6's current state.
         */
        state: string;
        /**
         * The OCID of the subnet.
         */
        subnetId: string;
        /**
         * The date and time the IPv6 was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The OCID of the VNIC.
         */
        vnicId: string;
    }

    export interface GetListingResourceVersionsAppCatalogListingResourceVersion {
        accessiblePorts: number[];
        allowedActions: string[];
        availableRegions: string[];
        compatibleShapes: string[];
        listingId: string;
        listingResourceId: string;
        listingResourceVersion: string;
        timePublished: string;
    }

    export interface GetListingResourceVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLocalPeeringGatewaysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLocalPeeringGatewaysLocalPeeringGateway {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The LPG's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
         */
        isCrossTenancyPeering: boolean;
        /**
         * The smallest aggregate CIDR that contains all the CIDR routes advertised by the VCN at the other end of the peering from this LPG. See `peerAdvertisedCidrDetails` for the individual CIDRs. The value is `null` if the LPG is not peered.  Example: `192.168.0.0/16`, or if aggregated with `172.16.0.0/24` then `128.0.0.0/1`
         */
        peerAdvertisedCidr: string;
        /**
         * The specific ranges of IP addresses available on or via the VCN at the other end of the peering from this LPG. The value is `null` if the LPG is not peered. You can use these as destination CIDRs for route rules to route a subnet's traffic to this LPG.  Example: [`192.168.0.0/16`, `172.16.0.0/24`]
         */
        peerAdvertisedCidrDetails: string[];
        /**
         * The OCID of the peered LPG
         */
        peerId: string;
        /**
         * Whether the LPG is peered with another LPG. `NEW` means the LPG has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the LPG at the other end of the peering has been deleted.
         */
        peeringStatus: string;
        /**
         * Additional information regarding the peering status, if applicable.
         */
        peeringStatusDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the LPG is using.
         */
        routeTableId: string;
        /**
         * The LPG's current lifecycle state.
         */
        state: string;
        /**
         * The date and time the LPG was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetNatGatewaysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNatGatewaysNatGateway {
        /**
         * Whether the NAT gateway blocks traffic through it. The default is `false`.  Example: `true`
         */
        blockTraffic: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the NAT gateway.
         */
        id: string;
        /**
         * The IP address associated with the NAT gateway.
         */
        natIp: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP address associated with the NAT gateway.
         */
        publicIpId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table used by the NAT gateway.
         */
        routeTableId: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * The date and time the NAT gateway was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetNetworkSecurityGroupSecurityRulesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkSecurityGroupSecurityRulesSecurityRule {
        /**
         * An optional description of your choice for the rule.
         */
        description: string;
        /**
         * Conceptually, this is the range of IP addresses that a packet originating from the instance can go to.
         */
        destination: string;
        /**
         * Type of destination for the rule. Required if `direction` = `EGRESS`.
         */
        destinationType: string;
        /**
         * Direction of the security rule. Set to `EGRESS` for rules that allow outbound IP packets, or `INGRESS` for rules that allow inbound IP packets.
         */
        direction: string;
        /**
         * Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
         * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
         * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
         */
        icmpOptions: outputs.Core.GetNetworkSecurityGroupSecurityRulesSecurityRuleIcmpOption[];
        /**
         * An Oracle-assigned identifier for the security rule. You specify this ID when you want to update or delete the rule.  Example: `04ABEC`
         */
        id: string;
        /**
         * Whether the rule is valid. The value is `True` when the rule is first created. If the rule's `source` or `destination` is a network security group, the value changes to `False` if that network security group is deleted.
         */
        isValid: boolean;
        /**
         * The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
         */
        protocol: string;
        /**
         * Conceptually, this is the range of IP addresses that a packet coming into the instance can come from.
         */
        source: string;
        /**
         * Type of source for the rule. Required if `direction` = `INGRESS`.
         * * `CIDR_BLOCK`: If the rule's `source` is an IP address range in CIDR notation.
         * * `SERVICE_CIDR_BLOCK`: If the rule's `source` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic coming from a particular `Service` through a service gateway).
         * * `NETWORK_SECURITY_GROUP`: If the rule's `source` is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        sourceType: string;
        /**
         * A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if egress traffic allows TCP destination port 80, there should be an ingress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
         */
        stateless: boolean;
        /**
         * Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
         */
        tcpOptions: outputs.Core.GetNetworkSecurityGroupSecurityRulesSecurityRuleTcpOption[];
        /**
         * The date and time the security rule was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
         */
        udpOptions: outputs.Core.GetNetworkSecurityGroupSecurityRulesSecurityRuleUdpOption[];
    }

    export interface GetNetworkSecurityGroupSecurityRulesSecurityRuleIcmpOption {
        /**
         * The ICMP code (optional).
         */
        code: number;
        /**
         * The ICMP type.
         */
        type: number;
    }

    export interface GetNetworkSecurityGroupSecurityRulesSecurityRuleTcpOption {
        destinationPortRanges: outputs.Core.GetNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptionDestinationPortRange[];
        sourcePortRanges: outputs.Core.GetNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptionSourcePortRange[];
    }

    export interface GetNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptionDestinationPortRange {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptionSourcePortRange {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetNetworkSecurityGroupSecurityRulesSecurityRuleUdpOption {
        destinationPortRanges: outputs.Core.GetNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptionDestinationPortRange[];
        sourcePortRanges: outputs.Core.GetNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptionSourcePortRange[];
    }

    export interface GetNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptionDestinationPortRange {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptionSourcePortRange {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetNetworkSecurityGroupVnicsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkSecurityGroupVnicsNetworkSecurityGroupVnic {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent resource that the VNIC is attached to (for example, a Compute instance).
         */
        resourceId: string;
        /**
         * The date and time the VNIC was added to the network security group, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeAssociated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
         */
        vnicId: string;
    }

    export interface GetNetworkSecurityGroupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkSecurityGroupsNetworkSecurityGroup {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security group.
         */
        id: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * The date and time the network security group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetPeerRegionForRemotePeeringsFilter {
        /**
         * The region's name.  Example: `us-phoenix-1`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering {
        /**
         * The region's name.  Example: `us-phoenix-1`
         */
        name: string;
    }

    export interface GetPrivateIpsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPrivateIpsPrivateIp {
        /**
         * The private IP's availability domain. This attribute will be null if this is a *secondary* private IP assigned to a VNIC that is in a *regional* subnet.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the private IP.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the private IP. Used for DNS. The value is the hostname portion of the private IP's fully qualified domain name (FQDN) (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be unique across all VNICs in the subnet and comply with [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123).
         */
        hostnameLabel: string;
        /**
         * The private IP's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
         */
        ipAddress: string;
        /**
         * Whether this private IP is the primary one on the VNIC. Primary private IPs are unassigned and deleted automatically when the VNIC is terminated.  Example: `true`
         */
        isPrimary: boolean;
        /**
         * true if the IP is reserved and can exist detached from vnic
         */
        isReserved: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet.
         */
        subnetId: string;
        /**
         * The date and time the private IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN.
         */
        vlanId: string;
        /**
         * The OCID of the VNIC.
         */
        vnicId: string;
    }

    export interface GetPublicIpPoolsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPublicIpPoolsPublicIpPoolCollection {
        items: outputs.Core.GetPublicIpPoolsPublicIpPoolCollectionItem[];
    }

    export interface GetPublicIpPoolsPublicIpPoolCollectionItem {
        /**
         * The CIDR blocks added to this pool. This could be all or a portion of a BYOIP CIDR block.
         */
        cidrBlocks: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP pool.
         */
        id: string;
        /**
         * The public IP pool's current state.
         */
        state: string;
        /**
         * The date and time the public IP pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetPublicIpsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPublicIpsPublicIp {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the entity the public IP is assigned to, or in the process of being assigned to.
         */
        assignedEntityId: string;
        /**
         * The type of entity the public IP is assigned to, or in the process of being assigned to.
         */
        assignedEntityType: string;
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The public IP's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * The public IP address of the `publicIp` object.  Example: `203.0.113.2`
         */
        ipAddress: string;
        /**
         * A filter to return only public IPs that match given lifetime.
         */
        lifetime: string;
        /**
         * Deprecated. Use `assignedEntityId` instead.
         */
        privateIpId: string;
        /**
         * A filter to return only resources that belong to the given public IP pool.
         */
        publicIpPoolId: string;
        /**
         * Whether the public IP is regional or specific to a particular availability domain.
         * * `REGION`: The public IP exists within a region and is assigned to a regional entity (such as a [NatGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NatGateway/)), or can be assigned to a private IP in any availability domain in the region. Reserved public IPs have `scope` = `REGION`, as do ephemeral public IPs assigned to a regional entity.
         * * `AVAILABILITY_DOMAIN`: The public IP exists within the availability domain of the entity it's assigned to, which is specified by the `availabilityDomain` property of the public IP object. Ephemeral public IPs that are assigned to private IPs have `scope` = `AVAILABILITY_DOMAIN`.
         */
        scope: string;
        /**
         * The public IP's current state.
         */
        state: string;
        /**
         * The date and time the public IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetRemotePeeringConnectionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRemotePeeringConnectionsRemotePeeringConnection {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
         */
        drgId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the RPC.
         */
        id: string;
        /**
         * Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
         */
        isCrossTenancyPeering: boolean;
        /**
         * If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC.
         */
        peerId: string;
        /**
         * If this RPC is peered, this value is the region that contains the other RPC.  Example: `us-ashburn-1`
         */
        peerRegionName: string;
        /**
         * If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC's tenancy.
         */
        peerTenancyId: string;
        /**
         * Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
         */
        peeringStatus: string;
        /**
         * The RPC's current lifecycle state.
         */
        state: string;
        /**
         * The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetRouteTablesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRouteTablesRouteTable {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The route table's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * The collection of rules for routing destination IPs to network devices.
         */
        routeRules: outputs.Core.GetRouteTablesRouteTableRouteRule[];
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the route table was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetRouteTablesRouteTableRouteRule {
        /**
         * Deprecated. Instead use `destination` and `destinationType`. Requests that include both `cidrBlock` and `destination` will be rejected.
         *
         * @deprecated The 'cidr_block' field has been deprecated. Please use 'destination' instead.
         */
        cidrBlock: string;
        /**
         * An optional description of your choice for the rule.
         */
        description: string;
        /**
         * Conceptually, this is the range of IP addresses used for matching when routing traffic. Required if you provide a `destinationType`.
         */
        destination: string;
        /**
         * Type of destination for the rule. Required if you provide a `destination`.
         * * `CIDR_BLOCK`: If the rule's `destination` is an IP address range in CIDR notation.
         * * `SERVICE_CIDR_BLOCK`: If the rule's `destination` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic destined for a particular `Service` through a service gateway).
         */
        destinationType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the route rule's target. For information about the type of targets you can specify, see [Route Tables](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm).
         */
        networkEntityId: string;
        routeType: string;
    }

    export interface GetSecurityListsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSecurityListsSecurityList {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Rules for allowing egress IP packets.
         */
        egressSecurityRules: outputs.Core.GetSecurityListsSecurityListEgressSecurityRule[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The security list's Oracle Cloud ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * Rules for allowing ingress IP packets.
         */
        ingressSecurityRules: outputs.Core.GetSecurityListsSecurityListIngressSecurityRule[];
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the security list was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetSecurityListsSecurityListEgressSecurityRule {
        /**
         * An optional description of your choice for the rule.
         */
        description: string;
        /**
         * Conceptually, this is the range of IP addresses that a packet originating from the instance can go to.
         */
        destination: string;
        /**
         * Type of destination for the rule. The default is `CIDR_BLOCK`.
         */
        destinationType: string;
        /**
         * Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
         * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
         * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
         */
        icmpOptions: outputs.Core.GetSecurityListsSecurityListEgressSecurityRuleIcmpOption[];
        /**
         * The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
         */
        protocol: string;
        /**
         * A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if ingress traffic allows TCP destination port 80, there should be an egress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
         */
        stateless: boolean;
        /**
         * Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed. 
         * * The following 2 attributes specify an inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.
         */
        tcpOptions: outputs.Core.GetSecurityListsSecurityListEgressSecurityRuleTcpOption[];
        /**
         * Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed. 
         * * The following 2 attributes specify an inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.
         */
        udpOptions: outputs.Core.GetSecurityListsSecurityListEgressSecurityRuleUdpOption[];
    }

    export interface GetSecurityListsSecurityListEgressSecurityRuleIcmpOption {
        /**
         * The ICMP code (optional).
         */
        code: number;
        /**
         * The ICMP type.
         */
        type: number;
    }

    export interface GetSecurityListsSecurityListEgressSecurityRuleTcpOption {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
        sourcePortRanges: outputs.Core.GetSecurityListsSecurityListEgressSecurityRuleTcpOptionSourcePortRange[];
    }

    export interface GetSecurityListsSecurityListEgressSecurityRuleTcpOptionSourcePortRange {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetSecurityListsSecurityListEgressSecurityRuleUdpOption {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
        sourcePortRanges: outputs.Core.GetSecurityListsSecurityListEgressSecurityRuleUdpOptionSourcePortRange[];
    }

    export interface GetSecurityListsSecurityListEgressSecurityRuleUdpOptionSourcePortRange {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetSecurityListsSecurityListIngressSecurityRule {
        /**
         * An optional description of your choice for the rule.
         */
        description: string;
        /**
         * Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
         * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
         * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
         */
        icmpOptions: outputs.Core.GetSecurityListsSecurityListIngressSecurityRuleIcmpOption[];
        /**
         * The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
         */
        protocol: string;
        /**
         * Conceptually, this is the range of IP addresses that a packet coming into the instance can come from.
         */
        source: string;
        /**
         * Type of source for the rule. The default is `CIDR_BLOCK`.
         * * `CIDR_BLOCK`: If the rule's `source` is an IP address range in CIDR notation.
         * * `SERVICE_CIDR_BLOCK`: If the rule's `source` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic coming from a particular `Service` through a service gateway).
         */
        sourceType: string;
        /**
         * A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if ingress traffic allows TCP destination port 80, there should be an egress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
         */
        stateless: boolean;
        /**
         * Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed. 
         * * The following 2 attributes specify an inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.
         */
        tcpOptions: outputs.Core.GetSecurityListsSecurityListIngressSecurityRuleTcpOption[];
        /**
         * Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed. 
         * * The following 2 attributes specify an inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.
         */
        udpOptions: outputs.Core.GetSecurityListsSecurityListIngressSecurityRuleUdpOption[];
    }

    export interface GetSecurityListsSecurityListIngressSecurityRuleIcmpOption {
        /**
         * The ICMP code (optional).
         */
        code: number;
        /**
         * The ICMP type.
         */
        type: number;
    }

    export interface GetSecurityListsSecurityListIngressSecurityRuleTcpOption {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
        sourcePortRanges: outputs.Core.GetSecurityListsSecurityListIngressSecurityRuleTcpOptionSourcePortRange[];
    }

    export interface GetSecurityListsSecurityListIngressSecurityRuleTcpOptionSourcePortRange {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetSecurityListsSecurityListIngressSecurityRuleUdpOption {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
        sourcePortRanges: outputs.Core.GetSecurityListsSecurityListIngressSecurityRuleUdpOptionSourcePortRange[];
    }

    export interface GetSecurityListsSecurityListIngressSecurityRuleUdpOptionSourcePortRange {
        /**
         * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number. Must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface GetServiceGatewaysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetServiceGatewaysServiceGateway {
        /**
         * Whether the service gateway blocks all traffic through it. The default is `false`. When this is `true`, traffic is not routed to any services, regardless of route rules.  Example: `true`
         */
        blockTraffic: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service gateway.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the service gateway is using. For information about why you would associate a route table with a service gateway, see [Transit Routing: Private Access to Oracle Services](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/transitroutingoracleservices.htm).
         */
        routeTableId: string;
        /**
         * List of the [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) objects enabled for this service gateway. The list can be empty. You can enable a particular `Service` by using [AttachServiceId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/ServiceGateway/AttachServiceId) or [UpdateServiceGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/ServiceGateway/UpdateServiceGateway).
         */
        services: outputs.Core.GetServiceGatewaysServiceGatewayService[];
        /**
         * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the service gateway was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetServiceGatewaysServiceGatewayService {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service.
         */
        serviceId: string;
        /**
         * The name of the service.
         */
        serviceName: string;
    }

    export interface GetServicesFilter {
        /**
         * Name of the `Service` object. This name can change and is not guaranteed to be unique.  Example: `OCI PHX Object Storage`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetServicesService {
        /**
         * A string that represents the regional public IP address ranges for the Oracle service or services covered by this `Service` object. Also known as the `Service` object's *service CIDR label*.
         */
        cidrBlock: string;
        /**
         * Description of the Oracle service or services covered by this `Service` object.  Example: `OCI PHX Object Storage`
         */
        description: string;
        /**
         * The `Service` object's [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * Name of the `Service` object. This name can change and is not guaranteed to be unique.  Example: `OCI PHX Object Storage`
         */
        name: string;
    }

    export interface GetShapeFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetShapeShape {
        baselineOcpuUtilizations: string[];
        billingType: string;
        gpuDescription: string;
        gpus: number;
        isBilledForStoppedInstance: boolean;
        isFlexible: boolean;
        isLiveMigrationSupported: boolean;
        isSubcore: boolean;
        localDiskDescription: string;
        localDisks: number;
        localDisksTotalSizeInGbs: number;
        maxVnicAttachmentOptions: outputs.Core.GetShapeShapeMaxVnicAttachmentOption[];
        maxVnicAttachments: number;
        memoryInGbs: number;
        memoryOptions: outputs.Core.GetShapeShapeMemoryOption[];
        minTotalBaselineOcpusRequired: number;
        name: string;
        networkPorts: number;
        networkingBandwidthInGbps: number;
        networkingBandwidthOptions: outputs.Core.GetShapeShapeNetworkingBandwidthOption[];
        ocpuOptions: outputs.Core.GetShapeShapeOcpuOption[];
        ocpus: number;
        platformConfigOptions: outputs.Core.GetShapeShapePlatformConfigOption[];
        processorDescription: string;
        quotaNames: string[];
        rdmaBandwidthInGbps: number;
        rdmaPorts: number;
        recommendedAlternatives: outputs.Core.GetShapeShapeRecommendedAlternative[];
        resizeCompatibleShapes: string[];
    }

    export interface GetShapeShapeMaxVnicAttachmentOption {
        defaultPerOcpu: number;
        max: number;
        min: number;
    }

    export interface GetShapeShapeMemoryOption {
        defaultPerOcpuInGbs: number;
        maxInGbs: number;
        maxPerOcpuInGbs: number;
        minInGbs: number;
        minPerOcpuInGbs: number;
    }

    export interface GetShapeShapeNetworkingBandwidthOption {
        defaultPerOcpuInGbps: number;
        maxInGbps: number;
        minInGbps: number;
    }

    export interface GetShapeShapeOcpuOption {
        max: number;
        min: number;
    }

    export interface GetShapeShapePlatformConfigOption {
        accessControlServiceOptions: outputs.Core.GetShapeShapePlatformConfigOptionAccessControlServiceOption[];
        inputOutputMemoryManagementUnitOptions: outputs.Core.GetShapeShapePlatformConfigOptionInputOutputMemoryManagementUnitOption[];
        measuredBootOptions: outputs.Core.GetShapeShapePlatformConfigOptionMeasuredBootOption[];
        numaNodesPerSocketPlatformOptions: outputs.Core.GetShapeShapePlatformConfigOptionNumaNodesPerSocketPlatformOption[];
        percentageOfCoresEnabledOptions: outputs.Core.GetShapeShapePlatformConfigOptionPercentageOfCoresEnabledOption[];
        secureBootOptions: outputs.Core.GetShapeShapePlatformConfigOptionSecureBootOption[];
        symmetricMultiThreadingOptions: outputs.Core.GetShapeShapePlatformConfigOptionSymmetricMultiThreadingOption[];
        trustedPlatformModuleOptions: outputs.Core.GetShapeShapePlatformConfigOptionTrustedPlatformModuleOption[];
        type: string;
        virtualInstructionsOptions: outputs.Core.GetShapeShapePlatformConfigOptionVirtualInstructionsOption[];
    }

    export interface GetShapeShapePlatformConfigOptionAccessControlServiceOption {
        allowedValues: boolean[];
        isDefaultEnabled: boolean;
    }

    export interface GetShapeShapePlatformConfigOptionInputOutputMemoryManagementUnitOption {
        allowedValues: boolean[];
        isDefaultEnabled: boolean;
    }

    export interface GetShapeShapePlatformConfigOptionMeasuredBootOption {
        allowedValues: boolean[];
        isDefaultEnabled: boolean;
    }

    export interface GetShapeShapePlatformConfigOptionNumaNodesPerSocketPlatformOption {
        allowedValues: string[];
        defaultValue: string;
    }

    export interface GetShapeShapePlatformConfigOptionPercentageOfCoresEnabledOption {
        defaultValue: number;
        max: number;
        min: number;
    }

    export interface GetShapeShapePlatformConfigOptionSecureBootOption {
        allowedValues: boolean[];
        isDefaultEnabled: boolean;
    }

    export interface GetShapeShapePlatformConfigOptionSymmetricMultiThreadingOption {
        allowedValues: boolean[];
        isDefaultEnabled: boolean;
    }

    export interface GetShapeShapePlatformConfigOptionTrustedPlatformModuleOption {
        allowedValues: boolean[];
        isDefaultEnabled: boolean;
    }

    export interface GetShapeShapePlatformConfigOptionVirtualInstructionsOption {
        allowedValues: boolean[];
        isDefaultEnabled: boolean;
    }

    export interface GetShapeShapeRecommendedAlternative {
        shapeName: string;
    }

    export interface GetShapesFilter {
        /**
         * The name of the shape. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetShapesShape {
        /**
         * For a subcore burstable VM, the supported baseline OCPU utilization for instances that use this shape.
         */
        baselineOcpuUtilizations: string[];
        /**
         * How instances that use this shape are charged.
         */
        billingType: string;
        /**
         * A short description of the graphics processing unit (GPU) available for this shape.
         */
        gpuDescription: string;
        /**
         * The number of GPUs available for this shape.
         */
        gpus: number;
        /**
         * Whether billing continues when the instances that use this shape are in the stopped state.
         */
        isBilledForStoppedInstance: boolean;
        /**
         * Whether the shape supports creating flexible instances. A [flexible shape](https://docs.cloud.oracle.com/iaas/Content/Compute/References/computeshapes.htm#flexible) is a shape that lets you customize the number of OCPUs and the amount of memory when launching or resizing your instance.
         */
        isFlexible: boolean;
        /**
         * Whether Live Migration is currently supported for this shape.
         */
        isLiveMigrationSupported: boolean;
        /**
         * Whether the shape supports creating subcore or burstable instances. A [burstable instance](https://docs.cloud.oracle.com/iaas/Content/Compute/References/burstable-instances.htm) is a virtual machine (VM) instance that provides a baseline level of CPU performance with the ability to burst to a higher level to support occasional spikes in usage.
         */
        isSubcore: boolean;
        /**
         * A short description of the local disks available for this shape.
         */
        localDiskDescription: string;
        /**
         * The number of local disks available for this shape.
         */
        localDisks: number;
        /**
         * The aggregate size of the local disks available for this shape, in gigabytes.
         */
        localDisksTotalSizeInGbs: number;
        /**
         * For a flexible shape, the number of VNIC attachments that are available for instances that use this shape.
         */
        maxVnicAttachmentOptions: outputs.Core.GetShapesShapeMaxVnicAttachmentOption[];
        /**
         * The maximum number of VNIC attachments available for this shape.
         */
        maxVnicAttachments: number;
        /**
         * The default amount of memory available for this shape, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * For a flexible shape, the amount of memory available for instances that use this shape.
         */
        memoryOptions: outputs.Core.GetShapesShapeMemoryOption[];
        /**
         * For a subcore burstable VM, the minimum total baseline OCPUs required. The total baseline OCPUs is equal to baselineOcpuUtilization chosen multiplied by the number of OCPUs chosen.
         */
        minTotalBaselineOcpusRequired: number;
        /**
         * The name of the shape. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
         */
        name: string;
        /**
         * The number of physical network interface card (NIC) ports available for this shape.
         */
        networkPorts: number;
        /**
         * The networking bandwidth available for this shape, in gigabits per second.
         */
        networkingBandwidthInGbps: number;
        /**
         * For a flexible shape, the amount of networking bandwidth available for instances that use this shape.
         */
        networkingBandwidthOptions: outputs.Core.GetShapesShapeNetworkingBandwidthOption[];
        /**
         * For a flexible shape, the number of OCPUs available for instances that use this shape.
         */
        ocpuOptions: outputs.Core.GetShapesShapeOcpuOption[];
        /**
         * The default number of OCPUs available for this shape.
         */
        ocpus: number;
        /**
         * The list of supported platform configuration options for this shape.
         */
        platformConfigOptions: outputs.Core.GetShapesShapePlatformConfigOption[];
        /**
         * A short description of the shape's processor (CPU).
         */
        processorDescription: string;
        /**
         * The list of of compartment quotas for the shape.
         */
        quotaNames: string[];
        /**
         * The networking bandwidth available for the remote direct memory access (RDMA) network for this shape, in gigabits per second.
         */
        rdmaBandwidthInGbps: number;
        /**
         * The number of networking ports available for the remote direct memory access (RDMA) network between nodes in a high performance computing (HPC) cluster network. If the shape does not support cluster networks, this value is `0`.
         */
        rdmaPorts: number;
        /**
         * The list of shapes and shape details (if applicable) that Oracle recommends that you use as an alternative to the current shape.
         */
        recommendedAlternatives: outputs.Core.GetShapesShapeRecommendedAlternative[];
        /**
         * The list of compatible shapes that this shape can be changed to. For more information, see [Changing the Shape of an Instance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/resizinginstances.htm).
         */
        resizeCompatibleShapes: string[];
    }

    export interface GetShapesShapeMaxVnicAttachmentOption {
        /**
         * The default number of VNIC attachments allowed per OCPU.
         */
        defaultPerOcpu: number;
        /**
         * The maximum allowed percentage of cores enabled.
         */
        max: number;
        /**
         * The minimum allowed percentage of cores enabled.
         */
        min: number;
    }

    export interface GetShapesShapeMemoryOption {
        /**
         * The default amount of memory per OCPU available for this shape, in gigabytes.
         */
        defaultPerOcpuInGbs: number;
        /**
         * The maximum amount of memory, in gigabytes.
         */
        maxInGbs: number;
        /**
         * The maximum amount of memory per OCPU available for this shape, in gigabytes.
         */
        maxPerOcpuInGbs: number;
        /**
         * The minimum amount of memory, in gigabytes.
         */
        minInGbs: number;
        /**
         * The minimum amount of memory per OCPU available for this shape, in gigabytes.
         */
        minPerOcpuInGbs: number;
    }

    export interface GetShapesShapeNetworkingBandwidthOption {
        /**
         * The default amount of networking bandwidth per OCPU, in gigabits per second.
         */
        defaultPerOcpuInGbps: number;
        /**
         * The maximum amount of networking bandwidth, in gigabits per second.
         */
        maxInGbps: number;
        /**
         * The minimum amount of networking bandwidth, in gigabits per second.
         */
        minInGbps: number;
    }

    export interface GetShapesShapeOcpuOption {
        /**
         * The maximum allowed percentage of cores enabled.
         */
        max: number;
        /**
         * The minimum allowed percentage of cores enabled.
         */
        min: number;
    }

    export interface GetShapesShapePlatformConfigOption {
        /**
         * Configuration options for the Access Control Service.
         */
        accessControlServiceOptions: outputs.Core.GetShapesShapePlatformConfigOptionAccessControlServiceOption[];
        /**
         * Configuration options for the input-output memory management unit.
         */
        inputOutputMemoryManagementUnitOptions: outputs.Core.GetShapesShapePlatformConfigOptionInputOutputMemoryManagementUnitOption[];
        /**
         * Configuration options for the Measured Boot feature.
         */
        measuredBootOptions: outputs.Core.GetShapesShapePlatformConfigOptionMeasuredBootOption[];
        /**
         * Configuration options for NUMA nodes per socket.
         */
        numaNodesPerSocketPlatformOptions: outputs.Core.GetShapesShapePlatformConfigOptionNumaNodesPerSocketPlatformOption[];
        /**
         * Configuration options for the percentage of cores enabled.
         */
        percentageOfCoresEnabledOptions: outputs.Core.GetShapesShapePlatformConfigOptionPercentageOfCoresEnabledOption[];
        /**
         * Configuration options for Secure Boot.
         */
        secureBootOptions: outputs.Core.GetShapesShapePlatformConfigOptionSecureBootOption[];
        /**
         * Configuration options for symmetric multi-threading.
         */
        symmetricMultiThreadingOptions: outputs.Core.GetShapesShapePlatformConfigOptionSymmetricMultiThreadingOption[];
        /**
         * Configuration options for the Trusted Platform Module (TPM).
         */
        trustedPlatformModuleOptions: outputs.Core.GetShapesShapePlatformConfigOptionTrustedPlatformModuleOption[];
        /**
         * The type of platform being configured. (Supported types=[INTEL_VM, AMD_MILAN_BM, AMD_ROME_BM, AMD_ROME_BM_GPU, INTEL_ICELAKE_BM, INTEL_SKYLAKE_BM])
         */
        type: string;
        /**
         * Configuration options for the virtualization instructions.
         */
        virtualInstructionsOptions: outputs.Core.GetShapesShapePlatformConfigOptionVirtualInstructionsOption[];
    }

    export interface GetShapesShapePlatformConfigOptionAccessControlServiceOption {
        /**
         * Whether virtualization instructions can be enabled.
         */
        allowedValues: boolean[];
        /**
         * Whether virtualization instructions are enabled by default.
         */
        isDefaultEnabled: boolean;
    }

    export interface GetShapesShapePlatformConfigOptionInputOutputMemoryManagementUnitOption {
        /**
         * Whether virtualization instructions can be enabled.
         */
        allowedValues: boolean[];
        /**
         * Whether virtualization instructions are enabled by default.
         */
        isDefaultEnabled: boolean;
    }

    export interface GetShapesShapePlatformConfigOptionMeasuredBootOption {
        /**
         * Whether virtualization instructions can be enabled.
         */
        allowedValues: boolean[];
        /**
         * Whether virtualization instructions are enabled by default.
         */
        isDefaultEnabled: boolean;
    }

    export interface GetShapesShapePlatformConfigOptionNumaNodesPerSocketPlatformOption {
        /**
         * Whether virtualization instructions can be enabled.
         */
        allowedValues: string[];
        /**
         * The default percentage of cores enabled.
         */
        defaultValue: string;
    }

    export interface GetShapesShapePlatformConfigOptionPercentageOfCoresEnabledOption {
        /**
         * The default percentage of cores enabled.
         */
        defaultValue: number;
        /**
         * The maximum allowed percentage of cores enabled.
         */
        max: number;
        /**
         * The minimum allowed percentage of cores enabled.
         */
        min: number;
    }

    export interface GetShapesShapePlatformConfigOptionSecureBootOption {
        /**
         * Whether virtualization instructions can be enabled.
         */
        allowedValues: boolean[];
        /**
         * Whether virtualization instructions are enabled by default.
         */
        isDefaultEnabled: boolean;
    }

    export interface GetShapesShapePlatformConfigOptionSymmetricMultiThreadingOption {
        /**
         * Whether virtualization instructions can be enabled.
         */
        allowedValues: boolean[];
        /**
         * Whether virtualization instructions are enabled by default.
         */
        isDefaultEnabled: boolean;
    }

    export interface GetShapesShapePlatformConfigOptionTrustedPlatformModuleOption {
        /**
         * Whether virtualization instructions can be enabled.
         */
        allowedValues: boolean[];
        /**
         * Whether virtualization instructions are enabled by default.
         */
        isDefaultEnabled: boolean;
    }

    export interface GetShapesShapePlatformConfigOptionVirtualInstructionsOption {
        /**
         * Whether virtualization instructions can be enabled.
         */
        allowedValues: boolean[];
        /**
         * Whether virtualization instructions are enabled by default.
         */
        isDefaultEnabled: boolean;
    }

    export interface GetShapesShapeRecommendedAlternative {
        /**
         * The name of the shape.
         */
        shapeName: string;
    }

    export interface GetSubnetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubnetsSubnet {
        /**
         * The subnet's availability domain. This attribute will be null if this is a regional subnet instead of an AD-specific subnet. Oracle recommends creating regional subnets.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The subnet's CIDR block.  Example: `10.0.1.0/24`
         */
        cidrBlock: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the set of DHCP options that the subnet uses.
         */
        dhcpOptionsId: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * A DNS label for the subnet, used in conjunction with the VNIC's hostname and VCN's DNS label to form a fully qualified domain name (FQDN) for each VNIC within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be an alphanumeric string that begins with a letter and is unique within the VCN. The value cannot be changed.
         */
        dnsLabel: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The subnet's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * For an IPv6-enabled subnet, this is the IPv6 CIDR block for the subnet's IP address space. The subnet size is always /64. See [IPv6 Addresses](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).  Example: `2001:0db8:0123:1111::/64`
         */
        ipv6cidrBlock: string;
        /**
         * The list of all IPv6 CIDR blocks (Oracle allocated IPv6 GUA, ULA or private IPv6 CIDR blocks, BYOIPv6 CIDR blocks) for the subnet.
         */
        ipv6cidrBlocks: string[];
        /**
         * For an IPv6-enabled subnet, this is the IPv6 address of the virtual router.  Example: `2001:0db8:0123:1111:89ab:cdef:1234:5678`
         */
        ipv6virtualRouterIp: string;
        /**
         * Whether to disallow ingress internet traffic to VNICs within this subnet. Defaults to false.
         */
        prohibitInternetIngress: boolean;
        /**
         * Whether VNICs within this subnet can have public IP addresses. Defaults to false, which means VNICs created in this subnet will automatically be assigned public IP addresses unless specified otherwise during instance launch or VNIC creation (with the `assignPublicIp` flag in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/)). If `prohibitPublicIpOnVnic` is set to true, VNICs created in this subnet cannot have public IP addresses (that is, it's a private subnet).  Example: `true`
         */
        prohibitPublicIpOnVnic: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table that the subnet uses.
         */
        routeTableId: string;
        /**
         * The OCIDs of the security list or lists that the subnet uses. Remember that security lists are associated *with the subnet*, but the rules are applied to the individual VNICs in the subnet.
         */
        securityListIds: string[];
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The subnet's domain name, which consists of the subnet's DNS label, the VCN's DNS label, and the `oraclevcn.com` domain.
         */
        subnetDomainName: string;
        /**
         * The date and time the subnet was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
        /**
         * The IP address of the virtual router.  Example: `10.0.14.1`
         */
        virtualRouterIp: string;
        /**
         * The MAC address of the virtual router.  Example: `00:00:00:00:00:01`
         */
        virtualRouterMac: string;
    }

    export interface GetTunnelSecurityAssociationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTunnelSecurityAssociationsTunnelSecurityAssociation {
        /**
         * The IP address and mask of the partner subnet used in policy based VPNs or static routes.
         */
        cpeSubnet: string;
        /**
         * The IP address and mask of the local subnet used in policy based VPNs or static routes.
         */
        oracleSubnet: string;
        /**
         * Time in the current state, in seconds.
         */
        time: string;
        /**
         * Current state if the IPSec tunnel status is not `UP`, including phase one and phase two details and a possible reason the tunnel is not `UP`.
         */
        tunnelSaErrorInfo: string;
        /**
         * The IPSec tunnel's phase one status.
         */
        tunnelSaStatus: string;
    }

    export interface GetVcnByoipv6cidrDetail {
        byoipv6rangeId: string;
        ipv6cidrBlock: string;
    }

    export interface GetVcnsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVcnsVirtualNetwork {
        /**
         * The list of BYOIPv6 CIDR blocks required to create a VCN that uses BYOIPv6 ranges.
         */
        byoipv6cidrBlocks: string[];
        byoipv6cidrDetails: outputs.Core.GetVcnsVirtualNetworkByoipv6cidrDetail[];
        /**
         * Deprecated. The first CIDR IP address from cidrBlocks.  Example: `172.16.0.0/16`
         */
        cidrBlock: string;
        /**
         * The list of IPv4 CIDR blocks the VCN will use.
         */
        cidrBlocks: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the VCN's default set of DHCP options.
         */
        defaultDhcpOptionsId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the VCN's default route table.
         */
        defaultRouteTableId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the VCN's default security list.
         */
        defaultSecurityListId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * A DNS label for the VCN, used in conjunction with the VNIC's hostname and subnet's DNS label to form a fully qualified domain name (FQDN) for each VNIC within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be an alphanumeric string that begins with a letter. The value cannot be changed.
         */
        dnsLabel: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The VCN's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * For an IPv6-enabled VCN, this is the list of IPv6 CIDR blocks for the VCN's IP address space. The CIDRs are provided by Oracle and the sizes are always /56.
         */
        ipv6cidrBlocks: string[];
        /**
         * For an IPv6-enabled VCN, this is the list of Private IPv6 CIDR blocks for the VCN's IP address space.
         */
        ipv6privateCidrBlocks: string[];
        isIpv6enabled: boolean;
        isOracleGuaAllocationEnabled: boolean;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the VCN was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The VCN's domain name, which consists of the VCN's DNS label, and the `oraclevcn.com` domain.
         */
        vcnDomainName: string;
    }

    export interface GetVcnsVirtualNetworkByoipv6cidrDetail {
        byoipv6rangeId: string;
        ipv6cidrBlock: string;
    }

    export interface GetVirtualCircuitBandwidthShapesFilter {
        /**
         * The name of the bandwidth shape.  Example: `10 Gbps`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVirtualCircuitBandwidthShapesVirtualCircuitBandwidthShape {
        /**
         * The bandwidth in Mbps.  Example: `10000`
         */
        bandwidthInMbps: number;
        /**
         * The name of the bandwidth shape.  Example: `10 Gbps`
         */
        name: string;
    }

    export interface GetVirtualCircuitCrossConnectMapping {
        /**
         * The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don't use BGP MD5 authentication.
         */
        bgpMd5authKey: string;
        /**
         * The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
         */
        crossConnectOrCrossConnectGroupId: string;
        /**
         * The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider's edge router. Must use a /30 or /31 subnet mask.
         */
        customerBgpPeeringIp: string;
        /**
         * The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider's edge router. Only subnet masks from /64 up to /127 are allowed.
         */
        customerBgpPeeringIpv6: string;
        /**
         * The IPv4 address for Oracle's end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
         */
        oracleBgpPeeringIp: string;
        /**
         * The IPv6 address for Oracle's end of the BGP session. Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
         */
        oracleBgpPeeringIpv6: string;
        /**
         * The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
         */
        vlan: number;
    }

    export interface GetVirtualCircuitPublicPrefix {
        cidrBlock: string;
    }

    export interface GetVirtualCircuitPublicPrefixesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVirtualCircuitPublicPrefixesVirtualCircuitPublicPrefix {
        /**
         * Publix IP prefix (CIDR) that the customer specified.
         */
        cidrBlock: string;
        /**
         * A filter to only return resources that match the given verification state.
         */
        verificationState: string;
    }

    export interface GetVirtualCircuitsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVirtualCircuitsVirtualCircuit {
        /**
         * The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
         */
        bandwidthShapeName: string;
        /**
         * Set to `ENABLED` (the default) to activate the BGP session of the virtual circuit, set to `DISABLED` to deactivate the virtual circuit.
         */
        bgpAdminState: string;
        /**
         * The state of the Ipv6 BGP session associated with the virtual circuit.
         */
        bgpIpv6sessionState: string;
        /**
         * Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
         *
         * @deprecated The 'bgp_management' field has been deprecated. Please use the 'oci_core_fast_connect_provider_service' data source instead.
         */
        bgpManagement: string;
        /**
         * The state of the Ipv4 BGP session associated with the virtual circuit.
         */
        bgpSessionState: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * An array of mappings, each containing properties for a cross-connect or cross-connect group that is associated with this virtual circuit.
         */
        crossConnectMappings: outputs.Core.GetVirtualCircuitsVirtualCircuitCrossConnectMapping[];
        /**
         * The BGP ASN of the network at the other end of the BGP session from Oracle. If the session is between the customer's edge router and Oracle, the value is the customer's ASN. If the BGP session is between the provider's edge router and Oracle, the value is the provider's ASN. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.
         */
        customerAsn: string;
        /**
         * Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
         *
         * @deprecated The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead.
         */
        customerBgpAsn: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer's [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses. Applicable only to private virtual circuits.
         */
        gatewayId: string;
        /**
         * The virtual circuit's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * The layer 3 IP MTU to use on this virtual circuit.
         */
        ipMtu: string;
        /**
         * Set to `true` to enable BFD for IPv4 BGP peering, or set to `false` to disable BFD. If this is not set, the default is `false`.
         */
        isBfdEnabled: boolean;
        /**
         * The Oracle BGP ASN.
         */
        oracleBgpAsn: number;
        /**
         * The OCID of the service offered by the provider (if the customer is connecting via a provider).
         */
        providerServiceId: string;
        /**
         * The service key name offered by the provider (if the customer is connecting via a provider).
         */
        providerServiceKeyName: string;
        /**
         * The provider's state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
         */
        providerState: string;
        /**
         * For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection. All prefix sizes are allowed.
         */
        publicPrefixes: outputs.Core.GetVirtualCircuitsVirtualCircuitPublicPrefix[];
        /**
         * Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
         */
        referenceComment: string;
        /**
         * The Oracle Cloud Infrastructure region where this virtual circuit is located.
         */
        region: string;
        /**
         * The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
         */
        routingPolicies: string[];
        /**
         * Provider service type.
         */
        serviceType: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Whether the virtual circuit supports private or public peering. For more information, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
         */
        type: string;
        virtualCircuitId: string;
    }

    export interface GetVirtualCircuitsVirtualCircuitCrossConnectMapping {
        /**
         * The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don't use BGP MD5 authentication.
         */
        bgpMd5authKey: string;
        /**
         * The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
         */
        crossConnectOrCrossConnectGroupId: string;
        /**
         * The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider's edge router. Must use a /30 or /31 subnet mask.
         */
        customerBgpPeeringIp: string;
        /**
         * The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider's edge router. Only subnet masks from /64 up to /127 are allowed.
         */
        customerBgpPeeringIpv6: string;
        /**
         * The IPv4 address for Oracle's end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
         */
        oracleBgpPeeringIp: string;
        /**
         * The IPv6 address for Oracle's end of the BGP session. Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
         */
        oracleBgpPeeringIpv6: string;
        /**
         * The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
         */
        vlan: number;
    }

    export interface GetVirtualCircuitsVirtualCircuitPublicPrefix {
        cidrBlock: string;
    }

    export interface GetVirtualNetworksFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVirtualNetworksVirtualNetwork {
        byoipv6cidrBlocks: string[];
        byoipv6cidrDetails: outputs.Core.GetVirtualNetworksVirtualNetworkByoipv6cidrDetail[];
        cidrBlock: string;
        cidrBlocks: string[];
        compartmentId: string;
        defaultDhcpOptionsId: string;
        defaultRouteTableId: string;
        defaultSecurityListId: string;
        definedTags: {[key: string]: any};
        displayName: string;
        dnsLabel: string;
        freeformTags: {[key: string]: any};
        id: string;
        ipv6cidrBlocks: string[];
        ipv6privateCidrBlocks: string[];
        isIpv6enabled: boolean;
        isOracleGuaAllocationEnabled: boolean;
        state: string;
        timeCreated: string;
        vcnDomainName: string;
    }

    export interface GetVirtualNetworksVirtualNetworkByoipv6cidrDetail {
        byoipv6rangeId: string;
        ipv6cidrBlock: string;
    }

    export interface GetVlansFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVlansVlan {
        /**
         * The VLAN's availability domain. This attribute will be null if this is a regional VLAN rather than an AD-specific VLAN.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The range of IPv4 addresses that will be used for layer 3 communication with hosts outside the VLAN.  Example: `192.168.1.0/24`
         */
        cidrBlock: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The VLAN's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * A list of the OCIDs of the network security groups (NSGs) to use with this VLAN. All VNICs in the VLAN belong to these NSGs. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table that the VLAN uses.
         */
        routeTableId: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the VLAN was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
        /**
         * The IEEE 802.1Q VLAN tag of this VLAN.  Example: `100`
         */
        vlanTag: number;
    }

    export interface GetVnicAttachmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVnicAttachmentsVnicAttachment {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        createVnicDetails: outputs.Core.GetVnicAttachmentsVnicAttachmentCreateVnicDetail[];
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The OCID of the VNIC attachment.
         */
        id: string;
        /**
         * The OCID of the instance.
         */
        instanceId: string;
        /**
         * Which physical network interface card (NIC) the VNIC uses. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
         */
        nicIndex: number;
        /**
         * The current state of the VNIC attachment.
         */
        state: string;
        /**
         * The OCID of the subnet to create the VNIC in.
         */
        subnetId: string;
        /**
         * The date and time the VNIC attachment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The OCID of the VLAN to create the VNIC in. Creating the VNIC in a VLAN (instead of a subnet) is possible only if you are an Oracle Cloud VMware Solution customer. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
         */
        vlanId: string;
        /**
         * The Oracle-assigned VLAN tag of the attached VNIC. Available after the attachment process is complete.
         */
        vlanTag: number;
        /**
         * The OCID of the VNIC.
         */
        vnicId: string;
    }

    export interface GetVnicAttachmentsVnicAttachmentCreateVnicDetail {
        assignPrivateDnsRecord: boolean;
        assignPublicIp: string;
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        freeformTags: {[key: string]: any};
        hostnameLabel: string;
        nsgIds: string[];
        privateIp: string;
        skipSourceDestCheck: boolean;
        /**
         * The OCID of the subnet to create the VNIC in.
         */
        subnetId: string;
        /**
         * The OCID of the VLAN to create the VNIC in. Creating the VNIC in a VLAN (instead of a subnet) is possible only if you are an Oracle Cloud VMware Solution customer. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
         */
        vlanId: string;
    }

    export interface GetVolumeAttachmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVolumeAttachmentsVolumeAttachment {
        /**
         * The type of volume attachment.
         */
        attachmentType: string;
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the "CHAP password".)
         */
        chapSecret: string;
        /**
         * The volume's system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.<unique_ID>`
         */
        chapUsername: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         *
         * @deprecated The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field.
         */
        compartmentId: string;
        /**
         * The device name.
         */
        device: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Refer the top-level definition of encryptionInTransitType. The default value is NONE.
         */
        encryptionInTransitType: string;
        /**
         * The OCID of the volume attachment.
         */
        id: string;
        /**
         * The OCID of the instance.
         */
        instanceId: string;
        /**
         * The volume's iSCSI IP address.  Example: `169.254.2.2`
         */
        ipv4: string;
        /**
         * The target volume's iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
         */
        iqn: string;
        /**
         * Whether Oracle Cloud Agent is enabled perform the iSCSI login and logout commands after the volume attach or detach operations for non multipath-enabled iSCSI attachments.
         */
        isAgentAutoIscsiLoginEnabled: boolean;
        /**
         * Whether the Iscsi or Paravirtualized attachment is multipath or not, it is not applicable to NVMe attachment.
         */
        isMultipath: boolean;
        /**
         * Whether in-transit encryption for the data volume's paravirtualized attachment is enabled or not.
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Whether the attachment was created in read-only mode.
         */
        isReadOnly: boolean;
        isShareable: boolean;
        /**
         * The iscsi login state of the volume attachment. For a Iscsi volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
         */
        iscsiLoginState: string;
        /**
         * A list of secondary multipath devices
         */
        multipathDevices: outputs.Core.GetVolumeAttachmentsVolumeAttachmentMultipathDevice[];
        /**
         * The volume's iSCSI port, usually port 860 or 3260.  Example: `3260`
         */
        port: number;
        /**
         * The current state of the volume attachment.
         */
        state: string;
        /**
         * The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        useChap: boolean;
        /**
         * The OCID of the volume.
         */
        volumeId: string;
    }

    export interface GetVolumeAttachmentsVolumeAttachmentMultipathDevice {
        /**
         * The volume's iSCSI IP address.  Example: `169.254.2.2`
         */
        ipv4: string;
        /**
         * The target volume's iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
         */
        iqn: string;
        /**
         * The volume's iSCSI port, usually port 860 or 3260.  Example: `3260`
         */
        port: number;
    }

    export interface GetVolumeBackupPoliciesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVolumeBackupPoliciesVolumeBackupPolicy {
        /**
         * The OCID of the compartment. If no compartment is specified, the Oracle defined backup policies are listed.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The paired destination region for copying scheduled backups to. Example `us-ashburn-1`. See [Region Pairs](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#RegionPairs) for details about paired regions.
         */
        destinationRegion: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the volume backup policy.
         */
        id: string;
        /**
         * The collection of schedules that this policy will apply.
         */
        schedules: outputs.Core.GetVolumeBackupPoliciesVolumeBackupPolicySchedule[];
        /**
         * The date and time the volume backup policy was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
    }

    export interface GetVolumeBackupPoliciesVolumeBackupPolicySchedule {
        /**
         * The type of volume backup to create.
         */
        backupType: string;
        /**
         * The day of the month to schedule the volume backup.
         */
        dayOfMonth: number;
        /**
         * The day of the week to schedule the volume backup.
         */
        dayOfWeek: string;
        /**
         * The hour of the day to schedule the volume backup.
         */
        hourOfDay: number;
        /**
         * The month of the year to schedule the volume backup.
         */
        month: string;
        /**
         * The number of seconds that the volume backup start time should be shifted from the default interval boundaries specified by the period. The volume backup start time is the frequency start time plus the offset.
         */
        offsetSeconds: number;
        /**
         * Indicates how the offset is defined. If value is `STRUCTURED`, then `hourOfDay`, `dayOfWeek`, `dayOfMonth`, and `month` fields are used and `offsetSeconds` will be ignored in requests and users should ignore its value from the responses.
         */
        offsetType: string;
        /**
         * The volume backup frequency.
         */
        period: string;
        /**
         * How long, in seconds, to keep the volume backups created by this schedule.
         */
        retentionSeconds: number;
        /**
         * Specifies what time zone is the schedule in
         */
        timeZone: string;
    }

    export interface GetVolumeBackupPolicyAssignmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment {
        /**
         * The OCID of an asset (e.g. a volume).
         */
        assetId: string;
        /**
         * The OCID of the volume backup policy assignment.
         */
        id: string;
        /**
         * The OCID of the volume backup policy that has been assigned to the volume.
         */
        policyId: string;
        /**
         * The date and time the volume backup policy was assigned to the volume. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
    }

    export interface GetVolumeBackupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVolumeBackupsVolumeBackup {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
         */
        expirationTime: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the volume backup.
         */
        id: string;
        /**
         * The OCID of the Key Management key which is the master encryption key for the volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
         */
        kmsKeyId: string;
        /**
         * The size of the volume, in GBs.
         */
        sizeInGbs: string;
        /**
         * The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
         *
         * @deprecated The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
         */
        sizeInMbs: string;
        sourceDetails: outputs.Core.GetVolumeBackupsVolumeBackupSourceDetail[];
        /**
         * Specifies whether the backup was created manually, or via scheduled backup policy.
         */
        sourceType: string;
        /**
         * A filter to return only resources that originated from the given source volume backup.
         */
        sourceVolumeBackupId: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
         */
        timeRequestReceived: string;
        /**
         * The type of a volume backup. Supported values are 'FULL' or 'INCREMENTAL'.
         */
        type: string;
        /**
         * The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
         */
        uniqueSizeInGbs: string;
        /**
         * The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
         *
         * @deprecated The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead.
         */
        uniqueSizeInMbs: string;
        /**
         * The OCID of the volume.
         */
        volumeId: string;
    }

    export interface GetVolumeBackupsVolumeBackupSourceDetail {
        /**
         * The OCID of the Key Management key which is the master encryption key for the volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
         */
        kmsKeyId: string;
        region: string;
        volumeBackupId: string;
    }

    export interface GetVolumeBlockVolumeReplica {
        /**
         * The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The block volume replica's Oracle ID (OCID).
         */
        blockVolumeReplicaId: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetVolumeGroupBackupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVolumeGroupBackupsVolumeGroupBackup {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
         */
        expirationTime: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the volume group backup.
         */
        id: string;
        /**
         * The aggregate size of the volume group backup, in GBs.
         */
        sizeInGbs: string;
        /**
         * The aggregate size of the volume group backup, in MBs.
         */
        sizeInMbs: string;
        sourceDetails: outputs.Core.GetVolumeGroupBackupsVolumeGroupBackupSourceDetail[];
        /**
         * Specifies whether the volume group backup was created manually, or via scheduled backup policy.
         */
        sourceType: string;
        /**
         * The OCID of the source volume group backup.
         */
        sourceVolumeGroupBackupId: string;
        /**
         * The current state of a volume group backup.
         */
        state: string;
        /**
         * The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeRequestReceived: string;
        /**
         * The type of backup.
         */
        type: string;
        /**
         * The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `sizeInGbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
         */
        uniqueSizeInGbs: string;
        /**
         * The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `sizeInMbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
         */
        uniqueSizeInMbs: string;
        /**
         * OCIDs for the volume backups in this volume group backup.
         */
        volumeBackupIds: string[];
        /**
         * The OCID of the volume group.
         */
        volumeGroupId: string;
    }

    export interface GetVolumeGroupBackupsVolumeGroupBackupSourceDetail {
        kmsKeyId: string;
        region: string;
        volumeGroupBackupId: string;
    }

    export interface GetVolumeGroupReplicaMemberReplica {
        /**
         * Membership state of the volume replica in relation to the volume group replica.
         */
        membershipState: string;
        /**
         * The volume replica ID.
         */
        volumeReplicaId: string;
    }

    export interface GetVolumeGroupReplicasFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVolumeGroupReplicasVolumeGroupReplica {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID for the volume group replica.
         */
        id: string;
        /**
         * Volume replicas within this volume group replica.
         */
        memberReplicas: outputs.Core.GetVolumeGroupReplicasVolumeGroupReplicaMemberReplica[];
        /**
         * The aggregate size of the volume group replica in GBs.
         */
        sizeInGbs: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the volume group replica was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the volume group replica was last synced from the source volume group. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeLastSynced: string;
        /**
         * The OCID of the source volume group.
         */
        volumeGroupId: string;
    }

    export interface GetVolumeGroupReplicasVolumeGroupReplicaMemberReplica {
        /**
         * Membership state of the volume replica in relation to the volume group replica.
         */
        membershipState: string;
        /**
         * The volume replica ID.
         */
        volumeReplicaId: string;
    }

    export interface GetVolumeGroupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVolumeGroupsVolumeGroup {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        backupPolicyId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID for the volume group.
         */
        id: string;
        /**
         * Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
         */
        isHydrated: boolean;
        preserveVolumeReplica: boolean;
        /**
         * The aggregate size of the volume group in GBs.
         */
        sizeInGbs: string;
        /**
         * The aggregate size of the volume group in MBs.
         */
        sizeInMbs: string;
        /**
         * Specifies the source for a volume group.
         */
        sourceDetails: outputs.Core.GetVolumeGroupsVolumeGroupSourceDetail[];
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The list of volume group replicas of this volume group.
         */
        volumeGroupReplicas: outputs.Core.GetVolumeGroupsVolumeGroupVolumeGroupReplica[];
        volumeGroupReplicasDeletion: boolean;
        /**
         * OCIDs for the volumes in this volume group.
         */
        volumeIds: string[];
    }

    export interface GetVolumeGroupsVolumeGroupSourceDetail {
        /**
         * The type can be one of these values: `volumeGroupBackupId`, `volumeGroupId`, `volumeIds`
         */
        type: string;
        /**
         * The OCID of the volume group backup to restore from, if the type is `volumeGroupBackup`
         */
        volumeGroupBackupId: string;
        /**
         * The OCID of the volume group to clone from, if the type is `volumeGroup`
         */
        volumeGroupId: string;
        /**
         * The volume group replica's Oracle ID (OCID).
         */
        volumeGroupReplicaId: string;
        /**
         * OCIDs for the volumes in this volume group.
         */
        volumeIds: string[];
    }

    export interface GetVolumeGroupsVolumeGroupVolumeGroupReplica {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The volume group replica's Oracle ID (OCID).
         */
        volumeGroupReplicaId: string;
    }

    export interface GetVolumeSourceDetail {
        /**
         * The OCID of the block volume replica.
         */
        id: string;
        /**
         * The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
         */
        type: string;
    }

    export interface GetVolumesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVolumesVolume {
        /**
         * The number of Volume Performance Units per GB that this volume is effectively tuned to when it's idle.
         */
        autoTunedVpusPerGb: string;
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * @deprecated The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
         */
        backupPolicyId: string;
        /**
         * The list of block volume replicas of this volume.
         */
        blockVolumeReplicas: outputs.Core.GetVolumesVolumeBlockVolumeReplica[];
        blockVolumeReplicasDeletion: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the block volume replica.
         */
        id: string;
        /**
         * Specifies whether the auto-tune performance is enabled for this volume.
         */
        isAutoTuneEnabled: boolean;
        /**
         * Specifies whether the cloned volume's data has finished copying from the source volume or backup.
         */
        isHydrated: boolean;
        /**
         * The OCID of the Key Management key which is the master encryption key for the volume.
         */
        kmsKeyId: string;
        /**
         * The size of the volume in GBs.
         */
        sizeInGbs: string;
        /**
         * The size of the volume in MBs. This field is deprecated. Use `sizeInGbs` instead.
         *
         * @deprecated The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
         */
        sizeInMbs: string;
        sourceDetails: outputs.Core.GetVolumesVolumeSourceDetail[];
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        volumeBackupId: string;
        /**
         * The OCID of the volume group.
         */
        volumeGroupId: string;
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        vpusPerGb: string;
    }

    export interface GetVolumesVolumeBlockVolumeReplica {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The block volume replica's Oracle ID (OCID).
         */
        blockVolumeReplicaId: string;
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
    }

    export interface GetVolumesVolumeSourceDetail {
        /**
         * The OCID of the block volume replica.
         */
        id: string;
        /**
         * The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
         */
        type: string;
    }

    export interface GetVtapsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVtapsVtap {
        /**
         * The capture filter's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        captureFilterId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Defines an encapsulation header type for the VTAP's mirrored traffic.
         */
        encapsulationProtocol: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The VTAP's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
         */
        id: string;
        /**
         * Indicates whether to list all VTAPs or only running VTAPs.
         * * When `FALSE`, lists ALL running and stopped VTAPs.
         * * When `TRUE`, lists only running VTAPs (VTAPs where isVtapEnabled = `TRUE`).
         */
        isVtapEnabled: boolean;
        /**
         * The VTAP's current running state.
         */
        lifecycleStateDetails: string;
        /**
         * The maximum size of the packets to be included in the filter.
         */
        maxPacketSize: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source point where packets are captured.
         */
        sourceId: string;
        /**
         * The IP Address of the source private endpoint.
         */
        sourcePrivateEndpointIp: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet that source private endpoint belongs to.
         */
        sourcePrivateEndpointSubnetId: string;
        /**
         * The source type for the VTAP.
         */
        sourceType: string;
        /**
         * A filter to return only resources that match the given VTAP administrative lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP target.
         */
        targetId: string;
        /**
         * The IP address of the VTAP target.
         */
        targetIp: string;
        /**
         * The target type for the VTAP.
         */
        targetType: string;
        /**
         * The date and time the VTAP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2020-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Used to control the priority of traffic. It is an optional field. If it not passed, the value is DEFAULT
         */
        trafficMode: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
        /**
         * The virtual extensible LAN (VXLAN) network identifier (or VXLAN segment ID) that uniquely identifies the VXLAN.
         */
        vxlanNetworkIdentifier: string;
    }

    export interface ImageAgentFeature {
        /**
         * This attribute is not used.
         */
        isManagementSupported: boolean;
        /**
         * This attribute is not used.
         */
        isMonitoringSupported: boolean;
    }

    export interface ImageImageSourceDetails {
        /**
         * The Object Storage bucket for the image.
         */
        bucketName?: string;
        /**
         * The Object Storage namespace for the image.
         */
        namespaceName?: string;
        /**
         * The Object Storage name for the image.
         */
        objectName?: string;
        /**
         * The image's operating system.  Example: `Oracle Linux`
         */
        operatingSystem?: string;
        /**
         * The image's operating system version.  Example: `7.2`
         */
        operatingSystemVersion?: string;
        /**
         * The format of the image to be imported.  Only monolithic images are supported. This attribute is not used for exported Oracle images with the Oracle Cloud Infrastructure image format. Allowed values are:
         * * `QCOW2`
         * * `VMDK`
         */
        sourceImageType?: string;
        /**
         * The source type for the image. Use `objectStorageTuple` when specifying the namespace, bucket name, and object name. Use `objectStorageUri` when specifying the Object Storage URL.
         */
        sourceType: string;
        /**
         * The Object Storage URL for the image.
         */
        sourceUri?: string;
    }

    export interface ImageLaunchOption {
        /**
         * Emulation type for the boot volume.
         */
        bootVolumeType: string;
        /**
         * Firmware used to boot VM. Select the option that matches your operating system.
         */
        firmware: string;
        /**
         * Whether to enable consistent volume naming feature. Defaults to false.
         */
        isConsistentVolumeNamingEnabled: boolean;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Emulation type for the physical network interface card (NIC).
         */
        networkType: string;
        /**
         * Emulation type for volume.
         */
        remoteDataVolumeType: string;
    }

    export interface InstanceAgentConfig {
        /**
         * (Updatable) Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
         */
        areAllPluginsDisabled: boolean;
        /**
         * (Updatable) Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
         */
        isManagementDisabled: boolean;
        /**
         * (Updatable) Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
         */
        isMonitoringDisabled: boolean;
        /**
         * (Updatable) The configuration of plugins associated with this instance.
         */
        pluginsConfigs: outputs.Core.InstanceAgentConfigPluginsConfig[];
    }

    export interface InstanceAgentConfigPluginsConfig {
        /**
         * (Updatable) Whether the plugin should be enabled or disabled.
         */
        desiredState: string;
        /**
         * (Updatable) The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         */
        name: string;
    }

    export interface InstanceAvailabilityConfig {
        /**
         * (Updatable) Whether live migration is preferred for infrastructure maintenance.  If null preference is specified, live migration will be preferred for infrastructure maintenance for applicable instances.
         */
        isLiveMigrationPreferred: boolean;
        /**
         * (Updatable) The lifecycle state for an instance when it is recovered after infrastructure maintenance.
         */
        recoveryAction: string;
    }

    export interface InstanceConfigurationInstanceDetails {
        blockVolumes: outputs.Core.InstanceConfigurationInstanceDetailsBlockVolume[];
        /**
         * The type of instance details. Supported instanceType is compute
         */
        instanceType: string;
        /**
         * Instance launch details for creating an instance from an instance configuration. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
         */
        launchDetails: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetails;
        secondaryVnics: outputs.Core.InstanceConfigurationInstanceDetailsSecondaryVnic[];
    }

    export interface InstanceConfigurationInstanceDetailsBlockVolume {
        /**
         * Volume attachmentDetails. Please see [AttachVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/AttachVolumeDetails/)
         */
        attachDetails: outputs.Core.InstanceConfigurationInstanceDetailsBlockVolumeAttachDetails;
        /**
         * Creates a new block volume. Please see [CreateVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVolumeDetails/)
         */
        createDetails: outputs.Core.InstanceConfigurationInstanceDetailsBlockVolumeCreateDetails;
        /**
         * The OCID of the volume.
         */
        volumeId: string;
    }

    export interface InstanceConfigurationInstanceDetailsBlockVolumeAttachDetails {
        /**
         * The device name.
         */
        device: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Whether the attachment should be created in read-only mode.
         */
        isReadOnly: boolean;
        /**
         * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
         */
        isShareable: boolean;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
        /**
         * Whether to use CHAP authentication for the volume attachment. Defaults to false.
         */
        useChap: boolean;
    }

    export interface InstanceConfigurationInstanceDetailsBlockVolumeCreateDetails {
        /**
         * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
         */
        backupPolicyId: string;
        /**
         * The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment as the instance that was used to create the instance configuration.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Key Management key to assign as the master encryption key for the volume.
         */
        kmsKeyId: string;
        /**
         * The size of the volume in GBs.
         */
        sizeInGbs: string;
        sourceDetails: outputs.Core.InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails;
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        vpusPerGb: string;
    }

    export interface InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails {
        /**
         * The OCID of the volume backup.
         */
        id: string;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetails {
        /**
         * Configuration options for the Oracle Cloud Agent software running on the instance.
         */
        agentConfig: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig;
        /**
         * Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
         */
        availabilityConfig: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig;
        /**
         * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The OCID of the compute capacity reservation this instance is launched under.
         */
        capacityReservationId: string;
        /**
         * The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment as the instance that was used to create the instance configuration.
         */
        compartmentId: string;
        /**
         * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
         */
        createVnicDetails: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails;
        /**
         * The OCID of dedicated VM host.
         */
        dedicatedVmHostId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         */
        extendedMetadata: {[key: string]: any};
        /**
         * A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
         */
        faultDomain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
         */
        instanceOptions: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions;
        /**
         * This is an advanced option.
         */
        ipxeScript: string;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
         */
        launchMode: string;
        /**
         * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
         */
        launchOptions: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions;
        /**
         * Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
         */
        metadata: {[key: string]: any};
        /**
         * The platform configuration requested for the instance.
         */
        platformConfig: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig;
        /**
         * Configuration options for preemptible instances.
         */
        preemptibleInstanceConfig: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig;
        /**
         * The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
         */
        preferredMaintenanceAction: string;
        /**
         * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
         */
        shape: string;
        /**
         * The shape configuration requested for the instance.
         */
        shapeConfig: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig;
        sourceDetails: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig {
        /**
         * Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
         */
        areAllPluginsDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
         */
        isManagementDisabled: boolean;
        /**
         * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
         */
        isMonitoringDisabled: boolean;
        /**
         * The configuration of plugins associated with this instance.
         */
        pluginsConfigs: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig[];
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig {
        /**
         * Whether the plugin should be enabled or disabled. Accepted values are `ENABLED` and `DISABLED`
         */
        desiredState: string;
        /**
         * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         */
        name: string;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig {
        /**
         * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
         */
        recoveryAction: string;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails {
        /**
         * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
         */
        assignPrivateDnsRecord?: boolean;
        /**
         * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        assignPublicIp: boolean;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        hostnameLabel: string;
        /**
         * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        nsgIds?: string[];
        /**
         * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        privateIp: string;
        /**
         * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        skipSourceDestCheck: boolean;
        /**
         * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        subnetId: string;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions {
        /**
         * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
         */
        areLegacyImdsEndpointsDisabled: boolean;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions {
        /**
         * Emulation type for the boot volume.
         */
        bootVolumeType: string;
        /**
         * Firmware used to boot VM. Select the option that matches your operating system.
         */
        firmware: string;
        /**
         * Whether to enable consistent volume naming feature. Defaults to false.
         */
        isConsistentVolumeNamingEnabled: boolean;
        /**
         * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * Emulation type for the physical network interface card (NIC).
         */
        networkType: string;
        /**
         * Emulation type for volume.
         */
        remoteDataVolumeType: string;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig {
        /**
         * Whether virtualization instructions are available.
         */
        areVirtualInstructionsEnabled: boolean;
        /**
         * Whether the Access Control Service is enabled on the instance. When enabled, the platform can enforce PCIe device isolation, required for VFIO device passthrough.
         */
        isAccessControlServiceEnabled: boolean;
        /**
         * Whether the input-output memory management unit is enabled.
         */
        isInputOutputMemoryManagementUnitEnabled: boolean;
        /**
         * Whether the Measured Boot feature is enabled on the instance.
         */
        isMeasuredBootEnabled: boolean;
        /**
         * Whether Secure Boot is enabled on the instance.
         */
        isSecureBootEnabled: boolean;
        /**
         * Whether symmetric multi-threading is enabled on the instance.
         */
        isSymmetricMultiThreadingEnabled: boolean;
        /**
         * Whether the Trusted Platform Module (TPM) is enabled on the instance.
         */
        isTrustedPlatformModuleEnabled: boolean;
        /**
         * The number of NUMA nodes per socket (NPS).
         */
        numaNodesPerSocket: string;
        /**
         * The percentage of cores enabled.
         */
        percentageOfCoresEnabled: number;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig {
        /**
         * The action to run when the preemptible instance is interrupted for eviction.
         */
        preemptionAction: outputs.Core.InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction {
        /**
         * Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
         */
        preserveBootVolume: boolean;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig {
        /**
         * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
         */
        baselineOcpuUtilization: string;
        /**
         * The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The number of NVMe drives to be used for storage. A single drive has 6.8 TB available.
         */
        nvmes: number;
        /**
         * The total number of OCPUs available to the instance.
         */
        ocpus: number;
    }

    export interface InstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails {
        /**
         * The OCID of the boot volume used to boot the instance.
         */
        bootVolumeId: string;
        /**
         * The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
         */
        bootVolumeSizeInGbs: string;
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        bootVolumeVpusPerGb: string;
        /**
         * The OCID of the image used to boot the instance.
         */
        imageId: string;
        /**
         * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
         */
        sourceType: string;
    }

    export interface InstanceConfigurationInstanceDetailsSecondaryVnic {
        /**
         * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
         */
        createVnicDetails: outputs.Core.InstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Which physical network interface card (NIC) the VNIC will use. Defaults to 0. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
         */
        nicIndex: number;
    }

    export interface InstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails {
        /**
         * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
         */
        assignPrivateDnsRecord?: boolean;
        /**
         * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        assignPublicIp: boolean;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        hostnameLabel: string;
        /**
         * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        nsgIds?: string[];
        /**
         * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        privateIp: string;
        /**
         * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        skipSourceDestCheck: boolean;
        /**
         * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
         */
        subnetId: string;
    }

    export interface InstanceCreateVnicDetails {
        /**
         * Whether the VNIC should be assigned a DNS record. If set to false, no DNS record registion for the VNIC; if set to true, DNS record will be registered. The default value is true.  Example: `true`
         */
        assignPrivateDnsRecord?: boolean;
        /**
         * (Updatable) Whether the VNIC should be assigned a public IP address. Defaults to whether the subnet is public or private. If not set and the VNIC is being created in a private subnet (that is, where `prohibitPublicIpOnVnic` = true in the [Subnet](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Subnet/)), then no public IP address is assigned. If not set and the subnet is public (`prohibitPublicIpOnVnic` = false), then a public IP address is assigned. If set to true and `prohibitPublicIpOnVnic` = true, an error is returned.
         */
        assignPublicIp?: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Deprecated. Instead use `hostnameLabel` in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/). If you provide both, the values must match.
         */
        hostnameLabel: string;
        /**
         * (Updatable) A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        nsgIds?: string[];
        /**
         * A private IP address of your choice to assign to the VNIC. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This is the VNIC's *primary* private IP address. The value appears in the [Vnic](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vnic/) object and also the [PrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/) object returned by [ListPrivateIps](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/ListPrivateIps) and [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/GetPrivateIp).
         */
        privateIp: string;
        /**
         * (Updatable) Whether the source/destination check is disabled on the VNIC. Defaults to `false`, which means the check is performed. For information about why you would skip the source/destination check, see [Using a Private IP as a Route Target](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm#privateip).
         */
        skipSourceDestCheck: boolean;
        /**
         * Deprecated. Instead use `subnetId` in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/). At least one of them is required; if you provide both, the values must match.
         */
        subnetId: string;
        /**
         * Provide this attribute only if you are an Oracle Cloud VMware Solution customer and creating a secondary VNIC in a VLAN. The value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
         */
        vlanId: string;
    }

    export interface InstanceInstanceOptions {
        /**
         * (Updatable) Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
         */
        areLegacyImdsEndpointsDisabled: boolean;
    }

    export interface InstanceLaunchOptions {
        /**
         * (Updatable) Emulation type for the boot volume.
         */
        bootVolumeType: string;
        /**
         * Firmware used to boot VM. Select the option that matches your operating system.
         */
        firmware: string;
        /**
         * Whether to enable consistent volume naming feature. Defaults to false.
         */
        isConsistentVolumeNamingEnabled: boolean;
        /**
         * (Updatable) Use this for update operation only. This field is  Deprecated during create. For create use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/datatypes/LaunchInstanceDetails).
         */
        isPvEncryptionInTransitEnabled: boolean;
        /**
         * (Updatable) Emulation type for the physical network interface card (NIC).
         */
        networkType: string;
        /**
         * Emulation type for volume.
         */
        remoteDataVolumeType: string;
    }

    export interface InstancePlatformConfig {
        /**
         * Whether virtualization instructions are available.
         */
        areVirtualInstructionsEnabled: boolean;
        /**
         * Whether the Access Control Service is enabled on the instance. When enabled, the platform can enforce PCIe device isolation, required for VFIO device passthrough.
         */
        isAccessControlServiceEnabled: boolean;
        /**
         * Whether the input-output memory management unit is enabled.
         */
        isInputOutputMemoryManagementUnitEnabled: boolean;
        /**
         * Whether the Measured Boot feature is enabled on the instance.
         */
        isMeasuredBootEnabled: boolean;
        /**
         * Whether Secure Boot is enabled on the instance.
         */
        isSecureBootEnabled: boolean;
        /**
         * Whether symmetric multi-threading is enabled on the instance.
         */
        isSymmetricMultiThreadingEnabled: boolean;
        /**
         * Whether the Trusted Platform Module (TPM) is enabled on the instance.
         */
        isTrustedPlatformModuleEnabled: boolean;
        /**
         * The number of NUMA nodes per socket (NPS).
         */
        numaNodesPerSocket: string;
        /**
         * The percentage of cores enabled.
         */
        percentageOfCoresEnabled: number;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface InstancePoolInstanceLoadBalancerBackend {
        /**
         * The health of the backend as observed by the load balancer.
         */
        backendHealthStatus: string;
        /**
         * The name of the backend in the backend set.
         */
        backendName: string;
        /**
         * The name of the backend set on the load balancer.
         */
        backendSetName: string;
        /**
         * The OCID of the load balancer attached to the instance pool.
         */
        loadBalancerId: string;
        /**
         * The lifecycle state of the instance. Refer to `lifecycleState` in the [Instance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance) resource.
         */
        state: string;
    }

    export interface InstancePoolLoadBalancer {
        /**
         * The name of the backend set on the load balancer to add instances to.
         */
        backendSetName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
         */
        instancePoolId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer to attach to the instance pool.
         */
        loadBalancerId: string;
        /**
         * The port value to use when creating the backend set.
         */
        port: number;
        /**
         * (Updatable) The target state for the instance pool update operation (ignored at create time and should not be set). Could be set to RUNNING or STOPPED.
         */
        state: string;
        /**
         * Indicates which VNIC on each instance in the pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
         */
        vnicSelection: string;
    }

    export interface InstancePoolPlacementConfiguration {
        /**
         * (Updatable) The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * (Updatable) The fault domains to place instances.
         */
        faultDomains: string[];
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
         */
        primarySubnetId: string;
        /**
         * (Updatable) The set of secondary VNIC data for instances in the pool.
         */
        secondaryVnicSubnets: outputs.Core.InstancePoolPlacementConfigurationSecondaryVnicSubnet[];
    }

    export interface InstancePoolPlacementConfigurationSecondaryVnicSubnet {
        /**
         * (Updatable) The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
         */
        displayName: string;
        /**
         * (Updatable) The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
         */
        subnetId: string;
    }

    export interface InstancePreemptibleInstanceConfig {
        /**
         * The action to run when the preemptible instance is interrupted for eviction.
         */
        preemptionAction: outputs.Core.InstancePreemptibleInstanceConfigPreemptionAction;
    }

    export interface InstancePreemptibleInstanceConfigPreemptionAction {
        /**
         * Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
         */
        preserveBootVolume: boolean;
        /**
         * The type of action to run when the instance is interrupted for eviction.
         */
        type: string;
    }

    export interface InstanceShapeConfig {
        /**
         * (Updatable) The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
         */
        baselineOcpuUtilization: string;
        /**
         * A short description of the instance's graphics processing unit (GPU).
         */
        gpuDescription: string;
        /**
         * The number of GPUs available to the instance.
         */
        gpus: number;
        /**
         * A short description of the local disks available to this instance.
         */
        localDiskDescription: string;
        /**
         * The number of local disks available to the instance.
         */
        localDisks: number;
        /**
         * The aggregate size of all local disks, in gigabytes.
         */
        localDisksTotalSizeInGbs: number;
        /**
         * The maximum number of VNIC attachments for the instance.
         */
        maxVnicAttachments: number;
        /**
         * (Updatable) The total amount of memory available to the instance, in gigabytes.
         */
        memoryInGbs: number;
        /**
         * The networking bandwidth available to the instance, in gigabits per second.
         */
        networkingBandwidthInGbps: number;
        /**
         * (Updatable) The number of NVMe drives to be used for storage. A single drive has 6.8 TB available.
         */
        nvmes: number;
        /**
         * (Updatable) The total number of OCPUs available to the instance.
         */
        ocpus: number;
        /**
         * A short description of the instance's processor (CPU).
         */
        processorDescription: string;
    }

    export interface InstanceSourceDetails {
        /**
         * (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
         */
        bootVolumeSizeInGbs: string;
        /**
         * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         */
        bootVolumeVpusPerGb: string;
        /**
         * The OCID of the Key Management key to assign as the master encryption key for the boot volume.
         */
        kmsKeyId: string;
        /**
         * The OCID of an image or a boot volume to use, depending on the value of `sourceType`.
         */
        sourceId: string;
        /**
         * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
         */
        sourceType: string;
    }

    export interface IpsecConnectionTunnelManagementBgpSessionInfo {
        bgpIpv6state: string;
        /**
         * the state of the BGP.
         */
        bgpState: string;
        /**
         * If the tunnel's `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this ASN is required and used for the tunnel's BGP session. This is the ASN of the network on the CPE end of the BGP session. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.
         */
        customerBgpAsn: string;
        /**
         * The IP address for the CPE end of the inside tunnel interface.
         */
        customerInterfaceIp: string;
        /**
         * This is the value of the Oracle Bgp ASN in asplain format, as a string. Example: 1587232876 (4 byte ASN) or 12345 (2 byte ASN)
         */
        oracleBgpAsn: string;
        /**
         * The IP address for the Oracle end of the inside tunnel interface.
         */
        oracleInterfaceIp: string;
    }

    export interface IpsecConnectionTunnelManagementDpdConfig {
        dpdMode?: string;
        dpdTimeoutInSec?: number;
    }

    export interface IpsecConnectionTunnelManagementEncryptionDomainConfig {
        /**
         * Lists IPv4 or IPv6-enabled subnets in your on-premises network.
         */
        cpeTrafficSelectors: string[];
        /**
         * Lists IPv4 or IPv6-enabled subnets in your Oracle tenancy.
         */
        oracleTrafficSelectors: string[];
    }

    export interface IpsecConnectionTunnelManagementPhaseOneDetail {
        customAuthenticationAlgorithm: string;
        customDhGroup: string;
        customEncryptionAlgorithm: string;
        isCustomPhaseOneConfig: boolean;
        isIkeEstablished: boolean;
        lifetime: number;
        negotiatedAuthenticationAlgorithm: string;
        negotiatedDhGroup: string;
        negotiatedEncryptionAlgorithm: string;
        remainingLifetime: string;
        remainingLifetimeLastRetrieved: string;
    }

    export interface IpsecConnectionTunnelManagementPhaseTwoDetail {
        customAuthenticationAlgorithm: string;
        customEncryptionAlgorithm: string;
        dhGroup: string;
        isCustomPhaseTwoConfig: boolean;
        isEspEstablished: boolean;
        isPfsEnabled: boolean;
        lifetime: number;
        negotiatedAuthenticationAlgorithm: string;
        negotiatedDhGroup: string;
        negotiatedEncryptionAlgorithm: string;
        remainingLifetime: string;
        remainingLifetimeLastRetrieved: string;
    }

    export interface NetworkSecurityGroupSecurityRuleIcmpOptions {
        /**
         * The ICMP code (optional).
         */
        code?: number;
        /**
         * The ICMP type.
         */
        type: number;
    }

    export interface NetworkSecurityGroupSecurityRuleTcpOptions {
        destinationPortRange?: outputs.Core.NetworkSecurityGroupSecurityRuleTcpOptionsDestinationPortRange;
        sourcePortRange?: outputs.Core.NetworkSecurityGroupSecurityRuleTcpOptionsSourcePortRange;
    }

    export interface NetworkSecurityGroupSecurityRuleTcpOptionsDestinationPortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface NetworkSecurityGroupSecurityRuleTcpOptionsSourcePortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface NetworkSecurityGroupSecurityRuleUdpOptions {
        destinationPortRange: outputs.Core.NetworkSecurityGroupSecurityRuleUdpOptionsDestinationPortRange;
        sourcePortRange: outputs.Core.NetworkSecurityGroupSecurityRuleUdpOptionsSourcePortRange;
    }

    export interface NetworkSecurityGroupSecurityRuleUdpOptionsDestinationPortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface NetworkSecurityGroupSecurityRuleUdpOptionsSourcePortRange {
        /**
         * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface RouteTableRouteRule {
        /**
         * (Updatable) Deprecated. Instead use `destination` and `destinationType`. Requests that include both `cidrBlock` and `destination` will be rejected.
         *
         * @deprecated The 'cidr_block' field has been deprecated. Please use 'destination' instead.
         */
        cidrBlock: string;
        /**
         * (Updatable) An optional description of your choice for the rule.
         */
        description: string;
        /**
         * (Updatable) Conceptually, this is the range of IP addresses used for matching when routing traffic. Required if you provide a `destinationType`.
         */
        destination: string;
        /**
         * (Updatable) Type of destination for the rule. Required if you provide a `destination`.
         * * `CIDR_BLOCK`: If the rule's `destination` is an IP address range in CIDR notation.
         * * `SERVICE_CIDR_BLOCK`: If the rule's `destination` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic destined for a particular `Service` through a service gateway).
         */
        destinationType: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the route rule's target. For information about the type of targets you can specify, see [Route Tables](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm).
         */
        networkEntityId: string;
        routeType: string;
    }

    export interface SecurityListEgressSecurityRule {
        /**
         * (Updatable) An optional description of your choice for the rule.
         */
        description: string;
        /**
         * (Updatable) Conceptually, this is the range of IP addresses that a packet originating from the instance can go to.
         */
        destination: string;
        /**
         * (Updatable) Type of destination for the rule. The default is `CIDR_BLOCK`.
         */
        destinationType: string;
        /**
         * (Updatable) Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
         * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
         * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
         */
        icmpOptions?: outputs.Core.SecurityListEgressSecurityRuleIcmpOptions;
        /**
         * (Updatable) The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
         */
        protocol: string;
        /**
         * (Updatable) A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if ingress traffic allows TCP destination port 80, there should be an egress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
         */
        stateless: boolean;
        /**
         * (Updatable) Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
         */
        tcpOptions?: outputs.Core.SecurityListEgressSecurityRuleTcpOptions;
        /**
         * (Updatable) Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
         */
        udpOptions?: outputs.Core.SecurityListEgressSecurityRuleUdpOptions;
    }

    export interface SecurityListEgressSecurityRuleIcmpOptions {
        /**
         * (Updatable) The ICMP code (optional).
         */
        code?: number;
        /**
         * (Updatable) The ICMP type.
         */
        type: number;
    }

    export interface SecurityListEgressSecurityRuleTcpOptions {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max?: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min?: number;
        /**
         * (Updatable)
         */
        sourcePortRange?: outputs.Core.SecurityListEgressSecurityRuleTcpOptionsSourcePortRange;
    }

    export interface SecurityListEgressSecurityRuleTcpOptionsSourcePortRange {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface SecurityListEgressSecurityRuleUdpOptions {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max?: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min?: number;
        /**
         * (Updatable)
         */
        sourcePortRange?: outputs.Core.SecurityListEgressSecurityRuleUdpOptionsSourcePortRange;
    }

    export interface SecurityListEgressSecurityRuleUdpOptionsSourcePortRange {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface SecurityListIngressSecurityRule {
        /**
         * (Updatable) An optional description of your choice for the rule.
         */
        description: string;
        /**
         * (Updatable) Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
         * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
         * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
         */
        icmpOptions?: outputs.Core.SecurityListIngressSecurityRuleIcmpOptions;
        /**
         * (Updatable) The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
         */
        protocol: string;
        /**
         * (Updatable) Conceptually, this is the range of IP addresses that a packet coming into the instance can come from.
         */
        source: string;
        /**
         * (Updatable) Type of source for the rule. The default is `CIDR_BLOCK`.
         * * `CIDR_BLOCK`: If the rule's `source` is an IP address range in CIDR notation.
         * * `SERVICE_CIDR_BLOCK`: If the rule's `source` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic coming from a particular `Service` through a service gateway).
         */
        sourceType: string;
        /**
         * (Updatable) A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if ingress traffic allows TCP destination port 80, there should be an egress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
         */
        stateless?: boolean;
        /**
         * (Updatable) Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
         */
        tcpOptions?: outputs.Core.SecurityListIngressSecurityRuleTcpOptions;
        /**
         * (Updatable) Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
         */
        udpOptions?: outputs.Core.SecurityListIngressSecurityRuleUdpOptions;
    }

    export interface SecurityListIngressSecurityRuleIcmpOptions {
        /**
         * (Updatable) The ICMP code (optional).
         */
        code?: number;
        /**
         * (Updatable) The ICMP type.
         */
        type: number;
    }

    export interface SecurityListIngressSecurityRuleTcpOptions {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max?: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min?: number;
        /**
         * (Updatable)
         */
        sourcePortRange?: outputs.Core.SecurityListIngressSecurityRuleTcpOptionsSourcePortRange;
    }

    export interface SecurityListIngressSecurityRuleTcpOptionsSourcePortRange {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface SecurityListIngressSecurityRuleUdpOptions {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max?: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min?: number;
        /**
         * (Updatable)
         */
        sourcePortRange?: outputs.Core.SecurityListIngressSecurityRuleUdpOptionsSourcePortRange;
    }

    export interface SecurityListIngressSecurityRuleUdpOptionsSourcePortRange {
        /**
         * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         */
        max: number;
        /**
         * (Updatable) The minimum port number, which must not be greater than the maximum port number.
         */
        min: number;
    }

    export interface ServiceGatewayService {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/).
         */
        serviceId: string;
        /**
         * The name of the service.
         */
        serviceName: string;
    }

    export interface VcnByoipv6cidrDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `ByoipRange` resource to which the CIDR block belongs.
         */
        byoipv6rangeId: string;
        /**
         * An IPv6 CIDR block required to create a VCN with a BYOIP prefix. It could be the whole CIDR block identified in `byoipv6RangeId`, or a subrange. Example: `2001:0db8:0123::/48`
         */
        ipv6cidrBlock: string;
    }

    export interface VirtualCircuitCrossConnectMapping {
        /**
         * (Updatable) The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don't use BGP MD5 authentication.
         */
        bgpMd5authKey: string;
        /**
         * (Updatable) The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
         */
        crossConnectOrCrossConnectGroupId: string;
        /**
         * (Updatable) The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider's edge router. Must use a /30 or /31 subnet mask.
         */
        customerBgpPeeringIp: string;
        /**
         * (Updatable) IPv6 is currently supported only in the Government Cloud. The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider's edge router. Only subnet masks from /64 up to /127 are allowed.
         */
        customerBgpPeeringIpv6: string;
        /**
         * (Updatable) The IPv4 address for Oracle's end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
         */
        oracleBgpPeeringIp: string;
        /**
         * (Updatable) IPv6 is currently supported only in the Government Cloud. The IPv6 address for Oracle's end of the BGP session.  Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
         */
        oracleBgpPeeringIpv6: string;
        /**
         * (Updatable) The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
         */
        vlan: number;
    }

    export interface VirtualCircuitPublicPrefix {
        /**
         * (Updatable) An individual public IP prefix (CIDR) to add to the public virtual circuit. All prefix sizes are allowed.
         */
        cidrBlock: string;
    }

    export interface VirtualNetworkByoipv6cidrDetail {
        byoipv6rangeId: string;
        ipv6cidrBlock: string;
    }

    export interface VnicAttachmentCreateVnicDetails {
        /**
         * Whether the VNIC should be assigned a DNS record. If set to false, no DNS record registion for the VNIC; if set to true, DNS record will be registered. Example: `true`
         */
        assignPrivateDnsRecord?: boolean;
        /**
         * Whether the VNIC should be assigned a public IP address. Defaults to whether the subnet is public or private. If not set and the VNIC is being created in a private subnet (that is, where `prohibitPublicIpOnVnic` = true in the [Subnet](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Subnet/)), then no public IP address is assigned. If not set and the subnet is public (`prohibitPublicIpOnVnic` = false), then a public IP address is assigned. If set to true and `prohibitPublicIpOnVnic` = true, an error is returned.
         */
        assignPublicIp?: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * (Updatable) The hostname for the VNIC's primary private IP. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be unique across all VNICs in the subnet and comply with [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). The value appears in the [Vnic](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vnic/) object and also the [PrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/) object returned by [ListPrivateIps](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/ListPrivateIps) and [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/GetPrivateIp).
         */
        hostnameLabel: string;
        /**
         * (Updatable) A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
         */
        nsgIds?: string[];
        /**
         * A private IP address of your choice to assign to the VNIC. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This is the VNIC's *primary* private IP address. The value appears in the [Vnic](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vnic/) object and also the [PrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/) object returned by [ListPrivateIps](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/ListPrivateIps) and [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/GetPrivateIp).
         */
        privateIp: string;
        /**
         * (Updatable) Whether the source/destination check is disabled on the VNIC. Defaults to `false`, which means the check is performed. For information about why you would skip the source/destination check, see [Using a Private IP as a Route Target](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm#privateip).
         */
        skipSourceDestCheck: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create the VNIC in. When launching an instance, use this `subnetId` instead of the deprecated `subnetId` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/requests/LaunchInstanceDetails). At least one of them is required; if you provide both, the values must match.
         */
        subnetId: string;
        /**
         * Provide this attribute only if you are an Oracle Cloud VMware Solution customer and creating a secondary VNIC in a VLAN. The value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
         */
        vlanId: string;
    }

    export interface VolumeAttachmentMultipathDevice {
        /**
         * The volume's iSCSI IP address.  Example: `169.254.2.2`
         */
        ipv4: string;
        /**
         * The target volume's iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
         */
        iqn: string;
        /**
         * The volume's iSCSI port, usually port 860 or 3260.  Example: `3260`
         */
        port: number;
    }

    export interface VolumeBackupPolicySchedule {
        /**
         * (Updatable) The type of volume backup to create.
         */
        backupType: string;
        /**
         * (Updatable) The day of the month to schedule the volume backup.
         */
        dayOfMonth?: number;
        /**
         * (Updatable) The day of the week to schedule the volume backup.
         */
        dayOfWeek?: string;
        /**
         * (Updatable) The hour of the day to schedule the volume backup.
         */
        hourOfDay?: number;
        /**
         * (Updatable) The month of the year to schedule the volume backup.
         */
        month?: string;
        /**
         * (Updatable) The number of seconds that the volume backup start time should be shifted from the default interval boundaries specified by the period. The volume backup start time is the frequency start time plus the offset.
         */
        offsetSeconds?: number;
        /**
         * (Updatable) Indicates how the offset is defined. If value is `STRUCTURED`, then `hourOfDay`, `dayOfWeek`, `dayOfMonth`, and `month` fields are used and `offsetSeconds` will be ignored in requests and users should ignore its value from the responses.
         */
        offsetType?: string;
        /**
         * (Updatable) The volume backup frequency.
         */
        period: string;
        /**
         * (Updatable) How long, in seconds, to keep the volume backups created by this schedule.
         */
        retentionSeconds: number;
        /**
         * (Updatable) Specifies what time zone is the schedule in
         * enum:
         * - `UTC`
         * - `REGIONAL_DATA_CENTER_TIME`
         */
        timeZone: string;
    }

    export interface VolumeBackupSourceDetails {
        /**
         * The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
         */
        kmsKeyId?: string;
        /**
         * The region of the volume backup source.
         */
        region: string;
        /**
         * The OCID of the source volume backup.
         */
        volumeBackupId: string;
    }

    export interface VolumeBlockVolumeReplica {
        /**
         * (Updatable) The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The block volume replica's Oracle ID (OCID).
         */
        blockVolumeReplicaId: string;
        /**
         * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface VolumeGroupBackupSourceDetails {
        /**
         * The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
         */
        kmsKeyId?: string;
        /**
         * The region of the volume backup source.
         */
        region: string;
        /**
         * The OCID of the source volume group backup.
         */
        volumeGroupBackupId: string;
    }

    export interface VolumeGroupSourceDetails {
        /**
         * The type can be one of these values: `volumeGroupBackupId`, `volumeGroupId`, `volumeGroupReplicaId`, `volumeIds`
         */
        type: string;
        /**
         * The OCID of the volume group backup to restore from.
         */
        volumeGroupBackupId?: string;
        /**
         * The OCID of the volume group to clone from.
         */
        volumeGroupId?: string;
        /**
         * The OCID of the volume group replica.
         */
        volumeGroupReplicaId?: string;
        /**
         * OCIDs for the volumes in this volume group.
         */
        volumeIds?: string[];
    }

    export interface VolumeGroupVolumeGroupReplica {
        /**
         * (Updatable) The availability domain of the volume group replica.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The OCID of the volume group replica.
         */
        volumeGroupReplicaId: string;
    }

    export interface VolumeSourceDetails {
        /**
         * The OCID of the block volume replica.
         */
        id: string;
        /**
         * The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
         */
        type: string;
    }

}

export namespace DataCatalog {
    export interface GetCatalogPrivateEndpointsCatalogPrivateEndpoint {
        /**
         * The list of catalogs using the private reverse connection endpoint
         */
        attachedCatalogs: string[];
        /**
         * The OCID of the compartment where you want to list resources.
         */
        compartmentId: string;
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * List of DNS zones to be used by the data assets to be harvested. Example: custpvtsubnet.oraclevcn.com for data asset: db.custpvtsubnet.oraclevcn.com
         */
        dnsZones: string[];
        /**
         * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier that is immutable
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in 'Failed' state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * Subnet Identifier
         */
        subnetId: string;
        /**
         * The time the private endpoint was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the private endpoint was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetCatalogPrivateEndpointsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCatalogTypesFilter {
        /**
         * Immutable resource name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCatalogTypesTypeCollection {
        count: number;
        items: outputs.DataCatalog.GetCatalogTypesTypeCollectionItem[];
    }

    export interface GetCatalogTypesTypeCollectionItem {
        /**
         * Unique catalog identifier.
         */
        catalogId: string;
        /**
         * Detailed description of the type.
         */
        description: string;
        /**
         * Unique type key that is immutable.
         */
        key: string;
        /**
         * Immutable resource name.
         */
        name: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * Indicates the category of this type . For example, data assets or connections.
         */
        typeCategory: string;
        /**
         * URI to the type instance in the API.
         */
        uri: string;
    }

    export interface GetCatalogsCatalog {
        /**
         * The list of private reverse connection endpoints attached to the catalog
         */
        attachedCatalogPrivateEndpoints: string[];
        /**
         * The OCID of the compartment where you want to list resources.
         */
        compartmentId: string;
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier that is immutable on creation.
         */
        id: string;
        /**
         * An message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in 'Failed' state.
         */
        lifecycleDetails: string;
        /**
         * The number of data objects added to the data catalog. Please see the data catalog documentation for further information on how this is calculated.
         */
        numberOfObjects: number;
        /**
         * The REST front endpoint URL to the data catalog instance.
         */
        serviceApiUrl: string;
        /**
         * The console front endpoint URL to the data catalog instance.
         */
        serviceConsoleUrl: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * The time the data catalog was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the data catalog was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetCatalogsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetConnectionsConnectionCollection {
        count: number;
        items: outputs.DataCatalog.GetConnectionsConnectionCollectionItem[];
    }

    export interface GetConnectionsConnectionCollectionItem {
        /**
         * Unique catalog identifier.
         */
        catalogId: string;
        /**
         * OCID of the user who created the resource.
         */
        createdById: string;
        /**
         * Unique data asset key.
         */
        dataAssetKey: string;
        /**
         * A description of the connection.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        encProperties?: {[key: string]: any};
        /**
         * Unique external identifier of this resource in the external source system.
         */
        externalKey: string;
        /**
         * Indicates whether this connection is the default connection.
         */
        isDefault: boolean;
        /**
         * Unique connection key that is immutable.
         */
        key: string;
        /**
         * A map of maps that contains the properties which are specific to the connection type. Each connection type definition defines it's set of required and optional properties. The map keys are category names and the values are maps of property name to property value. Every property is contained inside of a category. Most connections have required properties within the "default" category. Example: `{"properties": { "default": { "username": "user1"}}}`
         */
        properties: {[key: string]: any};
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeCreated: string;
        /**
         * Time that the resource's status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeStatusUpdated: string;
        /**
         * Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeUpdated: string;
        /**
         * The key of the object type. Type key's can be found via the '/types' endpoint.
         */
        typeKey: string;
        /**
         * OCID of the user who updated the resource.
         */
        updatedById: string;
        /**
         * URI to the connection instance in the API.
         */
        uri: string;
    }

    export interface GetConnectionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDataAssetsDataAssetCollection {
        count: number;
        items: outputs.DataCatalog.GetDataAssetsDataAssetCollectionItem[];
    }

    export interface GetDataAssetsDataAssetCollectionItem {
        /**
         * Unique catalog identifier.
         */
        catalogId: string;
        /**
         * OCID of the user who created the resource.
         */
        createdById: string;
        /**
         * Detailed description of the data asset.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Unique external identifier of this resource in the external source system.
         */
        externalKey: string;
        /**
         * Unique data asset key that is immutable.
         */
        key: string;
        /**
         * A map of maps that contains the properties which are specific to the asset type. Each data asset type definition defines it's set of required and optional properties. The map keys are category names and the values are maps of property name to property value. Every property is contained inside of a category. Most data assets have required properties within the "default" category. Example: `{"properties": { "default": { "host": "host1", "port": "1521", "database": "orcl"}}}`
         */
        properties: {[key: string]: any};
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeCreated: string;
        /**
         * The last time that a harvest was performed on the data asset. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeHarvested: string;
        /**
         * Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeUpdated: string;
        /**
         * The key of the object type.
         */
        typeKey: string;
        /**
         * OCID of the user who updated the resource.
         */
        updatedById: string;
        /**
         * URI to the data asset instance in the API.
         */
        uri: string;
    }

    export interface GetDataAssetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMetastoresFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMetastoresMetastore {
        /**
         * The OCID of the compartment where you want to list resources.
         */
        compartmentId: string;
        /**
         * Location under which external tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
         */
        defaultExternalTableLocation: string;
        /**
         * Location under which managed tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
         */
        defaultManagedTableLocation: string;
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The metastore's OCID.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         */
        state: string;
        /**
         * Time at which the metastore was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeCreated: string;
        /**
         * Time at which the metastore was last modified. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         */
        timeUpdated: string;
    }

}

export namespace DataConnectivity {
    export interface GetRegistriesFilter {
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRegistriesRegistrySummaryCollection {
        items: outputs.DataConnectivity.GetRegistriesRegistrySummaryCollectionItem[];
    }

    export interface GetRegistriesRegistrySummaryCollectionItem {
        /**
         * The OCID of the compartment containing the resources you want to list.
         */
        compartmentId: string;
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Registry description
         */
        description: string;
        /**
         * Data Connectivity Management Registry display name, registries can be renamed
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier that is immutable on creation
         */
        id: string;
        /**
         * Lifecycle state of the resource.
         */
        state: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        stateMessage: string;
        /**
         * The time the Data Connectivity Management Registry was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the Data Connectivity Management Registry was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
        /**
         * Name of the user who updated the DCMS Registry.
         */
        updatedBy: string;
    }

    export interface GetRegistryConnectionConnectionProperty {
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The value for the connection name property.
         */
        value: string;
    }

    export interface GetRegistryConnectionMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregators: outputs.DataConnectivity.GetRegistryConnectionMetadataAggregator[];
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryConnectionMetadataAggregator {
        /**
         * The description of the aggregator.
         */
        description: string;
        /**
         * The identifier of the aggregator.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * Specific Connection Type
         */
        type: string;
    }

    export interface GetRegistryConnectionPrimarySchema {
        /**
         * The default connection key.
         */
        defaultConnection: string;
        /**
         * The description of the aggregator.
         */
        description: string;
        /**
         * The external key for the object.
         */
        externalKey: string;
        /**
         * The identifier of the aggregator.
         */
        identifier: string;
        /**
         * Specifies whether the schema has containers.
         */
        isHasContainers: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadatas: outputs.DataConnectivity.GetRegistryConnectionPrimarySchemaMetadata[];
        /**
         * The object's type.
         */
        modelType: string;
        /**
         * The object's model version.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentReves: outputs.DataConnectivity.GetRegistryConnectionPrimarySchemaParentRef[];
        /**
         * A resource name can have letters, numbers, and special characters. The value is editable and is restricted to 4000 characters.
         */
        resourceName: string;
    }

    export interface GetRegistryConnectionPrimarySchemaMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregators: outputs.DataConnectivity.GetRegistryConnectionPrimarySchemaMetadataAggregator[];
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryConnectionPrimarySchemaMetadataAggregator {
        /**
         * The description of the aggregator.
         */
        description: string;
        /**
         * The identifier of the aggregator.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * Specific Connection Type
         */
        type: string;
    }

    export interface GetRegistryConnectionPrimarySchemaParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryConnectionRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryConnectionsConnectionSummaryCollection {
        items: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollectionItem[];
    }

    export interface GetRegistryConnectionsConnectionSummaryCollectionItem {
        /**
         * The properties for the connection.
         */
        connectionProperties: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollectionItemConnectionProperty[];
        /**
         * The description of the aggregator.
         */
        description: string;
        /**
         * The identifier of the aggregator.
         */
        identifier: string;
        /**
         * The default property for the connection.
         */
        isDefault: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollectionItemMetadata;
        /**
         * The object's type.
         */
        modelType: string;
        /**
         * The object's model version.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * The schema object.
         */
        primarySchema: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchema;
        /**
         * All the properties for the connection in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * The registry Ocid.
         */
        registryId: string;
        /**
         * Information about the object and its parent.
         */
        registryMetadata: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollectionItemRegistryMetadata;
        /**
         * Type of the object to filter the results with.
         */
        type: string;
    }

    export interface GetRegistryConnectionsConnectionSummaryCollectionItemConnectionProperty {
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The value for the connection name property.
         */
        value: string;
    }

    export interface GetRegistryConnectionsConnectionSummaryCollectionItemMetadata {
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollectionItemMetadataAggregator;
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryConnectionsConnectionSummaryCollectionItemMetadataAggregator {
        /**
         * The description of the aggregator.
         */
        description: string;
        /**
         * The identifier of the aggregator.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * Type of the object to filter the results with.
         */
        type: string;
    }

    export interface GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchema {
        /**
         * The default connection key.
         */
        defaultConnection: string;
        /**
         * The description of the aggregator.
         */
        description: string;
        /**
         * The external key for the object.
         */
        externalKey: string;
        /**
         * The identifier of the aggregator.
         */
        identifier: string;
        /**
         * Specifies whether the schema has containers.
         */
        isHasContainers: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchemaMetadata;
        /**
         * The object's type.
         */
        modelType: string;
        /**
         * The object's model version.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchemaParentRef;
        /**
         * A resource name can have letters, numbers, and special characters. The value is editable and is restricted to 4000 characters.
         */
        resourceName: string;
    }

    export interface GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchemaMetadata {
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchemaMetadataAggregator;
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchemaMetadataAggregator {
        /**
         * The description of the aggregator.
         */
        description: string;
        /**
         * The identifier of the aggregator.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * Type of the object to filter the results with.
         */
        type: string;
    }

    export interface GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchemaParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryConnectionsConnectionSummaryCollectionItemRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryConnectionsFilter {
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRegistryDataAssetDefaultConnection {
        /**
         * The properties for the connection.
         */
        connectionProperties: outputs.DataConnectivity.GetRegistryDataAssetDefaultConnectionConnectionProperty[];
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The default property for the connection.
         */
        isDefault: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadatas: outputs.DataConnectivity.GetRegistryDataAssetDefaultConnectionMetadata[];
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * The schema object.
         */
        primarySchemas: outputs.DataConnectivity.GetRegistryDataAssetDefaultConnectionPrimarySchema[];
        /**
         * All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * Information about the object and its parent.
         */
        registryMetadatas: outputs.DataConnectivity.GetRegistryDataAssetDefaultConnectionRegistryMetadata[];
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryDataAssetDefaultConnectionConnectionProperty {
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The value for the connection name property.
         */
        value: string;
    }

    export interface GetRegistryDataAssetDefaultConnectionMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregators: outputs.DataConnectivity.GetRegistryDataAssetDefaultConnectionMetadataAggregator[];
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryDataAssetDefaultConnectionMetadataAggregator {
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryDataAssetDefaultConnectionPrimarySchema {
        /**
         * The default connection key.
         */
        defaultConnection: string;
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * The external key for the object.
         */
        externalKey: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Specifies whether the schema has containers.
         */
        isHasContainers: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadatas: outputs.DataConnectivity.GetRegistryDataAssetDefaultConnectionPrimarySchemaMetadata[];
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentReves: outputs.DataConnectivity.GetRegistryDataAssetDefaultConnectionPrimarySchemaParentRef[];
        /**
         * A resource name can have letters, numbers, and special characters. The value is editable and is restricted to 4000 characters.
         */
        resourceName: string;
    }

    export interface GetRegistryDataAssetDefaultConnectionPrimarySchemaMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregators: outputs.DataConnectivity.GetRegistryDataAssetDefaultConnectionPrimarySchemaMetadataAggregator[];
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryDataAssetDefaultConnectionPrimarySchemaMetadataAggregator {
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryDataAssetDefaultConnectionPrimarySchemaParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryDataAssetDefaultConnectionRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryDataAssetMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregators: outputs.DataConnectivity.GetRegistryDataAssetMetadataAggregator[];
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryDataAssetMetadataAggregator {
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryDataAssetNativeTypeSystem {
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentReves: outputs.DataConnectivity.GetRegistryDataAssetNativeTypeSystemParentRef[];
        /**
         * The type system to map from.
         */
        typeMappingFrom: {[key: string]: any};
        /**
         * The type system to map to.
         */
        typeMappingTo: {[key: string]: any};
        /**
         * An array of types.
         */
        types: outputs.DataConnectivity.GetRegistryDataAssetNativeTypeSystemType[];
    }

    export interface GetRegistryDataAssetNativeTypeSystemParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryDataAssetNativeTypeSystemType {
        /**
         * The configuration details of a configurable object. This contains one or more config param definitions.
         */
        configDefinitions: outputs.DataConnectivity.GetRegistryDataAssetNativeTypeSystemTypeConfigDefinition[];
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * The data type.
         */
        dtType: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * A reference to the object's parent.
         */
        parentReves: outputs.DataConnectivity.GetRegistryDataAssetNativeTypeSystemTypeParentRef[];
        /**
         * The data type system name.
         */
        typeSystemName: string;
    }

    export interface GetRegistryDataAssetNativeTypeSystemTypeConfigDefinition {
        /**
         * The parameter configuration details.
         */
        configParameterDefinitions: {[key: string]: any};
        /**
         * Specifies whether the configuration is contained or not.
         */
        isContained: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * A reference to the object's parent.
         */
        parentReves: outputs.DataConnectivity.GetRegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRef[];
    }

    export interface GetRegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryDataAssetNativeTypeSystemTypeParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryDataAssetRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollection {
        items: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItem[];
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItem {
        /**
         * Additional properties for the data asset.
         */
        assetProperties: {[key: string]: any};
        /**
         * The default connection key.
         */
        defaultConnection: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnection;
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * The list of endpoints with which this data asset is associated.
         */
        endPoints: string[];
        /**
         * The external key for the object.
         */
        externalKey: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemMetadata;
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The type system maps from and to a type.
         */
        nativeTypeSystem: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystem;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * The registry Ocid.
         */
        registryId: string;
        /**
         * Information about the object and its parent.
         */
        registryMetadata: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemRegistryMetadata;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnection {
        /**
         * The properties for the connection.
         */
        connectionProperties: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionConnectionProperty[];
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The default property for the connection.
         */
        isDefault: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionMetadata;
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * The schema object.
         */
        primarySchema: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionPrimarySchema;
        /**
         * All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * Information about the object and its parent.
         */
        registryMetadata: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionRegistryMetadata;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionConnectionProperty {
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The value for the connection name property.
         */
        value: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionMetadata {
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionMetadataAggregator;
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionMetadataAggregator {
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionPrimarySchema {
        /**
         * The default connection key.
         */
        defaultConnection: string;
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * The external key for the object.
         */
        externalKey: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Specifies whether the schema has containers.
         */
        isHasContainers: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionPrimarySchemaMetadata;
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionPrimarySchemaParentRef;
        /**
         * A resource name can have letters, numbers, and special characters. The value is editable and is restricted to 4000 characters.
         */
        resourceName: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionPrimarySchemaMetadata {
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionPrimarySchemaMetadataAggregator;
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionPrimarySchemaMetadataAggregator {
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionPrimarySchemaParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemDefaultConnectionRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemMetadata {
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemMetadataAggregator;
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemMetadataAggregator {
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystem {
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemParentRef;
        /**
         * The type system to map from.
         */
        typeMappingFrom: {[key: string]: any};
        /**
         * The type system to map to.
         */
        typeMappingTo: {[key: string]: any};
        /**
         * An array of types.
         */
        types: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemType[];
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemType {
        /**
         * The configuration details of a configurable object. This contains one or more config param definitions.
         */
        configDefinition: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinition;
        /**
         * A user defined description for the object.
         */
        description: string;
        /**
         * The data type.
         */
        dtType: string;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeParentRef;
        /**
         * The data type system name.
         */
        typeSystemName: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinition {
        /**
         * The parameter configuration details.
         */
        configParameterDefinitions: {[key: string]: any};
        /**
         * Specifies whether the configuration is contained or not.
         */
        isContained: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinitionParentRef;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinitionParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryDataAssetsDataAssetSummaryCollectionItemRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * The identifying key for the object.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryDataAssetsFilter {
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRegistryFolderDataAsset {
        /**
         * Additional properties for the data asset.
         */
        assetProperties: {[key: string]: any};
        /**
         * The default connection key.
         */
        defaultConnections: outputs.DataConnectivity.GetRegistryFolderDataAssetDefaultConnection[];
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * The external key for the object.
         */
        externalKey: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadatas: outputs.DataConnectivity.GetRegistryFolderDataAssetMetadata[];
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The type system maps from and to a type.
         */
        nativeTypeSystems: outputs.DataConnectivity.GetRegistryFolderDataAssetNativeTypeSystem[];
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * Information about the object and its parent.
         */
        registryMetadatas: outputs.DataConnectivity.GetRegistryFolderDataAssetRegistryMetadata[];
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryFolderDataAssetDefaultConnection {
        /**
         * The properties for the connection.
         */
        connectionProperties: outputs.DataConnectivity.GetRegistryFolderDataAssetDefaultConnectionConnectionProperty[];
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The default property for the connection.
         */
        isDefault: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadatas: outputs.DataConnectivity.GetRegistryFolderDataAssetDefaultConnectionMetadata[];
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * The schema object.
         */
        primarySchemas: outputs.DataConnectivity.GetRegistryFolderDataAssetDefaultConnectionPrimarySchema[];
        /**
         * All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * Information about the object and its parent.
         */
        registryMetadatas: outputs.DataConnectivity.GetRegistryFolderDataAssetDefaultConnectionRegistryMetadata[];
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryFolderDataAssetDefaultConnectionConnectionProperty {
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The value for the connection name property.
         */
        value: string;
    }

    export interface GetRegistryFolderDataAssetDefaultConnectionMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregators: outputs.DataConnectivity.GetRegistryFolderDataAssetDefaultConnectionMetadataAggregator[];
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryFolderDataAssetDefaultConnectionMetadataAggregator {
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryFolderDataAssetDefaultConnectionPrimarySchema {
        /**
         * The default connection key.
         */
        defaultConnection: string;
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * The external key for the object.
         */
        externalKey: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Specifies whether the schema has containers.
         */
        isHasContainers: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadatas: outputs.DataConnectivity.GetRegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadata[];
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentReves: outputs.DataConnectivity.GetRegistryFolderDataAssetDefaultConnectionPrimarySchemaParentRef[];
        /**
         * A resource name can have letters, numbers, and special characters. The value is editable and is restricted to 4000 characters.
         */
        resourceName: string;
    }

    export interface GetRegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregators: outputs.DataConnectivity.GetRegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadataAggregator[];
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadataAggregator {
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryFolderDataAssetDefaultConnectionPrimarySchemaParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryFolderDataAssetDefaultConnectionRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryFolderDataAssetMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregators: outputs.DataConnectivity.GetRegistryFolderDataAssetMetadataAggregator[];
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryFolderDataAssetMetadataAggregator {
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * Specific DataAsset Type
         */
        type: string;
    }

    export interface GetRegistryFolderDataAssetNativeTypeSystem {
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentReves: outputs.DataConnectivity.GetRegistryFolderDataAssetNativeTypeSystemParentRef[];
        /**
         * The type system to map from.
         */
        typeMappingFrom: {[key: string]: any};
        /**
         * The type system to map to.
         */
        typeMappingTo: {[key: string]: any};
        /**
         * An array of types.
         */
        types: outputs.DataConnectivity.GetRegistryFolderDataAssetNativeTypeSystemType[];
    }

    export interface GetRegistryFolderDataAssetNativeTypeSystemParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryFolderDataAssetNativeTypeSystemType {
        /**
         * The configuration details of a configurable object. This contains one or more config param definitions.
         */
        configDefinitions: outputs.DataConnectivity.GetRegistryFolderDataAssetNativeTypeSystemTypeConfigDefinition[];
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * The data type.
         */
        dtType: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * A reference to the object's parent.
         */
        parentReves: outputs.DataConnectivity.GetRegistryFolderDataAssetNativeTypeSystemTypeParentRef[];
        /**
         * The data type system name.
         */
        typeSystemName: string;
    }

    export interface GetRegistryFolderDataAssetNativeTypeSystemTypeConfigDefinition {
        /**
         * The parameter configuration details.
         */
        configParameterDefinitions: {[key: string]: any};
        /**
         * Specifies whether the configuration is contained or not.
         */
        isContained: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * A reference to the object's parent.
         */
        parentReves: outputs.DataConnectivity.GetRegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionParentRef[];
    }

    export interface GetRegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryFolderDataAssetNativeTypeSystemTypeParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryFolderDataAssetRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryFolderParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryFoldersFilter {
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRegistryFoldersFolderSummaryCollection {
        items: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItem[];
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItem {
        /**
         * List of data assets which belongs to this folder
         */
        dataAssets: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAsset[];
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemParentRef;
        /**
         * The registry Ocid.
         */
        registryId: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAsset {
        /**
         * Additional properties for the data asset.
         */
        assetProperties: {[key: string]: any};
        /**
         * The default connection key.
         */
        defaultConnection: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnection;
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * The external key for the object.
         */
        externalKey: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetMetadata;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The type system maps from and to a type.
         */
        nativeTypeSystem: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystem;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * Information about the object and its parent.
         */
        registryMetadata: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetRegistryMetadata;
        /**
         * Type of the object to filter the results with.
         */
        type: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnection {
        /**
         * The properties for the connection.
         */
        connectionProperties: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionConnectionProperty[];
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * The default property for the connection.
         */
        isDefault: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionMetadata;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * The schema object.
         */
        primarySchema: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchema;
        /**
         * All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * Information about the object and its parent.
         */
        registryMetadata: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionRegistryMetadata;
        /**
         * Type of the object to filter the results with.
         */
        type: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionConnectionProperty {
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The value for the connection name property.
         */
        value: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionMetadata {
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionMetadataAggregator;
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionMetadataAggregator {
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * Type of the object to filter the results with.
         */
        type: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchema {
        /**
         * The default connection key.
         */
        defaultConnection: string;
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * The external key for the object.
         */
        externalKey: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Specifies whether the schema has containers.
         */
        isHasContainers: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchemaMetadata;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchemaParentRef;
        /**
         * A resource name can have letters, numbers, and special characters. The value is editable and is restricted to 4000 characters.
         */
        resourceName: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchemaMetadata {
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchemaMetadataAggregator;
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchemaMetadataAggregator {
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * Type of the object to filter the results with.
         */
        type: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchemaParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetMetadata {
        /**
         * A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetMetadataAggregator;
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The user that created the object.
         */
        createdBy: string;
        /**
         * The user that created the object.
         */
        createdByName: string;
        /**
         * The full path to identify this object.
         */
        identifierPath: string;
        /**
         * Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The user that updated the object.
         */
        updatedBy: string;
        /**
         * The user that updated the object.
         */
        updatedByName: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetMetadataAggregator {
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * Type of the object to filter the results with.
         */
        type: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystem {
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemParentRef;
        /**
         * The type system to map from.
         */
        typeMappingFrom: {[key: string]: any};
        /**
         * The type system to map to.
         */
        typeMappingTo: {[key: string]: any};
        /**
         * An array of types.
         */
        types: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemType[];
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemType {
        /**
         * The configuration details of a configurable object. This contains one or more config param definitions.
         */
        configDefinition: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemTypeConfigDefinition;
        /**
         * User-defined description for the folder.
         */
        description: string;
        /**
         * The data type.
         */
        dtType: string;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemTypeParentRef;
        /**
         * The data type system name.
         */
        typeSystemName: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemTypeConfigDefinition {
        /**
         * The parameter configuration details.
         */
        configParameterDefinitions: {[key: string]: any};
        /**
         * Specifies whether the configuration is contained or not.
         */
        isContained: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * The type of the folder.
         */
        modelType: string;
        /**
         * The model version of an object.
         */
        modelVersion: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemTypeConfigDefinitionParentRef;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemTypeConfigDefinitionParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetNativeTypeSystemTypeParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemDataAssetRegistryMetadata {
        /**
         * The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * The registry version.
         */
        registryVersion: number;
        /**
         * The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface GetRegistryFoldersFolderSummaryCollectionItemParentRef {
        /**
         * Key of the parent object.
         */
        parent: string;
    }

    export interface GetRegistryTypeDataAssetAttribute {
        /**
         * Attribute type details
         */
        attributeType: string;
        /**
         * True if Attribute is encoded.
         */
        isBase64encoded: boolean;
        /**
         * True if Attribute is generated.
         */
        isGenerated: boolean;
        /**
         * True if Attribute is mandatory.
         */
        isMandatory: boolean;
        /**
         * True if Attribute is sensitive.
         */
        isSensitive: boolean;
        /**
         * The name of of the Attribute.
         */
        name: string;
        /**
         * List of valid key list
         */
        validKeyLists: string[];
    }

    export interface GetRegistryTypesFilter {
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRegistryTypesTypesSummaryCollection {
        items: outputs.DataConnectivity.GetRegistryTypesTypesSummaryCollectionItem[];
    }

    export interface GetRegistryTypesTypesSummaryCollectionItem {
        /**
         * Map of connectionType as key and List of attributes as value
         */
        connectionAttributes: {[key: string]: any};
        /**
         * list of attributes for the dataAsset
         */
        dataAssetAttributes: outputs.DataConnectivity.GetRegistryTypesTypesSummaryCollectionItemDataAssetAttribute[];
        description?: string;
        key: string;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
    }

    export interface GetRegistryTypesTypesSummaryCollectionItemDataAssetAttribute {
        /**
         * Attribute type details
         */
        attributeType: string;
        /**
         * True if Attribute is encoded.
         */
        isBase64encoded: boolean;
        /**
         * True if Attribute is generated.
         */
        isGenerated: boolean;
        /**
         * True if Attribute is mandatory.
         */
        isMandatory: boolean;
        /**
         * True if Attribute is sensitive.
         */
        isSensitive: boolean;
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        /**
         * List of valid key list
         */
        validKeyLists: string[];
    }

    export interface RegistryConnectionConnectionProperty {
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The value for the connection name property.
         */
        value: string;
    }

    export interface RegistryConnectionMetadata {
        /**
         * (Updatable) A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.RegistryConnectionMetadataAggregator;
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdBy: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdByName: string;
        /**
         * (Updatable) The full path to identify this object.
         */
        identifierPath: string;
        /**
         * (Updatable) Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedBy: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedByName: string;
    }

    export interface RegistryConnectionMetadataAggregator {
        /**
         * (Updatable) The description of the aggregator.
         */
        description: string;
        /**
         * (Updatable) The identifier of the aggregator.
         */
        identifier: string;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) Specific Connection Type
         */
        type: string;
    }

    export interface RegistryConnectionPrimarySchema {
        /**
         * (Updatable) The default connection key.
         */
        defaultConnection: string;
        /**
         * (Updatable) The description of the aggregator.
         */
        description: string;
        /**
         * (Updatable) The external key for the object.
         */
        externalKey: string;
        /**
         * (Updatable) The identifier of the aggregator.
         */
        identifier: string;
        /**
         * (Updatable) Specifies whether the schema has containers.
         */
        isHasContainers: boolean;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.RegistryConnectionPrimarySchemaMetadata;
        /**
         * (Updatable) The object's type.
         */
        modelType: string;
        /**
         * (Updatable) The object's model version.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * (Updatable) A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.RegistryConnectionPrimarySchemaParentRef;
        /**
         * (Updatable) A resource name can have letters, numbers, and special characters. The value is editable and is restricted to 4000 characters.
         */
        resourceName: string;
    }

    export interface RegistryConnectionPrimarySchemaMetadata {
        /**
         * (Updatable) A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.RegistryConnectionPrimarySchemaMetadataAggregator;
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdBy: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdByName: string;
        /**
         * (Updatable) The full path to identify this object.
         */
        identifierPath: string;
        /**
         * (Updatable) Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedBy: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedByName: string;
    }

    export interface RegistryConnectionPrimarySchemaMetadataAggregator {
        /**
         * (Updatable) The description of the aggregator.
         */
        description: string;
        /**
         * (Updatable) The identifier of the aggregator.
         */
        identifier: string;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) Specific Connection Type
         */
        type: string;
    }

    export interface RegistryConnectionPrimarySchemaParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }

    export interface RegistryConnectionRegistryMetadata {
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * (Updatable) The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * (Updatable) The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface RegistryDataAssetDefaultConnection {
        /**
         * (Updatable) The properties for the connection.
         */
        connectionProperties: outputs.DataConnectivity.RegistryDataAssetDefaultConnectionConnectionProperty[];
        /**
         * (Updatable) A user defined description for the object.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) The default property for the connection.
         */
        isDefault: boolean;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.RegistryDataAssetDefaultConnectionMetadata;
        /**
         * (Updatable) The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * (Updatable) The schema object.
         */
        primarySchema: outputs.DataConnectivity.RegistryDataAssetDefaultConnectionPrimarySchema;
        /**
         * (Updatable) All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * (Updatable) Information about the object and its parent.
         */
        registryMetadata: outputs.DataConnectivity.RegistryDataAssetDefaultConnectionRegistryMetadata;
        /**
         * (Updatable) Specific DataAsset Type
         */
        type: string;
    }

    export interface RegistryDataAssetDefaultConnectionConnectionProperty {
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The value for the connection name property.
         */
        value: string;
    }

    export interface RegistryDataAssetDefaultConnectionMetadata {
        /**
         * (Updatable) A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.RegistryDataAssetDefaultConnectionMetadataAggregator;
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdBy: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdByName: string;
        /**
         * (Updatable) The full path to identify this object.
         */
        identifierPath: string;
        /**
         * (Updatable) Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedBy: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedByName: string;
    }

    export interface RegistryDataAssetDefaultConnectionMetadataAggregator {
        /**
         * (Updatable) A user defined description for the object.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) Specific DataAsset Type
         */
        type: string;
    }

    export interface RegistryDataAssetDefaultConnectionPrimarySchema {
        /**
         * (Updatable) The default connection key.
         */
        defaultConnection: string;
        /**
         * (Updatable) A user defined description for the object.
         */
        description: string;
        /**
         * (Updatable) The external key for the object.
         */
        externalKey: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) Specifies whether the schema has containers.
         */
        isHasContainers: boolean;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.RegistryDataAssetDefaultConnectionPrimarySchemaMetadata;
        /**
         * (Updatable) The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * (Updatable) A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.RegistryDataAssetDefaultConnectionPrimarySchemaParentRef;
        /**
         * (Updatable) A resource name can have letters, numbers, and special characters. The value is editable and is restricted to 4000 characters.
         */
        resourceName: string;
    }

    export interface RegistryDataAssetDefaultConnectionPrimarySchemaMetadata {
        /**
         * (Updatable) A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.RegistryDataAssetDefaultConnectionPrimarySchemaMetadataAggregator;
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdBy: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdByName: string;
        /**
         * (Updatable) The full path to identify this object.
         */
        identifierPath: string;
        /**
         * (Updatable) Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedBy: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedByName: string;
    }

    export interface RegistryDataAssetDefaultConnectionPrimarySchemaMetadataAggregator {
        /**
         * (Updatable) A user defined description for the object.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) Specific DataAsset Type
         */
        type: string;
    }

    export interface RegistryDataAssetDefaultConnectionPrimarySchemaParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }

    export interface RegistryDataAssetDefaultConnectionRegistryMetadata {
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * (Updatable) The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * (Updatable) The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface RegistryDataAssetMetadata {
        /**
         * (Updatable) A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.RegistryDataAssetMetadataAggregator;
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdBy: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdByName: string;
        /**
         * (Updatable) The full path to identify this object.
         */
        identifierPath: string;
        /**
         * (Updatable) Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedBy: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedByName: string;
    }

    export interface RegistryDataAssetMetadataAggregator {
        /**
         * (Updatable) A user defined description for the object.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) Specific DataAsset Type
         */
        type: string;
    }

    export interface RegistryDataAssetNativeTypeSystem {
        /**
         * (Updatable) A user defined description for the object.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * (Updatable) A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.RegistryDataAssetNativeTypeSystemParentRef;
        /**
         * (Updatable) The type system to map from.
         */
        typeMappingFrom: {[key: string]: any};
        /**
         * (Updatable) The type system to map to.
         */
        typeMappingTo: {[key: string]: any};
        /**
         * (Updatable) An array of types.
         */
        types: outputs.DataConnectivity.RegistryDataAssetNativeTypeSystemType[];
    }

    export interface RegistryDataAssetNativeTypeSystemParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }

    export interface RegistryDataAssetNativeTypeSystemType {
        /**
         * (Updatable) The configuration details of a configurable object. This contains one or more config param definitions.
         */
        configDefinition: outputs.DataConnectivity.RegistryDataAssetNativeTypeSystemTypeConfigDefinition;
        /**
         * (Updatable) A user defined description for the object.
         */
        description: string;
        /**
         * (Updatable) The data type.
         */
        dtType: string;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.RegistryDataAssetNativeTypeSystemTypeParentRef;
        /**
         * (Updatable) The data type system name.
         */
        typeSystemName: string;
    }

    export interface RegistryDataAssetNativeTypeSystemTypeConfigDefinition {
        /**
         * (Updatable) The parameter configuration details.
         */
        configParameterDefinitions: {[key: string]: any};
        /**
         * (Updatable) Specifies whether the configuration is contained or not.
         */
        isContained: boolean;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) The property which disciminates the subtypes.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.RegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRef;
    }

    export interface RegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }

    export interface RegistryDataAssetNativeTypeSystemTypeParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }

    export interface RegistryDataAssetRegistryMetadata {
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * (Updatable) The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) The identifying key for the object.
         */
        key: string;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * (Updatable) The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface RegistryFolderDataAsset {
        /**
         * (Updatable) Additional properties for the data asset.
         */
        assetProperties: {[key: string]: any};
        /**
         * (Updatable) The default connection key.
         */
        defaultConnection: outputs.DataConnectivity.RegistryFolderDataAssetDefaultConnection;
        /**
         * (Updatable) User-defined description for the folder.
         */
        description: string;
        /**
         * (Updatable) The external key for the object.
         */
        externalKey: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.RegistryFolderDataAssetMetadata;
        /**
         * (Updatable) The type of the folder.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The type system maps from and to a type.
         */
        nativeTypeSystem: outputs.DataConnectivity.RegistryFolderDataAssetNativeTypeSystem;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * (Updatable) All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * (Updatable) Information about the object and its parent.
         */
        registryMetadata: outputs.DataConnectivity.RegistryFolderDataAssetRegistryMetadata;
        /**
         * (Updatable) Specific DataAsset Type
         */
        type: string;
    }

    export interface RegistryFolderDataAssetDefaultConnection {
        /**
         * (Updatable) The properties for the connection.
         */
        connectionProperties: outputs.DataConnectivity.RegistryFolderDataAssetDefaultConnectionConnectionProperty[];
        /**
         * (Updatable) User-defined description for the folder.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) The default property for the connection.
         */
        isDefault: boolean;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.RegistryFolderDataAssetDefaultConnectionMetadata;
        /**
         * (Updatable) The type of the folder.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * (Updatable) The schema object.
         */
        primarySchema: outputs.DataConnectivity.RegistryFolderDataAssetDefaultConnectionPrimarySchema;
        /**
         * (Updatable) All the properties for the data asset in a key-value map format.
         */
        properties: {[key: string]: any};
        /**
         * (Updatable) Information about the object and its parent.
         */
        registryMetadata: outputs.DataConnectivity.RegistryFolderDataAssetDefaultConnectionRegistryMetadata;
        /**
         * (Updatable) Specific DataAsset Type
         */
        type: string;
    }

    export interface RegistryFolderDataAssetDefaultConnectionConnectionProperty {
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The value for the connection name property.
         */
        value: string;
    }

    export interface RegistryFolderDataAssetDefaultConnectionMetadata {
        /**
         * (Updatable) A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.RegistryFolderDataAssetDefaultConnectionMetadataAggregator;
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdBy: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdByName: string;
        /**
         * (Updatable) The full path to identify this object.
         */
        identifierPath: string;
        /**
         * (Updatable) Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedBy: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedByName: string;
    }

    export interface RegistryFolderDataAssetDefaultConnectionMetadataAggregator {
        /**
         * (Updatable) User-defined description for the folder.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) Specific DataAsset Type
         */
        type: string;
    }

    export interface RegistryFolderDataAssetDefaultConnectionPrimarySchema {
        /**
         * (Updatable) The default connection key.
         */
        defaultConnection: string;
        /**
         * (Updatable) User-defined description for the folder.
         */
        description: string;
        /**
         * (Updatable) The external key for the object.
         */
        externalKey: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) Specifies whether the schema has containers.
         */
        isHasContainers: boolean;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
         */
        metadata: outputs.DataConnectivity.RegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadata;
        /**
         * (Updatable) The type of the folder.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * (Updatable) A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.RegistryFolderDataAssetDefaultConnectionPrimarySchemaParentRef;
        /**
         * (Updatable) A resource name can have letters, numbers, and special characters. The value is editable and is restricted to 4000 characters.
         */
        resourceName: string;
    }

    export interface RegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadata {
        /**
         * (Updatable) A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.RegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadataAggregator;
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdBy: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdByName: string;
        /**
         * (Updatable) The full path to identify this object.
         */
        identifierPath: string;
        /**
         * (Updatable) Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedBy: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedByName: string;
    }

    export interface RegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadataAggregator {
        /**
         * (Updatable) User-defined description for the folder.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) Specific DataAsset Type
         */
        type: string;
    }

    export interface RegistryFolderDataAssetDefaultConnectionPrimarySchemaParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }

    export interface RegistryFolderDataAssetDefaultConnectionRegistryMetadata {
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * (Updatable) The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * (Updatable) The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface RegistryFolderDataAssetMetadata {
        /**
         * (Updatable) A summary type containing information about the object's aggregator including its type, key, name and description.
         */
        aggregator: outputs.DataConnectivity.RegistryFolderDataAssetMetadataAggregator;
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdBy: string;
        /**
         * (Updatable) The user that created the object.
         */
        createdByName: string;
        /**
         * (Updatable) The full path to identify this object.
         */
        identifierPath: string;
        /**
         * (Updatable) Information property fields.
         */
        infoFields: {[key: string]: any};
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedBy: string;
        /**
         * (Updatable) The user that updated the object.
         */
        updatedByName: string;
    }

    export interface RegistryFolderDataAssetMetadataAggregator {
        /**
         * (Updatable) User-defined description for the folder.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) Specific DataAsset Type
         */
        type: string;
    }

    export interface RegistryFolderDataAssetNativeTypeSystem {
        /**
         * (Updatable) User-defined description for the folder.
         */
        description: string;
        /**
         * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         */
        identifier: string;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) The type of the folder.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) The version of the object that is used to track changes in the object instance.
         */
        objectVersion: number;
        /**
         * (Updatable) A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.RegistryFolderDataAssetNativeTypeSystemParentRef;
        /**
         * (Updatable) The type system to map from.
         */
        typeMappingFrom: {[key: string]: any};
        /**
         * (Updatable) The type system to map to.
         */
        typeMappingTo: {[key: string]: any};
        /**
         * (Updatable) An array of types.
         */
        types: outputs.DataConnectivity.RegistryFolderDataAssetNativeTypeSystemType[];
    }

    export interface RegistryFolderDataAssetNativeTypeSystemParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }

    export interface RegistryFolderDataAssetNativeTypeSystemType {
        /**
         * (Updatable) The configuration details of a configurable object. This contains one or more config param definitions.
         */
        configDefinition: outputs.DataConnectivity.RegistryFolderDataAssetNativeTypeSystemTypeConfigDefinition;
        /**
         * (Updatable) User-defined description for the folder.
         */
        description: string;
        /**
         * (Updatable) The data type.
         */
        dtType: string;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) The type of the folder.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.RegistryFolderDataAssetNativeTypeSystemTypeParentRef;
        /**
         * (Updatable) The data type system name.
         */
        typeSystemName: string;
    }

    export interface RegistryFolderDataAssetNativeTypeSystemTypeConfigDefinition {
        /**
         * (Updatable) The parameter configuration details.
         */
        configParameterDefinitions: {[key: string]: any};
        /**
         * (Updatable) Specifies whether the configuration is contained or not.
         */
        isContained: boolean;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) The type of the folder.
         */
        modelType: string;
        /**
         * (Updatable) The model version of an object.
         */
        modelVersion: string;
        /**
         * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         */
        name: string;
        /**
         * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         */
        objectStatus: number;
        /**
         * (Updatable) A reference to the object's parent.
         */
        parentRef: outputs.DataConnectivity.RegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionParentRef;
    }

    export interface RegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }

    export interface RegistryFolderDataAssetNativeTypeSystemTypeParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }

    export interface RegistryFolderDataAssetRegistryMetadata {
        /**
         * (Updatable) The owning object's key for this object.
         */
        aggregatorKey: string;
        /**
         * (Updatable) The id of the user who created the object.
         */
        createdByUserId: string;
        /**
         * (Updatable) The name of the user who created the object.
         */
        createdByUserName: string;
        /**
         * (Updatable) Specifies whether this object is a favorite or not.
         */
        isFavorite: boolean;
        /**
         * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
         */
        key: string;
        /**
         * (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
         */
        labels: string[];
        /**
         * (Updatable) The registry version.
         */
        registryVersion: number;
        /**
         * (Updatable) The date and time that the object was created.
         */
        timeCreated: string;
        /**
         * (Updatable) The date and time that the object was updated.
         */
        timeUpdated: string;
        /**
         * (Updatable) The id of the user who updated the object.
         */
        updatedByUserId: string;
        /**
         * (Updatable) The name of the user who updated the object.
         */
        updatedByUserName: string;
    }

    export interface RegistryFolderParentRef {
        /**
         * (Updatable) Key of the parent object.
         */
        parent: string;
    }
}

export namespace DataFlow {
    export interface ApplicationApplicationLogConfig {
        /**
         * (Updatable) The log group id for where log objects will be for Data Flow Runs.
         */
        logGroupId: string;
        /**
         * (Updatable) The log id of the log object the Application Logs of Data Flow Run will be shipped to.
         */
        logId: string;
    }

    export interface ApplicationDriverShapeConfig {
        /**
         * (Updatable) The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * (Updatable) The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface ApplicationExecutorShapeConfig {
        /**
         * (Updatable) The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * (Updatable) The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface ApplicationParameter {
        /**
         * (Updatable) The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
         */
        name: string;
        /**
         * (Updatable) The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
         */
        value: string;
    }

    export interface GetApplicationApplicationLogConfig {
        /**
         * The log group id for where log objects will be for Data Flow Runs.
         */
        logGroupId: string;
        /**
         * The log id of the log object the Application Logs of Data Flow Run will be shipped to.
         */
        logId: string;
    }

    export interface GetApplicationDriverShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetApplicationExecutorShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetApplicationParameter {
        /**
         * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
         */
        name: string;
        /**
         * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
         */
        value: string;
    }

    export interface GetApplicationsApplication {
        /**
         * Logging details of Application logs for Data Flow Run.
         */
        applicationLogConfigs: outputs.DataFlow.GetApplicationsApplicationApplicationLogConfig[];
        /**
         * An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         */
        archiveUri: string;
        /**
         * The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ "--input", "${input_file}", "--name", "John Doe" ]` If "inputFile" has a value of "mydata.xml", then the value above will be translated to `--input mydata.xml --name "John Doe"`
         */
        arguments: string[];
        /**
         * The class for the application.
         */
        className: string;
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
         */
        configuration: {[key: string]: any};
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly description.
         */
        description: string;
        /**
         * The query parameter for the Spark application name.
         */
        displayName: string;
        /**
         * The VM shape for the driver. Sets the driver cores and memory.
         */
        driverShape: string;
        /**
         * This is used to configure the shape of the driver or executor if a flexible shape is used.
         */
        driverShapeConfigs: outputs.DataFlow.GetApplicationsApplicationDriverShapeConfig[];
        /**
         * The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
         */
        execute: string;
        /**
         * The VM shape for the executors. Sets the executor cores and memory.
         */
        executorShape: string;
        /**
         * This is used to configure the shape of the driver or executor if a flexible shape is used.
         */
        executorShapeConfigs: outputs.DataFlow.GetApplicationsApplicationExecutorShapeConfig[];
        /**
         * An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         */
        fileUri: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The application ID.
         */
        id: string;
        /**
         * The Spark language.
         */
        language: string;
        /**
         * An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         */
        logsBucketUri: string;
        /**
         * The OCID of Oracle Cloud Infrastructure Hive Metastore.
         */
        metastoreId: string;
        /**
         * The number of executor VMs requested.
         */
        numExecutors: number;
        /**
         * The OCID of the user who created the resource.
         */
        ownerPrincipalId: string;
        /**
         * The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
         */
        ownerUserName: string;
        /**
         * An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: "iterations", value: "10"}, { name: "inputFile", value: "mydata.xml" }, { name: "variableX", value: "${x}"} ]
         */
        parameters: outputs.DataFlow.GetApplicationsApplicationParameter[];
        /**
         * The OCID of a private endpoint.
         */
        privateEndpointId: string;
        /**
         * The Spark version utilized to run the application.
         */
        sparkVersion: string;
        /**
         * The current state of this application.
         */
        state: string;
        /**
         * The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time a application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
         */
        timeUpdated: string;
        /**
         * The Spark application processing type.
         */
        type: string;
        /**
         * An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         */
        warehouseBucketUri: string;
    }

    export interface GetApplicationsApplicationApplicationLogConfig {
        /**
         * The log group id for where log objects will be for Data Flow Runs.
         */
        logGroupId: string;
        /**
         * The log id of the log object the Application Logs of Data Flow Run will be shipped to.
         */
        logId: string;
    }

    export interface GetApplicationsApplicationDriverShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetApplicationsApplicationExecutorShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetApplicationsApplicationParameter {
        /**
         * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
         */
        name: string;
        /**
         * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
         */
        value: string;
    }

    export interface GetApplicationsFilter {
        /**
         * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInvokeRunApplicationLogConfig {
        /**
         * The log group id for where log objects will be for Data Flow Runs.
         */
        logGroupId: string;
        /**
         * The log id of the log object the Application Logs of Data Flow Run will be shipped to.
         */
        logId: string;
    }

    export interface GetInvokeRunDriverShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetInvokeRunExecutorShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetInvokeRunParameter {
        /**
         * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
         */
        name: string;
        /**
         * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
         */
        value: string;
    }

    export interface GetInvokeRunsFilter {
        /**
         * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInvokeRunsRun {
        /**
         * The ID of the application.
         */
        applicationId: string;
        /**
         * Logging details of Application logs for Data Flow Run.
         */
        applicationLogConfigs: outputs.DataFlow.GetInvokeRunsRunApplicationLogConfig[];
        /**
         * An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         */
        archiveUri: string;
        /**
         * The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ "--input", "${input_file}", "--name", "John Doe" ]` If "inputFile" has a value of "mydata.xml", then the value above will be translated to `--input mydata.xml --name "John Doe"`
         */
        arguments: string[];
        asynchronous: boolean;
        /**
         * The class for the application.
         */
        className: string;
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
         */
        configuration: {[key: string]: any};
        /**
         * The data read by the run in bytes.
         */
        dataReadInBytes: string;
        /**
         * The data written by the run in bytes.
         */
        dataWrittenInBytes: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The query parameter for the Spark application name.
         */
        displayName: string;
        /**
         * The VM shape for the driver. Sets the driver cores and memory.
         */
        driverShape: string;
        /**
         * This is used to configure the shape of the driver or executor if a flexible shape is used.
         */
        driverShapeConfigs: outputs.DataFlow.GetInvokeRunsRunDriverShapeConfig[];
        /**
         * The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
         */
        execute: string;
        /**
         * The VM shape for the executors. Sets the executor cores and memory.
         */
        executorShape: string;
        /**
         * This is used to configure the shape of the driver or executor if a flexible shape is used.
         */
        executorShapeConfigs: outputs.DataFlow.GetInvokeRunsRunExecutorShapeConfig[];
        /**
         * An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         */
        fileUri: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The ID of a run.
         */
        id: string;
        /**
         * The Spark language.
         */
        language: string;
        /**
         * The detailed messages about the lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         */
        logsBucketUri: string;
        /**
         * The OCID of Oracle Cloud Infrastructure Hive Metastore.
         */
        metastoreId: string;
        /**
         * The number of executor VMs requested.
         */
        numExecutors: number;
        /**
         * Unique Oracle assigned identifier for the request. If you need to contact Oracle about a particular request, please provide the request ID.
         */
        opcRequestId: string;
        /**
         * The OCID of the user who created the resource.
         */
        ownerPrincipalId: string;
        /**
         * The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
         */
        ownerUserName: string;
        /**
         * An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: "iterations", value: "10"}, { name: "inputFile", value: "mydata.xml" }, { name: "variableX", value: "${x}"} ]
         */
        parameters: outputs.DataFlow.GetInvokeRunsRunParameter[];
        /**
         * An array of DNS zone names. Example: `[ "app.examplecorp.com", "app.examplecorp2.com" ]`
         */
        privateEndpointDnsZones: string[];
        /**
         * The OCID of a private endpoint.
         */
        privateEndpointId: string;
        /**
         * The maximum number of hosts to be accessed through the private endpoint. This value is used to calculate the relevant CIDR block and should be a multiple of 256.  If the value is not a multiple of 256, it is rounded up to the next multiple of 256. For example, 300 is rounded up to 512.
         */
        privateEndpointMaxHostCount: number;
        /**
         * An array of network security group OCIDs.
         */
        privateEndpointNsgIds: string[];
        /**
         * The OCID of a subnet.
         */
        privateEndpointSubnetId: string;
        /**
         * The duration of the run in milliseconds.
         */
        runDurationInMilliseconds: string;
        /**
         * The Spark version utilized to run the application.
         */
        sparkVersion: string;
        /**
         * The LifecycleState of the run.
         */
        state: string;
        /**
         * The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time a application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
         */
        timeUpdated: string;
        /**
         * The total number of oCPU requested by the run.
         */
        totalOcpu: number;
        /**
         * The Spark application processing type.
         */
        type: string;
        /**
         * An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         */
        warehouseBucketUri: string;
    }

    export interface GetInvokeRunsRunApplicationLogConfig {
        /**
         * The log group id for where log objects will be for Data Flow Runs.
         */
        logGroupId: string;
        /**
         * The log id of the log object the Application Logs of Data Flow Run will be shipped to.
         */
        logId: string;
    }

    export interface GetInvokeRunsRunDriverShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetInvokeRunsRunExecutorShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface GetInvokeRunsRunParameter {
        /**
         * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
         */
        name: string;
        /**
         * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
         */
        value: string;
    }

    export interface GetPrivateEndpointsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPrivateEndpointsPrivateEndpointCollection {
        items: outputs.DataFlow.GetPrivateEndpointsPrivateEndpointCollectionItem[];
    }

    export interface GetPrivateEndpointsPrivateEndpointCollectionItem {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly description. Avoid entering confidential information.
         */
        description: string;
        /**
         * The query parameter for the Spark application name. Note: At a time only one optional filter can be used with `compartmentId` to get the list of Private Endpoint resources.
         */
        displayName: string;
        /**
         * An array of DNS zone names. Example: `[ "app.examplecorp.com", "app.examplecorp2.com" ]`
         */
        dnsZones: string[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of a private endpoint.
         */
        id: string;
        /**
         * The detailed messages about the lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The maximum number of hosts to be accessed through the private endpoint. This value is used to calculate the relevant CIDR block and should be a multiple of 256.  If the value is not a multiple of 256, it is rounded up to the next multiple of 256. For example, 300 is rounded up to 512.
         */
        maxHostCount: number;
        /**
         * An array of network security group OCIDs.
         */
        nsgIds: string[];
        /**
         * The OCID of the user who created the resource.
         */
        ownerPrincipalId: string;
        /**
         * The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
         */
        ownerUserName: string;
        /**
         * The LifecycleState of the private endpoint.
         */
        state: string;
        /**
         * The OCID of a subnet.
         */
        subnetId: string;
        /**
         * The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time a application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
         */
        timeUpdated: string;
    }

    export interface GetRunLogsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRunLogsRunLog {
        name: string;
        /**
         * The unique ID for the run
         */
        runId: string;
        sizeInBytes: string;
        source: string;
        timeCreated: string;
        type: string;
    }

    export interface InvokeRunApplicationLogConfig {
        /**
         * The log group id for where log objects will be for Data Flow Runs.
         */
        logGroupId: string;
        /**
         * The log id of the log object the Application Logs of Data Flow Run will be shipped to.
         */
        logId: string;
    }

    export interface InvokeRunDriverShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface InvokeRunExecutorShapeConfig {
        /**
         * The amount of memory used for the driver or executors.
         */
        memoryInGbs: number;
        /**
         * The total number of OCPUs used for the driver or executors. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
         */
        ocpus: number;
    }

    export interface InvokeRunParameter {
        /**
         * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
         */
        name: string;
        /**
         * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
         */
        value: string;
    }

}

export namespace DataIntegration {
    export interface GetWorkspacesFilter {
        /**
         * Used to filter by the name of the object.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetWorkspacesWorkspace {
        /**
         * The OCID of the compartment containing the resources you want to list.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user defined description for the workspace.
         */
        description: string;
        /**
         * A user-friendly display name for the workspace. Does not have to be unique, and can be modified. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The IP of the custom DNS.
         */
        dnsServerIp: string;
        /**
         * The DNS zone of the custom DNS to use to resolve names.
         */
        dnsServerZone: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A system-generated and immutable identifier assigned to the workspace upon creation.
         */
        id: string;
        isForceOperation: boolean;
        /**
         * Specifies whether the private network connection is enabled or disabled.
         */
        isPrivateNetworkEnabled: boolean;
        quiesceTimeout: number;
        /**
         * The lifecycle state of a resource. When specified, the operation only returns resources that match the given lifecycle state. When not specified, all lifecycle states are processed as a match.
         */
        state: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
         */
        stateMessage: string;
        /**
         * The OCID of the subnet for customer connected databases.
         */
        subnetId: string;
        /**
         * The date and time the workspace was created, in the timestamp format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the workspace was updated, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
        /**
         * The OCID of the VCN the subnet is in.
         */
        vcnId: string;
    }

}

export namespace DataLabellingService {
    export interface DatasetDatasetFormatDetails {
        /**
         * It defines the format type of text files.
         */
        formatType: string;
        /**
         * Metadata for files with text content.
         */
        textFileTypeMetadata: outputs.DataLabellingService.DatasetDatasetFormatDetailsTextFileTypeMetadata;
    }

    export interface DatasetDatasetFormatDetailsTextFileTypeMetadata {
        /**
         * A column delimiter
         */
        columnDelimiter: string;
        /**
         * The index of a selected column. This is a zero-based index.
         */
        columnIndex: number;
        /**
         * The name of a selected column.
         */
        columnName: string;
        /**
         * An escape character.
         */
        escapeCharacter: string;
        /**
         * It defines the format type of text files.
         */
        formatType: string;
        /**
         * A line delimiter.
         */
        lineDelimiter: string;
    }

    export interface DatasetDatasetSourceDetails {
        /**
         * The object storage bucket that contains the dataset data source.
         */
        bucket: string;
        /**
         * The namespace of the bucket that contains the dataset data source.
         */
        namespace: string;
        /**
         * A common path prefix shared by the objects that make up the dataset. Except for the CSV file type, records are not generated for the objects whose names exactly match with the prefix.
         */
        prefix: string;
        /**
         * The source type. OBJECT_STORAGE allows the user to describe where in object storage the dataset is.
         */
        sourceType: string;
    }

    export interface DatasetInitialRecordGenerationConfiguration {
    }

    export interface DatasetLabelSet {
        /**
         * An ordered collection of labels that are unique by name.
         */
        items: outputs.DataLabellingService.DatasetLabelSetItem[];
    }

    export interface DatasetLabelSetItem {
        /**
         * An unique name for a label within its dataset.
         */
        name: string;
    }

    export interface GetAnnotationFormatItem {
        /**
         * A unique name for the target AnnotationFormat for the Dataset.
         */
        name: string;
    }

    export interface GetAnnotationFormatsAnnotationFormatCollection {
        /**
         * List of annotation formats.
         */
        items: outputs.DataLabellingService.GetAnnotationFormatsAnnotationFormatCollectionItem[];
    }

    export interface GetAnnotationFormatsAnnotationFormatCollectionItem {
        /**
         * A unique name for the target AnnotationFormat for the Dataset.
         */
        name: string;
    }

    export interface GetAnnotationFormatsFilter {
        /**
         * A unique name for the target AnnotationFormat for the Dataset.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDatasetDatasetFormatDetail {
        /**
         * It defines the format type of text files.
         */
        formatType: string;
        /**
         * Metadata for files with text content.
         */
        textFileTypeMetadatas: outputs.DataLabellingService.GetDatasetDatasetFormatDetailTextFileTypeMetadata[];
    }

    export interface GetDatasetDatasetFormatDetailTextFileTypeMetadata {
        /**
         * A column delimiter
         */
        columnDelimiter: string;
        /**
         * The index of a selected column. This is a zero-based index.
         */
        columnIndex: number;
        /**
         * The name of a selected column.
         */
        columnName: string;
        /**
         * An escape character.
         */
        escapeCharacter: string;
        /**
         * It defines the format type of text files.
         */
        formatType: string;
        /**
         * A line delimiter.
         */
        lineDelimiter: string;
    }

    export interface GetDatasetDatasetSourceDetail {
        /**
         * The object storage bucket that contains the dataset data source.
         */
        bucket: string;
        /**
         * The namespace of the bucket that contains the dataset data source.
         */
        namespace: string;
        /**
         * A common path prefix shared by the objects that make up the dataset. Except for the CSV file type, records are not generated for the objects whose names exactly match with the prefix.
         */
        prefix: string;
        /**
         * The source type. OBJECT_STORAGE allows the user to describe where in object storage the dataset is.
         */
        sourceType: string;
    }

    export interface GetDatasetInitialRecordGenerationConfiguration {
    }

    export interface GetDatasetLabelSet {
        /**
         * An ordered collection of labels that are unique by name.
         */
        items: outputs.DataLabellingService.GetDatasetLabelSetItem[];
    }

    export interface GetDatasetLabelSetItem {
        /**
         * An unique name for a label within its dataset.
         */
        name: string;
    }

    export interface GetDatasetsDatasetCollection {
        /**
         * An ordered collection of labels that are unique by name.
         */
        items: outputs.DataLabellingService.GetDatasetsDatasetCollectionItem[];
    }

    export interface GetDatasetsDatasetCollectionItem {
        /**
         * A filter to return only resources that match the entire annotation format given.
         */
        annotationFormat: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
         */
        datasetFormatDetails: outputs.DataLabellingService.GetDatasetsDatasetCollectionItemDatasetFormatDetail[];
        /**
         * This allows the customer to specify the source of the dataset.
         */
        datasetSourceDetails: outputs.DataLabellingService.GetDatasetsDatasetCollectionItemDatasetSourceDetail[];
        /**
         * The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user provided description of the dataset
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique Dataset OCID
         */
        id: string;
        /**
         * The initial generate records configuration. It generates records from the dataset's source.
         */
        initialRecordGenerationConfigurations: outputs.DataLabellingService.GetDatasetsDatasetCollectionItemInitialRecordGenerationConfiguration[];
        /**
         * An ordered collection of labels that are unique by name.
         */
        labelSets: outputs.DataLabellingService.GetDatasetsDatasetCollectionItemLabelSet[];
        /**
         * The labeling instructions for human labelers in rich text format
         */
        labelingInstructions: string;
        /**
         * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources whose lifecycleState matches this query param.
         */
        state: string;
        /**
         * The date and time the resource was created, in the timestamp format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated, in the timestamp format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetDatasetsDatasetCollectionItemDatasetFormatDetail {
        /**
         * It defines the format type of text files.
         */
        formatType: string;
        /**
         * Metadata for files with text content.
         */
        textFileTypeMetadatas: outputs.DataLabellingService.GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata[];
    }

    export interface GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata {
        /**
         * A column delimiter
         */
        columnDelimiter: string;
        /**
         * The index of a selected column. This is a zero-based index.
         */
        columnIndex: number;
        /**
         * The name of a selected column.
         */
        columnName: string;
        /**
         * An escape character.
         */
        escapeCharacter: string;
        /**
         * It defines the format type of text files.
         */
        formatType: string;
        /**
         * A line delimiter.
         */
        lineDelimiter: string;
    }

    export interface GetDatasetsDatasetCollectionItemDatasetSourceDetail {
        /**
         * The object storage bucket that contains the dataset data source.
         */
        bucket: string;
        /**
         * The namespace of the bucket that contains the dataset data source.
         */
        namespace: string;
        /**
         * A common path prefix shared by the objects that make up the dataset. Except for the CSV file type, records are not generated for the objects whose names exactly match with the prefix.
         */
        prefix: string;
        /**
         * The source type. OBJECT_STORAGE allows the user to describe where in object storage the dataset is.
         */
        sourceType: string;
    }

    export interface GetDatasetsDatasetCollectionItemInitialRecordGenerationConfiguration {
    }

    export interface GetDatasetsDatasetCollectionItemLabelSet {
        /**
         * An ordered collection of labels that are unique by name.
         */
        items: outputs.DataLabellingService.GetDatasetsDatasetCollectionItemLabelSetItem[];
    }

    export interface GetDatasetsDatasetCollectionItemLabelSetItem {
        /**
         * An unique name for a label within its dataset.
         */
        name: string;
    }

    export interface GetDatasetsFilter {
        /**
         * An unique name for a label within its dataset.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace DataSafe {
    export interface AuditPolicyAuditCondition {
        /**
         * Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
         */
        auditPolicyName: string;
        /**
         * Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
         */
        enableConditions: outputs.DataSafe.AuditPolicyAuditConditionEnableCondition[];
        /**
         * Indicates whether the Data Safe user activity on the target database will be audited by the policy.
         */
        isDataSafeServiceAccountAudited: boolean;
        /**
         * Indicates whether the privileged user list is managed by Data Safe.
         */
        isPrivUsersManagedByDataSafe: boolean;
    }

    export interface AuditPolicyAuditConditionEnableCondition {
        /**
         * List of users or roles that the policy must be enabled for.
         */
        entityNames: string[];
        /**
         * The entity include or exclude selection.
         */
        entitySelection: string;
        /**
         * The entity type that the policy must be enabled for.
         */
        entityType: string;
        /**
         * The operation status that the policy must be enabled for.
         */
        operationStatus: string;
    }

    export interface AuditPolicyAuditSpecification {
        /**
         * The category to which the audit policy belongs.
         */
        auditPolicyCategory: string;
        /**
         * Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
         */
        auditPolicyName: string;
        /**
         * Indicates the names of corresponding database policy ( or policies) in the target database.
         */
        databasePolicyNames: string[];
        /**
         * Indicates whether the policy has been enabled, disabled or partially enabled in the target database. The status is PARTIALLY_ENABLED if any of the constituent database audit policies is not enabled.
         */
        enableStatus: string;
        /**
         * Indicates on whom the audit policy is enabled.
         */
        enabledEntities: string;
        /**
         * Indicates whether the policy is already created on the target database.
         */
        isCreated: boolean;
        /**
         * Indicates whether the policy by default is enabled for all users with no flexibility to alter the enablement conditions.
         */
        isEnabledForAllUsers: boolean;
        /**
         * Indicates whether the audit policy is one of the seeded policies provided by Oracle Data Safe.
         */
        isSeededInDataSafe: boolean;
        /**
         * Indicates whether the audit policy is one of the predefined policies provided by Oracle Database.
         */
        isSeededInTarget: boolean;
        /**
         * Indicates whether the audit policy is available for provisioning/ de-provisioning from Oracle Data Safe, or is only available for displaying the current provisioning status from the target.
         */
        isViewOnly: boolean;
        /**
         * Provides information about the policy that has been only partially enabled.
         */
        partiallyEnabledMsg: string;
    }

    export interface AuditProfileAuditTrail {
        /**
         * The date from which the audit trail must start collecting data, in the format defined by RFC3339.
         */
        auditCollectionStartTime: string;
        /**
         * The OCID of the audit.
         */
        auditProfileId: string;
        /**
         * (Updatable) The OCID of the compartment that contains the audit.
         */
        compartmentId: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) The description of the audit profile.
         */
        description: string;
        /**
         * (Updatable) The display name of the audit profile. The name does not have to be unique, and it's changeable.
         */
        displayName: string;
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the audit profile.
         */
        id: string;
        /**
         * Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
         */
        isAutoPurgeEnabled: boolean;
        /**
         * Details about the current state of the audit profile in Data Safe.
         */
        lifecycleDetails: string;
        /**
         * The current state of the audit profile.
         */
        state: string;
        /**
         * The current sub-state of the audit trail.
         */
        status: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The OCID of the Data Safe target for which the audit profile is created.
         */
        targetId: string;
        /**
         * The date and time the audit profile was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the audit profile was updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
         */
        trailLocation: string;
        /**
         * The OCID of the workrequest for audit trail which collects audit records.
         */
        workRequestId: string;
    }

    export interface DataSafeConfigurationGlobalSetting {
        /**
         * The paid usage option chosen by the customer admin.
         */
        isPaidUsage: boolean;
        /**
         * The offline retention period in months.
         */
        offlineRetentionPeriod: number;
        /**
         * The online retention period in months.
         */
        onlineRetentionPeriod: number;
    }

    export interface DiscoveryJobsResultModifiedAttribute {
        /**
         * Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
         */
        appDefinedChildColumnKeys: string[];
        /**
         * Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
         */
        dbDefinedChildColumnKeys: string[];
    }

    export interface GetAlertAnalyticItem {
        /**
         * Total count of aggregated values.
         */
        count: string;
        /**
         * Details of aggregation dimension summarizing alerts.
         */
        dimensions: outputs.DataSafe.GetAlertAnalyticItemDimension[];
        /**
         * The name of the aggregation.
         */
        metricName: string;
        /**
         * An optional filter to return audit events whose creation time in the database is less than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeEnded: string;
        /**
         * An optional filter to return audit events whose creation time in the database is greater than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeStarted: string;
    }

    export interface GetAlertAnalyticItemDimension {
        /**
         * A groupBy can only be used in combination with summaryField parameter. A groupBy value has to be a subset of the values mentioned in summaryField parameter.
         */
        groupBy: {[key: string]: any};
    }

    export interface GetAlertPoliciesAlertPolicyCollection {
        items: outputs.DataSafe.GetAlertPoliciesAlertPolicyCollectionItem[];
    }

    export interface GetAlertPoliciesAlertPolicyCollectionItem {
        /**
         * Indicates the Data Safe feature to which the alert policy belongs.
         */
        alertPolicyType: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the alert policy.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the alert policy.
         */
        id: string;
        /**
         * An optional filter to return only alert policies that are user-defined or not.
         */
        isUserDefined: boolean;
        /**
         * Severity level of the alert raised by this policy.
         */
        severity: string;
        /**
         * An optional filter to return only alert policies that have the given life-cycle state.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Creation date and time of the alert policy, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Last date and time the alert policy was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetAlertPoliciesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAlertPolicyRuleItem {
        /**
         * Describes the alert policy rule.
         */
        description: string;
        /**
         * The conditional expression of the alert policy rule which evaluates to boolean value.
         */
        expression: string;
        /**
         * The unique key of the alert policy rule.
         */
        key: string;
    }

    export interface GetAlertPolicyRulesAlertPolicyRuleCollection {
        /**
         * Array of alert policy rules summary
         */
        items: outputs.DataSafe.GetAlertPolicyRulesAlertPolicyRuleCollectionItem[];
    }

    export interface GetAlertPolicyRulesAlertPolicyRuleCollectionItem {
        /**
         * Describes the alert policy rule.
         */
        description: string;
        /**
         * The conditional expression of the alert policy rule which evaluates to boolean value.
         */
        expression: string;
        /**
         * The unique key of the alert policy rule.
         */
        key: string;
    }

    export interface GetAlertPolicyRulesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAlertsAlertCollection {
        items: outputs.DataSafe.GetAlertsAlertCollectionItem[];
    }

    export interface GetAlertsAlertCollectionItem {
        alertId: string;
        /**
         * Type of the alert. Indicates the Data Safe feature triggering the alert.
         */
        alertType: string;
        /**
         * A comment for the alert. Entered by the user.
         */
        comment: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the alert.
         */
        description: string;
        /**
         * The display name of the alert.
         */
        displayName: string;
        /**
         * Map that contains maps of values. Example: `{"Operations": {"CostCenter": "42"}}`
         */
        featureDetails: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return alert by it's OCID.
         */
        id: string;
        /**
         * The operation (event) that triggered alert.
         */
        operation: string;
        /**
         * The result of the operation (event) that triggered alert.
         */
        operationStatus: string;
        /**
         * Creation date and time of the operation that triggered alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        operationTime: string;
        /**
         * The OCID of the policy that triggered alert.
         */
        policyId: string;
        /**
         * The resource endpoint that triggered the alert.
         */
        resourceName: string;
        /**
         * Severity level of the alert.
         */
        severity: string;
        /**
         * The current state of the alert.
         */
        state: string;
        /**
         * The status of the alert.
         */
        status: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Array of OCIDs of the target database which are associated with the alert.
         */
        targetIds: string[];
        /**
         * Array of names of the target database.
         */
        targetNames: string[];
        /**
         * Creation date and time of the alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Last date and time the alert was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetAlertsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAuditArchiveRetrievalsAuditArchiveRetrievalCollection {
        items: outputs.DataSafe.GetAuditArchiveRetrievalsAuditArchiveRetrievalCollectionItem[];
    }

    export interface GetAuditArchiveRetrievalsAuditArchiveRetrievalCollectionItem {
        /**
         * Total count of audit events to be retrieved from the archive for the specified date range.
         */
        auditEventCount: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the archive retrieval.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * End month of the archive retrieval, in the format defined by RFC3339.
         */
        endDate: string;
        /**
         * The Error details of a failed archive retrieval.
         */
        errorInfo: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the archive retrieval.
         */
        id: string;
        /**
         * Details about the current state of the archive retrieval.
         */
        lifecycleDetails: string;
        /**
         * Start month of the archive retrieval, in the format defined by RFC3339.
         */
        startDate: string;
        /**
         * A filter to return only resources that matches the specified lifecycle state.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The OCID of the target associated with the archive retrieval.
         */
        targetId: string;
        /**
         * The date time when archive retrieval request was fulfilled, in the format defined by RFC3339.
         */
        timeCompleted: string;
        /**
         * The date time when retrieved archive data will be deleted from Data Safe and unloaded back into archival.
         */
        timeOfExpiry: string;
        /**
         * The date time when archive retrieval was requested, in the format defined by RFC3339.
         */
        timeRequested: string;
    }

    export interface GetAuditArchiveRetrievalsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAuditEventAnalyticItem {
        /**
         * Total count of aggregated value.
         */
        count: string;
        /**
         * Details of aggregation dimensions used for summarizing audit events.
         */
        dimensions: outputs.DataSafe.GetAuditEventAnalyticItemDimension[];
        /**
         * Display Name of aggregation field.
         */
        displayName: string;
        /**
         * Name of the aggregation.
         */
        metricName: string;
        /**
         * An optional filter to return audit events whose creation time in the database is less than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeEnded: string;
        /**
         * An optional filter to return audit events whose creation time in the database is greater than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeStarted: string;
    }

    export interface GetAuditEventAnalyticItemDimension {
        /**
         * Time of audit event occurrence in the target database.
         */
        auditEventTimes: string[];
        /**
         * Type of auditing.
         */
        auditTypes: string[];
        /**
         * Name of the host machine from which the session was spawned.
         */
        clientHostnames: string[];
        /**
         * The client identifier in each Oracle session.
         */
        clientIds: string[];
        /**
         * The application from which the audit event was generated. Examples SQL Plus or SQL Developer.
         */
        clientPrograms: string[];
        /**
         * Name of the database user whose actions were audited.
         */
        dbUserNames: string[];
        /**
         * Name of the detail action executed by the user on the target database. i.e ALTER SEQUENCE, CREATE TRIGGER, CREATE INDEX.
         */
        eventNames: string[];
        /**
         * Type of object in the source database affected by the action. i.e PL/SQL, SYNONYM, PACKAGE BODY.
         */
        objectTypes: string[];
        /**
         * Class of the target that was audited.
         */
        targetClasses: string[];
        /**
         * The OCID of the target database that was audited.
         */
        targetIds: string[];
        /**
         * The name of the target database that was audited.
         */
        targetNames: string[];
    }

    export interface GetAuditEventItem {
        /**
         * The action taken for this audit event.
         */
        actionTaken: string;
        /**
         * Time of audit event occurrence in the target database.
         */
        auditEventTime: string;
        /**
         * The location of the audit. Currently the value is audit table.
         */
        auditLocation: string;
        /**
         * Comma-seperated list of audit policies that caused the current audit event.
         */
        auditPolicies: string;
        /**
         * The OCID of the audit trail that generated this audit event.
         */
        auditTrailId: string;
        /**
         * Type of auditing.
         */
        auditType: string;
        /**
         * Name of the host machine from which the session was spawned.
         */
        clientHostname: string;
        /**
         * The client identifier in each Oracle session.
         */
        clientId: string;
        /**
         * IP address of the host from which the session was spawned.
         */
        clientIp: string;
        /**
         * The application from which the audit event was generated. Examples SQL Plus or SQL Developer.
         */
        clientProgram: string;
        /**
         * List of bind variables associated with the command text.
         */
        commandParam: string;
        /**
         * The SQL associated with the audit event.
         */
        commandText: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * The type of the target database that was audited. Allowed values are
         * * DATABASE_CLOUD_SERVICE - Represents Oracle Database Cloud Services.
         * * AUTONOMOUS_DATABASE - Represents Oracle Autonomous Databases.
         * * INSTALLED_DATABASE - Represents databases running on-premises or on compute instances.
         */
        databaseType: string;
        /**
         * Name of the database user whose actions were audited.
         */
        dbUserName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Oracle Error code generated by the action. Zero indicates the action was successful.
         */
        errorCode: string;
        /**
         * Detailed message on why the Error occurred.
         */
        errorMessage: string;
        /**
         * Name of the detail action executed by the user on the target database. i.e ALTER SEQUENCE, CREATE TRIGGER, CREATE INDEX.
         */
        eventName: string;
        /**
         * List of all other attributes of the audit event seperated by a colon other than the one returned in audit record.
         */
        extendedEventAttributes: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the audit event.
         */
        id: string;
        /**
         * Indicates whether an alert was raised for this audit event.
         */
        isAlerted: boolean;
        /**
         * Name of the object affected by the action.
         */
        object: string;
        /**
         * Schema name of object affected but the action.
         */
        objectOwner: string;
        /**
         * Type of object in the source database affected by the action. i.e PL/SQL, SYNONYM, PACKAGE BODY.
         */
        objectType: string;
        /**
         * Name of the action executed by the user on the target database. i.e ALTER, CREATE, DROP.
         */
        operation: string;
        /**
         * Indicates whether the operation was a success or a failure.
         */
        operationStatus: string;
        /**
         * The operating system terminal of the user session.
         */
        osTerminal: string;
        /**
         * Name of the operating system user for the database session.
         */
        osUserName: string;
        /**
         * Class of the target that was audited.
         */
        targetClass: string;
        /**
         * The OCID of the target database that was audited.
         */
        targetId: string;
        /**
         * The name of the target database that was audited.
         */
        targetName: string;
        /**
         * Timestamp when this audit event was collected from the target database by Data Safe.
         */
        timeCollected: string;
    }

    export interface GetAuditEventsAuditEventCollection {
        /**
         * Array of audit event summary.
         */
        items: outputs.DataSafe.GetAuditEventsAuditEventCollectionItem[];
    }

    export interface GetAuditEventsAuditEventCollectionItem {
        /**
         * The action taken for this audit event.
         */
        actionTaken: string;
        /**
         * Time of audit event occurrence in the target database.
         */
        auditEventTime: string;
        /**
         * The location of the audit. Currently the value is audit table.
         */
        auditLocation: string;
        /**
         * Comma-seperated list of audit policies that caused the current audit event.
         */
        auditPolicies: string;
        /**
         * The OCID of the audit trail that generated this audit event.
         */
        auditTrailId: string;
        /**
         * Type of auditing.
         */
        auditType: string;
        /**
         * Name of the host machine from which the session was spawned.
         */
        clientHostname: string;
        /**
         * The client identifier in each Oracle session.
         */
        clientId: string;
        /**
         * IP address of the host from which the session was spawned.
         */
        clientIp: string;
        /**
         * The application from which the audit event was generated. Examples SQL Plus or SQL Developer.
         */
        clientProgram: string;
        /**
         * List of bind variables associated with the command text.
         */
        commandParam: string;
        /**
         * The SQL associated with the audit event.
         */
        commandText: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * The type of the target database that was audited. Allowed values are
         * * DATABASE_CLOUD_SERVICE - Represents Oracle Database Cloud Services.
         * * AUTONOMOUS_DATABASE - Represents Oracle Autonomous Databases.
         * * INSTALLED_DATABASE - Represents databases running on-premises or on compute instances.
         */
        databaseType: string;
        /**
         * Name of the database user whose actions were audited.
         */
        dbUserName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Oracle Error code generated by the action. Zero indicates the action was successful.
         */
        errorCode: string;
        /**
         * Detailed message on why the Error occurred.
         */
        errorMessage: string;
        /**
         * Name of the detail action executed by the user on the target database. i.e ALTER SEQUENCE, CREATE TRIGGER, CREATE INDEX.
         */
        eventName: string;
        /**
         * List of all other attributes of the audit event seperated by a colon other than the one returned in audit record.
         */
        extendedEventAttributes: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the audit event.
         */
        id: string;
        /**
         * Indicates whether an alert was raised for this audit event.
         */
        isAlerted: boolean;
        /**
         * Name of the object affected by the action.
         */
        object: string;
        /**
         * Schema name of object affected but the action.
         */
        objectOwner: string;
        /**
         * Type of object in the source database affected by the action. i.e PL/SQL, SYNONYM, PACKAGE BODY.
         */
        objectType: string;
        /**
         * Name of the action executed by the user on the target database. i.e ALTER, CREATE, DROP.
         */
        operation: string;
        /**
         * Indicates whether the operation was a success or a failure.
         */
        operationStatus: string;
        /**
         * The operating system terminal of the user session.
         */
        osTerminal: string;
        /**
         * Name of the operating system user for the database session.
         */
        osUserName: string;
        /**
         * Class of the target that was audited.
         */
        targetClass: string;
        /**
         * The OCID of the target database that was audited.
         */
        targetId: string;
        /**
         * The name of the target database that was audited.
         */
        targetName: string;
        /**
         * Timestamp when this audit event was collected from the target database by Data Safe.
         */
        timeCollected: string;
    }

    export interface GetAuditEventsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAuditPoliciesAuditPolicyCollection {
        items: outputs.DataSafe.GetAuditPoliciesAuditPolicyCollectionItem[];
    }

    export interface GetAuditPoliciesAuditPolicyCollectionItem {
        /**
         * Lists the audit policy provisioning conditions for the target database.
         */
        auditConditions: outputs.DataSafe.GetAuditPoliciesAuditPolicyCollectionItemAuditCondition[];
        /**
         * An optional filter to return only resources that match the specified id.
         */
        auditPolicyId: string;
        /**
         * Represents all available audit policy specifications relevant for the target database. For more details on available audit polcies, refer to [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827).
         */
        auditSpecifications: outputs.DataSafe.GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification[];
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the audit policy.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the audit policy.
         */
        id: string;
        /**
         * Option provided to users at the target to indicate whether the Data Safe service account has to be excluded while provisioning the audit policies.
         */
        isDataSafeServiceAccountExcluded: boolean;
        /**
         * Details about the current state of the audit policy in Data Safe.
         */
        lifecycleDetails: string;
        provisionTrigger: number;
        retrieveFromTargetTrigger: number;
        /**
         * The current state of the audit policy.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * The time the the audit policy was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * Indicates the last provisioning time of audit policies on the target, in the format defined by RFC3339.
         */
        timeLastProvisioned: string;
        /**
         * The time when the audit policies was last retrieved from this target, in the format defined by RFC3339.
         */
        timeLastRetrieved: string;
        /**
         * The last date and time the audit policy was updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetAuditPoliciesAuditPolicyCollectionItemAuditCondition {
        /**
         * Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
         */
        auditPolicyName: string;
        /**
         * Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
         */
        enableConditions: outputs.DataSafe.GetAuditPoliciesAuditPolicyCollectionItemAuditConditionEnableCondition[];
        /**
         * Indicates whether the Data Safe user activity on the target database will be audited by the policy.
         */
        isDataSafeServiceAccountAudited: boolean;
        /**
         * Indicates whether the privileged user list is managed by Data Safe.
         */
        isPrivUsersManagedByDataSafe: boolean;
    }

    export interface GetAuditPoliciesAuditPolicyCollectionItemAuditConditionEnableCondition {
        /**
         * List of users or roles that the policy must be enabled for.
         */
        entityNames: string[];
        /**
         * The entity include or exclude selection.
         */
        entitySelection: string;
        /**
         * The entity type that the policy must be enabled for.
         */
        entityType: string;
        /**
         * The operation status that the policy must be enabled for.
         */
        operationStatus: string;
    }

    export interface GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification {
        /**
         * The category to which the audit policy belongs.
         */
        auditPolicyCategory: string;
        /**
         * Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
         */
        auditPolicyName: string;
        /**
         * Indicates the names of corresponding database policy ( or policies) in the target database.
         */
        databasePolicyNames: string[];
        /**
         * Indicates whether the policy has been enabled, disabled or partially enabled in the target database. The status is PARTIALLY_ENABLED if any of the constituent database audit policies is not enabled.
         */
        enableStatus: string;
        /**
         * Indicates on whom the audit policy is enabled.
         */
        enabledEntities: string;
        /**
         * Indicates whether the policy is already created on the target database.
         */
        isCreated: boolean;
        /**
         * Indicates whether the policy by default is enabled for all users with no flexibility to alter the enablement conditions.
         */
        isEnabledForAllUsers: boolean;
        /**
         * Indicates whether the audit policy is one of the seeded policies provided by Oracle Data Safe.
         */
        isSeededInDataSafe: boolean;
        /**
         * Indicates whether the audit policy is one of the predefined policies provided by Oracle Database.
         */
        isSeededInTarget: boolean;
        /**
         * Indicates whether the audit policy is available for provisioning/ de-provisioning from Oracle Data Safe, or is only available for displaying the current provisioning status from the target.
         */
        isViewOnly: boolean;
        /**
         * Provides information about the policy that has been only partially enabled.
         */
        partiallyEnabledMsg: string;
    }

    export interface GetAuditPoliciesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAuditPolicyAuditCondition {
        /**
         * Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
         */
        auditPolicyName: string;
        /**
         * Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
         */
        enableConditions: outputs.DataSafe.GetAuditPolicyAuditConditionEnableCondition[];
        /**
         * Indicates whether the Data Safe user activity on the target database will be audited by the policy.
         */
        isDataSafeServiceAccountAudited: boolean;
        /**
         * Indicates whether the privileged user list is managed by Data Safe.
         */
        isPrivUsersManagedByDataSafe: boolean;
    }

    export interface GetAuditPolicyAuditConditionEnableCondition {
        /**
         * List of users or roles that the policy must be enabled for.
         */
        entityNames: string[];
        /**
         * The entity include or exclude selection.
         */
        entitySelection: string;
        /**
         * The entity type that the policy must be enabled for.
         */
        entityType: string;
        /**
         * The operation status that the policy must be enabled for.
         */
        operationStatus: string;
    }

    export interface GetAuditPolicyAuditSpecification {
        /**
         * The category to which the audit policy belongs.
         */
        auditPolicyCategory: string;
        /**
         * Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
         */
        auditPolicyName: string;
        /**
         * Indicates the names of corresponding database policy ( or policies) in the target database.
         */
        databasePolicyNames: string[];
        /**
         * Indicates whether the policy has been enabled, disabled or partially enabled in the target database. The status is PARTIALLY_ENABLED if any of the constituent database audit policies is not enabled.
         */
        enableStatus: string;
        /**
         * Indicates on whom the audit policy is enabled.
         */
        enabledEntities: string;
        /**
         * Indicates whether the policy is already created on the target database.
         */
        isCreated: boolean;
        /**
         * Indicates whether the policy by default is enabled for all users with no flexibility to alter the enablement conditions.
         */
        isEnabledForAllUsers: boolean;
        /**
         * Indicates whether the audit policy is one of the seeded policies provided by Oracle Data Safe.
         */
        isSeededInDataSafe: boolean;
        /**
         * Indicates whether the audit policy is one of the predefined policies provided by Oracle Database.
         */
        isSeededInTarget: boolean;
        /**
         * Indicates whether the audit policy is available for provisioning/ de-provisioning from Oracle Data Safe, or is only available for displaying the current provisioning status from the target.
         */
        isViewOnly: boolean;
        /**
         * Provides information about the policy that has been only partially enabled.
         */
        partiallyEnabledMsg: string;
    }

    export interface GetAuditProfileAnalyticItem {
        /**
         * Total count of aggregated metric.
         */
        count: string;
        /**
         * Details of aggregation dimensions used for summarizing audit profiles.
         */
        dimensions: outputs.DataSafe.GetAuditProfileAnalyticItemDimension[];
    }

    export interface GetAuditProfileAnalyticItemDimension {
        /**
         * Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
         */
        isPaidUsageEnabled: boolean;
    }

    export interface GetAuditProfileAuditTrail {
        /**
         * The date from which the audit trail must start collecting data, in the format defined by RFC3339.
         */
        auditCollectionStartTime: string;
        /**
         * The OCID of the audit.
         */
        auditProfileId: string;
        /**
         * The OCID of the compartment that contains the audit.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the audit profile.
         */
        description: string;
        /**
         * The display name of the audit profile.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the audit profile.
         */
        id: string;
        /**
         * Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
         */
        isAutoPurgeEnabled: boolean;
        /**
         * Details about the current state of the audit profile in Data Safe.
         */
        lifecycleDetails: string;
        /**
         * The current state of the audit profile.
         */
        state: string;
        /**
         * The current sub-state of the audit trail.
         */
        status: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The OCID of the Data Safe target for which the audit profile is created.
         */
        targetId: string;
        /**
         * The date and time the audit profile was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the audit profile was updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
         */
        trailLocation: string;
        /**
         * The OCID of the workrequest for audit trail which collects audit records.
         */
        workRequestId: string;
    }

    export interface GetAuditProfileAvailableAuditVolumeItem {
        /**
         * The OCID of the audit.
         */
        auditProfileId: string;
        /**
         * Represents the month under consideration for which aggregated audit data volume available at the target is computed. This field will be the UTC start of the day of the first day of the month for which the aggregate count corresponds to, in the format defined by RFC3339.. For instance, the value of 01-01-2021T00:00:00Z represents Jan 2021.
         */
        monthInConsideration: string;
        /**
         * The audit trail location.
         */
        trailLocation: string;
        /**
         * Represents the aggregated audit data volume available in the audit trails on the target database which is yet to be collected by Data Safe for the specified month.
         */
        volume: string;
    }

    export interface GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollection {
        /**
         * Array of available audit volume summary.
         */
        items: outputs.DataSafe.GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollectionItem[];
    }

    export interface GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollectionItem {
        /**
         * Array of available audit volume summary.
         */
        items: outputs.DataSafe.GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollectionItemItem[];
    }

    export interface GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollectionItemItem {
        /**
         * The OCID of the audit.
         */
        auditProfileId: string;
        /**
         * Represents the month under consideration for which aggregated audit data volume available at the target is computed. This field will be the UTC start of the day of the first day of the month for which the aggregate count corresponds to, in the format defined by RFC3339.. For instance, the value of 01-01-2021T00:00:00Z represents Jan 2021.
         */
        monthInConsideration: string;
        /**
         * The audit trail location.
         */
        trailLocation: string;
        /**
         * Represents the aggregated audit data volume available in the audit trails on the target database which is yet to be collected by Data Safe for the specified month.
         */
        volume: string;
    }

    export interface GetAuditProfileAvailableAuditVolumesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAuditProfileCollectedAuditVolumeItem {
        /**
         * The audit data volume collected by Data Safe and is available in archive storage.
         */
        archivedVolume: string;
        /**
         * The OCID of the audit.
         */
        auditProfileId: string;
        /**
         * Represents the month under consideration in which the aggregated audit data volume collected by Data Safe is displayed. This field will be the UTC start of the day of the first day of the month for which the aggregate count corresponds to, in the format defined by RFC3339.. For instance, the value of 01-01-2021T00:00:00Z represents Jan 2021.
         */
        monthInConsideration: string;
        /**
         * The audit data volume collected by Data Safe and is available online in repository.
         */
        onlineVolume: string;
    }

    export interface GetAuditProfileCollectedAuditVolumesCollectedAuditVolumeCollection {
        /**
         * Array of collected audit volume summary.
         */
        items: outputs.DataSafe.GetAuditProfileCollectedAuditVolumesCollectedAuditVolumeCollectionItem[];
    }

    export interface GetAuditProfileCollectedAuditVolumesCollectedAuditVolumeCollectionItem {
        /**
         * Array of collected audit volume summary.
         */
        items: outputs.DataSafe.GetAuditProfileCollectedAuditVolumesCollectedAuditVolumeCollectionItemItem[];
    }

    export interface GetAuditProfileCollectedAuditVolumesCollectedAuditVolumeCollectionItemItem {
        /**
         * The audit data volume collected by Data Safe and is available in archive storage.
         */
        archivedVolume: string;
        /**
         * The OCID of the audit.
         */
        auditProfileId: string;
        /**
         * Represents the month under consideration in which the aggregated audit data volume collected by Data Safe is displayed. This field will be the UTC start of the day of the first day of the month for which the aggregate count corresponds to, in the format defined by RFC3339.. For instance, the value of 01-01-2021T00:00:00Z represents Jan 2021.
         */
        monthInConsideration: string;
        /**
         * The audit data volume collected by Data Safe and is available online in repository.
         */
        onlineVolume: string;
    }

    export interface GetAuditProfileCollectedAuditVolumesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAuditProfilesAuditProfileCollection {
        items: outputs.DataSafe.GetAuditProfilesAuditProfileCollectionItem[];
    }

    export interface GetAuditProfilesAuditProfileCollectionItem {
        /**
         * Indicates number of audit records collected by Data Safe in the current calendar month.  Audit records for the Data Safe service account are excluded and are not counted towards your monthly free limit.
         */
        auditCollectedVolume: string;
        /**
         * A optional filter to return only resources that match the specified id.
         */
        auditProfileId: string;
        /**
         * Indicates the list of available audit trails on the target.
         */
        auditTrails: outputs.DataSafe.GetAuditProfilesAuditProfileCollectionItemAuditTrail[];
        changeRetentionTrigger: number;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the audit profile.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the audit profile.
         */
        id: string;
        /**
         * A optional filter to return only resources that match the specified retention configured value.
         */
        isOverrideGlobalRetentionSetting: boolean;
        /**
         * Indicates if you want to continue audit record collection beyond the free limit of one million audit records per month per target database, incurring additional charges. The default value is inherited from the global settings. You can change at the global level or at the target level.
         */
        isPaidUsageEnabled: boolean;
        /**
         * Details about the current state of the audit profile in Data Safe.
         */
        lifecycleDetails: string;
        /**
         * Indicates the number of months the audit records will be stored offline in the Data Safe audit archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer in archive, please contact the Oracle Support.
         */
        offlineMonths: number;
        /**
         * Indicates the number of months the audit records will be stored online in Oracle Data Safe audit repository for immediate reporting and analysis.  Minimum: 1; Maximum:12 months
         */
        onlineMonths: number;
        /**
         * A optional filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * The date and time the audit profile was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the audit profile was updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetAuditProfilesAuditProfileCollectionItemAuditTrail {
        /**
         * The date from which the audit trail must start collecting data, in the format defined by RFC3339.
         */
        auditCollectionStartTime: string;
        /**
         * A optional filter to return only resources that match the specified id.
         */
        auditProfileId: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the audit profile.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the audit profile.
         */
        id: string;
        /**
         * Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
         */
        isAutoPurgeEnabled: boolean;
        /**
         * Details about the current state of the audit profile in Data Safe.
         */
        lifecycleDetails: string;
        /**
         * A optional filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * The current sub-state of the audit trail.
         */
        status: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * The date and time the audit profile was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the audit profile was updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
         */
        trailLocation: string;
        /**
         * The OCID of the workrequest for audit trail which collects audit records.
         */
        workRequestId: string;
    }

    export interface GetAuditProfilesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAuditTrailAnalyticItem {
        /**
         * Total count of aggregated metric.
         */
        count: string;
        /**
         * Details of aggregation dimensions used for summarizing audit trails.
         */
        dimensions: outputs.DataSafe.GetAuditTrailAnalyticItemDimension[];
    }

    export interface GetAuditTrailAnalyticItemDimension {
        /**
         * The location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
         */
        location: string;
        /**
         * The current state of the audit trail.
         */
        state: string;
        /**
         * The current sub-state of the audit trail..
         */
        status: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
    }

    export interface GetAuditTrailsAuditTrailCollection {
        items: outputs.DataSafe.GetAuditTrailsAuditTrailCollectionItem[];
    }

    export interface GetAuditTrailsAuditTrailCollectionItem {
        /**
         * The date from which the audit trail must start collecting data, in the format defined by RFC3339.
         */
        auditCollectionStartTime: string;
        /**
         * The OCID of the  parent audit.
         */
        auditProfileId: string;
        /**
         * A optional filter to return only resources that match the specified id.
         */
        auditTrailId: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the audit trail.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the audit trail.
         */
        id: string;
        /**
         * Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
         */
        isAutoPurgeEnabled: boolean;
        /**
         * Details about the current state of the audit trail in Data Safe.
         */
        lifecycleDetails: string;
        resumeTrigger: number;
        /**
         * A optional filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * A optional filter to return only resources that match the specified sub-state of audit trail.
         */
        status: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * The date and time the audit trail was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the audit trail was updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
         */
        trailLocation: string;
        /**
         * The OCID of the workrequest for audit trail which collects audit records.
         */
        workRequestId: string;
    }

    export interface GetAuditTrailsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCompatibleFormatsForDataTypeFormatsForDataType {
        /**
         * The data type category, which can be one of the following - Character - Includes CHAR, NCHAR, VARCHAR2, and NVARCHAR2 Numeric - Includes NUMBER, FLOAT, RAW, BINARY_FLOAT, and BINARY_DOUBLE Date - Includes DATE and TIMESTAMP LOB - Includes BLOB, CLOB, and NCLOB All - Includes all the supported data types
         */
        dataType: string;
        /**
         * An array of the basic masking formats compatible with the data type category.
         */
        maskingFormats: outputs.DataSafe.GetCompatibleFormatsForDataTypeFormatsForDataTypeMaskingFormat[];
    }

    export interface GetCompatibleFormatsForDataTypeFormatsForDataTypeMaskingFormat {
        /**
         * The description of the masking format.
         */
        description: string;
        /**
         * The OCID of the masking format.
         */
        id: string;
        /**
         * The name of the masking format.
         */
        name: string;
    }

    export interface GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveType {
        /**
         * An array of the library masking formats compatible with the sensitive type.
         */
        maskingFormats: outputs.DataSafe.GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveTypeMaskingFormat[];
        /**
         * The OCID of the sensitive type.
         */
        sensitiveTypeId: string;
    }

    export interface GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveTypeMaskingFormat {
        /**
         * The description of the masking format.
         */
        description: string;
        /**
         * The OCID of the masking format.
         */
        id: string;
        /**
         * The name of the masking format.
         */
        name: string;
    }

    export interface GetDataSafeConfigurationGlobalSetting {
        /**
         * The paid usage option chosen by the customer admin.
         */
        isPaidUsage: boolean;
        /**
         * The offline retention period in months.
         */
        offlineRetentionPeriod: number;
        /**
         * The online retention period in months.
         */
        onlineRetentionPeriod: number;
    }

    export interface GetDataSafePrivateEndpointsDataSafePrivateEndpoint {
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the private endpoint.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * The three-label fully qualified domain name (FQDN) of the private endpoint. The customer VCN's DNS records are updated with this FQDN.
         */
        endpointFqdn: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Data Safe private endpoint.
         */
        id: string;
        /**
         * The OCIDs of the network security groups that the private endpoint belongs to.
         */
        nsgIds: string[];
        /**
         * The OCID of the underlying private endpoint.
         */
        privateEndpointId: string;
        /**
         * The private IP address of the private endpoint.
         */
        privateEndpointIp: string;
        /**
         * A filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * The OCID of the subnet.
         */
        subnetId: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the private endpoint was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * A filter to return only resources that match the specified VCN OCID.
         */
        vcnId: string;
    }

    export interface GetDataSafePrivateEndpointsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDiscoveryAnalyticItem {
        /**
         * The total count for the aggregation metric.
         */
        count: string;
        /**
         * The scope of analytics data.
         */
        dimensions: outputs.DataSafe.GetDiscoveryAnalyticItemDimension[];
        /**
         * The name of the aggregation metric.
         */
        metricName: string;
    }

    export interface GetDiscoveryAnalyticItemDimension {
        /**
         * A filter to return only the resources that match the specified sensitive data model OCID.
         */
        sensitiveDataModelId: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
    }

    export interface GetDiscoveryAnalyticsDiscoveryAnalyticsCollection {
        /**
         * An array of discovery analytics summary objects.
         */
        items: outputs.DataSafe.GetDiscoveryAnalyticsDiscoveryAnalyticsCollectionItem[];
    }

    export interface GetDiscoveryAnalyticsDiscoveryAnalyticsCollectionItem {
        /**
         * The total count for the aggregation metric.
         */
        count: string;
        /**
         * The scope of analytics data.
         */
        dimensions: outputs.DataSafe.GetDiscoveryAnalyticsDiscoveryAnalyticsCollectionItemDimension[];
        /**
         * The name of the aggregation metric.
         */
        metricName: string;
    }

    export interface GetDiscoveryAnalyticsDiscoveryAnalyticsCollectionItemDimension {
        /**
         * A filter to return only the resources that match the specified sensitive data model OCID.
         */
        sensitiveDataModelId: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
    }

    export interface GetDiscoveryAnalyticsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDiscoveryJobsResultModifiedAttribute {
        /**
         * Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
         */
        appDefinedChildColumnKeys: string[];
        /**
         * Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
         */
        dbDefinedChildColumnKeys: string[];
    }

    export interface GetDiscoveryJobsResultsDiscoveryJobResultCollection {
        items: outputs.DataSafe.GetDiscoveryJobsResultsDiscoveryJobResultCollectionItem[];
    }

    export interface GetDiscoveryJobsResultsDiscoveryJobResultCollectionItem {
        /**
         * Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
         */
        appDefinedChildColumnKeys: string[];
        /**
         * The name of the application. An application is an entity that is identified by a schema and stores sensitive information for that schema. Its value will be same as schemaName, if no value is passed.
         */
        appName: string;
        /**
         * A filter to return only a specific column based on column name.
         */
        columnName: string;
        /**
         * The data type of the sensitive column.
         */
        dataType: string;
        /**
         * Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
         */
        dbDefinedChildColumnKeys: string[];
        /**
         * The OCID of the discovery job.
         */
        discoveryJobId: string;
        /**
         * A filter to return only the resources that match the specified discovery type.
         */
        discoveryType: string;
        /**
         * The estimated number of data values the column has in the associated database.
         */
        estimatedDataValueCount: string;
        /**
         * A filter to return the discovery result resources based on the value of their isResultApplied attribute.
         */
        isResultApplied: boolean;
        /**
         * The unique key that identifies the discovery result.
         */
        key: string;
        /**
         * The attributes of a sensitive column that have been modified in the target database. It's populated only in the case of MODIFIED discovery results and shows the new values of the modified attributes.
         */
        modifiedAttributes: outputs.DataSafe.GetDiscoveryJobsResultsDiscoveryJobResultCollectionItemModifiedAttribute[];
        /**
         * A filter to return only items related to a specific object name.
         */
        object: string;
        /**
         * The type of the database object that contains the sensitive column.
         */
        objectType: string;
        /**
         * Unique keys identifying the columns that are parents of the sensitive column. At present, it tracks a single parent only.
         */
        parentColumnKeys: string[];
        /**
         * A filter to return only the resources that match the specified planned action.
         */
        plannedAction: string;
        /**
         * The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
         */
        relationType: string;
        /**
         * Original data values collected for the sensitive column from the associated database. Sample data helps review the column and ensure that it actually contains sensitive data. Note that sample data is retrieved by a data discovery job only if the isSampleDataCollectionEnabled attribute is set to true. At present, only one data value is collected per sensitive column.
         */
        sampleDataValues: string[];
        /**
         * A filter to return only items related to specific schema name.
         */
        schemaName: string;
        /**
         * The unique key that identifies the sensitive column represented by the discovery result.
         */
        sensitiveColumnkey: string;
        /**
         * The OCID of the sensitive type associated with the sensitive column.
         */
        sensitiveTypeId: string;
    }

    export interface GetDiscoveryJobsResultsDiscoveryJobResultCollectionItemModifiedAttribute {
        /**
         * Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
         */
        appDefinedChildColumnKeys: string[];
        /**
         * Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
         */
        dbDefinedChildColumnKeys: string[];
    }

    export interface GetDiscoveryJobsResultsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLibraryMaskingFormatFormatEntry {
        /**
         * The name of the substitution column.
         */
        columnName: string;
        /**
         * The description of the format entry.
         */
        description: string;
        /**
         * The upper bound of the range within which all the original column values fall. The end date must be greater than or equal to the start date.
         */
        endDate: string;
        /**
         * The maximum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be greater than or equal to  the start length.
         */
        endLength: number;
        /**
         * The upper bound of the range within which random decimal numbers should be generated. It must be greater than or equal to the start value. It supports  input of double type.
         */
        endValue: number;
        /**
         * The constant number to be used for masking.
         */
        fixedNumber: number;
        /**
         * The constant string to be used for masking.
         */
        fixedString: string;
        /**
         * One or more reference columns to be used to group column values so that they can be shuffled within their own group. The grouping columns and  the column to be masked must belong to the same table.
         */
        groupingColumns: string[];
        /**
         * The number of characters that should be there in the substring. It should be an integer and greater than zero.
         */
        length: number;
        /**
         * The OCID of the library masking format.
         */
        libraryMaskingFormatId: string;
        /**
         * The post processing function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format. It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        postProcessingFunction: string;
        /**
         * A comma-separated list of values to be used to replace column values. The list can be of strings, numbers, or dates. The data type of each value in the list must be compatible with the data type of the column. The number of entries in the list cannot be more than 999.
         */
        randomLists: string[];
        /**
         * The regular expression to be used for masking. For data with characters in the ASCII character set, providing a regular expression is optional. However, it  is required if the data contains multi-byte characters. If not provided, an  error is returned when a multi-byte character is found.
         */
        regularExpression: string;
        /**
         * The value that should be used to replace the data matching the regular  expression. It can be a fixed string, fixed number, null value, or  SQL expression.
         */
        replaceWith: string;
        /**
         * The name of the schema that contains the substitution column.
         */
        schemaName: string;
        /**
         * The SQL expression to be used to generate the masked values. It can  consist of one or more values, operators, and SQL functions that  evaluate to a value. It can also contain substitution columns from  the same table. Specify the substitution columns within percent (%)  symbols.
         */
        sqlExpression: string;
        /**
         * The lower bound of the range within which all the original column values fall. The start date must be less than or equal to the end date.
         */
        startDate: string;
        /**
         * The minimum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be less than or equal to the  end length.
         */
        startLength: number;
        /**
         * The starting position in the original string from where the substring should be extracted. It can be either a positive or a negative integer. If It's negative, the counting starts from the end of the string.
         */
        startPosition: number;
        /**
         * The lower bound of the range within which random decimal numbers should  be generated. It must be less than or equal to the end value. It supports  input of double type.
         */
        startValue: number;
        /**
         * The name of the table that contains the substitution column.
         */
        tableName: string;
        /**
         * The type of the format entry.
         */
        type: string;
        /**
         * The user-defined function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format.  It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        userDefinedFunction: string;
    }

    export interface GetLibraryMaskingFormatsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLibraryMaskingFormatsLibraryMaskingFormatCollection {
        items: outputs.DataSafe.GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItem[];
    }

    export interface GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItem {
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the format entry.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * An array of format entries. The combined output of all the format entries is used for masking.
         */
        formatEntries: outputs.DataSafe.GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItemFormatEntry[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the library masking format.
         */
        id: string;
        /**
         * An array of OCIDs of the sensitive types compatible with the library masking format.
         */
        sensitiveTypeIds: string[];
        /**
         * Specifies whether the library masking format is user-defined or predefined.
         */
        source: string;
        /**
         * A filter to return only the resources that match the specified lifecycle states.
         */
        state: string;
        /**
         * The date and time the library masking format was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
         */
        timeCreated: string;
        /**
         * The date and time the library masking format was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
         */
        timeUpdated: string;
    }

    export interface GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItemFormatEntry {
        /**
         * The name of the substitution column.
         */
        columnName: string;
        /**
         * The description of the format entry.
         */
        description: string;
        /**
         * The upper bound of the range within which all the original column values fall. The end date must be greater than or equal to the start date.
         */
        endDate: string;
        /**
         * The maximum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be greater than or equal to  the start length.
         */
        endLength: number;
        /**
         * The upper bound of the range within which random decimal numbers should be generated. It must be greater than or equal to the start value. It supports  input of double type.
         */
        endValue: number;
        /**
         * The constant number to be used for masking.
         */
        fixedNumber: number;
        /**
         * The constant string to be used for masking.
         */
        fixedString: string;
        /**
         * One or more reference columns to be used to group column values so that they can be shuffled within their own group. The grouping columns and  the column to be masked must belong to the same table.
         */
        groupingColumns: string[];
        /**
         * The number of characters that should be there in the substring. It should be an integer and greater than zero.
         */
        length: number;
        /**
         * A filter to return only the resources that match the specified library masking format OCID.
         */
        libraryMaskingFormatId: string;
        /**
         * The post processing function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format. It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        postProcessingFunction: string;
        /**
         * A comma-separated list of values to be used to replace column values. The list can be of strings, numbers, or dates. The data type of each value in the list must be compatible with the data type of the column. The number of entries in the list cannot be more than 999.
         */
        randomLists: string[];
        /**
         * The regular expression to be used for masking. For data with characters in the ASCII character set, providing a regular expression is optional. However, it  is required if the data contains multi-byte characters. If not provided, an  error is returned when a multi-byte character is found.
         */
        regularExpression: string;
        /**
         * The value that should be used to replace the data matching the regular  expression. It can be a fixed string, fixed number, null value, or  SQL expression.
         */
        replaceWith: string;
        /**
         * The name of the schema that contains the substitution column.
         */
        schemaName: string;
        /**
         * The SQL expression to be used to generate the masked values. It can  consist of one or more values, operators, and SQL functions that  evaluate to a value. It can also contain substitution columns from  the same table. Specify the substitution columns within percent (%)  symbols.
         */
        sqlExpression: string;
        /**
         * The lower bound of the range within which all the original column values fall. The start date must be less than or equal to the end date.
         */
        startDate: string;
        /**
         * The minimum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be less than or equal to the  end length.
         */
        startLength: number;
        /**
         * The starting position in the original string from where the substring should be extracted. It can be either a positive or a negative integer. If It's negative, the counting starts from the end of the string.
         */
        startPosition: number;
        /**
         * The lower bound of the range within which random decimal numbers should  be generated. It must be less than or equal to the end value. It supports  input of double type.
         */
        startValue: number;
        /**
         * The name of the table that contains the substitution column.
         */
        tableName: string;
        /**
         * The type of the format entry.
         */
        type: string;
        /**
         * The user-defined function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format.  It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        userDefinedFunction: string;
    }

    export interface GetListUserGrantsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetListUserGrantsGrant {
        /**
         * A filter to return only items that match the specified user grant depth level.
         */
        depthLevel: number;
        /**
         * A filter to return only items that match the specified user grant name.
         */
        grantName: string;
        /**
         * The unique key of a user grant.
         */
        key: string;
        /**
         * A filter to return only items that match the specified user privilege category.
         */
        privilegeCategory: string;
        /**
         * A filter to return only items that match the specified privilege grant type.
         */
        privilegeType: string;
    }

    export interface GetMaskingAnalyticItem {
        /**
         * The total count for the aggregation metric.
         */
        count: string;
        /**
         * The scope of analytics data.
         */
        dimensions: outputs.DataSafe.GetMaskingAnalyticItemDimension[];
        /**
         * The name of the aggregation metric.
         */
        metricName: string;
    }

    export interface GetMaskingAnalyticItemDimension {
        /**
         * The OCID of the masking policy..
         */
        policyId: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
    }

    export interface GetMaskingAnalyticsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMaskingAnalyticsMaskingAnalyticsCollection {
        /**
         * An array of masking analytics summary objects.
         */
        items: outputs.DataSafe.GetMaskingAnalyticsMaskingAnalyticsCollectionItem[];
    }

    export interface GetMaskingAnalyticsMaskingAnalyticsCollectionItem {
        /**
         * The total count for the aggregation metric.
         */
        count: string;
        /**
         * The scope of analytics data.
         */
        dimensions: outputs.DataSafe.GetMaskingAnalyticsMaskingAnalyticsCollectionItemDimension[];
        /**
         * The name of the aggregation metric.
         */
        metricName: string;
    }

    export interface GetMaskingAnalyticsMaskingAnalyticsCollectionItemDimension {
        /**
         * The OCID of the masking policy..
         */
        policyId: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
    }

    export interface GetMaskingPoliciesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMaskingPoliciesMaskingColumnMaskingFormat {
        /**
         * A condition that must be true for applying the masking format. It can be any valid  SQL construct that can be used in a SQL predicate. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions.
         */
        condition: string;
        /**
         * The description of the format entry.
         */
        description: string;
        /**
         * An array of format entries. The combined output of all the format entries is  used for masking the column data values.
         */
        formatEntries: outputs.DataSafe.GetMaskingPoliciesMaskingColumnMaskingFormatFormatEntry[];
    }

    export interface GetMaskingPoliciesMaskingColumnMaskingFormatFormatEntry {
        /**
         * The name of the substitution column.
         */
        columnName: string;
        /**
         * The description of the format entry.
         */
        description: string;
        /**
         * The upper bound of the range within which all the original column values fall. The end date must be greater than or equal to the start date.
         */
        endDate: string;
        /**
         * The maximum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be greater than or equal to  the start length.
         */
        endLength: number;
        /**
         * The upper bound of the range within which random decimal numbers should be generated. It must be greater than or equal to the start value. It supports  input of double type.
         */
        endValue: number;
        /**
         * The constant number to be used for masking.
         */
        fixedNumber: number;
        /**
         * The constant string to be used for masking.
         */
        fixedString: string;
        /**
         * One or more reference columns to be used to group column values so that they can be shuffled within their own group. The grouping columns and  the column to be masked must belong to the same table.
         */
        groupingColumns: string[];
        /**
         * The number of characters that should be there in the substring. It should be an integer and greater than zero.
         */
        length: number;
        /**
         * The OCID of the library masking format.
         */
        libraryMaskingFormatId: string;
        /**
         * The post processing function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format. It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        postProcessingFunction: string;
        /**
         * A comma-separated list of values to be used to replace column values. The list can be of strings, numbers, or dates. The data type of each value in the list must be compatible with the data type of the column. The number of entries in the list cannot be more than 999.
         */
        randomLists: string[];
        /**
         * The regular expression to be used for masking. For data with characters in the ASCII character set, providing a regular expression is optional. However, it  is required if the data contains multi-byte characters. If not provided, an  error is returned when a multi-byte character is found.
         */
        regularExpression: string;
        /**
         * The value that should be used to replace the data matching the regular  expression. It can be a fixed string, fixed number, null value, or  SQL expression.
         */
        replaceWith: string;
        /**
         * The name of the schema that contains the database column.
         */
        schemaName: string;
        /**
         * The SQL expression to be used to generate the masked values. It can  consist of one or more values, operators, and SQL functions that  evaluate to a value. It can also contain substitution columns from  the same table. Specify the substitution columns within percent (%)  symbols.
         */
        sqlExpression: string;
        /**
         * The lower bound of the range within which all the original column values fall. The start date must be less than or equal to the end date.
         */
        startDate: string;
        /**
         * The minimum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be less than or equal to the  end length.
         */
        startLength: number;
        /**
         * The starting position in the original string from where the substring should be extracted. It can be either a positive or a negative integer. If It's negative, the counting starts from the end of the string.
         */
        startPosition: number;
        /**
         * The lower bound of the range within which random decimal numbers should  be generated. It must be less than or equal to the end value. It supports  input of double type.
         */
        startValue: number;
        /**
         * The name of the table that contains the substitution column.
         */
        tableName: string;
        /**
         * The type of the format entry.
         */
        type: string;
        /**
         * The user-defined function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format.  It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        userDefinedFunction: string;
    }

    export interface GetMaskingPoliciesMaskingColumnsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMaskingPoliciesMaskingColumnsMaskingColumnCollection {
        items: outputs.DataSafe.GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItem[];
    }

    export interface GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItem {
        /**
         * An array of child columns that are in referential relationship with the masking column.
         */
        childColumns: string[];
        /**
         * A filter to return only a specific column based on column name.
         */
        columnName: string;
        /**
         * A filter to return only resources that match the specified data types.
         */
        dataType: string;
        /**
         * A filter to return the masking column resources based on the value of their isMaskingEnabled attribute. A value of true returns only those columns for which masking is enabled. A value of false returns only those columns for which masking is disabled. Omitting this parameter returns all the masking columns in a masking policy.
         */
        isMaskingEnabled: boolean;
        /**
         * The unique key that identifies the masking column. It's numeric and unique within a masking policy.
         */
        key: string;
        /**
         * Details about the current state of the masking column.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only the resources that match the specified masking column group.
         */
        maskingColumnGroup: string;
        /**
         * An array of masking formats assigned to the masking column.
         */
        maskingFormats: outputs.DataSafe.GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormat[];
        /**
         * The OCID of the masking policy.
         */
        maskingPolicyId: string;
        /**
         * A filter to return only items related to a specific object name.
         */
        object: string;
        /**
         * A filter to return only items related to a specific object type.
         */
        objectType: string;
        /**
         * A filter to return only items related to specific schema name.
         */
        schemaName: string;
        /**
         * A filter to return only items related to a specific sensitive type OCID.
         */
        sensitiveTypeId: string;
        /**
         * The current state of the masking column.
         */
        state: string;
        /**
         * The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormat {
        /**
         * A condition that must be true for applying the masking format. It can be any valid  SQL construct that can be used in a SQL predicate. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions.
         */
        condition: string;
        /**
         * The description of the format entry.
         */
        description: string;
        /**
         * An array of format entries. The combined output of all the format entries is  used for masking the column data values.
         */
        formatEntries: outputs.DataSafe.GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormatFormatEntry[];
    }

    export interface GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormatFormatEntry {
        /**
         * A filter to return only a specific column based on column name.
         */
        columnName: string;
        /**
         * The description of the format entry.
         */
        description: string;
        /**
         * The upper bound of the range within which all the original column values fall. The end date must be greater than or equal to the start date.
         */
        endDate: string;
        /**
         * The maximum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be greater than or equal to  the start length.
         */
        endLength: number;
        /**
         * The upper bound of the range within which random decimal numbers should be generated. It must be greater than or equal to the start value. It supports  input of double type.
         */
        endValue: number;
        /**
         * The constant number to be used for masking.
         */
        fixedNumber: number;
        /**
         * The constant string to be used for masking.
         */
        fixedString: string;
        /**
         * One or more reference columns to be used to group column values so that they can be shuffled within their own group. The grouping columns and  the column to be masked must belong to the same table.
         */
        groupingColumns: string[];
        /**
         * The number of characters that should be there in the substring. It should be an integer and greater than zero.
         */
        length: number;
        /**
         * The OCID of the library masking format.
         */
        libraryMaskingFormatId: string;
        /**
         * The post processing function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format. It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        postProcessingFunction: string;
        /**
         * A comma-separated list of values to be used to replace column values. The list can be of strings, numbers, or dates. The data type of each value in the list must be compatible with the data type of the column. The number of entries in the list cannot be more than 999.
         */
        randomLists: string[];
        /**
         * The regular expression to be used for masking. For data with characters in the ASCII character set, providing a regular expression is optional. However, it  is required if the data contains multi-byte characters. If not provided, an  error is returned when a multi-byte character is found.
         */
        regularExpression: string;
        /**
         * The value that should be used to replace the data matching the regular  expression. It can be a fixed string, fixed number, null value, or  SQL expression.
         */
        replaceWith: string;
        /**
         * A filter to return only items related to specific schema name.
         */
        schemaName: string;
        /**
         * The SQL expression to be used to generate the masked values. It can  consist of one or more values, operators, and SQL functions that  evaluate to a value. It can also contain substitution columns from  the same table. Specify the substitution columns within percent (%)  symbols.
         */
        sqlExpression: string;
        /**
         * The lower bound of the range within which all the original column values fall. The start date must be less than or equal to the end date.
         */
        startDate: string;
        /**
         * The minimum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be less than or equal to the  end length.
         */
        startLength: number;
        /**
         * The starting position in the original string from where the substring should be extracted. It can be either a positive or a negative integer. If It's negative, the counting starts from the end of the string.
         */
        startPosition: number;
        /**
         * The lower bound of the range within which random decimal numbers should  be generated. It must be less than or equal to the end value. It supports  input of double type.
         */
        startValue: number;
        /**
         * The name of the table that contains the substitution column.
         */
        tableName: string;
        /**
         * The type of the format entry.
         */
        type: string;
        /**
         * The user-defined function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format.  It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        userDefinedFunction: string;
    }

    export interface GetMaskingPoliciesMaskingPolicyCollection {
        items: outputs.DataSafe.GetMaskingPoliciesMaskingPolicyCollectionItem[];
    }

    export interface GetMaskingPoliciesMaskingPolicyCollectionItem {
        addMaskingColumnsFromSdmTrigger: number;
        /**
         * The source of masking columns.
         */
        columnSources: outputs.DataSafe.GetMaskingPoliciesMaskingPolicyCollectionItemColumnSource[];
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the masking policy.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the masking policy.
         */
        id: string;
        /**
         * Indicates if the temporary tables created during a masking operation should be dropped after masking. It's enabled by default. Set this attribute to false to preserve the temporary tables. Masking creates temporary tables that map the original sensitive  data values to mask values. By default, these temporary tables are dropped after masking. But, in some cases, you may want  to preserve this information to track how masking changed your data. Note that doing so compromises security. These tables  must be dropped before the database is available for unprivileged users.
         */
        isDropTempTablesEnabled: boolean;
        /**
         * Indicates if redo logging is enabled during a masking operation. It's disabled by default. Set this attribute to true to enable redo logging. By default, masking disables redo logging and flashback logging to purge any original unmasked  data from logs. However, in certain circumstances when you only want to test masking, rollback changes, and retry masking, you could enable logging and use a flashback database to retrieve the original unmasked data after it has been masked.
         */
        isRedoLoggingEnabled: boolean;
        /**
         * Indicates if statistics gathering is enabled. It's enabled by default. Set this attribute to false to disable statistics gathering. The masking process gathers statistics on masked database tables after masking completes.
         */
        isRefreshStatsEnabled: boolean;
        /**
         * Specifies options to enable parallel execution when running data masking. Allowed values are 'NONE' (no parallelism), 'DEFAULT' (the Oracle Database computes the optimum degree of parallelism) or an integer value to be used as the degree of parallelism. Parallel execution helps effectively use multiple CPUsi and improve masking performance. Refer to the Oracle Database parallel execution framework when choosing an explicit degree of parallelism.
         */
        parallelDegree: string;
        /**
         * A post-masking script, which can contain SQL and PL/SQL statements. It's executed after the core masking script generated using the masking policy. It's usually used to perform additional transformation or cleanup work after masking.
         */
        postMaskingScript: string;
        /**
         * A pre-masking script, which can contain SQL and PL/SQL statements. It's executed before  the core masking script generated using the masking policy. It's usually used to perform any preparation or prerequisite work before masking data.
         */
        preMaskingScript: string;
        /**
         * Specifies how to recompile invalid objects post data masking. Allowed values are 'SERIAL' (recompile in serial),  'PARALLEL' (recompile in parallel), 'NONE' (do not recompile). If it's set to PARALLEL, the value of parallelDegree attribute is used.
         */
        recompile: string;
        /**
         * A filter to return only the resources that match the specified lifecycle states.
         */
        state: string;
        /**
         * The date and time the masking policy was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the masking policy was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
         */
        timeUpdated: string;
    }

    export interface GetMaskingPoliciesMaskingPolicyCollectionItemColumnSource {
        /**
         * The source of masking columns.
         */
        columnSource: string;
        /**
         * A filter to return only the resources that match the specified sensitive data model OCID.
         */
        sensitiveDataModelId: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
    }

    export interface GetMaskingPolicyColumnSource {
        /**
         * The source of masking columns.
         */
        columnSource: string;
        /**
         * The OCID of the sensitive data model that's used as the source of masking columns.
         */
        sensitiveDataModelId: string;
        /**
         * The OCID of the target database that's used as the source of masking columns.
         */
        targetId: string;
    }

    export interface GetMaskingReportMaskedColumnsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMaskingReportMaskedColumnsMaskedColumnCollection {
        /**
         * An array of masking column summary objects.
         */
        items: outputs.DataSafe.GetMaskingReportMaskedColumnsMaskedColumnCollectionItem[];
    }

    export interface GetMaskingReportMaskedColumnsMaskedColumnCollectionItem {
        /**
         * A filter to return only a specific column based on column name.
         */
        columnName: string;
        /**
         * The unique key that identifies the masked column. It's numeric and unique within a masking policy.
         */
        key: string;
        /**
         * A filter to return only the resources that match the specified masking column group.
         */
        maskingColumnGroup: string;
        /**
         * The masking format used for masking the column.
         */
        maskingFormatUsed: string;
        /**
         * A filter to return only items related to a specific object name.
         */
        object: string;
        /**
         * A filter to return only items related to a specific object type.
         */
        objectType: string;
        /**
         * The unique key that identifies the parent column of the masked column.
         */
        parentColumnKey: string;
        /**
         * A filter to return only items related to specific schema name.
         */
        schemaName: string;
        /**
         * A filter to return only items related to a specific sensitive type OCID.
         */
        sensitiveTypeId: string;
        /**
         * The total number of values masked in the column.
         */
        totalMaskedValues: string;
    }

    export interface GetMaskingReportsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMaskingReportsMaskedColumnItem {
        /**
         * A filter to return only a specific column based on column name.
         */
        columnName: string;
        /**
         * The unique key that identifies the masked column. It's numeric and unique within a masking policy.
         */
        key: string;
        /**
         * A filter to return only the resources that match the specified masking column group.
         */
        maskingColumnGroup: string;
        /**
         * The masking format used for masking the column.
         */
        maskingFormatUsed: string;
        /**
         * A filter to return only items related to a specific object name.
         */
        object: string;
        /**
         * A filter to return only items related to a specific object type.
         */
        objectType: string;
        /**
         * The unique key that identifies the parent column of the masked column.
         */
        parentColumnKey: string;
        /**
         * A filter to return only items related to specific schema name.
         */
        schemaName: string;
        /**
         * A filter to return only items related to a specific sensitive type OCID.
         */
        sensitiveTypeId: string;
        /**
         * The total number of values masked in the column.
         */
        totalMaskedValues: string;
    }

    export interface GetMaskingReportsMaskingReportCollection {
        items: outputs.DataSafe.GetMaskingReportsMaskingReportCollectionItem[];
    }

    export interface GetMaskingReportsMaskingReportCollectionItem {
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * The OCID of the masking report.
         */
        id: string;
        /**
         * A filter to return only the resources that match the specified masking policy OCID.
         */
        maskingPolicyId: string;
        /**
         * The OCID of the masking work request that resulted in this masking report.
         */
        maskingWorkRequestId: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * The date and time data masking finished, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
         */
        timeMaskingFinished: string;
        /**
         * The date and time data masking started, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
         */
        timeMaskingStarted: string;
        /**
         * The total number of masked columns.
         */
        totalMaskedColumns: string;
        /**
         * The total number of unique objects (tables and editioning views) that contain the masked columns.
         */
        totalMaskedObjects: string;
        /**
         * The total number of unique schemas that contain the masked columns.
         */
        totalMaskedSchemas: string;
        /**
         * The total number of unique sensitive types associated with the masked columns.
         */
        totalMaskedSensitiveTypes: string;
        /**
         * The total number of masked values.
         */
        totalMaskedValues: string;
    }

    export interface GetOnpremConnectorsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOnpremConnectorsOnPremConnector {
        /**
         * Latest available version of the on-premises connector.
         */
        availableVersion: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Created version of the on-premises connector.
         */
        createdVersion: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the on-premises connector.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the on-premises connector.
         */
        id: string;
        /**
         * Details about the current state of the on-premises connector.
         */
        lifecycleDetails: string;
        /**
         * The current state of the on-premises connector.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the on-premises connector was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
    }

    export interface GetReportDefinitionColumnFilter {
        /**
         * An array of expressions based on the operator type. A filter may have one or more expressions.
         */
        expressions: string[];
        /**
         * Name of the column that must be sorted.
         */
        fieldName: string;
        /**
         * Indicates if the filter is enabled. Values can either be 'true' or 'false'.
         */
        isEnabled: boolean;
        /**
         * Indicates if the summary is hidden. Values can either be 'true' or 'false'.
         */
        isHidden: boolean;
        /**
         * Specifies the type of operator that must be applied for example in, eq etc.
         */
        operator: string;
    }

    export interface GetReportDefinitionColumnInfo {
        /**
         * Specifies the data type of the column.
         */
        dataType: string;
        /**
         * Name of the report definition.
         */
        displayName: string;
        /**
         * Specifies the order in which the summary must be displayed.
         */
        displayOrder: number;
        /**
         * Name of the column that must be sorted.
         */
        fieldName: string;
        /**
         * Indicates if the summary is hidden. Values can either be 'true' or 'false'.
         */
        isHidden: boolean;
    }

    export interface GetReportDefinitionColumnSorting {
        /**
         * Name of the column that must be sorted.
         */
        fieldName: string;
        /**
         * Indicates if the column must be sorted in ascending order. Values can either be 'true' or 'false'.
         */
        isAscending: boolean;
        /**
         * Indicates the order at which column must be sorted.
         */
        sortingOrder: number;
    }

    export interface GetReportDefinitionSummary {
        /**
         * Name of the key or count of object.
         */
        countOf: string;
        /**
         * Specifies the order in which the summary must be displayed.
         */
        displayOrder: number;
        /**
         * A comma-delimited string that specifies the names of the fields by which the records must be aggregated to get the summary.
         */
        groupByFieldName: string;
        /**
         * Indicates if the summary is hidden. Values can either be 'true' or 'false'.
         */
        isHidden: boolean;
        /**
         * Name of the report summary.
         */
        name: string;
        /**
         * Additional scim filters used to get the specific summary.
         */
        scimFilter: string;
    }

    export interface GetReportDefinitionsFilter {
        /**
         * Name of the report summary.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetReportDefinitionsReportDefinitionCollection {
        items: outputs.DataSafe.GetReportDefinitionsReportDefinitionCollectionItem[];
    }

    export interface GetReportDefinitionsReportDefinitionCollectionItem {
        /**
         * An optional filter to return only resources that match the specified category.
         */
        category: string;
        /**
         * An array of column filter objects. A column Filter object stores all information about a column filter including field name, an operator, one or more expressions, if the filter is enabled, or if the filter is hidden.
         */
        columnFilters: outputs.DataSafe.GetReportDefinitionsReportDefinitionCollectionItemColumnFilter[];
        /**
         * An array of column objects in the order (left to right) displayed in the report. A column object stores all information about a column, including the name displayed on the UI, corresponding field name in the data source, data type of the column, and column visibility (if the column is visible to the user).
         */
        columnInfos: outputs.DataSafe.GetReportDefinitionsReportDefinitionCollectionItemColumnInfo[];
        /**
         * An array of column sorting objects. Each column sorting object stores the column name to be sorted and if the sorting is in ascending order; sorting is done by the first column in the array, then by the second column in the array, etc.
         */
        columnSortings: outputs.DataSafe.GetReportDefinitionsReportDefinitionCollectionItemColumnSorting[];
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Specifies the name of a resource that provides data for the report. For example  alerts, events.
         */
        dataSource: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A description of the report definition.
         */
        description: string;
        /**
         * The name of the report definition to query.
         */
        displayName: string;
        /**
         * Specifies the order in which the summary must be displayed.
         */
        displayOrder: number;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the report definition.
         */
        id: string;
        /**
         * A boolean flag indicating to list seeded report definitions. Set this parameter to get list of seeded report definitions.
         */
        isSeeded: boolean;
        /**
         * The OCID of the parent report definition. In the case of seeded report definition, this is same as definition OCID.
         */
        parentId: string;
        /**
         * Additional scim filters used to get the specific summary.
         */
        scimFilter: string;
        /**
         * An optional filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * An array of report summary objects in the order (left to right)  displayed in the report.  A  report summary object stores all information about summary of report to be displayed, including the name displayed on UI, the display order, corresponding group by and count of values, summary visibility (if the summary is visible to user).
         */
        summaries: outputs.DataSafe.GetReportDefinitionsReportDefinitionCollectionItemSummary[];
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Specifies the time at which the report definition was created.
         */
        timeCreated: string;
        /**
         * The date and time of the report definition update in Data Safe.
         */
        timeUpdated: string;
    }

    export interface GetReportDefinitionsReportDefinitionCollectionItemColumnFilter {
        /**
         * An array of expressions based on the operator type. A filter may have one or more expressions.
         */
        expressions: string[];
        /**
         * Name of the column that must be sorted.
         */
        fieldName: string;
        /**
         * Indicates if the filter is enabled. Values can either be 'true' or 'false'.
         */
        isEnabled: boolean;
        /**
         * Indicates if the summary is hidden. Values can either be 'true' or 'false'.
         */
        isHidden: boolean;
        /**
         * Specifies the type of operator that must be applied for example in, eq etc.
         */
        operator: string;
    }

    export interface GetReportDefinitionsReportDefinitionCollectionItemColumnInfo {
        /**
         * Specifies the data type of the column.
         */
        dataType: string;
        /**
         * The name of the report definition to query.
         */
        displayName: string;
        /**
         * Specifies the order in which the summary must be displayed.
         */
        displayOrder: number;
        /**
         * Name of the column that must be sorted.
         */
        fieldName: string;
        /**
         * Indicates if the summary is hidden. Values can either be 'true' or 'false'.
         */
        isHidden: boolean;
    }

    export interface GetReportDefinitionsReportDefinitionCollectionItemColumnSorting {
        /**
         * Name of the column that must be sorted.
         */
        fieldName: string;
        /**
         * Indicates if the column must be sorted in ascending order. Values can either be 'true' or 'false'.
         */
        isAscending: boolean;
        /**
         * Indicates the order at which column must be sorted.
         */
        sortingOrder: number;
    }

    export interface GetReportDefinitionsReportDefinitionCollectionItemSummary {
        /**
         * Name of the key or count of object.
         */
        countOf: string;
        /**
         * Specifies the order in which the summary must be displayed.
         */
        displayOrder: number;
        /**
         * A comma-delimited string that specifies the names of the fields by which the records must be aggregated to get the summary.
         */
        groupByFieldName: string;
        /**
         * Indicates if the summary is hidden. Values can either be 'true' or 'false'.
         */
        isHidden: boolean;
        /**
         * Name of the report summary.
         */
        name: string;
        /**
         * Additional scim filters used to get the specific summary.
         */
        scimFilter: string;
    }

    export interface GetReportsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetReportsReportCollection {
        items: outputs.DataSafe.GetReportsReportCollectionItem[];
    }

    export interface GetReportsReportCollectionItem {
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Specifies a description of the report.
         */
        description: string;
        /**
         * The name of the report definition to query.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the report.
         */
        id: string;
        /**
         * Specifies the format of report to be excel or pdf
         */
        mimeType: string;
        /**
         * The ID of the report definition to filter the list of reports
         */
        reportDefinitionId: string;
        /**
         * An optional filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Specifies the time at which the report was generated.
         */
        timeGenerated: string;
    }

    export interface GetSecurityAssessmentComparisonTarget {
        /**
         * A comparison between findings belonging to Auditing category.
         */
        auditings: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuditing[];
        /**
         * A comparison between findings belonging to Authorization Control category.
         */
        authorizationControls: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuthorizationControl[];
        /**
         * The OCID of the target that is used as a baseline in this comparison.
         */
        baselineTargetId: string;
        /**
         * The OCID of the target to be compared against the baseline target.
         */
        currentTargetId: string;
        /**
         * Comparison between findings belonging to Data Encryption category.
         */
        dataEncryptions: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDataEncryption[];
        /**
         * Comparison between findings belonging to Database Configuration category.
         */
        dbConfigurations: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDbConfiguration[];
        /**
         * Comparison between findings belonging to Fine-Grained Access Control category.
         */
        fineGrainedAccessControls: outputs.DataSafe.GetSecurityAssessmentComparisonTargetFineGrainedAccessControl[];
        /**
         * Comparison between findings belonging to Privileges and Roles category.
         */
        privilegesAndRoles: outputs.DataSafe.GetSecurityAssessmentComparisonTargetPrivilegesAndRole[];
        /**
         * Comparison between findings belonging to User Accounts category.
         */
        userAccounts: outputs.DataSafe.GetSecurityAssessmentComparisonTargetUserAccount[];
    }

    export interface GetSecurityAssessmentComparisonTargetAuditing {
        /**
         * This array identifies the items that are present in the current assessment, but are missing from the baseline.
         */
        addedItems: string[];
        /**
         * The particular finding reported by the security assessment.
         */
        baselines: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuditingBaseline[];
        /**
         * The particular finding reported by the security assessment.
         */
        currents: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuditingCurrent[];
        /**
         * This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
         */
        modifiedItems: string[];
        /**
         * This array identifies the items that are present in the baseline, but are missing from the current assessment.
         */
        removedItems: string[];
        /**
         * The severity of this diff.
         */
        severity: string;
    }

    export interface GetSecurityAssessmentComparisonTargetAuditingBaseline {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuditingBaselineReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetAuditingBaselineReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetAuditingCurrent {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuditingCurrentReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetAuditingCurrentReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetAuthorizationControl {
        /**
         * This array identifies the items that are present in the current assessment, but are missing from the baseline.
         */
        addedItems: string[];
        /**
         * The particular finding reported by the security assessment.
         */
        baselines: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuthorizationControlBaseline[];
        /**
         * The particular finding reported by the security assessment.
         */
        currents: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuthorizationControlCurrent[];
        /**
         * This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
         */
        modifiedItems: string[];
        /**
         * This array identifies the items that are present in the baseline, but are missing from the current assessment.
         */
        removedItems: string[];
        /**
         * The severity of this diff.
         */
        severity: string;
    }

    export interface GetSecurityAssessmentComparisonTargetAuthorizationControlBaseline {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuthorizationControlBaselineReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetAuthorizationControlBaselineReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetAuthorizationControlCurrent {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetAuthorizationControlCurrentReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetAuthorizationControlCurrentReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDataEncryption {
        /**
         * This array identifies the items that are present in the current assessment, but are missing from the baseline.
         */
        addedItems: string[];
        /**
         * The particular finding reported by the security assessment.
         */
        baselines: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDataEncryptionBaseline[];
        /**
         * The particular finding reported by the security assessment.
         */
        currents: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDataEncryptionCurrent[];
        /**
         * This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
         */
        modifiedItems: string[];
        /**
         * This array identifies the items that are present in the baseline, but are missing from the current assessment.
         */
        removedItems: string[];
        /**
         * The severity of this diff.
         */
        severity: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDataEncryptionBaseline {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDataEncryptionBaselineReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDataEncryptionBaselineReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDataEncryptionCurrent {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDataEncryptionCurrentReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDataEncryptionCurrentReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDbConfiguration {
        /**
         * This array identifies the items that are present in the current assessment, but are missing from the baseline.
         */
        addedItems: string[];
        /**
         * The particular finding reported by the security assessment.
         */
        baselines: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDbConfigurationBaseline[];
        /**
         * The particular finding reported by the security assessment.
         */
        currents: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDbConfigurationCurrent[];
        /**
         * This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
         */
        modifiedItems: string[];
        /**
         * This array identifies the items that are present in the baseline, but are missing from the current assessment.
         */
        removedItems: string[];
        /**
         * The severity of this diff.
         */
        severity: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDbConfigurationBaseline {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDbConfigurationBaselineReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDbConfigurationBaselineReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDbConfigurationCurrent {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetDbConfigurationCurrentReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetDbConfigurationCurrentReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetFineGrainedAccessControl {
        /**
         * This array identifies the items that are present in the current assessment, but are missing from the baseline.
         */
        addedItems: string[];
        /**
         * The particular finding reported by the security assessment.
         */
        baselines: outputs.DataSafe.GetSecurityAssessmentComparisonTargetFineGrainedAccessControlBaseline[];
        /**
         * The particular finding reported by the security assessment.
         */
        currents: outputs.DataSafe.GetSecurityAssessmentComparisonTargetFineGrainedAccessControlCurrent[];
        /**
         * This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
         */
        modifiedItems: string[];
        /**
         * This array identifies the items that are present in the baseline, but are missing from the current assessment.
         */
        removedItems: string[];
        /**
         * The severity of this diff.
         */
        severity: string;
    }

    export interface GetSecurityAssessmentComparisonTargetFineGrainedAccessControlBaseline {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetFineGrainedAccessControlBaselineReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetFineGrainedAccessControlBaselineReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetFineGrainedAccessControlCurrent {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetFineGrainedAccessControlCurrentReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetFineGrainedAccessControlCurrentReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetPrivilegesAndRole {
        /**
         * This array identifies the items that are present in the current assessment, but are missing from the baseline.
         */
        addedItems: string[];
        /**
         * The particular finding reported by the security assessment.
         */
        baselines: outputs.DataSafe.GetSecurityAssessmentComparisonTargetPrivilegesAndRoleBaseline[];
        /**
         * The particular finding reported by the security assessment.
         */
        currents: outputs.DataSafe.GetSecurityAssessmentComparisonTargetPrivilegesAndRoleCurrent[];
        /**
         * This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
         */
        modifiedItems: string[];
        /**
         * This array identifies the items that are present in the baseline, but are missing from the current assessment.
         */
        removedItems: string[];
        /**
         * The severity of this diff.
         */
        severity: string;
    }

    export interface GetSecurityAssessmentComparisonTargetPrivilegesAndRoleBaseline {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetPrivilegesAndRoleBaselineReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetPrivilegesAndRoleBaselineReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetPrivilegesAndRoleCurrent {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetPrivilegesAndRoleCurrentReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetPrivilegesAndRoleCurrentReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetUserAccount {
        /**
         * This array identifies the items that are present in the current assessment, but are missing from the baseline.
         */
        addedItems: string[];
        /**
         * The particular finding reported by the security assessment.
         */
        baselines: outputs.DataSafe.GetSecurityAssessmentComparisonTargetUserAccountBaseline[];
        /**
         * The particular finding reported by the security assessment.
         */
        currents: outputs.DataSafe.GetSecurityAssessmentComparisonTargetUserAccountCurrent[];
        /**
         * This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
         */
        modifiedItems: string[];
        /**
         * This array identifies the items that are present in the baseline, but are missing from the current assessment.
         */
        removedItems: string[];
        /**
         * The severity of this diff.
         */
        severity: string;
    }

    export interface GetSecurityAssessmentComparisonTargetUserAccountBaseline {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetUserAccountBaselineReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetUserAccountBaselineReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentComparisonTargetUserAccountCurrent {
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * A unique identifier for the finding. This is common for the finding across targets.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, STIG rule, or related to a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentComparisonTargetUserAccountCurrentReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * The severity of this diff.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentComparisonTargetUserAccountCurrentReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentFindingFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSecurityAssessmentFindingFinding {
        assessmentId: string;
        details: string[];
        key: string;
        references: outputs.DataSafe.GetSecurityAssessmentFindingFindingReference[];
        remarks: string;
        severity: string;
        summary: string;
        targetId: string;
        title: string;
    }

    export interface GetSecurityAssessmentFindingFindingReference {
        cis: string;
        gdpr: string;
        stig: string;
    }

    export interface GetSecurityAssessmentFindingsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSecurityAssessmentFindingsFinding {
        /**
         * The OCID of the assessment that generated this finding.
         */
        assessmentId: string;
        /**
         * The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
         */
        details: string[];
        /**
         * The unique finding key. This is a system-generated identifier. To get the finding key for a finding, use ListFindings.
         */
        key: string;
        /**
         * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
         */
        references: outputs.DataSafe.GetSecurityAssessmentFindingsFindingReference[];
        /**
         * The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         */
        remarks: string;
        /**
         * A filter to return only findings of a particular risk level.
         */
        severity: string;
        /**
         * The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
         */
        summary: string;
        /**
         * The OCID of the target database.
         */
        targetId: string;
        /**
         * The short title for the finding.
         */
        title: string;
    }

    export interface GetSecurityAssessmentFindingsFindingReference {
        /**
         * Relevant section from CIS.
         */
        cis: string;
        /**
         * Relevant section from GDPR.
         */
        gdpr: string;
        /**
         * Relevant section from STIG.
         */
        stig: string;
    }

    export interface GetSecurityAssessmentStatistic {
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        advisories: outputs.DataSafe.GetSecurityAssessmentStatisticAdvisory[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        evaluates: outputs.DataSafe.GetSecurityAssessmentStatisticEvaluate[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        highRisks: outputs.DataSafe.GetSecurityAssessmentStatisticHighRisk[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        lowRisks: outputs.DataSafe.GetSecurityAssessmentStatisticLowRisk[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        mediumRisks: outputs.DataSafe.GetSecurityAssessmentStatisticMediumRisk[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        passes: outputs.DataSafe.GetSecurityAssessmentStatisticPass[];
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
    }

    export interface GetSecurityAssessmentStatisticAdvisory {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentStatisticEvaluate {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentStatisticHighRisk {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentStatisticLowRisk {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentStatisticMediumRisk {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentStatisticPass {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSecurityAssessmentsSecurityAssessment {
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the security assessment.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the security assessment.
         */
        id: string;
        /**
         * List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
         */
        ignoredAssessmentIds: string[];
        /**
         * List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
         */
        ignoredTargets: string[];
        /**
         * A filter to return only security assessments that are set as baseline.
         */
        isBaseline: boolean;
        /**
         * Indicates whether or not the security assessment deviates from the baseline.
         */
        isDeviatedFromBaseline: boolean;
        /**
         * The OCID of the baseline against which the latest security assessment was compared.
         */
        lastComparedBaselineId: string;
        /**
         * Details about the current state of the security assessment.
         */
        lifecycleDetails: string;
        /**
         * The summary of findings for the security assessment.
         */
        link: string;
        /**
         * Schedule of the assessment that runs periodically in the specified format: - <version-string>;<version-specific-schedule>
         */
        schedule: string;
        /**
         * The OCID of the security assessment that is responsible for creating this scheduled save assessment.
         */
        scheduleSecurityAssessmentId: string;
        /**
         * A filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * Statistics showing the number of findings for each category grouped by risk levels for all the targets in the specified security assessment.
         */
        statistics: outputs.DataSafe.GetSecurityAssessmentsSecurityAssessmentStatistic[];
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * Array of database target OCIDs.
         */
        targetIds: string[];
        /**
         * The version of the target database.
         */
        targetVersion: string;
        /**
         * The date and time when the security assessment was created. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time when the security assessment was last updated. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
        /**
         * A filter to return only security asessments that were created by either user or system.
         */
        triggeredBy: string;
        /**
         * A filter to return only items that match the specified security assessment type.
         */
        type: string;
    }

    export interface GetSecurityAssessmentsSecurityAssessmentStatistic {
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        advisories: outputs.DataSafe.GetSecurityAssessmentsSecurityAssessmentStatisticAdvisory[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        evaluates: outputs.DataSafe.GetSecurityAssessmentsSecurityAssessmentStatisticEvaluate[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        highRisks: outputs.DataSafe.GetSecurityAssessmentsSecurityAssessmentStatisticHighRisk[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        lowRisks: outputs.DataSafe.GetSecurityAssessmentsSecurityAssessmentStatisticLowRisk[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        mediumRisks: outputs.DataSafe.GetSecurityAssessmentsSecurityAssessmentStatisticMediumRisk[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        passes: outputs.DataSafe.GetSecurityAssessmentsSecurityAssessmentStatisticPass[];
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
    }

    export interface GetSecurityAssessmentsSecurityAssessmentStatisticAdvisory {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentsSecurityAssessmentStatisticEvaluate {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentsSecurityAssessmentStatisticHighRisk {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentsSecurityAssessmentStatisticLowRisk {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentsSecurityAssessmentStatisticMediumRisk {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSecurityAssessmentsSecurityAssessmentStatisticPass {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface GetSensitiveDataModelsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSensitiveDataModelsSensitiveColumnsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSensitiveDataModelsSensitiveColumnsSensitiveColumnCollection {
        items: outputs.DataSafe.GetSensitiveDataModelsSensitiveColumnsSensitiveColumnCollectionItem[];
    }

    export interface GetSensitiveDataModelsSensitiveColumnsSensitiveColumnCollectionItem {
        /**
         * Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
         */
        appDefinedChildColumnKeys: string[];
        /**
         * The name of the application associated with the sensitive column. It's useful when the application name is different from the schema name. Otherwise, it can be ignored.
         */
        appName: string;
        /**
         * The composite key groups to which the sensitive column belongs. If the column is part of a composite key, it's assigned a column group. It helps identify and manage referential relationships that involve composite keys.
         */
        columnGroups: string[];
        /**
         * A filter to return only a specific column based on column name.
         */
        columnName: string;
        /**
         * A filter to return only the resources that match the specified data types.
         */
        dataType: string;
        /**
         * Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
         */
        dbDefinedChildColumnKeys: string[];
        /**
         * The estimated number of data values the column has in the associated database.
         */
        estimatedDataValueCount: string;
        /**
         * The unique key that identifies the sensitive column. It's numeric and unique within a sensitive data model.
         */
        key: string;
        /**
         * Details about the current state of the sensitive column.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only items related to a specific object name.
         */
        object: string;
        /**
         * A filter to return only items related to a specific object type.
         */
        objectType: string;
        /**
         * Unique keys identifying the columns that are parents of the sensitive column. At present, it tracks a single parent only.
         */
        parentColumnKeys: string[];
        /**
         * A filter to return sensitive columns based on their relationship with their parent columns. If set to NONE, it returns the sensitive columns that do not have any parent. The response includes the parent columns as well as the independent columns that are not in any relationship. If set to APP_DEFINED, it returns all the child columns that have application-level (non-dictionary) relationship with their parents. If set to DB_DEFINED, it returns all the child columns that have database-level (dictionary-defined) relationship with their parents.
         */
        relationType: string;
        /**
         * Original data values collected for the sensitive column from the associated database. Sample data helps review the column and ensure that it actually contains sensitive data. Note that sample data is retrieved by a data discovery job only if the isSampleDataCollectionEnabled attribute is set to true. At present, only one data value is collected per sensitive column.
         */
        sampleDataValues: string[];
        /**
         * A filter to return only items related to specific schema name.
         */
        schemaName: string;
        /**
         * The OCID of the sensitive data model.
         */
        sensitiveDataModelId: string;
        /**
         * A filter to return only the sensitive columns that are associated with one of the sensitive types identified by the specified OCIDs.
         */
        sensitiveTypeId: string;
        /**
         * The source of the sensitive column. DISCOVERY indicates that the column was added to the sensitive data model using a data discovery job. MANUAL indicates that the column was added manually.
         */
        source: string;
        /**
         * The current state of the sensitive column.
         */
        state: string;
        /**
         * A filter to return only the sensitive columns that match the specified status.
         */
        status: string;
        /**
         * The date and time, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339), the sensitive column was created in the sensitive data model.
         */
        timeCreated: string;
        /**
         * The date and time, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339), the sensitive column was last updated in the sensitive data model.
         */
        timeUpdated: string;
    }

    export interface GetSensitiveDataModelsSensitiveDataModelCollection {
        items: outputs.DataSafe.GetSensitiveDataModelsSensitiveDataModelCollectionItem[];
    }

    export interface GetSensitiveDataModelsSensitiveDataModelCollectionItem {
        /**
         * The application suite name identifying a collection of applications. The default value is GENERIC. It's useful only if maintaining a sensitive data model for a suite of applications.
         */
        appSuiteName: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the sensitive data model.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the sensitive data model.
         */
        id: string;
        /**
         * Indicates if data discovery jobs should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It's disabled by default and should be used only if there is a need to identify application-level relationships.
         */
        isAppDefinedRelationDiscoveryEnabled: boolean;
        /**
         * Indicates if all the schemas in the associated target database should be scanned by data discovery jobs. If it's set to true, the schemasForDiscovery attribute is ignored and all schemas are used for data discovery.
         */
        isIncludeAllSchemas: boolean;
        /**
         * Indicates if all the existing sensitive types should be used by data discovery jobs.If it's set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used for data discovery.
         */
        isIncludeAllSensitiveTypes: boolean;
        /**
         * Indicates if data discovery jobs should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it's disabled by default and should be used only if it's acceptable to store sample data in Data Safe's repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
         */
        isSampleDataCollectionEnabled: boolean;
        /**
         * The schemas to be scanned by data discovery jobs.
         */
        schemasForDiscoveries: string[];
        /**
         * The OCIDs of the sensitive types to be used by data discovery jobs.
         */
        sensitiveTypeIdsForDiscoveries: string[];
        /**
         * A filter to return only the resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * The date and time the sensitive data model was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the sensitive data model was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetSensitiveTypesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSensitiveTypesSensitiveTypeCollection {
        items: outputs.DataSafe.GetSensitiveTypesSensitiveTypeCollectionItem[];
    }

    export interface GetSensitiveTypesSensitiveTypeCollectionItem {
        /**
         * A regular expression to be used by data discovery for matching column comments.
         */
        commentPattern: string;
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * A regular expression to be used by data discovery for matching column data values.
         */
        dataPattern: string;
        /**
         * A filter to return only the sensitive types that have the default masking format identified by the specified OCID.
         */
        defaultMaskingFormatId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the sensitive type.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * A filter to return the sensitive type resources based on the value of their entityType attribute.
         */
        entityType: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the sensitive type.
         */
        id: string;
        /**
         * A regular expression to be used by data discovery for matching column names.
         */
        namePattern: string;
        /**
         * A filter to return only the sensitive types that are children of the sensitive category identified by the specified OCID.
         */
        parentCategoryId: string;
        /**
         * The search type indicating how the column name, comment and data patterns should be used by data discovery. [Learn more](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/sensitive-types.html#GUID-1D1AD98E-B93F-4FF2-80AE-CB7D8A14F6CC).
         */
        searchType: string;
        /**
         * The short name of the sensitive type.
         */
        shortName: string;
        /**
         * Specifies whether the sensitive type is user-defined or predefined.
         */
        source: string;
        /**
         * A filter to return only the resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the sensitive type was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the sensitive type was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetTargetAlertPolicyAssociationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTargetAlertPolicyAssociationsTargetAlertPolicyAssociationCollection {
        items: outputs.DataSafe.GetTargetAlertPolicyAssociationsTargetAlertPolicyAssociationCollectionItem[];
    }

    export interface GetTargetAlertPolicyAssociationsTargetAlertPolicyAssociationCollectionItem {
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Describes the target-alert policy association.
         */
        description: string;
        /**
         * The display name of the target-alert policy association.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the target-alert policy association.
         */
        id: string;
        /**
         * Indicates if the target-alert policy association is enabled or disabled.
         */
        isEnabled: boolean;
        /**
         * The OCID of the alert policy.
         */
        policyId: string;
        /**
         * An optional filter to return only alert policies that have the given life-cycle state.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * Creation date and time of the alert policy, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Last date and time the alert policy was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetTargetDatabaseConnectionOption {
        /**
         * The connection type used to connect to the database. Allowed values:
         * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
         * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
         */
        connectionType: string;
        /**
         * The OCID of the Data Safe private endpoint.
         */
        datasafePrivateEndpointId: string;
        /**
         * The OCID of the on-premises connector.
         */
        onPremConnectorId: string;
    }

    export interface GetTargetDatabaseCredential {
        /**
         * The password of the database user.
         */
        password: string;
        /**
         * The database user name.
         */
        userName: string;
    }

    export interface GetTargetDatabaseDatabaseDetail {
        /**
         * The OCID of the autonomous database registered as a target database in Data Safe.
         */
        autonomousDatabaseId: string;
        /**
         * The database type.
         */
        databaseType: string;
        /**
         * The OCID of the cloud database system registered as a target database in Data Safe.
         */
        dbSystemId: string;
        /**
         * The infrastructure type the database is running on.
         */
        infrastructureType: string;
        /**
         * The OCID of the compute instance on which the database is running.
         */
        instanceId: string;
        /**
         * The list of database host IP Addresses. Fully qualified domain names can be used if connectionType is 'ONPREM_CONNECTOR'.
         */
        ipAddresses: string[];
        /**
         * The port number of the database listener.
         */
        listenerPort: number;
        /**
         * The service name of the database registered as target database.
         */
        serviceName: string;
        /**
         * The OCID of the VM cluster in which the database is running.
         */
        vmClusterId: string;
    }

    export interface GetTargetDatabaseRoleFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTargetDatabaseRoleRole {
        authenticationType: string;
        isCommon: boolean;
        isImplicit: boolean;
        isInherited: boolean;
        isOracleMaintained: boolean;
        isPasswordRequired: boolean;
        roleName: string;
    }

    export interface GetTargetDatabaseRolesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTargetDatabaseRolesRole {
        /**
         * A filter to return roles based on authentication type.
         */
        authenticationType: string;
        /**
         * Is the role common.
         */
        isCommon: boolean;
        /**
         * Is the role implicit.
         */
        isImplicit: boolean;
        /**
         * Is the role inherited.
         */
        isInherited: boolean;
        /**
         * A filter to return roles based on whether they are maintained by oracle or not.
         */
        isOracleMaintained: boolean;
        /**
         * Is password required.
         */
        isPasswordRequired: boolean;
        /**
         * A filter to return only a specific role based on role name.
         */
        roleName: string;
    }

    export interface GetTargetDatabaseTlsConfig {
        /**
         * The format of the certificate store.
         */
        certificateStoreType: string;
        /**
         * Base64 encoded string of key store file content.
         */
        keyStoreContent: string;
        /**
         * Status to represent whether the database connection is TLS enabled or not.
         */
        status: string;
        /**
         * The password to read the trust store and key store files, if they are password protected.
         */
        storePassword: string;
        /**
         * Base64 encoded string of trust store file content.
         */
        trustStoreContent: string;
    }

    export interface GetTargetDatabasesColumnsColumn {
        /**
         * Character length.
         */
        characterLength: number;
        /**
         * A filter to return only a specific column based on column name.
         */
        columnName: string;
        /**
         * Data type of the column.
         */
        dataType: string;
        /**
         * Length of the data represented by the column.
         */
        length: string;
        /**
         * Precision of the column.
         */
        precision: number;
        /**
         * Scale of the column.
         */
        scale: number;
        /**
         * A filter to return only items related to specific schema name.
         */
        schemaName: string;
        /**
         * A filter to return only items related to specific table name.
         */
        tableName: string;
    }

    export interface GetTargetDatabasesColumnsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTargetDatabasesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTargetDatabasesSchemasFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTargetDatabasesSchemasSchema {
        /**
         * A filter to return only items related to specific type of schema.
         */
        isOracleMaintained: boolean;
        /**
         * A filter to return only items related to specific schema name.
         */
        schemaName: string;
    }

    export interface GetTargetDatabasesTablesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTargetDatabasesTablesTable {
        /**
         * A filter to return only items related to specific schema name.
         */
        schemaName: string;
        /**
         * A filter to return only items related to specific table name.
         */
        tableName: string;
    }

    export interface GetTargetDatabasesTargetDatabase {
        /**
         * The OCIDs of associated resources like Database, Data Safe private endpoint etc.
         */
        associatedResourceIds: string[];
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Types of connection supported by Data Safe.
         */
        connectionOptions: outputs.DataSafe.GetTargetDatabasesTargetDatabaseConnectionOption[];
        /**
         * The database credentials required for Data Safe to connect to the database.
         */
        credentials: outputs.DataSafe.GetTargetDatabasesTargetDatabaseCredential[];
        /**
         * Details of the database for the registration in Data Safe. To choose applicable database type and infrastructure type refer to  https://confluence.oci.oraclecorp.com/display/DATASAFE/Target+V2+Design
         */
        databaseDetails: outputs.DataSafe.GetTargetDatabasesTargetDatabaseDatabaseDetail[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the target database in Data Safe.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Data Safe target database.
         */
        id: string;
        /**
         * Details about the current state of the target database in Data Safe.
         */
        lifecycleDetails: string;
        /**
         * A filter to return the target databases that matches the current state of the target database.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the database was registered in Data Safe and created as a target database in Data Safe.
         */
        timeCreated: string;
        /**
         * The date and time of the target database update in Data Safe.
         */
        timeUpdated: string;
        /**
         * The details required to establish a TLS enabled connection.
         */
        tlsConfigs: outputs.DataSafe.GetTargetDatabasesTargetDatabaseTlsConfig[];
    }

    export interface GetTargetDatabasesTargetDatabaseConnectionOption {
        /**
         * The connection type used to connect to the database. Allowed values:
         * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
         * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
         */
        connectionType: string;
        /**
         * The OCID of the Data Safe private endpoint.
         */
        datasafePrivateEndpointId: string;
        /**
         * The OCID of the on-premises connector.
         */
        onPremConnectorId: string;
    }

    export interface GetTargetDatabasesTargetDatabaseCredential {
        /**
         * The password of the database user.
         */
        password: string;
        /**
         * The database user name.
         */
        userName: string;
    }

    export interface GetTargetDatabasesTargetDatabaseDatabaseDetail {
        /**
         * The OCID of the autonomous database registered as a target database in Data Safe.
         */
        autonomousDatabaseId: string;
        /**
         * A filter to return target databases that match the database type of the target database.
         */
        databaseType: string;
        /**
         * The OCID of the cloud database system registered as a target database in Data Safe.
         */
        dbSystemId: string;
        /**
         * A filter to return target databases that match the infrastructure type of the target database.
         */
        infrastructureType: string;
        /**
         * The OCID of the compute instance on which the database is running.
         */
        instanceId: string;
        /**
         * The list of database host IP Addresses. Fully qualified domain names can be used if connectionType is 'ONPREM_CONNECTOR'.
         */
        ipAddresses: string[];
        /**
         * The port number of the database listener.
         */
        listenerPort: number;
        /**
         * The service name of the database registered as target database.
         */
        serviceName: string;
        /**
         * The OCID of the VM cluster in which the database is running.
         */
        vmClusterId: string;
    }

    export interface GetTargetDatabasesTargetDatabaseTlsConfig {
        /**
         * The format of the certificate store.
         */
        certificateStoreType: string;
        /**
         * Base64 encoded string of key store file content.
         */
        keyStoreContent: string;
        /**
         * Status to represent whether the database connection is TLS enabled or not.
         */
        status: string;
        /**
         * The password to read the trust store and key store files, if they are password protected.
         */
        storePassword: string;
        /**
         * Base64 encoded string of trust store file content.
         */
        trustStoreContent: string;
    }

    export interface GetUserAssessmentComparisonSummary {
        baselines: outputs.DataSafe.GetUserAssessmentComparisonSummaryBaseline[];
        currents: outputs.DataSafe.GetUserAssessmentComparisonSummaryCurrent[];
        status: string;
    }

    export interface GetUserAssessmentComparisonSummaryBaseline {
        targetId: string;
        /**
         * The OCID of the user assessment.
         */
        userAssessmentId: string;
    }

    export interface GetUserAssessmentComparisonSummaryCurrent {
        targetId: string;
        /**
         * The OCID of the user assessment.
         */
        userAssessmentId: string;
    }

    export interface GetUserAssessmentIgnoredTarget {
        lifecycleState: string;
        targetId: string;
        /**
         * The OCID of the user assessment.
         */
        userAssessmentId: string;
    }

    export interface GetUserAssessmentUserAnalyticsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetUserAssessmentUserAnalyticsUserAggregation {
        /**
         * The array of user aggregation data.
         */
        items: outputs.DataSafe.GetUserAssessmentUserAnalyticsUserAggregationItem[];
    }

    export interface GetUserAssessmentUserAnalyticsUserAggregationItem {
    }

    export interface GetUserAssessmentUsersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetUserAssessmentUsersUser {
        /**
         * A filter to return only items that match the specified account status.
         */
        accountStatus: string;
        /**
         * The admin roles granted to the user.
         */
        adminRoles: string[];
        /**
         * A filter to return only items that match the specified authentication type.
         */
        authenticationType: string;
        /**
         * The unique user key. This is a system-generated identifier. Use ListUsers to get the user key for a user.
         */
        key: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * The date and time when the user last logged in, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeLastLogin: string;
        /**
         * The date and time when the user password was last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timePasswordChanged: string;
        /**
         * The date and time when the user was created in the database, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUserCreated: string;
        /**
         * A filter to return only items that match the specified user category.
         */
        userCategory: string;
        /**
         * A filter to return only items that match the specified user name.
         */
        userName: string;
        /**
         * The user profile name.
         */
        userProfile: string;
        /**
         * The user type, which can be a combination of the following:
         */
        userTypes: string[];
    }

    export interface GetUserAssessmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetUserAssessmentsIgnoredTarget {
        lifecycleState: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        userAssessmentId: string;
    }

    export interface GetUserAssessmentsUserAssessment {
        /**
         * A filter to return only resources that match the specified compartment OCID.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the user assessment.
         */
        description: string;
        /**
         * A filter to return only resources that match the specified display name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the user assessment.
         */
        id: string;
        /**
         * List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
         */
        ignoredAssessmentIds: string[];
        /**
         * List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
         */
        ignoredTargets: outputs.DataSafe.GetUserAssessmentsUserAssessmentIgnoredTarget[];
        /**
         * A filter to return only user assessments that are set as baseline.
         */
        isBaseline: boolean;
        /**
         * Indicates if the user assessment deviates from the baseline.
         */
        isDeviatedFromBaseline: boolean;
        /**
         * The OCID of the last user assessment baseline against which the latest assessment was compared.
         */
        lastComparedBaselineId: string;
        /**
         * Details about the current state of the user assessment.
         */
        lifecycleDetails: string;
        /**
         * Schedule of the assessment that runs periodically in this specified format: <version-string>;<version-specific-schedule>
         */
        schedule: string;
        /**
         * The OCID of the user assessment that is responsible for creating this scheduled save assessment.
         */
        scheduleAssessmentId: string;
        /**
         * The current state of the user assessment.
         */
        state: string;
        /**
         * Map that contains maps of values. Example: `{"Operations": {"CostCenter": "42"}}`
         */
        statistics: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        /**
         * Array of database target OCIDs.
         */
        targetIds: string[];
        /**
         * The date and time when the user assessment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The last date and time when the user assessment was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
        /**
         * A filter to return user assessments that were created by either the system or by a user only.
         */
        triggeredBy: string;
        /**
         * A filter to return only items that match the specified assessment type.
         */
        type: string;
    }

    export interface GetUserAssessmentsUserAssessmentIgnoredTarget {
        lifecycleState: string;
        /**
         * A filter to return only items related to a specific target OCID.
         */
        targetId: string;
        userAssessmentId: string;
    }

    export interface LibraryMasingFormatFormatEntry {
        /**
         * (Updatable) The name of the substitution column.
         */
        columnName: string;
        /**
         * (Updatable) The description of the format entry.
         */
        description: string;
        /**
         * (Updatable) The upper bound of the range within which all the original column values fall. The end date must be greater than or equal to the start date.
         */
        endDate: string;
        /**
         * (Updatable) The maximum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be greater than or equal to  the start length.
         */
        endLength: number;
        /**
         * (Updatable) The upper bound of the range within which random decimal numbers should be generated. It must be greater than or equal to the start value. It supports  input of double type.
         */
        endValue: number;
        /**
         * (Updatable) The constant number to be used for masking.
         */
        fixedNumber: number;
        /**
         * (Updatable) The constant string to be used for masking.
         */
        fixedString: string;
        /**
         * (Updatable) One or more reference columns to be used to group column values so that they can be shuffled within their own group. The grouping columns and  the column to be masked must belong to the same table.
         */
        groupingColumns: string[];
        /**
         * (Updatable) The number of characters that should be there in the substring. It should be an integer and greater than zero.
         */
        length: number;
        /**
         * (Updatable) The OCID of the library masking format.
         */
        libraryMaskingFormatId: string;
        /**
         * (Updatable) The post processing function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format. It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        postProcessingFunction: string;
        /**
         * (Updatable) A comma-separated list of values to be used to replace column values. The list can be of strings, numbers, or dates. The data type of each value in the list must be compatible with the data type of the column. The number of entries in the list cannot be more than 999.
         */
        randomLists: string[];
        /**
         * (Updatable) The regular expression to be used for masking. For data with characters in the ASCII character set, providing a regular expression is optional. However, it  is required if the data contains multi-byte characters. If not provided, an  error is returned when a multi-byte character is found.
         */
        regularExpression: string;
        /**
         * (Updatable) The value that should be used to replace the data matching the regular  expression. It can be a fixed string, fixed number, null value, or  SQL expression.
         */
        replaceWith: string;
        /**
         * (Updatable) The name of the schema that contains the substitution column.
         */
        schemaName: string;
        /**
         * (Updatable) The SQL expression to be used to generate the masked values. It can  consist of one or more values, operators, and SQL functions that  evaluate to a value. It can also contain substitution columns from  the same table. Specify the substitution columns within percent (%)  symbols.
         */
        sqlExpression: string;
        /**
         * (Updatable) The lower bound of the range within which all the original column values fall. The start date must be less than or equal to the end date.
         */
        startDate: string;
        /**
         * (Updatable) The minimum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be less than or equal to the  end length.
         */
        startLength: number;
        /**
         * (Updatable) The starting position in the original string from where the substring should be extracted. It can be either a positive or a negative integer. If It's negative, the counting starts from the end of the string.
         */
        startPosition: number;
        /**
         * (Updatable) The lower bound of the range within which random decimal numbers should  be generated. It must be less than or equal to the end value. It supports  input of double type.
         */
        startValue: number;
        /**
         * (Updatable) The name of the table that contains the substitution column.
         */
        tableName: string;
        /**
         * (Updatable) The type of the format entry.
         */
        type: string;
        /**
         * (Updatable) The user-defined function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format.  It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        userDefinedFunction: string;
    }

    export interface MaskingPoliciesMaskingColumnMaskingFormat {
        /**
         * (Updatable) A condition that must be true for applying the masking format. It can be any valid  SQL construct that can be used in a SQL predicate. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions.
         */
        condition: string;
        /**
         * (Updatable) The description of the format entry.
         */
        description: string;
        /**
         * (Updatable) An array of format entries. The combined output of all the format entries is  used for masking the column data values.
         */
        formatEntries: outputs.DataSafe.MaskingPoliciesMaskingColumnMaskingFormatFormatEntry[];
    }

    export interface MaskingPoliciesMaskingColumnMaskingFormatFormatEntry {
        /**
         * (Updatable) The name of the substitution column.
         */
        columnName: string;
        /**
         * (Updatable) The description of the format entry.
         */
        description: string;
        /**
         * (Updatable) The upper bound of the range within which all the original column values fall. The end date must be greater than or equal to the start date.
         */
        endDate: string;
        /**
         * (Updatable) The maximum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be greater than or equal to  the start length.
         */
        endLength: number;
        /**
         * (Updatable) The upper bound of the range within which random decimal numbers should be generated. It must be greater than or equal to the start value. It supports  input of double type.
         */
        endValue: number;
        /**
         * (Updatable) The constant number to be used for masking.
         */
        fixedNumber: number;
        /**
         * (Updatable) The constant string to be used for masking.
         */
        fixedString: string;
        /**
         * (Updatable) One or more reference columns to be used to group column values so that they can be shuffled within their own group. The grouping columns and  the column to be masked must belong to the same table.
         */
        groupingColumns: string[];
        /**
         * (Updatable) The number of characters that should be there in the substring. It should be an integer and greater than zero.
         */
        length: number;
        /**
         * (Updatable) The OCID of the library masking format.
         */
        libraryMaskingFormatId: string;
        /**
         * (Updatable) The post processing function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format. It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        postProcessingFunction: string;
        /**
         * (Updatable) A comma-separated list of values to be used to replace column values. The list can be of strings, numbers, or dates. The data type of each value in the list must be compatible with the data type of the column. The number of entries in the list cannot be more than 999.
         */
        randomLists: string[];
        /**
         * (Updatable) The regular expression to be used for masking. For data with characters in the ASCII character set, providing a regular expression is optional. However, it  is required if the data contains multi-byte characters. If not provided, an  error is returned when a multi-byte character is found.
         */
        regularExpression: string;
        /**
         * (Updatable) The value that should be used to replace the data matching the regular  expression. It can be a fixed string, fixed number, null value, or  SQL expression.
         */
        replaceWith: string;
        /**
         * The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
         */
        schemaName: string;
        /**
         * (Updatable) The SQL expression to be used to generate the masked values. It can  consist of one or more values, operators, and SQL functions that  evaluate to a value. It can also contain substitution columns from  the same table. Specify the substitution columns within percent (%)  symbols.
         */
        sqlExpression: string;
        /**
         * (Updatable) The lower bound of the range within which all the original column values fall. The start date must be less than or equal to the end date.
         */
        startDate: string;
        /**
         * (Updatable) The minimum number of characters the generated strings should have. It can  be any integer greater than zero, but it must be less than or equal to the  end length.
         */
        startLength: number;
        /**
         * (Updatable) The starting position in the original string from where the substring should be extracted. It can be either a positive or a negative integer. If It's negative, the counting starts from the end of the string.
         */
        startPosition: number;
        /**
         * (Updatable) The lower bound of the range within which random decimal numbers should  be generated. It must be less than or equal to the end value. It supports  input of double type.
         */
        startValue: number;
        /**
         * (Updatable) The name of the table that contains the substitution column.
         */
        tableName: string;
        /**
         * (Updatable) The type of the format entry.
         */
        type: string;
        /**
         * (Updatable) The user-defined function in SCHEMA_NAME.PACKAGE_NAME.FUNCTION_NAME format.  It can be a standalone or packaged function, so PACKAGE_NAME is optional.
         */
        userDefinedFunction: string;
    }

    export interface MaskingPolicyColumnSource {
        /**
         * (Updatable) The source of masking columns.
         */
        columnSource: string;
        /**
         * (Updatable) The OCID of the sensitive data model to be associated as the column source with the masking policy.
         */
        sensitiveDataModelId: string;
        /**
         * (Updatable) The OCID of the target database to be associated as the column source with the masking policy.
         */
        targetId: string;
    }

    export interface ReportDefinitionColumnFilter {
        /**
         * (Updatable) An array of expressions based on the operator type. A filter may have one or more expressions.
         */
        expressions: string[];
        /**
         * (Updatable) Name of the column that must be sorted.
         */
        fieldName: string;
        /**
         * (Updatable) Indicates if the filter is enabled. Values can either be 'true' or 'false'.
         */
        isEnabled: boolean;
        /**
         * (Updatable) Indicates if the summary is hidden. Values can either be 'true' or 'false'.
         */
        isHidden: boolean;
        /**
         * (Updatable) Specifies the type of operator that must be applied for example in, eq etc.
         */
        operator: string;
    }

    export interface ReportDefinitionColumnInfo {
        /**
         * (Updatable) Specifies the data type of the column.
         */
        dataType: string;
        /**
         * (Updatable) Specifies the name of the report definition.
         */
        displayName: string;
        /**
         * (Updatable) Specifies the order in which the summary must be displayed.
         */
        displayOrder: number;
        /**
         * (Updatable) Name of the column that must be sorted.
         */
        fieldName: string;
        /**
         * (Updatable) Indicates if the summary is hidden. Values can either be 'true' or 'false'.
         */
        isHidden: boolean;
    }

    export interface ReportDefinitionColumnSorting {
        /**
         * (Updatable) Name of the column that must be sorted.
         */
        fieldName: string;
        /**
         * (Updatable) Indicates if the column must be sorted in ascending order. Values can either be 'true' or 'false'.
         */
        isAscending: boolean;
        /**
         * (Updatable) Indicates the order at which column must be sorted.
         */
        sortingOrder: number;
    }

    export interface ReportDefinitionSummary {
        /**
         * (Updatable) Name of the key or count of object.
         */
        countOf: string;
        /**
         * (Updatable) Specifies the order in which the summary must be displayed.
         */
        displayOrder: number;
        /**
         * (Updatable) A comma-delimited string that specifies the names of the fields by which the records must be aggregated to get the summary.
         */
        groupByFieldName: string;
        /**
         * (Updatable) Indicates if the summary is hidden. Values can either be 'true' or 'false'.
         */
        isHidden: boolean;
        /**
         * (Updatable) Name of the report summary.
         */
        name: string;
        /**
         * (Updatable) Additional scim filters used to get the specific summary.
         */
        scimFilter: string;
    }

    export interface SecurityAssessmentStatistic {
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        advisories: outputs.DataSafe.SecurityAssessmentStatisticAdvisory[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        evaluates: outputs.DataSafe.SecurityAssessmentStatisticEvaluate[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        highRisks: outputs.DataSafe.SecurityAssessmentStatisticHighRisk[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        lowRisks: outputs.DataSafe.SecurityAssessmentStatisticLowRisk[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        mediumRisks: outputs.DataSafe.SecurityAssessmentStatisticMediumRisk[];
        /**
         * Statistics showing the number of findings with a particular risk level for each category.
         */
        passes: outputs.DataSafe.SecurityAssessmentStatisticPass[];
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
    }

    export interface SecurityAssessmentStatisticAdvisory {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface SecurityAssessmentStatisticEvaluate {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface SecurityAssessmentStatisticHighRisk {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface SecurityAssessmentStatisticLowRisk {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface SecurityAssessmentStatisticMediumRisk {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface SecurityAssessmentStatisticPass {
        /**
         * The number of findings in the Auditing category.
         */
        auditingFindingsCount: number;
        /**
         * The number of findings in the Authorization Control category.
         */
        authorizationControlFindingsCount: number;
        /**
         * The number of findings in the Data Encryption category.
         */
        dataEncryptionFindingsCount: number;
        /**
         * The number of findings in the Database Configuration category.
         */
        dbConfigurationFindingsCount: number;
        /**
         * The number of findings in the Fine-Grained Access Control category.
         */
        fineGrainedAccessControlFindingsCount: number;
        /**
         * The number of findings in the Privileges and Roles category.
         */
        privilegesAndRolesFindingsCount: number;
        /**
         * The total number of targets in this security assessment.
         */
        targetsCount: number;
        /**
         * The number of findings in the User Accounts category.
         */
        userAccountsFindingsCount: number;
    }

    export interface TargetDatabaseConnectionOption {
        /**
         * (Updatable) The connection type used to connect to the database. Allowed values:
         * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
         * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
         */
        connectionType: string;
        /**
         * (Updatable) The OCID of the Data Safe private endpoint.
         */
        datasafePrivateEndpointId: string;
        /**
         * (Updatable) The OCID of the on-premises connector.
         */
        onPremConnectorId: string;
    }

    export interface TargetDatabaseCredentials {
        /**
         * (Updatable) The password of the database user.
         */
        password: string;
        /**
         * (Updatable) The database user name.
         */
        userName: string;
    }

    export interface TargetDatabaseDatabaseDetails {
        /**
         * (Updatable) The OCID of the autonomous database registered as a target database in Data Safe.
         */
        autonomousDatabaseId: string;
        /**
         * (Updatable) The database type.
         */
        databaseType: string;
        /**
         * (Updatable) The OCID of the cloud database system registered as a target database in Data Safe.
         */
        dbSystemId: string;
        /**
         * (Updatable) The infrastructure type the database is running on.
         */
        infrastructureType: string;
        /**
         * (Updatable) The OCID of the compute instance on which the database is running.
         */
        instanceId: string;
        /**
         * (Updatable) The list of database host IP Addresses. Fully qualified domain names can be used if connectionType is 'ONPREM_CONNECTOR'.
         */
        ipAddresses: string[];
        /**
         * (Updatable) The port number of the database listener.
         */
        listenerPort: number;
        /**
         * (Updatable) The service name of the database registered as target database.
         */
        serviceName: string;
        /**
         * (Updatable) The OCID of the VM cluster in which the database is running.
         */
        vmClusterId: string;
    }

    export interface TargetDatabaseTlsConfig {
        /**
         * (Updatable) The format of the certificate store.
         */
        certificateStoreType: string;
        /**
         * (Updatable) Base64 encoded string of key store file content.
         */
        keyStoreContent: string;
        /**
         * (Updatable) Status to represent whether the database connection is TLS enabled or not.
         */
        status: string;
        /**
         * (Updatable) The password to read the trust store and key store files, if they are password protected.
         */
        storePassword: string;
        /**
         * (Updatable) Base64 encoded string of trust store file content.
         */
        trustStoreContent: string;
    }

    export interface UserAssessmentIgnoredTarget {
        lifecycleState: string;
        /**
         * The OCID of the target database on which the user assessment is to be run.
         */
        targetId: string;
        userAssessmentId: string;
    }

}

export namespace DataScience {
    export interface GetFastLaunchJobConfigsFastLaunchJobConfig {
        /**
         * The number of cores associated with this fast launch job shape.
         */
        coreCount: number;
        /**
         * The managed egress support
         */
        managedEgressSupport: string;
        /**
         * The number of cores associated with this fast launch job shape.
         */
        memoryInGbs: number;
        /**
         * The name of the fast launch job config
         */
        name: string;
        /**
         * The name of the fast launch job shape.
         */
        shapeName: string;
        /**
         * The family that the compute shape belongs to.
         */
        shapeSeries: string;
    }

    export interface GetFastLaunchJobConfigsFilter {
        /**
         * The name of the fast launch job config
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetJobJobConfigurationDetail {
        /**
         * The arguments to pass to the job.
         */
        commandLineArguments: string;
        /**
         * Environment variables to set for the job.
         */
        environmentVariables: {[key: string]: any};
        /**
         * The type of job.
         */
        jobType: string;
        /**
         * A time bound for the execution of the job. Timer starts when the job becomes active.
         */
        maximumRuntimeInMinutes: string;
    }

    export interface GetJobJobInfrastructureConfigurationDetail {
        /**
         * The size of the block storage volume to attach to the instance running the job
         */
        blockStorageSizeInGbs: number;
        /**
         * The infrastructure type used for job run.
         */
        jobInfrastructureType: string;
        /**
         * Details for the job run shape configuration. Specify only when a flex shape is selected.
         */
        jobShapeConfigDetails: outputs.DataScience.GetJobJobInfrastructureConfigurationDetailJobShapeConfigDetail[];
        /**
         * The shape used to launch the job run instances.
         */
        shapeName: string;
        /**
         * The subnet to create a secondary vnic in to attach to the instance running the job
         */
        subnetId: string;
    }

    export interface GetJobJobInfrastructureConfigurationDetailJobShapeConfigDetail {
        /**
         * A job run instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * A job run instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface GetJobJobLogConfigurationDetail {
        /**
         * If automatic on-behalf-of log object creation is enabled for job runs.
         */
        enableAutoLogCreation: boolean;
        /**
         * If customer logging is enabled for job runs.
         */
        enableLogging: boolean;
        /**
         * The log group id for where log objects are for job runs.
         */
        logGroupId: string;
        /**
         * The log id the job run will push logs too.
         */
        logId: string;
    }

    export interface GetJobRunJobConfigurationOverrideDetail {
        /**
         * The arguments to pass to the job.
         */
        commandLineArguments: string;
        /**
         * Environment variables to set for the job.
         */
        environmentVariables: {[key: string]: any};
        /**
         * The type of job.
         */
        jobType: string;
        /**
         * A time bound for the execution of the job. Timer starts when the job becomes active.
         */
        maximumRuntimeInMinutes: string;
    }

    export interface GetJobRunJobInfrastructureConfigurationDetail {
        /**
         * The size of the block storage volume to attach to the instance running the job
         */
        blockStorageSizeInGbs: number;
        /**
         * The infrastructure type used for job run.
         */
        jobInfrastructureType: string;
        /**
         * Details for the job run shape configuration. Specify only when a flex shape is selected.
         */
        jobShapeConfigDetails: outputs.DataScience.GetJobRunJobInfrastructureConfigurationDetailJobShapeConfigDetail[];
        /**
         * The shape used to launch the job run instances.
         */
        shapeName: string;
        /**
         * The subnet to create a secondary vnic in to attach to the instance running the job
         */
        subnetId: string;
    }

    export interface GetJobRunJobInfrastructureConfigurationDetailJobShapeConfigDetail {
        /**
         * A job run instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * A job run instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface GetJobRunJobLogConfigurationOverrideDetail {
        /**
         * If automatic on-behalf-of log object creation is enabled for job runs.
         */
        enableAutoLogCreation: boolean;
        /**
         * If customer logging is enabled for job runs.
         */
        enableLogging: boolean;
        /**
         * The log group id for where log objects will be for job runs.
         */
        logGroupId: string;
        /**
         * The log id of the log object the job run logs will be shipped to.
         */
        logId: string;
    }

    export interface GetJobRunLogDetail {
        /**
         * The log group id for where log objects will be for job runs.
         */
        logGroupId: string;
        /**
         * The log id of the log object the job run logs will be shipped to.
         */
        logId: string;
    }

    export interface GetJobRunsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetJobRunsJobRun {
        asynchronous: boolean;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
         */
        createdBy: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * <b>Filter</b> results by its user-friendly name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
         */
        id: string;
        /**
         * The job configuration details
         */
        jobConfigurationOverrideDetails: outputs.DataScience.GetJobRunsJobRunJobConfigurationOverrideDetail[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
         */
        jobId: string;
        /**
         * The job infrastructure configuration details (shape, block storage, etc.)
         */
        jobInfrastructureConfigurationDetails: outputs.DataScience.GetJobRunsJobRunJobInfrastructureConfigurationDetail[];
        /**
         * Logging configuration for resource.
         */
        jobLogConfigurationOverrideDetails: outputs.DataScience.GetJobRunsJobRunJobLogConfigurationOverrideDetail[];
        /**
         * Details of the state of the job run.
         */
        lifecycleDetails: string;
        /**
         * Customer logging details for job run.
         */
        logDetails: outputs.DataScience.GetJobRunsJobRunLogDetail[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job with.
         */
        projectId: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the job run was accepted in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeAccepted: string;
        /**
         * The date and time the job run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeFinished: string;
        /**
         * The date and time the job run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeStarted: string;
    }

    export interface GetJobRunsJobRunJobConfigurationOverrideDetail {
        /**
         * The arguments to pass to the job.
         */
        commandLineArguments: string;
        /**
         * Environment variables to set for the job.
         */
        environmentVariables: {[key: string]: any};
        /**
         * The type of job.
         */
        jobType: string;
        /**
         * A time bound for the execution of the job. Timer starts when the job becomes active.
         */
        maximumRuntimeInMinutes: string;
    }

    export interface GetJobRunsJobRunJobInfrastructureConfigurationDetail {
        /**
         * The size of the block storage volume to attach to the instance running the job
         */
        blockStorageSizeInGbs: number;
        /**
         * The infrastructure type used for job run.
         */
        jobInfrastructureType: string;
        /**
         * Details for the job run shape configuration. Specify only when a flex shape is selected.
         */
        jobShapeConfigDetails: outputs.DataScience.GetJobRunsJobRunJobInfrastructureConfigurationDetailJobShapeConfigDetail[];
        /**
         * The shape used to launch the job run instances.
         */
        shapeName: string;
        /**
         * The subnet to create a secondary vnic in to attach to the instance running the job
         */
        subnetId: string;
    }

    export interface GetJobRunsJobRunJobInfrastructureConfigurationDetailJobShapeConfigDetail {
        /**
         * A job run instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * A job run instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface GetJobRunsJobRunJobLogConfigurationOverrideDetail {
        /**
         * If automatic on-behalf-of log object creation is enabled for job runs.
         */
        enableAutoLogCreation: boolean;
        /**
         * If customer logging is enabled for job runs.
         */
        enableLogging: boolean;
        /**
         * The log group id for where log objects will be for job runs.
         */
        logGroupId: string;
        /**
         * The log id of the log object the job run logs will be shipped to.
         */
        logId: string;
    }

    export interface GetJobRunsJobRunLogDetail {
        /**
         * The log group id for where log objects will be for job runs.
         */
        logGroupId: string;
        /**
         * The log id of the log object the job run logs will be shipped to.
         */
        logId: string;
    }

    export interface GetJobShapesFilter {
        /**
         * The name of the job shape.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetJobShapesJobShape {
        /**
         * The number of cores associated with this job run shape.
         */
        coreCount: number;
        /**
         * The number of cores associated with this job shape.
         */
        memoryInGbs: number;
        /**
         * The name of the job shape.
         */
        name: string;
        /**
         * The family that the compute shape belongs to.
         */
        shapeSeries: string;
    }

    export interface GetJobsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetJobsJob {
        artifactContentDisposition: string;
        artifactContentLength: string;
        artifactContentMd5: string;
        artifactLastModified: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
         */
        createdBy: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        deleteRelatedJobRuns: boolean;
        /**
         * A short description of the job.
         */
        description: string;
        /**
         * <b>Filter</b> results by its user-friendly name.
         */
        displayName: string;
        emptyArtifact: boolean;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
         */
        id: string;
        jobArtifact: string;
        /**
         * The job configuration details
         */
        jobConfigurationDetails: outputs.DataScience.GetJobsJobJobConfigurationDetail[];
        /**
         * The job infrastructure configuration details (shape, block storage, etc.)
         */
        jobInfrastructureConfigurationDetails: outputs.DataScience.GetJobsJobJobInfrastructureConfigurationDetail[];
        /**
         * Logging configuration for resource.
         */
        jobLogConfigurationDetails: outputs.DataScience.GetJobsJobJobLogConfigurationDetail[];
        /**
         * The state of the job.
         */
        lifecycleDetails: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
         */
        projectId: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2020-08-06T21:10:29.41Z
         */
        timeCreated: string;
    }

    export interface GetJobsJobJobConfigurationDetail {
        /**
         * The arguments to pass to the job.
         */
        commandLineArguments: string;
        /**
         * Environment variables to set for the job.
         */
        environmentVariables: {[key: string]: any};
        /**
         * The type of job.
         */
        jobType: string;
        /**
         * A time bound for the execution of the job. Timer starts when the job becomes active.
         */
        maximumRuntimeInMinutes: string;
    }

    export interface GetJobsJobJobInfrastructureConfigurationDetail {
        /**
         * The size of the block storage volume to attach to the instance running the job
         */
        blockStorageSizeInGbs: number;
        /**
         * The infrastructure type used for job run.
         */
        jobInfrastructureType: string;
        /**
         * Details for the job run shape configuration. Specify only when a flex shape is selected.
         */
        jobShapeConfigDetails: outputs.DataScience.GetJobsJobJobInfrastructureConfigurationDetailJobShapeConfigDetail[];
        /**
         * The shape used to launch the job run instances.
         */
        shapeName: string;
        /**
         * The subnet to create a secondary vnic in to attach to the instance running the job
         */
        subnetId: string;
    }

    export interface GetJobsJobJobInfrastructureConfigurationDetailJobShapeConfigDetail {
        /**
         * A job run instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * A job run instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface GetJobsJobJobLogConfigurationDetail {
        /**
         * If automatic on-behalf-of log object creation is enabled for job runs.
         */
        enableAutoLogCreation: boolean;
        /**
         * If customer logging is enabled for job runs.
         */
        enableLogging: boolean;
        /**
         * The log group id for where log objects are for job runs.
         */
        logGroupId: string;
        /**
         * The log id the job run will push logs too.
         */
        logId: string;
    }

    export interface GetModelCustomMetadataList {
        /**
         * Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
         */
        category: string;
        /**
         * A short description of the model.
         */
        description: string;
        /**
         * Key of the model Metadata. The key can either be user defined or Oracle Cloud Infrastructure defined. List of Oracle Cloud Infrastructure defined keys:
         * * useCaseType
         * * libraryName
         * * libraryVersion
         * * estimatorClass
         * * hyperParameters
         * * testartifactresults
         */
        key: string;
        /**
         * Allowed values for useCaseType: binary_classification, regression, multinomial_classification, clustering, recommender, dimensionality_reduction/representation, time_series_forecasting, anomaly_detection, topic_modeling, ner, sentiment_analysis, image_classification, object_localization, other
         */
        value: string;
    }

    export interface GetModelDefinedMetadataList {
        /**
         * Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
         */
        category: string;
        /**
         * A short description of the model.
         */
        description: string;
        /**
         * Key of the model Metadata. The key can either be user defined or Oracle Cloud Infrastructure defined. List of Oracle Cloud Infrastructure defined keys:
         * * useCaseType
         * * libraryName
         * * libraryVersion
         * * estimatorClass
         * * hyperParameters
         * * testartifactresults
         */
        key: string;
        /**
         * Allowed values for useCaseType: binary_classification, regression, multinomial_classification, clustering, recommender, dimensionality_reduction/representation, time_series_forecasting, anomaly_detection, topic_modeling, ner, sentiment_analysis, image_classification, object_localization, other
         */
        value: string;
    }

    export interface GetModelDeploymentCategoryLogDetail {
        /**
         * The log details.
         */
        accesses: outputs.DataScience.GetModelDeploymentCategoryLogDetailAccess[];
        /**
         * The log details.
         */
        predicts: outputs.DataScience.GetModelDeploymentCategoryLogDetailPredict[];
    }

    export interface GetModelDeploymentCategoryLogDetailAccess {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
         */
        logId: string;
    }

    export interface GetModelDeploymentCategoryLogDetailPredict {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
         */
        logId: string;
    }

    export interface GetModelDeploymentModelDeploymentConfigurationDetail {
        /**
         * The type of the model deployment.
         */
        deploymentType: string;
        /**
         * The model configuration details.
         */
        modelConfigurationDetails: outputs.DataScience.GetModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetail[];
    }

    export interface GetModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetail {
        /**
         * The network bandwidth for the model.
         */
        bandwidthMbps: number;
        /**
         * The model deployment instance configuration
         */
        instanceConfigurations: outputs.DataScience.GetModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailInstanceConfiguration[];
        /**
         * The OCID of the model you want to deploy.
         */
        modelId: string;
        /**
         * The scaling policy to apply to each model of the deployment.
         */
        scalingPolicies: outputs.DataScience.GetModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailScalingPolicy[];
    }

    export interface GetModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailInstanceConfiguration {
        /**
         * The shape used to launch the model deployment instances.
         */
        instanceShapeName: string;
        /**
         * Details for the model-deployment instance shape configuration.
         */
        modelDeploymentInstanceShapeConfigDetails: outputs.DataScience.GetModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailInstanceConfigurationModelDeploymentInstanceShapeConfigDetail[];
    }

    export interface GetModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailInstanceConfigurationModelDeploymentInstanceShapeConfigDetail {
        /**
         * A model-deployment instance of type VM.Standard.E3.Flex or VM.Standard.E4.Flex allows the memory to be specified with in the range of 6 to 1024 GB. VM.Standard3.Flex memory range is between 6 and 512 GB and VM.Optimized3.Flex memory range is between 6 and 256 GB.
         */
        memoryInGbs: number;
        /**
         * A model-deployment instance of type VM.Standard.E3.Flex or VM.Standard.E4.Flex allows the ocpu count to be specified with in the range of 1 to 64 ocpu. VM.Standard3.Flex OCPU range is between 1 and 32 ocpu and for VM.Optimized3.Flex OCPU range is 1 to 18 ocpu.
         */
        ocpus: number;
    }

    export interface GetModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailScalingPolicy {
        /**
         * The number of instances for the model deployment.
         */
        instanceCount: number;
        /**
         * The type of scaling policy.
         */
        policyType: string;
    }

    export interface GetModelDeploymentShapesFilter {
        /**
         * The name of the model deployment shape.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetModelDeploymentShapesModelDeploymentShape {
        /**
         * The number of cores associated with this model deployment shape.
         */
        coreCount: number;
        /**
         * The amount of memory in GBs associated with this model deployment shape.
         */
        memoryInGbs: number;
        /**
         * The name of the model deployment shape.
         */
        name: string;
        /**
         * The family that the compute shape belongs to.
         */
        shapeSeries: string;
    }

    export interface GetModelDeploymentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetModelDeploymentsModelDeployment {
        /**
         * The log details for each category.
         */
        categoryLogDetails: outputs.DataScience.GetModelDeploymentsModelDeploymentCategoryLogDetail[];
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
         */
        createdBy: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A short description of the model deployment.
         */
        description: string;
        /**
         * <b>Filter</b> results by its user-friendly name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
         */
        id: string;
        /**
         * Details about the state of the model deployment.
         */
        lifecycleDetails: string;
        /**
         * The model deployment configuration details.
         */
        modelDeploymentConfigurationDetails: outputs.DataScience.GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetail[];
        /**
         * The URL to interact with the model deployment.
         */
        modelDeploymentUrl: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
         */
        projectId: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the resource was created, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
         */
        timeCreated: string;
    }

    export interface GetModelDeploymentsModelDeploymentCategoryLogDetail {
        /**
         * The log details.
         */
        accesses: outputs.DataScience.GetModelDeploymentsModelDeploymentCategoryLogDetailAccess[];
        /**
         * The log details.
         */
        predicts: outputs.DataScience.GetModelDeploymentsModelDeploymentCategoryLogDetailPredict[];
    }

    export interface GetModelDeploymentsModelDeploymentCategoryLogDetailAccess {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
         */
        logId: string;
    }

    export interface GetModelDeploymentsModelDeploymentCategoryLogDetailPredict {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
         */
        logId: string;
    }

    export interface GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetail {
        /**
         * The type of the model deployment.
         */
        deploymentType: string;
        /**
         * The model configuration details.
         */
        modelConfigurationDetails: outputs.DataScience.GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetail[];
    }

    export interface GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetail {
        /**
         * The network bandwidth for the model.
         */
        bandwidthMbps: number;
        /**
         * The model deployment instance configuration
         */
        instanceConfigurations: outputs.DataScience.GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailInstanceConfiguration[];
        /**
         * The OCID of the model you want to deploy.
         */
        modelId: string;
        /**
         * The scaling policy to apply to each model of the deployment.
         */
        scalingPolicies: outputs.DataScience.GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailScalingPolicy[];
    }

    export interface GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailInstanceConfiguration {
        /**
         * The shape used to launch the model deployment instances.
         */
        instanceShapeName: string;
        /**
         * Details for the model-deployment instance shape configuration.
         */
        modelDeploymentInstanceShapeConfigDetails: outputs.DataScience.GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailInstanceConfigurationModelDeploymentInstanceShapeConfigDetail[];
    }

    export interface GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailInstanceConfigurationModelDeploymentInstanceShapeConfigDetail {
        /**
         * A model-deployment instance of type VM.Standard.E3.Flex or VM.Standard.E4.Flex allows the memory to be specified with in the range of 6 to 1024 GB. VM.Standard3.Flex memory range is between 6 and 512 GB and VM.Optimized3.Flex memory range is between 6 and 256 GB.
         */
        memoryInGbs: number;
        /**
         * A model-deployment instance of type VM.Standard.E3.Flex or VM.Standard.E4.Flex allows the ocpu count to be specified with in the range of 1 to 64 ocpu. VM.Standard3.Flex OCPU range is between 1 and 32 ocpu and for VM.Optimized3.Flex OCPU range is 1 to 18 ocpu.
         */
        ocpus: number;
    }

    export interface GetModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailModelConfigurationDetailScalingPolicy {
        /**
         * The number of instances for the model deployment.
         */
        instanceCount: number;
        /**
         * The type of scaling policy.
         */
        policyType: string;
    }

    export interface GetModelsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetModelsModel {
        artifactContentDisposition: string;
        artifactContentLength: string;
        artifactContentMd5: string;
        artifactLastModified: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
         */
        createdBy: string;
        /**
         * An array of custom metadata details for the model.
         */
        customMetadataLists: outputs.DataScience.GetModelsModelCustomMetadataList[];
        /**
         * An array of defined metadata details for the model.
         */
        definedMetadataLists: outputs.DataScience.GetModelsModelDefinedMetadataList[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A short description of the model.
         */
        description: string;
        /**
         * <b>Filter</b> results by its user-friendly name.
         */
        displayName: string;
        emptyModel: boolean;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
         */
        id: string;
        /**
         * Input schema file content in String format
         */
        inputSchema: string;
        modelArtifact: string;
        /**
         * Output schema file content in String format
         */
        outputSchema: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
         */
        projectId: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
         */
        timeCreated: string;
    }

    export interface GetModelsModelCustomMetadataList {
        /**
         * Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
         */
        category: string;
        /**
         * A short description of the model.
         */
        description: string;
        /**
         * Key of the model Metadata. The key can either be user defined or Oracle Cloud Infrastructure defined. List of Oracle Cloud Infrastructure defined keys:
         * * useCaseType
         * * libraryName
         * * libraryVersion
         * * estimatorClass
         * * hyperParameters
         * * testartifactresults
         */
        key: string;
        /**
         * Allowed values for useCaseType: binary_classification, regression, multinomial_classification, clustering, recommender, dimensionality_reduction/representation, time_series_forecasting, anomaly_detection, topic_modeling, ner, sentiment_analysis, image_classification, object_localization, other
         */
        value: string;
    }

    export interface GetModelsModelDefinedMetadataList {
        /**
         * Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
         */
        category: string;
        /**
         * A short description of the model.
         */
        description: string;
        /**
         * Key of the model Metadata. The key can either be user defined or Oracle Cloud Infrastructure defined. List of Oracle Cloud Infrastructure defined keys:
         * * useCaseType
         * * libraryName
         * * libraryVersion
         * * estimatorClass
         * * hyperParameters
         * * testartifactresults
         */
        key: string;
        /**
         * Allowed values for useCaseType: binary_classification, regression, multinomial_classification, clustering, recommender, dimensionality_reduction/representation, time_series_forecasting, anomaly_detection, topic_modeling, ner, sentiment_analysis, image_classification, object_localization, other
         */
        value: string;
    }

    export interface GetNotebookSessionNotebookSessionConfigDetail {
        /**
         * A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
         */
        blockStorageSizeInGbs: number;
        /**
         * Details for the notebook session shape configuration.
         */
        notebookSessionShapeConfigDetails: outputs.DataScience.GetNotebookSessionNotebookSessionConfigDetailNotebookSessionShapeConfigDetail[];
        /**
         * The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
         */
        shape: string;
        /**
         * A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
         */
        subnetId: string;
    }

    export interface GetNotebookSessionNotebookSessionConfigDetailNotebookSessionShapeConfigDetail {
        /**
         * A notebook session instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * A notebook session instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface GetNotebookSessionNotebookSessionConfigurationDetail {
        /**
         * A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
         */
        blockStorageSizeInGbs: number;
        /**
         * Details for the notebook session shape configuration.
         */
        notebookSessionShapeConfigDetails: outputs.DataScience.GetNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail[];
        /**
         * The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
         */
        shape: string;
        /**
         * A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
         */
        subnetId: string;
    }

    export interface GetNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail {
        /**
         * A notebook session instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * A notebook session instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface GetNotebookSessionNotebookSessionRuntimeConfigDetail {
        /**
         * Custom environment variables for Notebook Session. These key-value pairs will be available for customers in Notebook Sessions.
         */
        customEnvironmentVariables: {[key: string]: any};
        /**
         * Git configuration Details.
         */
        notebookSessionGitConfigDetails: outputs.DataScience.GetNotebookSessionNotebookSessionRuntimeConfigDetailNotebookSessionGitConfigDetail[];
    }

    export interface GetNotebookSessionNotebookSessionRuntimeConfigDetailNotebookSessionGitConfigDetail {
        /**
         * A collection of Git repository configurations.
         */
        notebookSessionGitRepoConfigCollections: outputs.DataScience.GetNotebookSessionNotebookSessionRuntimeConfigDetailNotebookSessionGitConfigDetailNotebookSessionGitRepoConfigCollection[];
    }

    export interface GetNotebookSessionNotebookSessionRuntimeConfigDetailNotebookSessionGitConfigDetailNotebookSessionGitRepoConfigCollection {
        /**
         * The repository URL
         */
        url: string;
    }

    export interface GetNotebookSessionShapesFilter {
        /**
         * The name of the notebook session shape.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNotebookSessionShapesNotebookSessionShape {
        /**
         * The number of cores associated with this notebook session shape.
         */
        coreCount: number;
        /**
         * The amount of memory in GBs associated with this notebook session shape.
         */
        memoryInGbs: number;
        /**
         * The name of the notebook session shape.
         */
        name: string;
        /**
         * The family that the compute shape belongs to.
         */
        shapeSeries: string;
    }

    export interface GetNotebookSessionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNotebookSessionsNotebookSession {
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
         */
        createdBy: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * <b>Filter</b> results by its user-friendly name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
         */
        id: string;
        /**
         * Details about the state of the notebook session.
         */
        lifecycleDetails: string;
        /**
         * Details for the notebook session configuration.
         */
        notebookSessionConfigDetails: outputs.DataScience.GetNotebookSessionsNotebookSessionNotebookSessionConfigDetail[];
        /**
         * Details for the notebook session configuration.
         */
        notebookSessionConfigurationDetails: outputs.DataScience.GetNotebookSessionsNotebookSessionNotebookSessionConfigurationDetail[];
        /**
         * Notebook Session runtime configuration details.
         */
        notebookSessionRuntimeConfigDetails: outputs.DataScience.GetNotebookSessionsNotebookSessionNotebookSessionRuntimeConfigDetail[];
        /**
         * The URL to interact with the notebook session.
         */
        notebookSessionUrl: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
         */
        projectId: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
         */
        timeCreated: string;
    }

    export interface GetNotebookSessionsNotebookSessionNotebookSessionConfigDetail {
        /**
         * A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
         */
        blockStorageSizeInGbs: number;
        /**
         * Details for the notebook session shape configuration.
         */
        notebookSessionShapeConfigDetails: outputs.DataScience.GetNotebookSessionsNotebookSessionNotebookSessionConfigDetailNotebookSessionShapeConfigDetail[];
        /**
         * The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
         */
        shape: string;
        /**
         * A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
         */
        subnetId: string;
    }

    export interface GetNotebookSessionsNotebookSessionNotebookSessionConfigDetailNotebookSessionShapeConfigDetail {
        /**
         * A notebook session instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * A notebook session instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface GetNotebookSessionsNotebookSessionNotebookSessionConfigurationDetail {
        /**
         * A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
         */
        blockStorageSizeInGbs: number;
        /**
         * Details for the notebook session shape configuration.
         */
        notebookSessionShapeConfigDetails: outputs.DataScience.GetNotebookSessionsNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail[];
        /**
         * The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
         */
        shape: string;
        /**
         * A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
         */
        subnetId: string;
    }

    export interface GetNotebookSessionsNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail {
        /**
         * A notebook session instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * A notebook session instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface GetNotebookSessionsNotebookSessionNotebookSessionRuntimeConfigDetail {
        /**
         * Custom environment variables for Notebook Session. These key-value pairs will be available for customers in Notebook Sessions.
         */
        customEnvironmentVariables: {[key: string]: any};
        /**
         * Git configuration Details.
         */
        notebookSessionGitConfigDetails: outputs.DataScience.GetNotebookSessionsNotebookSessionNotebookSessionRuntimeConfigDetailNotebookSessionGitConfigDetail[];
    }

    export interface GetNotebookSessionsNotebookSessionNotebookSessionRuntimeConfigDetailNotebookSessionGitConfigDetail {
        /**
         * A collection of Git repository configurations.
         */
        notebookSessionGitRepoConfigCollections: outputs.DataScience.GetNotebookSessionsNotebookSessionNotebookSessionRuntimeConfigDetailNotebookSessionGitConfigDetailNotebookSessionGitRepoConfigCollection[];
    }

    export interface GetNotebookSessionsNotebookSessionNotebookSessionRuntimeConfigDetailNotebookSessionGitConfigDetailNotebookSessionGitRepoConfigCollection {
        /**
         * The repository URL
         */
        url: string;
    }

    export interface GetProjectsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProjectsProject {
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
         */
        createdBy: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A short description of the project.
         */
        description: string;
        /**
         * <b>Filter</b> results by its user-friendly name.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
         */
        id: string;
        /**
         * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
         */
        timeCreated: string;
    }

    export interface JobJobConfigurationDetails {
        /**
         * The arguments to pass to the job.
         */
        commandLineArguments: string;
        /**
         * Environment variables to set for the job.
         */
        environmentVariables: {[key: string]: any};
        /**
         * The type of job.
         */
        jobType: string;
        /**
         * A time bound for the execution of the job. Timer starts when the job becomes active.
         */
        maximumRuntimeInMinutes: string;
    }

    export interface JobJobInfrastructureConfigurationDetails {
        /**
         * (Updatable) The size of the block storage volume to attach to the instance running the job
         */
        blockStorageSizeInGbs: number;
        /**
         * (Updatable) The infrastructure type used for job run.
         */
        jobInfrastructureType: string;
        /**
         * (Updatable) Details for the job run shape configuration. Specify only when a flex shape is selected.
         */
        jobShapeConfigDetails: outputs.DataScience.JobJobInfrastructureConfigurationDetailsJobShapeConfigDetails;
        /**
         * (Updatable) The shape used to launch the job run instances.
         */
        shapeName: string;
        /**
         * (Updatable) The subnet to create a secondary vnic in to attach to the instance running the job
         */
        subnetId: string;
    }

    export interface JobJobInfrastructureConfigurationDetailsJobShapeConfigDetails {
        /**
         * (Updatable) A job run instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * (Updatable) A job run instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface JobJobLogConfigurationDetails {
        /**
         * If automatic on-behalf-of log object creation is enabled for job runs.
         */
        enableAutoLogCreation: boolean;
        /**
         * If customer logging is enabled for job runs.
         */
        enableLogging: boolean;
        /**
         * The log group id for where log objects are for job runs.
         */
        logGroupId: string;
        /**
         * The log id the job run will push logs too.
         */
        logId: string;
    }

    export interface JobRunJobConfigurationOverrideDetails {
        /**
         * The arguments to pass to the job.
         */
        commandLineArguments: string;
        /**
         * Environment variables to set for the job.
         */
        environmentVariables: {[key: string]: any};
        /**
         * The type of job.
         */
        jobType: string;
        /**
         * A time bound for the execution of the job. Timer starts when the job becomes active.
         */
        maximumRuntimeInMinutes: string;
    }

    export interface JobRunJobInfrastructureConfigurationDetail {
        /**
         * The size of the block storage volume to attach to the instance running the job
         */
        blockStorageSizeInGbs: number;
        /**
         * The infrastructure type used for job run.
         */
        jobInfrastructureType: string;
        /**
         * Details for the job run shape configuration. Specify only when a flex shape is selected.
         */
        jobShapeConfigDetails: outputs.DataScience.JobRunJobInfrastructureConfigurationDetailJobShapeConfigDetail[];
        /**
         * The shape used to launch the job run instances.
         */
        shapeName: string;
        /**
         * The subnet to create a secondary vnic in to attach to the instance running the job
         */
        subnetId: string;
    }

    export interface JobRunJobInfrastructureConfigurationDetailJobShapeConfigDetail {
        /**
         * A job run instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * A job run instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface JobRunJobLogConfigurationOverrideDetails {
        /**
         * If automatic on-behalf-of log object creation is enabled for job runs.
         */
        enableAutoLogCreation: boolean;
        /**
         * If customer logging is enabled for job runs.
         */
        enableLogging: boolean;
        /**
         * The log group id for where log objects are for job runs.
         */
        logGroupId: string;
        /**
         * The log id the job run will push logs too.
         */
        logId: string;
    }

    export interface JobRunLogDetail {
        /**
         * The log group id for where log objects are for job runs.
         */
        logGroupId: string;
        /**
         * The log id the job run will push logs too.
         */
        logId: string;
    }

    export interface ModelCustomMetadataList {
        /**
         * (Updatable) Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
         */
        category: string;
        /**
         * (Updatable) A short description of the model.
         */
        description: string;
        /**
         * (Updatable) Key of the model Metadata. The key can either be user defined or Oracle Cloud Infrastructure defined. List of Oracle Cloud Infrastructure defined keys:
         * * useCaseType
         * * libraryName
         * * libraryVersion
         * * estimatorClass
         * * hyperParameters
         * * testartifactresults
         */
        key: string;
        /**
         * (Updatable) Allowed values for useCaseType: binary_classification, regression, multinomial_classification, clustering, recommender, dimensionality_reduction/representation, time_series_forecasting, anomaly_detection, topic_modeling, ner, sentiment_analysis, image_classification, object_localization, other
         */
        value: string;
    }

    export interface ModelDefinedMetadataList {
        /**
         * (Updatable) Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
         */
        category: string;
        /**
         * (Updatable) A short description of the model.
         */
        description: string;
        /**
         * (Updatable) Key of the model Metadata. The key can either be user defined or Oracle Cloud Infrastructure defined. List of Oracle Cloud Infrastructure defined keys:
         * * useCaseType
         * * libraryName
         * * libraryVersion
         * * estimatorClass
         * * hyperParameters
         * * testartifactresults
         */
        key: string;
        /**
         * (Updatable) Allowed values for useCaseType: binary_classification, regression, multinomial_classification, clustering, recommender, dimensionality_reduction/representation, time_series_forecasting, anomaly_detection, topic_modeling, ner, sentiment_analysis, image_classification, object_localization, other
         */
        value: string;
    }

    export interface ModelDeploymentCategoryLogDetails {
        /**
         * (Updatable) The log details.
         */
        access: outputs.DataScience.ModelDeploymentCategoryLogDetailsAccess;
        /**
         * (Updatable) The log details.
         */
        predict: outputs.DataScience.ModelDeploymentCategoryLogDetailsPredict;
    }

    export interface ModelDeploymentCategoryLogDetailsAccess {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
         */
        logGroupId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
         */
        logId: string;
    }

    export interface ModelDeploymentCategoryLogDetailsPredict {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
         */
        logGroupId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
         */
        logId: string;
    }

    export interface ModelDeploymentModelDeploymentConfigurationDetails {
        /**
         * (Updatable) The type of the model deployment.
         */
        deploymentType: string;
        /**
         * (Updatable) The model configuration details.
         */
        modelConfigurationDetails: outputs.DataScience.ModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails;
    }

    export interface ModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails {
        /**
         * (Updatable) The network bandwidth for the model.
         */
        bandwidthMbps: number;
        /**
         * (Updatable) The model deployment instance configuration
         */
        instanceConfiguration: outputs.DataScience.ModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration;
        /**
         * (Updatable) The OCID of the model you want to deploy.
         */
        modelId: string;
        /**
         * (Updatable) The scaling policy to apply to each model of the deployment.
         */
        scalingPolicy: outputs.DataScience.ModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy;
    }

    export interface ModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration {
        /**
         * (Updatable) The shape used to launch the model deployment instances.
         */
        instanceShapeName: string;
        /**
         * (Updatable) Details for the model-deployment instance shape configuration.
         */
        modelDeploymentInstanceShapeConfigDetails: outputs.DataScience.ModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfigurationModelDeploymentInstanceShapeConfigDetails;
    }

    export interface ModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfigurationModelDeploymentInstanceShapeConfigDetails {
        /**
         * (Updatable) A model-deployment instance of type VM.Standard.E3.Flex or VM.Standard.E4.Flex allows the memory to be specified with in the range of 6 to 1024 GB. VM.Standard3.Flex memory range is between 6 and 512 GB and VM.Optimized3.Flex memory range is between 6 and 256 GB.
         */
        memoryInGbs: number;
        /**
         * (Updatable) A model-deployment instance of type VM.Standard.E3.Flex or VM.Standard.E4.Flex allows the ocpu count to be specified with in the range of 1 to 64 ocpu. VM.Standard3.Flex OCPU range is between 1 and 32 ocpu and for VM.Optimized3.Flex OCPU range is 1 to 18 ocpu.
         */
        ocpus: number;
    }

    export interface ModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy {
        /**
         * (Updatable) The number of instances for the model deployment.
         */
        instanceCount: number;
        /**
         * (Updatable) The type of scaling policy.
         */
        policyType: string;
    }

    export interface NotebookSessionNotebookSessionConfigDetails {
        /**
         * (Updatable) A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
         */
        blockStorageSizeInGbs: number;
        /**
         * (Updatable) Details for the notebook session shape configuration.
         */
        notebookSessionShapeConfigDetails: outputs.DataScience.NotebookSessionNotebookSessionConfigDetailsNotebookSessionShapeConfigDetails;
        /**
         * (Updatable) The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
         */
        shape: string;
        /**
         * (Updatable) A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
         */
        subnetId: string;
    }

    export interface NotebookSessionNotebookSessionConfigDetailsNotebookSessionShapeConfigDetails {
        /**
         * (Updatable) A notebook session instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * (Updatable) A notebook session instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface NotebookSessionNotebookSessionConfigurationDetails {
        /**
         * (Updatable) A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
         */
        blockStorageSizeInGbs: number;
        /**
         * (Updatable) Details for the notebook session shape configuration.
         */
        notebookSessionShapeConfigDetails: outputs.DataScience.NotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails;
        /**
         * (Updatable) The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
         */
        shape: string;
        /**
         * (Updatable) A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
         */
        subnetId: string;
    }

    export interface NotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails {
        /**
         * (Updatable) A notebook session instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
         */
        memoryInGbs: number;
        /**
         * (Updatable) A notebook session instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
         */
        ocpus: number;
    }

    export interface NotebookSessionNotebookSessionRuntimeConfigDetails {
        /**
         * (Updatable) Custom environment variables for Notebook Session. These key-value pairs will be available for customers in Notebook Sessions.
         */
        customEnvironmentVariables: {[key: string]: any};
        /**
         * (Updatable) Git configuration Details.
         */
        notebookSessionGitConfigDetails: outputs.DataScience.NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetails;
    }

    export interface NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetails {
        /**
         * (Updatable) A collection of Git repository configurations.
         */
        notebookSessionGitRepoConfigCollections: outputs.DataScience.NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollection[];
    }

    export interface NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollection {
        /**
         * (Updatable) The repository URL
         */
        url: string;
    }
}

export namespace Database {
    export interface AutonomousContainerDatabaseBackupConfig {
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.AutonomousContainerDatabaseBackupConfigBackupDestinationDetails;
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface AutonomousContainerDatabaseBackupConfigBackupDestinationDetails {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * Proxy URL to connect to object store.
         */
        internetProxy: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         */
        vpcPassword?: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         */
        vpcUser: string;
    }

    export interface AutonomousContainerDatabaseKeyHistoryEntry {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The date and time the kms key activated.
         */
        timeActivated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface AutonomousContainerDatabaseMaintenanceWindow {
        /**
         * (Updatable) Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.AutonomousContainerDatabaseMaintenanceWindowDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * (Updatable) If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.AutonomousContainerDatabaseMaintenanceWindowMonth[];
        /**
         * (Updatable) Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface AutonomousContainerDatabaseMaintenanceWindowDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousContainerDatabaseMaintenanceWindowDetails {
        /**
         * (Updatable) Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.AutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * (Updatable) If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.AutonomousContainerDatabaseMaintenanceWindowDetailsMonth[];
        /**
         * (Updatable) Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface AutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousContainerDatabaseMaintenanceWindowDetailsMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousContainerDatabaseMaintenanceWindowMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig {
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * Proxy URL to connect to object store.
         */
        internetProxy: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         */
        vpcPassword: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         */
        vpcUser: string;
    }

    export interface AutonomousDatabaseApexDetail {
        /**
         * The Oracle APEX Application Development version.
         */
        apexVersion: string;
        /**
         * The Oracle REST Data Services (ORDS) version.
         */
        ordsVersion: string;
    }

    export interface AutonomousDatabaseBackupConfig {
        /**
         * Name of [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) bucket to use for storing manual backups.
         */
        manualBackupBucketName: string;
        /**
         * The manual backup destination type.
         */
        manualBackupType: string;
    }

    export interface AutonomousDatabaseConnectionString {
        /**
         * Returns all connection strings that can be used to connect to the Autonomous Database. For more information, please see [Predefined Database Service Names for Autonomous Transaction Processing](https://docs.oracle.com/en/cloud/paas/atp-cloud/atpug/connect-predefined.html#GUID-9747539B-FD46-44F1-8FF8-F5AC650F15BE)
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
         */
        dedicated: string;
        /**
         * The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.
         */
        high: string;
        /**
         * The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
         */
        low: string;
        /**
         * The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.
         */
        medium: string;
        /**
         * A list of connection string profiles to allow clients to group, filter and select connection string values based on structured metadata.
         */
        profiles: outputs.Database.AutonomousDatabaseConnectionStringProfile[];
    }

    export interface AutonomousDatabaseConnectionStringProfile {
        /**
         * Consumer group used by the connection.
         */
        consumerGroup: string;
        /**
         * (Updatable) The user-friendly name for the Autonomous Database. The name does not have to be unique.
         */
        displayName: string;
        /**
         * Host format used in connection string.
         */
        hostFormat: string;
        /**
         * Protocol used by the connection.
         */
        protocol: string;
        /**
         * Specifies whether the listener performs a direct hand-off of the session, or redirects the session. In RAC deployments where SCAN is used, sessions are redirected to a Node VIP. Use `DIRECT` for direct hand-offs. Use `REDIRECT` to redirect the session.
         */
        sessionMode: string;
        /**
         * Specifies whether the connection string is using the long (`LONG`), Easy Connect (`EZCONNECT`), or Easy Connect Plus (`EZCONNECTPLUS`) format. Autonomous Databases on shared Exadata infrastructure always use the long format.
         */
        syntaxFormat: string;
        /**
         * Specifies whether the TLS handshake is using one-way (`SERVER`) or mutual (`MUTUAL`) authentication.
         */
        tlsAuthentication: string;
        /**
         * Connection string value.
         */
        value: string;
    }

    export interface AutonomousDatabaseConnectionUrl {
        /**
         * Oracle Application Express (APEX) URL.
         */
        apexUrl: string;
        /**
         * The URL of the Graph Studio for the Autonomous Database.
         */
        graphStudioUrl: string;
        /**
         * Oracle Machine Learning user management URL.
         */
        machineLearningUserManagementUrl: string;
        /**
         * Oracle SQL Developer Web URL.
         */
        sqlDevWebUrl: string;
    }

    export interface AutonomousDatabaseCustomerContact {
        /**
         * (Updatable) The email address used by Oracle to send notifications regarding databases and infrastructure.
         */
        email: string;
    }

    export interface AutonomousDatabaseKeyHistoryEntry {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The date and time the kms key activated.
         */
        timeActivated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface AutonomousDatabaseLocalStandbyDb {
        /**
         * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         */
        lagTimeInSeconds: number;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * (Updatable) The current state of the Autonomous Database. Could be set to AVAILABLE or STOPPED
         */
        state: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
    }

    export interface AutonomousDatabaseScheduledOperation {
        /**
         * (Updatable) Day of the week.
         */
        dayOfWeek: outputs.Database.AutonomousDatabaseScheduledOperationDayOfWeek;
        /**
         * (Updatable) auto start time. value must be of ISO-8601 format "HH:mm"
         */
        scheduledStartTime: string;
        /**
         * (Updatable) auto stop time. value must be of ISO-8601 format "HH:mm"
         */
        scheduledStopTime: string;
    }

    export interface AutonomousDatabaseScheduledOperationDayOfWeek {
        /**
         * (Updatable) Name of the day of the week.
         */
        name: string;
    }

    export interface AutonomousDatabaseStandbyDb {
        /**
         * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         */
        lagTimeInSeconds: number;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * (Updatable) The current state of the Autonomous Database. Could be set to AVAILABLE or STOPPED
         */
        state: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
    }

    export interface AutonomousExadataInfrastructureMaintenanceWindow {
        /**
         * (Updatable) Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.AutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * (Updatable) If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.AutonomousExadataInfrastructureMaintenanceWindowMonth[];
        /**
         * (Updatable) Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface AutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousExadataInfrastructureMaintenanceWindowDetails {
        /**
         * (Updatable) Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.AutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * (Updatable) If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.AutonomousExadataInfrastructureMaintenanceWindowDetailsMonth[];
        /**
         * (Updatable) Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface AutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousExadataInfrastructureMaintenanceWindowDetailsMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousExadataInfrastructureMaintenanceWindowMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousVmClusterMaintenanceWindow {
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.AutonomousVmClusterMaintenanceWindowDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.AutonomousVmClusterMaintenanceWindowMonth[];
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface AutonomousVmClusterMaintenanceWindowDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousVmClusterMaintenanceWindowDetail {
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.AutonomousVmClusterMaintenanceWindowDetailDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.AutonomousVmClusterMaintenanceWindowDetailMonth[];
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface AutonomousVmClusterMaintenanceWindowDetailDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousVmClusterMaintenanceWindowDetailMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface AutonomousVmClusterMaintenanceWindowMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface BackupDestinationAssociatedDatabase {
        /**
         * The display name of the database that is associated with the backup destination.
         */
        dbName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
    }

    export interface BackupDestinationMountTypeDetails {
        /**
         * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
         */
        localMountPointPath: string;
        /**
         * Mount type for backup destination.
         */
        mountType: string;
        /**
         * Specifies the directory on which to mount the file system
         */
        nfsServerExport: string;
        /**
         * IP addresses for NFS Auto mount.
         */
        nfsServers: string[];
    }

    export interface CloudDatabaseManagementCredentialdetails {
        /**
         * Specific database username's password [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        passwordSecretId: string;
        /**
         * Database username
         */
        userName: string;
    }

    export interface CloudExadataInfrastructureCustomerContact {
        /**
         * (Updatable) The email address used by Oracle to send notifications regarding databases and infrastructure.
         */
        email: string;
    }

    export interface CloudExadataInfrastructureMaintenanceWindow {
        /**
         * (Updatable) Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.CloudExadataInfrastructureMaintenanceWindowDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * (Updatable) If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.CloudExadataInfrastructureMaintenanceWindowMonth[];
        /**
         * (Updatable) Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface CloudExadataInfrastructureMaintenanceWindowDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface CloudExadataInfrastructureMaintenanceWindowMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface CloudVmClusterDataCollectionOptions {
        /**
         * (Updatable) Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster/Cloud VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
         */
        isDiagnosticsEventsEnabled: boolean;
    }

    export interface CloudVmClusterIormConfigCach {
        /**
         * An array of IORM settings for all the database in the Exadata DB system.
         */
        dbPlans: outputs.Database.CloudVmClusterIormConfigCachDbPlan[];
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The current value for the IORM objective. The default is `AUTO`.
         */
        objective: string;
        /**
         * The current state of the cloud VM cluster.
         */
        state: string;
    }

    export interface CloudVmClusterIormConfigCachDbPlan {
        /**
         * The database name. For the default `DbPlan`, the `dbName` is `default`.
         */
        dbName: string;
        /**
         * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         */
        flashCacheLimit: string;
        /**
         * The relative priority of this database.
         */
        share: number;
    }

    export interface CloudVmClusterIormConfigDbPlan {
        /**
         * (Updatable) The database name. For the default `DbPlan`, the `dbName` is `default`.
         */
        dbName: string;
        /**
         * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         */
        flashCacheLimit: string;
        /**
         * (Updatable) The relative priority of this database.
         */
        share: number;
    }

    export interface DatabaseConnectionString {
        /**
         * All connection strings to use to connect to the Database.
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * Host name based CDB Connection String.
         */
        cdbDefault: string;
        /**
         * IP based CDB Connection String.
         */
        cdbIpDefault: string;
    }

    export interface DatabaseDatabase {
        /**
         * A strong password for SYS, SYSTEM, PDB Admin and TDE Wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \#, or -.
         */
        adminPassword: string;
        /**
         * The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        backupId?: string;
        /**
         * The password to open the TDE wallet.
         */
        backupTdePassword?: string;
        /**
         * The character set for the database.  The default is AL32UTF8. Allowed values are:
         */
        characterSet: string;
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        databaseSoftwareImageId: string;
        /**
         * (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
         */
        dbBackupConfig: outputs.Database.DatabaseDatabaseDbBackupConfig;
        /**
         * The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
         */
        dbName: string;
        /**
         * The `DB_UNIQUE_NAME` of the Oracle Database being backed up.
         */
        dbUniqueName: string;
        /**
         * The database workload type.
         */
        dbWorkload: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
         */
        ncharacterSet: string;
        /**
         * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
         */
        pdbName: string;
        /**
         * Specifies a prefix for the `Oracle SID` of the database to be created.
         */
        sidPrefix: string;
        /**
         * The optional password to open the TDE wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numeric, and two special characters. The special characters must be _, \#, or -.
         */
        tdeWalletPassword: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface DatabaseDatabaseDbBackupConfig {
        /**
         * (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
         */
        autoBackupEnabled: boolean;
        /**
         * (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
         */
        autoBackupWindow: string;
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.DatabaseDatabaseDbBackupConfigBackupDestinationDetail[];
        /**
         * (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface DatabaseDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * Type of the database backup destination.
         */
        type?: string;
        vpcUser?: string;
    }

    export interface DatabaseDatabaseManagementConfig {
        /**
         * The status of the Database Management service.
         */
        managementStatus: string;
        /**
         * The Database Management type.
         */
        managementType: string;
    }

    export interface DatabaseDbBackupConfig {
        /**
         * (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
         */
        autoBackupEnabled: boolean;
        /**
         * (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
         */
        autoBackupWindow: string;
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.DatabaseDbBackupConfigBackupDestinationDetail[];
        /**
         * (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface DatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        vpcUser?: string;
    }

    export interface DatabaseUpgradeConnectionString {
        /**
         * All connection strings to use to connect to the Database.
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * Host name based CDB Connection String.
         */
        cdbDefault: string;
        /**
         * IP based CDB Connection String.
         */
        cdbIpDefault: string;
    }

    export interface DatabaseUpgradeDatabaseUpgradeSourceDetails {
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image to be used to upgrade a database.
         */
        databaseSoftwareImageId: string;
        /**
         * A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
         */
        dbVersion: string;
        /**
         * Additional upgrade options supported by DBUA(Database Upgrade Assistant). Example: "-upgradeTimezone false -keepEvents"
         */
        options: string;
        /**
         * The source of the Oracle Database software to be used for the upgrade.
         * * Use `DB_VERSION` to specify a generally-available Oracle Database software version to upgrade the database.
         * * Use `DB_SOFTWARE_IMAGE` to specify a [database software image](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/databasesoftwareimage.htm) to upgrade the database.
         */
        source: string;
    }

    export interface DatabaseUpgradeDbBackupConfig {
        /**
         * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
         */
        autoBackupEnabled: boolean;
        /**
         * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
         */
        autoBackupWindow: string;
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.DatabaseUpgradeDbBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface DatabaseUpgradeDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        id: string;
        /**
         * Proxy URL to connect to object store.
         */
        internetProxy: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         */
        vpcPassword: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         */
        vpcUser: string;
    }

    export interface DbHomeDatabase {
        /**
         * A strong password for SYS, SYSTEM, PDB Admin and TDE Wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \#, or -.
         */
        adminPassword: string;
        /**
         * The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        backupId: string;
        /**
         * The password to open the TDE wallet.
         */
        backupTdePassword: string;
        /**
         * The character set for the database.  The default is AL32UTF8. Allowed values are:
         */
        characterSet: string;
        connectionStrings: outputs.Database.DbHomeDatabaseConnectionString[];
        /**
         * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        databaseId: string;
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        databaseSoftwareImageId: string;
        /**
         * (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
         */
        dbBackupConfig: outputs.Database.DbHomeDatabaseDbBackupConfig;
        /**
         * The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
         */
        dbName: string;
        dbUniqueName: string;
        /**
         * The database workload type.
         */
        dbWorkload: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
         */
        ncharacterSet: string;
        /**
         * List of one-off patches for Database Homes.
         */
        oneOffPatches: string[];
        /**
         * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
         */
        pdbName: string;
        /**
         * Specifies a prefix for the `Oracle SID` of the database to be created.
         */
        sidPrefix: string;
        /**
         * The current state of the Database Home.
         */
        state: string;
        /**
         * The optional password to open the TDE wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numeric, and two special characters. The special characters must be _, \#, or -.
         */
        tdeWalletPassword: string;
        /**
         * The date and time the Database Home was created.
         */
        timeCreated: string;
        /**
         * The point in time of the original database from which the new database is created. If not specifed, the latest backup is used to create the database.
         */
        timeStampForPointInTimeRecovery: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface DbHomeDatabaseConnectionString {
        allConnectionStrings: {[key: string]: any};
        cdbDefault: string;
        cdbIpDefault: string;
    }

    export interface DbHomeDatabaseDbBackupConfig {
        /**
         * (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
         */
        autoBackupEnabled: boolean;
        /**
         * (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
         */
        autoBackupWindow: string;
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.DbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
        /**
         * (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface DbHomeDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * Type of the database backup destination. Supported values: `NFS`.
         */
        type: string;
    }

    export interface DbSystemDbHome {
        createAsync?: boolean;
        /**
         * (Updatable) Details for creating a database by restoring from a source database system.
         */
        database: outputs.Database.DbSystemDbHomeDatabase;
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image to be used to restore a database.
         */
        databaseSoftwareImageId: string;
        dbHomeLocation: string;
        /**
         * A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
         */
        dbVersion: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * The user-friendly name for the DB system. The name does not have to be unique.
         */
        displayName: string;
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
         */
        lastPatchHistoryEntryId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The current state of the DB system.
         */
        state: string;
        /**
         * The date and time the DB system was created.
         */
        timeCreated: string;
    }

    export interface DbSystemDbHomeDatabase {
        /**
         * A strong password for SYS, SYSTEM, PDB Admin and TDE Wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \#, or -.
         */
        adminPassword: string;
        /**
         * The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        backupId: string;
        /**
         * The password to open the TDE wallet.
         */
        backupTdePassword: string;
        /**
         * The character set for the database.  The default is AL32UTF8. Allowed values are:
         */
        characterSet: string;
        connectionStrings: outputs.Database.DbSystemDbHomeDatabaseConnectionString[];
        /**
         * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        databaseId: string;
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image to be used to restore a database.
         */
        databaseSoftwareImageId: string;
        /**
         * (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
         */
        dbBackupConfig: outputs.Database.DbSystemDbHomeDatabaseDbBackupConfig;
        /**
         * The database domain. In a distributed database system, DB_DOMAIN specifies the logical location of the database within the network structure.
         */
        dbDomain: string;
        /**
         * The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
         */
        dbName: string;
        dbUniqueName: string;
        /**
         * The database workload type.
         */
        dbWorkload: string;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
         */
        ncharacterSet: string;
        /**
         * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
         */
        pdbName: string;
        /**
         * The current state of the DB system.
         */
        state: string;
        /**
         * The optional password to open the TDE wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numeric, and two special characters. The special characters must be _, \#, or -.
         */
        tdeWalletPassword: string;
        /**
         * The date and time the DB system was created.
         */
        timeCreated: string;
        /**
         * The point in time of the original database from which the new database is created. If not specifed, the latest backup is used to create the database.
         */
        timeStampForPointInTimeRecovery: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface DbSystemDbHomeDatabaseConnectionString {
        allConnectionStrings: {[key: string]: any};
        cdbDefault: string;
        cdbIpDefault: string;
    }

    export interface DbSystemDbHomeDatabaseDbBackupConfig {
        /**
         * (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
         */
        autoBackupEnabled: boolean;
        /**
         * (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
         */
        autoBackupWindow: string;
        /**
         * (Updatable) Backup destination details.
         */
        backupDestinationDetails: outputs.Database.DbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
        /**
         * (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface DbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
    }

    export interface DbSystemDbSystemOptions {
        /**
         * The storage option used in DB system. ASM - Automatic storage management LVM - Logical Volume management
         */
        storageManagement: string;
    }

    export interface DbSystemIormConfigCach {
        /**
         * An array of IORM settings for all the database in the Exadata DB system.
         */
        dbPlans: outputs.Database.DbSystemIormConfigCachDbPlan[];
        dbSystemId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The current value for the IORM objective. The default is `AUTO`.
         */
        objective: string;
        /**
         * The current state of the DB system.
         */
        state: string;
    }

    export interface DbSystemIormConfigCachDbPlan {
        /**
         * The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
         */
        dbName: string;
        /**
         * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         */
        flashCacheLimit: string;
        /**
         * The relative priority of this database.
         */
        share: number;
    }

    export interface DbSystemMaintenanceWindow {
        /**
         * (Updatable) Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.DbSystemMaintenanceWindowDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * (Updatable) If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.DbSystemMaintenanceWindowMonth[];
        /**
         * (Updatable) Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface DbSystemMaintenanceWindowDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface DbSystemMaintenanceWindowDetails {
        /**
         * (Updatable) Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.DbSystemMaintenanceWindowDetailsDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * (Updatable) If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.DbSystemMaintenanceWindowDetailsMonth[];
        /**
         * (Updatable) Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface DbSystemMaintenanceWindowDetailsDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface DbSystemMaintenanceWindowDetailsMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface DbSystemMaintenanceWindowMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface DbSystemsUpgradeDbSystemOption {
        /**
         * The storage option used in DB system. ASM - Automatic storage management LVM - Logical Volume management
         */
        storageManagement: string;
    }

    export interface DbSystemsUpgradeIormConfigCach {
        /**
         * An array of IORM settings for all the database in the Exadata DB system.
         */
        dbPlans: outputs.Database.DbSystemsUpgradeIormConfigCachDbPlan[];
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The current value for the IORM objective. The default is `AUTO`.
         */
        objective: string;
        /**
         * The current state of the DB system.
         */
        state: string;
    }

    export interface DbSystemsUpgradeIormConfigCachDbPlan {
        /**
         * The database name. For the default `DbPlan`, the `dbName` is `default`.
         */
        dbName: string;
        /**
         * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         */
        flashCacheLimit: string;
        /**
         * The relative priority of this database.
         */
        share: number;
    }

    export interface DbSystemsUpgradeMaintenanceWindow {
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.DbSystemsUpgradeMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.DbSystemsUpgradeMaintenanceWindowMonth[];
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface DbSystemsUpgradeMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface DbSystemsUpgradeMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface ExadataInfrastructureContact {
        /**
         * (Updatable) The email for the Exadata Infrastructure contact.
         */
        email: string;
        /**
         * (Updatable) If `true`, this Exadata Infrastructure contact is a valid My Oracle Support (MOS) contact. If `false`, this Exadata Infrastructure contact is not a valid MOS contact.
         */
        isContactMosValidated: boolean;
        /**
         * (Updatable) If `true`, this Exadata Infrastructure contact is a primary contact. If `false`, this Exadata Infrastructure is a secondary contact.
         */
        isPrimary: boolean;
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
        /**
         * (Updatable) The phone number for the Exadata Infrastructure contact.
         */
        phoneNumber?: string;
    }

    export interface ExadataInfrastructureMaintenanceWindow {
        /**
         * (Updatable) Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * (Updatable) Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.ExadataInfrastructureMaintenanceWindowDaysOfWeek[];
        /**
         * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * (Updatable) If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * (Updatable) Months during the year when maintenance should be performed.
         */
        months: outputs.Database.ExadataInfrastructureMaintenanceWindowMonth[];
        /**
         * (Updatable) Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * (Updatable) The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface ExadataInfrastructureMaintenanceWindowDaysOfWeek {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface ExadataInfrastructureMaintenanceWindowMonth {
        /**
         * (Updatable) Name of the month of the year.
         */
        name: string;
    }

    export interface ExadataInfrastructureStorageContact {
        email: string;
        isContactMosValidated: boolean;
        isPrimary: boolean;
        name: string;
        phoneNumber?: string;
    }

    export interface ExadataInfrastructureStorageMaintenanceWindow {
        daysOfWeeks: outputs.Database.ExadataInfrastructureStorageMaintenanceWindowDaysOfWeek[];
        hoursOfDays: number[];
        leadTimeInWeeks: number;
        months: outputs.Database.ExadataInfrastructureStorageMaintenanceWindowMonth[];
        preference: string;
        weeksOfMonths: number[];
    }

    export interface ExadataInfrastructureStorageMaintenanceWindowDaysOfWeek {
        name: string;
    }

    export interface ExadataInfrastructureStorageMaintenanceWindowMonth {
        name: string;
    }

    export interface ExadataIormConfigDbPlan {
        /**
         * (Updatable) The database name. For the default `DbPlan`, the `dbName` is `default`.
         */
        dbName: string;
        /**
         * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         */
        flashCacheLimit: string;
        /**
         * (Updatable) The relative priority of this database.
         */
        share: number;
    }

    export interface ExternalContainerDatabaseDatabaseManagementConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        databaseManagementConnectionId: string;
        /**
         * The status of the Database Management service.
         */
        databaseManagementStatus: string;
        /**
         * The Oracle license model that applies to the external database.
         */
        licenseModel: string;
    }

    export interface ExternalContainerDatabaseStackMonitoringConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        stackMonitoringConnectorId: string;
        /**
         * The status of Stack Monitoring.
         */
        stackMonitoringStatus: string;
    }

    export interface ExternalDatabaseConnectorConnectionCredentials {
        /**
         * (Updatable) The name of the credential information that used to connect to the database. The name should be in "x.y" format, where the length of "x" has a maximum of 64 characters, and length of "y" has a maximum of 199 characters. The name strings can contain letters, numbers and the underscore character only. Other characters are not valid, except for the "." character that separates the "x" and "y" portions of the name. *IMPORTANT* - The name must be unique within the Oracle Cloud Infrastructure region the credential is being created in. If you specify a name that duplicates the name of another credential within the same Oracle Cloud Infrastructure region, you may overwrite or corrupt the credential that is already using the name.
         */
        credentialName: string;
        /**
         * (Updatable) The type of credential used to connect to the database.
         */
        credentialType: string;
        /**
         * (Updatable) The password that will be used to connect to the database.
         */
        password?: string;
        /**
         * (Updatable) The role of the user that will be connecting to the database.
         */
        role: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        sslSecretId: string;
        /**
         * (Updatable) The username that will be used to connect to the database.
         */
        username?: string;
    }

    export interface ExternalDatabaseConnectorConnectionString {
        /**
         * (Updatable) The host name of the database.
         */
        hostname: string;
        /**
         * (Updatable) The port used to connect to the database.
         */
        port: number;
        /**
         * (Updatable) The protocol used to connect to the database.
         */
        protocol: string;
        /**
         * (Updatable) The name of the service alias used to connect to the database.
         */
        service: string;
    }

    export interface ExternalNonContainerDatabaseDatabaseManagementConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        databaseManagementConnectionId: string;
        /**
         * The status of the Database Management service.
         */
        databaseManagementStatus: string;
        /**
         * The Oracle license model that applies to the external database.
         */
        licenseModel: string;
    }

    export interface ExternalNonContainerDatabaseOperationsInsightsConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        operationsInsightsConnectorId: string;
        /**
         * The status of Operations Insights
         */
        operationsInsightsStatus: string;
    }

    export interface ExternalNonContainerDatabaseStackMonitoringConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        stackMonitoringConnectorId: string;
        /**
         * The status of Stack Monitoring.
         */
        stackMonitoringStatus: string;
    }

    export interface ExternalPluggableDatabaseDatabaseManagementConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        databaseManagementConnectionId: string;
        /**
         * The status of the Database Management service.
         */
        databaseManagementStatus: string;
        /**
         * The Oracle license model that applies to the external database.
         */
        licenseModel: string;
    }

    export interface ExternalPluggableDatabaseOperationsInsightsConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        operationsInsightsConnectorId: string;
        /**
         * The status of Operations Insights
         */
        operationsInsightsStatus: string;
    }

    export interface ExternalPluggableDatabaseStackMonitoringConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        stackMonitoringConnectorId: string;
        /**
         * The status of Stack Monitoring.
         */
        stackMonitoringStatus: string;
    }

    export interface GetAutonomousCharacterSetsAutonomousDatabaseCharacterSet {
        /**
         * A valid Oracle character set.
         */
        name: string;
    }

    export interface GetAutonomousCharacterSetsFilter {
        /**
         * A valid Oracle character set.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousContainerDatabaseBackupConfig {
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.GetAutonomousContainerDatabaseBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface GetAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * Proxy URL to connect to object store.
         */
        internetProxy: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         */
        vpcPassword: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         */
        vpcUser: string;
    }

    export interface GetAutonomousContainerDatabaseDataguardAssociationsAutonomousContainerDatabaseDataguardAssociation {
        /**
         * The lag time between updates to the primary Autonomous Container Database and application of the redo data on the standby Autonomous Container Database, as computed by the reporting database.  Example: `9 seconds`
         */
        applyLag: string;
        /**
         * The rate at which redo logs are synchronized between the associated Autonomous Container Databases.  Example: `180 Mb per second`
         */
        applyRate: string;
        autonomousContainerDatabaseDataguardAssociationId: string;
        /**
         * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        autonomousContainerDatabaseId: string;
        /**
         * The OCID of the Autonomous Data Guard created for a given Autonomous Container Database.
         */
        id: string;
        /**
         * Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
         */
        isAutomaticFailoverEnabled: boolean;
        /**
         * Additional information about the current lifecycleState, if available.
         */
        lifecycleDetails: string;
        /**
         * The OCID of the peer Autonomous Container Database-Autonomous Data Guard association.
         */
        peerAutonomousContainerDatabaseDataguardAssociationId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Container Database.
         */
        peerAutonomousContainerDatabaseId: string;
        /**
         * The current state of Autonomous Data Guard.
         */
        peerLifecycleState: string;
        /**
         * The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
         */
        peerRole: string;
        /**
         * The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
         */
        protectionMode: string;
        /**
         * The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
         */
        role: string;
        /**
         * The current state of Autonomous Data Guard.
         */
        state: string;
        /**
         * The date and time the Autonomous DataGuard association was created.
         */
        timeCreated: string;
        /**
         * The date and time when the last role change action happened.
         */
        timeLastRoleChanged: string;
        /**
         * The date and time of the last update to the apply lag, apply rate, and transport lag values.
         */
        timeLastSynced: string;
        /**
         * The approximate number of seconds of redo data not yet available on the standby Autonomous Container Database, as computed by the reporting database.  Example: `7 seconds`
         */
        transportLag: string;
    }

    export interface GetAutonomousContainerDatabaseDataguardAssociationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousContainerDatabaseKeyHistoryEntry {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The date and time the kms key activated.
         */
        timeActivated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetAutonomousContainerDatabaseMaintenanceWindow {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousContainerDatabaseMaintenanceWindowMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousContainerDatabaseMaintenanceWindowDetail {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousContainerDatabaseMaintenanceWindowDetailDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousContainerDatabaseMaintenanceWindowDetailMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousContainerDatabaseMaintenanceWindowDetailDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousContainerDatabaseMaintenanceWindowDetailMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousContainerDatabaseMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig {
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * Proxy URL to connect to object store.
         */
        internetProxy: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         */
        vpcPassword: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         */
        vpcUser: string;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabase {
        /**
         * The Autonomous Exadata Infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        autonomousExadataInfrastructureId: string;
        /**
         * The Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        autonomousVmClusterId: string;
        /**
         * A filter to return only resources that match the given availability domain exactly.
         */
        availabilityDomain: string;
        /**
         * Sum of OCPUs available on the Autonomous VM Cluster + Sum of fractional OCPUs available in the Autonomous Container Database.
         */
        availableCpus: number;
        /**
         * Backup options for the Autonomous Container Database.
         */
        backupConfigs: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig[];
        /**
         * The cloud Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        cloudAutonomousVmClusterId: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        dbUniqueName: string;
        /**
         * Oracle Database version of the Autonomous Container Database.
         */
        dbVersion: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * A filter to return only resources that match the given Infrastructure Type.
         */
        infrastructureType: string;
        isAutomaticFailoverEnabled: boolean;
        /**
         * Key History Entry.
         */
        keyHistoryEntries: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         */
        keyStoreId: string;
        /**
         * The wallet name for Oracle Key Vault.
         */
        keyStoreWalletName: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
         */
        lastMaintenanceRunId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        maintenanceWindowDetails: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail[];
        /**
         * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         */
        maintenanceWindows: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow[];
        /**
         * The amount of memory (in GBs) enabled per each OCPU core in Autonomous VM Cluster.
         */
        memoryPerOracleComputeUnitInGbs: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
         */
        nextMaintenanceRunId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
         */
        patchId: string;
        /**
         * Database patch model preference.
         */
        patchModel: string;
        peerAutonomousContainerDatabaseBackupConfigs: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig[];
        peerAutonomousContainerDatabaseCompartmentId: string;
        peerAutonomousContainerDatabaseDisplayName: string;
        peerAutonomousExadataInfrastructureId: string;
        peerAutonomousVmClusterId: string;
        peerCloudAutonomousVmClusterId: string;
        peerDbUniqueName: string;
        protectionMode: string;
        /**
         * An array of CPU values that can be used to successfully provision a single Autonomous Database.
         */
        provisionableCpuses: number[];
        /**
         * CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
         */
        reclaimableCpus: number;
        /**
         * The role of the Autonomous Data Guard-enabled Autonomous Container Database.
         */
        role: string;
        rotateKeyTrigger: boolean;
        /**
         * A filter to return only resources that match the given service level agreement type exactly.
         */
        serviceLevelAgreementType: string;
        /**
         * The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
         */
        standbyMaintenanceBufferInDays: number;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the Autonomous Container Database was created.
         */
        timeCreated: string;
        /**
         * The number of CPU cores allocated to the Autonomous VM cluster.
         */
        totalCpus: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig {
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * Proxy URL to connect to object store.
         */
        internetProxy: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         */
        vpcPassword: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         */
        vpcUser: string;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The date and time the kms key activated.
         */
        timeActivated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig {
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * Proxy URL to connect to object store.
         */
        internetProxy: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         */
        vpcPassword: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         */
        vpcUser: string;
    }

    export interface GetAutonomousContainerDatabasesFilter {
        /**
         * Name of the month of the year.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousContainerPatchesAutonomousPatch {
        /**
         * The text describing this patch package.
         */
        description: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
         */
        id: string;
        /**
         * A descriptive text associated with the lifecycleState. Typically can contain additional displayable text.
         */
        lifecycleDetails: string;
        /**
         * Database patching model preference. See [My Oracle Support note 2285040.1](https://support.oracle.com/rs?type=doc&id=2285040.1) for information on the Release Update (RU) and Release Update Revision (RUR) patching models.
         */
        patchModel: string;
        /**
         * First month of the quarter in which the patch was released.
         */
        quarter: string;
        /**
         * The current state of the patch as a result of lastAction.
         */
        state: string;
        /**
         * The date and time that the patch was released.
         */
        timeReleased: string;
        /**
         * The type of patch. BUNDLE is one example.
         */
        type: string;
        /**
         * The version of this patch package.
         */
        version: string;
        /**
         * Year in which the patch was released.
         */
        year: string;
    }

    export interface GetAutonomousContainerPatchesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousDatabaseApexDetail {
        /**
         * The Oracle APEX Application Development version.
         */
        apexVersion: string;
        /**
         * The Oracle REST Data Services (ORDS) version.
         */
        ordsVersion: string;
    }

    export interface GetAutonomousDatabaseBackupConfig {
        /**
         * Name of [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) bucket to use for storing manual backups.
         */
        manualBackupBucketName: string;
        /**
         * The manual backup destination type.
         */
        manualBackupType: string;
    }

    export interface GetAutonomousDatabaseBackupsAutonomousDatabaseBackup {
        /**
         * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        autonomousDatabaseId: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The size of the database in terabytes at the time the backup was taken.
         */
        databaseSizeInTbs: number;
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
         */
        id: string;
        /**
         * Indicates whether the backup is user-initiated or automatic.
         */
        isAutomatic: boolean;
        /**
         * Indicates whether the backup can be used to restore the associated Autonomous Database.
         */
        isRestorable: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         */
        keyStoreId: string;
        /**
         * The wallet name for Oracle Key Vault.
         */
        keyStoreWalletName: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the backup completed.
         */
        timeEnded: string;
        /**
         * The date and time the backup started.
         */
        timeStarted: string;
        /**
         * The type of backup.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetAutonomousDatabaseBackupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousDatabaseConnectionString {
        /**
         * Returns all connection strings that can be used to connect to the Autonomous Database. For more information, please see [Predefined Database Service Names for Autonomous Transaction Processing](https://docs.oracle.com/en/cloud/paas/atp-cloud/atpug/connect-predefined.html#GUID-9747539B-FD46-44F1-8FF8-F5AC650F15BE)
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
         */
        dedicated: string;
        /**
         * The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.
         */
        high: string;
        /**
         * The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
         */
        low: string;
        /**
         * The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.
         */
        medium: string;
        /**
         * A list of connection string profiles to allow clients to group, filter and select connection string values based on structured metadata.
         */
        profiles: outputs.Database.GetAutonomousDatabaseConnectionStringProfile[];
    }

    export interface GetAutonomousDatabaseConnectionStringProfile {
        /**
         * Consumer group used by the connection.
         */
        consumerGroup: string;
        /**
         * The user-friendly name for the Autonomous Database. The name does not have to be unique.
         */
        displayName: string;
        /**
         * Host format used in connection string.
         */
        hostFormat: string;
        /**
         * Protocol used by the connection.
         */
        protocol: string;
        /**
         * Specifies whether the listener performs a direct hand-off of the session, or redirects the session. In RAC deployments where SCAN is used, sessions are redirected to a Node VIP. Use `DIRECT` for direct hand-offs. Use `REDIRECT` to redirect the session.
         */
        sessionMode: string;
        /**
         * Specifies whether the connection string is using the long (`LONG`), Easy Connect (`EZCONNECT`), or Easy Connect Plus (`EZCONNECTPLUS`) format. Autonomous Databases on shared Exadata infrastructure always use the long format.
         */
        syntaxFormat: string;
        /**
         * Specifies whether the TLS handshake is using one-way (`SERVER`) or mutual (`MUTUAL`) authentication.
         */
        tlsAuthentication: string;
        /**
         * Connection string value.
         */
        value: string;
    }

    export interface GetAutonomousDatabaseConnectionUrl {
        /**
         * Oracle Application Express (APEX) URL.
         */
        apexUrl: string;
        /**
         * The URL of the Graph Studio for the Autonomous Database.
         */
        graphStudioUrl: string;
        /**
         * Oracle Machine Learning user management URL.
         */
        machineLearningUserManagementUrl: string;
        /**
         * Oracle SQL Developer Web URL.
         */
        sqlDevWebUrl: string;
    }

    export interface GetAutonomousDatabaseCustomerContact {
        /**
         * The email address used by Oracle to send notifications regarding databases and infrastructure.
         */
        email: string;
    }

    export interface GetAutonomousDatabaseDataguardAssociationsAutonomousDatabaseDataguardAssociation {
        /**
         * The lag time between updates to the primary database and application of the redo data on the standby database, as computed by the reporting database.  Example: `9 seconds`
         */
        applyLag: string;
        /**
         * The rate at which redo logs are synced between the associated databases.  Example: `180 Mb per second`
         */
        applyRate: string;
        /**
         * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        autonomousDatabaseId: string;
        /**
         * The OCID of the Autonomous Dataguard created for Autonomous Container Database where given Autonomous Database resides in.
         */
        id: string;
        /**
         * Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
         */
        isAutomaticFailoverEnabled: boolean;
        /**
         * Additional information about the current lifecycleState, if available.
         */
        lifecycleDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Database.
         */
        peerAutonomousDatabaseId: string;
        /**
         * The current state of Autonomous Data Guard.
         */
        peerAutonomousDatabaseLifeCycleState: string;
        /**
         * The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
         */
        peerRole: string;
        /**
         * The protection mode of this Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
         */
        protectionMode: string;
        /**
         * The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
         */
        role: string;
        /**
         * The current state of Autonomous Data Guard.
         */
        state: string;
        /**
         * The date and time the Data Guard association was created.
         */
        timeCreated: string;
        /**
         * The date and time when the last role change action happened.
         */
        timeLastRoleChanged: string;
        /**
         * The date and time of the last update to the apply lag, apply rate, and transport lag values.
         */
        timeLastSynced: string;
        /**
         * The approximate number of seconds of redo data not yet available on the standby Autonomous Container Database, as computed by the reporting database.  Example: `7 seconds`
         */
        transportLag: string;
    }

    export interface GetAutonomousDatabaseDataguardAssociationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousDatabaseKeyHistoryEntry {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The date and time the kms key activated.
         */
        timeActivated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetAutonomousDatabaseLocalStandbyDb {
        /**
         * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         */
        lagTimeInSeconds: number;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The current state of the Autonomous Database.
         */
        state: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
    }

    export interface GetAutonomousDatabaseScheduledOperation {
        /**
         * Day of the week.
         */
        dayOfWeeks: outputs.Database.GetAutonomousDatabaseScheduledOperationDayOfWeek[];
        /**
         * auto start time. value must be of ISO-8601 format "HH:mm"
         */
        scheduledStartTime: string;
        /**
         * auto stop time. value must be of ISO-8601 format "HH:mm"
         */
        scheduledStopTime: string;
    }

    export interface GetAutonomousDatabaseScheduledOperationDayOfWeek {
        /**
         * Name of the day of the week.
         */
        name: string;
    }

    export interface GetAutonomousDatabaseStandbyDb {
        /**
         * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         */
        lagTimeInSeconds: number;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The current state of the Autonomous Database.
         */
        state: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabase {
        /**
         * The current amount of storage in use for user and system data, in terabytes (TB).
         */
        actualUsedDataStorageSizeInTbs: number;
        adminPassword: string;
        /**
         * The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
         */
        allocatedStorageSizeInTbs: number;
        /**
         * Information about Oracle APEX Application Development.
         */
        apexDetails: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseApexDetail[];
        arePrimaryWhitelistedIpsUsed: boolean;
        /**
         * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        autonomousContainerDatabaseId: string;
        autonomousDatabaseBackupId: string;
        autonomousDatabaseId: string;
        /**
         * The maintenance schedule type of the Autonomous Database on shared Exadata infrastructure. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
         */
        autonomousMaintenanceScheduleType: string;
        /**
         * List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
         */
        availableUpgradeVersions: string[];
        /**
         * Autonomous Database configuration details for storing [manual backups](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/backup-restore.html#GUID-9035DFB8-4702-4CEB-8281-C2A303820809) in the [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) service.
         */
        backupConfigs: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseBackupConfig[];
        /**
         * The character set for the autonomous database.  The default is AL32UTF8. Allowed values are:
         */
        characterSet: string;
        cloneType: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
         */
        connectionStrings: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseConnectionString[];
        /**
         * The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).  Example: `{"sqlDevWebUrl": "https://<hostname>/ords...", "apexUrl", "https://<hostname>/ords..."}`
         */
        connectionUrls: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseConnectionUrl[];
        /**
         * The number of OCPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         */
        cpuCoreCount: number;
        /**
         * Customer Contacts.
         */
        customerContacts: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseCustomerContact[];
        /**
         * Status of the Data Safe registration for this Autonomous Database. Could be REGISTERED or NOT_REGISTERED.
         */
        dataSafeStatus: string;
        /**
         * The quantity of data in the database, in gigabytes.
         */
        dataStorageSizeInGb: number;
        /**
         * The quantity of data in the database, in terabytes.
         */
        dataStorageSizeInTbs: number;
        /**
         * The Oracle Database Edition that applies to the Autonomous databases.
         */
        databaseEdition: string;
        /**
         * Status of Database Management for this Autonomous Database.
         */
        databaseManagementStatus: string;
        /**
         * The Autonomous Data Guard region type of the Autonomous Database. For Autonomous Databases on shared Exadata infrastructure, Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. The standby regions in Data Guard associations can be the same region designated as the primary region, or they can be remote regions. Certain database administrative operations may be available only in the primary region of the Data Guard association, and cannot be performed when the database using the "primary" role is operating in a remote Data Guard standby region.
         */
        dataguardRegionType: string;
        /**
         * The database name.
         */
        dbName: string;
        /**
         * A filter to return only autonomous database resources that match the specified dbVersion.
         */
        dbVersion: string;
        /**
         * A filter to return only autonomous database resources that match the specified workload type.
         */
        dbWorkload: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Indicates the number of seconds of data loss for a Data Guard failover.
         */
        failedDataRecoveryInSeconds: number;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * A filter to return only resources that match the given Infrastructure Type.
         */
        infrastructureType: string;
        /**
         * Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the `whitelistedIps` property. While specifying `whitelistedIps` rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the `UpdateAutonomousDatabase` API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
         */
        isAccessControlEnabled: boolean;
        /**
         * Indicates if auto scaling is enabled for the Autonomous Database CPU core count.
         */
        isAutoScalingEnabled: boolean;
        /**
         * Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `FALSE`.
         */
        isAutoScalingForStorageEnabled: boolean;
        /**
         * A filter to return only resources that have Data Guard enabled.
         */
        isDataGuardEnabled: boolean;
        /**
         * True if the database uses [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
         */
        isDedicated: boolean;
        /**
         * Filter on the value of the resource's 'isFreeTier' property. A value of `true` returns only Always Free resources. A value of `false` excludes Always Free resources from the returned results. Omitting this parameter returns both Always Free and paid resources.
         */
        isFreeTier: boolean;
        /**
         * Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
         */
        isLocalDataGuardEnabled: boolean;
        /**
         * Indicates whether the Autonomous Database requires mTLS connections.
         */
        isMtlsConnectionRequired: boolean;
        /**
         * Indicates if the Autonomous Database version is a preview version.
         */
        isPreview: boolean;
        isPreviewVersionWithServiceTermsAccepted: boolean;
        /**
         * Indicates if the refreshable clone can be reconnected to its source database.
         */
        isReconnectCloneEnabled: boolean;
        /**
         * Filter on the value of the resource's 'isRefreshableClone' property. A value of `true` returns only refreshable clones. A value of `false` excludes refreshable clones from the returned results. Omitting this parameter returns both refreshable clones and databases that are not refreshable clones.
         */
        isRefreshableClone: boolean;
        /**
         * Indicates whether the Autonomous Database has Cross Region Data Guard enabled. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
         */
        isRemoteDataGuardEnabled: boolean;
        isShrinkOnly: boolean;
        /**
         * Key History Entry.
         */
        keyHistoryEntries: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseKeyHistoryEntry[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         */
        keyStoreId: string;
        /**
         * The wallet name for Oracle Key Vault.
         */
        keyStoreWalletName: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * KMS key lifecycle details.
         */
        kmsKeyLifecycleDetails: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle PaaS and IaaS services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Database service. Note that when provisioning an Autonomous Database on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null because the attribute is already set at the Autonomous Exadata Infrastructure level. When using [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), if a value is not specified, the system will supply the value of `BRING_YOUR_OWN_LICENSE`.
         */
        licenseModel: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * Autonomous Data Guard standby database details.
         */
        localStandbyDbs: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseLocalStandbyDb[];
        /**
         * The number of Max OCPU cores to be made available to the autonomous database with auto scaling of cpu enabled.
         */
        maxCpuCoreCount: number;
        /**
         * The amount of memory (in GBs) enabled per each OCPU core in Autonomous VM Cluster.
         */
        memoryPerOracleComputeUnitInGbs: number;
        /**
         * The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
         */
        ncharacterSet: string;
        /**
         * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
         * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
         */
        nsgIds: string[];
        /**
         * The number of OCPU cores to be made available to the database.
         */
        ocpuCount: number;
        /**
         * The `DATABASE OPEN` mode. You can open the database in `READ_ONLY` or `READ_WRITE` mode.
         */
        openMode: string;
        /**
         * Status of Operations Insights for this Autonomous Database.
         */
        operationsInsightsStatus: string;
        /**
         * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for shared Exadata infrastructure, standby databases located in the same region as the source primary database do not have OCIDs.
         */
        peerDbIds: string[];
        /**
         * The Autonomous Database permission level. Restricted mode allows access only to admin users.
         */
        permissionLevel: string;
        /**
         * The private endpoint for the resource.
         */
        privateEndpoint: string;
        /**
         * The private endpoint Ip address for the resource.
         */
        privateEndpointIp: string;
        /**
         * The private endpoint label for the resource.
         */
        privateEndpointLabel: string;
        /**
         * An array of CPU values that an Autonomous Database can be scaled to.
         */
        provisionableCpuses: number[];
        /**
         * The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
         */
        refreshableMode: string;
        /**
         * The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
         */
        refreshableStatus: string;
        /**
         * The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
         */
        role: string;
        rotateKeyTrigger: boolean;
        /**
         * list of scheduled operations
         */
        scheduledOperations: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseScheduledOperation[];
        /**
         * The URL of the Service Console for the Autonomous Database.
         */
        serviceConsoleUrl: string;
        source: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that was cloned to create the current Autonomous Database.
         */
        sourceId: string;
        /**
         * **Deprecated** Autonomous Data Guard standby database details.
         */
        standbyDbs: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseStandbyDb[];
        /**
         * The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
         */
        standbyWhitelistedIps: string[];
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with.
         */
        subnetId: string;
        /**
         * The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
         */
        supportedRegionsToCloneTos: string[];
        switchoverTo: string;
        switchoverToRemotePeerId: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the Autonomous Database was created.
         */
        timeCreated: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
        /**
         * The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
         */
        timeDeletionOfFreeAutonomousDatabase: string;
        /**
         * The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
         */
        timeLocalDataGuardEnabled: string;
        /**
         * The date and time when maintenance will begin.
         */
        timeMaintenanceBegin: string;
        /**
         * The date and time when maintenance will end.
         */
        timeMaintenanceEnd: string;
        /**
         * The timestamp of the last failover operation.
         */
        timeOfLastFailover: string;
        /**
         * The date and time when last refresh happened.
         */
        timeOfLastRefresh: string;
        /**
         * The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
         */
        timeOfLastRefreshPoint: string;
        /**
         * The timestamp of the last switchover operation for the Autonomous Database.
         */
        timeOfLastSwitchover: string;
        /**
         * The date and time of next refresh.
         */
        timeOfNextRefresh: string;
        /**
         * The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
         */
        timeReclamationOfFreeAutonomousDatabase: string;
        /**
         * The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database.
         */
        timeUntilReconnectCloneEnabled: string;
        timestamp: string;
        /**
         * The amount of storage that has been used, in terabytes.
         */
        usedDataStorageSizeInTbs: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
        /**
         * The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
         */
        whitelistedIps: string[];
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseApexDetail {
        /**
         * The Oracle APEX Application Development version.
         */
        apexVersion: string;
        /**
         * The Oracle REST Data Services (ORDS) version.
         * *`arePrimaryWhitelistedIpsUsed` - This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It's value would be `TRUE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It's value would be `FALSE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
         */
        ordsVersion: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseBackupConfig {
        /**
         * Name of [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) bucket to use for storing manual backups.
         */
        manualBackupBucketName: string;
        /**
         * The manual backup destination type.
         */
        manualBackupType: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseConnectionString {
        /**
         * Returns all connection strings that can be used to connect to the Autonomous Database. For more information, please see [Predefined Database Service Names for Autonomous Transaction Processing](https://docs.oracle.com/en/cloud/paas/atp-cloud/atpug/connect-predefined.html#GUID-9747539B-FD46-44F1-8FF8-F5AC650F15BE)
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
         */
        dedicated: string;
        /**
         * The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.
         */
        high: string;
        /**
         * The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
         */
        low: string;
        /**
         * The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.
         */
        medium: string;
        /**
         * A list of connection string profiles to allow clients to group, filter and select connection string values based on structured metadata.
         */
        profiles: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseConnectionStringProfile[];
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseConnectionStringProfile {
        /**
         * Consumer group used by the connection.
         */
        consumerGroup: string;
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Host format used in connection string.
         */
        hostFormat: string;
        /**
         * Protocol used by the connection.
         */
        protocol: string;
        /**
         * Specifies whether the listener performs a direct hand-off of the session, or redirects the session. In RAC deployments where SCAN is used, sessions are redirected to a Node VIP. Use `DIRECT` for direct hand-offs. Use `REDIRECT` to redirect the session.
         */
        sessionMode: string;
        /**
         * Specifies whether the connection string is using the long (`LONG`), Easy Connect (`EZCONNECT`), or Easy Connect Plus (`EZCONNECTPLUS`) format. Autonomous Databases on shared Exadata infrastructure always use the long format.
         */
        syntaxFormat: string;
        /**
         * Specifies whether the TLS handshake is using one-way (`SERVER`) or mutual (`MUTUAL`) authentication.
         */
        tlsAuthentication: string;
        /**
         * Connection string value.
         */
        value: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseConnectionUrl {
        /**
         * Oracle Application Express (APEX) URL.
         */
        apexUrl: string;
        /**
         * The URL of the Graph Studio for the Autonomous Database.
         */
        graphStudioUrl: string;
        /**
         * Oracle Machine Learning user management URL.
         */
        machineLearningUserManagementUrl: string;
        /**
         * Oracle SQL Developer Web URL.
         */
        sqlDevWebUrl: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseCustomerContact {
        /**
         * The email address used by Oracle to send notifications regarding databases and infrastructure.
         */
        email: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseKeyHistoryEntry {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The date and time the kms key activated.
         */
        timeActivated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseLocalStandbyDb {
        /**
         * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         */
        lagTimeInSeconds: number;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseScheduledOperation {
        /**
         * Day of the week.
         */
        dayOfWeeks: outputs.Database.GetAutonomousDatabasesAutonomousDatabaseScheduledOperationDayOfWeek[];
        /**
         * auto start time. value must be of ISO-8601 format "HH:mm"
         */
        scheduledStartTime: string;
        /**
         * auto stop time. value must be of ISO-8601 format "HH:mm"
         */
        scheduledStopTime: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseScheduledOperationDayOfWeek {
        /**
         * Name of the day of the week.
         */
        name: string;
    }

    export interface GetAutonomousDatabasesAutonomousDatabaseStandbyDb {
        /**
         * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         */
        lagTimeInSeconds: number;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabase {
        /**
         * The current amount of storage in use for user and system data, in terabytes (TB).
         */
        actualUsedDataStorageSizeInTbs: number;
        /**
         * The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
         */
        allocatedStorageSizeInTbs: number;
        /**
         * Information about Oracle APEX Application Development.
         */
        apexDetails: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseApexDetail[];
        /**
         * This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It's value would be `TRUE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It's value would be `FALSE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
         */
        arePrimaryWhitelistedIpsUsed: boolean;
        /**
         * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        autonomousContainerDatabaseId: string;
        /**
         * The maintenance schedule type of the Autonomous Database on shared Exadata infrastructure. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
         */
        autonomousMaintenanceScheduleType: string;
        /**
         * List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
         */
        availableUpgradeVersions: string[];
        /**
         * Autonomous Database configuration details for storing [manual backups](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/backup-restore.html#GUID-9035DFB8-4702-4CEB-8281-C2A303820809) in the [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) service.
         */
        backupConfigs: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseBackupConfig[];
        /**
         * The character set for the autonomous database.  The default is AL32UTF8. Allowed values are:
         */
        characterSet: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
         */
        connectionStrings: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseConnectionString[];
        /**
         * The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).  Example: `{"sqlDevWebUrl": "https://<hostname>/ords...", "apexUrl", "https://<hostname>/ords..."}`
         */
        connectionUrls: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseConnectionUrl[];
        /**
         * The number of OCPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         */
        cpuCoreCount: number;
        /**
         * Customer Contacts.
         */
        customerContacts: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseCustomerContact[];
        /**
         * Status of the Data Safe registration for this Autonomous Database.
         */
        dataSafeStatus: string;
        /**
         * The quantity of data in the database, in gigabytes.
         */
        dataStorageSizeInGb: number;
        /**
         * The quantity of data in the database, in terabytes.
         */
        dataStorageSizeInTbs: number;
        /**
         * The Oracle Database Edition that applies to the Autonomous databases.
         */
        databaseEdition: string;
        /**
         * Status of Database Management for this Autonomous Database.
         */
        databaseManagementStatus: string;
        /**
         * The Autonomous Data Guard region type of the Autonomous Database. For Autonomous Databases on shared Exadata infrastructure, Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. The standby regions in Data Guard associations can be the same region designated as the primary region, or they can be remote regions. Certain database administrative operations may be available only in the primary region of the Data Guard association, and cannot be performed when the database using the "primary" role is operating in a remote Data Guard standby region.
         */
        dataguardRegionType: string;
        /**
         * The database name.
         */
        dbName: string;
        /**
         * A valid Oracle Database version for Autonomous Database.
         */
        dbVersion: string;
        /**
         * The Autonomous Database workload type. The following values are valid:
         * * OLTP - indicates an Autonomous Transaction Processing database
         * * DW - indicates an Autonomous Data Warehouse database
         * * AJD - indicates an Autonomous JSON Database
         * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
         */
        dbWorkload: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Indicates the number of seconds of data loss for a Data Guard failover.
         */
        failedDataRecoveryInSeconds: number;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * The infrastructure type this resource belongs to.
         */
        infrastructureType: string;
        /**
         * Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the `whitelistedIps` property. While specifying `whitelistedIps` rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the `UpdateAutonomousDatabase` API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
         */
        isAccessControlEnabled: boolean;
        /**
         * Indicates if auto scaling is enabled for the Autonomous Database CPU core count.
         */
        isAutoScalingEnabled: boolean;
        /**
         * Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `FALSE`.
         */
        isAutoScalingForStorageEnabled: boolean;
        /**
         * **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
         */
        isDataGuardEnabled: boolean;
        /**
         * True if the database uses [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
         */
        isDedicated: boolean;
        /**
         * Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
         */
        isFreeTier: boolean;
        /**
         * Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
         */
        isLocalDataGuardEnabled: boolean;
        /**
         * Indicates whether the Autonomous Database requires mTLS connections.
         */
        isMtlsConnectionRequired: boolean;
        /**
         * Indicates if the Autonomous Database version is a preview version.
         */
        isPreview: boolean;
        /**
         * Indicates if the refreshable clone can be reconnected to its source database.
         */
        isReconnectCloneEnabled: boolean;
        /**
         * Indicates whether the Autonomous Database is a refreshable clone.
         */
        isRefreshableClone: boolean;
        /**
         * Indicates whether the Autonomous Database has Cross Region Data Guard enabled. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
         */
        isRemoteDataGuardEnabled: boolean;
        /**
         * Key History Entry.
         */
        keyHistoryEntries: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseKeyHistoryEntry[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         */
        keyStoreId: string;
        /**
         * The wallet name for Oracle Key Vault.
         */
        keyStoreWalletName: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * KMS key lifecycle details.
         */
        kmsKeyLifecycleDetails: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle PaaS and IaaS services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Database service. Note that when provisioning an Autonomous Database on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null because the attribute is already set at the Autonomous Exadata Infrastructure level. When using [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), if a value is not specified, the system will supply the value of `BRING_YOUR_OWN_LICENSE`.
         */
        licenseModel: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * Autonomous Data Guard standby database details.
         */
        localStandbyDbs: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseLocalStandbyDb[];
        /**
         * The number of Max OCPU cores to be made available to the autonomous database with auto scaling of cpu enabled.
         */
        maxCpuCoreCount: number;
        /**
         * The amount of memory (in GBs) enabled per each OCPU core in Autonomous VM Cluster.
         */
        memoryPerOracleComputeUnitInGbs: number;
        /**
         * The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
         */
        ncharacterSet: string;
        /**
         * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
         * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
         */
        nsgIds: string[];
        /**
         * The number of OCPU cores to be made available to the database.
         */
        ocpuCount: number;
        /**
         * The `DATABASE OPEN` mode. You can open the database in `READ_ONLY` or `READ_WRITE` mode.
         */
        openMode: string;
        /**
         * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for shared Exadata infrastructure, standby databases located in the same region as the source primary database do not have OCIDs.
         */
        peerDbIds: string[];
        /**
         * The private endpoint for the resource.
         */
        privateEndpoint: string;
        /**
         * The private endpoint Ip address for the resource.
         */
        privateEndpointIp: string;
        /**
         * The private endpoint label for the resource. Setting this to an empty string, after the private endpoint database gets created, will change the same private endpoint database to the public endpoint database.
         */
        privateEndpointLabel: string;
        /**
         * An array of CPU values that an Autonomous Database can be scaled to.
         */
        provisionableCpuses: number[];
        /**
         * The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
         */
        refreshableMode: string;
        /**
         * The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
         */
        refreshableStatus: string;
        /**
         * The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
         */
        role: string;
        /**
         * list of scheduled operations
         */
        scheduledOperations: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseScheduledOperation[];
        /**
         * The URL of the Service Console for the Autonomous Database.
         */
        serviceConsoleUrl: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that was cloned to create the current Autonomous Database.
         */
        sourceId: string;
        /**
         * **Deprecated** Autonomous Data Guard standby database details.
         */
        standbyDbs: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseStandbyDb[];
        /**
         * The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
         */
        standbyWhitelistedIps: string[];
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with.
         */
        subnetId: string;
        /**
         * The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
         */
        supportedRegionsToCloneTos: string[];
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the Autonomous Database was created.
         */
        timeCreated: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
        /**
         * The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
         */
        timeDeletionOfFreeAutonomousDatabase: string;
        /**
         * The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
         */
        timeLocalDataGuardEnabled: string;
        /**
         * The date and time when maintenance will begin.
         */
        timeMaintenanceBegin: string;
        /**
         * The date and time when maintenance will end.
         */
        timeMaintenanceEnd: string;
        /**
         * The timestamp of the last failover operation.
         */
        timeOfLastFailover: string;
        /**
         * The date and time when last refresh happened.
         */
        timeOfLastRefresh: string;
        /**
         * The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
         */
        timeOfLastRefreshPoint: string;
        /**
         * The timestamp of the last switchover operation for the Autonomous Database.
         */
        timeOfLastSwitchover: string;
        /**
         * The date and time of next refresh.
         */
        timeOfNextRefresh: string;
        /**
         * The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
         */
        timeReclamationOfFreeAutonomousDatabase: string;
        /**
         * The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database.
         */
        timeUntilReconnectCloneEnabled: string;
        /**
         * The amount of storage that has been used, in terabytes.
         */
        usedDataStorageSizeInTbs: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
        /**
         * The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
         */
        whitelistedIps: string[];
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseApexDetail {
        /**
         * The Oracle APEX Application Development version.
         */
        apexVersion: string;
        /**
         * The Oracle REST Data Services (ORDS) version.
         */
        ordsVersion: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseBackupConfig {
        /**
         * Name of [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) bucket to use for storing manual backups.
         */
        manualBackupBucketName: string;
        /**
         * The manual backup destination type.
         */
        manualBackupType: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseConnectionString {
        /**
         * Returns all connection strings that can be used to connect to the Autonomous Database. For more information, please see [Predefined Database Service Names for Autonomous Transaction Processing](https://docs.oracle.com/en/cloud/paas/atp-cloud/atpug/connect-predefined.html#GUID-9747539B-FD46-44F1-8FF8-F5AC650F15BE)
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
         */
        dedicated: string;
        /**
         * The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.
         */
        high: string;
        /**
         * The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
         */
        low: string;
        /**
         * The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.
         */
        medium: string;
        /**
         * A list of connection string profiles to allow clients to group, filter and select connection string values based on structured metadata.
         */
        profiles: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseConnectionStringProfile[];
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseConnectionStringProfile {
        /**
         * Consumer group used by the connection.
         */
        consumerGroup: string;
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Host format used in connection string.
         */
        hostFormat: string;
        /**
         * Protocol used by the connection.
         */
        protocol: string;
        /**
         * Specifies whether the listener performs a direct hand-off of the session, or redirects the session. In RAC deployments where SCAN is used, sessions are redirected to a Node VIP. Use `DIRECT` for direct hand-offs. Use `REDIRECT` to redirect the session.
         */
        sessionMode: string;
        /**
         * Specifies whether the connection string is using the long (`LONG`), Easy Connect (`EZCONNECT`), or Easy Connect Plus (`EZCONNECTPLUS`) format. Autonomous Databases on shared Exadata infrastructure always use the long format.
         */
        syntaxFormat: string;
        /**
         * Specifies whether the TLS handshake is using one-way (`SERVER`) or mutual (`MUTUAL`) authentication.
         */
        tlsAuthentication: string;
        /**
         * Connection string value.
         */
        value: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseConnectionUrl {
        /**
         * Oracle Application Express (APEX) URL.
         */
        apexUrl: string;
        /**
         * The URL of the Graph Studio for the Autonomous Database.
         */
        graphStudioUrl: string;
        /**
         * Oracle Machine Learning user management URL.
         */
        machineLearningUserManagementUrl: string;
        /**
         * Oracle SQL Developer Web URL.
         */
        sqlDevWebUrl: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseCustomerContact {
        /**
         * The email address used by Oracle to send notifications regarding databases and infrastructure.
         */
        email: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseKeyHistoryEntry {
        /**
         * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         */
        id: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The date and time the kms key activated.
         */
        timeActivated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseLocalStandbyDb {
        /**
         * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         */
        lagTimeInSeconds: number;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseScheduledOperation {
        /**
         * Day of the week.
         */
        dayOfWeeks: outputs.Database.GetAutonomousDatabasesClonesAutonomousDatabaseScheduledOperationDayOfWeek[];
        /**
         * auto start time. value must be of ISO-8601 format "HH:mm"
         */
        scheduledStartTime: string;
        /**
         * auto stop time. value must be of ISO-8601 format "HH:mm"
         */
        scheduledStopTime: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseScheduledOperationDayOfWeek {
        /**
         * Name of the day of the week.
         */
        name: string;
    }

    export interface GetAutonomousDatabasesClonesAutonomousDatabaseStandbyDb {
        /**
         * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         */
        lagTimeInSeconds: number;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         */
        timeDataGuardRoleChanged: string;
    }

    export interface GetAutonomousDatabasesClonesFilter {
        /**
         * Name of the day of the week.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousDatabasesFilter {
        /**
         * Name of the day of the week.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousDbPreviewVersionsAutonomousDbPreviewVersion {
        /**
         * The Autonomous Database workload type. The following values are valid:
         * * OLTP - indicates an Autonomous Transaction Processing database
         * * DW - indicates an Autonomous Data Warehouse database
         * * AJD - indicates an Autonomous JSON Database
         * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
         */
        dbWorkload: string;
        /**
         * A URL that points to a detailed description of the preview version.
         */
        details: string;
        /**
         * The date and time when the preview version availability begins.
         */
        timePreviewBegin: string;
        /**
         * The date and time when the preview version availability ends.
         */
        timePreviewEnd: string;
        /**
         * A valid Autonomous Database preview version.
         */
        version: string;
    }

    export interface GetAutonomousDbPreviewVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousDbVersionsAutonomousDbVersion {
        /**
         * A filter to return only autonomous database resources that match the specified workload type.
         */
        dbWorkload: string;
        /**
         * A URL that points to a detailed description of the Autonomous Database version.
         */
        details: string;
        /**
         * True if the database uses [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
         */
        isDedicated: boolean;
        /**
         * True if this version of the Oracle Database software's default is free.
         */
        isDefaultForFree: boolean;
        /**
         * True if this version of the Oracle Database software's default is paid.
         */
        isDefaultForPaid: boolean;
        /**
         * True if this version of the Oracle Database software can be used for Always-Free Autonomous Databases.
         */
        isFreeTierEnabled: boolean;
        /**
         * True if this version of the Oracle Database software has payments enabled.
         */
        isPaidEnabled: boolean;
        /**
         * A valid Oracle Database version for Autonomous Database.
         */
        version: string;
    }

    export interface GetAutonomousDbVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousExadataInfrastructureMaintenanceWindow {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousExadataInfrastructureMaintenanceWindowMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousExadataInfrastructureMaintenanceWindowDetail {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousExadataInfrastructureMaintenanceWindowDetailDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousExadataInfrastructureMaintenanceWindowDetailMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousExadataInfrastructureMaintenanceWindowDetailDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousExadataInfrastructureMaintenanceWindowDetailMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousExadataInfrastructureMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousExadataInfrastructureOcpuByWorkloadType {
        /**
         * The total number of OCPU cores in use for Autonomous Data Warehouse databases in the infrastructure instance.
         */
        adw: number;
        /**
         * The total number of OCPU cores in use for Autonomous Transaction Processing databases in the infrastructure instance.
         */
        atp: number;
    }

    export interface GetAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShape {
        /**
         * The maximum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
         */
        availableCoreCount: number;
        /**
         * The increment in which core count can be increased or decreased.
         */
        coreCountIncrement: number;
        /**
         * The maximum number of nodes available for the shape.
         */
        maximumNodeCount: number;
        /**
         * The minimum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
         */
        minimumCoreCount: number;
        /**
         * The minimum number of nodes available for the shape.
         */
        minimumNodeCount: number;
        /**
         * The name of the shape used for the Autonomous Exadata Infrastructure.
         */
        name: string;
    }

    export interface GetAutonomousExadataInfrastructureShapesFilter {
        /**
         * The name of the shape used for the Autonomous Exadata Infrastructure.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructure {
        /**
         * A filter to return only resources that match the given availability domain exactly.
         *
         * @deprecated Autonomous Exadata Infrastructure resource is now end-of-life.Please provision cloud autonomous vm cluster instead.
         */
        availabilityDomain: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        createAsync: boolean;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The domain name for the Autonomous Exadata Infrastructure.
         */
        domain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The host name for the Autonomous Exadata Infrastructure node.
         */
        hostname: string;
        /**
         * The OCID of the Autonomous Exadata Infrastructure.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
         */
        lastMaintenanceRunId: string;
        /**
         * The Oracle license model that applies to all databases in the Autonomous Exadata Infrastructure. The default is BRING_YOUR_OWN_LICENSE.
         */
        licenseModel: string;
        /**
         * Additional information about the current lifecycle state of the Autonomous Exadata Infrastructure.
         */
        lifecycleDetails: string;
        maintenanceWindowDetails: outputs.Database.GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetail[];
        /**
         * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         */
        maintenanceWindows: outputs.Database.GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindow[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
         */
        nextMaintenanceRunId: string;
        /**
         * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
         * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
         */
        nsgIds: string[];
        /**
         * The FQDN of the DNS record for the SCAN IP addresses that are associated with the Autonomous Exadata Infrastructure.
         */
        scanDnsName: string;
        /**
         * The shape of the Autonomous Exadata Infrastructure. The shape determines resources to allocate to the Autonomous Exadata Infrastructure (CPU cores, memory and storage).
         */
        shape: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The OCID of the subnet the Autonomous Exadata Infrastructure is associated with.
         */
        subnetId: string;
        /**
         * The date and time the Autonomous Exadata Infrastructure was created.
         */
        timeCreated: string;
        /**
         * The OCID of the zone the Autonomous Exadata Infrastructure is associated with.
         */
        zoneId: string;
    }

    export interface GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindow {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetail {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetailDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetailMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetailDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetailMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousExadataInfrastructuresFilter {
        /**
         * Name of the month of the year.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAutonomousVmClusterMaintenanceWindow {
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousVmClusterMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousVmClusterMaintenanceWindowMonth[];
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousVmClusterMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousVmClusterMaintenanceWindowDetail {
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousVmClusterMaintenanceWindowDetailDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousVmClusterMaintenanceWindowDetailMonth[];
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousVmClusterMaintenanceWindowDetailDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousVmClusterMaintenanceWindowDetailMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousVmClusterMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousVmClustersAutonomousVmCluster {
        /**
         * The data disk group size allocated for Autonomous Databases, in TBs.
         */
        autonomousDataStorageSizeInTbs: number;
        /**
         * The data disk group size available for Autonomous Databases, in TBs.
         */
        availableAutonomousDataStorageSizeInTbs: number;
        /**
         * The number of Autonomous Container Databases that can be created with the currently available local storage.
         */
        availableContainerDatabases: number;
        /**
         * The numnber of CPU cores available.
         */
        availableCpus: number;
        /**
         * **Deprecated.** Use `availableAutonomousDataStorageSizeInTBs` for Autonomous Databases' data storage availability in TBs.
         */
        availableDataStorageSizeInTbs: number;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The number of OCPU cores enabled per VM cluster node.
         */
        cpuCoreCountPerNode: number;
        /**
         * The number of enabled CPU cores.
         */
        cpusEnabled: number;
        /**
         * The total data storage allocated in GBs.
         */
        dataStorageSizeInGb: number;
        /**
         * The total data storage allocated in TBs
         */
        dataStorageSizeInTbs: number;
        /**
         * The local node storage allocated in GBs.
         */
        dbNodeStorageSizeInGbs: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * If provided, filters the results for the given Exadata Infrastructure.
         */
        exadataInfrastructureId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM cluster.
         */
        id: string;
        /**
         * If true, database backup on local Exadata storage is configured for the Autonomous VM cluster. If false, database backup on local Exadata storage is not available in the Autonomous VM cluster.
         */
        isLocalBackupEnabled: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
         */
        lastMaintenanceRunId: string;
        /**
         * The Oracle license model that applies to the Autonomous VM cluster. The default is LICENSE_INCLUDED.
         */
        licenseModel: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        maintenanceWindowDetails: outputs.Database.GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowDetail[];
        /**
         * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         */
        maintenanceWindows: outputs.Database.GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindow[];
        /**
         * The amount of memory (in GBs) enabled per each OCPU core.
         */
        memoryPerOracleComputeUnitInGbs: number;
        /**
         * The memory allocated in GBs.
         */
        memorySizeInGbs: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
         */
        nextMaintenanceRunId: string;
        /**
         * The number of enabled OCPU cores.
         */
        ocpusEnabled: number;
        /**
         * CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
         */
        reclaimableCpus: number;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time that the Autonomous VM cluster was created.
         */
        timeCreated: string;
        /**
         * The time zone to use for the Autonomous VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
         */
        timeZone: string;
        /**
         * The total number of Autonomous Container Databases that can be created.
         */
        totalContainerDatabases: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
         */
        vmClusterNetworkId: string;
    }

    export interface GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindow {
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowMonth[];
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowDetail {
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowDetailDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowDetailMonth[];
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowDetailDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowDetailMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousVmClustersAutonomousVmClusterMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetAutonomousVmClustersFilter {
        /**
         * Name of the month of the year.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBackupDestinationAssociatedDatabase {
        /**
         * The display name of the database that is associated with the backup destination.
         */
        dbName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
    }

    export interface GetBackupDestinationMountTypeDetail {
        /**
         * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
         */
        localMountPointPath: string;
        mountType: string;
        /**
         * Specifies the directory on which to mount the file system
         */
        nfsServerExport: string;
        /**
         * Host names or IP addresses for NFS Auto mount.
         */
        nfsServers: string[];
    }

    export interface GetBackupDestinationsBackupDestination {
        /**
         * List of databases associated with the backup destination.
         */
        associatedDatabases: outputs.Database.GetBackupDestinationsBackupDestinationAssociatedDatabase[];
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the connection string for connecting to the Recovery Appliance.
         */
        connectionString: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * The user-provided name of the backup destination.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
        /**
         * A descriptive text associated with the lifecycleState. Typically contains additional displayable text
         */
        lifecycleDetails: string;
        /**
         * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
         *
         * @deprecated The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
         */
        localMountPointPath: string;
        mountTypeDetails: outputs.Database.GetBackupDestinationsBackupDestinationMountTypeDetail[];
        /**
         * NFS Mount type for backup destination.
         */
        nfsMountType: string;
        /**
         * Specifies the directory on which to mount the file system
         */
        nfsServerExport: string;
        /**
         * Host names or IP addresses for NFS Auto mount.
         */
        nfsServers: string[];
        /**
         * The current lifecycle state of the backup destination.
         */
        state: string;
        /**
         * The date and time the backup destination was created.
         */
        timeCreated: string;
        /**
         * A filter to return only resources that match the given type of the Backup Destination.
         */
        type: string;
        /**
         * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
         */
        vpcUsers: string[];
    }

    export interface GetBackupDestinationsBackupDestinationAssociatedDatabase {
        /**
         * The display name of the database that is associated with the backup destination.
         */
        dbName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
         */
        id: string;
    }

    export interface GetBackupDestinationsBackupDestinationMountTypeDetail {
        /**
         * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
         */
        localMountPointPath: string;
        mountType: string;
        /**
         * Specifies the directory on which to mount the file system
         */
        nfsServerExport: string;
        /**
         * Host names or IP addresses for NFS Auto mount.
         */
        nfsServers: string[];
    }

    export interface GetBackupDestinationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBackupsBackup {
        /**
         * The name of the availability domain where the database backup is stored.
         */
        availabilityDomain: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The Oracle Database edition of the DB system from which the database backup was taken.
         */
        databaseEdition: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        databaseId: string;
        /**
         * The size of the database in gigabytes at the time the backup was taken.
         */
        databaseSizeInGbs: number;
        /**
         * The user-friendly name for the backup. The name does not have to be unique.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup.
         */
        id: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * Shape of the backup's source database.
         */
        shape: string;
        /**
         * The current state of the backup.
         */
        state: string;
        /**
         * The date and time the backup was completed.
         */
        timeEnded: string;
        /**
         * The date and time the backup started.
         */
        timeStarted: string;
        /**
         * The type of backup.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
        /**
         * Version of the backup's source database
         */
        version: string;
    }

    export interface GetBackupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCloudAutonomousVmClustersCloudAutonomousVmCluster {
        /**
         * The data disk group size allocated for Autonomous Databases, in TBs.
         */
        autonomousDataStorageSizeInTbs: number;
        /**
         * A filter to return only resources that match the given availability domain exactly.
         */
        availabilityDomain: string;
        /**
         * The data disk group size available for Autonomous Databases, in TBs.
         */
        availableAutonomousDataStorageSizeInTbs: number;
        /**
         * The number of Autonomous Container Databases that can be created with the currently available local storage.
         */
        availableContainerDatabases: number;
        /**
         * CPU cores available for allocation to Autonomous Databases.
         */
        availableCpus: number;
        /**
         * If provided, filters the results for the specified cloud Exadata infrastructure.
         */
        cloudExadataInfrastructureId: string;
        /**
         * The time zone of the Cloud Autonomous VM Cluster.
         */
        clusterTimeZone: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The number of CPU cores enabled on the cloud Autonomous VM cluster.
         */
        cpuCoreCount: number;
        /**
         * The total data storage allocated, in gigabytes (GB).
         */
        dataStorageSizeInGb: number;
        /**
         * The total data storage allocated, in terabytes (TB).
         */
        dataStorageSizeInTbs: number;
        /**
         * The local node storage allocated in GBs.
         */
        dbNodeStorageSizeInGbs: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * User defined description of the cloud Autonomous VM cluster.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The domain name for the cloud Autonomous VM cluster.
         */
        domain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the cloud Autonomous VM cluster.
         */
        hostname: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cloud Autonomous VM cluster.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
         */
        lastMaintenanceRunId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history. This value is updated when a maintenance update starts.
         */
        lastUpdateHistoryEntryId: string;
        /**
         * The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle PaaS and IaaS services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Database service. Note that when provisioning an Autonomous Database on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null because the attribute is already set at the Autonomous Exadata Infrastructure level. When using [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), if a value is not specified, the system will supply the value of `BRING_YOUR_OWN_LICENSE`.
         */
        licenseModel: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The amount of memory (in GBs) enabled per each OCPU core.
         */
        memoryPerOracleComputeUnitInGbs: number;
        /**
         * The memory allocated in GBs.
         */
        memorySizeInGbs: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
         */
        nextMaintenanceRunId: string;
        /**
         * The number of database servers in the cloud VM cluster.
         */
        nodeCount: number;
        /**
         * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
         * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
         */
        nsgIds: string[];
        /**
         * The number of CPU cores enabled on the cloud Autonomous VM cluster. Only 1 decimal place is allowed for the fractional part.
         */
        ocpuCount: number;
        /**
         * CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
         */
        reclaimableCpus: number;
        rotateOrdsCertsTrigger: boolean;
        rotateSslCertsTrigger: boolean;
        /**
         * The model name of the Exadata hardware running the cloud Autonomous VM cluster.
         */
        shape: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the cloud Autonomous VM Cluster is associated with.
         */
        subnetId: string;
        /**
         * The date and time that the cloud Autonomous VM cluster was created.
         */
        timeCreated: string;
        /**
         * The last date and time that the cloud Autonomous VM cluster was updated.
         */
        timeUpdated: string;
        /**
         * The total number of Autonomous Container Databases that can be created with the allocated local storage.
         */
        totalContainerDatabases: number;
    }

    export interface GetCloudAutonomousVmClustersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCloudExadataInfrastructureCustomerContact {
        /**
         * The email address used by Oracle to send notifications regarding databases and infrastructure.
         */
        email: string;
    }

    export interface GetCloudExadataInfrastructureMaintenanceWindow {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetCloudExadataInfrastructureMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetCloudExadataInfrastructureMaintenanceWindowMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetCloudExadataInfrastructureMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetCloudExadataInfrastructureMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetCloudExadataInfrastructuresCloudExadataInfrastructure {
        /**
         * The name of the availability domain that the cloud Exadata infrastructure resource is located in.
         */
        availabilityDomain: string;
        /**
         * The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
         */
        availableStorageSizeInGbs: number;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The number of compute servers for the cloud Exadata infrastructure.
         */
        computeCount: number;
        /**
         * The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
         */
        customerContacts: outputs.Database.GetCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure resource.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
         */
        lastMaintenanceRunId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         */
        maintenanceWindows: outputs.Database.GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
         */
        nextMaintenanceRunId: string;
        /**
         * The model name of the cloud Exadata infrastructure resource.
         */
        shape: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The number of storage servers for the cloud Exadata infrastructure.
         */
        storageCount: number;
        /**
         * The date and time the cloud Exadata infrastructure resource was created.
         */
        timeCreated: string;
        /**
         * The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
         */
        totalStorageSizeInGbs: number;
    }

    export interface GetCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact {
        /**
         * The email address used by Oracle to send notifications regarding databases and infrastructure.
         */
        email: string;
    }

    export interface GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindowMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetCloudExadataInfrastructuresFilter {
        /**
         * Name of the month of the year.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCloudVmClusterDataCollectionOption {
        /**
         * Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster/Cloud VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
         */
        isDiagnosticsEventsEnabled: boolean;
    }

    export interface GetCloudVmClusterIormConfigCach {
        /**
         * An array of IORM settings for all the database in the Exadata DB system.
         */
        dbPlans: outputs.Database.GetCloudVmClusterIormConfigCachDbPlan[];
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The current value for the IORM objective. The default is `AUTO`.
         */
        objective: string;
        /**
         * The current state of the cloud VM cluster.
         */
        state: string;
    }

    export interface GetCloudVmClusterIormConfigCachDbPlan {
        /**
         * The database name. For the default `DbPlan`, the `dbName` is `default`.
         */
        dbName: string;
        /**
         * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         */
        flashCacheLimit: string;
        /**
         * The relative priority of this database.
         */
        share: number;
    }

    export interface GetCloudVmClusterIormConfigDbPlan {
        /**
         * The database name. For the default `DbPlan`, the `dbName` is `default`.
         */
        dbName: string;
        /**
         * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         */
        flashCacheLimit: string;
        /**
         * The relative priority of this database.
         */
        share: number;
    }

    export interface GetCloudVmClustersCloudVmCluster {
        /**
         * The name of the availability domain that the cloud Exadata infrastructure resource is located in.
         */
        availabilityDomain: string;
        /**
         * A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
         */
        backupNetworkNsgIds: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet associated with the cloud VM cluster.
         */
        backupSubnetId: string;
        /**
         * If provided, filters the results for the specified cloud Exadata infrastructure.
         */
        cloudExadataInfrastructureId: string;
        /**
         * The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
         */
        clusterName: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The number of CPU cores enabled on the cloud VM cluster.
         */
        cpuCoreCount: number;
        createAsync: boolean;
        /**
         * Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
         */
        dataCollectionOptions: outputs.Database.GetCloudVmClustersCloudVmClusterDataCollectionOption[];
        /**
         * The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage.
         */
        dataStoragePercentage: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
         */
        diskRedundancy: string;
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The domain name for the cloud VM cluster.
         */
        domain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A valid Oracle Grid Infrastructure (GI) software version.
         */
        giVersion: string;
        /**
         * The hostname for the cloud VM cluster.
         */
        hostname: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster.
         */
        id: string;
        iormConfigCaches: outputs.Database.GetCloudVmClustersCloudVmClusterIormConfigCach[];
        /**
         * If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster.
         */
        isLocalBackupEnabled: boolean;
        /**
         * If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created.
         */
        isSparseDiskgroupEnabled: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
         */
        lastUpdateHistoryEntryId: string;
        /**
         * The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
         */
        licenseModel: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The port number configured for the listener on the cloud VM cluster.
         */
        listenerPort: string;
        /**
         * The number of nodes in the cloud VM cluster.
         */
        nodeCount: number;
        /**
         * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
         * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
         */
        nsgIds: string[];
        /**
         * The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
         */
        ocpuCount: number;
        /**
         * The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
         */
        scanDnsName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
         */
        scanDnsRecordId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
         */
        scanIpIds: string[];
        /**
         * The TCP Single Client Access Name (SCAN) port. The default port is 1521.
         */
        scanListenerPortTcp: number;
        /**
         * The TCPS Single Client Access Name (SCAN) port. The default port is 2484.
         */
        scanListenerPortTcpSsl: number;
        /**
         * The model name of the Exadata hardware running the cloud VM cluster.
         */
        shape: string;
        /**
         * The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
         */
        sshPublicKeys: string[];
        /**
         * A filter to return only cloud VM clusters that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The storage allocation for the disk group, in gigabytes (GB).
         */
        storageSizeInGbs: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the cloud VM cluster.
         */
        subnetId: string;
        /**
         * Operating system version of the image.
         */
        systemVersion: string;
        /**
         * The date and time that the cloud VM cluster was created.
         */
        timeCreated: string;
        /**
         * The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
         */
        timeZone: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
         */
        vipIds: string[];
        /**
         * The OCID of the zone the cloud VM cluster is associated with.
         */
        zoneId: string;
    }

    export interface GetCloudVmClustersCloudVmClusterDataCollectionOption {
        /**
         * Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster/Cloud VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
         */
        isDiagnosticsEventsEnabled: boolean;
    }

    export interface GetCloudVmClustersCloudVmClusterIormConfigCach {
        dbPlans: outputs.Database.GetCloudVmClustersCloudVmClusterIormConfigCachDbPlan[];
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        objective: string;
        /**
         * A filter to return only cloud VM clusters that match the given lifecycle state exactly.
         */
        state: string;
    }

    export interface GetCloudVmClustersCloudVmClusterIormConfigCachDbPlan {
        dbName: string;
        flashCacheLimit: string;
        share: number;
    }

    export interface GetCloudVmClustersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDataGuardAssociationsDataGuardAssociation {
        /**
         * The lag time between updates to the primary database and application of the redo data on the standby database, as computed by the reporting database.  Example: `9 seconds`
         */
        applyLag: string;
        /**
         * The rate at which redo logs are synced between the associated databases.  Example: `180 Mb per second`
         */
        applyRate: string;
        availabilityDomain: string;
        backupNetworkNsgIds: string[];
        cpuCoreCount: number;
        createAsync: boolean;
        creationType: string;
        databaseAdminPassword: string;
        databaseDefinedTags: {[key: string]: any};
        databaseFreeformTags: {[key: string]: any};
        /**
         * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        databaseId: string;
        databaseSoftwareImageId: string;
        dbSystemDefinedTags: {[key: string]: any};
        dbSystemFreeformTags: {[key: string]: any};
        deleteStandbyDbHomeOnDelete: string;
        displayName: string;
        faultDomains: string[];
        hostname: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Data Guard association.
         */
        id: string;
        /**
         * True if active Data Guard is enabled.
         */
        isActiveDataGuardEnabled: boolean;
        licenseModel: string;
        /**
         * Additional information about the current lifecycleState, if available.
         */
        lifecycleDetails: string;
        nodeCount: number;
        nsgIds: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer database's Data Guard association.
         */
        peerDataGuardAssociationId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated peer database.
         */
        peerDatabaseId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home containing the associated peer database.
         */
        peerDbHomeId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system containing the associated peer database.
         */
        peerDbSystemId: string;
        peerDbUniqueName: string;
        /**
         * The role of the peer database in this Data Guard association.
         */
        peerRole: string;
        peerSidPrefix: string;
        peerVmClusterId: string;
        privateIp: string;
        /**
         * The protection mode of this Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
         */
        protectionMode: string;
        /**
         * The role of the reporting database in this Data Guard association.
         */
        role: string;
        shape: string;
        /**
         * The current state of the Data Guard association.
         */
        state: string;
        storageVolumePerformanceMode: string;
        subnetId: string;
        /**
         * The date and time the Data Guard association was created.
         */
        timeCreated: string;
        timeZone: string;
        /**
         * The redo transport type used by this Data Guard association.  For more information, see [Redo Transport Services](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-redo-transport-services.htm#SBYDB00400) in the Oracle Data Guard documentation.
         */
        transportType: string;
    }

    export interface GetDataGuardAssociationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDatabaseConnectionString {
        /**
         * All connection strings to use to connect to the Database.
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * Host name based CDB Connection String.
         */
        cdbDefault: string;
        /**
         * IP based CDB Connection String.
         */
        cdbIpDefault: string;
    }

    export interface GetDatabaseDatabase {
        adminPassword: string;
        backupId: string;
        backupTdePassword: string;
        /**
         * The character set for the database.
         */
        characterSet: string;
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        databaseSoftwareImageId: string;
        /**
         * Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
         */
        dbBackupConfigs: outputs.Database.GetDatabaseDatabaseDbBackupConfig[];
        /**
         * The database name.
         */
        dbName: string;
        /**
         * A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
         */
        dbUniqueName: string;
        /**
         * The database workload type.
         */
        dbWorkload: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The national character set for the database.
         */
        ncharacterSet: string;
        /**
         * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
         */
        pdbName: string;
        /**
         * Specifies a prefix for the `Oracle SID` of the database to be created.
         */
        sidPrefix: string;
        tdeWalletPassword: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetDatabaseDatabaseDbBackupConfig {
        /**
         * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
         */
        autoBackupEnabled: boolean;
        /**
         * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
         */
        autoBackupWindow: string;
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.GetDatabaseDatabaseDbBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface GetDatabaseDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        id: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        vpcUser: string;
    }

    export interface GetDatabaseDatabaseManagementConfig {
        /**
         * The status of the Database Management service.
         */
        managementStatus: string;
        /**
         * The Database Management type.
         */
        managementType: string;
    }

    export interface GetDatabaseDbBackupConfig {
        /**
         * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
         */
        autoBackupEnabled: boolean;
        /**
         * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
         */
        autoBackupWindow: string;
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.GetDatabaseDbBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface GetDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        id: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        vpcUser: string;
    }

    export interface GetDatabaseMaintenanceRunHistoriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDatabaseMaintenanceRunHistoriesMaintenanceRunHistory {
        /**
         * List of database server history details.
         */
        dbServersHistoryDetails: outputs.Database.GetDatabaseMaintenanceRunHistoriesMaintenanceRunHistoryDbServersHistoryDetail[];
        /**
         * The OCID of the maintenance run.
         */
        id: string;
        /**
         * Details of a maintenance run.
         */
        maintenanceRunDetails: outputs.Database.GetDatabaseMaintenanceRunHistoriesMaintenanceRunHistoryMaintenanceRunDetail[];
    }

    export interface GetDatabaseMaintenanceRunHistoriesMaintenanceRunHistoryDbServersHistoryDetail {
        /**
         * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         */
        dbServerPatchingDetails: outputs.Database.GetDatabaseMaintenanceRunHistoriesMaintenanceRunHistoryDbServersHistoryDetailDbServerPatchingDetail[];
        /**
         * The user-friendly name for the maintenance run.
         */
        displayName: string;
        /**
         * The OCID of the maintenance run.
         */
        id: string;
    }

    export interface GetDatabaseMaintenanceRunHistoriesMaintenanceRunHistoryDbServersHistoryDetailDbServerPatchingDetail {
        /**
         * Estimated time, in minutes, to patch one database server.
         */
        estimatedPatchDuration: number;
        /**
         * The status of the patching operation.
         */
        patchingStatus: string;
        /**
         * The time when the patching operation ended.
         */
        timePatchingEnded: string;
        /**
         * The time when the patching operation started.
         */
        timePatchingStarted: string;
    }

    export interface GetDatabaseMaintenanceRunHistoriesMaintenanceRunHistoryMaintenanceRunDetail {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Extend current custom action timeout between the current database servers during waiting state, from 0 (zero) to 30 minutes.
         */
        currentCustomActionTimeoutInMins: number;
        /**
         * The name of the current infrastruture component that is getting patched.
         */
        currentPatchingComponent: string;
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Specify a number of minutes, from 15 to 120.
         */
        customActionTimeoutInMins: number;
        /**
         * Description of the maintenance run.
         */
        description: string;
        /**
         * The user-friendly name for the maintenance run.
         */
        displayName: string;
        /**
         * The estimated start time of the next infrastruture component patching operation.
         */
        estimatedComponentPatchingStartTime: string;
        /**
         * The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching).
         */
        estimatedPatchingTimes: outputs.Database.GetDatabaseMaintenanceRunHistoriesMaintenanceRunHistoryMaintenanceRunDetailEstimatedPatchingTime[];
        /**
         * The OCID of the maintenance run.
         */
        id: string;
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database servers patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * Maintenance sub-type.
         */
        maintenanceSubtype: string;
        /**
         * The maintenance type.
         */
        maintenanceType: string;
        /**
         * Contain the patch failure count.
         */
        patchFailureCount: number;
        /**
         * The unique identifier of the patch. The identifier string includes the patch type, the Oracle Database version, and the patch creation date (using the format YYMMDD). For example, the identifier `ru_patch_19.9.0.0_201030` is used for an RU patch for Oracle Database 19.9.0.0 that was released October 30, 2020.
         */
        patchId: string;
        /**
         * The time when the patching operation ended.
         */
        patchingEndTime: string;
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The time when the patching operation started.
         */
        patchingStartTime: string;
        /**
         * The status of the patching operation.
         */
        patchingStatus: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance run for the Autonomous Data Guard association's peer container database.
         */
        peerMaintenanceRunId: string;
        /**
         * The state of the maintenance run history.
         */
        state: string;
        /**
         * The target software version for the database server patching operation.
         */
        targetDbServerVersion: string;
        /**
         * The target resource ID.
         */
        targetResourceId: string;
        /**
         * The type of the target resource.
         */
        targetResourceType: string;
        /**
         * The target Cell version that is to be patched to.
         */
        targetStorageServerVersion: string;
        /**
         * The date and time the maintenance run was completed.
         */
        timeEnded: string;
        /**
         * The date and time the maintenance run is scheduled to occur.
         */
        timeScheduled: string;
        /**
         * The date and time the maintenance run starts.
         */
        timeStarted: string;
    }

    export interface GetDatabaseMaintenanceRunHistoriesMaintenanceRunHistoryMaintenanceRunDetailEstimatedPatchingTime {
        /**
         * The estimated time required in minutes for database server patching.
         */
        estimatedDbServerPatchingTime: number;
        /**
         * The estimated time required in minutes for network switch patching.
         */
        estimatedNetworkSwitchesPatchingTime: number;
        /**
         * The estimated time required in minutes for storage server patching.
         */
        estimatedStorageServerPatchingTime: number;
        /**
         * The estimated total time required in minutes for all patching operations.
         */
        totalEstimatedPatchingTime: number;
    }

    export interface GetDatabaseMaintenanceRunHistoryDbServersHistoryDetail {
        /**
         * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         */
        dbServerPatchingDetails: outputs.Database.GetDatabaseMaintenanceRunHistoryDbServersHistoryDetailDbServerPatchingDetail[];
        /**
         * The user-friendly name for the maintenance run.
         */
        displayName: string;
        /**
         * The OCID of the maintenance run.
         */
        id: string;
    }

    export interface GetDatabaseMaintenanceRunHistoryDbServersHistoryDetailDbServerPatchingDetail {
        /**
         * Estimated time, in minutes, to patch one database server.
         */
        estimatedPatchDuration: number;
        /**
         * The status of the patching operation.
         */
        patchingStatus: string;
        /**
         * The time when the patching operation ended.
         */
        timePatchingEnded: string;
        /**
         * The time when the patching operation started.
         */
        timePatchingStarted: string;
    }

    export interface GetDatabaseMaintenanceRunHistoryMaintenanceRunDetail {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Extend current custom action timeout between the current database servers during waiting state, from 0 (zero) to 30 minutes.
         */
        currentCustomActionTimeoutInMins: number;
        /**
         * The name of the current infrastruture component that is getting patched.
         */
        currentPatchingComponent: string;
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Specify a number of minutes, from 15 to 120.
         */
        customActionTimeoutInMins: number;
        /**
         * Description of the maintenance run.
         */
        description: string;
        /**
         * The user-friendly name for the maintenance run.
         */
        displayName: string;
        /**
         * The estimated start time of the next infrastruture component patching operation.
         */
        estimatedComponentPatchingStartTime: string;
        /**
         * The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching).
         */
        estimatedPatchingTimes: outputs.Database.GetDatabaseMaintenanceRunHistoryMaintenanceRunDetailEstimatedPatchingTime[];
        /**
         * The OCID of the maintenance run.
         */
        id: string;
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database servers patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * Maintenance sub-type.
         */
        maintenanceSubtype: string;
        /**
         * Maintenance type.
         */
        maintenanceType: string;
        /**
         * Contain the patch failure count.
         */
        patchFailureCount: number;
        /**
         * The unique identifier of the patch. The identifier string includes the patch type, the Oracle Database version, and the patch creation date (using the format YYMMDD). For example, the identifier `ru_patch_19.9.0.0_201030` is used for an RU patch for Oracle Database 19.9.0.0 that was released October 30, 2020.
         */
        patchId: string;
        /**
         * The time when the patching operation ended.
         */
        patchingEndTime: string;
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The time when the patching operation started.
         */
        patchingStartTime: string;
        /**
         * The status of the patching operation.
         */
        patchingStatus: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance run for the Autonomous Data Guard association's peer container database.
         */
        peerMaintenanceRunId: string;
        /**
         * The current state of the maintenance run. For Autonomous Database on shared Exadata infrastructure, valid states are IN_PROGRESS, SUCCEEDED and FAILED.
         */
        state: string;
        /**
         * The target software version for the database server patching operation.
         */
        targetDbServerVersion: string;
        /**
         * The ID of the target resource on which the maintenance run occurs.
         */
        targetResourceId: string;
        /**
         * The type of the target resource on which the maintenance run occurs.
         */
        targetResourceType: string;
        /**
         * The target Cell version that is to be patched to.
         */
        targetStorageServerVersion: string;
        /**
         * The date and time the maintenance run was completed.
         */
        timeEnded: string;
        /**
         * The date and time the maintenance run is scheduled to occur.
         */
        timeScheduled: string;
        /**
         * The date and time the maintenance run starts.
         */
        timeStarted: string;
    }

    export interface GetDatabaseMaintenanceRunHistoryMaintenanceRunDetailEstimatedPatchingTime {
        /**
         * The estimated time required in minutes for database server patching.
         */
        estimatedDbServerPatchingTime: number;
        /**
         * The estimated time required in minutes for network switch patching.
         */
        estimatedNetworkSwitchesPatchingTime: number;
        /**
         * The estimated time required in minutes for storage server patching.
         */
        estimatedStorageServerPatchingTime: number;
        /**
         * The estimated total time required in minutes for all patching operations.
         */
        totalEstimatedPatchingTime: number;
    }

    export interface GetDatabasePdbConversionHistoryEntriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDatabasePdbConversionHistoryEntriesPdbConversionHistoryEntry {
        /**
         * The operations used to convert a non-container database to a pluggable database.
         * * Use `PRECHECK` to run a pre-check operation on non-container database prior to converting it into a pluggable database.
         * * Use `CONVERT` to convert a non-container database into a pluggable database.
         * * Use `SYNC` if the non-container database was manually converted into a pluggable database using the dbcli command-line utility. Databases may need to be converted manually if the CONVERT action fails when converting a non-container database using the API.
         * * Use `SYNC_ROLLBACK` if the conversion of a non-container database into a pluggable database was manually rolled back using the dbcli command line utility. Conversions may need to be manually rolled back if the CONVERT action fails when converting a non-container database using the API.
         */
        action: string;
        /**
         * Additional container database parameter.
         */
        additionalCdbParams: string;
        /**
         * The database name. The name must begin with an alphabetic character and can contain a maximum of 8 alphanumeric characters. Special characters are not permitted. The database name must be unique in the tenancy.
         */
        cdbName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database conversion history.
         */
        id: string;
        /**
         * Additional information about the current lifecycle state for the conversion operation.
         */
        lifecycleDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        sourceDatabaseId: string;
        /**
         * A filter to return only the pluggable database conversion history entries that match the specified lifecycle state. For example, you can use this filter to return only entries in the "failed" lifecycle state.
         */
        state: string;
        /**
         * The target container database of the pluggable database created by the database conversion operation. Currently, the database conversion operation only supports creating the pluggable database in a new container database.
         * * Use `NEW_DATABASE` to specify that the pluggable database be created within a new container database in the same database home.
         */
        target: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        targetDatabaseId: string;
        /**
         * The date and time when the database conversion operation ended.
         */
        timeEnded: string;
        /**
         * The date and time when the database conversion operation started.
         */
        timeStarted: string;
    }

    export interface GetDatabaseSoftwareImagesDatabaseSoftwareImage {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * List of one-off patches for Database Homes.
         */
        databaseSoftwareImageIncludedPatches: string[];
        /**
         * List of one-off patches for Database Homes.
         */
        databaseSoftwareImageOneOffPatches: string[];
        /**
         * The database version with which the database software image is to be built.
         */
        databaseVersion: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database software image.
         */
        id: string;
        /**
         * A filter to return only resources that match the given image shape family exactly.
         */
        imageShapeFamily: string;
        /**
         * A filter to return only resources that match the given image type exactly.
         */
        imageType: string;
        /**
         * The patches included in the image and the version of the image
         */
        includedPatchesSummary: string;
        /**
         * If provided, filters the results to the set of database versions which are supported for Upgrade.
         */
        isUpgradeSupported: boolean;
        /**
         * Detailed message for the lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The output from the OPatch lsInventory command, which is passed as a string.
         */
        lsInventory: string;
        /**
         * The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
         */
        patchSet: string;
        sourceDbHomeId: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the database software image was created.
         */
        timeCreated: string;
    }

    export interface GetDatabaseSoftwareImagesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDatabaseUpgradeHistoryEntriesDatabaseUpgradeHistoryEntry {
        /**
         * The database upgrade action.
         */
        action: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database upgrade history.
         */
        id: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * Additional upgrade options supported by DBUA(Database Upgrade Assistant). Example: "-upgradeTimezone false -keepEvents"
         */
        options: string;
        /**
         * The source of the Oracle Database software to be used for the upgrade.
         * * Use `DB_VERSION` to specify a generally-available Oracle Database software version to upgrade the database.
         * * Use `DB_SOFTWARE_IMAGE` to specify a [database software image](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/databasesoftwareimage.htm) to upgrade the database.
         */
        source: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
         */
        sourceDbHomeId: string;
        /**
         * A filter to return only upgradeHistoryEntries that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * the database software image used for upgrading database.
         */
        targetDatabaseSoftwareImageId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
         */
        targetDbHomeId: string;
        /**
         * A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
         */
        targetDbVersion: string;
        /**
         * The date and time when the database upgrade ended.
         */
        timeEnded: string;
        /**
         * The date and time when the database upgrade started.
         */
        timeStarted: string;
    }

    export interface GetDatabaseUpgradeHistoryEntriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDatabasesDatabase {
        /**
         * The character set for the database.
         */
        characterSet: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The Connection strings used to connect to the Oracle Database.
         */
        connectionStrings: outputs.Database.GetDatabasesDatabaseConnectionString[];
        /**
         * The configuration of the Database Management service.
         */
        databaseManagementConfigs: outputs.Database.GetDatabasesDatabaseDatabaseManagementConfig[];
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        databaseSoftwareImageId: string;
        databases: outputs.Database.GetDatabasesDatabaseDatabase[];
        /**
         * Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
         */
        dbBackupConfigs: outputs.Database.GetDatabasesDatabaseDbBackupConfig[];
        /**
         * A Database Home [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). *Note: Either `dbHomeId` or `systemId` is required to make the LIST API call.
         */
        dbHomeId: string;
        /**
         * A filter to return only resources that match the entire database name given. The match is not case sensitive.
         */
        dbName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
         */
        dbSystemId: string;
        /**
         * A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
         */
        dbUniqueName: string;
        dbVersion: string;
        /**
         * The database workload type.
         */
        dbWorkload: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        id: string;
        /**
         * True if the database is a container database.
         */
        isCdb: boolean;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        kmsKeyMigration: boolean;
        kmsKeyRotation: number;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The date and time when the latest database backup was created.
         */
        lastBackupTimestamp: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The national character set for the database.
         */
        ncharacterSet: string;
        /**
         * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
         */
        pdbName: string;
        /**
         * Specifies a prefix for the `Oracle SID` of the database to be created.
         */
        sidPrefix: string;
        source: string;
        /**
         * Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
         */
        sourceDatabasePointInTimeRecoveryTimestamp: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the database was created.
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
         */
        vmClusterId: string;
    }

    export interface GetDatabasesDatabaseConnectionString {
        /**
         * All connection strings to use to connect to the Database.
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * Host name based CDB Connection String.
         */
        cdbDefault: string;
        /**
         * IP based CDB Connection String.
         */
        cdbIpDefault: string;
    }

    export interface GetDatabasesDatabaseDatabase {
        adminPassword: string;
        backupId: string;
        backupTdePassword: string;
        /**
         * The character set for the database.
         */
        characterSet: string;
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        databaseSoftwareImageId: string;
        /**
         * Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
         */
        dbBackupConfigs: outputs.Database.GetDatabasesDatabaseDatabaseDbBackupConfig[];
        /**
         * A filter to return only resources that match the entire database name given. The match is not case sensitive.
         */
        dbName: string;
        /**
         * A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
         */
        dbUniqueName: string;
        /**
         * The database workload type.
         */
        dbWorkload: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        /**
         * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         */
        kmsKeyVersionId: string;
        /**
         * The national character set for the database.
         */
        ncharacterSet: string;
        /**
         * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
         */
        pdbName: string;
        /**
         * Specifies a prefix for the `Oracle SID` of the database to be created.
         */
        sidPrefix: string;
        tdeWalletPassword: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetDatabasesDatabaseDatabaseDbBackupConfig {
        /**
         * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
         */
        autoBackupEnabled: boolean;
        /**
         * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
         */
        autoBackupWindow: string;
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.GetDatabasesDatabaseDatabaseDbBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface GetDatabasesDatabaseDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        id: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        vpcUser: string;
    }

    export interface GetDatabasesDatabaseDatabaseManagementConfig {
        /**
         * The status of the Database Management service.
         */
        managementStatus: string;
        /**
         * The Database Management type.
         */
        managementType: string;
    }

    export interface GetDatabasesDatabaseDbBackupConfig {
        /**
         * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
         */
        autoBackupEnabled: boolean;
        /**
         * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
         */
        autoBackupWindow: string;
        /**
         * Backup destination details.
         */
        backupDestinationDetails: outputs.Database.GetDatabasesDatabaseDbBackupConfigBackupDestinationDetail[];
        /**
         * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         */
        recoveryWindowInDays: number;
    }

    export interface GetDatabasesDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        id: string;
        /**
         * Type of the database backup destination.
         */
        type: string;
        vpcUser: string;
    }

    export interface GetDatabasesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbHomeDatabase {
        adminPassword: string;
        backupId: string;
        backupTdePassword: string;
        characterSet: string;
        connectionStrings: outputs.Database.GetDbHomeDatabaseConnectionString[];
        databaseId: string;
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        databaseSoftwareImageId: string;
        dbBackupConfigs: outputs.Database.GetDbHomeDatabaseDbBackupConfig[];
        dbName: string;
        dbUniqueName: string;
        dbWorkload: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
         */
        id: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        kmsKeyVersionId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        ncharacterSet: string;
        /**
         * List of one-off patches for Database Homes.
         */
        oneOffPatches: string[];
        pdbName: string;
        sidPrefix: string;
        /**
         * The current state of the Database Home.
         */
        state: string;
        tdeWalletPassword: string;
        /**
         * The date and time the Database Home was created.
         */
        timeCreated: string;
        timeStampForPointInTimeRecovery: string;
        vaultId: string;
    }

    export interface GetDbHomeDatabaseConnectionString {
        allConnectionStrings: {[key: string]: any};
        cdbDefault: string;
        cdbIpDefault: string;
    }

    export interface GetDbHomeDatabaseDbBackupConfig {
        autoBackupEnabled: boolean;
        autoBackupWindow: string;
        backupDestinationDetails: outputs.Database.GetDbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
        recoveryWindowInDays: number;
    }

    export interface GetDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
         */
        id: string;
        type: string;
    }

    export interface GetDbHomePatchHistoryEntriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbHomePatchHistoryEntriesPatchHistoryEntry {
        /**
         * The action being performed or was completed.
         */
        action: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch history entry.
         */
        id: string;
        /**
         * A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
         */
        lifecycleDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
         */
        patchId: string;
        /**
         * The current state of the action.
         */
        state: string;
        /**
         * The date and time when the patch action completed
         */
        timeEnded: string;
        /**
         * The date and time when the patch action started.
         */
        timeStarted: string;
    }

    export interface GetDbHomePatchesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbHomePatchesPatch {
        /**
         * Actions that can possibly be performed using this patch.
         */
        availableActions: string[];
        /**
         * The text describing this patch package.
         */
        description: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
         */
        id: string;
        /**
         * Action that is currently being performed or was completed last.
         */
        lastAction: string;
        /**
         * A descriptive text associated with the lifecycleState. Typically can contain additional displayable text.
         */
        lifecycleDetails: string;
        /**
         * The current state of the patch as a result of lastAction.
         */
        state: string;
        /**
         * The date and time that the patch was released.
         */
        timeReleased: string;
        /**
         * The version of this patch package.
         */
        version: string;
    }

    export interface GetDbHomesDbHome {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        databaseSoftwareImageId: string;
        databases: outputs.Database.GetDbHomesDbHomeDatabase[];
        dbHomeId: string;
        /**
         * The location of the Oracle Database Home.
         */
        dbHomeLocation: string;
        /**
         * The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
         */
        dbSystemId: string;
        /**
         * A filter to return only DB Homes that match the specified dbVersion.
         */
        dbVersion: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
         */
        id: string;
        isDesupportedVersion: boolean;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        kmsKeyVersionId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation is started.
         */
        lastPatchHistoryEntryId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        source: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the Database Home was created.
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
         */
        vmClusterId: string;
    }

    export interface GetDbHomesDbHomeDatabase {
        adminPassword: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup. Specify a backupId to list only the DB systems or DB homes that support creating a database using this backup in this compartment.
         */
        backupId: string;
        backupTdePassword: string;
        characterSet: string;
        connectionStrings: outputs.Database.GetDbHomesDbHomeDatabaseConnectionString[];
        databaseId: string;
        /**
         * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        databaseSoftwareImageId: string;
        dbBackupConfigs: outputs.Database.GetDbHomesDbHomeDatabaseDbBackupConfig[];
        dbName: string;
        dbUniqueName: string;
        dbWorkload: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
         */
        id: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        kmsKeyVersionId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        ncharacterSet: string;
        /**
         * List of one-off patches for Database Homes.
         */
        oneOffPatches: string[];
        pdbName: string;
        sidPrefix: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        tdeWalletPassword: string;
        /**
         * The date and time the Database Home was created.
         */
        timeCreated: string;
        timeStampForPointInTimeRecovery: string;
        vaultId: string;
    }

    export interface GetDbHomesDbHomeDatabaseConnectionString {
        allConnectionStrings: {[key: string]: any};
        cdbDefault: string;
        cdbIpDefault: string;
    }

    export interface GetDbHomesDbHomeDatabaseDbBackupConfig {
        autoBackupEnabled: boolean;
        autoBackupWindow: string;
        backupDestinationDetails: outputs.Database.GetDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
        recoveryWindowInDays: number;
    }

    export interface GetDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
         */
        id: string;
        type: string;
    }

    export interface GetDbHomesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbNodeConsoleConnectionsConsoleConnection {
        /**
         * The OCID of the compartment to contain the console connection.
         */
        compartmentId: string;
        /**
         * The SSH connection string for the console connection.
         */
        connectionString: string;
        /**
         * The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        dbNodeId: string;
        /**
         * The SSH public key fingerprint for the console connection.
         */
        fingerprint: string;
        /**
         * The OCID of the console connection.
         */
        id: string;
        publicKey: string;
        /**
         * The current state of the console connection.
         */
        state: string;
    }

    export interface GetDbNodeConsoleConnectionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbNodesDbNode {
        /**
         * Additional information about the planned maintenance.
         */
        additionalDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address  needed to make a database connection.
         */
        backupIpId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
         */
        backupVnic2id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
         */
        backupVnicId: string;
        /**
         * The number of CPU cores enabled on the Db node.
         */
        cpuCoreCount: number;
        dbNodeId: string;
        /**
         * The allocated local node storage in GBs on the Db node.
         */
        dbNodeStorageSizeInGbs: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server.
         */
        dbServerId: string;
        /**
         * The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
         */
        dbSystemId: string;
        /**
         * The name of the Fault Domain the instance is contained in.
         */
        faultDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IP address associated with the database node. Use this OCID with either the  [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address  needed to make a database connection.
         */
        hostIpId: string;
        /**
         * The host name for the database node.
         */
        hostname: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database node.
         */
        id: string;
        /**
         * The type of database node maintenance.
         */
        maintenanceType: string;
        /**
         * The allocated memory in GBs on the Db node.
         */
        memorySizeInGbs: number;
        /**
         * The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
         */
        softwareStorageSizeInGb: number;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time that the database node was created.
         */
        timeCreated: string;
        /**
         * End date and time of maintenance window.
         */
        timeMaintenanceWindowEnd: string;
        /**
         * Start date and time of maintenance window.
         */
        timeMaintenanceWindowStart: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
         */
        vnic2id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
         */
        vnicId: string;
    }

    export interface GetDbNodesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbServerDbServerPatchingDetail {
        /**
         * Estimated time, in minutes, to patch one database server.
         */
        estimatedPatchDuration: number;
        /**
         * The status of the patching operation.
         */
        patchingStatus: string;
        /**
         * The time when the patching operation ended.
         */
        timePatchingEnded: string;
        /**
         * The time when the patching operation started.
         */
        timePatchingStarted: string;
    }

    export interface GetDbServersDbServer {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The number of CPU cores enabled on the Db server.
         */
        cpuCoreCount: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Db nodes associated with the Db server.
         */
        dbNodeIds: string[];
        /**
         * The allocated local node storage in GBs on the Db server.
         */
        dbNodeStorageSizeInGbs: number;
        /**
         * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         */
        dbServerPatchingDetails: outputs.Database.GetDbServersDbServerDbServerPatchingDetail[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ExadataInfrastructure.
         */
        exadataInfrastructureId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server.
         */
        id: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The total number of CPU cores available.
         */
        maxCpuCount: number;
        /**
         * The total local node storage available in GBs.
         */
        maxDbNodeStorageInGbs: number;
        /**
         * The total memory available in GBs.
         */
        maxMemoryInGbs: number;
        /**
         * The allocated memory in GBs on the Db server.
         */
        memorySizeInGbs: number;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time that the Db Server was created.
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Clusters associated with the Db server.
         */
        vmClusterIds: string[];
    }

    export interface GetDbServersDbServerDbServerPatchingDetail {
        /**
         * Estimated time, in minutes, to patch one database server.
         */
        estimatedPatchDuration: number;
        /**
         * The status of the patching operation.
         */
        patchingStatus: string;
        /**
         * The time when the patching operation ended.
         */
        timePatchingEnded: string;
        /**
         * The time when the patching operation started.
         */
        timePatchingStarted: string;
    }

    export interface GetDbServersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbSystemComputePerformancesDbSystemComputePerformance {
        /**
         * List of Compute performance details for the specified DB system shape.
         */
        computePerformanceLists: outputs.Database.GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList[];
        /**
         * The shape of the DB system.
         */
        shape: string;
    }

    export interface GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList {
        /**
         * The number of OCPU cores available.
         */
        cpuCoreCount: number;
        /**
         * The amount of memory allocated for the VMDB System.
         */
        memoryInGbs: number;
        /**
         * The network bandwidth of the VMDB system in gbps.
         */
        networkBandwidthInGbps: number;
        /**
         * IOPS for the VMDB System.
         */
        networkIops: number;
        /**
         * Network throughput for the VMDB System.
         */
        networkThroughputInMbps: number;
    }

    export interface GetDbSystemComputePerformancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbSystemHistoryEntriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbSystemHistoryEntriesPatchHistoryEntry {
        /**
         * The action being performed or was completed.
         */
        action: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch history entry.
         */
        id: string;
        /**
         * A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
         */
        lifecycleDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
         */
        patchId: string;
        /**
         * The current state of the action.
         */
        state: string;
        /**
         * The date and time when the patch action completed
         */
        timeEnded: string;
        /**
         * The date and time when the patch action started.
         */
        timeStarted: string;
    }

    export interface GetDbSystemPatchesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbSystemPatchesPatch {
        /**
         * Actions that can possibly be performed using this patch.
         */
        availableActions: string[];
        /**
         * The text describing this patch package.
         */
        description: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
         */
        id: string;
        /**
         * Action that is currently being performed or was completed last.
         */
        lastAction: string;
        /**
         * A descriptive text associated with the lifecycleState. Typically can contain additional displayable text.
         */
        lifecycleDetails: string;
        /**
         * The current state of the patch as a result of lastAction.
         */
        state: string;
        /**
         * The date and time that the patch was released.
         */
        timeReleased: string;
        /**
         * The version of this patch package.
         */
        version: string;
    }

    export interface GetDbSystemShapesDbSystemShape {
        /**
         * The maximum number of CPU cores that can be enabled on the DB system for this shape.
         */
        availableCoreCount: number;
        /**
         * The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape and ExaCC Elastic shapes.
         */
        availableCoreCountPerNode: number;
        /**
         * The maximum DATA storage that can be enabled for this shape.
         */
        availableDataStorageInTbs: number;
        /**
         * The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
         */
        availableDataStoragePerServerInTbs: number;
        /**
         * The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
         */
        availableDbNodePerNodeInGbs: number;
        /**
         * The maximum Db Node storage that can be enabled for this shape.
         */
        availableDbNodeStorageInGbs: number;
        /**
         * The maximum memory that can be enabled for this shape.
         */
        availableMemoryInGbs: number;
        /**
         * The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
         */
        availableMemoryPerNodeInGbs: number;
        /**
         * The discrete number by which the CPU core count for this shape can be increased or decreased.
         */
        coreCountIncrement: number;
        /**
         * The maximum number of Exadata storage servers available for the Exadata infrastructure.
         */
        maxStorageCount: number;
        /**
         * The maximum number of database nodes available for this shape.
         */
        maximumNodeCount: number;
        /**
         * The minimum number of CPU cores that can be enabled per node for this shape.
         */
        minCoreCountPerNode: number;
        /**
         * The minimum data storage that need be allocated for this shape.
         */
        minDataStorageInTbs: number;
        /**
         * The minimum Db Node storage that need be allocated per node for this shape.
         */
        minDbNodeStoragePerNodeInGbs: number;
        /**
         * The minimum memory that need be allocated per node for this shape.
         */
        minMemoryPerNodeInGbs: number;
        /**
         * The minimum number of Exadata storage servers available for the Exadata infrastructure.
         */
        minStorageCount: number;
        /**
         * The minimum number of CPU cores that can be enabled on the DB system for this shape.
         */
        minimumCoreCount: number;
        /**
         * The minimum number of database nodes available for this shape.
         */
        minimumNodeCount: number;
        /**
         * The name of the shape used for the DB system.
         */
        name: string;
        /**
         * Deprecated. Use `name` instead of `shape`.
         *
         * @deprecated The 'shape' field has been deprecated. Please use 'name' instead.
         */
        shape: string;
        /**
         * The family of the shape used for the DB system.
         */
        shapeFamily: string;
        /**
         * The shape type for the virtual machine DB system. Shape type is determined by CPU hardware. Valid values are `AMD` and `INTEL`.
         */
        shapeType: string;
    }

    export interface GetDbSystemShapesFilter {
        /**
         * The name of the shape used for the DB system.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbSystemStoragePerformancesDbSystemStoragePerformance {
        /**
         * List of storage performance for the DATA disks
         */
        dataStoragePerformanceLists: outputs.Database.GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceList[];
        /**
         * List of storage performance for the RECO disks
         */
        recoStoragePerformanceLists: outputs.Database.GetDbSystemStoragePerformancesDbSystemStoragePerformanceRecoStoragePerformanceList[];
        /**
         * Optional. Filters the performance results by shape type.
         */
        shapeType: string;
    }

    export interface GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceList {
        /**
         * Representation of disk performance detail parameters.
         */
        balancedDiskPerformances: outputs.Database.GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListBalancedDiskPerformance[];
        /**
         * Representation of disk performance detail parameters.
         */
        highDiskPerformances: outputs.Database.GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListHighDiskPerformance[];
        /**
         * Size in GBs.
         */
        sizeInGbs: number;
    }

    export interface GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListBalancedDiskPerformance {
        /**
         * Disk IOPS in thousands.
         */
        diskIops: number;
        /**
         * Disk Throughput in Mbps.
         */
        diskThroughputInMbps: number;
    }

    export interface GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListHighDiskPerformance {
        /**
         * Disk IOPS in thousands.
         */
        diskIops: number;
        /**
         * Disk Throughput in Mbps.
         */
        diskThroughputInMbps: number;
    }

    export interface GetDbSystemStoragePerformancesDbSystemStoragePerformanceRecoStoragePerformanceList {
        /**
         * Representation of disk performance detail parameters.
         */
        balancedDiskPerformances: outputs.Database.GetDbSystemStoragePerformancesDbSystemStoragePerformanceRecoStoragePerformanceListBalancedDiskPerformance[];
        /**
         * Representation of disk performance detail parameters.
         */
        highDiskPerformances: outputs.Database.GetDbSystemStoragePerformancesDbSystemStoragePerformanceRecoStoragePerformanceListHighDiskPerformance[];
        /**
         * Size in GBs.
         */
        sizeInGbs: number;
    }

    export interface GetDbSystemStoragePerformancesDbSystemStoragePerformanceRecoStoragePerformanceListBalancedDiskPerformance {
        /**
         * Disk IOPS in thousands.
         */
        diskIops: number;
        /**
         * Disk Throughput in Mbps.
         */
        diskThroughputInMbps: number;
    }

    export interface GetDbSystemStoragePerformancesDbSystemStoragePerformanceRecoStoragePerformanceListHighDiskPerformance {
        /**
         * Disk IOPS in thousands.
         */
        diskIops: number;
        /**
         * Disk Throughput in Mbps.
         */
        diskThroughputInMbps: number;
    }

    export interface GetDbSystemStoragePerformancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbSystemsDbSystem {
        /**
         * A filter to return only resources that match the given availability domain exactly.
         */
        availabilityDomain: string;
        /**
         * A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
         */
        backupNetworkNsgIds: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet the DB system is associated with. Applicable only to Exadata DB systems.
         */
        backupSubnetId: string;
        /**
         * The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
         */
        clusterName: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The number of CPU cores enabled on the DB system.
         */
        cpuCoreCount: number;
        /**
         * The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 40 and 80. The default is 80 percent assigned to DATA storage. Not applicable for virtual machine DB systems. Required for BMDBs.
         */
        dataStoragePercentage: number;
        /**
         * The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. Required for VMDBs.
         */
        dataStorageSizeInGb: number;
        /**
         * The Oracle Database edition that applies to all the databases on the DB system.
         */
        databaseEdition: string;
        dbHomes: outputs.Database.GetDbSystemsDbSystemDbHome[];
        /**
         * The DB system options.
         */
        dbSystemOptions: outputs.Database.GetDbSystemsDbSystemDbSystemOption[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
         */
        diskRedundancy: string;
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The domain name for the DB system.
         */
        domain: string;
        /**
         * List of the Fault Domains in which this DB system is provisioned.
         */
        faultDomains: string[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the DB system.
         */
        hostname: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
         */
        id: string;
        iormConfigCaches: outputs.Database.GetDbSystemsDbSystemIormConfigCach[];
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        kmsKeyVersionId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
         */
        lastMaintenanceRunId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
         */
        lastPatchHistoryEntryId: string;
        /**
         * The Oracle license model that applies to all the databases on the DB system. The default is LICENSE_INCLUDED.
         */
        licenseModel: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The port number configured for the listener on the DB system.
         */
        listenerPort: number;
        maintenanceWindowDetails: outputs.Database.GetDbSystemsDbSystemMaintenanceWindowDetail[];
        /**
         * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         */
        maintenanceWindows: outputs.Database.GetDbSystemsDbSystemMaintenanceWindow[];
        /**
         * Memory allocated to the DB system, in gigabytes.
         */
        memorySizeInGbs: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
         */
        nextMaintenanceRunId: string;
        /**
         * The number of nodes in the DB system. For RAC DB systems, the value is greater than 1.
         */
        nodeCount: number;
        /**
         * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
         * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
         */
        nsgIds: string[];
        /**
         * The point in time for a cloned database system when the data disks were cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        pointInTimeDataDiskCloneTimestamp: string;
        privateIp: string;
        /**
         * The RECO/REDO storage size, in gigabytes, that is currently allocated to the DB system. Applies only for virtual machine DB systems.
         */
        recoStorageSizeInGb: number;
        /**
         * The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system.
         */
        scanDnsName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the DB system.
         */
        scanDnsRecordId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
         */
        scanIpIds: string[];
        /**
         * The shape of the DB system. The shape determines resources to allocate to the DB system.
         * * For virtual machine shapes, the number of CPU cores and memory
         * * For bare metal and Exadata shapes, the number of CPU cores, storage, and memory
         */
        shape: string;
        source: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
         */
        sourceDbSystemId: string;
        /**
         * True, if Sparse Diskgroup is configured for Exadata dbsystem, False, if Sparse diskgroup was not configured. Only applied for Exadata shape.
         */
        sparseDiskgroup: boolean;
        /**
         * The public key portion of one or more key pairs used for SSH access to the DB system.
         */
        sshPublicKeys: string[];
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The block storage volume performance level. Valid values are `BALANCED` and `HIGH_PERFORMANCE`. See [Block Volume Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm) for more information.
         */
        storageVolumePerformanceMode: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the DB system is associated with.
         */
        subnetId: string;
        /**
         * The date and time the DB system was created.
         */
        timeCreated: string;
        /**
         * The time zone of the DB system. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
         */
        timeZone: string;
        /**
         * The Oracle Database version of the DB system.
         */
        version: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the DB system. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the DB system to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
         */
        vipIds: string[];
        /**
         * The OCID of the zone the DB system is associated with.
         */
        zoneId: string;
    }

    export interface GetDbSystemsDbSystemDbHome {
        createAsync: boolean;
        databaseSoftwareImageId: string;
        databases: outputs.Database.GetDbSystemsDbSystemDbHomeDatabase[];
        dbHomeLocation: string;
        dbVersion: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
         */
        lastPatchHistoryEntryId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the DB system was created.
         */
        timeCreated: string;
    }

    export interface GetDbSystemsDbSystemDbHomeDatabase {
        adminPassword: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup. Specify a backupId to list only the DB systems or DB homes that support creating a database using this backup in this compartment.
         */
        backupId: string;
        backupTdePassword: string;
        characterSet: string;
        connectionStrings: outputs.Database.GetDbSystemsDbSystemDbHomeDatabaseConnectionString[];
        databaseId: string;
        databaseSoftwareImageId: string;
        dbBackupConfigs: outputs.Database.GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfig[];
        dbDomain: string;
        dbName: string;
        dbUniqueName: string;
        dbWorkload: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
         */
        id: string;
        /**
         * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         */
        kmsKeyId: string;
        kmsKeyVersionId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        ncharacterSet: string;
        pdbName: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        tdeWalletPassword: string;
        /**
         * The date and time the DB system was created.
         */
        timeCreated: string;
        timeStampForPointInTimeRecovery: string;
        vaultId: string;
    }

    export interface GetDbSystemsDbSystemDbHomeDatabaseConnectionString {
        allConnectionStrings: {[key: string]: any};
        cdbDefault: string;
        cdbIpDefault: string;
    }

    export interface GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfig {
        autoBackupEnabled: boolean;
        autoBackupWindow: string;
        backupDestinationDetails: outputs.Database.GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
        recoveryWindowInDays: number;
    }

    export interface GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
         */
        id: string;
        type: string;
    }

    export interface GetDbSystemsDbSystemDbSystemOption {
        /**
         * The storage option used in DB system. ASM - Automatic storage management LVM - Logical Volume management
         */
        storageManagement: string;
    }

    export interface GetDbSystemsDbSystemIormConfigCach {
        dbPlans: outputs.Database.GetDbSystemsDbSystemIormConfigCachDbPlan[];
        dbSystemId: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        objective: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
    }

    export interface GetDbSystemsDbSystemIormConfigCachDbPlan {
        dbName: string;
        flashCacheLimit: string;
        share: number;
    }

    export interface GetDbSystemsDbSystemMaintenanceWindow {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetDbSystemsDbSystemMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetDbSystemsDbSystemMaintenanceWindowMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetDbSystemsDbSystemMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetDbSystemsDbSystemMaintenanceWindowDetail {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetDbSystemsDbSystemMaintenanceWindowDetailDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetDbSystemsDbSystemMaintenanceWindowDetailMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetDbSystemsDbSystemMaintenanceWindowDetailDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetDbSystemsDbSystemMaintenanceWindowDetailMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetDbSystemsDbSystemMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetDbSystemsFilter {
        /**
         * Name of the month of the year.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry {
        /**
         * The operating system upgrade action.
         */
        action: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the upgrade history entry.
         */
        id: string;
        /**
         * A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
         */
        lifecycleDetails: string;
        /**
         * A valid Oracle Grid Infrastructure (GI) software version.
         */
        newGiVersion: string;
        /**
         * A valid Oracle Grid Infrastructure (GI) software version.
         */
        oldGiVersion: string;
        /**
         * The retention period, in days, for the snapshot that allows you to perform a rollback of the upgrade operation. After this number of days passes, you cannot roll back the upgrade.
         */
        snapshotRetentionPeriodInDays: number;
        /**
         * A filter to return only upgrade history entries that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time when the upgrade action completed
         */
        timeEnded: string;
        /**
         * The date and time when the upgrade action started.
         */
        timeStarted: string;
    }

    export interface GetDbSystemsUpgradeHistoryEntriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbVersionsDbVersion {
        /**
         * True if this version of the Oracle Database software is the latest version for a release.
         */
        isLatestForMajorVersion: boolean;
        /**
         * True if this version of the Oracle Database software is the preview version.
         */
        isPreviewDbVersion: boolean;
        /**
         * If provided, filters the results to the set of database versions which are supported for Upgrade.
         */
        isUpgradeSupported: boolean;
        /**
         * True if this version of the Oracle Database software supports pluggable databases.
         */
        supportsPdb: boolean;
        /**
         * A valid Oracle Database version.
         */
        version: string;
    }

    export interface GetDbVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetExadataInfrastructureContact {
        /**
         * The email for the Exadata Infrastructure contact.
         */
        email: string;
        /**
         * If `true`, this Exadata Infrastructure contact is a valid My Oracle Support (MOS) contact. If `false`, this Exadata Infrastructure contact is not a valid MOS contact.
         */
        isContactMosValidated: boolean;
        /**
         * If `true`, this Exadata Infrastructure contact is a primary contact. If `false`, this Exadata Infrastructure is a secondary contact.
         */
        isPrimary: boolean;
        /**
         * Name of the month of the year.
         */
        name: string;
        /**
         * The phone number for the Exadata Infrastructure contact.
         */
        phoneNumber: string;
    }

    export interface GetExadataInfrastructureMaintenanceWindow {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetExadataInfrastructureMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetExadataInfrastructureMaintenanceWindowMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetExadataInfrastructureMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetExadataInfrastructureMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetExadataInfrastructuresExadataInfrastructure {
        /**
         * The requested number of additional storage servers activated for the Exadata infrastructure.
         */
        activatedStorageCount: number;
        activationFile: string;
        /**
         * The requested number of additional storage servers for the Exadata infrastructure.
         */
        additionalStorageCount: number;
        /**
         * The CIDR block for the Exadata administration network.
         */
        adminNetworkCidr: string;
        /**
         * The IP address for the first control plane server.
         */
        cloudControlPlaneServer1: string;
        /**
         * The IP address for the second control plane server.
         */
        cloudControlPlaneServer2: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The number of compute servers for the Exadata infrastructure.
         */
        computeCount: number;
        /**
         * The list of contacts for the Exadata infrastructure.
         */
        contacts: outputs.Database.GetExadataInfrastructuresExadataInfrastructureContact[];
        /**
         * The corporate network proxy for access to the control plane network.
         */
        corporateProxy: string;
        /**
         * The number of enabled CPU cores.
         */
        cpusEnabled: number;
        createAsync: boolean;
        /**
         * The CSI Number of the Exadata infrastructure.
         */
        csiNumber: string;
        /**
         * Size, in terabytes, of the DATA disk group.
         */
        dataStorageSizeInTbs: number;
        /**
         * The local node storage allocated in GBs.
         */
        dbNodeStorageSizeInGbs: number;
        /**
         * The software version of the database servers (dom0) in the Exadata infrastructure.
         */
        dbServerVersion: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The list of DNS server IP addresses. Maximum of 3 allowed.
         */
        dnsServers: string[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The gateway for the control plane network.
         */
        gateway: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
         */
        id: string;
        /**
         * The CIDR block for the Exadata InfiniBand interconnect.
         */
        infiniBandNetworkCidr: string;
        /**
         * Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
         */
        isCpsOfflineReportEnabled: boolean;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
         */
        maintenanceSloStatus: string;
        /**
         * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         */
        maintenanceWindows: outputs.Database.GetExadataInfrastructuresExadataInfrastructureMaintenanceWindow[];
        /**
         * The total number of CPU cores available.
         */
        maxCpuCount: number;
        /**
         * The total available DATA disk group size.
         */
        maxDataStorageInTbs: number;
        /**
         * The total local node storage available in GBs.
         */
        maxDbNodeStorageInGbs: number;
        /**
         * The total memory available in GBs.
         */
        maxMemoryInGbs: number;
        /**
         * The memory allocated in GBs.
         */
        memorySizeInGbs: number;
        /**
         * The monthly software version of the database servers (dom0) in the Exadata infrastructure.
         */
        monthlyDbServerVersion: string;
        /**
         * The netmask for the control plane network.
         */
        netmask: string;
        /**
         * The list of NTP server IP addresses. Maximum of 3 allowed.
         */
        ntpServers: string[];
        /**
         * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
         */
        shape: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The number of Exadata storage servers for the Exadata infrastructure.
         */
        storageCount: number;
        /**
         * The software version of the storage servers (cells) in the Exadata infrastructure.
         */
        storageServerVersion: string;
        /**
         * The date and time the Exadata infrastructure was created.
         */
        timeCreated: string;
        /**
         * The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
         */
        timeZone: string;
    }

    export interface GetExadataInfrastructuresExadataInfrastructureContact {
        /**
         * The email for the Exadata Infrastructure contact.
         */
        email: string;
        /**
         * If `true`, this Exadata Infrastructure contact is a valid My Oracle Support (MOS) contact. If `false`, this Exadata Infrastructure contact is not a valid MOS contact.
         */
        isContactMosValidated: boolean;
        /**
         * If `true`, this Exadata Infrastructure contact is a primary contact. If `false`, this Exadata Infrastructure is a secondary contact.
         */
        isPrimary: boolean;
        /**
         * Name of the month of the year.
         */
        name: string;
        /**
         * The phone number for the Exadata Infrastructure contact.
         */
        phoneNumber: string;
    }

    export interface GetExadataInfrastructuresExadataInfrastructureMaintenanceWindow {
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).
         */
        customActionTimeoutInMins: number;
        /**
         * Days during the week when maintenance should be performed.
         */
        daysOfWeeks: outputs.Database.GetExadataInfrastructuresExadataInfrastructureMaintenanceWindowDaysOfWeek[];
        /**
         * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
         * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
         */
        hoursOfDays: number[];
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        /**
         * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
         */
        leadTimeInWeeks: number;
        /**
         * Months during the year when maintenance should be performed.
         */
        months: outputs.Database.GetExadataInfrastructuresExadataInfrastructureMaintenanceWindowMonth[];
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The maintenance window scheduling preference.
         */
        preference: string;
        /**
         * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
         */
        weeksOfMonths: number[];
    }

    export interface GetExadataInfrastructuresExadataInfrastructureMaintenanceWindowDaysOfWeek {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetExadataInfrastructuresExadataInfrastructureMaintenanceWindowMonth {
        /**
         * Name of the month of the year.
         */
        name: string;
    }

    export interface GetExadataInfrastructuresFilter {
        /**
         * Name of the month of the year.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetExadataIormConfigDbPlan {
        /**
         * The database name. For the default `DbPlan`, the `dbName` is `default`.
         */
        dbName: string;
        /**
         * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         */
        flashCacheLimit: string;
        /**
         * The relative priority of this database.
         */
        share: number;
    }

    export interface GetExternalContainerDatabaseDatabaseManagementConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        databaseManagementConnectionId: string;
        /**
         * The status of the Database Management service.
         */
        databaseManagementStatus: string;
        /**
         * The Oracle license model that applies to the external database.
         */
        licenseModel: string;
    }

    export interface GetExternalContainerDatabaseStackMonitoringConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        stackMonitoringConnectorId: string;
        /**
         * The status of Stack Monitoring.
         */
        stackMonitoringStatus: string;
    }

    export interface GetExternalContainerDatabasesExternalContainerDatabase {
        /**
         * The character set of the external database.
         */
        characterSet: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The Oracle Database configuration
         */
        databaseConfiguration: string;
        /**
         * The Oracle Database edition.
         */
        databaseEdition: string;
        /**
         * The configuration of the Database Management service.
         */
        databaseManagementConfigs: outputs.Database.GetExternalContainerDatabasesExternalContainerDatabaseDatabaseManagementConfig[];
        /**
         * The Oracle Database version.
         */
        databaseVersion: string;
        /**
         * The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
         */
        dbId: string;
        /**
         * The database packs licensed for the external Oracle Database.
         */
        dbPacks: string;
        /**
         * The `DB_UNIQUE_NAME` of the external database.
         */
        dbUniqueName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure external database resource.
         */
        id: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The national character of the external database.
         */
        ncharacterSet: string;
        /**
         * The configuration of Stack Monitoring for the external database.
         */
        stackMonitoringConfigs: outputs.Database.GetExternalContainerDatabasesExternalContainerDatabaseStackMonitoringConfig[];
        /**
         * A filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * The date and time the database was created.
         */
        timeCreated: string;
        /**
         * The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
         */
        timeZone: string;
    }

    export interface GetExternalContainerDatabasesExternalContainerDatabaseDatabaseManagementConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        databaseManagementConnectionId: string;
        /**
         * The status of the Database Management service.
         */
        databaseManagementStatus: string;
        /**
         * The Oracle license model that applies to the external database.
         */
        licenseModel: string;
    }

    export interface GetExternalContainerDatabasesExternalContainerDatabaseStackMonitoringConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        stackMonitoringConnectorId: string;
        /**
         * The status of Stack Monitoring.
         */
        stackMonitoringStatus: string;
    }

    export interface GetExternalContainerDatabasesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetExternalDatabaseConnectorConnectionCredential {
        /**
         * The name of the credential information that used to connect to the database. The name should be in "x.y" format, where the length of "x" has a maximum of 64 characters, and length of "y" has a maximum of 199 characters. The name strings can contain letters, numbers and the underscore character only. Other characters are not valid, except for the "." character that separates the "x" and "y" portions of the name. *IMPORTANT* - The name must be unique within the Oracle Cloud Infrastructure region the credential is being created in. If you specify a name that duplicates the name of another credential within the same Oracle Cloud Infrastructure region, you may overwrite or corrupt the credential that is already using the name.
         */
        credentialName: string;
        /**
         * The type of credential used to connect to the database.
         */
        credentialType: string;
        /**
         * The password that will be used to connect to the database.
         */
        password: string;
        /**
         * The role of the user that will be connecting to the database.
         */
        role: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        sslSecretId: string;
        /**
         * The username that will be used to connect to the database.
         */
        username: string;
    }

    export interface GetExternalDatabaseConnectorConnectionString {
        /**
         * The host name of the database.
         */
        hostname: string;
        /**
         * The port used to connect to the database.
         */
        port: number;
        /**
         * The protocol used to connect to the database.
         */
        protocol: string;
        /**
         * The name of the service alias used to connect to the database.
         */
        service: string;
    }

    export interface GetExternalDatabaseConnectorsExternalDatabaseConnector {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
         */
        connectionCredentials: outputs.Database.GetExternalDatabaseConnectorsExternalDatabaseConnectorConnectionCredential[];
        /**
         * The status of connectivity to the external database.
         */
        connectionStatus: string;
        /**
         * The Oracle Database connection string.
         */
        connectionStrings: outputs.Database.GetExternalDatabaseConnectorsExternalDatabaseConnectorConnectionString[];
        /**
         * The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        connectorAgentId: string;
        /**
         * The type of connector used by the external database resource.
         */
        connectorType: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database whose connectors will be listed.
         */
        externalDatabaseId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        id: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * The date and time the `connectionStatus` of this external connector was last updated.
         */
        timeConnectionStatusLastUpdated: string;
        /**
         * The date and time the external connector was created.
         */
        timeCreated: string;
    }

    export interface GetExternalDatabaseConnectorsExternalDatabaseConnectorConnectionCredential {
        /**
         * The name of the credential information that used to connect to the database. The name should be in "x.y" format, where the length of "x" has a maximum of 64 characters, and length of "y" has a maximum of 199 characters. The name strings can contain letters, numbers and the underscore character only. Other characters are not valid, except for the "." character that separates the "x" and "y" portions of the name. *IMPORTANT* - The name must be unique within the Oracle Cloud Infrastructure region the credential is being created in. If you specify a name that duplicates the name of another credential within the same Oracle Cloud Infrastructure region, you may overwrite or corrupt the credential that is already using the name.
         */
        credentialName: string;
        /**
         * The type of credential used to connect to the database.
         */
        credentialType: string;
        /**
         * The password that will be used to connect to the database.
         */
        password: string;
        /**
         * The role of the user that will be connecting to the database.
         */
        role: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        sslSecretId: string;
        /**
         * The username that will be used to connect to the database.
         */
        username: string;
    }

    export interface GetExternalDatabaseConnectorsExternalDatabaseConnectorConnectionString {
        /**
         * The host name of the database.
         */
        hostname: string;
        /**
         * The port used to connect to the database.
         */
        port: number;
        /**
         * The protocol used to connect to the database.
         */
        protocol: string;
        /**
         * The name of the service alias used to connect to the database.
         */
        service: string;
    }

    export interface GetExternalDatabaseConnectorsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetExternalNonContainerDatabaseDatabaseManagementConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        databaseManagementConnectionId: string;
        /**
         * The status of the Database Management service.
         */
        databaseManagementStatus: string;
        /**
         * The Oracle license model that applies to the external database.
         */
        licenseModel: string;
    }

    export interface GetExternalNonContainerDatabaseOperationsInsightsConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        operationsInsightsConnectorId: string;
        /**
         * The status of Operations Insights
         */
        operationsInsightsStatus: string;
    }

    export interface GetExternalNonContainerDatabaseStackMonitoringConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        stackMonitoringConnectorId: string;
        /**
         * The status of Stack Monitoring.
         */
        stackMonitoringStatus: string;
    }

    export interface GetExternalNonContainerDatabasesExternalNonContainerDatabase {
        /**
         * The character set of the external database.
         */
        characterSet: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The Oracle Database configuration
         */
        databaseConfiguration: string;
        /**
         * The Oracle Database edition.
         */
        databaseEdition: string;
        /**
         * The configuration of the Database Management service.
         */
        databaseManagementConfigs: outputs.Database.GetExternalNonContainerDatabasesExternalNonContainerDatabaseDatabaseManagementConfig[];
        /**
         * The Oracle Database version.
         */
        databaseVersion: string;
        /**
         * The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
         */
        dbId: string;
        /**
         * The database packs licensed for the external Oracle Database.
         */
        dbPacks: string;
        /**
         * The `DB_UNIQUE_NAME` of the external database.
         */
        dbUniqueName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure external database resource.
         */
        id: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The national character of the external database.
         */
        ncharacterSet: string;
        /**
         * The configuration of Operations Insights for the external database
         */
        operationsInsightsConfigs: outputs.Database.GetExternalNonContainerDatabasesExternalNonContainerDatabaseOperationsInsightsConfig[];
        /**
         * The configuration of Stack Monitoring for the external database.
         */
        stackMonitoringConfigs: outputs.Database.GetExternalNonContainerDatabasesExternalNonContainerDatabaseStackMonitoringConfig[];
        /**
         * A filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * The date and time the database was created.
         */
        timeCreated: string;
        /**
         * The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
         */
        timeZone: string;
    }

    export interface GetExternalNonContainerDatabasesExternalNonContainerDatabaseDatabaseManagementConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        databaseManagementConnectionId: string;
        /**
         * The status of the Database Management service.
         */
        databaseManagementStatus: string;
        /**
         * The Oracle license model that applies to the external database.
         */
        licenseModel: string;
    }

    export interface GetExternalNonContainerDatabasesExternalNonContainerDatabaseOperationsInsightsConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        operationsInsightsConnectorId: string;
        /**
         * The status of Operations Insights
         */
        operationsInsightsStatus: string;
    }

    export interface GetExternalNonContainerDatabasesExternalNonContainerDatabaseStackMonitoringConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        stackMonitoringConnectorId: string;
        /**
         * The status of Stack Monitoring.
         */
        stackMonitoringStatus: string;
    }

    export interface GetExternalNonContainerDatabasesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetExternalPluggableDatabaseDatabaseManagementConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        databaseManagementConnectionId: string;
        /**
         * The status of the Database Management service.
         */
        databaseManagementStatus: string;
        /**
         * The Oracle license model that applies to the external database.
         */
        licenseModel: string;
    }

    export interface GetExternalPluggableDatabaseOperationsInsightsConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        operationsInsightsConnectorId: string;
        /**
         * The status of Operations Insights
         */
        operationsInsightsStatus: string;
    }

    export interface GetExternalPluggableDatabaseStackMonitoringConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        stackMonitoringConnectorId: string;
        /**
         * The status of Stack Monitoring.
         */
        stackMonitoringStatus: string;
    }

    export interface GetExternalPluggableDatabasesExternalPluggableDatabase {
        /**
         * The character set of the external database.
         */
        characterSet: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The Oracle Database configuration
         */
        databaseConfiguration: string;
        /**
         * The Oracle Database edition.
         */
        databaseEdition: string;
        /**
         * The configuration of the Database Management service.
         */
        databaseManagementConfigs: outputs.Database.GetExternalPluggableDatabasesExternalPluggableDatabaseDatabaseManagementConfig[];
        /**
         * The Oracle Database version.
         */
        databaseVersion: string;
        /**
         * The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
         */
        dbId: string;
        /**
         * The database packs licensed for the external Oracle Database.
         */
        dbPacks: string;
        /**
         * The `DB_UNIQUE_NAME` of the external database.
         */
        dbUniqueName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        externalContainerDatabaseId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure external database resource.
         */
        id: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The national character of the external database.
         */
        ncharacterSet: string;
        /**
         * The configuration of Operations Insights for the external database
         */
        operationsInsightsConfigs: outputs.Database.GetExternalPluggableDatabasesExternalPluggableDatabaseOperationsInsightsConfig[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the the non-container database that was converted to a pluggable database to create this resource.
         */
        sourceId: string;
        /**
         * The configuration of Stack Monitoring for the external database.
         */
        stackMonitoringConfigs: outputs.Database.GetExternalPluggableDatabasesExternalPluggableDatabaseStackMonitoringConfig[];
        /**
         * A filter to return only resources that match the specified lifecycle state.
         */
        state: string;
        /**
         * The date and time the database was created.
         */
        timeCreated: string;
        /**
         * The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
         */
        timeZone: string;
    }

    export interface GetExternalPluggableDatabasesExternalPluggableDatabaseDatabaseManagementConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        databaseManagementConnectionId: string;
        /**
         * The status of the Database Management service.
         */
        databaseManagementStatus: string;
        /**
         * The Oracle license model that applies to the external database.
         */
        licenseModel: string;
    }

    export interface GetExternalPluggableDatabasesExternalPluggableDatabaseOperationsInsightsConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        operationsInsightsConnectorId: string;
        /**
         * The status of Operations Insights
         */
        operationsInsightsStatus: string;
    }

    export interface GetExternalPluggableDatabasesExternalPluggableDatabaseStackMonitoringConfig {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         */
        stackMonitoringConnectorId: string;
        /**
         * The status of Stack Monitoring.
         */
        stackMonitoringStatus: string;
    }

    export interface GetExternalPluggableDatabasesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFlexComponentsFilter {
        /**
         * A filter to return only resources that match the entire name given. The match is not case sensitive.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFlexComponentsFlexComponentCollection {
        items: outputs.Database.GetFlexComponentsFlexComponentCollectionItem[];
    }

    export interface GetFlexComponentsFlexComponentCollectionItem {
        /**
         * The maximum number of CPU cores that can ben enabled on the DB Server for this Flex Component.
         */
        availableCoreCount: number;
        /**
         * The maximum  storage that can be enabled on the Storage Server for this Flex Component.
         */
        availableDbStorageInGbs: number;
        /**
         * The minimum number of CPU cores that can be enabled on the DB Server for this Flex Component.
         */
        minimumCoreCount: number;
        /**
         * A filter to return only resources that match the entire name given. The match is not case sensitive.
         */
        name: string;
    }

    export interface GetGiVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetGiVersionsGiVersion {
        /**
         * A valid Oracle Grid Infrastructure (GI) software version.
         */
        version: string;
    }

    export interface GetKeyStoreAssociatedDatabase {
        /**
         * The name of the database that is associated with the key store.
         */
        dbName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         */
        id: string;
    }

    export interface GetKeyStoreTypeDetail {
        /**
         * The administrator username to connect to Oracle Key Vault
         */
        adminUsername: string;
        /**
         * The list of Oracle Key Vault connection IP addresses.
         */
        connectionIps: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        secretId: string;
        /**
         * The type of key store.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetKeyStoresFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetKeyStoresKeyStore {
        /**
         * List of databases associated with the key store.
         */
        associatedDatabases: outputs.Database.GetKeyStoresKeyStoreAssociatedDatabase[];
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * The user-friendly name for the key store. The name does not need to be unique.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         */
        id: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The current state of the key store.
         */
        state: string;
        /**
         * The date and time that the key store was created.
         */
        timeCreated: string;
        /**
         * Key store type details.
         */
        typeDetails: outputs.Database.GetKeyStoresKeyStoreTypeDetail[];
    }

    export interface GetKeyStoresKeyStoreAssociatedDatabase {
        /**
         * The name of the database that is associated with the key store.
         */
        dbName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         */
        id: string;
    }

    export interface GetKeyStoresKeyStoreTypeDetail {
        /**
         * The administrator username to connect to Oracle Key Vault
         */
        adminUsername: string;
        /**
         * The list of Oracle Key Vault connection IP addresses.
         */
        connectionIps: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        secretId: string;
        /**
         * The type of key store.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface GetMaintenanceRunEstimatedPatchingTime {
        /**
         * The estimated time required in minutes for database server patching.
         */
        estimatedDbServerPatchingTime: number;
        /**
         * The estimated time required in minutes for network switch patching.
         */
        estimatedNetworkSwitchesPatchingTime: number;
        /**
         * The estimated time required in minutes for storage server patching.
         */
        estimatedStorageServerPatchingTime: number;
        /**
         * The estimated total time required in minutes for all patching operations.
         */
        totalEstimatedPatchingTime: number;
    }

    export interface GetMaintenanceRunsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMaintenanceRunsMaintenanceRun {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Extend current custom action timeout between the current database servers during waiting state, from 0 (zero) to 30 minutes.
         */
        currentCustomActionTimeoutInMins: number;
        /**
         * The name of the current infrastruture component that is getting patched.
         */
        currentPatchingComponent: string;
        /**
         * Determines the amount of time the system will wait before the start of each database server patching operation. Specify a number of minutes, from 15 to 120.
         */
        customActionTimeoutInMins: number;
        /**
         * Description of the maintenance run.
         */
        description: string;
        /**
         * The user-friendly name for the maintenance run.
         */
        displayName: string;
        /**
         * The estimated start time of the next infrastruture component patching operation.
         */
        estimatedComponentPatchingStartTime: string;
        /**
         * The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching).
         */
        estimatedPatchingTimes: outputs.Database.GetMaintenanceRunsMaintenanceRunEstimatedPatchingTime[];
        /**
         * The OCID of the maintenance run.
         */
        id: string;
        /**
         * If true, enables the configuration of a custom action timeout (waiting period) between database servers patching operations.
         */
        isCustomActionTimeoutEnabled: boolean;
        isEnabled: boolean;
        isPatchNowEnabled: boolean;
        isResumePatching: boolean;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        maintenanceRunId: string;
        /**
         * The sub-type of the maintenance run.
         */
        maintenanceSubtype: string;
        /**
         * The maintenance type.
         */
        maintenanceType: string;
        /**
         * Contain the patch failure count.
         */
        patchFailureCount: number;
        /**
         * The unique identifier of the patch. The identifier string includes the patch type, the Oracle Database version, and the patch creation date (using the format YYMMDD). For example, the identifier `ru_patch_19.9.0.0_201030` is used for an RU patch for Oracle Database 19.9.0.0 that was released October 30, 2020.
         */
        patchId: string;
        /**
         * The time when the patching operation ended.
         */
        patchingEndTime: string;
        /**
         * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
         */
        patchingMode: string;
        /**
         * The time when the patching operation started.
         */
        patchingStartTime: string;
        /**
         * The status of the patching operation.
         */
        patchingStatus: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance run for the Autonomous Data Guard association's peer container database.
         */
        peerMaintenanceRunId: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The target software version for the database server patching operation.
         */
        targetDbServerVersion: string;
        /**
         * The target resource ID.
         */
        targetResourceId: string;
        /**
         * The type of the target resource. Accepted values are: AUTONOMOUS_CONTAINER_DATABASE, AUTONOMOUS_EXADATA_INFRASTRUCTURE, EXADATA_DB_SYSTEM
         */
        targetResourceType: string;
        /**
         * The target Cell version that is to be patched to.
         */
        targetStorageServerVersion: string;
        /**
         * The date and time the maintenance run was completed.
         */
        timeEnded: string;
        /**
         * The date and time the maintenance run is scheduled to occur.
         */
        timeScheduled: string;
        /**
         * The date and time the maintenance run starts.
         */
        timeStarted: string;
    }

    export interface GetMaintenanceRunsMaintenanceRunEstimatedPatchingTime {
        /**
         * The estimated time required in minutes for database server patching.
         */
        estimatedDbServerPatchingTime: number;
        /**
         * The estimated time required in minutes for network switch patching.
         */
        estimatedNetworkSwitchesPatchingTime: number;
        /**
         * The estimated time required in minutes for storage server patching.
         */
        estimatedStorageServerPatchingTime: number;
        /**
         * The estimated total time required in minutes for all patching operations.
         */
        totalEstimatedPatchingTime: number;
    }

    export interface GetPluggableDatabaseConnectionString {
        /**
         * All connection strings to use to connect to the pluggable database.
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * A host name-based PDB connection string.
         */
        pdbDefault: string;
        /**
         * An IP-based PDB connection string.
         */
        pdbIpDefault: string;
    }

    export interface GetPluggableDatabasesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPluggableDatabasesPluggableDatabase {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Connection strings to connect to an Oracle Pluggable Database.
         */
        connectionStrings: outputs.Database.GetPluggableDatabasesPluggableDatabaseConnectionString[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
         */
        containerDatabaseId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pluggable database.
         */
        id: string;
        /**
         * The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
         */
        isRestricted: boolean;
        /**
         * Detailed message for the lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
         */
        openMode: string;
        pdbAdminPassword: string;
        /**
         * A filter to return only pluggable databases that match the entire name given. The match is not case sensitive.
         */
        pdbName: string;
        shouldPdbAdminAccountBeLocked: boolean;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        tdeWalletPassword: string;
        /**
         * The date and time the pluggable database was created.
         */
        timeCreated: string;
    }

    export interface GetPluggableDatabasesPluggableDatabaseConnectionString {
        /**
         * All connection strings to use to connect to the pluggable database.
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * A host name-based PDB connection string.
         */
        pdbDefault: string;
        /**
         * An IP-based PDB connection string.
         */
        pdbIpDefault: string;
    }

    export interface GetVmClusterDataCollectionOption {
        /**
         * Indicates whether diagnostic collection is enabled for the VM cluster. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` API.
         */
        isDiagnosticsEventsEnabled: boolean;
    }

    export interface GetVmClusterNetworkScan {
        /**
         * The node host name.
         */
        hostname: string;
        /**
         * The list of SCAN IP addresses. Three addresses should be provided.
         */
        ips: string[];
        /**
         * The SCAN TCPIP port. Default is 1521.
         */
        port: number;
        /**
         * The SCAN TCPIP port. Default is 1521.
         */
        scanListenerPortTcp: number;
        /**
         * The SCAN TCPIP SSL port. Default is 2484.
         */
        scanListenerPortTcpSsl: number;
    }

    export interface GetVmClusterNetworkVmNetwork {
        /**
         * The network domain name.
         */
        domainName: string;
        /**
         * The network gateway.
         */
        gateway: string;
        /**
         * The network netmask.
         */
        netmask: string;
        /**
         * The network type.
         */
        networkType: string;
        /**
         * The list of node details.
         */
        nodes: outputs.Database.GetVmClusterNetworkVmNetworkNode[];
        /**
         * The network VLAN ID.
         */
        vlanId: string;
    }

    export interface GetVmClusterNetworkVmNetworkNode {
        /**
         * The node host name.
         */
        hostname: string;
        /**
         * The node IP address.
         */
        ip: string;
        /**
         * The node virtual IP (VIP) address.
         */
        vip: string;
        /**
         * The node virtual IP (VIP) host name.
         */
        vipHostname: string;
    }

    export interface GetVmClusterNetworksFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVmClusterNetworksVmClusterNetwork {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * The list of DNS server IP addresses. Maximum of 3 allowed.
         */
        dns: string[];
        /**
         * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        exadataInfrastructureId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
         */
        id: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The list of NTP server IP addresses. Maximum of 3 allowed.
         */
        ntps: string[];
        /**
         * The SCAN details.
         */
        scans: outputs.Database.GetVmClusterNetworksVmClusterNetworkScan[];
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time when the VM cluster network was created.
         */
        timeCreated: string;
        validateVmClusterNetwork: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated VM Cluster.
         */
        vmClusterId: string;
        /**
         * Details of the client and backup networks.
         */
        vmNetworks: outputs.Database.GetVmClusterNetworksVmClusterNetworkVmNetwork[];
    }

    export interface GetVmClusterNetworksVmClusterNetworkScan {
        /**
         * The node host name.
         */
        hostname: string;
        /**
         * The list of SCAN IP addresses. Three addresses should be provided.
         */
        ips: string[];
        /**
         * The SCAN TCPIP port. Default is 1521.
         */
        port: number;
        /**
         * The SCAN TCPIP port. Default is 1521.
         */
        scanListenerPortTcp: number;
        /**
         * The SCAN TCPIP SSL port. Default is 2484.
         */
        scanListenerPortTcpSsl: number;
    }

    export interface GetVmClusterNetworksVmClusterNetworkVmNetwork {
        /**
         * The network domain name.
         */
        domainName: string;
        /**
         * The network gateway.
         */
        gateway: string;
        /**
         * The network netmask.
         */
        netmask: string;
        /**
         * The network type.
         */
        networkType: string;
        /**
         * The list of node details.
         */
        nodes: outputs.Database.GetVmClusterNetworksVmClusterNetworkVmNetworkNode[];
        /**
         * The network VLAN ID.
         */
        vlanId: string;
    }

    export interface GetVmClusterNetworksVmClusterNetworkVmNetworkNode {
        /**
         * The node host name.
         */
        hostname: string;
        /**
         * The node IP address.
         */
        ip: string;
        /**
         * The node virtual IP (VIP) address.
         */
        vip: string;
        /**
         * The node virtual IP (VIP) host name.
         */
        vipHostname: string;
    }

    export interface GetVmClusterPatchHistoryEntriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVmClusterPatchHistoryEntriesPatchHistoryEntry {
        /**
         * The action being performed or was completed.
         */
        action: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch history entry.
         */
        id: string;
        /**
         * A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
         */
        lifecycleDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
         */
        patchId: string;
        /**
         * The current state of the action.
         */
        state: string;
        /**
         * The date and time when the patch action completed
         */
        timeEnded: string;
        /**
         * The date and time when the patch action started.
         */
        timeStarted: string;
    }

    export interface GetVmClusterPatchesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVmClusterPatchesPatch {
        /**
         * Actions that can possibly be performed using this patch.
         */
        availableActions: string[];
        /**
         * The text describing this patch package.
         */
        description: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
         */
        id: string;
        /**
         * Action that is currently being performed or was completed last.
         */
        lastAction: string;
        /**
         * A descriptive text associated with the lifecycleState. Typically can contain additional displayable text.
         */
        lifecycleDetails: string;
        /**
         * The current state of the patch as a result of lastAction.
         */
        state: string;
        /**
         * The date and time that the patch was released.
         */
        timeReleased: string;
        /**
         * The version of this patch package.
         */
        version: string;
    }

    export interface GetVmClusterRecommendedNetworkNetwork {
        /**
         * The cidr for the network.
         */
        cidr: string;
        /**
         * The network domain name.
         */
        domain: string;
        /**
         * The network gateway.
         */
        gateway: string;
        /**
         * The network netmask.
         */
        netmask: string;
        /**
         * The network type.
         */
        networkType: string;
        /**
         * The network domain name.
         */
        prefix: string;
        /**
         * The network VLAN ID.
         */
        vlanId: string;
    }

    export interface GetVmClusterRecommendedNetworkScan {
        /**
         * The node host name.
         */
        hostname: string;
        /**
         * The list of SCAN IP addresses. Three addresses should be provided.
         */
        ips: string[];
        /**
         * The SCAN TCPIP port. Default is 1521.
         */
        port: number;
        /**
         * The SCAN TCPIP port. Default is 1521.
         */
        scanListenerPortTcp: number;
        /**
         * The SCAN TCPIP SSL port. Default is 2484.
         */
        scanListenerPortTcpSsl: number;
    }

    export interface GetVmClusterRecommendedNetworkVmNetwork {
        /**
         * The network domain name.
         */
        domainName: string;
        /**
         * The network gateway.
         */
        gateway: string;
        /**
         * The network netmask.
         */
        netmask: string;
        /**
         * The network type.
         */
        networkType: string;
        /**
         * The list of node details.
         */
        nodes: outputs.Database.GetVmClusterRecommendedNetworkVmNetworkNode[];
        /**
         * The network VLAN ID.
         */
        vlanId: string;
    }

    export interface GetVmClusterRecommendedNetworkVmNetworkNode {
        /**
         * The node host name.
         */
        hostname: string;
        /**
         * The node IP address.
         */
        ip: string;
        /**
         * The node virtual IP (VIP) address.
         */
        vip: string;
        /**
         * The node virtual IP (VIP) host name.
         */
        vipHostname: string;
    }

    export interface GetVmClusterUpdateHistoryEntriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVmClusterUpdateHistoryEntriesVmClusterUpdateHistoryEntry {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance update history entry.
         */
        id: string;
        /**
         * Descriptive text providing additional details about the lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time when the maintenance update action completed.
         */
        timeCompleted: string;
        /**
         * The date and time when the maintenance update action started.
         */
        timeStarted: string;
        /**
         * The update action performed using this maintenance update.
         */
        updateAction: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance update.
         */
        updateId: string;
        /**
         * A filter to return only resources that match the given update type exactly.
         */
        updateType: string;
    }

    export interface GetVmClusterUpdatesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVmClusterUpdatesVmClusterUpdate {
        /**
         * The possible actions that can be performed using this maintenance update.
         */
        availableActions: string[];
        /**
         * Details of the maintenance update package.
         */
        description: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance update.
         */
        id: string;
        /**
         * The update action performed most recently using this maintenance update.
         */
        lastAction: string;
        /**
         * Descriptive text providing additional details about the lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * The date and time the maintenance update was released.
         */
        timeReleased: string;
        /**
         * A filter to return only resources that match the given update type exactly.
         */
        updateType: string;
        /**
         * The version of the maintenance update package.
         */
        version: string;
    }

    export interface GetVmClustersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVmClustersVmCluster {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        cpuCoreCount: number;
        /**
         * The number of enabled CPU cores.
         */
        cpusEnabled: number;
        /**
         * Indicates user preferences for the various diagnostic collection options for the VM cluster.
         */
        dataCollectionOptions: outputs.Database.GetVmClustersVmClusterDataCollectionOption[];
        dataStorageSizeInGb: number;
        /**
         * Size, in terabytes, of the DATA disk group.
         */
        dataStorageSizeInTbs: number;
        /**
         * The local node storage allocated in GBs.
         */
        dbNodeStorageSizeInGbs: number;
        /**
         * The list of Db server.
         */
        dbServers: string[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given. The match is not case sensitive.
         */
        displayName: string;
        /**
         * If provided, filters the results for the given Exadata Infrastructure.
         */
        exadataInfrastructureId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The Oracle Grid Infrastructure software version for the VM cluster.
         */
        giVersion: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
         */
        id: string;
        /**
         * If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
         */
        isLocalBackupEnabled: boolean;
        /**
         * If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
         */
        isSparseDiskgroupEnabled: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
         */
        lastPatchHistoryEntryId: string;
        /**
         * The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
         */
        licenseModel: string;
        /**
         * Additional information about the current lifecycle state.
         */
        lifecycleDetails: string;
        /**
         * The memory allocated in GBs.
         */
        memorySizeInGbs: number;
        ocpuCount: number;
        ocpusEnabled: number;
        /**
         * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
         */
        shape: string;
        /**
         * The public key portion of one or more key pairs used for SSH access to the VM cluster.
         */
        sshPublicKeys: string[];
        /**
         * A filter to return only resources that match the given lifecycle state exactly.
         */
        state: string;
        /**
         * Operating system version of the image.
         */
        systemVersion: string;
        /**
         * The date and time that the VM cluster was created.
         */
        timeCreated: string;
        /**
         * The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
         */
        timeZone: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
         */
        vmClusterNetworkId: string;
    }

    export interface GetVmClustersVmClusterDataCollectionOption {
        /**
         * Indicates whether diagnostic collection is enabled for the VM cluster. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` API.
         */
        isDiagnosticsEventsEnabled: boolean;
    }

    export interface KeyStoreAssociatedDatabase {
        /**
         * The name of the database that is associated with the key store.
         */
        dbName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         */
        id: string;
    }

    export interface KeyStoreTypeDetails {
        /**
         * (Updatable) The administrator username to connect to Oracle Key Vault
         */
        adminUsername: string;
        /**
         * (Updatable) The list of Oracle Key Vault connection IP addresses.
         */
        connectionIps: string[];
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        secretId: string;
        /**
         * (Updatable) The type of key store.
         */
        type: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         */
        vaultId: string;
    }

    export interface MaintenanceRunEstimatedPatchingTime {
        /**
         * The estimated time required in minutes for database server patching.
         */
        estimatedDbServerPatchingTime: number;
        /**
         * The estimated time required in minutes for network switch patching.
         */
        estimatedNetworkSwitchesPatchingTime: number;
        /**
         * The estimated time required in minutes for storage server patching.
         */
        estimatedStorageServerPatchingTime: number;
        /**
         * The estimated total time required in minutes for all patching operations.
         */
        totalEstimatedPatchingTime: number;
    }

    export interface PluggableDatabaseConnectionString {
        /**
         * All connection strings to use to connect to the pluggable database.
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * A host name-based PDB connection string.
         */
        pdbDefault: string;
        /**
         * An IP-based PDB connection string.
         */
        pdbIpDefault: string;
    }

    export interface PluggableDatabasesLocalCloneConnectionString {
        /**
         * All connection strings to use to connect to the pluggable database.
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * A host name-based PDB connection string.
         */
        pdbDefault: string;
        /**
         * An IP-based PDB connection string.
         */
        pdbIpDefault: string;
    }

    export interface PluggableDatabasesRemoteCloneConnectionString {
        /**
         * All connection strings to use to connect to the pluggable database.
         */
        allConnectionStrings: {[key: string]: any};
        /**
         * A host name-based PDB connection string.
         */
        pdbDefault: string;
        /**
         * An IP-based PDB connection string.
         */
        pdbIpDefault: string;
    }

    export interface VmClusterAddVirtualNetworkDataCollectionOption {
        /**
         * Indicates whether diagnostic collection is enabled for the VM cluster. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` API.
         */
        isDiagnosticsEventsEnabled: boolean;
    }

    export interface VmClusterAddVirtualNetworkDbServer {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Exacc Db server.
         */
        dbServerId: string;
    }

    export interface VmClusterDataCollectionOptions {
        /**
         * (Updatable) Indicates whether diagnostic collection is enabled for the VM cluster. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` API.
         */
        isDiagnosticsEventsEnabled: boolean;
    }

    export interface VmClusterNetworkScan {
        /**
         * (Updatable) The node host name.
         */
        hostname: string;
        /**
         * (Updatable) The list of SCAN IP addresses. Three addresses should be provided.
         */
        ips: string[];
        /**
         * (Updatable) The SCAN TCPIP port. Default is 1521.
         */
        port: number;
        /**
         * (Updatable) The SCAN TCPIP port. Default is 1521.
         */
        scanListenerPortTcp: number;
        /**
         * (Updatable) The SCAN TCPIP SSL port. Default is 2484.
         */
        scanListenerPortTcpSsl: number;
    }

    export interface VmClusterNetworkVmNetwork {
        /**
         * (Updatable) The network domain name.
         */
        domainName: string;
        /**
         * (Updatable) The network gateway.
         */
        gateway: string;
        /**
         * (Updatable) The network netmask.
         */
        netmask: string;
        /**
         * (Updatable) The network type.
         */
        networkType: string;
        /**
         * (Updatable) The list of node details.
         */
        nodes: outputs.Database.VmClusterNetworkVmNetworkNode[];
        /**
         * (Updatable) The network VLAN ID.
         */
        vlanId: string;
    }

    export interface VmClusterNetworkVmNetworkNode {
        /**
         * (Updatable) The node host name.
         */
        hostname: string;
        /**
         * (Updatable) The node IP address.
         */
        ip: string;
        /**
         * (Updatable) The node virtual IP (VIP) address.
         */
        vip: string;
        /**
         * (Updatable) The node virtual IP (VIP) host name.
         */
        vipHostname: string;
    }

    export interface VmClusterRemoveVirtualMachineDataCollectionOption {
        /**
         * Indicates whether diagnostic collection is enabled for the VM cluster. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` API.
         */
        isDiagnosticsEventsEnabled: boolean;
    }

    export interface VmClusterRemoveVirtualMachineDbServer {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Exacc Db server.
         */
        dbServerId: string;
    }
}

export namespace DatabaseManagement {
    export interface GetDbManagementPrivateEndpointAssociatedDatabaseItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        id: string;
        /**
         * The name of the database.
         */
        name: string;
        /**
         * The time when Database Management was enabled for the database.
         */
        timeRegistered: string;
    }

    export interface GetDbManagementPrivateEndpointAssociatedDatabasesAssociatedDatabaseCollection {
        /**
         * A list of databases using a Database Management private endpoint.
         */
        items: outputs.DatabaseManagement.GetDbManagementPrivateEndpointAssociatedDatabasesAssociatedDatabaseCollectionItem[];
    }

    export interface GetDbManagementPrivateEndpointAssociatedDatabasesAssociatedDatabaseCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         */
        id: string;
        /**
         * The name of the database.
         */
        name: string;
        /**
         * The time when Database Management was enabled for the database.
         */
        timeRegistered: string;
    }

    export interface GetDbManagementPrivateEndpointAssociatedDatabasesFilter {
        /**
         * The name of the database.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbManagementPrivateEndpointsDbManagementPrivateEndpointCollection {
        items: outputs.DatabaseManagement.GetDbManagementPrivateEndpointsDbManagementPrivateEndpointCollectionItem[];
    }

    export interface GetDbManagementPrivateEndpointsDbManagementPrivateEndpointCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The description of the Database Management private endpoint.
         */
        description: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Management private endpoint.
         */
        id: string;
        /**
         * The option to filter Database Management private endpoints that can used for Oracle Databases in a cluster. This should be used along with the vcnId query parameter.
         */
        isCluster: boolean;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        /**
         * The OCIDs of the Network Security Groups to which the Database Management private endpoint belongs.
         */
        nsgIds: string[];
        /**
         * The IP addresses assigned to the Database Management private endpoint.
         */
        privateIp: string;
        /**
         * The lifecycle state of a resource.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet.
         */
        subnetId: string;
        /**
         * The date and time the Database Managament private endpoint was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetDbManagementPrivateEndpointsFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetJobExecutionsStatusItem {
        /**
         * The number of job executions of a particular status.
         */
        count: number;
        /**
         * The status of the job execution.
         */
        status: string;
    }

    export interface GetJobExecutionsStatusesFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetJobExecutionsStatusesJobExecutionsStatusSummaryCollection {
        /**
         * A list of JobExecutionsSummary objects.
         */
        items: outputs.DatabaseManagement.GetJobExecutionsStatusesJobExecutionsStatusSummaryCollectionItem[];
    }

    export interface GetJobExecutionsStatusesJobExecutionsStatusSummaryCollectionItem {
        /**
         * The number of job executions of a particular status.
         */
        count: number;
        /**
         * The status of the job execution.
         */
        status: string;
    }

    export interface GetManagedDatabaseAddmTaskItem {
        /**
         * The ID number of the beginning AWR snapshot.
         */
        beginSnapshotId: string;
        /**
         * The database user who owns the ADDM task.
         */
        dbUser: string;
        /**
         * The description of the ADDM task.
         */
        description: string;
        /**
         * The ID number of the ending AWR snapshot.
         */
        endSnapshotId: string;
        /**
         * The timestamp of the ending AWR snapshot used in the ADDM task as defined by date-time RFC3339 format.
         */
        endSnapshotTime: string;
        /**
         * The number of ADDM findings.
         */
        findings: string;
        /**
         * A description of how the task was created.
         */
        howCreated: string;
        /**
         * The timestamp of the beginning AWR snapshot used in the ADDM task as defined by date-time RFC3339 format.
         */
        startSnapshotTime: string;
        /**
         * The status of the ADDM task.
         */
        status: string;
        /**
         * The ID number of the ADDM task.
         */
        taskId: string;
        /**
         * The name of the ADDM task.
         */
        taskName: string;
        /**
         * The creation date of the ADDM task.
         */
        timeCreated: string;
    }

    export interface GetManagedDatabaseAddmTasksAddmTasksCollection {
        /**
         * The list of ADDM task metadata.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseAddmTasksAddmTasksCollectionItem[];
    }

    export interface GetManagedDatabaseAddmTasksAddmTasksCollectionItem {
        /**
         * The ID number of the beginning AWR snapshot.
         */
        beginSnapshotId: string;
        /**
         * The database user who owns the ADDM task.
         */
        dbUser: string;
        /**
         * The description of the ADDM task.
         */
        description: string;
        /**
         * The ID number of the ending AWR snapshot.
         */
        endSnapshotId: string;
        /**
         * The timestamp of the ending AWR snapshot used in the ADDM task as defined by date-time RFC3339 format.
         */
        endSnapshotTime: string;
        /**
         * The number of ADDM findings.
         */
        findings: string;
        /**
         * A description of how the task was created.
         */
        howCreated: string;
        /**
         * The timestamp of the beginning AWR snapshot used in the ADDM task as defined by date-time RFC3339 format.
         */
        startSnapshotTime: string;
        /**
         * The status of the ADDM task.
         */
        status: string;
        /**
         * The ID number of the ADDM task.
         */
        taskId: string;
        /**
         * The name of the ADDM task.
         */
        taskName: string;
        /**
         * The creation date of the ADDM task.
         */
        timeCreated: string;
    }

    export interface GetManagedDatabaseAddmTasksFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseAlertLogCountItem {
        /**
         * The category of different alert logs.
         */
        category: string;
        /**
         * The count of alert logs with specific category.
         */
        count: number;
    }

    export interface GetManagedDatabaseAlertLogCountsAlertLogCountsCollection {
        /**
         * An array of the counts of different urgency or type of alert logs.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseAlertLogCountsAlertLogCountsCollectionItem[];
    }

    export interface GetManagedDatabaseAlertLogCountsAlertLogCountsCollectionItem {
        /**
         * The category of different alert logs.
         */
        category: string;
        /**
         * The count of alert logs with specific category.
         */
        count: number;
    }

    export interface GetManagedDatabaseAlertLogCountsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseAttentionLogCountItem {
        /**
         * The category of different attention logs.
         */
        category: string;
        /**
         * The count of attention logs with specific category.
         */
        count: number;
    }

    export interface GetManagedDatabaseAttentionLogCountsAttentionLogCountsCollection {
        /**
         * An array of the counts of different urgency or type of attention logs.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseAttentionLogCountsAttentionLogCountsCollectionItem[];
    }

    export interface GetManagedDatabaseAttentionLogCountsAttentionLogCountsCollectionItem {
        /**
         * The category of different attention logs.
         */
        category: string;
        /**
         * The count of attention logs with specific category.
         */
        count: number;
    }

    export interface GetManagedDatabaseAttentionLogCountsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseGroupManagedDatabase {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database resides.
         */
        compartmentId: string;
        /**
         * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         */
        databaseSubType: string;
        /**
         * The type of Oracle Database installation.
         */
        databaseType: string;
        /**
         * The infrastructure used to deploy the Oracle Database.
         */
        deploymentType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         */
        id: string;
        /**
         * The name of the Managed Database Group.
         */
        name: string;
        /**
         * The date and time the Managed Database was added to the group.
         */
        timeAdded: string;
        /**
         * The workload type of the Autonomous Database.
         */
        workloadType: string;
    }

    export interface GetManagedDatabaseGroupsFilter {
        /**
         * A filter to return only resources that match the entire name. Only one of the parameters, id or name should be provided
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseGroupsManagedDatabaseGroupCollection {
        items: outputs.DatabaseManagement.GetManagedDatabaseGroupsManagedDatabaseGroupCollectionItem[];
    }

    export interface GetManagedDatabaseGroupsManagedDatabaseGroupCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The information specified by the user about the Managed Database Group.
         */
        description: string;
        /**
         * The identifier of the resource. Only one of the parameters, id or name should be provided.
         */
        id: string;
        /**
         * A list of Managed Databases in the Managed Database Group.
         */
        managedDatabases: outputs.DatabaseManagement.GetManagedDatabaseGroupsManagedDatabaseGroupCollectionItemManagedDatabase[];
        /**
         * A filter to return only resources that match the entire name. Only one of the parameters, id or name should be provided
         */
        name: string;
        /**
         * The lifecycle state of a resource.
         */
        state: string;
        /**
         * The date and time the Managed Database Group was created.
         */
        timeCreated: string;
        /**
         * The date and time the Managed Database Group was last updated.
         */
        timeUpdated: string;
    }

    export interface GetManagedDatabaseGroupsManagedDatabaseGroupCollectionItemManagedDatabase {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         */
        databaseSubType: string;
        /**
         * The type of Oracle Database installation.
         */
        databaseType: string;
        /**
         * The infrastructure used to deploy the Oracle Database.
         */
        deploymentType: string;
        /**
         * The identifier of the resource. Only one of the parameters, id or name should be provided.
         */
        id: string;
        /**
         * A filter to return only resources that match the entire name. Only one of the parameters, id or name should be provided
         */
        name: string;
        /**
         * The date and time the Managed Database was added to the group.
         */
        timeAdded: string;
        /**
         * The workload type of the Autonomous Database.
         */
        workloadType: string;
    }

    export interface GetManagedDatabaseManagedDatabaseGroup {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database Group.
         */
        id: string;
        /**
         * The name of the Managed Database.
         */
        name: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionDatabase {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database resides.
         */
        compartmentId: string;
        /**
         * The infrastructure used to deploy the Oracle Database.
         */
        dbDeploymentType: string;
        /**
         * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         */
        dbSubType: string;
        /**
         * The type of Oracle Database installation.
         */
        dbType: string;
        /**
         * The version of the Oracle Database.
         */
        dbVersion: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         */
        id: string;
        /**
         * The name of the rule.
         */
        name: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReport {
        /**
         * The list of rules that were not adhered to by the Optimizer Statistics Collection.
         */
        rules: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRule[];
        /**
         * A summary of the Optimizer Statistics Advisor execution.
         */
        summary: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRule {
        /**
         * The description of the rule.
         */
        description: string;
        /**
         * The list of findings for the rule.
         */
        findings: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFinding[];
        /**
         * The name of the rule.
         */
        name: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFinding {
        /**
         * The details of the schema or operation.
         */
        details: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingDetail[];
        /**
         * The message of the rationale.
         */
        message: string;
        /**
         * The list of recommendations.
         */
        recommendations: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingRecommendation[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingDetail {
        /**
         * The list of operation details.
         */
        operations: string[];
        /**
         * The names of the impacted database schemas and their objects.
         */
        schemas: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingDetailSchema[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingDetailSchema {
        /**
         * The name of the rule.
         */
        name: string;
        /**
         * The names of schema objects.
         */
        objects: string[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingRecommendation {
        /**
         * An example of the recommendation.
         */
        examples: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingRecommendationExample[];
        /**
         * The message of the rationale.
         */
        message: string;
        /**
         * The rationale of the recommendation.
         */
        rationales: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingRecommendationRationale[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingRecommendationExample {
        /**
         * The list of examples for the recommendation.
         */
        lines: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingRecommendationExampleLine[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingRecommendationExampleLine {
        /**
         * The comments about the operation.
         */
        comment: string;
        /**
         * The details of the example operation.
         */
        operation: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionReportRuleFindingRecommendationRationale {
        /**
         * The message of the rationale.
         */
        message: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsFilter {
        /**
         * The name of the rule.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollection {
        items: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItem[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItem {
        /**
         * The summary of the Managed Database resource.
         */
        databases: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase[];
        /**
         * The errors in the Optimizer Statistics Advisor execution, if any.
         */
        errorMessage: string;
        /**
         * The name of the Optimizer Statistics Advisor execution.
         */
        executionName: string;
        /**
         * The list of findings for the rule.
         */
        findings: number;
        /**
         * A report that includes the rules, findings, recommendations, and actions discovered during the execution of the Optimizer Statistics Advisor.
         */
        reports: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReport[];
        /**
         * The status of the Optimizer Statistics Advisor execution.
         */
        status: string;
        /**
         * The Optimizer Statistics Advisor execution status message, if any.
         */
        statusMessage: string;
        /**
         * The name of the Optimizer Statistics Advisor task.
         */
        taskName: string;
        /**
         * The end time of the time range to retrieve the Optimizer Statistics Advisor execution of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
         */
        timeEnd: string;
        /**
         * The start time of the time range to retrieve the Optimizer Statistics Advisor execution of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
         */
        timeStart: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database resides.
         */
        compartmentId: string;
        /**
         * The infrastructure used to deploy the Oracle Database.
         */
        dbDeploymentType: string;
        /**
         * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         */
        dbSubType: string;
        /**
         * The type of Oracle Database installation.
         */
        dbType: string;
        /**
         * The version of the Oracle Database.
         */
        dbVersion: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         */
        id: string;
        /**
         * The name of the rule.
         */
        name: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReport {
        /**
         * The list of rules that were not adhered to by the Optimizer Statistics Collection.
         */
        rules: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRule[];
        /**
         * A summary of the Optimizer Statistics Advisor execution.
         */
        summary: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRule {
        /**
         * The description of the rule.
         */
        description: string;
        /**
         * The list of findings for the rule.
         */
        findings: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFinding[];
        /**
         * The name of the rule.
         */
        name: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFinding {
        /**
         * The details of the schema or operation.
         */
        details: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingDetail[];
        /**
         * The message of the rationale.
         */
        message: string;
        /**
         * The list of recommendations.
         */
        recommendations: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingRecommendation[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingDetail {
        /**
         * The list of operation details.
         */
        operations: string[];
        /**
         * The names of the impacted database schemas and their objects.
         */
        schemas: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingDetailSchema[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingDetailSchema {
        /**
         * The name of the rule.
         */
        name: string;
        /**
         * The names of schema objects.
         */
        objects: string[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingRecommendation {
        /**
         * An example of the recommendation.
         */
        examples: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingRecommendationExample[];
        /**
         * The message of the rationale.
         */
        message: string;
        /**
         * The rationale of the recommendation.
         */
        rationales: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingRecommendationRationale[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingRecommendationExample {
        /**
         * The list of examples for the recommendation.
         */
        lines: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingRecommendationExampleLine[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingRecommendationExampleLine {
        /**
         * The comments about the operation.
         */
        comment: string;
        /**
         * The details of the example operation.
         */
        operation: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReportRuleFindingRecommendationRationale {
        /**
         * The message of the rationale.
         */
        message: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionAggregationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOptimizerStatisticsCollectionAggregationsCollection {
        /**
         * The list of Optimizer Statistics Collection details.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOptimizerStatisticsCollectionAggregationsCollectionItem[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOptimizerStatisticsCollectionAggregationsCollectionItem {
        /**
         * The number of tasks or objects for which statistics gathering is completed.
         */
        completed: number;
        /**
         * The number of tasks or objects for which statistics gathering failed.
         */
        failed: number;
        /**
         * The optimizer statistics tasks grouped by type.
         */
        groupBy: string;
        /**
         * The number of tasks or objects for which statistics gathering is in progress.
         */
        inProgress: number;
        /**
         * The number of tasks or objects for which statistics are yet to be gathered.
         */
        pending: number;
        /**
         * The number of tasks or objects for which statistics gathering was skipped.
         */
        skipped: number;
        /**
         * Indicates the end of the hour as the statistics are aggregated per hour.
         */
        timeEnd: string;
        /**
         * Indicates the start of the hour as the statistics are aggregated per hour.
         */
        timeStart: string;
        /**
         * The number of tasks or objects for which statistics gathering timed out.
         */
        timedOut: number;
        /**
         * The total number of tasks or objects for which statistics collection is finished. This number is the sum of all the tasks or objects with various statuses: pending, inProgress, completed, failed, skipped, timedOut, and unknown.
         */
        total: number;
        /**
         * The number of tasks or objects for which the status of statistics gathering is unknown.
         */
        unknown: number;
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionOperationDatabase {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database resides.
         */
        compartmentId: string;
        /**
         * The infrastructure used to deploy the Oracle Database.
         */
        dbDeploymentType: string;
        /**
         * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         */
        dbSubType: string;
        /**
         * The type of Oracle Database installation.
         */
        dbType: string;
        /**
         * The version of the Oracle Database.
         */
        dbVersion: string;
        /**
         * The ID of the operation.
         */
        id: string;
        /**
         * The name of the Managed Database.
         */
        name: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionOperationTask {
        /**
         * The status of the Optimizer Statistics Collection task.
         */
        status: string;
        /**
         * The name of the target object for which statistics are gathered.
         */
        target: string;
        /**
         * The type of target object.
         */
        targetType: string;
        /**
         * The end time of the Optimizer Statistics Collection task.
         */
        timeEnd: string;
        /**
         * The start time of the Optimizer Statistics Collection task.
         */
        timeStart: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionOperationsFilter {
        /**
         * The name of the Managed Database.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollection {
        items: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItem[];
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItem {
        /**
         * The number of objects for which statistics collection is completed.
         */
        completedCount: number;
        /**
         * The summary of the Managed Database resource.
         */
        databases: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemDatabase[];
        /**
         * The time it takes to complete the operation (in seconds).
         */
        durationInSeconds: number;
        /**
         * The end time of the operation.
         */
        endTime: string;
        /**
         * The number of objects for which statistics collection failed.
         */
        failedCount: number;
        /**
         * The ID of the operation.
         */
        id: number;
        /**
         * The number of objects for which statistics collection is in progress.
         */
        inProgressCount: number;
        /**
         * The name of the job.
         */
        jobName: string;
        /**
         * The name of the operation.
         */
        operationName: string;
        /**
         * The start time of the operation.
         */
        startTime: string;
        /**
         * The status of the Optimizer Statistics Collection task.
         */
        status: string;
        /**
         * The name of the target object for which statistics are gathered.
         */
        target: string;
        /**
         * An array of Optimizer Statistics Collection task details.
         */
        tasks: outputs.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemTask[];
        /**
         * The number of objects for which statistics collection timed out.
         */
        timedOutCount: number;
        /**
         * The total number of objects for which statistics is collected. This number is the sum of all the objects with various statuses: completed, inProgress, failed, and timedOut.
         */
        totalObjectsCount: number;
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemDatabase {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database resides.
         */
        compartmentId: string;
        /**
         * The infrastructure used to deploy the Oracle Database.
         */
        dbDeploymentType: string;
        /**
         * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         */
        dbSubType: string;
        /**
         * The type of Oracle Database installation.
         */
        dbType: string;
        /**
         * The version of the Oracle Database.
         */
        dbVersion: string;
        /**
         * The ID of the operation.
         */
        id: string;
        /**
         * The name of the Managed Database.
         */
        name: string;
    }

    export interface GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemTask {
        /**
         * The status of the Optimizer Statistics Collection task.
         */
        status: string;
        /**
         * The name of the target object for which statistics are gathered.
         */
        target: string;
        /**
         * The type of target object.
         */
        targetType: string;
        /**
         * The end time of the Optimizer Statistics Collection task.
         */
        timeEnd: string;
        /**
         * The start time of the Optimizer Statistics Collection task.
         */
        timeStart: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTaskItem {
        /**
         * The number of days left before the task expires. If the value equals -1, then the task has no expiration time (UNLIMITED).
         */
        daysToExpire: number;
        /**
         * The description of the SQL Tuning Advisor task.
         */
        description: string;
        /**
         * The instance ID of the SQL Tuning Advisor task. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        instanceId: number;
        /**
         * The optional query parameter to filter the SQL Tuning Advisor task list by name.
         */
        name: string;
        /**
         * The owner of the SQL Tuning Advisor task.
         */
        owner: string;
        /**
         * The number of recommendations provided for the SQL Tuning Advisor task.
         */
        recommendationCount: number;
        /**
         * The unique identifier of the SQL Tuning Advisor task. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskId: string;
        /**
         * The status of the SQL Tuning Advisor task.
         */
        taskStatus: string;
        /**
         * The Creation date of the SQL Tuning Advisor task.
         */
        timeCreated: string;
        /**
         * The end time of the task execution.
         */
        timeExecutionEnded: string;
        /**
         * The start time of the task execution.
         */
        timeExecutionStarted: string;
        /**
         * The total number of SQL statements related to the SQL Tuning Advisor task.
         */
        totalSqlStatements: number;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparisonModified {
        /**
         * A map contains the statistics for the SQL execution using the plan. The key of the map is the metric's name. The value of the map is the metric's value.
         */
        planStats: {[key: string]: any};
        /**
         * The status of the execution using the plan.
         */
        planStatus: string;
        /**
         * The type of the original or modified plan with profile, index, and so on.
         */
        planType: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparisonOriginal {
        /**
         * A map contains the statistics for the SQL execution using the plan. The key of the map is the metric's name. The value of the map is the metric's value.
         */
        planStats: {[key: string]: any};
        /**
         * The status of the execution using the plan.
         */
        planStatus: string;
        /**
         * The type of the original or modified plan with profile, index, and so on.
         */
        planType: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksFilter {
        /**
         * The optional query parameter to filter the SQL Tuning Advisor task list by name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksFindingItem {
        /**
         * The time benefit (in seconds) for the highest-rated finding for this object.
         */
        dbTimeBenefit: number;
        /**
         * Indicates whether an alternative execution plan was reported for this SQL statement.
         */
        isAlternativePlanFindingPresent: boolean;
        /**
         * Indicates whether there is an error in this SQL statement.
         */
        isErrorFindingPresent: boolean;
        /**
         * Indicates whether an index recommendation was reported for this SQL statement.
         */
        isIndexFindingPresent: boolean;
        /**
         * Indicates whether a miscellaneous finding was reported for this SQL statement.
         */
        isMiscellaneousFindingPresent: boolean;
        /**
         * Indicates whether a restructure SQL recommendation was reported for this SQL statement.
         */
        isRestructureSqlFindingPresent: boolean;
        /**
         * Indicates whether a SQL Profile recommendation has been implemented for this SQL statement.
         */
        isSqlProfileFindingImplemented: boolean;
        /**
         * Indicates whether a SQL Profile recommendation was reported for this SQL statement.
         */
        isSqlProfileFindingPresent: boolean;
        /**
         * Indicates whether a statistics recommendation was reported for this SQL statement.
         */
        isStatsFindingPresent: boolean;
        /**
         * Indicates whether the task timed out.
         */
        isTimeoutFindingPresent: boolean;
        /**
         * The parsing schema of the object.
         */
        parsingSchema: string;
        /**
         * The per-execution percentage benefit.
         */
        perExecutionPercentage: number;
        /**
         * The unique key of this SQL statement.
         */
        sqlKey: string;
        /**
         * The text of the SQL statement.
         */
        sqlText: string;
        /**
         * The SQL tuning task identifier. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskId: string;
        /**
         * The execution id of the analyzed SQL object. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskObjectExecutionId: string;
        /**
         * The key of the object to which these recommendations apply. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskObjectId: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksFindingsSqlTuningAdvisorTaskFindingCollection {
        /**
         * An array of the findings for a tuning task.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseSqlTuningAdvisorTasksFindingsSqlTuningAdvisorTaskFindingCollectionItem[];
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksFindingsSqlTuningAdvisorTaskFindingCollectionItem {
        /**
         * The time benefit (in seconds) for the highest-rated finding for this object.
         */
        dbTimeBenefit: number;
        /**
         * Indicates whether an alternative execution plan was reported for this SQL statement.
         */
        isAlternativePlanFindingPresent: boolean;
        /**
         * Indicates whether there is an error in this SQL statement.
         */
        isErrorFindingPresent: boolean;
        /**
         * Indicates whether an index recommendation was reported for this SQL statement.
         */
        isIndexFindingPresent: boolean;
        /**
         * Indicates whether a miscellaneous finding was reported for this SQL statement.
         */
        isMiscellaneousFindingPresent: boolean;
        /**
         * Indicates whether a restructure SQL recommendation was reported for this SQL statement.
         */
        isRestructureSqlFindingPresent: boolean;
        /**
         * Indicates whether a SQL Profile recommendation has been implemented for this SQL statement.
         */
        isSqlProfileFindingImplemented: boolean;
        /**
         * Indicates whether a SQL Profile recommendation was reported for this SQL statement.
         */
        isSqlProfileFindingPresent: boolean;
        /**
         * Indicates whether a statistics recommendation was reported for this SQL statement.
         */
        isStatsFindingPresent: boolean;
        /**
         * Indicates whether the task timed out.
         */
        isTimeoutFindingPresent: boolean;
        /**
         * The parsing schema of the object.
         */
        parsingSchema: string;
        /**
         * The per-execution percentage benefit.
         */
        perExecutionPercentage: number;
        /**
         * The unique key of this SQL statement.
         */
        sqlKey: string;
        /**
         * The text of the SQL statement.
         */
        sqlText: string;
        /**
         * The SQL tuning task identifier. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskId: string;
        /**
         * The execution id of the analyzed SQL object. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskObjectExecutionId: string;
        /**
         * The key of the object to which these recommendations apply. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskObjectId: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksRecommendationItem {
        /**
         * The percentage benefit of this implementation.
         */
        benefit: number;
        /**
         * Summary of the issue found in the SQL statement.
         */
        finding: string;
        /**
         * Action sql to be implemented based on the recommendation result.
         */
        implementActionSql: string;
        /**
         * Indicates whether a SQL Profile recommendation uses parallel execution.
         */
        isParallelExecution: boolean;
        /**
         * Describes the reasoning behind the recommendation and how it relates to the finding.
         */
        rationale: string;
        /**
         * The recommendation for a specific finding.
         */
        recommendation: string;
        /**
         * The unique identifier of the recommendation in the scope of the task.
         */
        recommendationKey: number;
        /**
         * Type of recommendation.
         */
        recommendationType: string;
        /**
         * The SQL tuning task identifier. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskId: string;
        /**
         * The key of the object to which these recommendations apply. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskObjectId: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsSqlTuningAdvisorTaskRecommendationCollection {
        /**
         * A list of SQL Tuning Advisor recommendations.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsSqlTuningAdvisorTaskRecommendationCollectionItem[];
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsSqlTuningAdvisorTaskRecommendationCollectionItem {
        /**
         * The percentage benefit of this implementation.
         */
        benefit: number;
        /**
         * Summary of the issue found in the SQL statement.
         */
        finding: string;
        /**
         * Action sql to be implemented based on the recommendation result.
         */
        implementActionSql: string;
        /**
         * Indicates whether a SQL Profile recommendation uses parallel execution.
         */
        isParallelExecution: boolean;
        /**
         * Describes the reasoning behind the recommendation and how it relates to the finding.
         */
        rationale: string;
        /**
         * The recommendation for a specific finding.
         */
        recommendation: string;
        /**
         * The unique identifier of the recommendation in the scope of the task.
         */
        recommendationKey: number;
        /**
         * Type of recommendation.
         */
        recommendationType: string;
        /**
         * The SQL tuning task identifier. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskId: string;
        /**
         * The key of the object to which these recommendations apply. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskObjectId: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan {
        /**
         * The predicates used to locate rows in an access structure. For example, start or stop predicates for an index range scan.
         */
        accessPredicates: string;
        /**
         * The attribute of the SQL execution plan.
         */
        attribute: string;
        /**
         * The number of bytes returned by the current operation.
         */
        bytes: string;
        /**
         * The number of rows returned by the current operation (estimated by the CBO).
         */
        cardinality: string;
        /**
         * The cost of the current operation estimated by the cost-based optimizer (CBO).
         */
        cost: number;
        /**
         * The CPU cost of the current operation.
         */
        cpuCost: number;
        /**
         * The predicates used to filter rows before producing them.
         */
        filterPredicates: string;
        /**
         * The I/O cost of the current operation.
         */
        ioCost: number;
        /**
         * Number of index columns with start and stop keys (that is, the number of columns with matching predicates).
         */
        numberOfSearchColumn: number;
        /**
         * The name of the object.
         */
        object: string;
        /**
         * The name of the database link used to reference the object.
         */
        objectNode: string;
        /**
         * The owner of the object.
         */
        objectOwner: string;
        /**
         * The numbered position of the object name in the original SQL statement.
         */
        objectPosition: number;
        /**
         * The descriptive modifier that further describes the type of object.
         */
        objectType: string;
        /**
         * The name of the operation performed at this step.
         */
        operation: string;
        /**
         * The current mode of the optimizer, such as all_rows, firstRowsN (where n = 1, 10, 100, 1000, and so on).
         */
        optimizerMode: string;
        /**
         * The options used for the operation performed at this step.
         */
        options: string;
        /**
         * Information about parallel execution servers and parallel queries
         */
        other: string;
        /**
         * Describes the function of the SQL text in the OTHER column.
         */
        otherTag: string;
        /**
         * The ID of the next step that operates on the results of this step. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        parentStepId: number;
        /**
         * The ID of the step in the execution plan that has computed the pair of values of partitionStart and partitionStop.
         */
        partitionId: number;
        /**
         * A step may get data from a range of partitions of a partitioned object, such as table or index, based on predicates and sorting order. The partionStart is the starting partition of the range. The partitionStop is the ending partition of the range.
         */
        partitionStart: string;
        /**
         * A step may get data from a range of partitions of a partitioned object, such as table or index, based on predicates and sorting order. The partionStart is the starting partition of the range. The partitionStop is the ending partition of the range.
         */
        partitionStop: string;
        /**
         * The numerical representation of the SQL execution plan.
         */
        planHashValue: string;
        /**
         * The order of processing for steps with the same parent ID.
         */
        position: number;
        /**
         * The place for comments that can be added to the steps of the execution plan.
         */
        remarks: string;
        /**
         * The identification number of a step in the SQL execution plan. This is unique within the SQL execution plan. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        stepId: number;
        /**
         * The temporary space usage (in bytes) of the operation (sort or hash-join) as estimated by the CBO.
         */
        tempSpace: string;
        /**
         * The elapsed time (in seconds) of the operation as estimated by the CBO.
         */
        time: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollection {
        /**
         * A list of SQL Tuning Advisor tasks.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollectionItem[];
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollectionItem {
        /**
         * The number of days left before the task expires. If the value equals -1, then the task has no expiration time (UNLIMITED).
         */
        daysToExpire: number;
        /**
         * The description of the SQL Tuning Advisor task.
         */
        description: string;
        /**
         * The instance ID of the SQL Tuning Advisor task. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        instanceId: number;
        /**
         * The optional query parameter to filter the SQL Tuning Advisor task list by name.
         */
        name: string;
        /**
         * The owner of the SQL Tuning Advisor task.
         */
        owner: string;
        /**
         * The number of recommendations provided for the SQL Tuning Advisor task.
         */
        recommendationCount: number;
        /**
         * The unique identifier of the SQL Tuning Advisor task. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        sqlTuningAdvisorTaskId: string;
        /**
         * The status of the SQL Tuning Advisor task.
         */
        taskStatus: string;
        /**
         * The Creation date of the SQL Tuning Advisor task.
         */
        timeCreated: string;
        /**
         * The end time of the task execution.
         */
        timeExecutionEnded: string;
        /**
         * The start time of the task execution.
         */
        timeExecutionStarted: string;
        /**
         * The total number of SQL statements related to the SQL Tuning Advisor task.
         */
        totalSqlStatements: number;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportIndexFinding {
        /**
         * Columns of the index.
         */
        indexColumns: string[];
        /**
         * Numerical representation of the index.
         */
        indexHashValue: string;
        /**
         * Name of the index.
         */
        indexName: string;
        /**
         * The number of the times the object is referenced within the SQL Tuning advisor task findings.
         */
        referenceCount: number;
        /**
         * Schema of the object.
         */
        schema: string;
        /**
         * Table's name related to the index.
         */
        tableName: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportObjectStatFinding {
        /**
         * Name of the object.
         */
        object: string;
        /**
         * Numerical representation of the object.
         */
        objectHashValue: string;
        /**
         * Type of the object.
         */
        objectType: string;
        /**
         * Type of statistics problem related to the object.
         */
        problemType: string;
        /**
         * The number of the times the object is referenced within the SQL Tuning advisor task findings.
         */
        referenceCount: number;
        /**
         * Schema of the object.
         */
        schema: string;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatistic {
        /**
         * The benefits of the findings in the SQL Tuning Advisor summary report.
         */
        findingBenefits: outputs.DatabaseManagement.GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit[];
        /**
         * The number of findings in the SQL Tuning Advisor summary report.
         */
        findingCounts: outputs.DatabaseManagement.GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount[];
        /**
         * The number of statements in the SQL Tuning Advisor summary report.
         */
        statementCounts: outputs.DatabaseManagement.GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticStatementCount[];
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit {
        /**
         * The actual database time of the SQL statements for which SQL Tuning Advisor recommendations are implemented.
         */
        dbTimeAfterImplemented: number;
        /**
         * The estimated database time of the above SQL statements, if SQL Tuning Advisor recommendations are implemented.
         */
        dbTimeAfterRecommended: number;
        /**
         * The actual database time of the above SQL statements, before SQL Tuning Advisor recommendations are implemented.
         */
        dbTimeBeforeImplemented: number;
        /**
         * The actual database time of the SQL statements for which SQL Tuning Advisor recommendations are not implemented.
         */
        dbTimeBeforeRecommended: number;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount {
        /**
         * The number of distinct SQL statements with alternative plan recommendations.
         */
        alternatePlan: number;
        /**
         * The number of distinct SQL statements with implemented SQL profiles.
         */
        implementedSqlProfile: number;
        /**
         * The number of distinct SQL statements with index recommendations.
         */
        index: number;
        /**
         * The number of distinct SQL statements with recommended SQL profiles.
         */
        recommendedSqlProfile: number;
        /**
         * The number of distinct SQL statements with restructured SQL recommendations.
         */
        restructure: number;
        /**
         * The number of distinct SQL statements with stale or missing optimizer statistics recommendations.
         */
        statistics: number;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticStatementCount {
        /**
         * The number of distinct SQL statements.
         */
        distinctSql: number;
        /**
         * The number of distinct SQL statements with errors.
         */
        errorCount: number;
        /**
         * The number of distinct SQL statements with findings.
         */
        findingCount: number;
        /**
         * The total number of SQL statements.
         */
        totalSql: number;
    }

    export interface GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportTaskInfo {
        /**
         * The description of the SQL Tuning Advisor task. This is not defined for Auto SQL Tuning tasks.
         */
        description: string;
        /**
         * The ID of the SQL Tuning Advisor task. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * The name of the SQL Tuning Advisor task.
         */
        name: string;
        /**
         * The owner of the SQL Tuning Advisor task.
         */
        owner: string;
        /**
         * The total running time in seconds. This is not defined for Auto SQL Tuning tasks.
         */
        runningTime: number;
        /**
         * The status of the SQL Tuning Advisor task. This is not defined for Auto SQL Tuning tasks.
         */
        status: string;
        /**
         * The end time of the task execution.
         */
        timeEnded: string;
        /**
         * The start time of the task execution.
         */
        timeStarted: string;
    }

    export interface GetManagedDatabaseSqlTuningSetItem {
        /**
         * The description of the SQL tuning set.
         */
        description: string;
        /**
         * The name of the SQL tuning set.
         */
        name: string;
        /**
         * The owner of the SQL tuning set.
         */
        owner: string;
        /**
         * The number of SQL statements in the SQL tuning set.
         */
        statementCounts: number;
    }

    export interface GetManagedDatabaseSqlTuningSetsFilter {
        /**
         * The name of the SQL tuning set.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseSqlTuningSetsSqlTuningSetCollection {
        /**
         * The details in the SQL tuning set summary.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseSqlTuningSetsSqlTuningSetCollectionItem[];
    }

    export interface GetManagedDatabaseSqlTuningSetsSqlTuningSetCollectionItem {
        /**
         * The description of the SQL tuning set.
         */
        description: string;
        /**
         * The name of the SQL tuning set.
         */
        name: string;
        /**
         * The owner of the SQL tuning set.
         */
        owner: string;
        /**
         * The number of SQL statements in the SQL tuning set.
         */
        statementCounts: number;
    }

    export interface GetManagedDatabaseTableStatisticsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseTableStatisticsTableStatisticsCollection {
        /**
         * The list of table statistics statuses.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseTableStatisticsTableStatisticsCollectionItem[];
    }

    export interface GetManagedDatabaseTableStatisticsTableStatisticsCollectionItem {
        /**
         * The number of objects aggregated by status category.
         */
        count: number;
        /**
         * The percentage of objects with a particular status.
         */
        percentage: number;
        /**
         * The valid status categories of table statistics.
         */
        type: string;
    }

    export interface GetManagedDatabaseUserConsumerGroupPrivilegeItem {
        /**
         * Indicates whether the privilege is granted with the GRANT option (YES) or not (NO).
         */
        grantOption: string;
        /**
         * Indicates whether the consumer group is designated as the default for this user or role (YES) or not (NO).
         */
        initialGroup: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabaseUserConsumerGroupPrivilegesConsumerGroupPrivilegeCollection {
        /**
         * An array of consumer group privileges.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseUserConsumerGroupPrivilegesConsumerGroupPrivilegeCollectionItem[];
    }

    export interface GetManagedDatabaseUserConsumerGroupPrivilegesConsumerGroupPrivilegeCollectionItem {
        /**
         * Indicates whether the privilege is granted with the GRANT option (YES) or not (NO).
         */
        grantOption: string;
        /**
         * Indicates whether the consumer group is designated as the default for this user or role (YES) or not (NO).
         */
        initialGroup: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabaseUserConsumerGroupPrivilegesFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseUserDataAccessContainerItem {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabaseUserDataAccessContainersDataAccessContainerCollection {
        /**
         * An array of container resources.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseUserDataAccessContainersDataAccessContainerCollectionItem[];
    }

    export interface GetManagedDatabaseUserDataAccessContainersDataAccessContainerCollectionItem {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabaseUserDataAccessContainersFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseUserObjectPrivilegeItem {
        /**
         * Indicates how the object privilege was granted. Possible values: YES if the role is granted commonly (CONTAINER=ALL is used) NO if the role is granted locally (CONTAINER=ALL is not used)
         */
        common: string;
        /**
         * Indicates whether the privilege is granted with the GRANT OPTION (YES) or not (NO).
         */
        grantOption: string;
        /**
         * The name of the user who granted the object privilege.
         */
        grantor: string;
        /**
         * Indicates whether the privilege is granted with the HIERARCHY OPTION (YES) or not (NO).
         */
        hierarchy: string;
        /**
         * Indicates whether the granted privilege is inherited from another container (YES) or not (NO).
         */
        inherited: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        /**
         * The name of the object. The object can be any object, including tables, packages, indexes, sequences, and so on.
         */
        object: string;
        /**
         * The owner of the object.
         */
        owner: string;
        /**
         * The type of object.
         */
        schemaType: string;
    }

    export interface GetManagedDatabaseUserObjectPrivilegesFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseUserObjectPrivilegesObjectPrivilegeCollection {
        /**
         * An array of object privileges.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseUserObjectPrivilegesObjectPrivilegeCollectionItem[];
    }

    export interface GetManagedDatabaseUserObjectPrivilegesObjectPrivilegeCollectionItem {
        /**
         * Indicates how the object privilege was granted. Possible values: YES if the role is granted commonly (CONTAINER=ALL is used) NO if the role is granted locally (CONTAINER=ALL is not used)
         */
        common: string;
        /**
         * Indicates whether the privilege is granted with the GRANT OPTION (YES) or not (NO).
         */
        grantOption: string;
        /**
         * The name of the user who granted the object privilege.
         */
        grantor: string;
        /**
         * Indicates whether the privilege is granted with the HIERARCHY OPTION (YES) or not (NO).
         */
        hierarchy: string;
        /**
         * Indicates whether the granted privilege is inherited from another container (YES) or not (NO).
         */
        inherited: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        /**
         * The name of the object. The object can be any object, including tables, packages, indexes, sequences, and so on.
         */
        object: string;
        /**
         * The owner of the object.
         */
        owner: string;
        /**
         * The type of object.
         */
        schemaType: string;
    }

    export interface GetManagedDatabaseUserProxiedForUserItem {
        /**
         * Indicates whether the proxy is required to supply the client credentials (YES) or not (NO).
         */
        authentication: string;
        /**
         * The flags associated with the proxy/client pair.
         */
        flags: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabaseUserProxiedForUsersFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseUserProxiedForUsersProxiedForUserCollection {
        /**
         * An array of user resources.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseUserProxiedForUsersProxiedForUserCollectionItem[];
    }

    export interface GetManagedDatabaseUserProxiedForUsersProxiedForUserCollectionItem {
        /**
         * Indicates whether the proxy is required to supply the client credentials (YES) or not (NO).
         */
        authentication: string;
        /**
         * The flags associated with the proxy/client pair.
         */
        flags: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabaseUserRoleItem {
        /**
         * Indicates whether the role is granted with the ADMIN OPTION (YES) or not (NO).
         */
        adminOption: string;
        /**
         * Indicates how the role was granted. Possible values: YES if the role is granted commonly (CONTAINER=ALL is used) NO if the role is granted locally (CONTAINER=ALL is not used)
         */
        common: string;
        /**
         * Indicates whether the role is designated as a DEFAULT ROLE for the user (YES) or not (NO).
         */
        defaultRole: string;
        /**
         * Indicates whether the role is granted with the DELEGATE OPTION (YES) or not (NO).
         */
        delegateOption: string;
        /**
         * Indicates whether the granted role is inherited from another container (YES) or not (NO).
         */
        inherited: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabaseUserRolesFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseUserRolesRoleCollection {
        /**
         * An array of roles.
         */
        items: outputs.DatabaseManagement.GetManagedDatabaseUserRolesRoleCollectionItem[];
    }

    export interface GetManagedDatabaseUserRolesRoleCollectionItem {
        /**
         * Indicates whether the role is granted with the ADMIN OPTION (YES) or not (NO).
         */
        adminOption: string;
        /**
         * Indicates how the role was granted. Possible values: YES if the role is granted commonly (CONTAINER=ALL is used) NO if the role is granted locally (CONTAINER=ALL is not used)
         */
        common: string;
        /**
         * Indicates whether the role is designated as a DEFAULT ROLE for the user (YES) or not (NO).
         */
        defaultRole: string;
        /**
         * Indicates whether the role is granted with the DELEGATE OPTION (YES) or not (NO).
         */
        delegateOption: string;
        /**
         * Indicates whether the granted role is inherited from another container (YES) or not (NO).
         */
        inherited: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabaseUsersFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabaseUsersUserCollection {
        items: outputs.DatabaseManagement.GetManagedDatabaseUsersUserCollectionItem[];
    }

    export interface GetManagedDatabaseUsersUserCollectionItem {
        /**
         * In a sharded database, indicates whether the user is created with shard DDL enabled (YES) or not (NO).
         */
        allShared: string;
        /**
         * The authentication mechanism for the user.
         */
        authentication: string;
        /**
         * Indicates whether a given user is common(Y) or local(N).
         */
        common: string;
        /**
         * The initial resource consumer group for the User.
         */
        consumerGroup: string;
        /**
         * The default collation for the user schema.
         */
        defaultCollation: string;
        /**
         * The default tablespace for data.
         */
        defaultTablespace: string;
        /**
         * Indicates whether editions have been enabled for the corresponding user (Y) or not (N).
         */
        editionsEnabled: string;
        /**
         * The external name of the user.
         */
        externalName: string;
        /**
         * In a federated sharded database, indicates whether the user is an external shard user (YES) or not (NO).
         */
        externalShared: string;
        /**
         * Indicates whether the user is a common user created by an implicit application (YES) or not (NO).
         */
        implicit: string;
        /**
         * Indicates whether the user definition is inherited from another container (YES) or not (NO).
         */
        inherited: string;
        /**
         * The default local temporary tablespace for the user.
         */
        localTempTablespace: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        /**
         * Indicates whether the user was created and is maintained by Oracle-supplied scripts (such as catalog.sql or catproc.sql).
         */
        oracleMaintained: string;
        /**
         * The list of existing versions of the password hashes (also known as "verifiers") for the account.
         */
        passwordVersions: string;
        /**
         * The profile name of the user.
         */
        profile: string;
        /**
         * Indicates whether a user can connect directly (N) or whether the account can only be proxied (Y) by users who have proxy privileges for this account (that is, by users who have been granted the "connect through" privilege for this account).
         */
        proxyConnect: string;
        /**
         * The status of the user account.
         */
        status: string;
        /**
         * The name of the default tablespace for temporary tables or the name of a tablespace group.
         */
        tempTablespace: string;
        /**
         * The date and time the user was created.
         */
        timeCreated: string;
        /**
         * The date and time of the expiration of the user account.
         */
        timeExpiring: string;
        /**
         * The date and time of the last user login. This column is not populated when a user connects to the database with administrative privileges, that is, AS { SYSASM | SYSBACKUP | SYSDBA | SYSDG | SYSOPER | SYSRAC | SYSKM }.
         */
        timeLastLogin: string;
        /**
         * The date the account was locked, if the status of the account is LOCKED.
         */
        timeLocked: string;
        /**
         * The date and time when the user password was last set. This column is populated only when the value of the AUTHENTICATION_TYPE column is PASSWORD. Otherwise, this column is null.
         */
        timePasswordChanged: string;
    }

    export interface GetManagedDatabasesAsmPropertiesAsmPropertyCollection {
        /**
         * An array of AsmPropertySummary resources.
         */
        items: outputs.DatabaseManagement.GetManagedDatabasesAsmPropertiesAsmPropertyCollectionItem[];
    }

    export interface GetManagedDatabasesAsmPropertiesAsmPropertyCollectionItem {
        /**
         * The name of the disk group.
         */
        diskGroup: string;
    }

    export interface GetManagedDatabasesAsmPropertiesFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabasesAsmPropertyItem {
        /**
         * The name of the disk group.
         */
        diskGroup: string;
    }

    export interface GetManagedDatabasesDatabaseParameterItem {
        /**
         * A list of allowed values for this parameter.
         */
        allowedValues: outputs.DatabaseManagement.GetManagedDatabasesDatabaseParameterItemAllowedValue[];
        /**
         * The parameter category.
         */
        category: string;
        /**
         * Applicable in case of Oracle Real Application Clusters (Oracle RAC) databases. A `UNIQUE` parameter is one which is unique to each Oracle Real Application Clusters (Oracle RAC) instance. For example, the parameter `INSTANCE_NUMBER` must have different values in each instance. An `IDENTICAL` parameter must have the same value for every instance. For example, the parameter `DB_BLOCK_SIZE` must have the same value in all instances.
         */
        constraint: string;
        /**
         * The ID of the database container to which the data pertains. Possible values include:
         * * `0`: This value is used for data that pertain to the entire CDB. This value is also used for data in non-CDBs.
         * * `1`: This value is used for data that pertain to only the root container.
         * * `n`: Where n is the applicable container ID for the data.
         */
        containerId: number;
        /**
         * The description of the parameter.
         */
        description: string;
        /**
         * The parameter value in a user-friendly format. For example, if the `value` property shows the value 262144 for a big integer parameter, then the `displayValue` property will show the value 256K.
         */
        displayValue: string;
        /**
         * Indicates whether Oracle adjusted the input value to a more suitable value.
         */
        isAdjusted: boolean;
        /**
         * Indicates whether the parameter is a basic parameter (`TRUE`) or not (`FALSE`).
         */
        isBasic: boolean;
        /**
         * Indicates whether the parameter is set to the default value (`TRUE`) or the parameter value was specified in the parameter file (`FALSE`).
         */
        isDefault: boolean;
        /**
         * Indicates whether the parameter has been deprecated (`TRUE`) or not (`FALSE`).
         */
        isDeprecated: boolean;
        /**
         * For parameters that can be changed with `ALTER SYSTEM`, indicates whether the value of the parameter can be different for every instance (`TRUE`) or whether the parameter must have the same value for all Real Application Clusters instances (`FALSE`). For other parameters, this is always `FALSE`.
         */
        isInstanceModifiable: boolean;
        /**
         * Indicates how the parameter was modified. If an `ALTER SYSTEM` was performed, the value will be `MODIFIED`.
         */
        isModified: string;
        /**
         * Indicates whether the parameter can be modified on a per-PDB basis (`TRUE`) or not (`FALSE`). In a non-CDB, the value of this property is `null`.
         */
        isPdbModifiable: boolean;
        /**
         * Indicates whether the parameter can be changed with `ALTER SESSION` (`TRUE`) or not (`FALSE`)
         */
        isSessionModifiable: boolean;
        /**
         * Indicates whether the parameter was specified in the server parameter file (`TRUE`) or not (`FALSE`). Applicable only when the parameter source is `SPFILE`.
         */
        isSpecified: boolean;
        /**
         * Indicates whether the parameter can be changed with `ALTER SYSTEM` and when the change takes effect:
         * * IMMEDIATE: Parameter can be changed with `ALTER SYSTEM` regardless of the type of parameter file used to start the instance. The change takes effect immediately.
         * * DEFERRED: Parameter can be changed with `ALTER SYSTEM` regardless of the type of parameter file used to start the instance. The change takes effect in subsequent sessions.
         * * FALSE: Parameter cannot be changed with `ALTER SYSTEM` unless a server parameter file was used to start the instance. The change takes effect in subsequent instances.
         */
        isSystemModifiable: string;
        /**
         * A filter to return all parameters that have the text given in their names.
         */
        name: string;
        /**
         * The parameter number.
         */
        number: number;
        /**
         * The position (ordinal number) of the parameter value. Useful only for parameters whose values are lists of strings.
         */
        ordinal: number;
        /**
         * The database instance SID for which the parameter is defined.
         */
        sid: string;
        /**
         * The parameter type.
         */
        type: string;
        /**
         * The comments associated with the most recent update.
         */
        updateComment: string;
        /**
         * The parameter value.
         */
        value: string;
    }

    export interface GetManagedDatabasesDatabaseParameterItemAllowedValue {
        /**
         * Indicates whether the parameter is set to the default value (`TRUE`) or the parameter value was specified in the parameter file (`FALSE`).
         */
        isDefault: boolean;
        /**
         * The position (ordinal number) of the parameter value. Useful only for parameters whose values are lists of strings.
         */
        ordinal: number;
        /**
         * The parameter value.
         */
        value: string;
    }

    export interface GetManagedDatabasesDatabaseParametersDatabaseParametersCollection {
        /**
         * The name of the Managed Database.
         */
        databaseName: string;
        /**
         * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, or a Non-container Database.
         */
        databaseSubType: string;
        /**
         * The type of Oracle Database installation.
         */
        databaseType: string;
        /**
         * The Oracle Database version.
         */
        databaseVersion: string;
        /**
         * An array of DatabaseParameterSummary objects.
         */
        items: outputs.DatabaseManagement.GetManagedDatabasesDatabaseParametersDatabaseParametersCollectionItem[];
    }

    export interface GetManagedDatabasesDatabaseParametersDatabaseParametersCollectionItem {
        /**
         * A list of allowed values for this parameter.
         */
        allowedValues: outputs.DatabaseManagement.GetManagedDatabasesDatabaseParametersDatabaseParametersCollectionItemAllowedValue[];
        /**
         * The parameter category.
         */
        category: string;
        /**
         * Applicable in case of Oracle Real Application Clusters (Oracle RAC) databases. A `UNIQUE` parameter is one which is unique to each Oracle Real Application Clusters (Oracle RAC) instance. For example, the parameter `INSTANCE_NUMBER` must have different values in each instance. An `IDENTICAL` parameter must have the same value for every instance. For example, the parameter `DB_BLOCK_SIZE` must have the same value in all instances.
         */
        constraint: string;
        /**
         * The ID of the database container to which the data pertains. Possible values include:
         * * `0`: This value is used for data that pertain to the entire CDB. This value is also used for data in non-CDBs.
         * * `1`: This value is used for data that pertain to only the root container.
         * * `n`: Where n is the applicable container ID for the data.
         */
        containerId: number;
        /**
         * The description of the parameter.
         */
        description: string;
        /**
         * The parameter value in a user-friendly format. For example, if the `value` property shows the value 262144 for a big integer parameter, then the `displayValue` property will show the value 256K.
         */
        displayValue: string;
        /**
         * Indicates whether Oracle adjusted the input value to a more suitable value.
         */
        isAdjusted: boolean;
        /**
         * Indicates whether the parameter is a basic parameter (`TRUE`) or not (`FALSE`).
         */
        isBasic: boolean;
        /**
         * Indicates whether the parameter is set to the default value (`TRUE`) or the parameter value was specified in the parameter file (`FALSE`).
         */
        isDefault: boolean;
        /**
         * Indicates whether the parameter has been deprecated (`TRUE`) or not (`FALSE`).
         */
        isDeprecated: boolean;
        /**
         * For parameters that can be changed with `ALTER SYSTEM`, indicates whether the value of the parameter can be different for every instance (`TRUE`) or whether the parameter must have the same value for all Real Application Clusters instances (`FALSE`). For other parameters, this is always `FALSE`.
         */
        isInstanceModifiable: boolean;
        /**
         * Indicates how the parameter was modified. If an `ALTER SYSTEM` was performed, the value will be `MODIFIED`.
         */
        isModified: string;
        /**
         * Indicates whether the parameter can be modified on a per-PDB basis (`TRUE`) or not (`FALSE`). In a non-CDB, the value of this property is `null`.
         */
        isPdbModifiable: boolean;
        /**
         * Indicates whether the parameter can be changed with `ALTER SESSION` (`TRUE`) or not (`FALSE`)
         */
        isSessionModifiable: boolean;
        /**
         * Indicates whether the parameter was specified in the server parameter file (`TRUE`) or not (`FALSE`). Applicable only when the parameter source is `SPFILE`.
         */
        isSpecified: boolean;
        /**
         * Indicates whether the parameter can be changed with `ALTER SYSTEM` and when the change takes effect:
         * * IMMEDIATE: Parameter can be changed with `ALTER SYSTEM` regardless of the type of parameter file used to start the instance. The change takes effect immediately.
         * * DEFERRED: Parameter can be changed with `ALTER SYSTEM` regardless of the type of parameter file used to start the instance. The change takes effect in subsequent sessions.
         * * FALSE: Parameter cannot be changed with `ALTER SYSTEM` unless a server parameter file was used to start the instance. The change takes effect in subsequent instances.
         */
        isSystemModifiable: string;
        /**
         * A filter to return all parameters that have the text given in their names.
         */
        name: string;
        /**
         * The parameter number.
         */
        number: number;
        /**
         * The position (ordinal number) of the parameter value. Useful only for parameters whose values are lists of strings.
         */
        ordinal: number;
        /**
         * The database instance SID for which the parameter is defined.
         */
        sid: string;
        /**
         * The parameter type.
         */
        type: string;
        /**
         * The comments associated with the most recent update.
         */
        updateComment: string;
        /**
         * The parameter value.
         */
        value: string;
    }

    export interface GetManagedDatabasesDatabaseParametersDatabaseParametersCollectionItemAllowedValue {
        /**
         * Indicates whether the parameter is set to the default value (`TRUE`) or the parameter value was specified in the parameter file (`FALSE`).
         */
        isDefault: boolean;
        /**
         * The position (ordinal number) of the parameter value. Useful only for parameters whose values are lists of strings.
         */
        ordinal: number;
        /**
         * The parameter value.
         */
        value: string;
    }

    export interface GetManagedDatabasesDatabaseParametersFilter {
        /**
         * A filter to return all parameters that have the text given in their names.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabasesFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabasesManagedDatabaseCollection {
        items: outputs.DatabaseManagement.GetManagedDatabasesManagedDatabaseCollectionItem[];
    }

    export interface GetManagedDatabasesManagedDatabaseCollectionItem {
        /**
         * The additional details specific to a type of database defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
         */
        additionalDetails: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The status of the Oracle Database. Indicates whether the status of the database is UP, DOWN, or UNKNOWN at the current time.
         */
        databaseStatus: string;
        /**
         * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         */
        databaseSubType: string;
        /**
         * The type of Oracle Database installation.
         */
        databaseType: string;
        /**
         * A filter to return Managed Databases of the specified deployment type.
         */
        deploymentType: string;
        /**
         * The identifier of the resource.
         */
        id: string;
        /**
         * Indicates whether the Oracle Database is part of a cluster.
         */
        isCluster: boolean;
        /**
         * A list of Managed Database Groups that the Managed Database belongs to.
         */
        managedDatabaseGroups: outputs.DatabaseManagement.GetManagedDatabasesManagedDatabaseCollectionItemManagedDatabaseGroup[];
        /**
         * A filter to return Managed Databases with the specified management option.
         */
        managementOption: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent Container Database if Managed Database is a Pluggable Database.
         */
        parentContainerId: string;
        /**
         * The date and time the Managed Database was created.
         */
        timeCreated: string;
        /**
         * The workload type of the Autonomous Database.
         */
        workloadType: string;
    }

    export interface GetManagedDatabasesManagedDatabaseCollectionItemManagedDatabaseGroup {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The identifier of the resource.
         */
        id: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabasesUserProxyUserItem {
        /**
         * Indicates whether the proxy is required to supply the client credentials (YES) or not (NO).
         */
        authentication: string;
        /**
         * The flags associated with the proxy/client pair.
         */
        flags: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabasesUserProxyUsersFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabasesUserProxyUsersProxyUserCollection {
        /**
         * An array of user resources.
         */
        items: outputs.DatabaseManagement.GetManagedDatabasesUserProxyUsersProxyUserCollectionItem[];
    }

    export interface GetManagedDatabasesUserProxyUsersProxyUserCollectionItem {
        /**
         * Indicates whether the proxy is required to supply the client credentials (YES) or not (NO).
         */
        authentication: string;
        /**
         * The flags associated with the proxy/client pair.
         */
        flags: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabasesUserSystemPrivilegeItem {
        /**
         * Indicates whether the system privilege is granted with the ADMIN option (YES) or not (NO).
         */
        adminOption: string;
        /**
         * Indicates how the system privilege was granted. Possible values: YES if the system privilege is granted commonly (CONTAINER=ALL is used) NO if the system privilege is granted locally (CONTAINER=ALL is not used)
         */
        common: string;
        /**
         * Indicates whether the granted system privilege is inherited from another container (YES) or not (NO).
         */
        inherited: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface GetManagedDatabasesUserSystemPrivilegesFilter {
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedDatabasesUserSystemPrivilegesSystemPrivilegeCollection {
        /**
         * An array of system privileges.
         */
        items: outputs.DatabaseManagement.GetManagedDatabasesUserSystemPrivilegesSystemPrivilegeCollectionItem[];
    }

    export interface GetManagedDatabasesUserSystemPrivilegesSystemPrivilegeCollectionItem {
        /**
         * Indicates whether the system privilege is granted with the ADMIN option (YES) or not (NO).
         */
        adminOption: string;
        /**
         * Indicates how the system privilege was granted. Possible values: YES if the system privilege is granted commonly (CONTAINER=ALL is used) NO if the system privilege is granted locally (CONTAINER=ALL is not used)
         */
        common: string;
        /**
         * Indicates whether the granted system privilege is inherited from another container (YES) or not (NO).
         */
        inherited: string;
        /**
         * A filter to return only resources that match the entire name.
         */
        name: string;
    }

    export interface ManagedDatabaseGroupManagedDatabase {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
         */
        compartmentId: string;
        /**
         * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         */
        databaseSubType: string;
        /**
         * The type of Oracle Database installation.
         */
        databaseType: string;
        /**
         * The infrastructure used to deploy the Oracle Database.
         */
        deploymentType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed database that needs to be added to the Managed Database Group.
         */
        id: string;
        /**
         * The name of the Managed Database Group. Valid characters are uppercase or lowercase letters, numbers, and "_". The name of the Managed Database Group cannot be modified. It must be unique in the compartment and must begin with an alphabetic character.
         */
        name: string;
        /**
         * The date and time the Managed Database was added to the group.
         */
        timeAdded: string;
        /**
         * The workload type of the Autonomous Database.
         */
        workloadType: string;
    }

    export interface ManagedDatabasesChangeDatabaseParameterCredentials {
        /**
         * The password for the database user name.
         */
        password: string;
        /**
         * The role of the database user. Indicates whether the database user is a normal user or sysdba.
         */
        role: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * The database user name used to perform management activity.
         */
        userName: string;
    }

    export interface ManagedDatabasesChangeDatabaseParameterParameter {
        /**
         * The parameter name.
         */
        name: string;
        /**
         * A comment string to associate with the change in parameter value. It cannot contain control characters or a line break.
         */
        updateComment: string;
        /**
         * The parameter value.
         */
        value: string;
    }

    export interface ManagedDatabasesResetDatabaseParameterCredentials {
        /**
         * The password for the database user name.
         */
        password: string;
        /**
         * The role of the database user. Indicates whether the database user is a normal user or sysdba.
         */
        role: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * The database user name used to perform management activity.
         */
        userName: string;
    }

}

export namespace DatabaseMigration {
    export interface ConnectionAdminCredentials {
        /**
         * (Updatable) Administrator password
         */
        password: string;
        /**
         * (Updatable) Administrator username
         */
        username: string;
    }

    export interface ConnectionConnectDescriptor {
        /**
         * (Updatable) Connect String. Required if no host, port nor databaseServiceName were specified. If a Private Endpoint was specified in the Connection, the host entry should be a valid IP address. Supported formats: Easy connect: <host>:<port>/<db_service_name> Long format: (description= (address=(port=<port>)(host=<host>))(connect_data=(service_name=<db_service_name>)))
         */
        connectString: string;
        /**
         * (Updatable) Database service name. Required if no connectString was specified.
         */
        databaseServiceName: string;
        /**
         * (Updatable) Name of the host the SSH key is valid for.
         */
        host: string;
        /**
         * (Updatable) Port of the connect descriptor. Required if no connectString was specified.
         */
        port: number;
    }

    export interface ConnectionPrivateEndpoint {
        /**
         * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
         */
        compartmentId: string;
        /**
         * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a previously created Private Endpoint.
         */
        id: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer's subnet where the private endpoint VNIC will reside.
         */
        subnetId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN where the Private Endpoint will be bound to.
         */
        vcnId: string;
    }

    export interface ConnectionSshDetails {
        /**
         * (Updatable) Name of the host the SSH key is valid for.
         */
        host: string;
        /**
         * (Updatable) Private SSH key string.
         */
        sshkey: string;
        /**
         * (Updatable) Sudo location
         */
        sudoLocation: string;
        /**
         * (Updatable) SSH user
         */
        user: string;
    }

    export interface ConnectionVaultDetails {
        /**
         * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
         */
        compartmentId: string;
        /**
         * (Updatable) OCID of the vault encryption key
         */
        keyId: string;
        /**
         * (Updatable) OCID of the vault
         */
        vaultId: string;
    }

    export interface GetAgentImagesAgentImageCollection {
        /**
         * Items in collection.
         */
        items: outputs.DatabaseMigration.GetAgentImagesAgentImageCollectionItem[];
    }

    export interface GetAgentImagesAgentImageCollectionItem {
        /**
         * URL to download Agent Image of the ODMS Agent.
         */
        downloadUrl: string;
        /**
         * ODMS Agent Image version.
         */
        version: string;
    }

    export interface GetAgentImagesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAgentsAgentCollection {
        items: outputs.DatabaseMigration.GetAgentsAgentCollectionItem[];
    }

    export interface GetAgentsAgentCollectionItem {
        agentId: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the resource
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * ODMS Agent public key.
         */
        publicKey: string;
        /**
         * The current state of the Database Migration Deployment.
         */
        state: string;
        /**
         * The OCID of the Stream
         */
        streamId: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the Agent was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time of the last Agent details update. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * ODMS Agent version
         */
        version: string;
    }

    export interface GetAgentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetConnectionAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetConnectionConnectDescriptor {
        /**
         * Connect string.
         */
        connectString: string;
        /**
         * Database service name.
         */
        databaseServiceName: string;
        /**
         * Name of the host the SSH key is valid for.
         */
        host: string;
        /**
         * Port of the connect descriptor.
         */
        port: number;
    }

    export interface GetConnectionPrivateEndpoint {
        /**
         * OCID of the compartment where the secret containing the credentials will be created.
         */
        compartmentId: string;
        /**
         * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a previously created Private Endpoint.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer's subnet where the private endpoint VNIC will reside.
         */
        subnetId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN where the Private Endpoint will be bound to.
         */
        vcnId: string;
    }

    export interface GetConnectionSshDetail {
        /**
         * Name of the host the SSH key is valid for.
         */
        host: string;
        sshkey: string;
        /**
         * Sudo location
         */
        sudoLocation: string;
        /**
         * SSH user
         */
        user: string;
    }

    export interface GetConnectionVaultDetail {
        /**
         * OCID of the compartment where the secret containing the credentials will be created.
         */
        compartmentId: string;
        /**
         * OCID of the vault encryption key
         */
        keyId: string;
        /**
         * OCID of the vault
         */
        vaultId: string;
    }

    export interface GetConnectionsConnectionCollection {
        items: outputs.DatabaseMigration.GetConnectionsConnectionCollectionItem[];
    }

    export interface GetConnectionsConnectionCollectionItem {
        /**
         * Database Administrator Credentials details.
         */
        adminCredentials: outputs.DatabaseMigration.GetConnectionsConnectionCollectionItemAdminCredential[];
        /**
         * This name is the distinguished name used while creating the certificate on target database.
         */
        certificateTdn: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Connect Descriptor details.
         */
        connectDescriptors: outputs.DatabaseMigration.GetConnectionsConnectionCollectionItemConnectDescriptor[];
        /**
         * OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
         */
        credentialsSecretId: string;
        /**
         * The OCID of the cloud database.
         */
        databaseId: string;
        /**
         * Database connection type.
         */
        databaseType: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a previously created Private Endpoint.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Oracle Cloud Infrastructure Private Endpoint configuration details.
         */
        privateEndpoints: outputs.DatabaseMigration.GetConnectionsConnectionCollectionItemPrivateEndpoint[];
        /**
         * Details of the SSH key that will be used.
         */
        sshDetails: outputs.DatabaseMigration.GetConnectionsConnectionCollectionItemSshDetail[];
        /**
         * The current state of the Database Migration Deployment.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the Connection resource was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time of the last Connection resource details update. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        tlsKeystore: string;
        tlsWallet: string;
        /**
         * Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
         */
        vaultDetails: outputs.DatabaseMigration.GetConnectionsConnectionCollectionItemVaultDetail[];
    }

    export interface GetConnectionsConnectionCollectionItemAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetConnectionsConnectionCollectionItemConnectDescriptor {
        /**
         * Connect string.
         */
        connectString: string;
        /**
         * Database service name.
         */
        databaseServiceName: string;
        /**
         * Name of the host the SSH key is valid for.
         */
        host: string;
        /**
         * Port of the connect descriptor.
         */
        port: number;
    }

    export interface GetConnectionsConnectionCollectionItemPrivateEndpoint {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a previously created Private Endpoint.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer's subnet where the private endpoint VNIC will reside.
         */
        subnetId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN where the Private Endpoint will be bound to.
         */
        vcnId: string;
    }

    export interface GetConnectionsConnectionCollectionItemSshDetail {
        /**
         * Name of the host the SSH key is valid for.
         */
        host: string;
        sshkey: string;
        /**
         * Sudo location
         */
        sudoLocation: string;
        /**
         * SSH user
         */
        user: string;
    }

    export interface GetConnectionsConnectionCollectionItemVaultDetail {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * OCID of the vault encryption key
         */
        keyId: string;
        /**
         * OCID of the vault
         */
        vaultId: string;
    }

    export interface GetConnectionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetJobAdvisorReportReportLocationDetail {
        /**
         * Path in the Source Registered Connection where the Pre-Migration advisor report can be accessed.
         */
        locationInSource: string;
        /**
         * Details to access Pre-Migration Advisor report in the specified Object Storage bucket, if any.
         */
        objectStorageDetails: outputs.DatabaseMigration.GetJobAdvisorReportReportLocationDetailObjectStorageDetail[];
    }

    export interface GetJobAdvisorReportReportLocationDetailObjectStorageDetail {
        /**
         * Name of the bucket containing the Pre-Migration Advisor report.
         */
        bucket: string;
        /**
         * Object Storage namespace.
         */
        namespace: string;
        /**
         * Pre-Migration Advisor report object name.
         */
        object: string;
    }

    export interface GetJobOutputItem {
        /**
         * Job output line.
         */
        message: string;
    }

    export interface GetMigrationAdvisorSetting {
        /**
         * True to not interrupt migration execution due to Pre-Migration Advisor errors. Default is false.
         */
        isIgnoreErrors: boolean;
        /**
         * True to skip the Pre-Migration Advisor execution. Default is false.
         */
        isSkipAdvisor: boolean;
    }

    export interface GetMigrationDataTransferMediumDetail {
        /**
         * Optional details for creating a network database link from Oracle Cloud Infrastructure database to on-premise database.
         */
        databaseLinkDetails: outputs.DatabaseMigration.GetMigrationDataTransferMediumDetailDatabaseLinkDetail[];
        /**
         * In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
         */
        objectStorageDetails: outputs.DatabaseMigration.GetMigrationDataTransferMediumDetailObjectStorageDetail[];
    }

    export interface GetMigrationDataTransferMediumDetailDatabaseLinkDetail {
        /**
         * Name of directory object in database
         */
        name: string;
        /**
         * In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
         */
        walletBuckets: outputs.DatabaseMigration.GetMigrationDataTransferMediumDetailDatabaseLinkDetailWalletBucket[];
    }

    export interface GetMigrationDataTransferMediumDetailDatabaseLinkDetailWalletBucket {
        /**
         * Bucket name.
         */
        bucket: string;
        /**
         * Namespace name of the object store bucket.
         */
        namespace: string;
    }

    export interface GetMigrationDataTransferMediumDetailObjectStorageDetail {
        /**
         * Bucket name.
         */
        bucket: string;
        /**
         * Namespace name of the object store bucket.
         */
        namespace: string;
    }

    export interface GetMigrationDatapumpSetting {
        /**
         * Optional parameters for Data Pump Export and Import. Refer to [Configuring Optional Initial Load Advanced Settings](https://docs.us.oracle.com/en/cloud/paas/database-migration/dmsus/working-migration-resources.html#GUID-24BD3054-FDF8-48FF-8492-636C1D4B71ED)
         */
        dataPumpParameters: outputs.DatabaseMigration.GetMigrationDatapumpSettingDataPumpParameter[];
        /**
         * Directory object details, used to define either import or export directory objects in Data Pump Settings.
         */
        exportDirectoryObjects: outputs.DatabaseMigration.GetMigrationDatapumpSettingExportDirectoryObject[];
        /**
         * Directory object details, used to define either import or export directory objects in Data Pump Settings.
         */
        importDirectoryObjects: outputs.DatabaseMigration.GetMigrationDatapumpSettingImportDirectoryObject[];
        /**
         * Data Pump job mode. Refer to [Data Pump Export Modes ](https://docs.oracle.com/en/database/oracle/oracle-database/19/sutil/oracle-data-pump-export-utility.html#GUID-8E497131-6B9B-4CC8-AA50-35F480CAC2C4)
         */
        jobMode: string;
        /**
         * Defines remapping to be applied to objects as they are processed. Refer to [METADATA_REMAP Procedure ](https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/DBMS_DATAPUMP.html#GUID-0FC32790-91E6-4781-87A3-229DE024CB3D)
         */
        metadataRemaps: outputs.DatabaseMigration.GetMigrationDatapumpSettingMetadataRemap[];
    }

    export interface GetMigrationDatapumpSettingDataPumpParameter {
        /**
         * Estimate size of dumps that will be generated.
         */
        estimate: string;
        /**
         * Exclude paratemers for Export and Import.
         */
        excludeParameters: string[];
        /**
         * Maximum number of worker processes that can be used for a Data Pump Export job.
         */
        exportParallelismDegree: number;
        /**
         * Maximum number of worker processes that can be used for a Data Pump Import job. For an Autonomous Database, ODMS will automatically query its CPU core count and set this property.
         */
        importParallelismDegree: number;
        /**
         * Set to false to force Data Pump worker processes to run on one instance.
         */
        isCluster: boolean;
        /**
         * IMPORT: Specifies the action to be performed when data is loaded into a preexisting table.
         */
        tableExistsAction: string;
    }

    export interface GetMigrationDatapumpSettingExportDirectoryObject {
        /**
         * Name of directory object in database
         */
        name: string;
        /**
         * Absolute path of directory on database server
         */
        path: string;
    }

    export interface GetMigrationDatapumpSettingImportDirectoryObject {
        /**
         * Name of directory object in database
         */
        name: string;
        /**
         * Absolute path of directory on database server
         */
        path: string;
    }

    export interface GetMigrationDatapumpSettingMetadataRemap {
        /**
         * Specifies the new value that oldValue should be translated into.
         */
        newValue: string;
        /**
         * Specifies the value which needs to be reset.
         */
        oldValue: string;
        /**
         * Migration type.
         */
        type: string;
    }

    export interface GetMigrationDumpTransferDetail {
        /**
         * Optional additional properties for dump transfer in source or target host. Default kind is CURL
         */
        sources: outputs.DatabaseMigration.GetMigrationDumpTransferDetailSource[];
        /**
         * Optional additional properties for dump transfer in source or target host. Default kind is CURL
         */
        targets: outputs.DatabaseMigration.GetMigrationDumpTransferDetailTarget[];
    }

    export interface GetMigrationDumpTransferDetailSource {
        /**
         * Type of dump transfer to use during migration in source or target host. Default kind is CURL
         */
        kind: string;
        /**
         * Path to the Oracle Cloud Infrastructure CLI installation in the node.
         */
        ociHome: string;
    }

    export interface GetMigrationDumpTransferDetailTarget {
        /**
         * Type of dump transfer to use during migration in source or target host. Default kind is CURL
         */
        kind: string;
        /**
         * Path to the Oracle Cloud Infrastructure CLI installation in the node.
         */
        ociHome: string;
    }

    export interface GetMigrationExcludeObject {
        /**
         * Name of the object (regular expression is allowed)
         */
        object: string;
        /**
         * Owner of the object (regular expression is allowed)
         */
        owner: string;
        /**
         * Migration type.
         */
        type: string;
    }

    export interface GetMigrationGoldenGateDetail {
        /**
         * Details about Oracle GoldenGate Microservices.
         */
        hubs: outputs.DatabaseMigration.GetMigrationGoldenGateDetailHub[];
        /**
         * Optional settings for Oracle GoldenGate processes
         */
        settings: outputs.DatabaseMigration.GetMigrationGoldenGateDetailSetting[];
    }

    export interface GetMigrationGoldenGateDetailHub {
        /**
         * OCID of GoldenGate compute instance.
         */
        computeId: string;
        /**
         * Database Administrator Credentials details.
         */
        restAdminCredentials: outputs.DatabaseMigration.GetMigrationGoldenGateDetailHubRestAdminCredential[];
        /**
         * Database Administrator Credentials details.
         */
        sourceContainerDbAdminCredentials: outputs.DatabaseMigration.GetMigrationGoldenGateDetailHubSourceContainerDbAdminCredential[];
        /**
         * Database Administrator Credentials details.
         */
        sourceDbAdminCredentials: outputs.DatabaseMigration.GetMigrationGoldenGateDetailHubSourceDbAdminCredential[];
        /**
         * Name of GoldenGate deployment to operate on source database
         */
        sourceMicroservicesDeploymentName: string;
        /**
         * Database Administrator Credentials details.
         */
        targetDbAdminCredentials: outputs.DatabaseMigration.GetMigrationGoldenGateDetailHubTargetDbAdminCredential[];
        /**
         * Name of GoldenGate deployment to operate on target database
         */
        targetMicroservicesDeploymentName: string;
        /**
         * Oracle GoldenGate hub's REST endpoint. Refer to https://docs.oracle.com/en/middleware/goldengate/core/19.1/securing/network.html#GUID-A709DA55-111D-455E-8942-C9BDD1E38CAA
         */
        url: string;
    }

    export interface GetMigrationGoldenGateDetailHubRestAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetMigrationGoldenGateDetailHubSourceContainerDbAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetMigrationGoldenGateDetailHubSourceDbAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetMigrationGoldenGateDetailHubTargetDbAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetMigrationGoldenGateDetailSetting {
        /**
         * ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
         */
        acceptableLag: number;
        /**
         * Parameters for Extract processes.
         */
        extracts: outputs.DatabaseMigration.GetMigrationGoldenGateDetailSettingExtract[];
        /**
         * Parameters for Replicat processes.
         */
        replicats: outputs.DatabaseMigration.GetMigrationGoldenGateDetailSettingReplicat[];
    }

    export interface GetMigrationGoldenGateDetailSettingExtract {
        /**
         * Length of time (in seconds) that a transaction can be open before Extract generates a warning message that the transaction is long-running. If not specified, Extract will not generate a warning on long-running transactions.
         */
        longTransDuration: number;
        /**
         * Extract performance.
         */
        performanceProfile: string;
    }

    export interface GetMigrationGoldenGateDetailSettingReplicat {
        /**
         * Number of threads used to read trail files (valid for Parallel Replicat)
         */
        mapParallelism: number;
        /**
         * Defines the range in which Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         */
        maxApplyParallelism: number;
        /**
         * Defines the range in which Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         */
        minApplyParallelism: number;
    }

    export interface GetMigrationIncludeObject {
        /**
         * Name of the object (regular expression is allowed)
         */
        object: string;
        /**
         * Owner of the object (regular expression is allowed)
         */
        owner: string;
        /**
         * Migration type.
         */
        type: string;
    }

    export interface GetMigrationObjectTypesFilter {
        /**
         * Object type name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMigrationObjectTypesMigrationObjectTypeSummaryCollection {
        /**
         * Items in collection.
         */
        items: outputs.DatabaseMigration.GetMigrationObjectTypesMigrationObjectTypeSummaryCollectionItem[];
    }

    export interface GetMigrationObjectTypesMigrationObjectTypeSummaryCollectionItem {
        /**
         * Object type name
         */
        name: string;
    }

    export interface GetMigrationVaultDetail {
        /**
         * OCID of the compartment where the secret containing the credentials will be created.
         */
        compartmentId: string;
        /**
         * OCID of the vault encryption key
         */
        keyId: string;
        /**
         * OCID of the vault
         */
        vaultId: string;
    }

    export interface GetMigrationsFilter {
        /**
         * Name of directory object in database
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMigrationsMigrationCollection {
        items: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItem[];
    }

    export interface GetMigrationsMigrationCollectionItem {
        /**
         * Optional Pre-Migration advisor settings.
         */
        advisorSettings: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemAdvisorSetting[];
        /**
         * The OCID of the registered on-premises ODMS Agent. Only valid for Offline Migrations.
         */
        agentId: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
         */
        credentialsSecretId: string;
        /**
         * Data Transfer Medium details for the Migration.
         */
        dataTransferMediumDetails: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDataTransferMediumDetail[];
        /**
         * Optional settings for Data Pump Export and Import jobs
         */
        datapumpSettings: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDatapumpSetting[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Optional additional properties for dump transfer.
         */
        dumpTransferDetails: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDumpTransferDetail[];
        /**
         * Database objects to exclude from migration. If 'includeObjects' are specified, only exclude object types can be specified with general wildcards (.*) for owner and objectName.
         */
        excludeObjects: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemExcludeObject[];
        /**
         * OCID of the current ODMS Job in execution for the Migration, if any.
         */
        executingJobId: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Details about Oracle GoldenGate Microservices.
         */
        goldenGateDetails: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemGoldenGateDetail[];
        /**
         * The OCID of the resource
         */
        id: string;
        /**
         * Database objects to include from migration.
         */
        includeObjects: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemIncludeObject[];
        /**
         * The lifecycle detailed status of the Migration.
         */
        lifecycleDetails: string;
        /**
         * The OCID of the Source Container Database Connection.
         */
        sourceContainerDatabaseConnectionId: string;
        /**
         * The OCID of the Source Database Connection.
         */
        sourceDatabaseConnectionId: string;
        /**
         * The lifecycle state of the Migration.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The OCID of the Target Database Connection.
         */
        targetDatabaseConnectionId: string;
        /**
         * The time the Migration was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time of last Migration. An RFC3339 formatted datetime string.
         */
        timeLastMigration: string;
        /**
         * The time of the last Migration details update. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * Migration type.
         */
        type: string;
        /**
         * Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
         */
        vaultDetails: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemVaultDetail[];
        /**
         * Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
         */
        waitAfter: string;
    }

    export interface GetMigrationsMigrationCollectionItemAdvisorSetting {
        /**
         * True to not interrupt migration execution due to Pre-Migration Advisor errors. Default is false.
         */
        isIgnoreErrors: boolean;
        /**
         * True to skip the Pre-Migration Advisor execution. Default is false.
         */
        isSkipAdvisor: boolean;
    }

    export interface GetMigrationsMigrationCollectionItemDataTransferMediumDetail {
        /**
         * Optional details for creating a network database link from Oracle Cloud Infrastructure database to on-premise database.
         */
        databaseLinkDetails: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDataTransferMediumDetailDatabaseLinkDetail[];
        /**
         * In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
         */
        objectStorageDetails: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDataTransferMediumDetailObjectStorageDetail[];
    }

    export interface GetMigrationsMigrationCollectionItemDataTransferMediumDetailDatabaseLinkDetail {
        /**
         * Name of directory object in database
         */
        name: string;
        /**
         * In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
         */
        walletBuckets: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDataTransferMediumDetailDatabaseLinkDetailWalletBucket[];
    }

    export interface GetMigrationsMigrationCollectionItemDataTransferMediumDetailDatabaseLinkDetailWalletBucket {
        /**
         * Bucket name.
         */
        bucket: string;
        /**
         * Namespace name of the object store bucket.
         */
        namespace: string;
    }

    export interface GetMigrationsMigrationCollectionItemDataTransferMediumDetailObjectStorageDetail {
        /**
         * Bucket name.
         */
        bucket: string;
        /**
         * Namespace name of the object store bucket.
         */
        namespace: string;
    }

    export interface GetMigrationsMigrationCollectionItemDatapumpSetting {
        /**
         * Optional parameters for Data Pump Export and Import. Refer to [Configuring Optional Initial Load Advanced Settings](https://docs.us.oracle.com/en/cloud/paas/database-migration/dmsus/working-migration-resources.html#GUID-24BD3054-FDF8-48FF-8492-636C1D4B71ED)
         */
        dataPumpParameters: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDatapumpSettingDataPumpParameter[];
        /**
         * Directory object details, used to define either import or export directory objects in Data Pump Settings.
         */
        exportDirectoryObjects: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDatapumpSettingExportDirectoryObject[];
        /**
         * Directory object details, used to define either import or export directory objects in Data Pump Settings.
         */
        importDirectoryObjects: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDatapumpSettingImportDirectoryObject[];
        /**
         * Data Pump job mode. Refer to [Data Pump Export Modes ](https://docs.oracle.com/en/database/oracle/oracle-database/19/sutil/oracle-data-pump-export-utility.html#GUID-8E497131-6B9B-4CC8-AA50-35F480CAC2C4)
         */
        jobMode: string;
        /**
         * Defines remapping to be applied to objects as they are processed. Refer to [METADATA_REMAP Procedure ](https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/DBMS_DATAPUMP.html#GUID-0FC32790-91E6-4781-87A3-229DE024CB3D)
         */
        metadataRemaps: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDatapumpSettingMetadataRemap[];
    }

    export interface GetMigrationsMigrationCollectionItemDatapumpSettingDataPumpParameter {
        /**
         * Estimate size of dumps that will be generated.
         */
        estimate: string;
        /**
         * Exclude paratemers for Export and Import.
         */
        excludeParameters: string[];
        /**
         * Maximum number of worker processes that can be used for a Data Pump Export job.
         */
        exportParallelismDegree: number;
        /**
         * Maximum number of worker processes that can be used for a Data Pump Import job. For an Autonomous Database, ODMS will automatically query its CPU core count and set this property.
         */
        importParallelismDegree: number;
        /**
         * Set to false to force Data Pump worker processes to run on one instance.
         */
        isCluster: boolean;
        /**
         * IMPORT: Specifies the action to be performed when data is loaded into a preexisting table.
         */
        tableExistsAction: string;
    }

    export interface GetMigrationsMigrationCollectionItemDatapumpSettingExportDirectoryObject {
        /**
         * Name of directory object in database
         */
        name: string;
        /**
         * Absolute path of directory on database server
         */
        path: string;
    }

    export interface GetMigrationsMigrationCollectionItemDatapumpSettingImportDirectoryObject {
        /**
         * Name of directory object in database
         */
        name: string;
        /**
         * Absolute path of directory on database server
         */
        path: string;
    }

    export interface GetMigrationsMigrationCollectionItemDatapumpSettingMetadataRemap {
        /**
         * Specifies the new value that oldValue should be translated into.
         */
        newValue: string;
        /**
         * Specifies the value which needs to be reset.
         */
        oldValue: string;
        /**
         * Migration type.
         */
        type: string;
    }

    export interface GetMigrationsMigrationCollectionItemDumpTransferDetail {
        /**
         * Optional additional properties for dump transfer in source or target host. Default kind is CURL
         */
        sources: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDumpTransferDetailSource[];
        /**
         * Optional additional properties for dump transfer in source or target host. Default kind is CURL
         */
        targets: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemDumpTransferDetailTarget[];
    }

    export interface GetMigrationsMigrationCollectionItemDumpTransferDetailSource {
        /**
         * Type of dump transfer to use during migration in source or target host. Default kind is CURL
         */
        kind: string;
        /**
         * Path to the Oracle Cloud Infrastructure CLI installation in the node.
         */
        ociHome: string;
    }

    export interface GetMigrationsMigrationCollectionItemDumpTransferDetailTarget {
        /**
         * Type of dump transfer to use during migration in source or target host. Default kind is CURL
         */
        kind: string;
        /**
         * Path to the Oracle Cloud Infrastructure CLI installation in the node.
         */
        ociHome: string;
    }

    export interface GetMigrationsMigrationCollectionItemExcludeObject {
        /**
         * Name of the object (regular expression is allowed)
         */
        object: string;
        /**
         * Owner of the object (regular expression is allowed)
         */
        owner: string;
        /**
         * Migration type.
         */
        type: string;
    }

    export interface GetMigrationsMigrationCollectionItemGoldenGateDetail {
        /**
         * Details about Oracle GoldenGate Microservices.
         */
        hubs: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemGoldenGateDetailHub[];
        /**
         * Optional settings for Oracle GoldenGate processes
         */
        settings: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemGoldenGateDetailSetting[];
    }

    export interface GetMigrationsMigrationCollectionItemGoldenGateDetailHub {
        /**
         * OCID of GoldenGate compute instance.
         */
        computeId: string;
        /**
         * Database Administrator Credentials details.
         */
        restAdminCredentials: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemGoldenGateDetailHubRestAdminCredential[];
        /**
         * Database Administrator Credentials details.
         */
        sourceContainerDbAdminCredentials: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemGoldenGateDetailHubSourceContainerDbAdminCredential[];
        /**
         * Database Administrator Credentials details.
         */
        sourceDbAdminCredentials: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemGoldenGateDetailHubSourceDbAdminCredential[];
        /**
         * Name of GoldenGate deployment to operate on source database
         */
        sourceMicroservicesDeploymentName: string;
        /**
         * Database Administrator Credentials details.
         */
        targetDbAdminCredentials: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemGoldenGateDetailHubTargetDbAdminCredential[];
        /**
         * Name of GoldenGate deployment to operate on target database
         */
        targetMicroservicesDeploymentName: string;
        /**
         * Oracle GoldenGate hub's REST endpoint. Refer to https://docs.oracle.com/en/middleware/goldengate/core/19.1/securing/network.html#GUID-A709DA55-111D-455E-8942-C9BDD1E38CAA
         */
        url: string;
    }

    export interface GetMigrationsMigrationCollectionItemGoldenGateDetailHubRestAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetMigrationsMigrationCollectionItemGoldenGateDetailHubSourceContainerDbAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetMigrationsMigrationCollectionItemGoldenGateDetailHubSourceDbAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetMigrationsMigrationCollectionItemGoldenGateDetailHubTargetDbAdminCredential {
        password: string;
        /**
         * Administrator username
         */
        username: string;
    }

    export interface GetMigrationsMigrationCollectionItemGoldenGateDetailSetting {
        /**
         * ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
         */
        acceptableLag: number;
        /**
         * Parameters for Extract processes.
         */
        extracts: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemGoldenGateDetailSettingExtract[];
        /**
         * Parameters for Replicat processes.
         */
        replicats: outputs.DatabaseMigration.GetMigrationsMigrationCollectionItemGoldenGateDetailSettingReplicat[];
    }

    export interface GetMigrationsMigrationCollectionItemGoldenGateDetailSettingExtract {
        /**
         * Length of time (in seconds) that a transaction can be open before Extract generates a warning message that the transaction is long-running. If not specified, Extract will not generate a warning on long-running transactions.
         */
        longTransDuration: number;
        /**
         * Extract performance.
         */
        performanceProfile: string;
    }

    export interface GetMigrationsMigrationCollectionItemGoldenGateDetailSettingReplicat {
        /**
         * Number of threads used to read trail files (valid for Parallel Replicat)
         */
        mapParallelism: number;
        /**
         * Defines the range in which Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         */
        maxApplyParallelism: number;
        /**
         * Defines the range in which Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         */
        minApplyParallelism: number;
    }

    export interface GetMigrationsMigrationCollectionItemIncludeObject {
        /**
         * Name of the object (regular expression is allowed)
         */
        object: string;
        /**
         * Owner of the object (regular expression is allowed)
         */
        owner: string;
        /**
         * Migration type.
         */
        type: string;
    }

    export interface GetMigrationsMigrationCollectionItemVaultDetail {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * OCID of the vault encryption key
         */
        keyId: string;
        /**
         * OCID of the vault
         */
        vaultId: string;
    }

    export interface JobProgress {
        /**
         * Current phase of the job.
         */
        currentPhase: string;
        /**
         * Current status of the job.
         */
        currentStatus: string;
        /**
         * List of phase status for the job.
         */
        phases: outputs.DatabaseMigration.JobProgressPhase[];
    }

    export interface JobProgressPhase {
        /**
         * Duration of the phase in milliseconds
         */
        durationInMs: number;
        /**
         * Summary of phase status results.
         */
        extracts: outputs.DatabaseMigration.JobProgressPhaseExtract[];
        /**
         * True if a Pre-Migration Advisor report is available for this phase. False or null if no report is available.
         */
        isAdvisorReportAvailable: boolean;
        /**
         * Details to access log file in the specified Object Storage bucket, if any.
         */
        logLocations: outputs.DatabaseMigration.JobProgressPhaseLogLocation[];
        /**
         * Phase name
         */
        name: string;
        /**
         * Percent progress of job phase.
         */
        progress: number;
        /**
         * Phase status
         */
        status: string;
    }

    export interface JobProgressPhaseExtract {
        /**
         * Message in entry.
         */
        message: string;
        /**
         * Type of unsupported object
         */
        type: string;
    }

    export interface JobProgressPhaseLogLocation {
        /**
         * Name of the bucket containing the log file.
         */
        bucket: string;
        /**
         * Object Storage namespace.
         */
        namespace: string;
        /**
         * Name of the object (regular expression is allowed)
         */
        object: string;
    }

    export interface JobUnsupportedObject {
        /**
         * Name of the object (regular expression is allowed)
         */
        object: string;
        /**
         * Owner of the object (regular expression is allowed)
         */
        owner: string;
        /**
         * Type of unsupported object
         */
        type: string;
    }

    export interface MigrationAdvisorSettings {
        /**
         * (Updatable) True to not interrupt migration execution due to Pre-Migration Advisor errors. Default is false.
         */
        isIgnoreErrors: boolean;
        /**
         * (Updatable) True to skip the Pre-Migration Advisor execution. Default is false.
         */
        isSkipAdvisor: boolean;
    }

    export interface MigrationDataTransferMediumDetails {
        /**
         * (Updatable) Optional details for creating a network database link from Oracle Cloud Infrastructure database to on-premise database.
         */
        databaseLinkDetails: outputs.DatabaseMigration.MigrationDataTransferMediumDetailsDatabaseLinkDetails;
        /**
         * (Updatable) In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
         */
        objectStorageDetails: outputs.DatabaseMigration.MigrationDataTransferMediumDetailsObjectStorageDetails;
    }

    export interface MigrationDataTransferMediumDetailsDatabaseLinkDetails {
        /**
         * (Updatable) Name of directory object in database
         */
        name: string;
        /**
         * (Updatable) In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
         */
        walletBucket: outputs.DatabaseMigration.MigrationDataTransferMediumDetailsDatabaseLinkDetailsWalletBucket;
    }

    export interface MigrationDataTransferMediumDetailsDatabaseLinkDetailsWalletBucket {
        /**
         * (Updatable) Bucket name.
         */
        bucket: string;
        /**
         * (Updatable) Namespace name of the object store bucket.
         */
        namespace: string;
    }

    export interface MigrationDataTransferMediumDetailsObjectStorageDetails {
        /**
         * (Updatable) Bucket name.
         */
        bucket: string;
        /**
         * (Updatable) Namespace name of the object store bucket.
         */
        namespace: string;
    }

    export interface MigrationDatapumpSettings {
        /**
         * (Updatable) Optional parameters for Data Pump Export and Import. Refer to [Configuring Optional Initial Load Advanced Settings](https://docs.us.oracle.com/en/cloud/paas/database-migration/dmsus/working-migration-resources.html#GUID-24BD3054-FDF8-48FF-8492-636C1D4B71ED)
         */
        dataPumpParameters: outputs.DatabaseMigration.MigrationDatapumpSettingsDataPumpParameters;
        /**
         * (Updatable) Directory object details, used to define either import or export directory objects in Data Pump Settings. Import directory is required for Non-Autonomous target connections. If specified for an autonomous target, it will show an error. Export directory will error if there are database link details specified.
         */
        exportDirectoryObject: outputs.DatabaseMigration.MigrationDatapumpSettingsExportDirectoryObject;
        /**
         * (Updatable) Directory object details, used to define either import or export directory objects in Data Pump Settings. Import directory is required for Non-Autonomous target connections. If specified for an autonomous target, it will show an error. Export directory will error if there are database link details specified.
         */
        importDirectoryObject: outputs.DatabaseMigration.MigrationDatapumpSettingsImportDirectoryObject;
        /**
         * (Updatable) Data Pump job mode. Refer to [link text](https://docs.oracle.com/en/database/oracle/oracle-database/19/sutil/oracle-data-pump-export-utility.html#GUID-8E497131-6B9B-4CC8-AA50-35F480CAC2C4)
         */
        jobMode: string;
        /**
         * (Updatable) Defines remapping to be applied to objects as they are processed. Refer to [DATA_REMAP](https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/DBMS_DATAPUMP.html#GUID-E75AAE6F-4EA6-4737-A752-6B62F5E9D460)
         */
        metadataRemaps: outputs.DatabaseMigration.MigrationDatapumpSettingsMetadataRemap[];
    }

    export interface MigrationDatapumpSettingsDataPumpParameters {
        /**
         * (Updatable) Estimate size of dumps that will be generated.
         */
        estimate: string;
        /**
         * (Updatable) Exclude paratemers for Export and Import.
         */
        excludeParameters: string[];
        /**
         * (Updatable) Maximum number of worker processes that can be used for a Data Pump Export job.
         */
        exportParallelismDegree: number;
        /**
         * (Updatable) Maximum number of worker processes that can be used for a Data Pump Import job. For an Autonomous Database, ODMS will automatically query its CPU core count and set this property.
         */
        importParallelismDegree: number;
        /**
         * (Updatable) Set to false to force Data Pump worker process to run on one instance.
         */
        isCluster: boolean;
        /**
         * (Updatable) IMPORT: Specifies the action to be performed when data is loaded into a preexisting table.
         */
        tableExistsAction: string;
    }

    export interface MigrationDatapumpSettingsExportDirectoryObject {
        /**
         * (Updatable) Name of directory object in database
         */
        name: string;
        /**
         * (Updatable) Absolute path of directory on database server
         */
        path: string;
    }

    export interface MigrationDatapumpSettingsImportDirectoryObject {
        /**
         * (Updatable) Name of directory object in database
         */
        name: string;
        /**
         * (Updatable) Absolute path of directory on database server
         */
        path: string;
    }

    export interface MigrationDatapumpSettingsMetadataRemap {
        /**
         * (Updatable) Specifies the new value that oldValue should be translated into.
         */
        newValue: string;
        /**
         * (Updatable) Specifies the value which needs to be reset.
         */
        oldValue: string;
        /**
         * (Updatable) Migration type.
         */
        type: string;
    }

    export interface MigrationDumpTransferDetails {
        /**
         * (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL
         */
        source: outputs.DatabaseMigration.MigrationDumpTransferDetailsSource;
        /**
         * (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL
         */
        target: outputs.DatabaseMigration.MigrationDumpTransferDetailsTarget;
    }

    export interface MigrationDumpTransferDetailsSource {
        /**
         * (Updatable) Type of dump transfer to use during migration in source or target host. Default kind is CURL
         */
        kind: string;
        /**
         * (Updatable) Path to the Oracle Cloud Infrastructure CLI installation in the node.
         */
        ociHome: string;
    }

    export interface MigrationDumpTransferDetailsTarget {
        /**
         * (Updatable) Type of dump transfer to use during migration in source or target host. Default kind is CURL
         */
        kind: string;
        /**
         * (Updatable) Path to the Oracle Cloud Infrastructure CLI installation in the node.
         */
        ociHome: string;
    }

    export interface MigrationExcludeObject {
        /**
         * (Updatable) Name of the object (regular expression is allowed)
         */
        object: string;
        /**
         * (Updatable) Owner of the object (regular expression is allowed)
         */
        owner: string;
        /**
         * (Updatable) Migration type.
         */
        type: string;
    }

    export interface MigrationGoldenGateDetails {
        /**
         * (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
         */
        hub: outputs.DatabaseMigration.MigrationGoldenGateDetailsHub;
        /**
         * (Updatable) Optional settings for GoldenGate Microservices processes
         */
        settings: outputs.DatabaseMigration.MigrationGoldenGateDetailsSettings;
    }

    export interface MigrationGoldenGateDetailsHub {
        /**
         * (Updatable) OCID of GoldenGate Microservices compute instance.
         */
        computeId: string;
        /**
         * (Updatable) Database Administrator Credentials details.
         */
        restAdminCredentials: outputs.DatabaseMigration.MigrationGoldenGateDetailsHubRestAdminCredentials;
        /**
         * (Updatable) Database Administrator Credentials details.
         */
        sourceContainerDbAdminCredentials: outputs.DatabaseMigration.MigrationGoldenGateDetailsHubSourceContainerDbAdminCredentials;
        /**
         * (Updatable) Database Administrator Credentials details.
         */
        sourceDbAdminCredentials: outputs.DatabaseMigration.MigrationGoldenGateDetailsHubSourceDbAdminCredentials;
        /**
         * (Updatable) Name of GoldenGate Microservices deployment to operate on source database
         */
        sourceMicroservicesDeploymentName: string;
        /**
         * (Updatable) Database Administrator Credentials details.
         */
        targetDbAdminCredentials: outputs.DatabaseMigration.MigrationGoldenGateDetailsHubTargetDbAdminCredentials;
        /**
         * (Updatable) Name of GoldenGate Microservices deployment to operate on target database
         */
        targetMicroservicesDeploymentName: string;
        /**
         * (Updatable) Oracle GoldenGate Microservices hub's REST endpoint. Refer to https://docs.oracle.com/en/middleware/goldengate/core/19.1/securing/network.html#GUID-A709DA55-111D-455E-8942-C9BDD1E38CAA
         */
        url: string;
    }

    export interface MigrationGoldenGateDetailsHubRestAdminCredentials {
        /**
         * (Updatable) Administrator password
         */
        password: string;
        /**
         * (Updatable) Administrator username
         */
        username: string;
    }

    export interface MigrationGoldenGateDetailsHubSourceContainerDbAdminCredentials {
        /**
         * (Updatable) Administrator password
         */
        password: string;
        /**
         * (Updatable) Administrator username
         */
        username: string;
    }

    export interface MigrationGoldenGateDetailsHubSourceDbAdminCredentials {
        /**
         * (Updatable) Administrator password
         */
        password: string;
        /**
         * (Updatable) Administrator username
         */
        username: string;
    }

    export interface MigrationGoldenGateDetailsHubTargetDbAdminCredentials {
        /**
         * (Updatable) Administrator password
         */
        password: string;
        /**
         * (Updatable) Administrator username
         */
        username: string;
    }

    export interface MigrationGoldenGateDetailsSettings {
        /**
         * (Updatable) ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
         */
        acceptableLag: number;
        /**
         * (Updatable) Parameters for GoldenGate Extract processes.
         */
        extract: outputs.DatabaseMigration.MigrationGoldenGateDetailsSettingsExtract;
        /**
         * (Updatable) Parameters for GoldenGate Replicat processes.
         */
        replicat: outputs.DatabaseMigration.MigrationGoldenGateDetailsSettingsReplicat;
    }

    export interface MigrationGoldenGateDetailsSettingsExtract {
        /**
         * (Updatable) Length of time (in seconds) that a transaction can be open before Extract generates a warning message that the transaction is long-running. If not specified, Extract will not generate a warning on long-running transactions.
         */
        longTransDuration: number;
        /**
         * (Updatable) Extract performance.
         */
        performanceProfile: string;
    }

    export interface MigrationGoldenGateDetailsSettingsReplicat {
        /**
         * (Updatable) Number of threads used to read trail files (valid for Parallel Replicat)
         */
        mapParallelism: number;
        /**
         * (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         */
        maxApplyParallelism: number;
        /**
         * (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         */
        minApplyParallelism: number;
    }

    export interface MigrationIncludeObject {
        /**
         * (Updatable) Name of the object (regular expression is allowed)
         */
        object: string;
        /**
         * (Updatable) Owner of the object (regular expression is allowed)
         */
        owner: string;
        /**
         * (Updatable) Migration type.
         */
        type: string;
    }

    export interface MigrationVaultDetails {
        /**
         * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
         */
        compartmentId: string;
        /**
         * (Updatable) OCID of the vault encryption key
         */
        keyId: string;
        /**
         * (Updatable) OCID of the vault
         */
        vaultId: string;
    }
}

export namespace DatabaseTools {
    export interface DatabaseToolsConnectionKeyStore {
        /**
         * (Updatable) The key store content.
         */
        keyStoreContent: outputs.DatabaseTools.DatabaseToolsConnectionKeyStoreKeyStoreContent;
        /**
         * (Updatable) The key store password.
         */
        keyStorePassword: outputs.DatabaseTools.DatabaseToolsConnectionKeyStoreKeyStorePassword;
        /**
         * (Updatable) The key store type.
         */
        keyStoreType: string;
    }

    export interface DatabaseToolsConnectionKeyStoreKeyStoreContent {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * (Updatable) The value type of the user password.
         */
        valueType: string;
    }

    export interface DatabaseToolsConnectionKeyStoreKeyStorePassword {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * (Updatable) The value type of the user password.
         */
        valueType: string;
    }

    export interface DatabaseToolsConnectionRelatedResource {
        /**
         * (Updatable) The resource entity type.
         */
        entityType: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related resource.
         */
        identifier: string;
    }

    export interface DatabaseToolsConnectionUserPassword {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * (Updatable) The value type of the user password.
         */
        valueType: string;
    }

    export interface DatabaseToolsPrivateEndpointReverseConnectionConfiguration {
        /**
         * A list of IP addresses in the customer VCN to be used as the source IPs for reverse connection packets traveling from the service's VCN to the customer's VCN.
         */
        reverseConnectionsSourceIps: outputs.DatabaseTools.DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIp[];
    }

    export interface DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIp {
        /**
         * The IP address in the customer's VCN to be used as the source IP for reverse connection packets traveling from the customer's VCN to the service's VCN.
         */
        sourceIp: string;
    }

    export interface GetDatabaseToolsConnectionKeyStore {
        /**
         * The key store content.
         */
        keyStoreContents: outputs.DatabaseTools.GetDatabaseToolsConnectionKeyStoreKeyStoreContent[];
        /**
         * The key store password.
         */
        keyStorePasswords: outputs.DatabaseTools.GetDatabaseToolsConnectionKeyStoreKeyStorePassword[];
        /**
         * The key store type.
         */
        keyStoreType: string;
    }

    export interface GetDatabaseToolsConnectionKeyStoreKeyStoreContent {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * The value type of the user password.
         */
        valueType: string;
    }

    export interface GetDatabaseToolsConnectionKeyStoreKeyStorePassword {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * The value type of the user password.
         */
        valueType: string;
    }

    export interface GetDatabaseToolsConnectionRelatedResource {
        /**
         * The resource entity type.
         */
        entityType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related resource.
         */
        identifier: string;
    }

    export interface GetDatabaseToolsConnectionUserPassword {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * The value type of the user password.
         */
        valueType: string;
    }

    export interface GetDatabaseToolsConnectionsDatabaseToolsConnectionCollection {
        items: outputs.DatabaseTools.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItem[];
    }

    export interface GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItem {
        /**
         * The advanced connection properties key-value pair (for example, `oracle.net.ssl_server_dn_match`).
         */
        advancedProperties: {[key: string]: any};
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * The connect descriptor or Easy Connect Naming method used to connect to the database.
         */
        connectionString: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire specified display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools connection.
         */
        id: string;
        /**
         * The Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
         */
        keyStores: outputs.DatabaseTools.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStore[];
        /**
         * A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
         */
        lifecycleDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
         */
        privateEndpointId: string;
        /**
         * A related resource
         */
        relatedResources: outputs.DatabaseTools.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemRelatedResource[];
        /**
         * A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the Database Tools connection was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * A filter to return only resources their type matches the specified type.
         */
        type: string;
        /**
         * The database user name.
         */
        userName: string;
        /**
         * The user password.
         */
        userPasswords: outputs.DatabaseTools.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemUserPassword[];
    }

    export interface GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStore {
        /**
         * The key store content.
         */
        keyStoreContents: outputs.DatabaseTools.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStoreKeyStoreContent[];
        /**
         * The key store password.
         */
        keyStorePasswords: outputs.DatabaseTools.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStoreKeyStorePassword[];
        /**
         * The key store type.
         */
        keyStoreType: string;
    }

    export interface GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStoreKeyStoreContent {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * The value type of the user password.
         */
        valueType: string;
    }

    export interface GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStoreKeyStorePassword {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * The value type of the user password.
         */
        valueType: string;
    }

    export interface GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemRelatedResource {
        /**
         * The resource entity type.
         */
        entityType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related resource.
         */
        identifier: string;
    }

    export interface GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemUserPassword {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
         */
        secretId: string;
        /**
         * The value type of the user password.
         */
        valueType: string;
    }

    export interface GetDatabaseToolsConnectionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDatabaseToolsEndpointServicesDatabaseToolsEndpointServiceCollection {
        items: outputs.DatabaseTools.GetDatabaseToolsEndpointServicesDatabaseToolsEndpointServiceCollectionItem[];
    }

    export interface GetDatabaseToolsEndpointServicesDatabaseToolsEndpointServiceCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A description of the Database Tools Endpoint Service.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire specified display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools Endpoint Service.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the entire specified name.
         */
        name: string;
        /**
         * A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the Database Tools Endpoint Service was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the Database Tools Endpoint Service was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface GetDatabaseToolsEndpointServicesFilter {
        /**
         * A filter to return only resources that match the entire specified name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDatabaseToolsPrivateEndpointReverseConnectionConfiguration {
        /**
         * A list of IP addresses in the customer VCN to be used as the source IPs for reverse connection packets traveling from the service's VCN to the customer's VCN.
         */
        reverseConnectionsSourceIps: outputs.DatabaseTools.GetDatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIp[];
    }

    export interface GetDatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIp {
        /**
         * The IP address in the customer's VCN to be used as the source IP for reverse connection packets traveling from the customer's VCN to the service's VCN.
         */
        sourceIp: string;
    }

    export interface GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollection {
        items: outputs.DatabaseTools.GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItem[];
    }

    export interface GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItem {
        /**
         * A list of additional FQDNs that can be also be used for the private endpoint.
         */
        additionalFqdns: string[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A description of the Database Tools private endpoint.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire specified display name.
         */
        displayName: string;
        /**
         * Then FQDN to use for the private endpoint.
         */
        endpointFqdn: string;
        /**
         * A filter to return only resources their `endpointServiceId` matches the specified `endpointServiceId`.
         */
        endpointServiceId: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups that the private endpoint's VNIC belongs to.  For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
         */
        nsgIds: string[];
        /**
         * The private IP address that represents the access point for the associated endpoint service.
         */
        privateEndpointIp: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint's VNIC.
         */
        privateEndpointVnicId: string;
        /**
         * Reverse connection configuration details of the private endpoint.
         */
        reverseConnectionConfigurations: outputs.DatabaseTools.GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfiguration[];
        /**
         * A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
         */
        state: string;
        /**
         * A filter to return only resources their `subnetId` matches the specified `subnetId`.
         */
        subnetId: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the Database Tools private endpoint was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the Database Tools private endpoint was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN that the private endpoint belongs to.
         */
        vcnId: string;
    }

    export interface GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfiguration {
        /**
         * A list of IP addresses in the customer VCN to be used as the source IPs for reverse connection packets traveling from the service's VCN to the customer's VCN.
         */
        reverseConnectionsSourceIps: outputs.DatabaseTools.GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfigurationReverseConnectionsSourceIp[];
    }

    export interface GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfigurationReverseConnectionsSourceIp {
        /**
         * The IP address in the customer's VCN to be used as the source IP for reverse connection packets traveling from the customer's VCN to the service's VCN.
         */
        sourceIp: string;
    }

    export interface GetDatabaseToolsPrivateEndpointsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace DevOps {
    export interface BuildPipelineBuildPipelineParameters {
        /**
         * (Updatable) List of parameters defined for a build pipeline.
         */
        items: outputs.DevOps.BuildPipelineBuildPipelineParametersItem[];
    }

    export interface BuildPipelineBuildPipelineParametersItem {
        /**
         * (Updatable) Default value of the parameter.
         */
        defaultValue: string;
        /**
         * (Updatable) Optional description about the build pipeline.
         */
        description: string;
        /**
         * (Updatable) Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$. Example: 'Build_Pipeline_param' is not same as 'build_pipeline_Param'
         */
        name: string;
    }

    export interface BuildPipelineStageBuildPipelineStagePredecessorCollection {
        /**
         * (Updatable) Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.BuildPipelineStageBuildPipelineStagePredecessorCollectionItem[];
    }

    export interface BuildPipelineStageBuildPipelineStagePredecessorCollectionItem {
        /**
         * (Updatable) The OCID of the predecessor stage. If a stage is the first stage in the pipeline, then the ID is the pipeline's OCID.
         */
        id: string;
    }

    export interface BuildPipelineStageBuildSourceCollection {
        /**
         * (Updatable) Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.BuildPipelineStageBuildSourceCollectionItem[];
    }

    export interface BuildPipelineStageBuildSourceCollectionItem {
        /**
         * (Updatable) Branch name.
         */
        branch: string;
        /**
         * (Updatable) Connection identifier pertinent to Bitbucket Server source provider
         */
        connectionId: string;
        /**
         * (Updatable) The type of source provider.
         */
        connectionType: string;
        /**
         * (Updatable) Name of the build source. This must be unique within a build source collection. The name can be used by customers to locate the working directory pertinent to this repository.
         */
        name: string;
        /**
         * (Updatable) The DevOps code repository ID.
         */
        repositoryId: string;
        /**
         * (Updatable) URL for the repository.
         */
        repositoryUrl: string;
    }

    export interface BuildPipelineStageDeliverArtifactCollection {
        /**
         * (Updatable) Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.BuildPipelineStageDeliverArtifactCollectionItem[];
    }

    export interface BuildPipelineStageDeliverArtifactCollectionItem {
        /**
         * (Updatable) Artifact identifier that contains the artifact definition.
         */
        artifactId: string;
        /**
         * (Updatable) Name of the artifact specified in the build_spec.yaml file.
         */
        artifactName: string;
    }

    export interface BuildPipelineStagePrivateAccessConfig {
        /**
         * (Updatable) Network channel type.
         */
        networkChannelType: string;
        /**
         * (Updatable) An array of network security group OCIDs.
         */
        nsgIds: string[];
        /**
         * (Updatable) The OCID of the subnet where VNIC resources will be created for private endpoint.
         */
        subnetId: string;
    }

    export interface BuildPipelineStageWaitCriteria {
        /**
         * (Updatable) The absolute wait duration. Minimum wait duration must be 5 seconds. Maximum wait duration can be up to 2 days.
         */
        waitDuration: string;
        /**
         * (Updatable) Wait criteria type.
         */
        waitType: string;
    }

    export interface BuildRunBuildOutput {
        /**
         * Specifies the list of artifact override arguments at the time of deployment.
         */
        artifactOverrideParameters: outputs.DevOps.BuildRunBuildOutputArtifactOverrideParameter[];
        /**
         * Specifies the list of artifacts delivered through the Deliver Artifacts stage.
         */
        deliveredArtifacts: outputs.DevOps.BuildRunBuildOutputDeliveredArtifact[];
        /**
         * Specifies list of exported variables.
         */
        exportedVariables: outputs.DevOps.BuildRunBuildOutputExportedVariable[];
        /**
         * List of vulnerability audit summary.
         */
        vulnerabilityAuditSummaryCollections: outputs.DevOps.BuildRunBuildOutputVulnerabilityAuditSummaryCollection[];
    }

    export interface BuildRunBuildOutputArtifactOverrideParameter {
        /**
         * List of arguments provided at the time of running the build.
         */
        items: outputs.DevOps.BuildRunBuildOutputArtifactOverrideParameterItem[];
    }

    export interface BuildRunBuildOutputArtifactOverrideParameterItem {
        /**
         * The OCID of the deployment artifact definition.
         */
        deployArtifactId: string;
        /**
         * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$. Example: 'Build_Pipeline_param' is not same as 'build_pipeline_Param'
         */
        name: string;
        /**
         * Value of the argument.
         */
        value: string;
    }

    export interface BuildRunBuildOutputDeliveredArtifact {
        /**
         * List of arguments provided at the time of running the build.
         */
        items: outputs.DevOps.BuildRunBuildOutputDeliveredArtifactItem[];
    }

    export interface BuildRunBuildOutputDeliveredArtifactItem {
        /**
         * The OCID of the artifact registry repository used by the DeliverArtifactStage
         */
        artifactRepositoryId: string;
        /**
         * Type of artifact delivered.
         */
        artifactType: string;
        /**
         * The hash of the container registry artifact pushed by the Deliver Artifacts stage.
         */
        deliveredArtifactHash: string;
        /**
         * The OCID of the artifact pushed by the Deliver Artifacts stage.
         */
        deliveredArtifactId: string;
        /**
         * The OCID of the deployment artifact definition.
         */
        deployArtifactId: string;
        /**
         * The imageUri of the OCIR artifact pushed by the DeliverArtifactStage
         */
        imageUri: string;
        /**
         * Name of the output artifact defined in the build specification file.
         */
        outputArtifactName: string;
        /**
         * Path of the repository where artifact was pushed
         */
        path: string;
        /**
         * Version of the artifact pushed
         */
        version: string;
    }

    export interface BuildRunBuildOutputExportedVariable {
        /**
         * List of arguments provided at the time of running the build.
         */
        items: outputs.DevOps.BuildRunBuildOutputExportedVariableItem[];
    }

    export interface BuildRunBuildOutputExportedVariableItem {
        /**
         * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$. Example: 'Build_Pipeline_param' is not same as 'build_pipeline_Param'
         */
        name: string;
        /**
         * Value of the argument.
         */
        value: string;
    }

    export interface BuildRunBuildOutputVulnerabilityAuditSummaryCollection {
        /**
         * List of arguments provided at the time of running the build.
         */
        items: outputs.DevOps.BuildRunBuildOutputVulnerabilityAuditSummaryCollectionItem[];
    }

    export interface BuildRunBuildOutputVulnerabilityAuditSummaryCollectionItem {
        /**
         * Build stage OCID where scan was configured.
         */
        buildStageId: string;
        /**
         * Commit hash pertinent to the repository URL and the specified branch.
         */
        commitHash: string;
        /**
         * The OCID of the vulnerability audit.
         */
        vulnerabilityAuditId: string;
    }

    export interface BuildRunBuildRunArguments {
        /**
         * List of arguments provided at the time of running the build.
         */
        items: outputs.DevOps.BuildRunBuildRunArgumentsItem[];
    }

    export interface BuildRunBuildRunArgumentsItem {
        /**
         * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$. Example: 'Build_Pipeline_param' is not same as 'build_pipeline_Param'
         */
        name: string;
        /**
         * Value of the argument.
         */
        value: string;
    }

    export interface BuildRunBuildRunProgress {
        /**
         * Map of stage OCIDs to build pipeline stage run progress model.
         */
        buildPipelineStageRunProgress: {[key: string]: any};
        /**
         * The time the build run finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeFinished: string;
        /**
         * The time the build run started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeStarted: string;
    }

    export interface BuildRunBuildRunSource {
        /**
         * The DevOps code repository identifier that invoked the build run.
         */
        repositoryId: string;
        /**
         * The source from which the build run is triggered.
         */
        sourceType: string;
        /**
         * The trigger that invoked the build run.
         */
        triggerId: string;
        /**
         * Trigger details that need to be used for the BuildRun
         */
        triggerInfos: outputs.DevOps.BuildRunBuildRunSourceTriggerInfo[];
    }

    export interface BuildRunBuildRunSourceTriggerInfo {
        /**
         * The list of actions that are to be performed for this Trigger
         */
        actions: outputs.DevOps.BuildRunBuildRunSourceTriggerInfoAction[];
        /**
         * (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface BuildRunBuildRunSourceTriggerInfoAction {
        /**
         * The OCID of the build pipeline.
         */
        buildPipelineId: string;
        /**
         * The filters for the trigger.
         */
        filters: outputs.DevOps.BuildRunBuildRunSourceTriggerInfoActionFilter[];
        /**
         * The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
         */
        type: string;
    }

    export interface BuildRunBuildRunSourceTriggerInfoActionFilter {
        /**
         * The events, for example, PUSH, PULL_REQUEST_MERGE.
         */
        events: string[];
        /**
         * Attributes to filter GitLab self-hosted server events.
         */
        includes: outputs.DevOps.BuildRunBuildRunSourceTriggerInfoActionFilterInclude[];
        /**
         * Source of the trigger. Allowed values are, GITHUB and GITLAB.
         */
        triggerSource: string;
    }

    export interface BuildRunBuildRunSourceTriggerInfoActionFilterInclude {
        /**
         * The target branch for pull requests; not applicable for push requests.
         */
        baseRef: string;
        /**
         * Branch for push event; source branch for pull requests.
         */
        headRef: string;
    }

    export interface BuildRunCommitInfo {
        /**
         * Commit hash pertinent to the repository URL and the specified branch.
         */
        commitHash: string;
        /**
         * Name of the repository branch.
         */
        repositoryBranch: string;
        /**
         * Repository URL.
         */
        repositoryUrl: string;
    }

    export interface ConnectionTlsVerifyConfig {
        /**
         * (Updatable) The OCID of Oracle Cloud Infrastructure certificate service CA bundle.
         */
        caCertificateBundleId: string;
        /**
         * (Updatable) The type of TLS verification.
         */
        tlsVerifyMode: string;
    }

    export interface DeployArtifactDeployArtifactSource {
        /**
         * (Updatable) Specifies content for the inline artifact.
         */
        base64encodedContent: string;
        /**
         * (Updatable) The URL of an OCIR repository.
         */
        chartUrl: string;
        /**
         * (Updatable) Specifies the artifact path in the repository.
         */
        deployArtifactPath: string;
        /**
         * (Updatable) Specifies types of artifact sources.
         */
        deployArtifactSourceType: string;
        /**
         * (Updatable) Users can set this as a placeholder value that refers to a pipeline parameter, for example, ${appVersion}.
         */
        deployArtifactVersion: string;
        /**
         * (Updatable) Specifies image digest for the version of the image.
         */
        imageDigest: string;
        /**
         * (Updatable) Specifies OCIR Image Path - optionally include tag.
         */
        imageUri: string;
        /**
         * (Updatable) The OCID of a repository
         */
        repositoryId: string;
    }

    export interface DeployEnvironmentComputeInstanceGroupSelectors {
        /**
         * (Updatable) A list of selectors for the instance group. UNION operator is used for combining the instances selected by each selector.
         */
        items: outputs.DevOps.DeployEnvironmentComputeInstanceGroupSelectorsItem[];
    }

    export interface DeployEnvironmentComputeInstanceGroupSelectorsItem {
        /**
         * (Updatable) Compute instance OCID identifiers that are members of this group.
         */
        computeInstanceIds: string[];
        /**
         * (Updatable) Query expression confirming to the Oracle Cloud Infrastructure Search Language syntax to select compute instances for the group. The language is documented at https://docs.oracle.com/en-us/iaas/Content/Search/Concepts/querysyntax.htm
         */
        query: string;
        /**
         * (Updatable) Region identifier referred by the deployment environment. Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
         */
        region: string;
        /**
         * (Updatable) Defines the type of the instance selector for the group.
         */
        selectorType: string;
    }

    export interface DeployEnvironmentNetworkChannel {
        /**
         * (Updatable) Network channel type.
         */
        networkChannelType: string;
        /**
         * (Updatable) An array of network security group OCIDs.
         */
        nsgIds: string[];
        /**
         * (Updatable) The OCID of the subnet where VNIC resources will be created for private endpoint.
         */
        subnetId: string;
    }

    export interface DeployPipelineDeployPipelineArtifact {
        /**
         * (Updatable) List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.DeployPipelineDeployPipelineArtifactItem[];
    }

    export interface DeployPipelineDeployPipelineArtifactItem {
        /**
         * The OCID of an artifact
         */
        deployArtifactId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.DeployPipelineDeployPipelineArtifactItemDeployPipelineStage[];
        /**
         * (Updatable) Deployment pipeline display name. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface DeployPipelineDeployPipelineArtifactItemDeployPipelineStage {
        /**
         * (Updatable) List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.DeployPipelineDeployPipelineArtifactItemDeployPipelineStageItem[];
    }

    export interface DeployPipelineDeployPipelineArtifactItemDeployPipelineStageItem {
        /**
         * The OCID of a stage
         */
        deployStageId: string;
        /**
         * (Updatable) Deployment pipeline display name. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface DeployPipelineDeployPipelineEnvironment {
        /**
         * (Updatable) List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.DeployPipelineDeployPipelineEnvironmentItem[];
    }

    export interface DeployPipelineDeployPipelineEnvironmentItem {
        /**
         * The OCID of an Environment
         */
        deployEnvironmentId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.DeployPipelineDeployPipelineEnvironmentItemDeployPipelineStage[];
        /**
         * (Updatable) Deployment pipeline display name. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface DeployPipelineDeployPipelineEnvironmentItemDeployPipelineStage {
        /**
         * (Updatable) List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.DeployPipelineDeployPipelineEnvironmentItemDeployPipelineStageItem[];
    }

    export interface DeployPipelineDeployPipelineEnvironmentItemDeployPipelineStageItem {
        /**
         * The OCID of a stage
         */
        deployStageId: string;
        /**
         * (Updatable) Deployment pipeline display name. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface DeployPipelineDeployPipelineParameters {
        /**
         * (Updatable) List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.DeployPipelineDeployPipelineParametersItem[];
    }

    export interface DeployPipelineDeployPipelineParametersItem {
        /**
         * (Updatable) Default value of the parameter.
         */
        defaultValue: string;
        /**
         * (Updatable) Optional description about the deployment pipeline.
         */
        description: string;
        /**
         * (Updatable) Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$.
         */
        name: string;
    }

    export interface DeployStageApprovalPolicy {
        /**
         * (Updatable) Approval policy type.
         */
        approvalPolicyType: string;
        /**
         * (Updatable) A minimum number of approvals required for stage to proceed.
         */
        numberOfApprovalsRequired: number;
    }

    export interface DeployStageBlueBackendIps {
        /**
         * (Updatable) The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: string[];
    }

    export interface DeployStageBlueGreenStrategy {
        /**
         * Name of the Ingress resource.
         */
        ingressName: string;
        /**
         * First Namespace for deployment.
         */
        namespaceA: string;
        /**
         * Second Namespace for deployment.
         */
        namespaceB: string;
        /**
         * Canary strategy type
         */
        strategyType: string;
    }

    export interface DeployStageCanaryStrategy {
        /**
         * Name of the Ingress resource.
         */
        ingressName: string;
        /**
         * (Updatable) Default namespace to be used for Kubernetes deployment when not specified in the manifest.
         */
        namespace: string;
        /**
         * Canary strategy type
         */
        strategyType: string;
    }

    export interface DeployStageDeployStagePredecessorCollection {
        /**
         * (Updatable) The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: outputs.DevOps.DeployStageDeployStagePredecessorCollectionItem[];
    }

    export interface DeployStageDeployStagePredecessorCollectionItem {
        /**
         * (Updatable) The OCID of the predecessor stage. If a stage is the first stage in the pipeline, then the ID is the pipeline's OCID.
         */
        id: string;
    }

    export interface DeployStageFailurePolicy {
        /**
         * (Updatable) The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
         */
        failureCount: number;
        /**
         * (Updatable) The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
         */
        failurePercentage: number;
        /**
         * (Updatable) The type of policy used for rolling out a deployment stage.
         */
        policyType: string;
    }

    export interface DeployStageGreenBackendIps {
        /**
         * (Updatable) The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: string[];
    }

    export interface DeployStageLoadBalancerConfig {
        /**
         * (Updatable) Listen port for the backend server.
         */
        backendPort: number;
        /**
         * (Updatable) Name of the load balancer listener.
         */
        listenerName: string;
        /**
         * (Updatable) The OCID of the load balancer.
         */
        loadBalancerId: string;
        /**
         * The current state of the deployment stage.
         */
        state: string;
    }

    export interface DeployStageProductionLoadBalancerConfig {
        /**
         * (Updatable) Listen port for the backend server.
         */
        backendPort: number;
        /**
         * (Updatable) Name of the load balancer listener.
         */
        listenerName: string;
        /**
         * (Updatable) The OCID of the load balancer.
         */
        loadBalancerId: string;
        /**
         * The current state of the deployment stage.
         */
        state: string;
    }

    export interface DeployStageRollbackPolicy {
        /**
         * (Updatable) The type of policy used for rolling out a deployment stage.
         */
        policyType: string;
    }

    export interface DeployStageRolloutPolicy {
        /**
         * (Updatable) The number that will be used to determine how many instances will be deployed concurrently.
         */
        batchCount: number;
        /**
         * (Updatable) The duration of delay between batch rollout. The default delay is 1 minute.
         */
        batchDelayInSeconds: number;
        /**
         * (Updatable) The percentage that will be used to determine how many instances will be deployed concurrently.
         */
        batchPercentage: number;
        /**
         * (Updatable) The type of policy used for rolling out a deployment stage.
         */
        policyType?: string;
        /**
         * (Updatable) Indicates the criteria to stop.
         */
        rampLimitPercent: number;
    }

    export interface DeployStageTestLoadBalancerConfig {
        /**
         * (Updatable) Listen port for the backend server.
         */
        backendPort: number;
        /**
         * (Updatable) Name of the load balancer listener.
         */
        listenerName: string;
        /**
         * (Updatable) The OCID of the load balancer.
         */
        loadBalancerId: string;
        /**
         * The current state of the deployment stage.
         */
        state: string;
    }

    export interface DeployStageWaitCriteria {
        /**
         * (Updatable) The absolute wait duration. An ISO 8601 formatted duration string. Minimum waitDuration should be 5 seconds. Maximum waitDuration can be up to 2 days.
         */
        waitDuration: string;
        /**
         * (Updatable) Wait criteria type.
         */
        waitType: string;
    }

    export interface DeploymentDeployArtifactOverrideArguments {
        /**
         * List of arguments provided at the time of deployment.
         */
        items: outputs.DevOps.DeploymentDeployArtifactOverrideArgumentsItem[];
    }

    export interface DeploymentDeployArtifactOverrideArgumentsItem {
        /**
         * The OCID of the artifact to which this parameter applies.
         */
        deployArtifactId: string;
        /**
         * Name of the parameter (case-sensitive).
         */
        name: string;
        /**
         * value of the argument.
         */
        value: string;
    }

    export interface DeploymentDeployPipelineArtifact {
        /**
         * List of arguments provided at the time of deployment.
         */
        items: outputs.DevOps.DeploymentDeployPipelineArtifactItem[];
    }

    export interface DeploymentDeployPipelineArtifactItem {
        /**
         * The OCID of the artifact to which this parameter applies.
         */
        deployArtifactId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.DeploymentDeployPipelineArtifactItemDeployPipelineStage[];
        /**
         * (Updatable) Deployment display name. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface DeploymentDeployPipelineArtifactItemDeployPipelineStage {
        /**
         * List of arguments provided at the time of deployment.
         */
        items: outputs.DevOps.DeploymentDeployPipelineArtifactItemDeployPipelineStageItem[];
    }

    export interface DeploymentDeployPipelineArtifactItemDeployPipelineStageItem {
        /**
         * Specifies the OCID of the stage to be redeployed.
         */
        deployStageId: string;
        /**
         * (Updatable) Deployment display name. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface DeploymentDeployPipelineEnvironment {
        /**
         * List of arguments provided at the time of deployment.
         */
        items: outputs.DevOps.DeploymentDeployPipelineEnvironmentItem[];
    }

    export interface DeploymentDeployPipelineEnvironmentItem {
        /**
         * The OCID of an Environment
         */
        deployEnvironmentId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.DeploymentDeployPipelineEnvironmentItemDeployPipelineStage[];
        /**
         * (Updatable) Deployment display name. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface DeploymentDeployPipelineEnvironmentItemDeployPipelineStage {
        /**
         * List of arguments provided at the time of deployment.
         */
        items: outputs.DevOps.DeploymentDeployPipelineEnvironmentItemDeployPipelineStageItem[];
    }

    export interface DeploymentDeployPipelineEnvironmentItemDeployPipelineStageItem {
        /**
         * Specifies the OCID of the stage to be redeployed.
         */
        deployStageId: string;
        /**
         * (Updatable) Deployment display name. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface DeploymentDeploymentArguments {
        /**
         * List of arguments provided at the time of deployment.
         */
        items: outputs.DevOps.DeploymentDeploymentArgumentsItem[];
    }

    export interface DeploymentDeploymentArgumentsItem {
        /**
         * Name of the parameter (case-sensitive).
         */
        name: string;
        /**
         * value of the argument.
         */
        value: string;
    }

    export interface DeploymentDeploymentExecutionProgress {
        /**
         * Map of stage OCIDs to deploy stage execution progress model.
         */
        deployStageExecutionProgress: {[key: string]: any};
        /**
         * Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeFinished: string;
        /**
         * Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeStarted: string;
    }

    export interface GetBuildPipelineBuildPipelineParameter {
        /**
         * List of parameters defined for a build pipeline.
         */
        items: outputs.DevOps.GetBuildPipelineBuildPipelineParameterItem[];
    }

    export interface GetBuildPipelineBuildPipelineParameterItem {
        /**
         * Default value of the parameter.
         */
        defaultValue: string;
        /**
         * Optional description about the build pipeline.
         */
        description: string;
        /**
         * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$. Example: 'Build_Pipeline_param' is not same as 'build_pipeline_Param'
         */
        name: string;
    }

    export interface GetBuildPipelineStageBuildPipelineStagePredecessorCollection {
        /**
         * Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.GetBuildPipelineStageBuildPipelineStagePredecessorCollectionItem[];
    }

    export interface GetBuildPipelineStageBuildPipelineStagePredecessorCollectionItem {
        /**
         * Unique identifier that is immutable on creation.
         */
        id: string;
    }

    export interface GetBuildPipelineStageBuildSourceCollection {
        /**
         * Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.GetBuildPipelineStageBuildSourceCollectionItem[];
    }

    export interface GetBuildPipelineStageBuildSourceCollectionItem {
        /**
         * Branch name.
         */
        branch: string;
        /**
         * Connection identifier pertinent to Bitbucket Server source provider
         */
        connectionId: string;
        /**
         * The type of source provider.
         */
        connectionType: string;
        /**
         * Name of the build source. This must be unique within a build source collection. The name can be used by customers to locate the working directory pertinent to this repository.
         */
        name: string;
        /**
         * The DevOps code repository ID.
         */
        repositoryId: string;
        /**
         * URL for the repository.
         */
        repositoryUrl: string;
    }

    export interface GetBuildPipelineStageDeliverArtifactCollection {
        /**
         * Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.GetBuildPipelineStageDeliverArtifactCollectionItem[];
    }

    export interface GetBuildPipelineStageDeliverArtifactCollectionItem {
        /**
         * Artifact identifier that contains the artifact definition.
         */
        artifactId: string;
        /**
         * Name of the artifact specified in the build_spec.yaml file.
         */
        artifactName: string;
    }

    export interface GetBuildPipelineStagePrivateAccessConfig {
        /**
         * Network channel type.
         */
        networkChannelType: string;
        /**
         * An array of network security group OCIDs.
         */
        nsgIds: string[];
        /**
         * The OCID of the subnet where VNIC resources will be created for private endpoint.
         */
        subnetId: string;
    }

    export interface GetBuildPipelineStageWaitCriteria {
        /**
         * The absolute wait duration. An ISO 8601 formatted duration string. Minimum waitDuration should be 5 seconds. Maximum waitDuration can be up to 2 days.
         */
        waitDuration: string;
        /**
         * Wait criteria type.
         */
        waitType: string;
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollection {
        /**
         * Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.GetBuildPipelineStagesBuildPipelineStageCollectionItem[];
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollectionItem {
        /**
         * The OCID of the parent build pipeline.
         */
        buildPipelineId: string;
        /**
         * The collection containing the predecessors of a stage.
         */
        buildPipelineStagePredecessorCollections: outputs.DevOps.GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollection[];
        /**
         * Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
         */
        buildPipelineStageType: string;
        /**
         * Collection of build sources.
         */
        buildSourceCollection: outputs.DevOps.GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollection;
        /**
         * The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
         */
        buildSpecFile: string;
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * The type of source provider.
         */
        connectionType: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Specifies an array of artifacts that need to be pushed to the artifactory stores.
         */
        deliverArtifactCollection: outputs.DevOps.GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollection;
        /**
         * A target deployment pipeline OCID that will run in this stage.
         */
        deployPipelineId: string;
        /**
         * Optional description about the build stage.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * Image name for the build environment.
         */
        image: string;
        /**
         * A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
         */
        isPassAllParametersEnabled: boolean;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Name of the build source where the build_spec.yml file is located. If not specified, then the first entry in the build source collection is chosen as primary build source.
         */
        primaryBuildSource: string;
        /**
         * Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer's private network.
         */
        privateAccessConfig: outputs.DevOps.GetBuildPipelineStagesBuildPipelineStageCollectionItemPrivateAccessConfig;
        /**
         * The OCID of the DevOps project.
         */
        projectId: string;
        /**
         * Timeout for the build stage execution. Specify value in seconds.
         */
        stageExecutionTimeoutInSeconds: number;
        /**
         * A filter to return the stages that matches the given lifecycle state.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
        /**
         * Specifies wait criteria for the Wait stage.
         */
        waitCriteria: outputs.DevOps.GetBuildPipelineStagesBuildPipelineStageCollectionItemWaitCriteria;
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollection {
        /**
         * Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollectionItem[];
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollectionItem {
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollection {
        /**
         * Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollectionItem[];
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollectionItem {
        /**
         * Branch name.
         */
        branch: string;
        /**
         * Connection identifier pertinent to Bitbucket Server source provider
         */
        connectionId: string;
        /**
         * The type of source provider.
         */
        connectionType: string;
        /**
         * Name of the build source. This must be unique within a build source collection. The name can be used by customers to locate the working directory pertinent to this repository.
         */
        name: string;
        /**
         * The DevOps code repository ID.
         */
        repositoryId: string;
        /**
         * URL for the repository.
         */
        repositoryUrl: string;
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollection {
        /**
         * Collection of artifacts that were generated in the Build stage and need to be pushed to the artifactory stores. In case of UPDATE operation, replaces existing artifacts list. Merging with existing artifacts is not supported.
         */
        items: outputs.DevOps.GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollectionItem[];
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollectionItem {
        /**
         * Artifact identifier that contains the artifact definition.
         */
        artifactId: string;
        /**
         * Name of the artifact specified in the build_spec.yaml file.
         */
        artifactName: string;
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollectionItemPrivateAccessConfig {
        /**
         * Network channel type.
         */
        networkChannelType: string;
        /**
         * An array of network security group OCIDs.
         */
        nsgIds: string[];
        /**
         * The OCID of the subnet where VNIC resources will be created for private endpoint.
         */
        subnetId: string;
    }

    export interface GetBuildPipelineStagesBuildPipelineStageCollectionItemWaitCriteria {
        /**
         * The absolute wait duration. An ISO 8601 formatted duration string. Minimum waitDuration should be 5 seconds. Maximum waitDuration can be up to 2 days.
         */
        waitDuration: string;
        /**
         * Wait criteria type.
         */
        waitType: string;
    }

    export interface GetBuildPipelineStagesFilter {
        /**
         * Name of the build source. This must be unique within a build source collection. The name can be used by customers to locate the working directory pertinent to this repository.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBuildPipelinesBuildPipelineCollection {
        /**
         * List of parameters defined for a build pipeline.
         */
        items: outputs.DevOps.GetBuildPipelinesBuildPipelineCollectionItem[];
    }

    export interface GetBuildPipelinesBuildPipelineCollectionItem {
        /**
         * Specifies list of parameters present in a build pipeline. An UPDATE operation replaces the existing parameters list entirely.
         */
        buildPipelineParameters: outputs.DevOps.GetBuildPipelinesBuildPipelineCollectionItemBuildPipelineParameter[];
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Optional description about the build pipeline.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * unique project identifier
         */
        projectId: string;
        /**
         * A filter to return only build pipelines that matches the given lifecycle state.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the build pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the build pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetBuildPipelinesBuildPipelineCollectionItemBuildPipelineParameter {
        /**
         * List of parameters defined for a build pipeline.
         */
        items: outputs.DevOps.GetBuildPipelinesBuildPipelineCollectionItemBuildPipelineParameterItem[];
    }

    export interface GetBuildPipelinesBuildPipelineCollectionItemBuildPipelineParameterItem {
        /**
         * Default value of the parameter.
         */
        defaultValue: string;
        /**
         * Optional description about the build pipeline.
         */
        description: string;
        /**
         * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$. Example: 'Build_Pipeline_param' is not same as 'build_pipeline_Param'
         */
        name: string;
    }

    export interface GetBuildPipelinesFilter {
        /**
         * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$. Example: 'Build_Pipeline_param' is not same as 'build_pipeline_Param'
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBuildRunBuildOutput {
        /**
         * Specifies the list of artifact override arguments at the time of deployment.
         */
        artifactOverrideParameters: outputs.DevOps.GetBuildRunBuildOutputArtifactOverrideParameter[];
        /**
         * Specifies the list of artifacts delivered through the Deliver Artifacts stage.
         */
        deliveredArtifacts: outputs.DevOps.GetBuildRunBuildOutputDeliveredArtifact[];
        /**
         * Specifies list of exported variables.
         */
        exportedVariables: outputs.DevOps.GetBuildRunBuildOutputExportedVariable[];
        /**
         * List of vulnerability audit summary.
         */
        vulnerabilityAuditSummaryCollections: outputs.DevOps.GetBuildRunBuildOutputVulnerabilityAuditSummaryCollection[];
    }

    export interface GetBuildRunBuildOutputArtifactOverrideParameter {
        /**
         * List of exported variables.
         */
        items: outputs.DevOps.GetBuildRunBuildOutputArtifactOverrideParameterItem[];
    }

    export interface GetBuildRunBuildOutputArtifactOverrideParameterItem {
        /**
         * The OCID of the deployment artifact definition.
         */
        deployArtifactId: string;
        /**
         * Name of the step.
         */
        name: string;
        /**
         * Value of the argument.
         */
        value: string;
    }

    export interface GetBuildRunBuildOutputDeliveredArtifact {
        /**
         * List of exported variables.
         */
        items: outputs.DevOps.GetBuildRunBuildOutputDeliveredArtifactItem[];
    }

    export interface GetBuildRunBuildOutputDeliveredArtifactItem {
        /**
         * The OCID of the artifact registry repository used by the DeliverArtifactStage
         */
        artifactRepositoryId: string;
        /**
         * Type of artifact delivered.
         */
        artifactType: string;
        /**
         * The hash of the container registry artifact pushed by the Deliver Artifacts stage.
         */
        deliveredArtifactHash: string;
        /**
         * The OCID of the artifact pushed by the Deliver Artifacts stage.
         */
        deliveredArtifactId: string;
        /**
         * The OCID of the deployment artifact definition.
         */
        deployArtifactId: string;
        /**
         * The imageUri of the OCIR artifact pushed by the DeliverArtifactStage
         */
        imageUri: string;
        /**
         * Name of the output artifact defined in the build specification file.
         */
        outputArtifactName: string;
        /**
         * Path of the repository where artifact was pushed
         */
        path: string;
        /**
         * Version of the artifact pushed
         */
        version: string;
    }

    export interface GetBuildRunBuildOutputExportedVariable {
        /**
         * List of exported variables.
         */
        items: outputs.DevOps.GetBuildRunBuildOutputExportedVariableItem[];
    }

    export interface GetBuildRunBuildOutputExportedVariableItem {
        /**
         * Name of the step.
         */
        name: string;
        /**
         * Value of the argument.
         */
        value: string;
    }

    export interface GetBuildRunBuildOutputVulnerabilityAuditSummaryCollection {
        /**
         * List of exported variables.
         */
        items: outputs.DevOps.GetBuildRunBuildOutputVulnerabilityAuditSummaryCollectionItem[];
    }

    export interface GetBuildRunBuildOutputVulnerabilityAuditSummaryCollectionItem {
        /**
         * Build stage OCID where scan was configured.
         */
        buildStageId: string;
        /**
         * Commit hash pertinent to the repository URL and the specified branch.
         */
        commitHash: string;
        /**
         * The OCID of the vulnerability audit.
         */
        vulnerabilityAuditId: string;
    }

    export interface GetBuildRunBuildRunArgument {
        /**
         * List of exported variables.
         */
        items: outputs.DevOps.GetBuildRunBuildRunArgumentItem[];
    }

    export interface GetBuildRunBuildRunArgumentItem {
        /**
         * Name of the step.
         */
        name: string;
        /**
         * Value of the argument.
         */
        value: string;
    }

    export interface GetBuildRunBuildRunProgress {
        /**
         * Map of stage OCIDs to build pipeline stage run progress model.
         */
        buildPipelineStageRunProgress: {[key: string]: any};
        /**
         * The time the build run finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeFinished: string;
        /**
         * The time the build run started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeStarted: string;
    }

    export interface GetBuildRunBuildRunSource {
        /**
         * The DevOps code repository identifier that invoked the build run.
         */
        repositoryId: string;
        /**
         * The source from which the build run is triggered.
         */
        sourceType: string;
        /**
         * The trigger that invoked the build run.
         */
        triggerId: string;
        /**
         * Trigger details that need to be used for the BuildRun
         */
        triggerInfos: outputs.DevOps.GetBuildRunBuildRunSourceTriggerInfo[];
    }

    export interface GetBuildRunBuildRunSourceTriggerInfo {
        /**
         * The list of actions that are to be performed for this Trigger
         */
        actions: outputs.DevOps.GetBuildRunBuildRunSourceTriggerInfoAction[];
        /**
         * Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetBuildRunBuildRunSourceTriggerInfoAction {
        /**
         * The OCID of the build pipeline to be triggered.
         */
        buildPipelineId: string;
        /**
         * The filters for the trigger.
         */
        filters: outputs.DevOps.GetBuildRunBuildRunSourceTriggerInfoActionFilter[];
        /**
         * The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
         */
        type: string;
    }

    export interface GetBuildRunBuildRunSourceTriggerInfoActionFilter {
        /**
         * The events, for example, PUSH, PULL_REQUEST_MERGE.
         */
        events: string[];
        /**
         * Attributes to filter GitLab self-hosted server events.
         */
        includes: outputs.DevOps.GetBuildRunBuildRunSourceTriggerInfoActionFilterInclude[];
        /**
         * Source of the trigger. Allowed values are, GITHUB and GITLAB.
         */
        triggerSource: string;
    }

    export interface GetBuildRunBuildRunSourceTriggerInfoActionFilterInclude {
        /**
         * The target branch for pull requests; not applicable for push requests.
         */
        baseRef: string;
        /**
         * Branch for push event; source branch for pull requests.
         */
        headRef: string;
    }

    export interface GetBuildRunCommitInfo {
        /**
         * Commit hash pertinent to the repository URL and the specified branch.
         */
        commitHash: string;
        /**
         * Name of the repository branch.
         */
        repositoryBranch: string;
        /**
         * Repository URL.
         */
        repositoryUrl: string;
    }

    export interface GetBuildRunsBuildRunSummaryCollection {
        /**
         * List of exported variables.
         */
        items: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItem[];
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItem {
        /**
         * Unique build pipeline identifier.
         */
        buildPipelineId: string;
        /**
         * Specifies list of arguments passed along with the build run.
         */
        buildRunArguments: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItemBuildRunArguments;
        buildRunProgressSummaries: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItemBuildRunProgressSummary[];
        /**
         * The source from which the build run is triggered.
         */
        buildRunSources: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItemBuildRunSource[];
        /**
         * Commit details that need to be used for the build run.
         */
        commitInfo: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItemCommitInfo;
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * unique project identifier
         */
        projectId: string;
        /**
         * A filter to return only build runs that matches the given lifecycle state.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItemBuildRunArguments {
        /**
         * List of exported variables.
         */
        items: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItemBuildRunArgumentsItem[];
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItemBuildRunArgumentsItem {
        /**
         * Name of the step.
         */
        name: string;
        /**
         * Value of the argument.
         */
        value: string;
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItemBuildRunProgressSummary {
        /**
         * The time the build run finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeFinished: string;
        /**
         * The time the build run started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeStarted: string;
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItemBuildRunSource {
        /**
         * The DevOps code repository identifier that invoked the build run.
         */
        repositoryId: string;
        /**
         * The source from which the build run is triggered.
         */
        sourceType: string;
        /**
         * Trigger details that need to be used for the BuildRun
         */
        triggerInfos: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfo[];
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfo {
        /**
         * The list of actions that are to be performed for this Trigger
         */
        actions: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfoAction[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * The trigger that invoked the build run.
         */
        triggerId: string;
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfoAction {
        /**
         * Unique build pipeline identifier.
         */
        buildPipelineId: string;
        /**
         * The filters for the trigger.
         */
        filters: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfoActionFilter[];
        /**
         * The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
         */
        type: string;
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfoActionFilter {
        /**
         * The events, for example, PUSH, PULL_REQUEST_MERGE.
         */
        events: string[];
        /**
         * Attributes to filter GitLab self-hosted server events.
         */
        includes: outputs.DevOps.GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfoActionFilterInclude[];
        /**
         * Source of the trigger. Allowed values are, GITHUB and GITLAB.
         */
        triggerSource: string;
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfoActionFilterInclude {
        /**
         * The target branch for pull requests; not applicable for push requests.
         */
        baseRef: string;
        /**
         * Branch for push event; source branch for pull requests.
         */
        headRef: string;
    }

    export interface GetBuildRunsBuildRunSummaryCollectionItemCommitInfo {
        /**
         * Commit hash pertinent to the repository URL and the specified branch.
         */
        commitHash: string;
        /**
         * Name of the repository branch.
         */
        repositoryBranch: string;
        /**
         * Repository URL.
         */
        repositoryUrl: string;
    }

    export interface GetBuildRunsFilter {
        /**
         * Name of the step.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetConnectionTlsVerifyConfig {
        /**
         * The OCID of Oracle Cloud Infrastructure certificate service CA bundle.
         */
        caCertificateBundleId: string;
        /**
         * The type of TLS verification.
         */
        tlsVerifyMode: string;
    }

    export interface GetConnectionsConnectionCollection {
        items: outputs.DevOps.GetConnectionsConnectionCollectionItem[];
    }

    export interface GetConnectionsConnectionCollectionItem {
        /**
         * The OCID of personal access token saved in secret store.
         */
        accessToken: string;
        /**
         * OCID of personal Bitbucket Cloud AppPassword saved in secret store
         */
        appPassword: string;
        /**
         * The Base URL of the hosted BitbucketServer.
         */
        baseUrl: string;
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * A filter to return only resources that match the given connection type.
         */
        connectionType: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Optional description about the connection.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * unique project identifier
         */
        projectId: string;
        /**
         * A filter to return only connections that matches the given lifecycle state.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the connection was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the connection was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
        /**
         * TLS configuration used by build service to verify TLS connection.
         */
        tlsVerifyConfigs: outputs.DevOps.GetConnectionsConnectionCollectionItemTlsVerifyConfig[];
        /**
         * Public Bitbucket Cloud Username in plain text
         */
        username: string;
    }

    export interface GetConnectionsConnectionCollectionItemTlsVerifyConfig {
        /**
         * The OCID of Oracle Cloud Infrastructure certificate service CA bundle.
         */
        caCertificateBundleId: string;
        /**
         * The type of TLS verification.
         */
        tlsVerifyMode: string;
    }

    export interface GetConnectionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDeployArtifactDeployArtifactSource {
        /**
         * Specifies content for the inline artifact.
         */
        base64encodedContent: string;
        /**
         * The URL of an OCIR repository.
         */
        chartUrl: string;
        /**
         * Specifies the artifact path in the repository.
         */
        deployArtifactPath: string;
        /**
         * Specifies types of artifact sources.
         */
        deployArtifactSourceType: string;
        /**
         * Users can set this as a placeholder value that refers to a pipeline parameter, for example, ${appVersion}.
         */
        deployArtifactVersion: string;
        /**
         * Specifies image digest for the version of the image.
         */
        imageDigest: string;
        /**
         * Specifies OCIR Image Path - optionally include tag.
         */
        imageUri: string;
        /**
         * The OCID of a repository
         */
        repositoryId: string;
    }

    export interface GetDeployArtifactsDeployArtifactCollection {
        items: outputs.DevOps.GetDeployArtifactsDeployArtifactCollectionItem[];
    }

    export interface GetDeployArtifactsDeployArtifactCollectionItem {
        /**
         * Mode for artifact parameter substitution.
         */
        argumentSubstitutionMode: string;
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Specifies source of an artifact.
         */
        deployArtifactSources: outputs.DevOps.GetDeployArtifactsDeployArtifactCollectionItemDeployArtifactSource[];
        /**
         * Type of the deployment artifact.
         */
        deployArtifactType: string;
        /**
         * Optional description about the artifact to be deployed.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * unique project identifier
         */
        projectId: string;
        /**
         * A filter to return only DeployArtifacts that matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetDeployArtifactsDeployArtifactCollectionItemDeployArtifactSource {
        /**
         * Specifies content for the inline artifact.
         */
        base64encodedContent: string;
        /**
         * The URL of an OCIR repository.
         */
        chartUrl: string;
        /**
         * Specifies the artifact path in the repository.
         */
        deployArtifactPath: string;
        /**
         * Specifies types of artifact sources.
         */
        deployArtifactSourceType: string;
        /**
         * Users can set this as a placeholder value that refers to a pipeline parameter, for example, ${appVersion}.
         */
        deployArtifactVersion: string;
        /**
         * Specifies image digest for the version of the image.
         */
        imageDigest: string;
        /**
         * Specifies OCIR Image Path - optionally include tag.
         */
        imageUri: string;
        /**
         * The OCID of a repository
         */
        repositoryId: string;
    }

    export interface GetDeployArtifactsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDeployEnvironmentComputeInstanceGroupSelector {
        /**
         * A list of selectors for the instance group. UNION operator is used for combining the instances selected by each selector.
         */
        items: outputs.DevOps.GetDeployEnvironmentComputeInstanceGroupSelectorItem[];
    }

    export interface GetDeployEnvironmentComputeInstanceGroupSelectorItem {
        /**
         * Compute instance OCID identifiers that are members of this group.
         */
        computeInstanceIds: string[];
        /**
         * Query expression confirming to the Oracle Cloud Infrastructure Search Language syntax to select compute instances for the group. The language is documented at https://docs.oracle.com/en-us/iaas/Content/Search/Concepts/querysyntax.htm
         */
        query: string;
        /**
         * Region identifier referred by the deployment environment. Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
         */
        region: string;
        /**
         * Defines the type of the instance selector for the group.
         */
        selectorType: string;
    }

    export interface GetDeployEnvironmentNetworkChannel {
        /**
         * Network channel type.
         */
        networkChannelType: string;
        /**
         * An array of network security group OCIDs.
         */
        nsgIds: string[];
        /**
         * The OCID of the subnet where VNIC resources will be created for private endpoint.
         */
        subnetId: string;
    }

    export interface GetDeployEnvironmentsDeployEnvironmentCollection {
        /**
         * A list of selectors for the instance group. UNION operator is used for combining the instances selected by each selector.
         */
        items: outputs.DevOps.GetDeployEnvironmentsDeployEnvironmentCollectionItem[];
    }

    export interface GetDeployEnvironmentsDeployEnvironmentCollectionItem {
        /**
         * The OCID of the Kubernetes cluster.
         */
        clusterId: string;
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * A collection of selectors. The combination of instances matching the selectors are included in the instance group.
         */
        computeInstanceGroupSelectors: outputs.DevOps.GetDeployEnvironmentsDeployEnvironmentCollectionItemComputeInstanceGroupSelector[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Deployment environment type.
         */
        deployEnvironmentType: string;
        /**
         * Optional description about the deployment environment.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Function.
         */
        functionId: string;
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer's private network.
         */
        networkChannels: outputs.DevOps.GetDeployEnvironmentsDeployEnvironmentCollectionItemNetworkChannel[];
        /**
         * unique project identifier
         */
        projectId: string;
        /**
         * A filter to return only DeployEnvironments that matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Time the deployment environment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Time the deployment environment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetDeployEnvironmentsDeployEnvironmentCollectionItemComputeInstanceGroupSelector {
        /**
         * A list of selectors for the instance group. UNION operator is used for combining the instances selected by each selector.
         */
        items: outputs.DevOps.GetDeployEnvironmentsDeployEnvironmentCollectionItemComputeInstanceGroupSelectorItem[];
    }

    export interface GetDeployEnvironmentsDeployEnvironmentCollectionItemComputeInstanceGroupSelectorItem {
        /**
         * Compute instance OCID identifiers that are members of this group.
         */
        computeInstanceIds: string[];
        /**
         * Query expression confirming to the Oracle Cloud Infrastructure Search Language syntax to select compute instances for the group. The language is documented at https://docs.oracle.com/en-us/iaas/Content/Search/Concepts/querysyntax.htm
         */
        query: string;
        /**
         * Region identifier referred by the deployment environment. Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
         */
        region: string;
        /**
         * Defines the type of the instance selector for the group.
         */
        selectorType: string;
    }

    export interface GetDeployEnvironmentsDeployEnvironmentCollectionItemNetworkChannel {
        /**
         * Network channel type.
         */
        networkChannelType: string;
        /**
         * An array of network security group OCIDs.
         */
        nsgIds: string[];
        /**
         * The OCID of the subnet where VNIC resources will be created for private endpoint.
         */
        subnetId: string;
    }

    export interface GetDeployEnvironmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDeployPipelineDeployPipelineArtifact {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelineDeployPipelineArtifactItem[];
    }

    export interface GetDeployPipelineDeployPipelineArtifactItem {
        /**
         * The OCID of an artifact
         */
        deployArtifactId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.GetDeployPipelineDeployPipelineArtifactItemDeployPipelineStage[];
        /**
         * Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetDeployPipelineDeployPipelineArtifactItemDeployPipelineStage {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelineDeployPipelineArtifactItemDeployPipelineStageItem[];
    }

    export interface GetDeployPipelineDeployPipelineArtifactItemDeployPipelineStageItem {
        /**
         * The OCID of a stage
         */
        deployStageId: string;
        /**
         * Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetDeployPipelineDeployPipelineEnvironment {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelineDeployPipelineEnvironmentItem[];
    }

    export interface GetDeployPipelineDeployPipelineEnvironmentItem {
        /**
         * The OCID of an Environment
         */
        deployEnvironmentId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.GetDeployPipelineDeployPipelineEnvironmentItemDeployPipelineStage[];
        /**
         * Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetDeployPipelineDeployPipelineEnvironmentItemDeployPipelineStage {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelineDeployPipelineEnvironmentItemDeployPipelineStageItem[];
    }

    export interface GetDeployPipelineDeployPipelineEnvironmentItemDeployPipelineStageItem {
        /**
         * The OCID of a stage
         */
        deployStageId: string;
        /**
         * Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetDeployPipelineDeployPipelineParameter {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelineDeployPipelineParameterItem[];
    }

    export interface GetDeployPipelineDeployPipelineParameterItem {
        /**
         * Default value of the parameter.
         */
        defaultValue: string;
        /**
         * Optional description about the deployment pipeline.
         */
        description: string;
        /**
         * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$.
         */
        name: string;
    }

    export interface GetDeployPipelinesDeployPipelineCollection {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItem[];
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItem {
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * List of all artifacts used in the pipeline.
         */
        deployPipelineArtifacts: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifact[];
        /**
         * List of all environments used in the pipeline.
         */
        deployPipelineEnvironments: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironment[];
        /**
         * Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
         */
        deployPipelineParameters: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameter[];
        /**
         * Optional description about the deployment pipeline.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * unique project identifier
         */
        projectId: string;
        /**
         * A filter to return only DeployPipelines that matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifact {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactItem[];
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactItem {
        /**
         * The OCID of an artifact
         */
        deployArtifactId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactItemDeployPipelineStage[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactItemDeployPipelineStage {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactItemDeployPipelineStageItem[];
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactItemDeployPipelineStageItem {
        /**
         * The OCID of a stage
         */
        deployStageId: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironment {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentItem[];
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentItem {
        /**
         * The OCID of an Environment
         */
        deployEnvironmentId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentItemDeployPipelineStage[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentItemDeployPipelineStage {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentItemDeployPipelineStageItem[];
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentItemDeployPipelineStageItem {
        /**
         * The OCID of a stage
         */
        deployStageId: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameter {
        /**
         * List of parameters defined for a deployment pipeline.
         */
        items: outputs.DevOps.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameterItem[];
    }

    export interface GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameterItem {
        /**
         * Default value of the parameter.
         */
        defaultValue: string;
        /**
         * Optional description about the deployment pipeline.
         */
        description: string;
        /**
         * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$.
         */
        name: string;
    }

    export interface GetDeployPipelinesFilter {
        /**
         * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDeployStageApprovalPolicy {
        /**
         * Approval policy type.
         */
        approvalPolicyType: string;
        /**
         * A minimum number of approvals required for stage to proceed.
         */
        numberOfApprovalsRequired: number;
    }

    export interface GetDeployStageBlueBackendIp {
        /**
         * The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: string[];
    }

    export interface GetDeployStageBlueGreenStrategy {
        /**
         * Name of the Ingress resource.
         */
        ingressName: string;
        /**
         * First Namespace for deployment.
         */
        namespaceA: string;
        /**
         * Second Namespace for deployment.
         */
        namespaceB: string;
        /**
         * Canary strategy type
         */
        strategyType: string;
    }

    export interface GetDeployStageCanaryStrategy {
        /**
         * Name of the Ingress resource.
         */
        ingressName: string;
        /**
         * Default Namespace to be used for Kubernetes deployment when not specified in the manifest.
         */
        namespace: string;
        /**
         * Canary strategy type
         */
        strategyType: string;
    }

    export interface GetDeployStageDeployStagePredecessorCollection {
        /**
         * The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: outputs.DevOps.GetDeployStageDeployStagePredecessorCollectionItem[];
    }

    export interface GetDeployStageDeployStagePredecessorCollectionItem {
        /**
         * Unique identifier that is immutable on creation.
         */
        id: string;
    }

    export interface GetDeployStageFailurePolicy {
        /**
         * The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
         */
        failureCount: number;
        /**
         * The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
         */
        failurePercentage: number;
        /**
         * The type of policy used for rolling out a deployment stage.
         */
        policyType: string;
    }

    export interface GetDeployStageGreenBackendIp {
        /**
         * The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: string[];
    }

    export interface GetDeployStageLoadBalancerConfig {
        /**
         * Listen port for the backend server.
         */
        backendPort: number;
        /**
         * Name of the load balancer listener.
         */
        listenerName: string;
        /**
         * The OCID of the load balancer.
         */
        loadBalancerId: string;
        /**
         * The current state of the deployment stage.
         */
        state: string;
    }

    export interface GetDeployStageProductionLoadBalancerConfig {
        /**
         * Listen port for the backend server.
         */
        backendPort: number;
        /**
         * Name of the load balancer listener.
         */
        listenerName: string;
        /**
         * The OCID of the load balancer.
         */
        loadBalancerId: string;
        /**
         * The current state of the deployment stage.
         */
        state: string;
    }

    export interface GetDeployStageRollbackPolicy {
        /**
         * The type of policy used for rolling out a deployment stage.
         */
        policyType: string;
    }

    export interface GetDeployStageRolloutPolicy {
        /**
         * The number that will be used to determine how many instances will be deployed concurrently.
         */
        batchCount: number;
        /**
         * The duration of delay between batch rollout. The default delay is 1 minute.
         */
        batchDelayInSeconds: number;
        /**
         * The percentage that will be used to determine how many instances will be deployed concurrently.
         */
        batchPercentage: number;
        /**
         * The type of policy used for rolling out a deployment stage.
         */
        policyType: string;
        /**
         * Indicates the criteria to stop.
         */
        rampLimitPercent: number;
    }

    export interface GetDeployStageTestLoadBalancerConfig {
        /**
         * Listen port for the backend server.
         */
        backendPort: number;
        /**
         * Name of the load balancer listener.
         */
        listenerName: string;
        /**
         * The OCID of the load balancer.
         */
        loadBalancerId: string;
        /**
         * The current state of the deployment stage.
         */
        state: string;
    }

    export interface GetDeployStageWaitCriteria {
        /**
         * The absolute wait duration. An ISO 8601 formatted duration string. Minimum waitDuration should be 5 seconds. Maximum waitDuration can be up to 2 days.
         */
        waitDuration: string;
        /**
         * Wait criteria type.
         */
        waitType: string;
    }

    export interface GetDeployStagesDeployStageCollection {
        /**
         * The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: outputs.DevOps.GetDeployStagesDeployStageCollectionItem[];
    }

    export interface GetDeployStagesDeployStageCollectionItem {
        /**
         * Specifies the approval policy.
         */
        approvalPolicies: outputs.DevOps.GetDeployStagesDeployStageCollectionItemApprovalPolicy[];
        /**
         * Collection of backend environment IP addresses.
         */
        blueBackendIps: outputs.DevOps.GetDeployStagesDeployStageCollectionItemBlueBackendIp[];
        /**
         * Specifies the required blue green release strategy for OKE deployment.
         */
        blueGreenStrategies: outputs.DevOps.GetDeployStagesDeployStageCollectionItemBlueGreenStrategy[];
        /**
         * Specifies the required canary release strategy for OKE deployment.
         */
        canaryStrategies: outputs.DevOps.GetDeployStagesDeployStageCollectionItemCanaryStrategy[];
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * The OCID of the upstream compute instance group blue-green deployment stage in this pipeline.
         */
        computeInstanceGroupBlueGreenDeploymentDeployStageId: string;
        /**
         * The OCID of an upstream compute instance group canary deployment stage ID in this pipeline.
         */
        computeInstanceGroupCanaryDeployStageId: string;
        /**
         * A compute instance group canary traffic shift stage OCID for load balancer.
         */
        computeInstanceGroupCanaryTrafficShiftDeployStageId: string;
        /**
         * A compute instance group environment OCID for rolling deployment.
         */
        computeInstanceGroupDeployEnvironmentId: string;
        /**
         * User provided key and value pair configuration, which is assigned through constants or parameter.
         */
        config: {[key: string]: any};
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Optional artifact OCID. The artifact will be included in the body for the function invocation during the stage's execution. If the DeployArtifact.argumentSubstituitionMode is set to SUBSTITUTE_PLACEHOLDERS, then the pipeline parameter values will be used to replace the placeholders in the artifact content.
         */
        deployArtifactId: string;
        /**
         * The list of file artifact OCIDs to deploy.
         */
        deployArtifactIds: string[];
        /**
         * First compute instance group environment OCID for deployment.
         */
        deployEnvironmentIdA: string;
        /**
         * Second compute instance group environment OCID for deployment.
         */
        deployEnvironmentIdB: string;
        /**
         * The ID of the parent pipeline.
         */
        deployPipelineId: string;
        /**
         * Collection containing the predecessors of a stage.
         */
        deployStagePredecessorCollections: outputs.DevOps.GetDeployStagesDeployStageCollectionItemDeployStagePredecessorCollection[];
        /**
         * Deployment stage type.
         */
        deployStageType: string;
        /**
         * The OCID of the artifact that contains the deployment specification.
         */
        deploymentSpecDeployArtifactId: string;
        /**
         * Optional description about the deployment stage.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * A Docker image artifact OCID.
         */
        dockerImageDeployArtifactId: string;
        /**
         * Specifies a failure policy for a compute instance group rolling deployment stage.
         */
        failurePolicies: outputs.DevOps.GetDeployStagesDeployStageCollectionItemFailurePolicy[];
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Function environment OCID.
         */
        functionDeployEnvironmentId: string;
        /**
         * Timeout for execution of the Function. Value in seconds.
         */
        functionTimeoutInSeconds: number;
        /**
         * Collection of backend environment IP addresses.
         */
        greenBackendIps: outputs.DevOps.GetDeployStagesDeployStageCollectionItemGreenBackendIp[];
        /**
         * Helm chart artifact OCID.
         */
        helmChartDeployArtifactId: string;
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * A boolean flag specifies whether this stage executes asynchronously.
         */
        isAsync: boolean;
        /**
         * A boolean flag specifies whether the invoked function must be validated.
         */
        isValidationEnabled: boolean;
        /**
         * List of Kubernetes manifest artifact OCIDs.
         */
        kubernetesManifestDeployArtifactIds: string[];
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
         */
        loadBalancerConfigs: outputs.DevOps.GetDeployStagesDeployStageCollectionItemLoadBalancerConfig[];
        /**
         * Maximum usable memory for the Function (in MB).
         */
        maxMemoryInMbs: string;
        /**
         * Default Namespace to be used for Kubernetes deployment when not specified in the manifest.
         */
        namespace: string;
        /**
         * The OCID of the upstream OKE blue-green deployment stage in this pipeline.
         */
        okeBlueGreenDeployStageId: string;
        /**
         * The OCID of an upstream OKE canary deployment stage in this pipeline.
         */
        okeCanaryDeployStageId: string;
        /**
         * The OCID of an upstream OKE canary deployment traffic shift stage in this pipeline.
         */
        okeCanaryTrafficShiftDeployStageId: string;
        /**
         * Kubernetes cluster environment OCID for deployment.
         */
        okeClusterDeployEnvironmentId: string;
        /**
         * Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
         */
        productionLoadBalancerConfigs: outputs.DevOps.GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig[];
        /**
         * The OCID of a project.
         */
        projectId: string;
        /**
         * Release name of the Helm chart.
         */
        releaseName: string;
        /**
         * Specifies the rollback policy. This is initiated on the failure of certain stage types.
         */
        rollbackPolicies: outputs.DevOps.GetDeployStagesDeployStageCollectionItemRollbackPolicy[];
        /**
         * Description of rollout policy for load balancer traffic shift stage.
         */
        rolloutPolicies: outputs.DevOps.GetDeployStagesDeployStageCollectionItemRolloutPolicy[];
        /**
         * A filter to return only deployment stages that matches the given lifecycle state.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
         */
        testLoadBalancerConfigs: outputs.DevOps.GetDeployStagesDeployStageCollectionItemTestLoadBalancerConfig[];
        /**
         * Time the deployment stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Time the deployment stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
        /**
         * Time to wait for execution of a helm stage. Defaults to 300 seconds.
         */
        timeoutInSeconds: number;
        /**
         * Specifies the target or destination backend set.
         */
        trafficShiftTarget: string;
        /**
         * List of values.yaml file artifact OCIDs.
         */
        valuesArtifactIds: string[];
        /**
         * Specifies wait criteria for the Wait stage.
         */
        waitCriterias: outputs.DevOps.GetDeployStagesDeployStageCollectionItemWaitCriteria[];
    }

    export interface GetDeployStagesDeployStageCollectionItemApprovalPolicy {
        /**
         * Approval policy type.
         */
        approvalPolicyType: string;
        /**
         * A minimum number of approvals required for stage to proceed.
         */
        numberOfApprovalsRequired: number;
    }

    export interface GetDeployStagesDeployStageCollectionItemBlueBackendIp {
        /**
         * The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: string[];
    }

    export interface GetDeployStagesDeployStageCollectionItemBlueGreenStrategy {
        /**
         * Name of the Ingress resource.
         */
        ingressName: string;
        /**
         * First Namespace for deployment.
         */
        namespaceA: string;
        /**
         * Second Namespace for deployment.
         */
        namespaceB: string;
        /**
         * Canary strategy type
         */
        strategyType: string;
    }

    export interface GetDeployStagesDeployStageCollectionItemCanaryStrategy {
        /**
         * Name of the Ingress resource.
         */
        ingressName: string;
        /**
         * Default Namespace to be used for Kubernetes deployment when not specified in the manifest.
         */
        namespace: string;
        /**
         * Canary strategy type
         */
        strategyType: string;
    }

    export interface GetDeployStagesDeployStageCollectionItemDeployStagePredecessorCollection {
        /**
         * The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: outputs.DevOps.GetDeployStagesDeployStageCollectionItemDeployStagePredecessorCollectionItem[];
    }

    export interface GetDeployStagesDeployStageCollectionItemDeployStagePredecessorCollectionItem {
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
    }

    export interface GetDeployStagesDeployStageCollectionItemFailurePolicy {
        /**
         * The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
         */
        failureCount: number;
        /**
         * The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
         */
        failurePercentage: number;
        /**
         * The type of policy used for rolling out a deployment stage.
         */
        policyType: string;
    }

    export interface GetDeployStagesDeployStageCollectionItemGreenBackendIp {
        /**
         * The IP address of the backend server. A server could be a compute instance or a load balancer.
         */
        items: string[];
    }

    export interface GetDeployStagesDeployStageCollectionItemLoadBalancerConfig {
        /**
         * Listen port for the backend server.
         */
        backendPort: number;
        /**
         * Name of the load balancer listener.
         */
        listenerName: string;
        /**
         * The OCID of the load balancer.
         */
        loadBalancerId: string;
        /**
         * A filter to return only deployment stages that matches the given lifecycle state.
         */
        state: string;
    }

    export interface GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig {
        /**
         * Listen port for the backend server.
         */
        backendPort: number;
        /**
         * Name of the load balancer listener.
         */
        listenerName: string;
        /**
         * The OCID of the load balancer.
         */
        loadBalancerId: string;
        /**
         * A filter to return only deployment stages that matches the given lifecycle state.
         */
        state: string;
    }

    export interface GetDeployStagesDeployStageCollectionItemRollbackPolicy {
        /**
         * The type of policy used for rolling out a deployment stage.
         */
        policyType: string;
    }

    export interface GetDeployStagesDeployStageCollectionItemRolloutPolicy {
        /**
         * The number that will be used to determine how many instances will be deployed concurrently.
         */
        batchCount: number;
        /**
         * The duration of delay between batch rollout. The default delay is 1 minute.
         */
        batchDelayInSeconds: number;
        /**
         * The percentage that will be used to determine how many instances will be deployed concurrently.
         */
        batchPercentage: number;
        /**
         * The type of policy used for rolling out a deployment stage.
         */
        policyType: string;
        /**
         * Indicates the criteria to stop.
         */
        rampLimitPercent: number;
    }

    export interface GetDeployStagesDeployStageCollectionItemTestLoadBalancerConfig {
        /**
         * Listen port for the backend server.
         */
        backendPort: number;
        /**
         * Name of the load balancer listener.
         */
        listenerName: string;
        /**
         * The OCID of the load balancer.
         */
        loadBalancerId: string;
        /**
         * A filter to return only deployment stages that matches the given lifecycle state.
         */
        state: string;
    }

    export interface GetDeployStagesDeployStageCollectionItemWaitCriteria {
        /**
         * The absolute wait duration. An ISO 8601 formatted duration string. Minimum waitDuration should be 5 seconds. Maximum waitDuration can be up to 2 days.
         */
        waitDuration: string;
        /**
         * Wait criteria type.
         */
        waitType: string;
    }

    export interface GetDeployStagesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDeploymentDeployArtifactOverrideArgument {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentDeployArtifactOverrideArgumentItem[];
    }

    export interface GetDeploymentDeployArtifactOverrideArgumentItem {
        /**
         * The OCID of an artifact
         */
        deployArtifactId: string;
        /**
         * Name of the step.
         */
        name: string;
        /**
         * value of the argument.
         */
        value: string;
    }

    export interface GetDeploymentDeployPipelineArtifact {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentDeployPipelineArtifactItem[];
    }

    export interface GetDeploymentDeployPipelineArtifactItem {
        /**
         * The OCID of an artifact
         */
        deployArtifactId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.GetDeploymentDeployPipelineArtifactItemDeployPipelineStage[];
        /**
         * Deployment identifier which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetDeploymentDeployPipelineArtifactItemDeployPipelineStage {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentDeployPipelineArtifactItemDeployPipelineStageItem[];
    }

    export interface GetDeploymentDeployPipelineArtifactItemDeployPipelineStageItem {
        /**
         * The OCID of the stage.
         */
        deployStageId: string;
        /**
         * Deployment identifier which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetDeploymentDeployPipelineEnvironment {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentDeployPipelineEnvironmentItem[];
    }

    export interface GetDeploymentDeployPipelineEnvironmentItem {
        /**
         * The OCID of an Environment
         */
        deployEnvironmentId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.GetDeploymentDeployPipelineEnvironmentItemDeployPipelineStage[];
        /**
         * Deployment identifier which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetDeploymentDeployPipelineEnvironmentItemDeployPipelineStage {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentDeployPipelineEnvironmentItemDeployPipelineStageItem[];
    }

    export interface GetDeploymentDeployPipelineEnvironmentItemDeployPipelineStageItem {
        /**
         * The OCID of the stage.
         */
        deployStageId: string;
        /**
         * Deployment identifier which can be renamed and is not necessarily unique. Avoid entering confidential information.
         */
        displayName: string;
    }

    export interface GetDeploymentDeploymentArgument {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentDeploymentArgumentItem[];
    }

    export interface GetDeploymentDeploymentArgumentItem {
        /**
         * Name of the step.
         */
        name: string;
        /**
         * value of the argument.
         */
        value: string;
    }

    export interface GetDeploymentDeploymentExecutionProgress {
        /**
         * Map of stage OCIDs to deploy stage execution progress model.
         */
        deployStageExecutionProgress: {[key: string]: any};
        /**
         * Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeFinished: string;
        /**
         * Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeStarted: string;
    }

    export interface GetDeploymentsDeploymentCollection {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentsDeploymentCollectionItem[];
    }

    export interface GetDeploymentsDeploymentCollectionItem {
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Specifies the list of artifact override arguments at the time of deployment.
         */
        deployArtifactOverrideArguments: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgument[];
        /**
         * List of all artifacts used in the pipeline.
         */
        deployPipelineArtifacts: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployPipelineArtifact[];
        /**
         * List of all environments used in the pipeline.
         */
        deployPipelineEnvironments: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironment[];
        /**
         * The ID of the parent pipeline.
         */
        deployPipelineId: string;
        /**
         * The OCID of the stage.
         */
        deployStageId: string;
        /**
         * Specifies list of arguments passed along with the deployment.
         */
        deploymentArguments: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeploymentArgument[];
        /**
         * The execution progress details of a deployment.
         */
        deploymentExecutionProgresses: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeploymentExecutionProgress[];
        /**
         * Specifies type of Deployment
         */
        deploymentType: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Specifies the OCID of the previous deployment to be redeployed.
         */
        previousDeploymentId: string;
        /**
         * unique project identifier
         */
        projectId: string;
        /**
         * A filter to return only Deployments that matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgument {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgumentItem[];
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgumentItem {
        /**
         * The OCID of an artifact
         */
        deployArtifactId: string;
        /**
         * Name of the step.
         */
        name: string;
        /**
         * value of the argument.
         */
        value: string;
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployPipelineArtifact {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployPipelineArtifactItem[];
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployPipelineArtifactItem {
        /**
         * The OCID of an artifact
         */
        deployArtifactId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployPipelineArtifactItemDeployPipelineStage[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployPipelineArtifactItemDeployPipelineStage {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployPipelineArtifactItemDeployPipelineStageItem[];
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployPipelineArtifactItemDeployPipelineStageItem {
        /**
         * The OCID of the stage.
         */
        deployStageId: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironment {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentItem[];
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentItem {
        /**
         * The OCID of an Environment
         */
        deployEnvironmentId: string;
        /**
         * List of stages.
         */
        deployPipelineStages: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentItemDeployPipelineStage[];
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentItemDeployPipelineStage {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentItemDeployPipelineStageItem[];
    }

    export interface GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentItemDeployPipelineStageItem {
        /**
         * The OCID of the stage.
         */
        deployStageId: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
    }

    export interface GetDeploymentsDeploymentCollectionItemDeploymentArgument {
        /**
         * A list of stage predecessors for a stage.
         */
        items: outputs.DevOps.GetDeploymentsDeploymentCollectionItemDeploymentArgumentItem[];
    }

    export interface GetDeploymentsDeploymentCollectionItemDeploymentArgumentItem {
        /**
         * Name of the step.
         */
        name: string;
        /**
         * value of the argument.
         */
        value: string;
    }

    export interface GetDeploymentsDeploymentCollectionItemDeploymentExecutionProgress {
        /**
         * Map of stage OCIDs to deploy stage execution progress model.
         */
        deployStageExecutionProgress: {[key: string]: any};
        /**
         * Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeFinished: string;
        /**
         * Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeStarted: string;
    }

    export interface GetDeploymentsFilter {
        /**
         * Name of the step.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProjectNotificationConfig {
        /**
         * The topic ID for notifications.
         */
        topicId: string;
    }

    export interface GetProjectsFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProjectsProjectCollection {
        items: outputs.DevOps.GetProjectsProjectCollectionItem[];
    }

    export interface GetProjectsProjectCollectionItem {
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Project description.
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier or OCID for listing a single resource by ID.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * Namespace associated with the project.
         */
        namespace: string;
        /**
         * Notification configuration for the project.
         */
        notificationConfigs: outputs.DevOps.GetProjectsProjectCollectionItemNotificationConfig[];
        /**
         * A filter to return only Projects that matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Time the project was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Time the project was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetProjectsProjectCollectionItemNotificationConfig {
        /**
         * The topic ID for notifications.
         */
        topicId: string;
    }

    export interface GetRepoFileLineLine {
        /**
         * The content of the line.
         */
        lineContent: string;
        /**
         * The line number.
         */
        lineNumber: number;
    }

    export interface GetRepositoriesFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRepositoriesRepositoryCollection {
        items: outputs.DevOps.GetRepositoriesRepositoryCollectionItem[];
    }

    export interface GetRepositoriesRepositoryCollectionItem {
        /**
         * The count of the branches present in the repository.
         */
        branchCount: number;
        /**
         * The count of the commits present in the repository.
         */
        commitCount: number;
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * The default branch of the repository.
         */
        defaultBranch: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Details of the repository. Avoid entering confidential information.
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * HTTP URL that you use to git clone, pull and push.
         */
        httpUrl: string;
        /**
         * The OCID of the repository. This value is unique and immutable.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecyleDetails: string;
        /**
         * Configuration information for mirroring the repository.
         */
        mirrorRepositoryConfigs: outputs.DevOps.GetRepositoriesRepositoryCollectionItemMirrorRepositoryConfig[];
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * Tenancy unique namespace.
         */
        namespace: string;
        /**
         * unique project identifier
         */
        projectId: string;
        /**
         * Unique project name in a namespace.
         */
        projectName: string;
        /**
         * Type of repository: MIRRORED - Repository created by mirroring an existing repository. HOSTED - Repository created and hosted using Oracle Cloud Infrastructure DevOps code repository.
         */
        repositoryType: string;
        /**
         * The size of the repository in bytes.
         */
        sizeInBytes: string;
        /**
         * SSH URL that you use to git clone, pull and push.
         */
        sshUrl: string;
        /**
         * A filter to return only resources whose lifecycle state matches the given lifecycle state.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the repository was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the repository was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
        /**
         * Trigger build events supported for this repository: PUSH - Build is triggered when a push event occurs. COMMIT_UPDATES - Build is triggered when new commits are mirrored into a repository.
         */
        triggerBuildEvents: string[];
    }

    export interface GetRepositoriesRepositoryCollectionItemMirrorRepositoryConfig {
        /**
         * Upstream git repository connection identifer.
         */
        connectorId: string;
        /**
         * URL of external repository you want to mirror.
         */
        repositoryUrl: string;
        /**
         * Specifies a trigger schedule. Timing information for when to initiate automated syncs.
         */
        triggerSchedules: outputs.DevOps.GetRepositoriesRepositoryCollectionItemMirrorRepositoryConfigTriggerSchedule[];
    }

    export interface GetRepositoriesRepositoryCollectionItemMirrorRepositoryConfigTriggerSchedule {
        /**
         * Valid if type is CUSTOM. Following RFC 5545 recurrence rules, we can specify starting time, occurrence frequency, and interval size. Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window. You can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
         */
        customSchedule: string;
        /**
         * Different types of trigger schedule: NONE - No automated synchronization schedule. DEFAULT - Trigger schedule is every 30 minutes. CUSTOM - Custom triggering schedule.
         */
        scheduleType: string;
    }

    export interface GetRepositoryAuthorItem {
        /**
         * Author name.
         */
        authorName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
    }

    export interface GetRepositoryAuthorsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRepositoryAuthorsRepositoryAuthorCollection {
        /**
         * List of author objects.
         */
        items: outputs.DevOps.GetRepositoryAuthorsRepositoryAuthorCollectionItem[];
    }

    export interface GetRepositoryAuthorsRepositoryAuthorCollectionItem {
        /**
         * Author name.
         */
        authorName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
    }

    export interface GetRepositoryCommitsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRepositoryCommitsRepositoryCommitCollection {
        items: outputs.DevOps.GetRepositoryCommitsRepositoryCommitCollectionItem[];
    }

    export interface GetRepositoryCommitsRepositoryCommitCollectionItem {
        /**
         * Email of the author of the repository.
         */
        authorEmail: string;
        /**
         * A filter to return any commits that are pushed by the requested author.
         */
        authorName: string;
        /**
         * Commit hash pointed to by reference name.
         */
        commitId: string;
        /**
         * A filter to return any commits that contains the given message.
         */
        commitMessage: string;
        /**
         * Email of who creates the commit.
         */
        committerEmail: string;
        /**
         * Name of who creates the commit.
         */
        committerName: string;
        definedTags: {[key: string]: any};
        freeformTags: {[key: string]: any};
        /**
         * An array of parent commit IDs of created commit.
         */
        parentCommitIds: string[];
        /**
         * The time at which commit was created.
         */
        timeCreated: string;
        /**
         * Tree information for the specified commit.
         */
        treeId: string;
    }

    export interface GetRepositoryDiffChange {
        /**
         * The number of a line in the base version.
         */
        baseLine: number;
        /**
         * Number of lines chunk spans in base version.
         */
        baseSpan: number;
        /**
         * List of difference section.
         */
        diffSections: outputs.DevOps.GetRepositoryDiffChangeDiffSection[];
        /**
         * Line number in target version where changes begin.
         */
        targetLine: number;
        /**
         * Number of lines chunk spans in target version.
         */
        targetSpan: number;
    }

    export interface GetRepositoryDiffChangeDiffSection {
        /**
         * The lines within changed section.
         */
        lines: outputs.DevOps.GetRepositoryDiffChangeDiffSectionLine[];
        /**
         * Type of change.
         */
        type: string;
    }

    export interface GetRepositoryDiffChangeDiffSectionLine {
        /**
         * The number of a line in the base version.
         */
        baseLine: number;
        /**
         * Indicates whether a line in a conflicted section of the difference is from the base version, the target version, or if its just a marker indicating the beginning, middle, or end of a conflicted section.
         */
        conflictMarker: string;
        /**
         * The contents of a line.
         */
        lineContent: string;
        /**
         * Line number in target version where changes begin.
         */
        targetLine: number;
    }

    export interface GetRepositoryDiffsDiffCollection {
        items: outputs.DevOps.GetRepositoryDiffsDiffCollectionItem[];
    }

    export interface GetRepositoryDiffsDiffCollectionItem {
        /**
         * Indicates whether the changed file contains conflicts.
         */
        areConflictsInFile: boolean;
        /**
         * List of changed section in the file.
         */
        changes: outputs.DevOps.GetRepositoryDiffsDiffCollectionItemChange[];
        freeformTags: {[key: string]: any};
        /**
         * Indicates whether the file is binary.
         */
        isBinary: boolean;
        /**
         * Indicates whether the file is large.
         */
        isLarge: boolean;
        /**
         * The ID of the changed object on the target version.
         */
        newId: string;
        /**
         * The path on the target version to the changed object.
         */
        newPath: string;
        /**
         * The ID of the changed object on the base version.
         */
        oldId: string;
        /**
         * The path on the base version to the changed object.
         */
        oldPath: string;
    }

    export interface GetRepositoryDiffsDiffCollectionItemChange {
        /**
         * The number of a line in the base version.
         */
        baseLine: number;
        /**
         * Number of lines chunk spans in base version.
         */
        baseSpan: number;
        /**
         * List of difference section.
         */
        diffSections: outputs.DevOps.GetRepositoryDiffsDiffCollectionItemChangeDiffSection[];
        /**
         * Line number in target version where changes begin.
         */
        targetLine: number;
        /**
         * Number of lines chunk spans in target version.
         */
        targetSpan: number;
    }

    export interface GetRepositoryDiffsDiffCollectionItemChangeDiffSection {
        /**
         * The lines within changed section.
         */
        lines: outputs.DevOps.GetRepositoryDiffsDiffCollectionItemChangeDiffSectionLine[];
        /**
         * Type of change.
         */
        type: string;
    }

    export interface GetRepositoryDiffsDiffCollectionItemChangeDiffSectionLine {
        /**
         * The number of a line in the base version.
         */
        baseLine: number;
        /**
         * Indicates whether a line in a conflicted section of the difference is from the base version, the target version, or if its just a marker indicating the beginning, middle, or end of a conflicted section.
         */
        conflictMarker: string;
        /**
         * The contents of a line.
         */
        lineContent: string;
        /**
         * Line number in target version where changes begin.
         */
        targetLine: number;
    }

    export interface GetRepositoryDiffsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRepositoryFileDiffChange {
        /**
         * The number of a line in the base version.
         */
        baseLine: number;
        /**
         * Number of lines chunk spans in base version.
         */
        baseSpan: number;
        /**
         * List of difference section.
         */
        diffSections: outputs.DevOps.GetRepositoryFileDiffChangeDiffSection[];
        /**
         * Line number in target version where changes begin.
         */
        targetLine: number;
        /**
         * Number of lines chunk spans in target version.
         */
        targetSpan: number;
    }

    export interface GetRepositoryFileDiffChangeDiffSection {
        /**
         * The lines within changed section.
         */
        lines: outputs.DevOps.GetRepositoryFileDiffChangeDiffSectionLine[];
        /**
         * Type of change.
         */
        type: string;
    }

    export interface GetRepositoryFileDiffChangeDiffSectionLine {
        /**
         * The number of a line in the base version.
         */
        baseLine: number;
        /**
         * Indicates whether a line in a conflicted section of the difference is from the base version, the target version, or if its just a marker indicating the beginning, middle, or end of a conflicted section.
         */
        conflictMarker: string;
        /**
         * The contents of a line.
         */
        lineContent: string;
        /**
         * Line number in target version where changes begin.
         */
        targetLine: number;
    }

    export interface GetRepositoryFileLineLine {
        /**
         * The content of the line.
         */
        lineContent: string;
        /**
         * The line number.
         */
        lineNumber: number;
    }

    export interface GetRepositoryMirrorRecordsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRepositoryMirrorRecordsRepositoryMirrorRecordCollection {
        items: outputs.DevOps.GetRepositoryMirrorRecordsRepositoryMirrorRecordCollectionItem[];
    }

    export interface GetRepositoryMirrorRecordsRepositoryMirrorRecordCollectionItem {
        freeformTags: {[key: string]: any};
        /**
         * Mirror status of current mirror entry. QUEUED - Mirroring Queued RUNNING - Mirroring is Running PASSED - Mirroring Passed FAILED - Mirroring Failed
         */
        mirrorStatus: string;
        timeCompleted: string;
        /**
         * The time to enqueue a mirror operation.
         */
        timeEnqueued: string;
        /**
         * The time to start a mirror operation.
         */
        timeStarted: string;
        /**
         * Workrequest ID to track current mirror operation.
         */
        workRequestId: string;
    }

    export interface GetRepositoryMirrorRepositoryConfig {
        /**
         * Upstream git repository connection identifer.
         */
        connectorId: string;
        /**
         * URL of external repository you want to mirror.
         */
        repositoryUrl: string;
        /**
         * Specifies a trigger schedule. Timing information for when to initiate automated syncs.
         */
        triggerSchedules: outputs.DevOps.GetRepositoryMirrorRepositoryConfigTriggerSchedule[];
    }

    export interface GetRepositoryMirrorRepositoryConfigTriggerSchedule {
        /**
         * Valid if type is CUSTOM. Following RFC 5545 recurrence rules, we can specify starting time, occurrence frequency, and interval size. Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window. You can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
         */
        customSchedule: string;
        /**
         * Different types of trigger schedule: NONE - No automated synchronization schedule. DEFAULT - Trigger schedule is every 30 minutes. CUSTOM - Custom triggering schedule.
         */
        scheduleType: string;
    }

    export interface GetRepositoryPathItem {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Name of file or directory.
         */
        name: string;
        /**
         * Path to file or directory in a repository.
         */
        path: string;
        /**
         * SHA-1 checksum of blob or tree.
         */
        sha: string;
        /**
         * Size of file or directory.
         */
        sizeInBytes: string;
        /**
         * The git URL of the submodule.
         */
        submoduleGitUrl: string;
        /**
         * File or directory.
         */
        type: string;
    }

    export interface GetRepositoryPathsFilter {
        /**
         * Name of file or directory.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRepositoryPathsRepositoryPathCollection {
        /**
         * List of objects describing files or directories in a repository.
         */
        items: outputs.DevOps.GetRepositoryPathsRepositoryPathCollectionItem[];
    }

    export interface GetRepositoryPathsRepositoryPathCollectionItem {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Name of file or directory.
         */
        name: string;
        /**
         * Path to file or directory in a repository.
         */
        path: string;
        /**
         * SHA-1 checksum of blob or tree.
         */
        sha: string;
        /**
         * Size of file or directory.
         */
        sizeInBytes: string;
        /**
         * The git URL of the submodule.
         */
        submoduleGitUrl: string;
        /**
         * File or directory.
         */
        type: string;
    }

    export interface GetRepositoryRefsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRepositoryRefsRepositoryRefCollection {
        items: outputs.DevOps.GetRepositoryRefsRepositoryRefCollectionItem[];
    }

    export interface GetRepositoryRefsRepositoryRefCollectionItem {
        /**
         * Commit ID in a repository.
         */
        commitId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique full reference name inside a repository.
         */
        fullRefName: string;
        id: string;
        /**
         * SHA-1 hash value of the object pointed to by the tag.
         */
        objectId: string;
        /**
         * A filter to return only resources that match the given reference name.
         */
        refName: string;
        /**
         * Reference type to distinguish between branch and tag. If it is not specified, all references are returned.
         */
        refType: string;
        /**
         * Unique repository identifier.
         */
        repositoryId: string;
    }

    export interface GetTriggerAction {
        /**
         * The OCID of the build pipeline to be triggered.
         */
        buildPipelineId: string;
        /**
         * The filters for the trigger.
         */
        filters: outputs.DevOps.GetTriggerActionFilter[];
        /**
         * The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
         */
        type: string;
    }

    export interface GetTriggerActionFilter {
        /**
         * The events, for example, PUSH, PULL_REQUEST_MERGE.
         */
        events: string[];
        /**
         * Attributes to filter GitLab self-hosted server events.
         */
        includes: outputs.DevOps.GetTriggerActionFilterInclude[];
        /**
         * Source of the trigger. Allowed values are, GITHUB and GITLAB.
         */
        triggerSource: string;
    }

    export interface GetTriggerActionFilterInclude {
        /**
         * The target branch for pull requests; not applicable for push requests.
         */
        baseRef: string;
        /**
         * Branch for push event; source branch for pull requests.
         */
        headRef: string;
    }

    export interface GetTriggersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTriggersTriggerCollection {
        items: outputs.DevOps.GetTriggersTriggerCollectionItem[];
    }

    export interface GetTriggersTriggerCollectionItem {
        /**
         * The list of actions that are to be performed for this trigger.
         */
        actions: outputs.DevOps.GetTriggersTriggerCollectionItemAction[];
        /**
         * The OCID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description about the trigger.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique trigger identifier.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * unique project identifier
         */
        projectId: string;
        /**
         * The OCID of the DevOps code repository.
         */
        repositoryId: string;
        /**
         * A filter to return only triggers that matches the given lifecycle state.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the trigger was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the trigger was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         */
        timeUpdated: string;
        /**
         * Source of the trigger. Allowed values are, GITHUB and GITLAB.
         */
        triggerSource: string;
        /**
         * The endpoint that listens to trigger events.
         */
        triggerUrl: string;
    }

    export interface GetTriggersTriggerCollectionItemAction {
        /**
         * The OCID of the build pipeline to be triggered.
         */
        buildPipelineId: string;
        /**
         * The filters for the trigger.
         */
        filters: outputs.DevOps.GetTriggersTriggerCollectionItemActionFilter[];
        /**
         * The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
         */
        type: string;
    }

    export interface GetTriggersTriggerCollectionItemActionFilter {
        /**
         * The events, for example, PUSH, PULL_REQUEST_MERGE.
         */
        events: string[];
        /**
         * Attributes to filter GitLab self-hosted server events.
         */
        includes: outputs.DevOps.GetTriggersTriggerCollectionItemActionFilterInclude[];
        /**
         * Source of the trigger. Allowed values are, GITHUB and GITLAB.
         */
        triggerSource: string;
    }

    export interface GetTriggersTriggerCollectionItemActionFilterInclude {
        /**
         * The target branch for pull requests; not applicable for push requests.
         */
        baseRef: string;
        /**
         * Branch for push event; source branch for pull requests.
         */
        headRef: string;
    }

    export interface ProjectNotificationConfig {
        /**
         * (Updatable) The topic ID for notifications.
         */
        topicId: string;
    }

    export interface RepositoryMirrorRepositoryConfig {
        /**
         * (Updatable) Upstream git repository connection identifer.
         */
        connectorId: string;
        /**
         * (Updatable) URL of external repository you want to mirror.
         */
        repositoryUrl: string;
        /**
         * (Updatable) Specifies a trigger schedule. Timing information for when to initiate automated syncs.
         */
        triggerSchedule: outputs.DevOps.RepositoryMirrorRepositoryConfigTriggerSchedule;
    }

    export interface RepositoryMirrorRepositoryConfigTriggerSchedule {
        /**
         * (Updatable) Valid if type is CUSTOM. Following RFC 5545 recurrence rules, we can specify starting time, occurrence frequency, and interval size. Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window. You can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
         */
        customSchedule: string;
        /**
         * (Updatable) Different types of trigger schedule: NONE - No automated synchronization schedule. DEFAULT - Trigger schedule is every 30 minutes. CUSTOM - Custom triggering schedule.
         */
        scheduleType: string;
    }

    export interface TriggerAction {
        /**
         * (Updatable) The OCID of the build pipeline to be triggered.
         */
        buildPipelineId: string;
        /**
         * (Updatable) The filters for the trigger.
         */
        filter: outputs.DevOps.TriggerActionFilter;
        /**
         * (Updatable) The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
         */
        type: string;
    }

    export interface TriggerActionFilter {
        /**
         * (Updatable) The events, for example, PUSH, PULL_REQUEST_MERGE.
         */
        events: string[];
        /**
         * (Updatable) Attributes to filter GitLab self-hosted server events.
         */
        include: outputs.DevOps.TriggerActionFilterInclude;
        /**
         * (Updatable) Source of the trigger. Allowed values are, GITHUB,GITLAB and BITBUCKET_CLOUD.
         */
        triggerSource: string;
    }

    export interface TriggerActionFilterInclude {
        /**
         * (Updatable) The target branch for pull requests; not applicable for push requests.
         */
        baseRef: string;
        /**
         * (Updatable) Branch for push event; source branch for pull requests.
         */
        headRef: string;
    }
}

export namespace Dns {
    export interface GetRecordsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRecordsRecord {
        /**
         * The OCID of the compartment the resource belongs to.
         */
        compartmentId?: string;
        /**
         * Search by domain. Will match any record whose domain (case-insensitive) equals the provided value.
         *
         * @deprecated The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
         */
        domain: string;
        /**
         * A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
         */
        isProtected: boolean;
        /**
         * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
         */
        rdata?: string;
        /**
         * A unique identifier for the record within its zone.
         */
        recordHash: string;
        /**
         * The latest version of the record's zone in which its RRSet differs from the preceding version.
         */
        rrsetVersion: string;
        /**
         * Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
         *
         * @deprecated The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
         */
        rtype: string;
        /**
         * The Time To Live for the record, in seconds.
         */
        ttl?: number;
        /**
         * The name or OCID of the target zone.
         *
         * @deprecated The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
         */
        zoneNameOrId: string;
    }

    export interface GetResolverAttachedView {
        /**
         * The OCID of the view.
         */
        viewId: string;
    }

    export interface GetResolverEndpoint {
        /**
         * The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
         */
        compartmentId: string;
        /**
         * The type of resolver endpoint. VNIC is currently the only supported type.
         */
        endpointType: string;
        /**
         * An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
         */
        forwardingAddress: string;
        /**
         * A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
         */
        isForwarding: boolean;
        /**
         * A Boolean flag indicating whether or not the resolver endpoint is for listening.
         */
        isListening: boolean;
        /**
         * An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
         */
        listeningAddress: string;
        /**
         * The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
         */
        name: string;
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The current state of the resource.
         */
        state: string;
        /**
         * The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
         */
        subnetId: string;
        /**
         * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeUpdated: string;
    }

    export interface GetResolverEndpointsFilter {
        /**
         * The name of a resource.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetResolverEndpointsResolverEndpoint {
        /**
         * The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
         */
        compartmentId: string;
        /**
         * The type of resolver endpoint. VNIC is currently the only supported type.
         */
        endpointType: string;
        /**
         * An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
         */
        forwardingAddress: string;
        /**
         * A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
         */
        isForwarding: boolean;
        /**
         * A Boolean flag indicating whether or not the resolver endpoint is for listening.
         */
        isListening: boolean;
        /**
         * An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
         */
        listeningAddress: string;
        /**
         * The name of a resource.
         */
        name: string;
        /**
         * An array of network security group OCIDs for the resolver endpoint. These must be part of the VCN that the resolver endpoint is a part of.
         */
        nsgIds?: string[];
        /**
         * The OCID of the target resolver.
         */
        resolverId: string;
        /**
         * Value must be `PRIVATE` when listing private name resolver endpoints.
         */
        scope: string;
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The state of a resource.
         */
        state: string;
        /**
         * The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
         */
        subnetId: string;
        /**
         * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeUpdated: string;
    }

    export interface GetResolverRule {
        /**
         * The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
         */
        action: string;
        /**
         * A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
         */
        clientAddressConditions: string[];
        /**
         * IP addresses to which queries should be forwarded. Currently limited to a single address.
         */
        destinationAddresses: string[];
        /**
         * A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
         */
        qnameCoverConditions: string[];
        /**
         * Case-insensitive name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
         */
        sourceEndpointName: string;
    }

    export interface GetResolversFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetResolversResolver {
        /**
         * The OCID of the attached VCN.
         */
        attachedVcnId: string;
        attachedViews: outputs.Dns.GetResolversResolverAttachedView[];
        /**
         * The OCID of the compartment the resource belongs to.
         */
        compartmentId: string;
        /**
         * The OCID of the default view.
         */
        defaultViewId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * The displayName of a resource.
         */
        displayName: string;
        endpoints: outputs.Dns.GetResolversResolverEndpoint[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of a resource.
         */
        id: string;
        /**
         * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
         */
        isProtected: boolean;
        resolverId: string;
        rules: outputs.Dns.GetResolversResolverRule[];
        /**
         * Value must be `PRIVATE` when listing private name resolvers.
         */
        scope: string;
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The state of a resource.
         */
        state: string;
        /**
         * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeUpdated: string;
    }

    export interface GetResolversResolverAttachedView {
        viewId: string;
    }

    export interface GetResolversResolverEndpoint {
        /**
         * The OCID of the compartment the resource belongs to.
         */
        compartmentId: string;
        endpointType: string;
        forwardingAddress: string;
        isForwarding: boolean;
        isListening: boolean;
        listeningAddress: string;
        name: string;
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The state of a resource.
         */
        state: string;
        subnetId: string;
        /**
         * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeUpdated: string;
    }

    export interface GetResolversResolverRule {
        action: string;
        clientAddressConditions: string[];
        destinationAddresses: string[];
        qnameCoverConditions: string[];
        sourceEndpointName: string;
    }

    export interface GetRrsetItem {
        /**
         * The target fully-qualified domain name (FQDN) within the target zone.
         */
        domain: string;
        /**
         * A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
         */
        isProtected: boolean;
        /**
         * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
         */
        rdata: string;
        /**
         * A unique identifier for the record within its zone.
         */
        recordHash: string;
        /**
         * The latest version of the record's zone in which its RRSet differs from the preceding version.
         */
        rrsetVersion: string;
        /**
         * The type of the target RRSet within the target zone.
         */
        rtype: string;
        /**
         * The Time To Live for the record, in seconds.
         */
        ttl: number;
    }

    export interface GetSteeringPoliciesFilter {
        /**
         * A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSteeringPoliciesSteeringPolicy {
        /**
         * The set of all answers that can potentially issue from the steering policy.
         */
        answers: outputs.Dns.GetSteeringPoliciesSteeringPolicyAnswer[];
        /**
         * The OCID of the compartment the resource belongs to.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * The displayName of a resource.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        freeformTags: {[key: string]: any};
        /**
         * Search by health check monitor OCID. Will match any resource whose health check monitor ID matches the provided value.
         */
        healthCheckMonitorId: string;
        /**
         * The OCID of a resource.
         */
        id: string;
        /**
         * The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
         */
        rules: outputs.Dns.GetSteeringPoliciesSteeringPolicyRule[];
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The state of a resource.
         */
        state: string;
        /**
         * Search by steering template type. Will match any resource whose template type matches the provided value.
         */
        template: string;
        /**
         * The date and time the resource was created, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
        /**
         * The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
         */
        ttl: number;
    }

    export interface GetSteeringPoliciesSteeringPolicyAnswer {
        /**
         * Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
         */
        isDisabled: boolean;
        /**
         * A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
         */
        name: string;
        /**
         * The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
         */
        pool: string;
        /**
         * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
         */
        rdata: string;
        /**
         * The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
         */
        rtype: string;
    }

    export interface GetSteeringPoliciesSteeringPolicyRule {
        /**
         * An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
         */
        cases: outputs.Dns.GetSteeringPoliciesSteeringPolicyRuleCase[];
        /**
         * Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
         */
        defaultAnswerDatas: outputs.Dns.GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData[];
        /**
         * Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
         */
        defaultCount: number;
        /**
         * A user-defined description of the rule's purpose or behavior.
         */
        description: string;
        /**
         * The type of a rule determines its sorting/filtering behavior.
         */
        ruleType: string;
    }

    export interface GetSteeringPoliciesSteeringPolicyRuleCase {
        /**
         * An array of `SteeringPolicyPriorityAnswerData` objects.
         */
        answerDatas: outputs.Dns.GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData[];
        /**
         * An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.subnet in ('192.0.2.0/24')` to define a case that matches queries from that office.
         */
        caseCondition: string;
        /**
         * The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
         */
        count: number;
    }

    export interface GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData {
        /**
         * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
         */
        answerCondition: string;
        /**
         * Keeps the answer only if the value is `true`.
         */
        shouldKeep: boolean;
        /**
         * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
         */
        value: number;
    }

    export interface GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData {
        /**
         * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
         */
        answerCondition: string;
        /**
         * Keeps the answer only if the value is `true`.
         */
        shouldKeep: boolean;
        /**
         * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
         */
        value: number;
    }

    export interface GetSteeringPolicyAnswer {
        /**
         * Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
         */
        isDisabled: boolean;
        /**
         * A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
         */
        name: string;
        /**
         * The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
         */
        pool: string;
        /**
         * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
         */
        rdata: string;
        /**
         * The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
         */
        rtype: string;
    }

    export interface GetSteeringPolicyAttachmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSteeringPolicyAttachmentsSteeringPolicyAttachment {
        /**
         * The OCID of the compartment the resource belongs to.
         */
        compartmentId: string;
        /**
         * The displayName of a resource.
         */
        displayName: string;
        /**
         * The attached domain within the attached zone.
         */
        domainName: string;
        /**
         * The OCID of a resource.
         */
        id: string;
        /**
         * The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
         */
        rtypes: string[];
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The state of a resource.
         */
        state: string;
        /**
         * Search by steering policy OCID. Will match any resource whose steering policy ID matches the provided value.
         */
        steeringPolicyId: string;
        /**
         * The date and time the resource was created, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
        /**
         * Search by zone OCID. Will match any resource whose zone ID matches the provided value.
         */
        zoneId: string;
    }

    export interface GetSteeringPolicyRule {
        /**
         * An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
         */
        cases: outputs.Dns.GetSteeringPolicyRuleCase[];
        /**
         * Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
         */
        defaultAnswerDatas: outputs.Dns.GetSteeringPolicyRuleDefaultAnswerData[];
        /**
         * Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
         */
        defaultCount: number;
        /**
         * A user-defined description of the rule's purpose or behavior.
         */
        description: string;
        /**
         * The type of a rule determines its sorting/filtering behavior.
         */
        ruleType: string;
    }

    export interface GetSteeringPolicyRuleCase {
        /**
         * An array of `SteeringPolicyPriorityAnswerData` objects.
         */
        answerDatas: outputs.Dns.GetSteeringPolicyRuleCaseAnswerData[];
        /**
         * An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.subnet in ('192.0.2.0/24')` to define a case that matches queries from that office.
         */
        caseCondition: string;
        /**
         * The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
         */
        count: number;
    }

    export interface GetSteeringPolicyRuleCaseAnswerData {
        /**
         * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
         */
        answerCondition: string;
        /**
         * Keeps the answer only if the value is `true`.
         */
        shouldKeep: boolean;
        /**
         * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
         */
        value: number;
    }

    export interface GetSteeringPolicyRuleDefaultAnswerData {
        /**
         * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
         */
        answerCondition: string;
        /**
         * Keeps the answer only if the value is `true`.
         */
        shouldKeep: boolean;
        /**
         * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
         */
        value: number;
    }

    export interface GetTsigKeysFilter {
        /**
         * The name of a resource.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTsigKeysTsigKey {
        /**
         * TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
         */
        algorithm: string;
        /**
         * The OCID of the compartment the resource belongs to.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of a resource.
         */
        id: string;
        /**
         * The name of a resource.
         */
        name: string;
        /**
         * A base64 string encoding the binary shared secret.
         */
        secret: string;
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The state of a resource.
         */
        state: string;
        /**
         * The date and time the resource was created, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated, expressed in RFC 3339 timestamp format.
         */
        timeUpdated: string;
    }

    export interface GetViewsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetViewsView {
        /**
         * The OCID of the compartment the resource belongs to.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * The displayName of a resource.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of a resource.
         */
        id: string;
        /**
         * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
         */
        isProtected: boolean;
        /**
         * Value must be `PRIVATE` when listing private views.
         */
        scope: string;
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The state of a resource.
         */
        state: string;
        /**
         * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeUpdated: string;
    }

    export interface GetZonesFilter {
        /**
         * A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetZonesZone {
        /**
         * The OCID of the compartment the resource belongs to.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        definedTags: {[key: string]: any};
        /**
         * External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
         */
        externalMasters: outputs.Dns.GetZonesZoneExternalMaster[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the zone.
         */
        id: string;
        /**
         * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
         */
        isProtected: boolean;
        /**
         * A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
         */
        name: string;
        /**
         * The authoritative nameservers for the zone.
         */
        nameservers: outputs.Dns.GetZonesZoneNameserver[];
        /**
         * Specifies to operate only on resources that have a matching DNS scope. This value will be null 
         * for zones in the global DNS and `PRIVATE` when listing private zones.
         */
        scope: string;
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The current serial of the zone. As seen in the zone's SOA record.
         */
        serial: number;
        /**
         * The state of a resource.
         */
        state: string;
        /**
         * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeCreated: string;
        /**
         * Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
         */
        version: string;
        /**
         * The OCID of the view the resource is associated with.
         */
        viewId: string;
        /**
         * Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
         */
        zoneType: string;
    }

    export interface GetZonesZoneExternalMaster {
        /**
         * The server's IP address (IPv4 or IPv6).
         */
        address: string;
        /**
         * The server's port. Port value must be a value of 53, otherwise omit the port value.
         */
        port: number;
        /**
         * Search for zones that are associated with a TSIG key.
         */
        tsigKeyId: string;
    }

    export interface GetZonesZoneNameserver {
        /**
         * The hostname of the nameserver.
         */
        hostname: string;
    }

    export interface ResolverAttachedView {
        /**
         * (Updatable) The OCID of the view.
         */
        viewId: string;
    }

    export interface ResolverEndpoint {
        /**
         * (Updatable) The OCID of the owning compartment.
         */
        compartmentId: string;
        /**
         * The type of resolver endpoint. VNIC is currently the only supported type.
         */
        endpointType: string;
        /**
         * An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
         */
        forwardingAddress: string;
        /**
         * A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
         */
        isForwarding: boolean;
        /**
         * A Boolean flag indicating whether or not the resolver endpoint is for listening.
         */
        isListening: boolean;
        /**
         * An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
         */
        listeningAddress: string;
        /**
         * The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
         */
        name: string;
        /**
         * The canonical absolute URL of the resource.
         */
        self: string;
        /**
         * The current state of the resource.
         */
        state: string;
        /**
         * The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
         */
        subnetId: string;
        /**
         * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
         */
        timeUpdated: string;
    }

    export interface ResolverRule {
        /**
         * (Updatable) The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
         */
        action: string;
        /**
         * (Updatable) A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
         */
        clientAddressConditions: string[];
        /**
         * (Updatable) IP addresses to which queries should be forwarded. Currently limited to a single address.
         */
        destinationAddresses: string[];
        /**
         * (Updatable) A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
         */
        qnameCoverConditions: string[];
        /**
         * (Updatable) Name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
         */
        sourceEndpointName: string;
    }

    export interface RrsetItem {
        /**
         * The fully qualified domain name where the record can be located.
         */
        domain: string;
        /**
         * A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
         */
        isProtected: boolean;
        /**
         * (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
         */
        rdata: string;
        /**
         * A unique identifier for the record within its zone.
         */
        recordHash: string;
        /**
         * The latest version of the record's zone in which its RRSet differs from the preceding version.
         */
        rrsetVersion: string;
        /**
         * The type of the target RRSet within the target zone.
         */
        rtype: string;
        /**
         * (Updatable) The Time To Live for the record, in seconds.
         */
        ttl: number;
    }

    export interface SteeringPolicyAnswer {
        /**
         * Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
         */
        isDisabled: boolean;
        /**
         * A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
         */
        name: string;
        /**
         * The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
         */
        pool: string;
        /**
         * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
         */
        rdata: string;
        /**
         * The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
         */
        rtype: string;
    }

    export interface SteeringPolicyRule {
        /**
         * An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
         */
        cases: outputs.Dns.SteeringPolicyRuleCase[];
        /**
         * Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
         */
        defaultAnswerDatas: outputs.Dns.SteeringPolicyRuleDefaultAnswerData[];
        /**
         * Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
         */
        defaultCount: number;
        /**
         * A user-defined description of the rule's purpose or behavior.
         */
        description: string;
        /**
         * The type of a rule determines its sorting/filtering behavior.
         */
        ruleType: string;
    }

    export interface SteeringPolicyRuleCase {
        /**
         * An array of `SteeringPolicyPriorityAnswerData` objects.
         */
        answerDatas: outputs.Dns.SteeringPolicyRuleCaseAnswerData[];
        /**
         * An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.subnet in ('192.0.2.0/24')` to define a case that matches queries from that office.
         */
        caseCondition: string;
        /**
         * The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
         */
        count: number;
    }

    export interface SteeringPolicyRuleCaseAnswerData {
        /**
         * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
         */
        answerCondition: string;
        /**
         * Keeps the answer only if the value is `true`.
         */
        shouldKeep: boolean;
        /**
         * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
         */
        value: number;
    }

    export interface SteeringPolicyRuleDefaultAnswerData {
        /**
         * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
         */
        answerCondition: string;
        /**
         * Keeps the answer only if the value is `true`.
         */
        shouldKeep: boolean;
        /**
         * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
         */
        value: number;
    }

    export interface ZoneExternalMaster {
        /**
         * (Updatable) The server's IP address (IPv4 or IPv6).
         */
        address: string;
        /**
         * (Updatable) The server's port. Port value must be a value of 53, otherwise omit the port value.
         */
        port: number;
        /**
         * (Updatable) The OCID of the TSIG key.
         */
        tsigKeyId: string;
    }

    export interface ZoneNameserver {
        /**
         * The hostname of the nameserver.
         */
        hostname: string;
    }

}

export namespace EmWarehouse {
    export interface GetEmWarehousesEmWarehouseCollection {
        items: outputs.EmWarehouse.GetEmWarehousesEmWarehouseCollectionItem[];
    }

    export interface GetEmWarehousesEmWarehouseCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * EMBridge Identifier
         */
        emBridgeId: string;
        /**
         * Type of the EmWarehouse.
         */
        emWarehouseType: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * unique EmWarehouse identifier
         */
        id: string;
        /**
         * Data Flow Run Status Message
         */
        latestEtlRunMessage: string;
        /**
         * Data Flow Run Status
         */
        latestEtlRunStatus: string;
        /**
         * Data Flow Run Total Time
         */
        latestEtlRunTime: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * unique operationsInsightsWarehouseId identifier
         */
        operationsInsightsWarehouseId: string;
        /**
         * A filter to return only resources their lifecycleState matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the the EmWarehouse was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the EmWarehouse was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface GetEmWarehousesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetEtlRunItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Data read by the dataflow run
         */
        dataReadInBytes: string;
        /**
         * Data written by the dataflow run
         */
        dataWritten: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Details of the lifecycle state
         */
        lifecycleDetails: string;
        /**
         * Dataflow run duration
         */
        runDurationInMilliseconds: string;
        /**
         * The current state of the etlRun.
         */
        state: string;
        /**
         * Time when the dataflow run was created
         */
        timeCreated: string;
        /**
         * Time when the dataflow run was updated
         */
        timeUpdated: string;
    }

    export interface GetEtlRunsEtlRunCollection {
        /**
         * List of runs
         */
        items: outputs.EmWarehouse.GetEtlRunsEtlRunCollectionItem[];
    }

    export interface GetEtlRunsEtlRunCollectionItem {
        /**
         * List of runs
         */
        items: outputs.EmWarehouse.GetEtlRunsEtlRunCollectionItemItem[];
    }

    export interface GetEtlRunsEtlRunCollectionItemItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Data read by the dataflow run
         */
        dataReadInBytes: string;
        /**
         * Data written by the dataflow run
         */
        dataWritten: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Details of the lifecycle state
         */
        lifecycleDetails: string;
        /**
         * Dataflow run duration
         */
        runDurationInMilliseconds: string;
        /**
         * The current state of the etlRun.
         */
        state: string;
        /**
         * Time when the dataflow run was created
         */
        timeCreated: string;
        /**
         * Time when the dataflow run was updated
         */
        timeUpdated: string;
    }

    export interface GetEtlRunsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetResourceUsageEmInstance {
        /**
         * emHost name
         */
        emHost: string;
        /**
         * operations Insights Warehouse Identifier
         */
        emId: string;
        /**
         * EmInstance Target count
         */
        targetsCount: number;
    }

}

export namespace Email {
    export interface GetDkimsDkimCollection {
        items: outputs.Email.GetDkimsDkimCollectionItem[];
    }

    export interface GetDkimsDkimCollectionItem {
        /**
         * The DNS CNAME record value to provision to the DKIM DNS subdomain, when using the CNAME method for DKIM setup (preferred).
         */
        cnameRecordValue: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains this DKIM.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the DKIM. Avoid entering confidential information.
         */
        description: string;
        /**
         * The name of the DNS subdomain that must be provisioned to enable email recipients to verify DKIM signatures. It is usually created with a CNAME record set to the cnameRecordValue
         */
        dnsSubdomainName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the email domain to which this DKIM belongs.
         */
        emailDomainId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to only return resources that match the given id exactly.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource.
         */
        lifecycleDetails: string;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * Filter returned list by specified lifecycle state. This parameter is case-insensitive.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the DKIM was created. Times are expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
         */
        timeCreated: string;
        /**
         * The time of the last change to the DKIM configuration, due to a state change or an update operation. Times are expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".
         */
        timeUpdated: string;
        /**
         * The DNS TXT record value to provision to the DKIM DNS subdomain in place of using a CNAME record. This is used in cases where a CNAME can not be used, such as when the cnameRecordValue would exceed the maximum length for a DNS entry. This can also be used by customers who have an existing procedure to directly provision TXT records for DKIM. Be aware that many DNS APIs will require you to break this string into segments of less than 255 characters.
         */
        txtRecordValue: string;
    }

    export interface GetDkimsFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetEmailDomainsEmailDomainCollection {
        items: outputs.Email.GetEmailDomainsEmailDomainCollectionItem[];
    }

    export interface GetEmailDomainsEmailDomainCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DKIM key that will be used to sign mail sent from this email domain.
         */
        activeDkimId: string;
        /**
         * The OCID for the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of a email domain.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to only return resources that match the given id exactly.
         */
        id: string;
        /**
         * Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
         */
        isSpf: boolean;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * Filter returned list by specified lifecycle state. This parameter is case-insensitive.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the email domain was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
         */
        timeCreated: string;
    }

    export interface GetEmailDomainsFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSendersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSendersSender {
        /**
         * The OCID for the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The email address of the approved sender.
         */
        emailAddress: string;
        /**
         * The email domain used to assert responsibility for emails sent from this sender.
         */
        emailDomainId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The unique OCID of the sender.
         */
        id: string;
        /**
         * Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
         */
        isSpf: boolean;
        /**
         * The current state of a sender.
         */
        state: string;
        /**
         * The date and time the approved sender was added in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
         */
        timeCreated: string;
    }

    export interface GetSuppressionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSuppressionsSuppression {
        /**
         * The OCID for the compartment.
         */
        compartmentId: string;
        /**
         * The email address of the suppression.
         */
        emailAddress: string;
        /**
         * The specific error message returned by a system that resulted in the suppression. This message is usually an SMTP error code with additional descriptive text. Not provided for all types of suppressions.
         */
        errorDetail: string;
        /**
         * DNS name of the source of the error that caused the suppression. Will be set to either the remote-mta or reporting-mta field from a delivery status notification (RFC 3464) when available. Not provided for all types of suppressions, and not always known.
         */
        errorSource: string;
        /**
         * The unique OCID of the suppression.
         */
        id: string;
        /**
         * The value of the Message-ID header from the email that triggered a suppression. This value is as defined in RFC 5322 section 3.6.4, excluding angle-brackets. Not provided for all types of suppressions.
         */
        messageId: string;
        /**
         * The reason that the email address was suppressed. For more information on the types of bounces, see [Suppression List](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
         */
        reason: string;
        /**
         * The date and time a recipient's email address was added to the suppression list, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
         */
        timeCreated: string;
        /**
         * The last date and time the suppression prevented submission in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
         */
        timeLastSuppressed: string;
    }

}

export namespace Events {
    export interface GetRuleAction {
        /**
         * A list of one or more Action objects.
         */
        actions: outputs.Events.GetRuleActionAction[];
    }

    export interface GetRuleActionAction {
        /**
         * The action to perform if the condition in the rule matches an event.
         * * **ONS:** Send to an Oracle Notification Service topic.
         * * **OSS:** Send to a stream from Oracle Streaming Service.
         * * **FAAS:** Send to an Oracle Functions Service endpoint.
         */
        actionType: string;
        /**
         * A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
         */
        description: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Function hosted by Oracle Functions Service.
         */
        functionId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
         */
        id: string;
        /**
         * Whether or not this rule is currently enabled.  Example: `true`
         */
        isEnabled: boolean;
        /**
         * A message generated by the Events service about the current state of this rule.
         */
        lifecycleMessage: string;
        /**
         * The current state of the rule.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream to which messages are delivered.
         */
        streamId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to which messages are delivered.
         */
        topicId: string;
    }

    export interface GetRulesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRulesRule {
        /**
         * A list of one or more Action objects.
         */
        actions: outputs.Events.GetRulesRuleAction[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
         */
        compartmentId: string;
        /**
         * A filter that specifies the event that will trigger actions associated with this rule. A few  important things to remember about filters:
         * * Fields not mentioned in the condition are ignored. You can create a valid filter that matches all events with two curly brackets: `{}`
         */
        condition: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
         */
        description: string;
        /**
         * A filter to return only rules with descriptions that match the displayName string in this parameter.  Example: `"This rule sends a notification upon completion of DbaaS backup."`
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
         */
        id: string;
        /**
         * Whether or not this rule is currently enabled.  Example: `true`
         */
        isEnabled: boolean;
        /**
         * A message generated by the Events service about the current state of this rule.
         */
        lifecycleMessage: string;
        /**
         * A filter to return only rules that match the lifecycle state in this parameter.  Example: `Creating`
         */
        state: string;
        /**
         * The time this rule was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
         */
        timeCreated: string;
    }

    export interface GetRulesRuleAction {
        /**
         * A list of one or more Action objects.
         */
        actions: outputs.Events.GetRulesRuleActionAction[];
    }

    export interface GetRulesRuleActionAction {
        /**
         * The action to perform if the condition in the rule matches an event.
         * * **ONS:** Send to an Oracle Notification Service topic.
         * * **OSS:** Send to a stream from Oracle Streaming Service.
         * * **FAAS:** Send to an Oracle Functions Service endpoint.
         */
        actionType: string;
        /**
         * A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
         */
        description: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Function hosted by Oracle Functions Service.
         */
        functionId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
         */
        id: string;
        /**
         * Whether or not this rule is currently enabled.  Example: `true`
         */
        isEnabled: boolean;
        /**
         * A message generated by the Events service about the current state of this rule.
         */
        lifecycleMessage: string;
        /**
         * A filter to return only rules that match the lifecycle state in this parameter.  Example: `Creating`
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream to which messages are delivered.
         */
        streamId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to which messages are delivered.
         */
        topicId: string;
    }

    export interface RuleActions {
        /**
         * (Updatable) A list of one or more ActionDetails objects.
         */
        actions: outputs.Events.RuleActionsAction[];
    }

    export interface RuleActionsAction {
        /**
         * (Updatable) The action to perform if the condition in the rule matches an event.
         * * **ONS:** Send to an Oracle Notification Service topic.
         * * **OSS:** Send to a stream from Oracle Streaming Service.
         * * **FAAS:** Send to an Oracle Functions Service endpoint.
         */
        actionType: string;
        /**
         * (Updatable) A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
         */
        description: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Function hosted by Oracle Functions Service.
         */
        functionId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
         */
        id: string;
        /**
         * (Updatable) Whether or not this rule is currently enabled.  Example: `true`
         */
        isEnabled: boolean;
        /**
         * A message generated by the Events service about the current state of this rule.
         */
        lifecycleMessage: string;
        /**
         * The current state of the rule.
         */
        state: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream to which messages are delivered.
         */
        streamId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to which messages are delivered.
         */
        topicId: string;
    }
}

export namespace FileStorage {
    export interface ExportExportOption {
        /**
         * (Updatable) Type of access to grant clients using the file system through this export. If unspecified defaults to `READ_ONLY`.
         */
        access: string;
        /**
         * (Updatable) GID value to remap to when squashing a client GID (see identitySquash for more details.) If unspecified defaults to `65534`.
         */
        anonymousGid: string;
        /**
         * (Updatable) UID value to remap to when squashing a client UID (see identitySquash for more details.) If unspecified, defaults to `65534`.
         */
        anonymousUid: string;
        /**
         * (Updatable) Used when clients accessing the file system through this export have their UID and GID remapped to 'anonymousUid' and 'anonymousGid'. If `ALL`, all users and groups are remapped; if `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `ROOT`.
         */
        identitySquash: string;
        /**
         * (Updatable) If `true`, clients accessing the file system through this export must connect from a privileged source port. If unspecified, defaults to `true`.
         */
        requirePrivilegedSourcePort: boolean;
        /**
         * (Updatable) Clients these options should apply to. Must be a either single IPv4 address or single IPv4 CIDR block.
         */
        source: string;
    }

    export interface FileSystemSourceDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system that contains the source snapshot of a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
         */
        parentFileSystemId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
         */
        sourceSnapshotId: string;
    }

    export interface GetExportSetsExportSet {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
         */
        displayName: string;
        /**
         * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
         */
        id: string;
        /**
         * Controls the maximum `tbytes`, `fbytes`, and `abytes`, values reported by `NFS FSSTAT` calls through any associated mount targets. This is an advanced feature. For most applications, use the default value. The `tbytes` value reported by `FSSTAT` will be `maxFsStatBytes`. The value of `fbytes` and `abytes` will be `maxFsStatBytes` minus the metered size of the file system. If the metered size is larger than `maxFsStatBytes`, then `fbytes` and `abytes` will both be '0'.
         */
        maxFsStatBytes: string;
        /**
         * Controls the maximum `tfiles`, `ffiles`, and `afiles` values reported by `NFS FSSTAT` calls through any associated mount targets. This is an advanced feature. For most applications, use the default value. The `tfiles` value reported by `FSSTAT` will be `maxFsStatFiles`. The value of `ffiles` and `afiles` will be `maxFsStatFiles` minus the metered size of the file system. If the metered size is larger than `maxFsStatFiles`, then `ffiles` and `afiles` will both be '0'.
         */
        maxFsStatFiles: string;
        mountTargetId: string;
        /**
         * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the export set was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual cloud network (VCN) the export set is in.
         */
        vcnId: string;
    }

    export interface GetExportSetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetExportsExport {
        /**
         * Policies that apply to NFS requests made through this export. `exportOptions` contains a sequential list of `ClientOptions`. Each `ClientOptions` item defines the export options that are applied to a specified set of clients.
         */
        exportOptions: outputs.FileStorage.GetExportsExportExportOption[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export set.
         */
        exportSetId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
         */
        fileSystemId: string;
        /**
         * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
         */
        id: string;
        /**
         * Path used to access the associated file system.
         */
        path: string;
        /**
         * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the export was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetExportsExportExportOption {
        /**
         * Type of access to grant clients using the file system through this export. If unspecified defaults to `READ_ONLY`.
         */
        access: string;
        /**
         * GID value to remap to when squashing a client GID (see identitySquash for more details.) If unspecified defaults to `65534`.
         */
        anonymousGid: string;
        /**
         * UID value to remap to when squashing a client UID (see identitySquash for more details.) If unspecified, defaults to `65534`.
         */
        anonymousUid: string;
        /**
         * Used when clients accessing the file system through this export have their UID and GID remapped to 'anonymousUid' and 'anonymousGid'. If `ALL`, all users and groups are remapped; if `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `ROOT`.
         */
        identitySquash: string;
        /**
         * If `true`, clients accessing the file system through this export must connect from a privileged source port. If unspecified, defaults to `true`.
         */
        requirePrivilegedSourcePort: boolean;
        /**
         * Clients these options should apply to. Must be a either single IPv4 address or single IPv4 CIDR block.
         */
        source: string;
    }

    export interface GetExportsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFileSystemsFileSystem {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
         */
        id: string;
        /**
         * Specifies whether the file system has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
         */
        isCloneParent: boolean;
        /**
         * Specifies whether the data has finished copying from the source to the clone. Hydration can take up to several hours to complete depending on the size of the source. The source and clone remain available during hydration, but there may be some performance impact. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm#hydration).
         */
        isHydrated: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
         */
        kmsKeyId: string;
        /**
         * Additional information about the current 'lifecycleState'.
         */
        lifecycleDetails: string;
        /**
         * The number of bytes consumed by the file system, including any snapshots. This number reflects the metered size of the file system and is updated asynchronously with respect to updates to the file system. For more information, see [File System Usage and Metering](https://docs.cloud.oracle.com/iaas/Content/File/Concepts/FSutilization.htm).
         */
        meteredBytes: string;
        /**
         * Source information for the file system.
         */
        sourceDetails: outputs.FileStorage.GetFileSystemsFileSystemSourceDetail[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
         */
        sourceSnapshotId: string;
        /**
         * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetFileSystemsFileSystemSourceDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system that contains the source snapshot of a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
         */
        parentFileSystemId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
         */
        sourceSnapshotId: string;
    }

    export interface GetFileSystemsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMountTargetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMountTargetsMountTarget {
        /**
         * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export set.
         */
        exportSetId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        hostnameLabel: string;
        /**
         * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
         */
        id: string;
        ipAddress: string;
        /**
         * Additional information about the current 'lifecycleState'.
         */
        lifecycleDetails: string;
        /**
         * A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this mount target. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the mount target from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
         */
        nsgIds: string[];
        /**
         * The OCIDs of the private IP addresses associated with this mount target.
         */
        privateIpIds: string[];
        /**
         * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the mount target is in.
         */
        subnetId: string;
        /**
         * The date and time the mount target was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetSnapshotsFilter {
        /**
         * Name of the snapshot. This value is immutable.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSnapshotsSnapshot {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
         */
        fileSystemId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
         */
        id: string;
        /**
         * Specifies whether the snapshot has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
         */
        isCloneSource: boolean;
        /**
         * Additional information about the current 'lifecycleState'.
         */
        lifecycleDetails: string;
        /**
         * Name of the snapshot. This value is immutable.
         */
        name: string;
        /**
         * An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) identifying the parent from which this snapshot was cloned. If this snapshot was not cloned, then the `provenanceId` is the same as the snapshot `id` value. If this snapshot was cloned, then the `provenanceId` value is the parent's `provenanceId`. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
         */
        provenanceId: string;
        /**
         * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
         */
        state: string;
        /**
         * The date and time the snapshot was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

}

export namespace Functions {
    export interface ApplicationImagePolicyConfig {
        /**
         * (Updatable) Define if image signature verification policy is enabled for the application.
         */
        isPolicyEnabled: boolean;
        /**
         * (Updatable) A list of KMS key details.
         */
        keyDetails: outputs.Functions.ApplicationImagePolicyConfigKeyDetail[];
    }

    export interface ApplicationImagePolicyConfigKeyDetail {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
         */
        kmsKeyId: string;
    }

    export interface ApplicationTraceConfig {
        /**
         * (Updatable) The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
         */
        domainId: string;
        /**
         * (Updatable) Define if tracing is enabled for the resource.
         */
        isEnabled: boolean;
    }

    export interface FunctionProvisionedConcurrencyConfig {
        /**
         * (Updatable)
         */
        count: number;
        /**
         * (Updatable) The strategy for provisioned concurrency to be used.
         */
        strategy: string;
    }

    export interface FunctionTraceConfig {
        /**
         * (Updatable) Define if tracing is enabled for the resource.
         */
        isEnabled: boolean;
    }

    export interface GetApplicationImagePolicyConfig {
        /**
         * Define if image signature verification policy is enabled for the application.
         */
        isPolicyEnabled: boolean;
        /**
         * A list of KMS key details.
         */
        keyDetails: outputs.Functions.GetApplicationImagePolicyConfigKeyDetail[];
    }

    export interface GetApplicationImagePolicyConfigKeyDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
         */
        kmsKeyId: string;
    }

    export interface GetApplicationTraceConfig {
        /**
         * The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
         */
        domainId: string;
        /**
         * Define if tracing is enabled for the resource.
         */
        isEnabled: boolean;
    }

    export interface GetApplicationsApplication {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
         */
        compartmentId: string;
        /**
         * Application configuration for functions in this application (passed as environment variables). Can be overridden by function configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
         */
        config: {[key: string]: any};
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only applications with display names that match the display name string. Matching is exact.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only applications with the specified OCID.
         */
        id: string;
        /**
         * Define the image signature verification policy for an application.
         */
        imagePolicyConfigs: outputs.Functions.GetApplicationsApplicationImagePolicyConfig[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the Network Security Groups to add the application to.
         */
        networkSecurityGroupIds: string[];
        /**
         * A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
         */
        subnetIds: string[];
        /**
         * A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
         */
        syslogUrl: string;
        /**
         * The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
         */
        timeCreated: string;
        /**
         * The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
         */
        timeUpdated: string;
        /**
         * Define the tracing configuration for an application.
         */
        traceConfigs: outputs.Functions.GetApplicationsApplicationTraceConfig[];
    }

    export interface GetApplicationsApplicationImagePolicyConfig {
        /**
         * Define if image signature verification policy is enabled for the application.
         */
        isPolicyEnabled: boolean;
        /**
         * A list of KMS key details.
         */
        keyDetails: outputs.Functions.GetApplicationsApplicationImagePolicyConfigKeyDetail[];
    }

    export interface GetApplicationsApplicationImagePolicyConfigKeyDetail {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
         */
        kmsKeyId: string;
    }

    export interface GetApplicationsApplicationTraceConfig {
        /**
         * The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
         */
        domainId: string;
        /**
         * Define if tracing is enabled for the resource.
         */
        isEnabled: boolean;
    }

    export interface GetApplicationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFunctionProvisionedConcurrencyConfig {
        count: number;
        /**
         * The strategy for provisioned concurrency to be used.
         */
        strategy: string;
    }

    export interface GetFunctionTraceConfig {
        /**
         * Define if tracing is enabled for the resource.
         */
        isEnabled: boolean;
    }

    export interface GetFunctionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFunctionsFunction {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application to which this function belongs.
         */
        applicationId: string;
        /**
         * The OCID of the compartment that contains the function.
         */
        compartmentId: string;
        /**
         * Function configuration. Overrides application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
         */
        config: {[key: string]: any};
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only functions with display names that match the display name string. Matching is exact.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only functions with the specified OCID.
         */
        id: string;
        /**
         * The qualified name of the Docker image to use in the function, including the image tag. The image should be in the Oracle Cloud Infrastructure Registry that is in the same region as the function itself. Example: `phx.ocir.io/ten/functions/function:0.0.1`
         */
        image: string;
        /**
         * The image digest for the version of the image that will be pulled when invoking this function. If no value is specified, the digest currently associated with the image in the Oracle Cloud Infrastructure Registry will be used. Example: `sha256:ca0eeb6fb05351dfc8759c20733c91def84cb8007aa89a5bf606bc8b315b9fc7`
         */
        imageDigest: string;
        /**
         * The base https invoke URL to set on a client in order to invoke a function. This URL will never change over the lifetime of the function and can be cached.
         */
        invokeEndpoint: string;
        /**
         * Maximum usable memory for the function (MiB).
         */
        memoryInMbs: string;
        /**
         * Define the strategy for provisioned concurrency for the function.
         */
        provisionedConcurrencyConfigs: outputs.Functions.GetFunctionsFunctionProvisionedConcurrencyConfig[];
        /**
         * A filter to return only functions that match the lifecycle state in this parameter. Example: `Creating`
         */
        state: string;
        /**
         * The time the function was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
         */
        timeCreated: string;
        /**
         * The time the function was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
         */
        timeUpdated: string;
        /**
         * Timeout for executions of the function. Value in seconds.
         */
        timeoutInSeconds: number;
        /**
         * Define the tracing configuration for a function.
         */
        traceConfigs: outputs.Functions.GetFunctionsFunctionTraceConfig[];
    }

    export interface GetFunctionsFunctionProvisionedConcurrencyConfig {
        count: number;
        /**
         * The strategy for provisioned concurrency to be used.
         */
        strategy: string;
    }

    export interface GetFunctionsFunctionTraceConfig {
        /**
         * Define if tracing is enabled for the resource.
         */
        isEnabled: boolean;
    }

}

export namespace GoldenGate {
    export interface DeploymentOggData {
        /**
         * (Updatable) The password associated with the GoldenGate deployment console username. The password must be 8 to 30 characters long and must contain at least 1 uppercase, 1 lowercase, 1 numeric, and 1 special character. Special characters such as ‘$’, ‘^’, or ‘?’ are not allowed.
         */
        adminPassword: string;
        /**
         * (Updatable) The GoldenGate deployment console username.
         */
        adminUsername: string;
        /**
         * (Updatable) A PEM-encoded SSL certificate.
         */
        certificate: string;
        /**
         * The name given to the GoldenGate service deployment. The name must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
         */
        deploymentName: string;
        /**
         * (Updatable) A PEM-encoded private key.
         */
        key: string;
        /**
         * Version of OGG
         */
        oggVersion: string;
    }

    export interface GetDatabaseRegistrationsDatabaseRegistrationCollection {
        items: outputs.GoldenGate.GetDatabaseRegistrationsDatabaseRegistrationCollectionItem[];
    }

    export interface GetDatabaseRegistrationsDatabaseRegistrationCollectionItem {
        /**
         * Credential store alias.
         */
        aliasName: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Connect descriptor or Easy Connect Naming method that Oracle GoldenGate uses to connect to a database.
         */
        connectionString: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
         */
        databaseId: string;
        /**
         * Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Metadata about this specific object.
         */
        description: string;
        /**
         * A filter to return only the resources that match the entire 'displayName' given.
         */
        displayName: string;
        /**
         * A three-label Fully Qualified Domain Name (FQDN) for a resource.
         */
        fqdn: string;
        /**
         * A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the databaseRegistration being referenced.
         */
        id: string;
        /**
         * The private IP address in the customer's VCN of the customer's endpoint, typically a database.
         */
        ipAddress: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer "Master" key being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this key to manage secrets.
         */
        keyId: string;
        /**
         * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        password: string;
        /**
         * A Private Endpoint IP Address created in the customer's subnet.  A customer database can expect network traffic initiated by GGS from this IP address and send network traffic to this IP address, typically in response to requests from GGS (OGG).  The customer may utilize this IP address in Security Lists or Network Security Groups (NSG) as needed.
         */
        rcePrivateIp: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the the GGS Secret will be created. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this Compartment in which to create a Secret.
         */
        secretCompartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer GGS Secret being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this Secret
         */
        secretId: string;
        /**
         * The mode of the database connection session to be established by the data client. REDIRECT - for a RAC database, DIRECT - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
         */
        sessionMode: string;
        /**
         * A filter to return only the resources that match the 'lifecycleState' given.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
         */
        subnetId: string;
        /**
         * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeCreated: string;
        /**
         * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeUpdated: string;
        /**
         * The username Oracle GoldenGate uses to connect the associated RDBMS.  This username must already exist and be available for use by the database.  It must conform to the security requirements implemented by the database including length, case sensitivity, and so on.
         */
        username: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer vault being referenced. If provided, this will reference a vault which the customer will be required to ensure the policies are established to permit the GoldenGate Service to manage secrets contained within this vault.
         */
        vaultId: string;
        wallet: string;
    }

    export interface GetDatabaseRegistrationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDeploymentBackupsDeploymentBackupCollection {
        items: outputs.GoldenGate.GetDeploymentBackupsDeploymentBackupCollectionItem[];
    }

    export interface GetDeploymentBackupsDeploymentBackupCollectionItem {
        /**
         * Possible Deployment backup types.
         */
        backupType: string;
        /**
         * Name of the bucket where the object is to be uploaded in the object storage
         */
        bucket: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The ID of the deployment in which to list resources.
         */
        deploymentId: string;
        /**
         * A filter to return only the resources that match the entire 'displayName' given.
         */
        displayName: string;
        /**
         * A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
         */
        id: string;
        /**
         * True if this object is automatically created
         */
        isAutomatic: boolean;
        /**
         * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * Name of namespace that serves as a container for all of your buckets
         */
        namespace: string;
        /**
         * Name of the object to be uploaded to object storage
         */
        object: string;
        /**
         * Version of OGG
         */
        oggVersion: string;
        /**
         * The size of the backup stored in object storage (in bytes)
         */
        sizeInBytes: number;
        /**
         * A filter to return only the resources that match the 'lifecycleState' given.
         */
        state: string;
        /**
         * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time of the resource backup finish. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeBackupFinished: string;
        /**
         * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeCreated: string;
        /**
         * The time of the resource backup. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeOfBackup: string;
        /**
         * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeUpdated: string;
    }

    export interface GetDeploymentBackupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDeploymentOggData {
        adminPassword: string;
        /**
         * The GoldenGate deployment console username.
         */
        adminUsername: string;
        /**
         * A PEM-encoded SSL certificate.
         */
        certificate: string;
        /**
         * The name given to the GoldenGate service deployment. The name must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
         */
        deploymentName: string;
        key: string;
        /**
         * Version of OGG
         */
        oggVersion: string;
    }

    export interface GetDeploymentUpgradesDeploymentUpgradeCollection {
        items: outputs.GoldenGate.GetDeploymentUpgradesDeploymentUpgradeCollectionItem[];
    }

    export interface GetDeploymentUpgradesDeploymentUpgradeCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The ID of the deployment in which to list resources.
         */
        deploymentId: string;
        /**
         * The type of the deployment upgrade: MANUAL or AUTOMATIC
         */
        deploymentUpgradeType: string;
        /**
         * Metadata about this specific object.
         */
        description: string;
        /**
         * A filter to return only the resources that match the entire 'displayName' given.
         */
        displayName: string;
        /**
         * A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment upgrade being referenced.
         */
        id: string;
        /**
         * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * Possible GGS lifecycle sub-states.
         */
        lifecycleSubState: string;
        /**
         * Version of OGG
         */
        oggVersion: string;
        /**
         * A filter to return only the resources that match the 'lifecycleState' given.
         */
        state: string;
        /**
         * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeCreated: string;
        /**
         * The date and time the request was finished. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeFinished: string;
        /**
         * The date and time the request was started. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeStarted: string;
        /**
         * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeUpdated: string;
    }

    export interface GetDeploymentUpgradesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDeploymentsDeploymentCollection {
        items: outputs.GoldenGate.GetDeploymentsDeploymentCollectionItem[];
    }

    export interface GetDeploymentsDeploymentCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * The Minimum number of OCPUs to be made available for this Deployment.
         */
        cpuCoreCount: number;
        /**
         * Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
         */
        deploymentBackupId: string;
        /**
         * The deployment type.
         */
        deploymentType: string;
        /**
         * The URL of a resource.
         */
        deploymentUrl: string;
        /**
         * Metadata about this specific object.
         */
        description: string;
        /**
         * A filter to return only the resources that match the entire 'displayName' given.
         */
        displayName: string;
        /**
         * A filter to return only the resources that match the 'fqdn' given.
         */
        fqdn: string;
        /**
         * A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
         */
        id: string;
        /**
         * Indicates if auto scaling is enabled for the Deployment's CPU core count.
         */
        isAutoScalingEnabled: boolean;
        /**
         * True if all of the aggregate resources are working correctly.
         */
        isHealthy: boolean;
        /**
         * Indicates if the resource is the the latest available version.
         */
        isLatestVersion: boolean;
        /**
         * True if this object is publicly available.
         */
        isPublic: boolean;
        /**
         * Indicator will be true if the amount of storage being utilized exceeds the allowable storage utilization limit.  Exceeding the limit may be an indication of a misconfiguration of the deployment's GoldenGate service.
         */
        isStorageUtilizationLimitExceeded: boolean;
        /**
         * The Oracle license model that applies to a Deployment.
         */
        licenseModel: string;
        /**
         * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only the resources that match the 'lifecycleSubState' given.
         */
        lifecycleSubState: string;
        /**
         * An array of [Network Security Group](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/networksecuritygroups.htm) OCIDs used to define network access for a deployment.
         */
        nsgIds: string[];
        /**
         * Deployment Data for an OggDeployment
         */
        oggDatas: outputs.GoldenGate.GetDeploymentsDeploymentCollectionItemOggData[];
        /**
         * The private IP address in the customer's VCN representing the access point for the associated endpoint service in the GoldenGate service VCN.
         */
        privateIpAddress: string;
        /**
         * The public IP address representing the access point for the Deployment.
         */
        publicIpAddress: string;
        /**
         * A filter to return only the resources that match the 'lifecycleState' given.
         */
        state: string;
        /**
         * The amount of storage being utilized (in bytes)
         */
        storageUtilizationInBytes: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
         */
        subnetId: string;
        /**
         * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeCreated: string;
        /**
         * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeUpdated: string;
        /**
         * The date the existing version in use will no longer be considered as usable and an upgrade will be required.  This date is typically 6 months after the version was released for use by GGS.  The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         */
        timeUpgradeRequired: string;
    }

    export interface GetDeploymentsDeploymentCollectionItemOggData {
        adminPassword: string;
        /**
         * The GoldenGate deployment console username.
         */
        adminUsername: string;
        /**
         * A PEM-encoded SSL certificate.
         */
        certificate: string;
        /**
         * The name given to the GoldenGate service deployment. The name must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
         */
        deploymentName: string;
        key: string;
        /**
         * Version of OGG
         */
        oggVersion: string;
    }

    export interface GetDeploymentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace HealthChecks {
    export interface GetHttpMonitorsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHttpMonitorsHttpMonitor {
        /**
         * Filters results by compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Filters results that exactly match the `displayName` field.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A dictionary of HTTP request headers.
         */
        headers: {[key: string]: any};
        /**
         * Filters results that match the `homeRegion`.
         */
        homeRegion: string;
        /**
         * The OCID of the resource.
         */
        id: string;
        /**
         * The monitor interval in seconds. Valid values: 10, 30, and 60.
         */
        intervalInSeconds: number;
        /**
         * Enables or disables the monitor. Set to 'true' to launch monitoring.
         */
        isEnabled: boolean;
        /**
         * The supported HTTP methods available for probes.
         */
        method: string;
        /**
         * The optional URL path to probe, including query parameters.
         */
        path: string;
        /**
         * The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
         */
        port: number;
        /**
         * The supported protocols available for HTTP probes.
         */
        protocol: string;
        /**
         * A URL for fetching the probe results.
         */
        resultsUrl: string;
        /**
         * A list of targets (hostnames or IP addresses) of the probe.
         */
        targets: string[];
        /**
         * The RFC 3339-formatted creation date and time of the probe.
         */
        timeCreated: string;
        /**
         * The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
         */
        timeoutInSeconds: number;
        /**
         * A list of names of vantage points from which to execute the probe.
         */
        vantagePointNames: string[];
    }

    export interface GetHttpProbeResultsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHttpProbeResultsHttpProbeResult {
        /**
         * The time immediately after the vantage point finishes establishing the connection to the server to retrieve the resource.
         */
        connectEnd: number;
        /**
         * The time immediately before the vantage point starts establishing the connection to the server to retrieve the resource.
         */
        connectStart: number;
        /**
         * TCP connection results.  All durations are in milliseconds.
         */
        connections: outputs.HealthChecks.GetHttpProbeResultsHttpProbeResultConnection[];
        /**
         * The DNS resolution results.
         */
        dns: outputs.HealthChecks.GetHttpProbeResultsHttpProbeResultDn[];
        /**
         * The time immediately before the vantage point finishes the domain name lookup for the resource.
         */
        domainLookupEnd: number;
        /**
         * The time immediately before the vantage point starts the domain name lookup for the resource.
         */
        domainLookupStart: number;
        /**
         * The total duration from start of request until response is fully consumed or the connection is closed.
         */
        duration: number;
        /**
         * The size, in octets, of the payload body prior to removing any applied content-codings.
         */
        encodedBodySize: number;
        /**
         * The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
         * * NONE - No error
         * * DNS - DNS errors
         * * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
         * * NETWORK - Network-related errors, for example a "network unreachable" error.
         * * SYSTEM - Internal system errors.
         */
        errorCategory: string;
        /**
         * The error information indicating why a probe execution failed.
         */
        errorMessage: string;
        /**
         * The time immediately before the vantage point starts to fetch the resource.
         */
        fetchStart: number;
        /**
         * True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
         */
        isHealthy: boolean;
        /**
         * True if the probe did not complete before the configured `timeoutInSeconds` value.
         */
        isTimedOut: boolean;
        /**
         * A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
         */
        key: string;
        /**
         * The OCID of a monitor or on-demand probe.
         */
        probeConfigurationId: string;
        /**
         * The supported protocols available for HTTP probes.
         */
        protocol: string;
        /**
         * The time immediately before the vantage point starts requesting the resource from the server.
         */
        requestStart: number;
        /**
         * The time immediately after the vantage point receives the last byte of the response or immediately before the transport connection is closed, whichever comes first.
         */
        responseEnd: number;
        /**
         * The time immediately after the vantage point's HTTP parser receives the first byte of the response.
         */
        responseStart: number;
        /**
         * The time immediately before the vantage point starts the handshake process to secure the current connection.
         */
        secureConnectionStart: number;
        /**
         * The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
         */
        startTime: number;
        /**
         * The HTTP response status code.
         */
        statusCode: number;
        /**
         * Filters results that match the `target`.
         */
        target: string;
        /**
         * The name of the vantage point that executed the probe.
         */
        vantagePointName: string;
    }

    export interface GetHttpProbeResultsHttpProbeResultConnection {
        /**
         * The connection IP address.
         */
        address: string;
        /**
         * Total connect duration, calculated using `connectEnd` minus `connectStart`.
         */
        connectDuration: number;
        /**
         * The port.
         */
        port: number;
        /**
         * The duration to secure the connection.  This value will be zero for insecure connections.  Calculated using `connectEnd` minus `secureConnectionStart`.
         */
        secureConnectDuration: number;
    }

    export interface GetHttpProbeResultsHttpProbeResultDn {
        /**
         * The addresses returned by DNS resolution.
         */
        addresses: string[];
        /**
         * Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
         */
        domainLookupDuration: number;
    }

    export interface GetPingMonitorsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPingMonitorsPingMonitor {
        /**
         * Filters results by compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Filters results that exactly match the `displayName` field.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Filters results that match the `homeRegion`.
         */
        homeRegion: string;
        /**
         * The OCID of the resource.
         */
        id: string;
        /**
         * The monitor interval in seconds. Valid values: 10, 30, and 60.
         */
        intervalInSeconds: number;
        /**
         * Enables or disables the monitor. Set to 'true' to launch monitoring.
         */
        isEnabled: boolean;
        /**
         * The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
         */
        port: number;
        /**
         * The protocols for ping probes.
         */
        protocol: string;
        /**
         * A URL for fetching the probe results.
         */
        resultsUrl: string;
        /**
         * A list of targets (hostnames or IP addresses) of the probe.
         */
        targets: string[];
        /**
         * The RFC 3339-formatted creation date and time of the probe.
         */
        timeCreated: string;
        /**
         * The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
         */
        timeoutInSeconds: number;
        /**
         * A list of names of vantage points from which to execute the probe.
         */
        vantagePointNames: string[];
    }

    export interface GetPingProbeResultsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPingProbeResultsPingProbeResult {
        /**
         * The network connection results.
         */
        connections: outputs.HealthChecks.GetPingProbeResultsPingProbeResultConnection[];
        /**
         * The DNS resolution results.
         */
        dns: outputs.HealthChecks.GetPingProbeResultsPingProbeResultDn[];
        /**
         * The time immediately before the vantage point finishes the domain name lookup for the resource.
         */
        domainLookupEnd: number;
        /**
         * The time immediately before the vantage point starts the domain name lookup for the resource.
         */
        domainLookupStart: number;
        /**
         * The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
         * * NONE - No error
         * * DNS - DNS errors
         * * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
         * * NETWORK - Network-related errors, for example a "network unreachable" error.
         * * SYSTEM - Internal system errors.
         */
        errorCategory: string;
        /**
         * The error information indicating why a probe execution failed.
         */
        errorMessage: string;
        /**
         * The ICMP code of the response message.  This field is not used when the protocol is set to TCP.  For more information on ICMP codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
         */
        icmpCode: number;
        /**
         * True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
         */
        isHealthy: boolean;
        /**
         * True if the probe did not complete before the configured `timeoutInSeconds` value.
         */
        isTimedOut: boolean;
        /**
         * A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
         */
        key: string;
        /**
         * The latency of the probe execution, in milliseconds.
         */
        latencyInMs: number;
        /**
         * The OCID of a monitor or on-demand probe.
         */
        probeConfigurationId: string;
        /**
         * The protocols for ping probes.
         */
        protocol: string;
        /**
         * The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
         */
        startTime: number;
        /**
         * Filters results that match the `target`.
         */
        target: string;
        /**
         * The name of the vantage point that executed the probe.
         */
        vantagePointName: string;
    }

    export interface GetPingProbeResultsPingProbeResultConnection {
        /**
         * The connection IP address.
         */
        address: string;
        /**
         * The port.
         */
        port: number;
    }

    export interface GetPingProbeResultsPingProbeResultDn {
        /**
         * The addresses returned by DNS resolution.
         */
        addresses: string[];
        /**
         * Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
         */
        domainLookupDuration: number;
    }

    export interface GetVantagePointsFilter {
        /**
         * Filters results that exactly match the `name` field.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVantagePointsHealthChecksVantagePoint {
        /**
         * Filters results that exactly match the `displayName` field.
         */
        displayName: string;
        /**
         * Geographic information about a vantage point.
         */
        geos: outputs.HealthChecks.GetVantagePointsHealthChecksVantagePointGeo[];
        /**
         * Filters results that exactly match the `name` field.
         */
        name: string;
        /**
         * The organization on whose infrastructure this vantage point resides. Provider names are not unique, as Oracle Cloud Infrastructure maintains many vantage points in each major provider.
         */
        providerName: string;
        /**
         * An array of objects that describe how traffic to this vantage point is routed, including which prefixes and ASNs connect it to the internet.
         */
        routings: outputs.HealthChecks.GetVantagePointsHealthChecksVantagePointRouting[];
    }

    export interface GetVantagePointsHealthChecksVantagePointGeo {
        /**
         * The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
         */
        adminDivCode: string;
        /**
         * Common English-language name for the city.
         */
        cityName: string;
        /**
         * The ISO 3166-1 alpha-2 country code. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
         */
        countryCode: string;
        /**
         * The common English-language name for the country.
         */
        countryName: string;
        /**
         * An opaque identifier for the geographic location of the vantage point.
         */
        geoKey: string;
        /**
         * Degrees north of the Equator.
         */
        latitude: number;
        /**
         * Degrees east of the prime meridian.
         */
        longitude: number;
    }

    export interface GetVantagePointsHealthChecksVantagePointRouting {
        /**
         * The registry label for `asn`, usually the name of the organization that owns the ASN. May be omitted or null.
         */
        asLabel: string;
        /**
         * The Autonomous System Number (ASN) identifying the organization responsible for routing packets to `prefix`.
         */
        asn: number;
        /**
         * An IP prefix (CIDR syntax) that is less specific than `address`, through which `address` is routed.
         */
        prefix: string;
        /**
         * An integer between 0 and 100 used to select between multiple origin ASNs when routing to `prefix`. Most prefixes have exactly one origin ASN, in which case `weight` will be 100.
         */
        weight: number;
    }

}

export namespace Identity {
    export interface AuthenticationPolicyNetworkPolicy {
        /**
         * (Updatable) Network Source ids
         */
        networkSourceIds: string[];
    }

    export interface AuthenticationPolicyPasswordPolicy {
        /**
         * (Updatable) At least one lower case character required.
         */
        isLowercaseCharactersRequired: boolean;
        /**
         * (Updatable) At least one numeric character required.
         */
        isNumericCharactersRequired: boolean;
        /**
         * (Updatable) At least one special character required.
         */
        isSpecialCharactersRequired: boolean;
        /**
         * (Updatable) At least one uppercase character required.
         */
        isUppercaseCharactersRequired: boolean;
        /**
         * (Updatable) User name is allowed to be part of the password.
         */
        isUsernameContainmentAllowed: boolean;
        /**
         * (Updatable) Minimum password length required.
         */
        minimumPasswordLength: number;
    }

    export interface DomainReplicaRegion {
        /**
         * A REPLICATION_ENABLED region, e.g. us-ashburn-1. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.
         */
        region: string;
        /**
         * The current state.
         */
        state: string;
        /**
         * Region agnostic domain URL.
         */
        url: string;
    }

    export interface GetAllowedDomainLicenseTypesAllowedDomainLicenseType {
        /**
         * The license type description.
         */
        description: string;
        /**
         * The license type identifier.  Example: "oracle-apps-premium"
         */
        licenseType: string;
        /**
         * The license type name.  Example: "Oracle Apps Premium"
         */
        name: string;
    }

    export interface GetAllowedDomainLicenseTypesFilter {
        /**
         * The license type name.  Example: "Oracle Apps Premium"
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetApiKeysApiKey {
        /**
         * The key's fingerprint (e.g., 12:34:56:78:90:ab:cd:ef:12:34:56:78:90:ab:cd:ef).
         */
        fingerprint: string;
        /**
         * An Oracle-assigned identifier for the key, in this format: TENANCY_OCID/USER_OCID/KEY_FINGERPRINT.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveStatus: string;
        /**
         * The key's value.
         */
        keyValue: string;
        /**
         * The API key's current state.
         */
        state: string;
        /**
         * Date and time the `ApiKey` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The OCID of the user.
         */
        userId: string;
    }

    export interface GetApiKeysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAuthTokensFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAuthTokensToken {
        /**
         * The description you assign to the auth token. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * The OCID of the auth token.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * The token's current state.
         */
        state: string;
        /**
         * Date and time the `AuthToken` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Date and time when this auth token will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeExpires: string;
        /**
         * The auth token. The value is available only in the response for `CreateAuthToken`, and not for `ListAuthTokens` or `UpdateAuthToken`.
         */
        token: string;
        /**
         * The OCID of the user.
         */
        userId: string;
    }

    export interface GetAuthenticationPolicyNetworkPolicy {
        /**
         * Network Source ids
         */
        networkSourceIds: string[];
    }

    export interface GetAuthenticationPolicyPasswordPolicy {
        /**
         * At least one lower case character required.
         */
        isLowercaseCharactersRequired: boolean;
        /**
         * At least one numeric character required.
         */
        isNumericCharactersRequired: boolean;
        /**
         * At least one special character required.
         */
        isSpecialCharactersRequired: boolean;
        /**
         * At least one uppercase character required.
         */
        isUppercaseCharactersRequired: boolean;
        /**
         * User name is allowed to be part of the password.
         */
        isUsernameContainmentAllowed: boolean;
        /**
         * Minimum password length required.
         */
        minimumPasswordLength: number;
    }

    export interface GetAvailabilityDomainsAvailabilityDomain {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * The OCID of the Availability Domain.
         */
        id: string;
        /**
         * The name of the Availability Domain.
         */
        name: string;
    }

    export interface GetAvailabilityDomainsFilter {
        /**
         * The name of the Availability Domain.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCompartmentsCompartment {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the compartment. Does not have to be unique, and it's changeable.
         */
        description: string;
        enableDelete: boolean;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the compartment.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * Indicates whether or not the compartment is accessible for the user making the request. Returns true when the user has INSPECT permissions directly on a resource in the compartment or indirectly (permissions can be on a resource in a subcompartment).
         */
        isAccessible: boolean;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the compartment was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetCompartmentsFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCostTrackingTagsFilter {
        /**
         * The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
         */
        name: string;
        regex?: boolean;
        /**
         * The list of allowed values for a definedTag value.
         */
        values: string[];
    }

    export interface GetCostTrackingTagsTag {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the tag.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the tag definition.
         */
        id: string;
        /**
         * Indicates whether the tag is enabled for cost tracking.
         */
        isCostTracking: boolean;
        /**
         * Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
         */
        isRetired: boolean;
        /**
         * The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
         */
        name: string;
        /**
         * The tag's current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag's `lifecycleState` changes from DELETING to DELETED.
         */
        state: string;
        /**
         * The OCID of the namespace that contains the tag definition.
         */
        tagNamespaceId: string;
        /**
         * The name of the tag namespace that contains the tag definition.
         */
        tagNamespaceName: string;
        /**
         * Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
         */
        validators: outputs.Identity.GetCostTrackingTagsTagValidator[];
    }

    export interface GetCostTrackingTagsTagValidator {
        /**
         * Specifies the type of validation: a static value (no validation) or a list.
         */
        validatorType: string;
        /**
         * The list of allowed values for a definedTag value.
         */
        values: string[];
    }

    export interface GetCustomerSecretKeysCustomerSecretKey {
        /**
         * The display name you assign to the secret key. Does not have to be unique, and it's changeable.
         */
        displayName: string;
        /**
         * The access key portion of the key pair.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        key: string;
        /**
         * The secret key's current state.
         */
        state: string;
        /**
         * Date and time the `CustomerSecretKey` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Date and time when this password will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeExpires: string;
        /**
         * The OCID of the user.
         */
        userId: string;
    }

    export interface GetCustomerSecretKeysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDbCredentialsDbCredential {
        /**
         * The description you assign to the DB credential. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * The OCID of the DB credential.
         */
        id: string;
        lifecycleDetails: string;
        password: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the `DbCredential` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Date and time when this credential will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeExpires: string;
        /**
         * The OCID of the user.
         */
        userId: string;
    }

    export interface GetDbCredentialsFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDomainReplicaRegion {
        /**
         * A REPLICATION_ENABLED region, e.g. us-ashburn-1. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.
         */
        region: string;
        /**
         * The current state.
         */
        state: string;
        /**
         * Region agnostic domain URL.
         */
        url: string;
    }

    export interface GetDomainsDomain {
        adminEmail: string;
        adminFirstName: string;
        adminLastName: string;
        adminUserName: string;
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The domain descripition
         */
        description: string;
        /**
         * The mutable display name of the domain
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The home region for the domain. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
         */
        homeRegion: string;
        /**
         * The region specific domain URL
         */
        homeRegionUrl: string;
        /**
         * The OCID of the domain
         */
        id: string;
        /**
         * Indicate if the domain is visible at login screen or not
         */
        isHiddenOnLogin: boolean;
        isNotificationBypassed: boolean;
        isPrimaryEmailRequired: boolean;
        /**
         * The domain license type
         */
        licenseType: string;
        /**
         * Any additional details about the current state of the Domain.
         */
        lifecycleDetails: string;
        /**
         * The regions domain is replication to.
         */
        replicaRegions: outputs.Identity.GetDomainsDomainReplicaRegion[];
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the domain was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The domain type
         */
        type: string;
        /**
         * The region agnostic domain URL
         */
        url: string;
    }

    export interface GetDomainsDomainReplicaRegion {
        /**
         * A REPLICATION_ENABLED region, e.g. us-ashburn-1. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.
         */
        region: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * The region agnostic domain URL
         */
        url: string;
    }

    export interface GetDomainsFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDynamicGroupsDynamicGroup {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the group. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the group.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * A rule string that defines which instance certificates will be matched. For syntax, see [Managing Dynamic Groups](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingdynamicgroups.htm).
         */
        matchingRule: string;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetDynamicGroupsFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFaultDomainsFaultDomain {
        /**
         * The name of the availibilityDomain.
         */
        availabilityDomain: string;
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * The OCID of the Fault Domain.
         */
        id: string;
        /**
         * The name of the Fault Domain.
         */
        name: string;
    }

    export interface GetFaultDomainsFilter {
        /**
         * The name of the Fault Domain.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetGroupsFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetGroupsGroup {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the group. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the group.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetIamWorkRequestErrorsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIamWorkRequestErrorsIamWorkRequestError {
        /**
         * A machine-usable code for the error that occured.
         */
        code: string;
        /**
         * A human-readable error string.
         */
        message: string;
        /**
         * The date and time the error occurred.
         */
        timestamp: string;
    }

    export interface GetIamWorkRequestLogsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIamWorkRequestLogsIamWorkRequestLog {
        /**
         * A human-readable error string.
         */
        message: string;
        /**
         * Date and time the log was written, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
         */
        timestamp: string;
    }

    export interface GetIamWorkRequestResource {
        /**
         * The way in which this resource is affected by the work tracked in the work request. A resource being created, updated, or deleted will remain in the IN_PROGRESS state until work is complete for that resource at which point it will transition to CREATED, UPDATED, or DELETED, respectively.
         */
        actionType: string;
        /**
         * The resource type the work request is affects.
         */
        entityType: string;
        /**
         * The URI path that the user can do a GET on to access the resource metadata.
         */
        entityUri: string;
        /**
         * An OCID of the resource that the work request affects.
         */
        identifier: string;
    }

    export interface GetIamWorkRequestsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIamWorkRequestsIamWorkRequest {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * The OCID of the work request.
         */
        id: string;
        /**
         * The asynchronous operation tracked by this IAM work request.
         */
        operationType: string;
        /**
         * How much progress the operation has made.
         */
        percentComplete: number;
        /**
         * The resources this work request affects.
         */
        resources: outputs.Identity.GetIamWorkRequestsIamWorkRequestResource[];
        /**
         * Status of the work request
         */
        status: string;
        /**
         * Date and time the work was accepted, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
         */
        timeAccepted: string;
        /**
         * Date and time the work completed, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
         */
        timeFinished: string;
        /**
         * Date and time the work started, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
         */
        timeStarted: string;
    }

    export interface GetIamWorkRequestsIamWorkRequestResource {
        /**
         * The way in which this resource is affected by the work tracked in the work request. A resource being created, updated, or deleted will remain in the IN_PROGRESS state until work is complete for that resource at which point it will transition to CREATED, UPDATED, or DELETED, respectively.
         */
        actionType: string;
        /**
         * The resource type the work request is affects.
         */
        entityType: string;
        /**
         * The URI path that the user can do a GET on to access the resource metadata.
         */
        entityUri: string;
        /**
         * An OCID of the resource that the work request affects.
         */
        identifier: string;
    }

    export interface GetIdentityProviderGroupsFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIdentityProviderGroupsIdentityProviderGroup {
        /**
         * Display name of the group
         */
        displayName: string;
        /**
         * Identifier of the group in the identity provider
         */
        externalIdentifier: string;
        /**
         * The OCID of the `IdentityProviderGroup`.
         */
        id: string;
        /**
         * The OCID of the identity provider.
         */
        identityProviderId: string;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * Date and time the `IdentityProviderGroup` was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Date and time the `IdentityProviderGroup` was last modified, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeModified: string;
    }

    export interface GetIdentityProvidersFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIdentityProvidersIdentityProvider {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * Extra name value pairs associated with this identity provider. Example: `{"clientId": "appSf3kdjf3"}`
         */
        freeformAttributes: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the `IdentityProvider`.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * The XML that contains the information required for federating Identity with SAML2 Identity Provider.
         */
        metadata: string;
        /**
         * The URL for retrieving the identity provider's metadata, which contains information required for federating.
         */
        metadataUrl: string;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).
         */
        productType: string;
        /**
         * The protocol used for federation.
         */
        protocol: string;
        /**
         * The URL to redirect federated users to for authentication with the identity provider.
         */
        redirectUrl: string;
        /**
         * The identity provider's signing certificate used by the IAM Service to validate the SAML2 token.
         */
        signingCertificate: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the `IdentityProvider` was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetIdpGroupMappingsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIdpGroupMappingsIdpGroupMapping {
        /**
         * The OCID of the tenancy containing the `IdentityProvider`.
         */
        compartmentId: string;
        /**
         * The OCID of the IAM Service group that is mapped to the IdP group.
         */
        groupId: string;
        /**
         * The OCID of the `IdpGroupMapping`.
         */
        id: string;
        /**
         * The OCID of the identity provider.
         */
        identityProviderId: string;
        /**
         * The name of the IdP group that is mapped to the IAM Service group.
         */
        idpGroupName: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * The mapping's current state.
         */
        state: string;
        /**
         * Date and time the mapping was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetNetworkSourceVirtualSourceList {
        ipRanges: string[];
        vcnId: string;
    }

    export interface GetNetworkSourcesFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkSourcesNetworkSource {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the network source. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the network source.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * A list of allowed public IP addresses and CIDR ranges.
         */
        publicSourceLists: string[];
        /**
         * A list of services allowed to make on-behalf-of requests. These requests can have different source IPs than those specified in the network source. Currently, only `all` and `none` are supported. The default is `all`.
         */
        services: string[];
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
         */
        virtualSourceLists: outputs.Identity.GetNetworkSourcesNetworkSourceVirtualSourceList[];
    }

    export interface GetNetworkSourcesNetworkSourceVirtualSourceList {
        ipRanges: string[];
        vcnId: string;
    }

    export interface GetPoliciesFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPoliciesPolicy {
        /**
         * @deprecated The 'ETag' field has been deprecated and may be removed in a future version. Do not use this field.
         */
        ETag: string;
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the policy. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the policy.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * @deprecated The 'lastUpdateETag' field has been deprecated and may be removed in a future version. Do not use this field.
         */
        lastUpdateETag: string;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * @deprecated The 'policyHash' field has been deprecated and may be removed in a future version. Do not use this field.
         */
        policyHash: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * An array of one or more policy statements written in the policy language.
         */
        statements: string[];
        /**
         * Date and time the policy was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The version of the policy. If null or set to an empty string, when a request comes in for authorization, the policy will be evaluated according to the current behavior of the services at that moment. If set to a particular date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
         */
        versionDate: string;
    }

    export interface GetRegionSubscriptionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRegionSubscriptionsRegionSubscription {
        /**
         * Indicates if the region is the home region or not.
         */
        isHomeRegion: boolean;
        /**
         * The region's key. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported 3-letter region codes.  Example: `PHX`
         */
        regionKey: string;
        /**
         * The region's name. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
         */
        regionName: string;
        state: string;
        /**
         * The OCID of the tenancy.
         */
        tenancyId: string;
    }

    export interface GetRegionsFilter {
        /**
         * The name of the region. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRegionsRegion {
        /**
         * The key of the region. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported 3-letter region codes.  Example: `PHX`
         */
        key: string;
        /**
         * The name of the region. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
         */
        name: string;
    }

    export interface GetSmtpCredentialsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSmtpCredentialsSmtpCredential {
        /**
         * The description you assign to the SMTP credential. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * The OCID of the SMTP credential.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        password: string;
        /**
         * The credential's current state.
         */
        state: string;
        /**
         * Date and time the `SmtpCredential` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Date and time when this credential will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeExpires: string;
        /**
         * The OCID of the user.
         */
        userId: string;
        /**
         * The SMTP user name.
         */
        username: string;
    }

    export interface GetSwiftPasswordsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSwiftPasswordsPassword {
        /**
         * The description you assign to the Swift password. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * Date and time when this password will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
         */
        expiresOn: string;
        /**
         * The OCID of the Swift password.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * The Swift password. The value is available only in the response for `CreateSwiftPassword`, and not for `ListSwiftPasswords` or `UpdateSwiftPassword`.
         */
        password: string;
        /**
         * The password's current state.
         */
        state: string;
        /**
         * Date and time the `SwiftPassword` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The OCID of the user.
         */
        userId: string;
    }

    export interface GetTagDefaultsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTagDefaultsTagDefault {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * A filter to only return resources that match the specified OCID exactly.
         */
        id: string;
        /**
         * If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
         * * If the `isRequired` flag is set to "true", the value is set during resource creation.
         * * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
         */
        isRequired: boolean;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * The OCID of the tag definition.
         */
        tagDefinitionId: string;
        /**
         * The name used in the tag definition. This field is informational in the context of the tag default.
         */
        tagDefinitionName: string;
        /**
         * The OCID of the tag namespace that contains the tag definition.
         */
        tagNamespaceId: string;
        /**
         * Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The default value for the tag definition. This will be applied to all new resources created in the compartment.
         */
        value: string;
    }

    export interface GetTagNamespacesFilter {
        /**
         * The name of the tag namespace. It must be unique across all tag namespaces in the tenancy and cannot be changed.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTagNamespacesTagNamespace {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the tag namespace.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the tag namespace.
         */
        id: string;
        /**
         * Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
         */
        isRetired: boolean;
        /**
         * The name of the tag namespace. It must be unique across all tag namespaces in the tenancy and cannot be changed.
         */
        name: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the tag namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetTagStandardTagNamespaceTemplateTagDefinitionTemplate {
        /**
         * The default description of the tag namespace that users can use to create the tag definition
         */
        description: string;
        /**
         * The mutability of the possible values list for enum tags. This will default to IMMUTABLE for string value tags
         */
        enumMutability: string;
        /**
         * Is the tag a cost tracking tag. Default will be false as cost tracking tags have been deprecated
         */
        isCostTracking: boolean;
        /**
         * List of possible values. An optional parameter that will be present if the type of definition is enum.
         */
        possibleValues: string[];
        /**
         * The name of this standard tag definition
         */
        tagDefinitionName: string;
        /**
         * The type of tag definition. Enum or string.
         */
        type: string;
    }

    export interface GetTagStandardTagNamespaceTemplatesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate {
        /**
         * The default description of the tag namespace that users can use to create the tag namespace
         */
        description: string;
        /**
         * The reserved name of this standard tag namespace
         */
        standardTagNamespaceName: string;
        /**
         * The status of the standard tag namespace
         */
        status: string;
    }

    export interface GetTagValidator {
        /**
         * Specifies the type of validation: a static value (no validation) or a list.
         */
        validatorType: string;
        /**
         * The list of allowed values for a definedTag value.
         */
        values: string[];
    }

    export interface GetTagsFilter {
        /**
         * The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
         */
        name: string;
        regex?: boolean;
        /**
         * The list of allowed values for a definedTag value.
         */
        values: string[];
    }

    export interface GetTagsTag {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the tag.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the tag definition.
         */
        id: string;
        /**
         * Indicates whether the tag is enabled for cost tracking.
         */
        isCostTracking: boolean;
        /**
         * Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
         */
        isRetired: boolean;
        /**
         * The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
         */
        name: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * The OCID of the tag namespace.
         */
        tagNamespaceId: string;
        /**
         * Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
         */
        validators: outputs.Identity.GetTagsTagValidator[];
    }

    export interface GetTagsTagValidator {
        /**
         * Specifies the type of validation: a static value (no validation) or a list.
         */
        validatorType: string;
        /**
         * The list of allowed values for a definedTag value.
         */
        values: string[];
    }

    export interface GetUserCapability {
        /**
         * Indicates if the user can use API keys.
         */
        canUseApiKeys: boolean;
        /**
         * Indicates if the user can use SWIFT passwords / auth tokens.
         */
        canUseAuthTokens: boolean;
        /**
         * Indicates if the user can log in to the console.
         */
        canUseConsolePassword: boolean;
        /**
         * Indicates if the user can use SigV4 symmetric keys.
         */
        canUseCustomerSecretKeys: boolean;
        /**
         * Indicates if the user can use DB passwords.
         */
        canUseDbCredentials: boolean;
        /**
         * Indicates if the user can use OAuth2 credentials and tokens.
         */
        canUseOauth2clientCredentials: boolean;
        /**
         * Indicates if the user can use SMTP passwords.
         */
        canUseSmtpCredentials: boolean;
    }

    export interface GetUserGroupMembershipsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetUserGroupMembershipsMembership {
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * The OCID of the group.
         */
        groupId: string;
        /**
         * The OCID of the membership.
         */
        id: string;
        /**
         * The detailed status of INACTIVE lifecycleState.
         */
        inactiveState: string;
        /**
         * The membership's current state.
         */
        state: string;
        /**
         * Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The OCID of the user.
         */
        userId: string;
    }

    export interface GetUsersFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetUsersUser {
        /**
         * Properties indicating how the user is allowed to authenticate.
         */
        capabilities: outputs.Identity.GetUsersUserCapability[];
        /**
         * The OCID of the compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * DB username of the DB credential. Has to be unique across the tenancy.
         */
        dbUserName: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the user. Does not have to be unique, and it's changeable.
         */
        description: string;
        /**
         * The email address you assign to the user. The email address must be unique across all users in the tenancy.
         */
        email: string;
        /**
         * Whether the email address has been validated.
         */
        emailVerified: boolean;
        /**
         * The id of a user in the identity provider.
         */
        externalIdentifier: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the user.
         */
        id: string;
        /**
         * The id of the identity provider.
         */
        identityProviderId: string;
        /**
         * Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
         * * bit 0: SUSPENDED (reserved for future use)
         * * bit 1: DISABLED (reserved for future use)
         * * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
         */
        inactiveState: string;
        /**
         * The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
         */
        lastSuccessfulLoginTime: string;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
         */
        previousSuccessfulLoginTime: string;
        /**
         * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         */
        state: string;
        /**
         * Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetUsersUserCapability {
        /**
         * Indicates if the user can use API keys.
         */
        canUseApiKeys: boolean;
        /**
         * Indicates if the user can use SWIFT passwords / auth tokens.
         */
        canUseAuthTokens: boolean;
        /**
         * Indicates if the user can log in to the console.
         */
        canUseConsolePassword: boolean;
        /**
         * Indicates if the user can use SigV4 symmetric keys.
         */
        canUseCustomerSecretKeys: boolean;
        /**
         * Indicates if the user can use DB passwords.
         */
        canUseDbCredentials: boolean;
        /**
         * Indicates if the user can use OAuth2 credentials and tokens.
         */
        canUseOauth2clientCredentials: boolean;
        /**
         * Indicates if the user can use SMTP passwords.
         */
        canUseSmtpCredentials: boolean;
    }

    export interface NetworkSourceVirtualSourceList {
        ipRanges: string[];
        vcnId: string;
    }

    export interface TagValidator {
        /**
         * (Updatable) Specifies the type of validation: a static value (no validation) or a list.
         */
        validatorType: string;
        /**
         * (Updatable) The list of allowed values for a definedTag value.
         */
        values: string[];
    }

    export interface UserCapability {
        /**
         * Indicates if the user can use API keys.
         */
        canUseApiKeys: boolean;
        /**
         * Indicates if the user can use SWIFT passwords / auth tokens.
         */
        canUseAuthTokens: boolean;
        /**
         * Indicates if the user can log in to the console.
         */
        canUseConsolePassword: boolean;
        /**
         * Indicates if the user can use SigV4 symmetric keys.
         */
        canUseCustomerSecretKeys: boolean;
        /**
         * Indicates if the user can use DB passwords.
         */
        canUseDbCredentials: boolean;
        /**
         * Indicates if the user can use OAuth2 credentials and tokens.
         */
        canUseOauth2clientCredentials: boolean;
        /**
         * Indicates if the user can use SMTP passwords.
         */
        canUseSmtpCredentials: boolean;
    }

}

export namespace Integration {
    export interface GetIntegrationInstanceAlternateCustomEndpoint {
        /**
         * When creating the DNS CNAME record for the custom hostname, this value must be specified in the rdata.
         */
        alias: string;
        /**
         * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * A custom hostname to be used for the integration instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface GetIntegrationInstanceAttachment {
        /**
         * * If role == `PARENT`, the attached instance was created by this service instance
         * * If role == `CHILD`, this instance was created from attached instance on behalf of a user
         */
        isImplicit: boolean;
        /**
         * The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
         */
        targetId: string;
        /**
         * The dataplane instance URL of the attached instance
         */
        targetInstanceUrl: string;
        /**
         * The role of the target attachment.
         */
        targetRole: string;
        /**
         * The type of the target instance, such as "FUSION".
         */
        targetServiceType: string;
    }

    export interface GetIntegrationInstanceCustomEndpoint {
        /**
         * When creating the DNS CNAME record for the custom hostname, this value must be specified in the rdata.
         */
        alias: string;
        /**
         * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * A custom hostname to be used for the integration instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface GetIntegrationInstanceIdcsInfo {
        /**
         * The IDCS application display name associated with the instance
         */
        idcsAppDisplayName: string;
        /**
         * The IDCS application ID associated with the instance
         */
        idcsAppId: string;
        /**
         * URL for the location of the IDCS Application (used by IDCS APIs)
         */
        idcsAppLocationUrl: string;
        /**
         * The IDCS application name associated with the instance
         */
        idcsAppName: string;
        /**
         * The URL used as the primary audience for integration flows in this instance type: string
         */
        instancePrimaryAudienceUrl: string;
    }

    export interface GetIntegrationInstanceNetworkEndpointDetail {
        /**
         * Source IP addresses or IP address ranges ingress rules. (ex: "168.122.59.5", "10.20.30.0/26") An invalid IP or CIDR block will result in a 400 response.
         */
        allowlistedHttpIps: string[];
        /**
         * Virtual Cloud Networks allowed to access this network endpoint.
         */
        allowlistedHttpVcns: outputs.Integration.GetIntegrationInstanceNetworkEndpointDetailAllowlistedHttpVcn[];
        /**
         * The Integration service's VCN is allow-listed to allow integrations to call back into other integrations
         */
        isIntegrationVcnAllowlisted: boolean;
        /**
         * The type of network endpoint.
         */
        networkEndpointType: string;
    }

    export interface GetIntegrationInstanceNetworkEndpointDetailAllowlistedHttpVcn {
        /**
         * Source IP addresses or IP address ranges ingress rules. (ex: "168.122.59.5", "10.20.30.0/26") An invalid IP or CIDR block will result in a 400 response.
         */
        allowlistedIps: string[];
        /**
         * The Virtual Cloud Network OCID.
         */
        id: string;
    }

    export interface GetIntegrationInstancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIntegrationInstancesIntegrationInstance {
        /**
         * A list of alternate custom endpoints used for the integration instance URL.
         */
        alternateCustomEndpoints: outputs.Integration.GetIntegrationInstancesIntegrationInstanceAlternateCustomEndpoint[];
        /**
         * A list of associated attachments to other services
         */
        attachments: outputs.Integration.GetIntegrationInstancesIntegrationInstanceAttachment[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * The entitlement used for billing purposes.
         */
        consumptionModel: string;
        /**
         * Details for a custom endpoint for the integration instance.
         */
        customEndpoints: outputs.Integration.GetIntegrationInstancesIntegrationInstanceCustomEndpoint[];
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The Virtual Cloud Network OCID.
         */
        id: string;
        idcsAt: string;
        /**
         * Information for IDCS access
         */
        idcsInfos: outputs.Integration.GetIntegrationInstancesIntegrationInstanceIdcsInfo[];
        /**
         * The Integration Instance URL.
         */
        instanceUrl: string;
        /**
         * Standard or Enterprise type
         */
        integrationInstanceType: string;
        /**
         * Bring your own license.
         */
        isByol: boolean;
        /**
         * The file server is enabled or not.
         */
        isFileServerEnabled: boolean;
        /**
         * Visual Builder is enabled or not.
         */
        isVisualBuilderEnabled: boolean;
        /**
         * The number of configured message packs (if any)
         */
        messagePacks: number;
        /**
         * Base representation of a network endpoint.
         */
        networkEndpointDetails: outputs.Integration.GetIntegrationInstancesIntegrationInstanceNetworkEndpointDetail[];
        /**
         * Life cycle state to query on.
         */
        state: string;
        /**
         * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        stateMessage: string;
        /**
         * The time the the Integration Instance was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetIntegrationInstancesIntegrationInstanceAlternateCustomEndpoint {
        /**
         * When creating the DNS CNAME record for the custom hostname, this value must be specified in the rdata.
         */
        alias: string;
        /**
         * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * A custom hostname to be used for the integration instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface GetIntegrationInstancesIntegrationInstanceAttachment {
        /**
         * * If role == `PARENT`, the attached instance was created by this service instance
         * * If role == `CHILD`, this instance was created from attached instance on behalf of a user
         */
        isImplicit: boolean;
        /**
         * The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
         */
        targetId: string;
        /**
         * The dataplane instance URL of the attached instance
         */
        targetInstanceUrl: string;
        /**
         * The role of the target attachment.
         */
        targetRole: string;
        /**
         * The type of the target instance, such as "FUSION".
         */
        targetServiceType: string;
    }

    export interface GetIntegrationInstancesIntegrationInstanceCustomEndpoint {
        /**
         * When creating the DNS CNAME record for the custom hostname, this value must be specified in the rdata.
         */
        alias: string;
        /**
         * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * A custom hostname to be used for the integration instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface GetIntegrationInstancesIntegrationInstanceIdcsInfo {
        /**
         * The IDCS application display name associated with the instance
         */
        idcsAppDisplayName: string;
        /**
         * The IDCS application ID associated with the instance
         */
        idcsAppId: string;
        /**
         * URL for the location of the IDCS Application (used by IDCS APIs)
         */
        idcsAppLocationUrl: string;
        /**
         * The IDCS application name associated with the instance
         */
        idcsAppName: string;
        /**
         * The URL used as the primary audience for integration flows in this instance type: string
         */
        instancePrimaryAudienceUrl: string;
    }

    export interface GetIntegrationInstancesIntegrationInstanceNetworkEndpointDetail {
        /**
         * Source IP addresses or IP address ranges ingress rules. (ex: "168.122.59.5", "10.20.30.0/26") An invalid IP or CIDR block will result in a 400 response.
         */
        allowlistedHttpIps: string[];
        /**
         * Virtual Cloud Networks allowed to access this network endpoint.
         */
        allowlistedHttpVcns: outputs.Integration.GetIntegrationInstancesIntegrationInstanceNetworkEndpointDetailAllowlistedHttpVcn[];
        /**
         * The Integration service's VCN is allow-listed to allow integrations to call back into other integrations
         */
        isIntegrationVcnAllowlisted: boolean;
        /**
         * The type of network endpoint.
         */
        networkEndpointType: string;
    }

    export interface GetIntegrationInstancesIntegrationInstanceNetworkEndpointDetailAllowlistedHttpVcn {
        /**
         * Source IP addresses or IP address ranges ingress rules. (ex: "168.122.59.5", "10.20.30.0/26") An invalid IP or CIDR block will result in a 400 response.
         */
        allowlistedIps: string[];
        /**
         * The Virtual Cloud Network OCID.
         */
        id: string;
    }

    export interface IntegrationInstanceAlternateCustomEndpoint {
        /**
         * When creating the DNS CNAME record for the custom hostname, this value must be specified in the rdata.
         */
        alias: string;
        /**
         * (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * (Updatable) A custom hostname to be used for the integration instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface IntegrationInstanceAttachment {
        /**
         * * If role == `PARENT`, the attached instance was created by this service instance
         * * If role == `CHILD`, this instance was created from attached instance on behalf of a user
         */
        isImplicit: boolean;
        /**
         * The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
         */
        targetId: string;
        /**
         * The dataplane instance URL of the attached instance
         */
        targetInstanceUrl: string;
        /**
         * The role of the target attachment.
         */
        targetRole: string;
        /**
         * The type of the target instance, such as "FUSION".
         */
        targetServiceType: string;
    }

    export interface IntegrationInstanceCustomEndpoint {
        /**
         * When creating the DNS CNAME record for the custom hostname, this value must be specified in the rdata.
         */
        alias: string;
        /**
         * (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * (Updatable) A custom hostname to be used for the integration instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface IntegrationInstanceIdcsInfo {
        /**
         * The IDCS application display name associated with the instance
         */
        idcsAppDisplayName: string;
        /**
         * The IDCS application ID associated with the instance
         */
        idcsAppId: string;
        /**
         * URL for the location of the IDCS Application (used by IDCS APIs)
         */
        idcsAppLocationUrl: string;
        /**
         * The IDCS application name associated with the instance
         */
        idcsAppName: string;
        /**
         * The URL used as the primary audience for integration flows in this instance type: string
         */
        instancePrimaryAudienceUrl: string;
    }

    export interface IntegrationInstanceNetworkEndpointDetails {
        /**
         * Source IP addresses or IP address ranges ingress rules. (ex: "168.122.59.5", "10.20.30.0/26") An invalid IP or CIDR block will result in a 400 response.
         */
        allowlistedHttpIps: string[];
        /**
         * Virtual Cloud Networks allowed to access this network endpoint.
         */
        allowlistedHttpVcns: outputs.Integration.IntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn[];
        /**
         * The Integration service's VCN is allow-listed to allow integrations to call back into other integrations
         */
        isIntegrationVcnAllowlisted: boolean;
        /**
         * The type of network endpoint.
         */
        networkEndpointType: string;
    }

    export interface IntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn {
        /**
         * Source IP addresses or IP address ranges ingress rules. (ex: "168.122.59.5", "10.20.30.0/26") An invalid IP or CIDR block will result in a 400 response.
         */
        allowlistedIps: string[];
        /**
         * The Virtual Cloud Network OCID.
         */
        id: string;
    }
}

export namespace Jms {
    export interface FleetInventoryLog {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
         */
        logGroupId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
         */
        logId: string;
    }

    export interface FleetOperationLog {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
         */
        logGroupId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
         */
        logId: string;
    }

    export interface GetFleetBlocklistsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFleetBlocklistsItem {
        /**
         * The unique identifier of this blocklist record.
         */
        key: string;
        /**
         * The operation type.
         */
        operation: string;
        /**
         * The reason for why the operation is blocklisted
         */
        reason: string;
        /**
         * A resource to blocklist for certain operation.
         */
        targets: outputs.Jms.GetFleetBlocklistsItemTarget[];
    }

    export interface GetFleetBlocklistsItemTarget {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
         */
        fleetId: string;
        /**
         * The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
         */
        installationKey: string;
        /**
         * The Fleet-unique identifier of the related managed instance.
         */
        managedInstanceId: string;
    }

    export interface GetFleetInventoryLog {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
         */
        logId: string;
    }

    export interface GetFleetOperationLog {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
         */
        logId: string;
    }

    export interface GetFleetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFleetsFleetCollection {
        items: outputs.Jms.GetFleetsFleetCollectionItem[];
    }

    export interface GetFleetsFleetCollectionItem {
        /**
         * The approximate count of all unique applications in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
         */
        approximateApplicationCount: number;
        /**
         * The approximate count of all unique Java installations in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
         */
        approximateInstallationCount: number;
        /**
         * The approximate count of all unique Java Runtimes in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
         */
        approximateJreCount: number;
        /**
         * The approximate count of all unique managed instances in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
         */
        approximateManagedInstanceCount: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
         */
        definedTags: {[key: string]: any};
        /**
         * The Fleet's description.
         */
        description: string;
        /**
         * The display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
         */
        freeformTags: {[key: string]: any};
        /**
         * The ID of the Fleet.
         */
        id: string;
        /**
         * Custom Log for inventory or operation log.
         */
        inventoryLogs: outputs.Jms.GetFleetsFleetCollectionItemInventoryLog[];
        /**
         * Whether or not advanced features are enabled in this fleet.  By default, this is set to false.
         */
        isAdvancedFeaturesEnabled: boolean;
        /**
         * Custom Log for inventory or operation log.
         */
        operationLogs: outputs.Jms.GetFleetsFleetCollectionItemOperationLog[];
        /**
         * The state of the lifecycle.
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The creation date and time of the Fleet (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        timeCreated: string;
    }

    export interface GetFleetsFleetCollectionItemInventoryLog {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
         */
        logId: string;
    }

    export interface GetFleetsFleetCollectionItemOperationLog {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
         */
        logId: string;
    }

    export interface GetInstallationSiteItem {
        /**
         * The approximate count of applications running on this installation
         */
        approximateApplicationCount: number;
        /**
         * The list of operations that are blocklisted.
         */
        blocklists: outputs.Jms.GetInstallationSiteItemBlocklist[];
        /**
         * The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
         */
        installationKey: string;
        /**
         * The essential properties to identify a Java Runtime.
         */
        jres: outputs.Jms.GetInstallationSiteItemJre[];
        /**
         * The Fleet-unique identifier of the related managed instance.
         */
        managedInstanceId: string;
        /**
         * Operating System of the platform on which the Java Runtime was reported.
         */
        operatingSystems: outputs.Jms.GetInstallationSiteItemOperatingSystem[];
        /**
         * The file system path of the installation.
         */
        path: string;
        /**
         * The security status of the Java Runtime.
         */
        securityStatus: string;
        /**
         * The lifecycle state of the installation site.
         */
        state: string;
        /**
         * The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
         */
        timeLastSeen: string;
    }

    export interface GetInstallationSiteItemBlocklist {
        /**
         * The operation type.
         */
        operation: string;
        /**
         * The reason why the operation is blocklisted.
         */
        reason: string;
    }

    export interface GetInstallationSiteItemJre {
        /**
         * The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
         */
        distribution: string;
        /**
         * The unique identifier for a Java Runtime.
         */
        jreKey: string;
        /**
         * The vendor of the Java Runtime.
         */
        vendor: string;
        /**
         * The version of the operating system as provided by the Java system property os.version.
         */
        version: string;
    }

    export interface GetInstallationSiteItemOperatingSystem {
        /**
         * The architecture of the operating system as provided by the Java system property os.arch.
         */
        architecture: string;
        /**
         * The operating system type, such as Windows or Linux
         */
        family: string;
        /**
         * Number of instances running the operating system
         */
        managedInstanceCount: number;
        /**
         * The name of the operating system as provided by the Java system property os.name.
         */
        name: string;
        /**
         * The version of the operating system as provided by the Java system property os.version.
         */
        version: string;
    }

    export interface GetInstallationSitesFilter {
        /**
         * The name of the operating system as provided by the Java system property os.name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInstallationSitesInstallationSiteCollection {
        /**
         * A list of Java installation sites.
         */
        items: outputs.Jms.GetInstallationSitesInstallationSiteCollectionItem[];
    }

    export interface GetInstallationSitesInstallationSiteCollectionItem {
        /**
         * A list of Java installation sites.
         */
        items: outputs.Jms.GetInstallationSitesInstallationSiteCollectionItemItem[];
    }

    export interface GetInstallationSitesInstallationSiteCollectionItemItem {
        /**
         * The approximate count of applications running on this installation
         */
        approximateApplicationCount: number;
        /**
         * The list of operations that are blocklisted.
         */
        blocklists: outputs.Jms.GetInstallationSitesInstallationSiteCollectionItemItemBlocklist[];
        /**
         * The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
         */
        installationKey: string;
        /**
         * The essential properties to identify a Java Runtime.
         */
        jres: outputs.Jms.GetInstallationSitesInstallationSiteCollectionItemItemJre[];
        /**
         * The Fleet-unique identifier of the related managed instance.
         */
        managedInstanceId: string;
        /**
         * Operating System of the platform on which the Java Runtime was reported.
         */
        operatingSystems: outputs.Jms.GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystem[];
        /**
         * The file system path of the installation.
         */
        path: string;
        /**
         * The security status of the Java Runtime.
         */
        securityStatus: string;
        /**
         * The lifecycle state of the installation site.
         */
        state: string;
        /**
         * The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
         */
        timeLastSeen: string;
    }

    export interface GetInstallationSitesInstallationSiteCollectionItemItemBlocklist {
        /**
         * The operation type.
         */
        operation: string;
        /**
         * The reason why the operation is blocklisted.
         */
        reason: string;
    }

    export interface GetInstallationSitesInstallationSiteCollectionItemItemJre {
        /**
         * The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
         */
        distribution: string;
        /**
         * The unique identifier for a Java Runtime.
         */
        jreKey: string;
        /**
         * The vendor of the Java Runtime.
         */
        vendor: string;
        /**
         * The version of the operating system as provided by the Java system property os.version.
         */
        version: string;
    }

    export interface GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystem {
        /**
         * The architecture of the operating system as provided by the Java system property os.arch.
         */
        architecture: string;
        /**
         * The operating system type, such as Windows or Linux
         */
        family: string;
        /**
         * Number of instances running the operating system
         */
        managedInstanceCount: number;
        /**
         * The name of the operating system as provided by the Java system property os.name.
         */
        name: string;
        /**
         * The version of the operating system as provided by the Java system property os.version.
         */
        version: string;
    }

    export interface GetJavaFamiliesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetJavaFamiliesJavaFamilyCollection {
        items: outputs.Jms.GetJavaFamiliesJavaFamilyCollectionItem[];
    }

    export interface GetJavaFamiliesJavaFamilyCollectionItem {
        /**
         * The display name for the Java family.
         */
        displayName: string;
        /**
         * Link to access the documentation for the release.
         */
        docUrl: string;
        /**
         * The End of Support Life (EOSL) date of the Java release family (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        endOfSupportLifeDate: string;
        /**
         * The version identifier for the Java family.
         */
        familyVersion: string;
        /**
         * This indicates the support category for the Java release family.
         */
        supportType: string;
    }

    export interface GetJavaReleaseArtifact {
        /**
         * Approximate compressed file size in bytes.
         */
        approximateFileSizeInBytes: string;
        /**
         * Product content type of this artifact.
         */
        artifactContentType: string;
        /**
         * Description of the binary artifact. Typically includes the OS, architecture, and installer type.
         */
        artifactDescription: string;
        /**
         * Unique identifier for the artifact.
         */
        artifactId: string;
        /**
         * SHA256 checksum of the artifact.
         */
        sha256: string;
    }

    export interface GetJavaReleaseFamilyDetail {
        /**
         * Commonly used name for the license type.
         */
        displayName: string;
        /**
         * Link to access the documentation for the release.
         */
        docUrl: string;
        /**
         * The End of Support Life (EOSL) date of the Java release family (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        endOfSupportLifeDate: string;
        /**
         * Java release family identifier.
         */
        familyVersion: string;
        /**
         * This indicates the support category for the Java release family.
         */
        supportType: string;
    }

    export interface GetJavaReleaseLicenseDetail {
        /**
         * Commonly used name for the license type.
         */
        displayName: string;
        /**
         * License type for the Java version.
         */
        licenseType: string;
        /**
         * Publicly accessible license URL containing the detailed terms and conditions.
         */
        licenseUrl: string;
    }

    export interface GetJavaReleasesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetJavaReleasesJavaReleaseCollection {
        items: outputs.Jms.GetJavaReleasesJavaReleaseCollectionItem[];
    }

    export interface GetJavaReleasesJavaReleaseCollectionItem {
        /**
         * List of Java artifacts.
         */
        artifacts: outputs.Jms.GetJavaReleasesJavaReleaseCollectionItemArtifact[];
        /**
         * Complete information of a specific Java release family.
         */
        familyDetails: outputs.Jms.GetJavaReleasesJavaReleaseCollectionItemFamilyDetail[];
        /**
         * The version identifier for the Java family.
         */
        familyVersion: string;
        /**
         * Information about a license type for Java.
         */
        licenseDetails: outputs.Jms.GetJavaReleasesJavaReleaseCollectionItemLicenseDetail[];
        /**
         * Java license type.
         */
        licenseType: string;
        /**
         * Parent Java release version identifier. This is applicable for BPR releases.
         */
        parentReleaseVersion: string;
        /**
         * The release date of the Java version (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        releaseDate: string;
        /**
         * Release notes associated with the Java version.
         */
        releaseNotesUrl: string;
        /**
         * Java release type.
         */
        releaseType: string;
        /**
         * Unique Java release version identifier
         */
        releaseVersion: string;
        /**
         * The security status of the Java version.
         */
        securityStatus: string;
    }

    export interface GetJavaReleasesJavaReleaseCollectionItemArtifact {
        /**
         * Approximate compressed file size in bytes.
         */
        approximateFileSizeInBytes: string;
        /**
         * Product content type of this artifact.
         */
        artifactContentType: string;
        /**
         * Description of the binary artifact. Typically includes the OS, architecture, and installer type.
         */
        artifactDescription: string;
        /**
         * Unique identifier for the artifact.
         */
        artifactId: string;
        /**
         * SHA256 checksum of the artifact.
         */
        sha256: string;
    }

    export interface GetJavaReleasesJavaReleaseCollectionItemFamilyDetail {
        /**
         * Commonly used name for the license type.
         */
        displayName: string;
        /**
         * Link to access the documentation for the release.
         */
        docUrl: string;
        /**
         * The End of Support Life (EOSL) date of the Java release family (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        endOfSupportLifeDate: string;
        /**
         * The version identifier for the Java family.
         */
        familyVersion: string;
        /**
         * This indicates the support category for the Java release family.
         */
        supportType: string;
    }

    export interface GetJavaReleasesJavaReleaseCollectionItemLicenseDetail {
        /**
         * Commonly used name for the license type.
         */
        displayName: string;
        /**
         * Java license type.
         */
        licenseType: string;
        /**
         * Publicly accessible license URL containing the detailed terms and conditions.
         */
        licenseUrl: string;
    }

    export interface GetListJreUsageItem {
        /**
         * The approximate count of the applications running on this Java Runtime.
         */
        approximateApplicationCount: number;
        /**
         * The approximate count of installations that are installations of this Java Runtime.
         */
        approximateInstallationCount: number;
        /**
         * The approximate count of the managed instances that report this Java Runtime.
         */
        approximateManagedInstanceCount: number;
        /**
         * The approximate count of work requests working on this Java Runtime.
         */
        approximatePendingWorkRequestCount: number;
        /**
         * The number of days since this release has been under the security baseline.
         */
        daysUnderSecurityBaseline: number;
        /**
         * The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
         */
        distribution: string;
        /**
         * The End of Support Life (EOSL) date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        endOfSupportLifeDate: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related fleet.
         */
        fleetId: string;
        /**
         * The internal identifier of the Java Runtime.
         */
        id: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance. This property value is present only for /listJreUsage.
         */
        managedInstanceId: string;
        /**
         * The operating systems that have this Java Runtime installed.
         */
        operatingSystems: outputs.Jms.GetListJreUsageItemOperatingSystem[];
        /**
         * The release date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        releaseDate: string;
        /**
         * The security status of the Java Runtime.
         */
        securityStatus: string;
        /**
         * The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        timeEnd: string;
        /**
         * The date and time the resource was _first_ reported to JMS. This is potentially _before_ the specified time period provided by the filters. For example, a resource can be first reported to JMS before the start of a specified time period, if it is also reported during the time period.
         */
        timeFirstSeen: string;
        /**
         * The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
         */
        timeLastSeen: string;
        /**
         * The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         */
        timeStart: string;
        /**
         * The vendor of the Java Runtime.
         */
        vendor: string;
        /**
         * The version of the Java Runtime.
         */
        version: string;
    }

    export interface GetListJreUsageItemOperatingSystem {
        /**
         * The architecture of the operating system as provided by the Java system property os.arch.
         */
        architecture: string;
        /**
         * The operating system type, such as Windows or Linux
         */
        family: string;
        /**
         * Number of instances running the operating system
         */
        managedInstanceCount: number;
        /**
         * The name of the operating system as provided by the Java system property os.name.
         */
        name: string;
        /**
         * The version of the Java Runtime.
         */
        version: string;
    }

}

export namespace Kms {
    export interface GeneratedKeyKeyShape {
        /**
         * The algorithm used by a key's key versions to encrypt or decrypt.
         */
        algorithm: string;
        /**
         * Supported curve IDs for ECDSA keys.
         */
        curveId: string;
        /**
         * The length of the key in bytes, expressed as an integer. Supported values include the following:
         * * AES: 16, 24, or 32
         * * RSA: 256, 384, or 512
         * * ECDSA: 32, 48, or 66
         */
        length: number;
    }

    export interface GetKeyKeyShape {
        /**
         * The algorithm used by a key's key versions to encrypt or decrypt.
         */
        algorithm: string;
        /**
         * Supported curve IDs for ECDSA keys.
         */
        curveId: string;
        /**
         * The length of the key in bytes, expressed as an integer. Supported values include the following:
         * * AES: 16, 24, or 32
         * * RSA: 256, 384, or 512
         * * ECDSA: 32, 48, or 66
         */
        length: number;
    }

    export interface GetKeyReplicaDetail {
        /**
         * ReplicationId associated with a key operation
         */
        replicationId: string;
    }

    export interface GetKeyRestoreFromFile {
        /**
         * content length of key's backup binary file
         */
        contentLength: string;
        /**
         * content md5 hashed value of key's backup file
         */
        contentMd5: string;
        /**
         * Key backup file content
         */
        restoreKeyFromFileDetails: string;
    }

    export interface GetKeyRestoreFromObjectStore {
        /**
         * Name of the bucket where key was backed up
         */
        bucket: string;
        /**
         * Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
         */
        destination: string;
        /**
         * Namespace of the bucket where key was backed up
         */
        namespace: string;
        /**
         * Object containing the backup
         */
        object: string;
        /**
         * Pre-authenticated-request-uri of the backup
         */
        uri: string;
    }

    export interface GetKeyVersionReplicaDetail {
        /**
         * ReplicationId associated with a key version operation
         */
        replicationId: string;
    }

    export interface GetKeyVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetKeyVersionsKeyVersion {
        /**
         * The OCID of the compartment that contains this key version.
         */
        compartmentId: string;
        /**
         * The OCID of the key version.
         */
        id: string;
        /**
         * A boolean that will be true when key version is primary, and will be false when key version is a replica from a primary key version.
         */
        isPrimary: boolean;
        /**
         * The OCID of the key.
         */
        keyId: string;
        /**
         * The OCID of the key version.
         */
        keyVersionId: string;
        /**
         * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
         */
        managementEndpoint: string;
        /**
         * The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
         */
        publicKey: string;
        /**
         * KeyVersion replica details
         */
        replicaDetails: outputs.Kms.GetKeyVersionsKeyVersionReplicaDetail[];
        restoredFromKeyId: string;
        /**
         * The OCID of the key version from which this key version was restored.
         */
        restoredFromKeyVersionId: string;
        /**
         * The key version's current lifecycle state.  Example: `ENABLED`
         */
        state: string;
        /**
         * The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
         */
        timeCreated: string;
        /**
         * An optional property to indicate when to delete the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * The OCID of the vault that contains this key version.
         */
        vaultId: string;
    }

    export interface GetKeyVersionsKeyVersionReplicaDetail {
        /**
         * ReplicationId associated with a key version operation
         */
        replicationId: string;
    }

    export interface GetKeysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetKeysKey {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
         */
        currentKeyVersion: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        desiredState: string;
        /**
         * A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the key.
         */
        id: string;
        /**
         * A boolean that will be true when key is primary, and will be false when key is a replica from a primary key.
         */
        isPrimary: boolean;
        /**
         * The cryptographic properties of a key.
         */
        keyShapes: outputs.Kms.GetKeysKeyKeyShape[];
        /**
         * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
         */
        managementEndpoint: string;
        /**
         * A key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A  protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are  performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's  RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of  `SOFTWARE` are performed on the server.
         */
        protectionMode: string;
        /**
         * Key replica details
         */
        replicaDetails: outputs.Kms.GetKeysKeyReplicaDetail[];
        restoreFromFiles: outputs.Kms.GetKeysKeyRestoreFromFile[];
        restoreFromObjectStores: outputs.Kms.GetKeysKeyRestoreFromObjectStore[];
        restoreTrigger: boolean;
        restoredFromKeyId: string;
        /**
         * The key's current lifecycle state.  Example: `ENABLED`
         */
        state: string;
        /**
         * The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * The OCID of the vault that contains this key.
         */
        vaultId: string;
    }

    export interface GetKeysKeyKeyShape {
        /**
         * The algorithm used by a key's key versions to encrypt or decrypt data. Currently, support includes AES, RSA, and ECDSA algorithms.
         */
        algorithm: string;
        /**
         * The curve ID of the keys. (This pertains only to ECDSA keys.)
         */
        curveId: string;
        /**
         * The length of the key in bytes, expressed as an integer. Supported values include 16, 24, or 32.
         */
        length: number;
    }

    export interface GetKeysKeyReplicaDetail {
        /**
         * ReplicationId associated with a key operation
         */
        replicationId: string;
    }

    export interface GetKeysKeyRestoreFromFile {
        contentLength: string;
        contentMd5: string;
        restoreKeyFromFileDetails: string;
    }

    export interface GetKeysKeyRestoreFromObjectStore {
        bucket: string;
        destination: string;
        namespace: string;
        object: string;
        uri: string;
    }

    export interface GetReplicationStatusReplicaDetail {
        /**
         * The replica region
         */
        region: string;
        /**
         * Replication status associated with a replicationId
         */
        status: string;
    }

    export interface GetVaultReplicaDetail {
        /**
         * ReplicationId associated with a vault operation
         */
        replicationId: string;
    }

    export interface GetVaultReplicasFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVaultReplicasVaultReplica {
        /**
         * The vault replica's crypto endpoint
         */
        cryptoEndpoint: string;
        /**
         * The vault replica's management endpoint
         */
        managementEndpoint: string;
        /**
         * Region to which vault is replicated to
         */
        region: string;
        /**
         * The vault replica's status
         */
        status: string;
    }

    export interface GetVaultRestoreFromFile {
        /**
         * content length of vault's backup binary file
         */
        contentLength: string;
        /**
         * content md5 hashed value of vault's backup file
         */
        contentMd5: string;
        /**
         * Vault backup file content
         */
        restoreVaultFromFileDetails: string;
    }

    export interface GetVaultRestoreFromObjectStore {
        /**
         * Name of the bucket where vault was backed up
         */
        bucket: string;
        /**
         * Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
         */
        destination: string;
        /**
         * Namespace of the bucket where vault was backed up
         */
        namespace: string;
        /**
         * Object containing the backup
         */
        object: string;
        /**
         * Pre-authenticated-request-uri of the backup
         */
        uri: string;
    }

    export interface GetVaultsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVaultsVault {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
         */
        cryptoEndpoint: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the vault.
         */
        id: string;
        /**
         * A boolean that will be true when vault is primary, and will be false when vault is a replica from a primary vault.
         */
        isPrimary: boolean;
        /**
         * The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
         */
        managementEndpoint: string;
        /**
         * Vault replica details
         */
        replicaDetails: outputs.Kms.GetVaultsVaultReplicaDetail[];
        restoreFromFiles: outputs.Kms.GetVaultsVaultRestoreFromFile[];
        restoreFromObjectStores: outputs.Kms.GetVaultsVaultRestoreFromObjectStore[];
        restoreTrigger: boolean;
        /**
         * The OCID of the vault from which this vault was restored, if it was restored from a backup file.  If you restore a vault to the same region, the vault retains the same OCID that it had when you  backed up the vault.
         */
        restoredFromVaultId: string;
        /**
         * The vault's current lifecycle state.  Example: `DELETED`
         */
        state: string;
        /**
         * The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property to indicate when to delete the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * The type of vault. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
         */
        vaultType: string;
    }

    export interface GetVaultsVaultReplicaDetail {
        /**
         * ReplicationId associated with a vault operation
         */
        replicationId: string;
    }

    export interface GetVaultsVaultRestoreFromFile {
        contentLength: string;
        contentMd5: string;
        restoreVaultFromFileDetails: string;
    }

    export interface GetVaultsVaultRestoreFromObjectStore {
        bucket: string;
        destination: string;
        namespace: string;
        object: string;
        uri: string;
    }

    export interface KeyKeyShape {
        /**
         * The algorithm used by a key's key versions to encrypt or decrypt.
         */
        algorithm: string;
        /**
         * Supported curve IDs for ECDSA keys.
         */
        curveId: string;
        /**
         * The length of the key in bytes, expressed as an integer. Supported values include the following:
         * * AES: 16, 24, or 32
         * * RSA: 256, 384, or 512
         * * ECDSA: 32, 48, or 66
         */
        length: number;
    }

    export interface KeyReplicaDetail {
        /**
         * ReplicationId associated with a key operation
         */
        replicationId: string;
    }

    export interface KeyRestoreFromFile {
        /**
         * (Updatable) content length of key's backup binary file
         */
        contentLength: string;
        /**
         * (Updatable) content md5 hashed value of key's backup file
         */
        contentMd5?: string;
        /**
         * Key backup file content.
         */
        restoreKeyFromFileDetails: string;
    }

    export interface KeyRestoreFromObjectStore {
        /**
         * (Updatable) Name of the bucket where key was backed up
         */
        bucket?: string;
        /**
         * (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
         */
        destination: string;
        /**
         * (Updatable) Namespace of the bucket where key was backed up
         */
        namespace?: string;
        /**
         * (Updatable) Object containing the backup
         */
        object?: string;
        /**
         * (Updatable) Pre-authenticated-request-uri of the backup
         */
        uri?: string;
    }

    export interface KeyVersionReplicaDetail {
        /**
         * ReplicationId associated with a key version operation
         */
        replicationId: string;
    }

    export interface VaultReplicaDetail {
        /**
         * ReplicationId associated with a vault operation
         */
        replicationId: string;
    }

    export interface VaultRestoreFromFile {
        /**
         * content length of vault's backup binary file
         */
        contentLength: string;
        /**
         * (Updatable) content md5 hashed value of vault's backup file
         */
        contentMd5?: string;
        /**
         * Vault backup file content
         */
        restoreVaultFromFileDetails: string;
    }

    export interface VaultRestoreFromObjectStore {
        /**
         * (Updatable) Name of the bucket where vault was backed up
         */
        bucket?: string;
        /**
         * (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
         */
        destination: string;
        /**
         * (Updatable) Namespace of the bucket where vault was backed up
         */
        namespace?: string;
        /**
         * (Updatable) Object containing the backup
         */
        object?: string;
        /**
         * (Updatable) Pre-authenticated-request-uri of the backup* `restoreTrigger` - (Optional) (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
         */
        uri?: string;
    }
}

export namespace LicenseManager {
    export interface GetLicenseRecordsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLicenseRecordsLicenseRecordCollection {
        items: outputs.LicenseManager.GetLicenseRecordsLicenseRecordCollectionItem[];
    }

    export interface GetLicenseRecordsLicenseRecordCollectionItem {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the license record is created.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The license record display name. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The license record end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
         */
        expirationDate: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The license record [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * Specifies if the license record term is perpertual.
         */
        isPerpetual: boolean;
        /**
         * Specifies if the license count is unlimited.
         */
        isUnlimited: boolean;
        /**
         * The number of license units added by the user for the given license record. Default 1
         */
        licenseCount: number;
        /**
         * The product license unit.
         */
        licenseUnit: string;
        /**
         * The license record product ID.
         */
        productId: string;
        /**
         * The product license name with which the license record is associated.
         */
        productLicense: string;
        /**
         * Unique product license identifier.
         */
        productLicenseId: string;
        /**
         * The current license record state.
         */
        state: string;
        /**
         * The license record support end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
         */
        supportEndDate: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the license record was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the license record was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetProductLicenseConsumersItem {
        /**
         * Specifies if all options are available.
         */
        areAllOptionsAvailable: boolean;
        /**
         * Specifies if the base license is available.
         */
        isBaseLicenseAvailable: boolean;
        /**
         * The product license unit.
         */
        licenseUnitType: string;
        /**
         * Number of license units consumed by the resource.
         */
        licenseUnitsConsumed: number;
        /**
         * Collection of missing product licenses.
         */
        missingProducts: outputs.LicenseManager.GetProductLicenseConsumersItemMissingProduct[];
        /**
         * The resource product name.
         */
        productName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the resource.
         */
        resourceCompartmentId: string;
        /**
         * The display name of the compartment that contains the resource.
         */
        resourceCompartmentName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        resourceId: string;
        /**
         * The display name of the resource.
         */
        resourceName: string;
        /**
         * Number of units of the resource
         */
        resourceUnitCount: number;
        /**
         * The unit type for the resource.
         */
        resourceUnitType: string;
    }

    export interface GetProductLicenseConsumersItemMissingProduct {
        /**
         * Product category base or option.
         */
        category: string;
        /**
         * Units required for the missing product.
         */
        count: number;
        /**
         * Name of the product.
         */
        name: string;
    }

    export interface GetProductLicenseImage {
        /**
         * The image ID associated with the product license.
         */
        id: string;
        /**
         * The image listing ID.
         */
        listingId: string;
        /**
         * The listing name associated with the product license.
         */
        listingName: string;
        /**
         * The image package version.
         */
        packageVersion: string;
        /**
         * The image publisher.
         */
        publisher: string;
    }

    export interface GetProductLicensesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProductLicensesProductLicenseCollection {
        items: outputs.LicenseManager.GetProductLicensesProductLicenseCollectionItem[];
    }

    export interface GetProductLicensesProductLicenseCollectionItem {
        /**
         * The number of active license records associated with the product license.
         */
        activeLicenseRecordCount: number;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) used for the license record, product license, and configuration.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * License record name
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The image ID associated with the product license.
         */
        id: string;
        /**
         * The images associated with the product license.
         */
        images: outputs.LicenseManager.GetProductLicensesProductLicenseCollectionItemImage[];
        /**
         * Specifies whether or not the product license is oversubscribed.
         */
        isOverSubscribed: boolean;
        /**
         * Specifies if the license unit count is unlimited.
         */
        isUnlimited: boolean;
        /**
         * Specifies whether the vendor is Oracle or a third party.
         */
        isVendorOracle: boolean;
        /**
         * The product license unit.
         */
        licenseUnit: string;
        /**
         * The current product license state.
         */
        state: string;
        /**
         * The current product license status.
         */
        status: string;
        /**
         * Status description for the current product license status.
         */
        statusDescription: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the product license was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the product license was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
         */
        timeUpdated: string;
        /**
         * The total number of licenses available for the product license, calculated by adding up all the license counts for active license records associated with the product license.
         */
        totalActiveLicenseUnitCount: number;
        /**
         * The number of license records associated with the product license.
         */
        totalLicenseRecordCount: number;
        /**
         * The number of license units consumed. Updated after each allocation run.
         */
        totalLicenseUnitsConsumed: number;
        /**
         * The vendor of the ProductLicense
         */
        vendorName: string;
    }

    export interface GetProductLicensesProductLicenseCollectionItemImage {
        /**
         * The image ID associated with the product license.
         */
        id: string;
        /**
         * The image listing ID.
         */
        listingId: string;
        /**
         * The listing name associated with the product license.
         */
        listingName: string;
        /**
         * The image package version.
         */
        packageVersion: string;
        /**
         * The image publisher.
         */
        publisher: string;
    }

    export interface GetTopUtilizedProductLicensesItem {
        /**
         * Specifies if the license unit count is unlimited.
         */
        isUnlimited: boolean;
        /**
         * The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        productLicenseId: string;
        /**
         * The product type.
         */
        productType: string;
        /**
         * The current product license status.
         */
        status: string;
        /**
         * Total number of license units in the product license provided by the user.
         */
        totalLicenseUnitCount: number;
        /**
         * Number of license units consumed.
         */
        totalUnitsConsumed: number;
        /**
         * The product license unit.
         */
        unitType: string;
    }

    export interface GetTopUtilizedResourcesItem {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that contains the resource.
         */
        resourceCompartmentId: string;
        /**
         * The display name of the compartment that contains the resource.
         */
        resourceCompartmentName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
         */
        resourceId: string;
        /**
         * Resource canonical name.
         */
        resourceName: string;
        /**
         * Number of license units consumed by the resource.
         */
        totalUnits: number;
        /**
         * The resource unit.
         */
        unitType: string;
    }

    export interface ProductLicenseImage {
        /**
         * The image ID associated with the product license.
         */
        id: string;
        /**
         * (Updatable) Marketplace image listing ID.
         */
        listingId: string;
        /**
         * The listing name associated with the product license.
         */
        listingName: string;
        /**
         * (Updatable) Image package version.
         */
        packageVersion: string;
        /**
         * The image publisher.
         */
        publisher: string;
    }

}

export namespace Limits {
    export interface GetLimitDefinitionsFilter {
        /**
         * Optional field, filter for a specific resource limit.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLimitDefinitionsLimitDefinition {
        /**
         * If true, quota policies can be created on top of this resource limit.
         */
        areQuotasSupported: boolean;
        /**
         * The limit description.
         */
        description: string;
        /**
         * Indicates if the limit has been deprecated.
         */
        isDeprecated: boolean;
        /**
         * The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
         */
        isDynamic: boolean;
        /**
         * Indicates if the customer can request a limit increase for this resource.
         */
        isEligibleForLimitIncrease: boolean;
        /**
         * Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
         */
        isResourceAvailabilitySupported: boolean;
        /**
         * Optional field, filter for a specific resource limit.
         */
        name: string;
        /**
         * Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
         */
        scopeType: string;
        /**
         * The target service name.
         */
        serviceName: string;
    }

    export interface GetLimitValuesFilter {
        /**
         * Optional field, can be used to see a specific resource limit value.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLimitValuesLimitValue {
        /**
         * Filter entries by availability domain. This implies that only AD-specific values are returned.
         */
        availabilityDomain: string;
        /**
         * Optional field, can be used to see a specific resource limit value.
         */
        name: string;
        /**
         * Filter entries by scope type.
         */
        scopeType: string;
        /**
         * The resource limit value.
         */
        value: string;
    }

    export interface GetQuotaLock {
        /**
         * A message added by the lock creator. The message typically gives an indication of why the resource is locked.
         */
        message: string;
        /**
         * The resource ID that is locking this resource. Indicates that deleting this resource removes the lock.
         */
        relatedResourceId: string;
        /**
         * Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Lock type.
         */
        type: string;
    }

    export interface GetQuotasFilter {
        /**
         * name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetQuotasQuota {
        /**
         * The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description you assign to the quota.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the quota.
         */
        id: string;
        isLockOverride: boolean;
        /**
         * Locks associated with this resource.
         */
        locks: outputs.Limits.GetQuotasQuotaLock[];
        /**
         * name
         */
        name: string;
        /**
         * Filters returned quotas based on the given state.
         */
        state: string;
        /**
         * An array of one or more quota statements written in the declarative quota statement language.
         */
        statements: string[];
        /**
         * Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetQuotasQuotaLock {
        /**
         * A message added by the lock creator. The message typically gives an indication of why the resource is locked.
         */
        message: string;
        /**
         * The resource ID that is locking this resource. Indicates that deleting this resource removes the lock.
         */
        relatedResourceId: string;
        /**
         * Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Lock type.
         */
        type: string;
    }

    export interface GetServicesFilter {
        /**
         * The service name. Use this when calling other APIs.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetServicesService {
        /**
         * The friendly service name.
         */
        description: string;
        /**
         * The service name. Use this when calling other APIs.
         */
        name: string;
    }

    export interface QuotaLock {
        /**
         * A message added by the lock creator. The message typically gives an indication of why the resource is locked.
         */
        message: string;
        /**
         * The resource ID that is locking this resource. Indicates that deleting this resource removes the lock.
         */
        relatedResourceId: string;
        /**
         * Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * Lock type.
         */
        type: string;
    }

}

export namespace LoadBalancer {
    export interface BackendSetBackend {
        /**
         * Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.
         */
        backup?: boolean;
        /**
         * Whether the load balancer should drain this server. Servers marked "drain" receive no new incoming traffic.  Example: `false`
         */
        drain?: boolean;
        /**
         * The IP address of the backend server.  Example: `10.0.0.3`
         */
        ipAddress: string;
        /**
         * A friendly name for the backend set. It must be unique and it cannot be changed.
         */
        name: string;
        /**
         * Whether the load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
         */
        offline?: boolean;
        /**
         * (Updatable) The backend server port against which to run the health check. If the port is not specified, the load balancer uses the port information from the `Backend` object.  Example: `8080`
         */
        port: number;
        /**
         * The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections as a server weighted '1'. For more information on load balancing policies, see [How Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
         */
        weight: number;
    }

    export interface BackendSetHealthChecker {
        /**
         * (Updatable) The interval between health checks, in milliseconds.  Example: `10000`
         */
        intervalMs?: number;
        /**
         * (Updatable) The backend server port against which to run the health check. If the port is not specified, the load balancer uses the port information from the `Backend` object.  Example: `8080`
         */
        port?: number;
        /**
         * (Updatable) The protocol the health check must use; either HTTP or TCP.  Example: `HTTP`
         */
        protocol: string;
        /**
         * (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
         */
        responseBodyRegex: string;
        /**
         * (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state.  Example: `3`
         */
        retries?: number;
        /**
         * (Updatable) The status code a healthy backend server should return.  Example: `200`
         */
        returnCode: number;
        /**
         * (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period.  Example: `3000`
         */
        timeoutInMillis?: number;
        /**
         * (Updatable) The path against which to run the health check.  Example: `/healthcheck`
         */
        urlPath: string;
    }

    export interface BackendSetLbCookieSessionPersistenceConfiguration {
        /**
         * (Updatable) The name of the cookie used to detect a session initiated by the backend server. Use '*' to specify that any cookie set by the backend causes the session to persist.  Example: `exampleCookie`
         */
        cookieName: string;
        /**
         * (Updatable) Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
         */
        disableFallback: boolean;
        /**
         * (Updatable) The domain in which the cookie is valid. The `Set-cookie` header inserted by the load balancer contains a domain attribute with the specified value.
         */
        domain: string;
        /**
         * (Updatable) Whether the `Set-cookie` header should contain the `HttpOnly` attribute. If `true`, the `Set-cookie` header inserted by the load balancer contains the `HttpOnly` attribute, which limits the scope of the cookie to HTTP requests. This attribute directs the client or browser to omit the cookie when providing access to cookies through non-HTTP APIs. For example, it restricts the cookie from JavaScript channels.  Example: `true`
         */
        isHttpOnly: boolean;
        /**
         * (Updatable) Whether the `Set-cookie` header should contain the `Secure` attribute. If `true`, the `Set-cookie` header inserted by the load balancer contains the `Secure` attribute, which directs the client or browser to send the cookie only using a secure protocol.
         */
        isSecure: boolean;
        /**
         * (Updatable) The amount of time the cookie remains valid. The `Set-cookie` header inserted by the load balancer contains a `Max-Age` attribute with the specified value.
         */
        maxAgeInSeconds: number;
        /**
         * (Updatable) The path in which the cookie is valid. The `Set-cookie header` inserted by the load balancer contains a `Path` attribute with the specified value.
         */
        path: string;
    }

    export interface BackendSetSessionPersistenceConfiguration {
        /**
         * (Updatable) The name of the cookie used to detect a session initiated by the backend server. Use '*' to specify that any cookie set by the backend causes the session to persist.  Example: `exampleCookie`
         */
        cookieName: string;
        /**
         * (Updatable) Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
         */
        disableFallback?: boolean;
    }

    export interface BackendSetSslConfiguration {
        /**
         * (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: `[ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]`
         */
        certificateIds?: string[];
        /**
         * (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `exampleCertificateBundle`
         */
        certificateName?: string;
        /**
         * (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
         */
        cipherSuiteName: string;
        /**
         * (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
         */
        protocols: string[];
        /**
         * (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
         */
        serverOrderPreference: string;
        /**
         * (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: `[ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]`
         */
        trustedCertificateAuthorityIds?: string[];
        /**
         * (Updatable) The maximum depth for peer certificate chain verification.  Example: `3`
         */
        verifyDepth?: number;
        /**
         * (Updatable) Whether the load balancer listener should verify peer certificates.  Example: `true`
         */
        verifyPeerCertificate?: boolean;
    }

    export interface GetBackendHealthHealthCheckResult {
        /**
         * The result of the most recent health check.
         */
        healthCheckStatus: string;
        /**
         * The IP address of the health check status report provider. This identifier helps you differentiate same-subnet load balancers that report health check status.  Example: `10.0.0.7`
         */
        sourceIpAddress: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet hosting the load balancer that reported this health check status.
         */
        subnetId: string;
        /**
         * The date and time the data was retrieved, in the format defined by RFC3339.  Example: `2017-06-02T18:28:11+00:00`
         */
        timestamp: string;
    }

    export interface GetBackendSetsBackendset {
        backends: outputs.LoadBalancer.GetBackendSetsBackendsetBackend[];
        /**
         * The health check policy configuration. For more information, see [Editing Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/editinghealthcheck.htm).
         */
        healthCheckers: outputs.LoadBalancer.GetBackendSetsBackendsetHealthChecker[];
        id: string;
        /**
         * The configuration details for implementing load balancer cookie session persistence (LB cookie stickiness).
         */
        lbCookieSessionPersistenceConfigurations: outputs.LoadBalancer.GetBackendSetsBackendsetLbCookieSessionPersistenceConfiguration[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend sets to retrieve.
         */
        loadBalancerId: string;
        /**
         * A friendly name for the backend set. It must be unique and it cannot be changed.
         */
        name: string;
        /**
         * The load balancer policy for the backend set. To get a list of available policies, use the [ListPolicies](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.  Example: `LEAST_CONNECTIONS`
         */
        policy: string;
        /**
         * The configuration details for implementing session persistence based on a user-specified cookie name (application cookie stickiness).
         */
        sessionPersistenceConfigurations: outputs.LoadBalancer.GetBackendSetsBackendsetSessionPersistenceConfiguration[];
        /**
         * A listener's SSL handling configuration.
         */
        sslConfigurations: outputs.LoadBalancer.GetBackendSetsBackendsetSslConfiguration[];
        state: string;
    }

    export interface GetBackendSetsBackendsetBackend {
        /**
         * Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.
         */
        backup: boolean;
        /**
         * Whether the load balancer should drain this server. Servers marked "drain" receive no new incoming traffic.  Example: `false`
         */
        drain: boolean;
        /**
         * The IP address of the backend server.  Example: `10.0.0.3`
         */
        ipAddress: string;
        /**
         * A friendly name for the backend set. It must be unique and it cannot be changed.
         */
        name: string;
        /**
         * Whether the load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
         */
        offline: boolean;
        /**
         * The backend server port against which to run the health check. If the port is not specified, the load balancer uses the port information from the `Backend` object.  Example: `8080`
         */
        port: number;
        /**
         * The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections as a server weighted '1'. For more information on load balancing policies, see [How Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
         */
        weight: number;
    }

    export interface GetBackendSetsBackendsetHealthChecker {
        /**
         * The interval between health checks, in milliseconds. The default is 30000 (30 seconds).  Example: `30000`
         */
        intervalMs: number;
        /**
         * The backend server port against which to run the health check. If the port is not specified, the load balancer uses the port information from the `Backend` object.  Example: `8080`
         */
        port: number;
        /**
         * The protocol the health check must use; either HTTP or TCP.  Example: `HTTP`
         */
        protocol: string;
        /**
         * A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
         */
        responseBodyRegex: string;
        /**
         * The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. Defaults to 3.  Example: `3`
         */
        retries: number;
        /**
         * The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, you can use common HTTP status codes such as "200".  Example: `200`
         */
        returnCode: number;
        /**
         * The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. Defaults to 3000 (3 seconds).  Example: `3000`
         */
        timeoutInMillis: number;
        /**
         * The path against which to run the health check.  Example: `/healthcheck`
         */
        urlPath: string;
    }

    export interface GetBackendSetsBackendsetLbCookieSessionPersistenceConfiguration {
        /**
         * The name of the cookie used to detect a session initiated by the backend server. Use '*' to specify that any cookie set by the backend causes the session to persist.  Example: `exampleCookie`
         */
        cookieName: string;
        /**
         * Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
         */
        disableFallback: boolean;
        /**
         * The domain in which the cookie is valid. The `Set-cookie` header inserted by the load balancer contains a domain attribute with the specified value.
         */
        domain: string;
        /**
         * Whether the `Set-cookie` header should contain the `HttpOnly` attribute. If `true`, the `Set-cookie` header inserted by the load balancer contains the `HttpOnly` attribute, which limits the scope of the cookie to HTTP requests. This attribute directs the client or browser to omit the cookie when providing access to cookies through non-HTTP APIs. For example, it restricts the cookie from JavaScript channels.  Example: `true`
         */
        isHttpOnly: boolean;
        /**
         * Whether the `Set-cookie` header should contain the `Secure` attribute. If `true`, the `Set-cookie` header inserted by the load balancer contains the `Secure` attribute, which directs the client or browser to send the cookie only using a secure protocol.
         */
        isSecure: boolean;
        /**
         * The amount of time the cookie remains valid. The `Set-cookie` header inserted by the load balancer contains a `Max-Age` attribute with the specified value.
         */
        maxAgeInSeconds: number;
        /**
         * The path in which the cookie is valid. The `Set-cookie header` inserted by the load balancer contains a `Path` attribute with the specified value.
         */
        path: string;
    }

    export interface GetBackendSetsBackendsetSessionPersistenceConfiguration {
        /**
         * The name of the cookie used to detect a session initiated by the backend server. Use '*' to specify that any cookie set by the backend causes the session to persist.  Example: `exampleCookie`
         */
        cookieName: string;
        /**
         * Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
         */
        disableFallback: boolean;
    }

    export interface GetBackendSetsBackendsetSslConfiguration {
        /**
         * Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: `[ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]`
         */
        certificateIds: string[];
        /**
         * A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `exampleCertificateBundle`
         */
        certificateName: string;
        /**
         * The name of the cipher suite to use for HTTPS or SSL connections.
         */
        cipherSuiteName: string;
        /**
         * A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
         */
        protocols: string[];
        /**
         * When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
         */
        serverOrderPreference: string;
        /**
         * Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: `[ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]`
         */
        trustedCertificateAuthorityIds: string[];
        /**
         * The maximum depth for peer certificate chain verification.  Example: `3`
         */
        verifyDepth: number;
        /**
         * Whether the load balancer listener should verify peer certificates.  Example: `true`
         */
        verifyPeerCertificate: boolean;
    }

    export interface GetBackendSetsFilter {
        /**
         * A friendly name for the backend set. It must be unique and it cannot be changed.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBackendsBackend {
        /**
         * The name of the backend set associated with the backend servers.  Example: `exampleBackendSet`
         */
        backendsetName: string;
        /**
         * Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.
         */
        backup?: boolean;
        /**
         * Whether the load balancer should drain this server. Servers marked "drain" receive no new incoming traffic.  Example: `false`
         */
        drain: boolean;
        /**
         * The IP address of the backend server.  Example: `10.0.0.3`
         */
        ipAddress: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and servers.
         */
        loadBalancerId: string;
        /**
         * A read-only field showing the IP address and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`
         */
        name: string;
        /**
         * Whether the load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
         */
        offline: boolean;
        /**
         * The communication port for the backend server.  Example: `8080`
         */
        port: number;
        state: string;
        /**
         * The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections as a server weighted '1'. For more information on load balancing policies, see [How Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
         */
        weight: number;
    }

    export interface GetBackendsFilter {
        /**
         * A read-only field showing the IP address and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCertificatesCertificate {
        /**
         * The Certificate Authority certificate, or any interim certificate, that you received from your SSL certificate provider.
         */
        caCertificate: string;
        /**
         * A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `exampleCertificateBundle`
         */
        certificateName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the certificate bundles to be listed.
         */
        loadBalancerId: string;
        passphrase?: string;
        privateKey: string;
        /**
         * The public certificate, in PEM format, that you received from your SSL certificate provider.
         */
        publicCertificate: string;
        state: string;
    }

    export interface GetCertificatesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHostnamesFilter {
        /**
         * A friendly name for the hostname resource. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: `exampleHostname001`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHostnamesHostname {
        /**
         * A virtual hostname. For more information about virtual hostname string construction, see [Managing Request Routing](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/managingrequest.htm#routing).  Example: `app.example.com`
         */
        hostname: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the hostnames to retrieve.
         */
        loadBalancerId: string;
        /**
         * A friendly name for the hostname resource. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: `exampleHostname001`
         */
        name: string;
        state: string;
    }

    export interface GetListenerRulesFilter {
        /**
         * The name of the rule set that the rule belongs to.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetListenerRulesListenerRule {
        /**
         * The name of the rule set that the rule belongs to.
         */
        name: string;
        /**
         * A rule object that applies to the listener.
         */
        rules: outputs.LoadBalancer.GetListenerRulesListenerRuleRule[];
        state: string;
    }

    export interface GetListenerRulesListenerRuleRule {
        /**
         * The action can be one of these values: `ADD_HTTP_REQUEST_HEADER`, `ADD_HTTP_RESPONSE_HEADER`, `ALLOW`, `CONTROL_ACCESS_USING_HTTP_METHODS`, `EXTEND_HTTP_REQUEST_HEADER_VALUE`, `EXTEND_HTTP_RESPONSE_HEADER_VALUE`, `HTTP_HEADER`, `REDIRECT`, `REMOVE_HTTP_REQUEST_HEADER`, `REMOVE_HTTP_RESPONSE_HEADER`
         */
        action: string;
        /**
         * The list of HTTP methods allowed for this listener.
         */
        allowedMethods: string[];
        /**
         * Indicates whether or not invalid characters in client header fields will be allowed. Valid names are composed of English letters, digits, hyphens and underscores. If "true", invalid characters are allowed in the HTTP header. If "false", invalid characters are not allowed in the HTTP header
         */
        areInvalidCharactersAllowed: boolean;
        conditions: outputs.LoadBalancer.GetListenerRulesListenerRuleRuleCondition[];
        /**
         * A brief description of the access control rule. Avoid entering confidential information.
         */
        description: string;
        /**
         * A header name that conforms to RFC 7230.  Example: `exampleHeaderName`
         */
        header: string;
        /**
         * The maximum size of each buffer used for reading http client request header. This value indicates the maximum size allowed for each buffer. The allowed values for buffer size are 8, 16, 32 and 64.
         */
        httpLargeHeaderSizeInKb: number;
        /**
         * A string to prepend to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        prefix: string;
        /**
         * An object that defines the redirect URI applied to the original request. The object property values compose the redirect URI.
         */
        redirectUris: outputs.LoadBalancer.GetListenerRulesListenerRuleRuleRedirectUri[];
        /**
         * The HTTP status code to return when the incoming request is redirected.
         */
        responseCode: number;
        /**
         * The HTTP status code to return when the requested HTTP method is not in the list of allowed methods. The associated status line returned with the code is mapped from the standard HTTP specification. The default value is `405 (Method Not Allowed)`.  Example: 403
         */
        statusCode: number;
        /**
         * A string to append to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        suffix: string;
        /**
         * A header value that conforms to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        value: string;
    }

    export interface GetListenerRulesListenerRuleRuleCondition {
        /**
         * The attributeName can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
         */
        attributeName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the originating VCN that an incoming packet must match.
         */
        attributeValue: string;
        /**
         * A string that specifies how to compare the PathMatchCondition object's `attributeValue` string to the incoming URI.
         * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
         * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
         * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
         * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
         */
        operator: string;
    }

    export interface GetListenerRulesListenerRuleRuleRedirectUri {
        /**
         * The valid domain name (hostname) or IP address to use in the redirect URI.
         */
        host: string;
        /**
         * The HTTP URI path to use in the redirect URI.
         */
        path: string;
        /**
         * The communication port to use in the redirect URI.
         */
        port: number;
        /**
         * The HTTP protocol to use in the redirect URI.
         */
        protocol: string;
        /**
         * The query string to use in the redirect URI.
         */
        query: string;
    }

    export interface GetLoadBalancerRoutingPoliciesFilter {
        /**
         * A unique name for the routing policy rule. Avoid entering confidential information.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLoadBalancerRoutingPoliciesRoutingPolicy {
        /**
         * The version of the language in which `condition` of `rules` are composed.
         */
        conditionLanguageVersion: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the routing policies.
         */
        loadBalancerId: string;
        /**
         * A unique name for the routing policy rule. Avoid entering confidential information.
         */
        name: string;
        /**
         * The ordered list of routing rules.
         */
        rules: outputs.LoadBalancer.GetLoadBalancerRoutingPoliciesRoutingPolicyRule[];
        state: string;
    }

    export interface GetLoadBalancerRoutingPoliciesRoutingPolicyRule {
        /**
         * A list of actions to be applied when conditions of the routing rule are met.
         */
        actions: outputs.LoadBalancer.GetLoadBalancerRoutingPoliciesRoutingPolicyRuleAction[];
        /**
         * A routing rule to evaluate defined conditions against the incoming HTTP request and perform an action.
         */
        condition: string;
        /**
         * A unique name for the routing policy rule. Avoid entering confidential information.
         */
        name: string;
    }

    export interface GetLoadBalancerRoutingPoliciesRoutingPolicyRuleAction {
        /**
         * Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
         */
        backendSetName: string;
        /**
         * A unique name for the routing policy rule. Avoid entering confidential information.
         */
        name: string;
    }

    export interface GetLoadBalancerRoutingPolicyRule {
        /**
         * A list of actions to be applied when conditions of the routing rule are met.
         */
        actions: outputs.LoadBalancer.GetLoadBalancerRoutingPolicyRuleAction[];
        /**
         * A routing rule to evaluate defined conditions against the incoming HTTP request and perform an action.
         */
        condition: string;
        /**
         * A unique name for the routing policy rule. Avoid entering confidential information.
         */
        name: string;
    }

    export interface GetLoadBalancerRoutingPolicyRuleAction {
        /**
         * Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
         */
        backendSetName: string;
        /**
         * A unique name for the routing policy rule. Avoid entering confidential information.
         */
        name: string;
    }

    export interface GetLoadBalancersFilter {
        /**
         * A unique name for the routing policy rule. Avoid entering confidential information.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLoadBalancersLoadBalancer {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the load balancers to list.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.  Example: `exampleLoadBalancer`
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Ocid of the pre-created public IP. That should be attahed to this load balancer.
         */
        id: string;
        /**
         * An array of IP addresses.
         */
        ipAddressDetails: outputs.LoadBalancer.GetLoadBalancersLoadBalancerIpAddressDetail[];
        /**
         * An array of IP addresses. Deprecated: use ipAddressDetails instead.
         *
         * @deprecated The 'ip_addresses' field has been deprecated. Please use 'ip_address_details' instead.
         */
        ipAddresses: string[];
        ipMode: string;
        /**
         * Whether the load balancer has a VCN-local (private) IP address.
         */
        isPrivate: boolean;
        /**
         * An array of NSG [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the load balancer.
         */
        networkSecurityGroupIds: string[];
        reservedIps: outputs.LoadBalancer.GetLoadBalancersLoadBalancerReservedIp[];
        /**
         * A template that determines the total pre-provisioned bandwidth (ingress plus egress). To get a list of available shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/LoadBalancerShape/ListShapes) operation.  Example: `100Mbps`
         */
        shape: string;
        /**
         * The configuration details to update load balancer to a different shape.
         */
        shapeDetails: outputs.LoadBalancer.GetLoadBalancersLoadBalancerShapeDetail[];
        /**
         * A filter to return only resources that match the given lifecycle state.  Example: `SUCCEEDED`
         */
        state: string;
        /**
         * An array of subnet [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        subnetIds: string[];
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the load balancer was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetLoadBalancersLoadBalancerIpAddressDetail {
        /**
         * An IP address.  Example: `192.168.0.3`
         */
        ipAddress: string;
        /**
         * Whether the IP address is public or private.
         */
        isPublic: boolean;
        /**
         * Pre-created public IP that will be used as the IP of this load balancer. This reserved IP will not be deleted when load balancer is deleted. This ip should not be already mapped to any other resource.
         */
        reservedIps: outputs.LoadBalancer.GetLoadBalancersLoadBalancerIpAddressDetailReservedIp[];
    }

    export interface GetLoadBalancersLoadBalancerIpAddressDetailReservedIp {
        /**
         * Ocid of the pre-created public IP. That should be attahed to this load balancer.
         */
        id: string;
    }

    export interface GetLoadBalancersLoadBalancerReservedIp {
        /**
         * Ocid of the pre-created public IP. That should be attahed to this load balancer.
         */
        id: string;
    }

    export interface GetLoadBalancersLoadBalancerShapeDetail {
        /**
         * Bandwidth in Mbps that determines the maximum bandwidth (ingress plus egress) that the load balancer can achieve. This bandwidth cannot be always guaranteed. For a guaranteed bandwidth use the minimumBandwidthInMbps parameter.
         */
        maximumBandwidthInMbps: number;
        /**
         * Bandwidth in Mbps that determines the total pre-provisioned bandwidth (ingress plus egress). The values must be between 0 and the maximumBandwidthInMbps in multiples of 10. The current allowed maximum value is defined in [Service Limits](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/servicelimits.htm).  Example: `150`
         */
        minimumBandwidthInMbps: number;
    }

    export interface GetPathRouteSetsFilter {
        /**
         * The unique name for this set of path route rules. Avoid entering confidential information.  Example: `examplePathRouteSet`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPathRouteSetsPathRouteSet {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the path route sets to retrieve.
         */
        loadBalancerId: string;
        /**
         * The unique name for this set of path route rules. Avoid entering confidential information.  Example: `examplePathRouteSet`
         */
        name: string;
        /**
         * The set of path route rules.
         */
        pathRoutes: outputs.LoadBalancer.GetPathRouteSetsPathRouteSetPathRoute[];
        state: string;
    }

    export interface GetPathRouteSetsPathRouteSetPathRoute {
        /**
         * The name of the target backend set for requests where the incoming URI matches the specified path.  Example: `exampleBackendSet`
         */
        backendSetName: string;
        /**
         * The path string to match against the incoming URI path.
         * *  Path strings are case-insensitive.
         * *  Asterisk (*) wildcards are not supported.
         * *  Regular expressions are not supported.
         */
        path: string;
        /**
         * The type of matching to apply to incoming URIs.
         */
        pathMatchType: outputs.LoadBalancer.GetPathRouteSetsPathRouteSetPathRoutePathMatchType;
    }

    export interface GetPathRouteSetsPathRouteSetPathRoutePathMatchType {
        /**
         * Specifies how the load balancing service compares a [PathRoute](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/requests/PathRoute) object's `path` string against the incoming URI.
         * *  **EXACT_MATCH** - Looks for a `path` string that exactly matches the incoming URI path.
         * *  **FORCE_LONGEST_PREFIX_MATCH** - Looks for the `path` string with the best, longest match of the beginning portion of the incoming URI path.
         * *  **PREFIX_MATCH** - Looks for a `path` string that matches the beginning portion of the incoming URI path.
         * *  **SUFFIX_MATCH** - Looks for a `path` string that matches the ending portion of the incoming URI path.
         */
        matchType: string;
    }

    export interface GetPoliciesFilter {
        /**
         * The name of a load balancing policy.  Example: 'LEAST_CONNECTIONS'
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPoliciesPolicy {
        /**
         * The name of a load balancing policy.  Example: 'LEAST_CONNECTIONS'
         */
        name: string;
    }

    export interface GetProtocolsFilter {
        /**
         * The name of a protocol.  Example: 'HTTP'
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProtocolsProtocol {
        /**
         * The name of a protocol.  Example: 'HTTP'
         */
        name: string;
    }

    export interface GetRuleSetItem {
        /**
         * The action can be one of these values: `ADD_HTTP_REQUEST_HEADER`, `ADD_HTTP_RESPONSE_HEADER`, `ALLOW`, `CONTROL_ACCESS_USING_HTTP_METHODS`, `EXTEND_HTTP_REQUEST_HEADER_VALUE`, `EXTEND_HTTP_RESPONSE_HEADER_VALUE`, `HTTP_HEADER`, `REDIRECT`, `REMOVE_HTTP_REQUEST_HEADER`, `REMOVE_HTTP_RESPONSE_HEADER`
         */
        action: string;
        /**
         * The list of HTTP methods allowed for this listener.
         */
        allowedMethods: string[];
        /**
         * Indicates whether or not invalid characters in client header fields will be allowed. Valid names are composed of English letters, digits, hyphens and underscores. If "true", invalid characters are allowed in the HTTP header. If "false", invalid characters are not allowed in the HTTP header
         */
        areInvalidCharactersAllowed: boolean;
        conditions: outputs.LoadBalancer.GetRuleSetItemCondition[];
        /**
         * A brief description of the access control rule. Avoid entering confidential information.
         */
        description: string;
        /**
         * A header name that conforms to RFC 7230.  Example: `exampleHeaderName`
         */
        header: string;
        /**
         * The maximum size of each buffer used for reading http client request header. This value indicates the maximum size allowed for each buffer. The allowed values for buffer size are 8, 16, 32 and 64.
         */
        httpLargeHeaderSizeInKb: number;
        /**
         * A string to prepend to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        prefix: string;
        /**
         * An object that defines the redirect URI applied to the original request. The object property values compose the redirect URI.
         */
        redirectUris: outputs.LoadBalancer.GetRuleSetItemRedirectUri[];
        /**
         * The HTTP status code to return when the incoming request is redirected.
         */
        responseCode: number;
        /**
         * The HTTP status code to return when the requested HTTP method is not in the list of allowed methods. The associated status line returned with the code is mapped from the standard HTTP specification. The default value is `405 (Method Not Allowed)`.  Example: 403
         */
        statusCode: number;
        /**
         * A string to append to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        suffix: string;
        /**
         * A header value that conforms to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        value: string;
    }

    export interface GetRuleSetItemCondition {
        /**
         * (Required) (Updatable) The attributeName can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
         */
        attributeName: string;
        /**
         * (Required) (Updatable) Depends on `attributeName`:
         * - when `attributeName` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
         * - when `attributeName` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
         * - when `attributeName` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
         */
        attributeValue: string;
        /**
         * A string that specifies how to compare the PathMatchCondition object's `attributeValue` string to the incoming URI.
         * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
         * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
         * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
         * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
         */
        operator: string;
    }

    export interface GetRuleSetItemRedirectUri {
        /**
         * The valid domain name (hostname) or IP address to use in the redirect URI.
         */
        host: string;
        /**
         * The HTTP URI path to use in the redirect URI.
         */
        path: string;
        /**
         * The communication port to use in the redirect URI.
         */
        port: number;
        /**
         * The HTTP protocol to use in the redirect URI.
         */
        protocol: string;
        /**
         * The query string to use in the redirect URI.
         */
        query: string;
    }

    export interface GetRuleSetsFilter {
        /**
         * The name for this set of rules. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: `exampleRuleSet`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRuleSetsRuleSet {
        id: string;
        /**
         * An array of rules that compose the rule set.
         */
        items: outputs.LoadBalancer.GetRuleSetsRuleSetItem[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the specified load balancer.
         */
        loadBalancerId: string;
        /**
         * The name for this set of rules. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: `exampleRuleSet`
         */
        name: string;
        state: string;
    }

    export interface GetRuleSetsRuleSetItem {
        /**
         * The action can be one of these values: `ADD_HTTP_REQUEST_HEADER`, `ADD_HTTP_RESPONSE_HEADER`, `ALLOW`, `CONTROL_ACCESS_USING_HTTP_METHODS`, `EXTEND_HTTP_REQUEST_HEADER_VALUE`, `EXTEND_HTTP_RESPONSE_HEADER_VALUE`, `HTTP_HEADER`, `REDIRECT`, `REMOVE_HTTP_REQUEST_HEADER`, `REMOVE_HTTP_RESPONSE_HEADER`
         */
        action: string;
        /**
         * The list of HTTP methods allowed for this listener.
         */
        allowedMethods: string[];
        /**
         * Indicates whether or not invalid characters in client header fields will be allowed. Valid names are composed of English letters, digits, hyphens and underscores. If "true", invalid characters are allowed in the HTTP header. If "false", invalid characters are not allowed in the HTTP header 
         * * `conditions` -
         */
        areInvalidCharactersAllowed: boolean;
        conditions: outputs.LoadBalancer.GetRuleSetsRuleSetItemCondition[];
        /**
         * A brief description of the access control rule. Avoid entering confidential information.
         */
        description: string;
        /**
         * A header name that conforms to RFC 7230.  Example: `exampleHeaderName`
         */
        header: string;
        /**
         * The maximum size of each buffer used for reading http client request header. This value indicates the maximum size allowed for each buffer. The allowed values for buffer size are 8, 16, 32 and 64.
         */
        httpLargeHeaderSizeInKb: number;
        /**
         * A string to prepend to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        prefix: string;
        /**
         * An object that defines the redirect URI applied to the original request. The object property values compose the redirect URI.
         */
        redirectUris: outputs.LoadBalancer.GetRuleSetsRuleSetItemRedirectUri[];
        /**
         * The HTTP status code to return when the incoming request is redirected.
         */
        responseCode: number;
        /**
         * The HTTP status code to return when the requested HTTP method is not in the list of allowed methods. The associated status line returned with the code is mapped from the standard HTTP specification. The default value is `405 (Method Not Allowed)`.  Example: 403
         */
        statusCode: number;
        /**
         * A string to append to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        suffix: string;
        /**
         * A header value that conforms to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        value: string;
    }

    export interface GetRuleSetsRuleSetItemCondition {
        /**
         * (Required) (Updatable) The attributeName can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
         */
        attributeName: string;
        /**
         * (Required) (Updatable) Depends on `attributeName`:
         * - when `attributeName` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
         * - when `attributeName` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
         * - when `attributeName` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
         */
        attributeValue: string;
        /**
         * A string that specifies how to compare the PathMatchCondition object's `attributeValue` string to the incoming URI.
         * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
         * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
         * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
         * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
         */
        operator: string;
    }

    export interface GetRuleSetsRuleSetItemRedirectUri {
        /**
         * The valid domain name (hostname) or IP address to use in the redirect URI.
         */
        host: string;
        /**
         * The HTTP URI path to use in the redirect URI.
         */
        path: string;
        /**
         * The communication port to use in the redirect URI.
         */
        port: number;
        /**
         * The HTTP protocol to use in the redirect URI.
         */
        protocol: string;
        /**
         * The query string to use in the redirect URI.
         */
        query: string;
    }

    export interface GetShapesFilter {
        /**
         * The name of the shape.  Example: `100Mbps`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetShapesShape {
        /**
         * The name of the shape.  Example: `100Mbps`
         */
        name: string;
    }

    export interface GetSslCipherSuitesFilter {
        /**
         * A friendly name for the SSL cipher suite. It must be unique and it cannot be changed.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSslCipherSuitesSslCipherSuite {
        /**
         * A list of SSL ciphers the load balancer must support for HTTPS or SSL connections.
         */
        ciphers: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated load balancer.
         */
        loadBalancerId: string;
        /**
         * A friendly name for the SSL cipher suite. It must be unique and it cannot be changed.
         */
        name: string;
        state: string;
    }

    export interface ListenerConnectionConfiguration {
        /**
         * (Updatable) The backend TCP Proxy Protocol version.  Example: `1`
         */
        backendTcpProxyProtocolVersion?: number;
        /**
         * (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
         */
        idleTimeoutInSeconds: string;
    }

    export interface ListenerSslConfiguration {
        /**
         * (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: `[ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]`
         */
        certificateIds?: string[];
        /**
         * (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `exampleCertificateBundle`
         */
        certificateName?: string;
        /**
         * (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
         */
        cipherSuiteName: string;
        /**
         * (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
         */
        protocols: string[];
        /**
         * (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
         */
        serverOrderPreference: string;
        /**
         * (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: `[ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]`
         */
        trustedCertificateAuthorityIds?: string[];
        /**
         * (Updatable) The maximum depth for peer certificate chain verification.  Example: `3`
         */
        verifyDepth?: number;
        /**
         * (Updatable) Whether the load balancer listener should verify peer certificates.  Example: `true`
         */
        verifyPeerCertificate?: boolean;
    }

    export interface LoadBalancerIpAddressDetail {
        /**
         * An IP address.  Example: `192.168.0.3`
         */
        ipAddress: string;
        /**
         * Whether the IP address is public or private.
         */
        isPublic: boolean;
        /**
         * Pre-created public IP that will be used as the IP of this load balancer. This reserved IP will not be deleted when load balancer is deleted. This ip should not be already mapped to any other resource.
         */
        reservedIps: outputs.LoadBalancer.LoadBalancerIpAddressDetailReservedIp[];
    }

    export interface LoadBalancerIpAddressDetailReservedIp {
        /**
         * Ocid of the pre-created public IP. That should be attahed to this load balancer.
         */
        id: string;
    }

    export interface LoadBalancerReservedIp {
        /**
         * Ocid of the pre-created public IP. That should be attahed to this load balancer.
         */
        id: string;
    }

    export interface LoadBalancerRoutingPolicyRule {
        /**
         * (Updatable) A list of actions to be applied when conditions of the routing rule are met.
         */
        actions: outputs.LoadBalancer.LoadBalancerRoutingPolicyRuleAction[];
        /**
         * (Updatable) A routing rule to evaluate defined conditions against the incoming HTTP request and perform an action.
         */
        condition: string;
        /**
         * (Updatable) A unique name for the routing policy rule. Avoid entering confidential information.
         */
        name: string;
    }

    export interface LoadBalancerRoutingPolicyRuleAction {
        /**
         * (Updatable) Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
         */
        backendSetName: string;
        /**
         * (Updatable) A unique name for the routing policy rule. Avoid entering confidential information.
         */
        name: string;
    }

    export interface LoadBalancerShapeDetails {
        /**
         * (Updatable) Bandwidth in Mbps that determines the maximum bandwidth (ingress plus egress) that the load balancer can achieve. This bandwidth cannot be always guaranteed. For a guaranteed bandwidth use the minimumBandwidthInMbps parameter.
         */
        maximumBandwidthInMbps: number;
        /**
         * (Updatable) Bandwidth in Mbps that determines the total pre-provisioned bandwidth (ingress plus egress). The values must be between 10 and the maximumBandwidthInMbps.  Example: `150`
         */
        minimumBandwidthInMbps: number;
    }

    export interface PathRouteSetPathRoute {
        /**
         * (Updatable) The name of the target backend set for requests where the incoming URI matches the specified path.  Example: `exampleBackendSet`
         */
        backendSetName: string;
        /**
         * (Updatable) The path string to match against the incoming URI path.
         * *  Path strings are case-insensitive.
         * *  Asterisk (*) wildcards are not supported.
         * *  Regular expressions are not supported.
         */
        path: string;
        /**
         * (Updatable) The type of matching to apply to incoming URIs.
         */
        pathMatchType: outputs.LoadBalancer.PathRouteSetPathRoutePathMatchType;
    }

    export interface PathRouteSetPathRoutePathMatchType {
        /**
         * (Updatable) Specifies how the load balancing service compares a [PathRoute](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/requests/PathRoute) object's `path` string against the incoming URI.
         * *  **EXACT_MATCH** - Looks for a `path` string that exactly matches the incoming URI path.
         * *  **FORCE_LONGEST_PREFIX_MATCH** - Looks for the `path` string with the best, longest match of the beginning portion of the incoming URI path.
         * *  **PREFIX_MATCH** - Looks for a `path` string that matches the beginning portion of the incoming URI path.
         * *  **SUFFIX_MATCH** - Looks for a `path` string that matches the ending portion of the incoming URI path.
         */
        matchType: string;
    }

    export interface RuleSetItem {
        /**
         * (Updatable) The action can be one of these values: `ADD_HTTP_REQUEST_HEADER`, `ADD_HTTP_RESPONSE_HEADER`, `ALLOW`, `CONTROL_ACCESS_USING_HTTP_METHODS`, `EXTEND_HTTP_REQUEST_HEADER_VALUE`, `EXTEND_HTTP_RESPONSE_HEADER_VALUE`, `HTTP_HEADER`, `REDIRECT`, `REMOVE_HTTP_REQUEST_HEADER`, `REMOVE_HTTP_RESPONSE_HEADER`
         */
        action: string;
        /**
         * (Updatable) The list of HTTP methods allowed for this listener.
         */
        allowedMethods: string[];
        /**
         * (Updatable) Indicates whether or not invalid characters in client header fields will be allowed. Valid names are composed of English letters, digits, hyphens and underscores. If "true", invalid characters are allowed in the HTTP header. If "false", invalid characters are not allowed in the HTTP header
         */
        areInvalidCharactersAllowed: boolean;
        /**
         * (Updatable)
         */
        conditions: outputs.LoadBalancer.RuleSetItemCondition[];
        /**
         * (Updatable) A brief description of the access control rule. Avoid entering confidential information.
         */
        description: string;
        /**
         * (Updatable) A header name that conforms to RFC 7230.  Example: `exampleHeaderName`
         */
        header: string;
        /**
         * (Updatable) The maximum size of each buffer used for reading http client request header. This value indicates the maximum size allowed for each buffer. The allowed values for buffer size are 8, 16, 32 and 64.
         */
        httpLargeHeaderSizeInKb: number;
        /**
         * (Updatable) A string to prepend to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        prefix: string;
        /**
         * (Updatable) An object that defines the redirect URI applied to the original request. The object property values compose the redirect URI.
         */
        redirectUri: outputs.LoadBalancer.RuleSetItemRedirectUri;
        /**
         * (Updatable) The HTTP status code to return when the incoming request is redirected.
         */
        responseCode: number;
        /**
         * (Updatable) The HTTP status code to return when the requested HTTP method is not in the list of allowed methods. The associated status line returned with the code is mapped from the standard HTTP specification. The default value is `405 (Method Not Allowed)`.  Example: 403
         */
        statusCode: number;
        /**
         * (Updatable) A string to append to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        suffix: string;
        /**
         * (Updatable) A header value that conforms to RFC 7230. With the following exceptions:
         * *  value cannot contain `$`
         * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
         */
        value: string;
    }

    export interface RuleSetItemCondition {
        /**
         * (Updatable) The attributeName can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
         */
        attributeName: string;
        /**
         * (Updatable) Depends on `attributeName`:
         * - when `attributeName` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
         * - when `attributeName` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
         * - when `attributeName` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
         */
        attributeValue: string;
        /**
         * (Updatable) A string that specifies how to compare the PathMatchCondition object's `attributeValue` string to the incoming URI.
         * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
         * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
         * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
         * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
         */
        operator: string;
    }

    export interface RuleSetItemRedirectUri {
        /**
         * (Updatable) The valid domain name (hostname) or IP address to use in the redirect URI.
         */
        host: string;
        /**
         * (Updatable) The HTTP URI path to use in the redirect URI.
         */
        path: string;
        /**
         * (Updatable) The communication port to use in the redirect URI.
         */
        port: number;
        /**
         * (Updatable) The HTTP protocol to use in the redirect URI.
         */
        protocol: string;
        /**
         * (Updatable) The query string to use in the redirect URI.
         */
        query: string;
    }
}

export namespace LogAnalytics {
    export interface GetLogAnalyticsCategoriesListItem {
        /**
         * The category description.
         */
        description: string;
        /**
         * The category display name.
         */
        displayName: string;
        /**
         * The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
         */
        isSystem: boolean;
        /**
         * A filter to return only log analytics category whose name matches the entire name given. The match is case-insensitive.
         */
        name: string;
        /**
         * The category type. Values include "PRODUCT", "TIER", "VENDOR" and "GENERIC".
         */
        type: string;
    }

    export interface GetLogAnalyticsEntitiesFilter {
        /**
         * A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLogAnalyticsEntitiesLogAnalyticsEntityCollection {
        items: outputs.LogAnalytics.GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem[];
    }

    export interface GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem {
        /**
         * The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
         */
        areLogsCollected: boolean;
        /**
         * A filter to return only log analytics entities whose cloudResourceId matches the cloudResourceId given.
         */
        cloudResourceId: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Internal name for the log analytics entity type.
         */
        entityTypeInternalName: string;
        /**
         * A filter to return only log analytics entities whose entityTypeName matches the entire log analytics entity type name of one of the entityTypeNames given in the list. The match is case-insensitive.
         */
        entityTypeName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only log analytics entities whose hostname matches the entire hostname given.
         */
        hostname: string;
        /**
         * The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
         */
        id: string;
        /**
         * lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
         */
        lifecycleDetails: string;
        /**
         * Management agent (management-agents resource kind) compartment OCID
         */
        managementAgentCompartmentId: string;
        /**
         * Management agent (management-agents resource kind) display name
         */
        managementAgentDisplayName: string;
        /**
         * The OCID of the Management Agent.
         */
        managementAgentId: string;
        /**
         * A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
         */
        name: string;
        /**
         * The Logging Analytics namespace used for the request.
         */
        namespace: string;
        /**
         * The name/value pairs for parameter values to be used in file patterns specified in log sources.
         */
        properties: {[key: string]: any};
        /**
         * A filter to return only log analytics entities whose sourceId matches the sourceId given.
         */
        sourceId: string;
        /**
         * A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the resource was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * The timezone region of the log analytics entity.
         */
        timezoneRegion: string;
    }

    export interface GetLogAnalyticsEntityTopologyItem {
        /**
         * Collection of log analytics entity relationship links.
         */
        links: outputs.LogAnalytics.GetLogAnalyticsEntityTopologyItemLink[];
        /**
         * Collection of log analytics entities.
         */
        nodes: outputs.LogAnalytics.GetLogAnalyticsEntityTopologyItemNode[];
    }

    export interface GetLogAnalyticsEntityTopologyItemLink {
        /**
         * Array of log analytics entity summary.
         */
        items: outputs.LogAnalytics.GetLogAnalyticsEntityTopologyItemLinkItem[];
    }

    export interface GetLogAnalyticsEntityTopologyItemLinkItem {
        /**
         * The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
         */
        destinationEntityId: string;
        /**
         * The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
         */
        sourceEntityId: string;
    }

    export interface GetLogAnalyticsEntityTopologyItemNode {
        /**
         * Array of log analytics entity summary.
         */
        items: outputs.LogAnalytics.GetLogAnalyticsEntityTopologyItemNodeItem[];
    }

    export interface GetLogAnalyticsEntityTopologyItemNodeItem {
        /**
         * The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
         */
        areLogsCollected: boolean;
        /**
         * The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
         */
        cloudResourceId: string;
        /**
         * Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Internal name for the log analytics entity type.
         */
        entityTypeInternalName: string;
        /**
         * Log analytics entity type name.
         */
        entityTypeName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
         */
        id: string;
        /**
         * lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
         */
        lifecycleDetails: string;
        /**
         * The OCID of the Management Agent.
         */
        managementAgentId: string;
        /**
         * Log analytics entity name.
         */
        name: string;
        /**
         * This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
         */
        sourceId: string;
        /**
         * A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the resource was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * The timezone region of the log analytics entity.
         */
        timezoneRegion: string;
    }

    export interface GetLogAnalyticsLogGroupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection {
        items: outputs.LogAnalytics.GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem[];
    }

    export interface GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description for this resource.
         */
        description: string;
        /**
         * A filter to return only log analytics log groups whose displayName matches the entire display name given. The match is case-insensitive.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
         */
        id: string;
        /**
         * The Logging Analytics namespace used for the request.
         */
        namespace: string;
        /**
         * The date and time the resource was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the resource was last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetLogAnalyticsObjectCollectionRuleOverride {
        matchType: string;
        matchValue: string;
        propertyName: string;
        propertyValue: string;
    }

    export interface GetLogAnalyticsObjectCollectionRulesFilter {
        /**
         * A filter to return rules only matching with this name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection {
        items: outputs.LogAnalytics.GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem[];
    }

    export interface GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem {
        /**
         * An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
         */
        charEncoding: string;
        /**
         * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
         */
        collectionType: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
         */
        description: string;
        /**
         * Logging Analytics entity OCID to associate the processed logs with.
         */
        entityId: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
         */
        id: string;
        /**
         * A detailed status of the life cycle state.
         */
        lifecycleDetails: string;
        /**
         * Logging Analytics Log group OCID to associate the processed logs with.
         */
        logGroupId: string;
        /**
         * Name of the Logging Analytics Source to use for the processing.
         */
        logSourceName: string;
        /**
         * A filter to return rules only matching with this name.
         */
        name: string;
        /**
         * The Logging Analytics namespace used for the request.
         */
        namespace: string;
        /**
         * When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
         */
        objectNameFilters: string[];
        /**
         * Name of the Object Storage bucket.
         */
        osBucketName: string;
        /**
         * Object Storage namespace.
         */
        osNamespace: string;
        /**
         * Use this to override some property values which are defined at bucket level to the scope of object. Supported propeties for override are, logSourceName, charEncoding. Supported matchType for override are "contains".
         */
        overrides: outputs.LogAnalytics.GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride[];
        /**
         * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
         */
        pollSince: string;
        /**
         * The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
         */
        pollTill: string;
        /**
         * Lifecycle state filter.
         */
        state: string;
        /**
         * The time when this rule was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time when this rule was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride {
        matchType: string;
        matchValue: string;
        propertyName: string;
        propertyValue: string;
    }

    export interface GetLogAnalyticsPreferenceItem {
        /**
         * The preference name. Currently, only "DEFAULT_HOMEPAGE" is supported.
         */
        name: string;
        /**
         * The preference value.
         */
        value: string;
    }

    export interface GetLogAnalyticsResourceCategoriesListCategory {
        /**
         * The category description.
         */
        description: string;
        /**
         * The category display name.
         */
        displayName: string;
        /**
         * The system flag. A value of false denotes a user-created category assignment. A value of true denotes an Oracle-defined category assignment.
         */
        isSystem: boolean;
        /**
         * The unique name that identifies the category.
         */
        name: string;
        /**
         * The category type. Values include "PRODUCT", "TIER", "VENDOR" and "GENERIC".
         */
        type: string;
    }

    export interface GetLogAnalyticsResourceCategoriesListItem {
        /**
         * The category name to which this resource belongs.
         */
        categoryName: string;
        /**
         * The system flag. A value of false denotes a user-created category assignment. A value of true denotes an Oracle-defined category assignment.
         */
        isSystem: boolean;
        /**
         * The unique identifier of the resource, usually a name or ocid.
         */
        resourceId: string;
        /**
         * The resource type.
         */
        resourceType: string;
    }

    export interface GetNamespaceScheduledTaskAction {
        /**
         * if true, purge child compartments data
         */
        compartmentIdInSubtree: boolean;
        /**
         * the type of the log data to be purged
         */
        dataType: string;
        /**
         * the compartment OCID under which the data will be purged
         */
        purgeCompartmentId: string;
        /**
         * The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
         */
        purgeDuration: string;
        /**
         * Purge query string.
         */
        queryString: string;
        /**
         * The ManagementSavedSearch id [OCID] utilized in the action.
         */
        savedSearchId: string;
        /**
         * Schedule type discriminator.
         */
        type: string;
    }

    export interface GetNamespaceScheduledTaskSchedule {
        schedules: outputs.LogAnalytics.GetNamespaceScheduledTaskScheduleSchedule[];
    }

    export interface GetNamespaceScheduledTaskScheduleSchedule {
        /**
         * Value in cron format.
         */
        expression: string;
        /**
         * Schedule misfire retry policy.
         */
        misfirePolicy: string;
        /**
         * Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
         */
        recurringInterval: string;
        /**
         * Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
         */
        repeatCount: number;
        /**
         * Time zone, by default UTC.
         */
        timeZone: string;
        /**
         * Schedule type discriminator.
         */
        type: string;
    }

    export interface GetNamespaceScheduledTasksFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNamespaceScheduledTasksScheduledTaskCollection {
        items: outputs.LogAnalytics.GetNamespaceScheduledTasksScheduledTaskCollectionItem[];
    }

    export interface GetNamespaceScheduledTasksScheduledTaskCollectionItem {
        /**
         * Action for scheduled task.
         */
        actions: outputs.LogAnalytics.GetNamespaceScheduledTasksScheduledTaskCollectionItemAction[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the data plane resource.
         */
        id: string;
        kind: string;
        /**
         * The Logging Analytics namespace used for the request.
         */
        namespace: string;
        /**
         * Number of execution occurrences.
         */
        numOccurrences: string;
        /**
         * The ManagementSavedSearch id [OCID] utilized in the action.
         */
        savedSearchId: string;
        scheduledTaskId: string;
        /**
         * Schedules.
         */
        schedules: outputs.LogAnalytics.GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule[];
        /**
         * The current state of the scheduled task.
         */
        state: string;
        /**
         * Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
         */
        taskStatus: string;
        /**
         * Required parameter to specify schedule task type.
         */
        taskType: string;
        /**
         * The date and time the scheduled task was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the scheduled task was last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
         */
        workRequestId: string;
    }

    export interface GetNamespaceScheduledTasksScheduledTaskCollectionItemAction {
        /**
         * if true, purge child compartments data
         */
        compartmentIdInSubtree: boolean;
        /**
         * the type of the log data to be purged
         */
        dataType: string;
        /**
         * the compartment OCID under which the data will be purged
         */
        purgeCompartmentId: string;
        /**
         * The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
         */
        purgeDuration: string;
        /**
         * Purge query string.
         */
        queryString: string;
        /**
         * The ManagementSavedSearch id [OCID] utilized in the action.
         */
        savedSearchId: string;
        /**
         * Schedule type discriminator.
         */
        type: string;
    }

    export interface GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule {
        schedules: outputs.LogAnalytics.GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule[];
    }

    export interface GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule {
        /**
         * Value in cron format.
         */
        expression: string;
        /**
         * Schedule misfire retry policy.
         */
        misfirePolicy: string;
        /**
         * Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
         */
        recurringInterval: string;
        /**
         * Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
         */
        repeatCount: number;
        /**
         * Time zone, by default UTC.
         */
        timeZone: string;
        /**
         * Schedule type discriminator.
         */
        type: string;
    }

    export interface GetNamespacesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNamespacesNamespaceCollection {
        items: outputs.LogAnalytics.GetNamespacesNamespaceCollectionItem[];
    }

    export interface GetNamespacesNamespaceCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * This indicates if the tenancy is onboarded to Logging Analytics
         */
        isOnboarded: boolean;
        /**
         * This is the namespace name of a tenancy
         */
        namespace: string;
    }

    export interface LogAnalyticsImportCustomContentChangeList {
        /**
         * A list of field display names with conflicts.
         */
        conflictFieldDisplayNames: string[];
        /**
         * A list of parser names with conflicts.
         */
        conflictParserNames: string[];
        /**
         * A list of source names with conflicts.
         */
        conflictSourceNames: string[];
        /**
         * An array of created field display names.
         */
        createdFieldDisplayNames: string[];
        /**
         * An array of created parser names.
         */
        createdParserNames: string[];
        /**
         * An array of created source names.
         */
        createdSourceNames: string[];
        /**
         * An array of updated field display names.
         */
        updatedFieldDisplayNames: string[];
        /**
         * An array of updated parser names.
         */
        updatedParserNames: string[];
        /**
         * An array of updated source names.
         */
        updatedSourceNames: string[];
    }

    export interface LogAnalyticsObjectCollectionRuleOverride {
        matchType: string;
        matchValue: string;
        propertyName: string;
        propertyValue: string;
    }

    export interface LogAnalyticsPreferencesManagementItem {
        /**
         * The preference name. Currently, only "DEFAULT_HOMEPAGE" is supported.
         */
        name?: string;
        /**
         * The preference value.
         */
        value?: string;
    }

    export interface NamespaceScheduledTaskAction {
        /**
         * if true, purge child compartments data
         */
        compartmentIdInSubtree: boolean;
        /**
         * the type of the log data to be purged
         */
        dataType: string;
        /**
         * the compartment OCID under which the data will be purged
         */
        purgeCompartmentId: string;
        /**
         * The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
         */
        purgeDuration: string;
        /**
         * Purge query string.
         */
        queryString: string;
        /**
         * The ManagementSavedSearch id [OCID] to be accelerated.
         */
        savedSearchId: string;
        /**
         * (Updatable) Schedule type discriminator.
         */
        type: string;
    }

    export interface NamespaceScheduledTaskSchedules {
        schedules: outputs.LogAnalytics.NamespaceScheduledTaskSchedulesSchedule[];
    }

    export interface NamespaceScheduledTaskSchedulesSchedule {
        /**
         * (Updatable) Value in cron format.
         */
        expression: string;
        /**
         * (Updatable) Schedule misfire retry policy.
         */
        misfirePolicy: string;
        /**
         * (Updatable) Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
         */
        recurringInterval: string;
        /**
         * (Updatable) Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
         */
        repeatCount: number;
        /**
         * (Updatable) Time zone, by default UTC.
         */
        timeZone: string;
        /**
         * (Updatable) Schedule type discriminator.
         */
        type: string;
    }

}

export namespace Logging {
    export interface GetLogConfiguration {
        /**
         * The OCID of the compartment that the resource belongs to.
         */
        compartmentId: string;
        /**
         * The source the log object comes from.
         */
        sources: outputs.Logging.GetLogConfigurationSource[];
    }

    export interface GetLogConfigurationSource {
        /**
         * Log object category.
         */
        category: string;
        /**
         * The unique identifier of the resource emitting the log.
         */
        resource: string;
        /**
         * Service generating log.
         */
        service: string;
        /**
         * The log source.
         * * **OCISERVICE:** Oracle Service.
         */
        sourceType: string;
    }

    export interface GetLogGroupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLogGroupsLogGroup {
        /**
         * Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description for this resource.
         */
        description: string;
        /**
         * Resource name
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the resource.
         */
        id: string;
        /**
         * The log group object state.
         */
        state: string;
        /**
         * Time the resource was created.
         */
        timeCreated: string;
        /**
         * Time the resource was last modified.
         */
        timeLastModified: string;
    }

    export interface GetLogSavedSearchesFilter {
        /**
         * Resource name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLogSavedSearchesLogSavedSearchSummaryCollection {
        items: outputs.Logging.GetLogSavedSearchesLogSavedSearchSummaryCollectionItem[];
    }

    export interface GetLogSavedSearchesLogSavedSearchSummaryCollectionItem {
        /**
         * Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description for this resource.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the resource.
         */
        id: string;
        /**
         * Resource name
         */
        name: string;
        /**
         * The search query that is saved.
         */
        query: string;
        /**
         * The state of the LogSavedSearch
         */
        state: string;
        /**
         * Time the resource was created.
         */
        timeCreated: string;
        /**
         * Time the resource was last modified.
         */
        timeLastModified: string;
    }

    export interface GetLogsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetLogsLog {
        /**
         * The OCID of the compartment that the resource belongs to.
         */
        compartmentId: string;
        /**
         * Log object configuration.
         */
        configurations: outputs.Logging.GetLogsLogConfiguration[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Resource name
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the resource.
         */
        id: string;
        /**
         * Whether or not this resource is currently enabled.
         */
        isEnabled: boolean;
        /**
         * OCID of a log group to work with.
         */
        logGroupId: string;
        /**
         * The logType that the log object is for, whether custom or service.
         */
        logType: string;
        /**
         * Log retention duration in 30-day increments (30, 60, 90 and so on).
         */
        retentionDuration: number;
        /**
         * Lifecycle state of the log object
         */
        state: string;
        /**
         * The OCID of the tenancy.
         */
        tenancyId: string;
        /**
         * Time the resource was created.
         */
        timeCreated: string;
        /**
         * Time the resource was last modified.
         */
        timeLastModified: string;
    }

    export interface GetLogsLogConfiguration {
        /**
         * The OCID of the compartment that the resource belongs to.
         */
        compartmentId: string;
        /**
         * The source the log object comes from.
         */
        sources: outputs.Logging.GetLogsLogConfigurationSource[];
    }

    export interface GetLogsLogConfigurationSource {
        /**
         * Log object category.
         */
        category: string;
        /**
         * The unique identifier of the resource emitting the log.
         */
        resource: string;
        /**
         * Service generating log.
         */
        service: string;
        /**
         * The log source.
         * * **OCISERVICE:** Oracle Service.
         */
        sourceType: string;
    }

    export interface GetUnifiedAgentConfigurationGroupAssociation {
        /**
         * list of group/dynamic group ids associated with this configuration.
         */
        groupLists: string[];
    }

    export interface GetUnifiedAgentConfigurationServiceConfiguration {
        /**
         * Type of Unified Agent service configuration.
         */
        configurationType: string;
        /**
         * Logging destination object.
         */
        destinations: outputs.Logging.GetUnifiedAgentConfigurationServiceConfigurationDestination[];
        sources: outputs.Logging.GetUnifiedAgentConfigurationServiceConfigurationSource[];
    }

    export interface GetUnifiedAgentConfigurationServiceConfigurationDestination {
        /**
         * The OCID of the resource.
         */
        logObjectId: string;
    }

    export interface GetUnifiedAgentConfigurationServiceConfigurationSource {
        channels: string[];
        /**
         * The name key to tag this grok pattern.
         */
        name: string;
        /**
         * source parser object.
         */
        parsers: outputs.Logging.GetUnifiedAgentConfigurationServiceConfigurationSourceParser[];
        paths: string[];
        /**
         * Unified schema logging source type.
         */
        sourceType: string;
    }

    export interface GetUnifiedAgentConfigurationServiceConfigurationSourceParser {
        delimiter: string;
        expression: string;
        /**
         * Specify the time field for the event time. If the event doesn't have this field, the current time is used.
         */
        fieldTimeKey: string;
        formatFirstline: string;
        formats: string[];
        grokFailureKey: string;
        grokNameKey: string;
        /**
         * If true, use Fluent::EventTime.now(current time) as a timestamp when timeKey is specified.
         */
        isEstimateCurrentEvent: boolean;
        /**
         * If true, keep time field in the record.
         */
        isKeepTimeKey: boolean;
        /**
         * If true, an empty string field is replaced with nil.
         */
        isNullEmptyString: boolean;
        isSupportColonlessIdent: boolean;
        isWithPriority: boolean;
        keys: string[];
        messageFormat: string;
        messageKey: string;
        multiLineStartRegexp: string;
        /**
         * Specify the null value pattern.
         */
        nullValuePattern: string;
        /**
         * Type of fluent parser.
         */
        parserType: string;
        patterns: outputs.Logging.GetUnifiedAgentConfigurationServiceConfigurationSourceParserPattern[];
        rfc5424timeFormat: string;
        syslogParserType: string;
        timeFormat: string;
        timeType: string;
        /**
         * Specify the timeout for parse processing. This is mainly for detecting an incorrect regexp pattern.
         */
        timeoutInMilliseconds: number;
        /**
         * Specify types for converting a field into another type.
         */
        types: {[key: string]: any};
    }

    export interface GetUnifiedAgentConfigurationServiceConfigurationSourceParserPattern {
        /**
         * Process value using the specified format. This is available only when timeType is a string.
         */
        fieldTimeFormat: string;
        /**
         * Specify the time field for the event time. If the event doesn't have this field, the current time is used.
         */
        fieldTimeKey: string;
        /**
         * Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
         */
        fieldTimeZone: string;
        /**
         * The name key to tag this grok pattern.
         */
        name: string;
        /**
         * The grok pattern.
         */
        pattern: string;
    }

    export interface GetUnifiedAgentConfigurationsFilter {
        /**
         * The name key to tag this grok pattern.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetUnifiedAgentConfigurationsUnifiedAgentConfigurationCollection {
        items: outputs.Logging.GetUnifiedAgentConfigurationsUnifiedAgentConfigurationCollectionItem[];
    }

    export interface GetUnifiedAgentConfigurationsUnifiedAgentConfigurationCollectionItem {
        /**
         * Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
         */
        compartmentId: string;
        /**
         * State of unified agent service configuration.
         */
        configurationState: string;
        /**
         * Type of Unified Agent service configuration.
         */
        configurationType: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description for this resource.
         */
        description: string;
        /**
         * Resource name
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the resource.
         */
        id: string;
        /**
         * Whether or not this resource is currently enabled.
         */
        isEnabled: boolean;
        /**
         * Lifecycle state of the log object
         */
        state: string;
        /**
         * Time the resource was created.
         */
        timeCreated: string;
        /**
         * Time the resource was last modified.
         */
        timeLastModified: string;
    }

    export interface LogConfiguration {
        /**
         * The OCID of the compartment that the resource belongs to.
         */
        compartmentId: string;
        /**
         * The source the log object comes from.
         */
        source: outputs.Logging.LogConfigurationSource;
    }

    export interface LogConfigurationSource {
        /**
         * Log object category.
         */
        category: string;
        /**
         * The unique identifier of the resource emitting the log.
         */
        resource: string;
        /**
         * Service generating log.
         */
        service: string;
        /**
         * The log source.
         * * **OCISERVICE:** Oracle Service.
         */
        sourceType: string;
    }

    export interface UnifiedAgentConfigurationGroupAssociation {
        /**
         * (Updatable) list of group/dynamic group ids associated with this configuration.
         */
        groupLists: string[];
    }

    export interface UnifiedAgentConfigurationServiceConfiguration {
        /**
         * (Updatable) Type of Unified Agent service configuration.
         */
        configurationType: string;
        /**
         * (Updatable) Logging destination object.
         */
        destination: outputs.Logging.UnifiedAgentConfigurationServiceConfigurationDestination;
        /**
         * (Updatable)
         */
        sources: outputs.Logging.UnifiedAgentConfigurationServiceConfigurationSource[];
    }

    export interface UnifiedAgentConfigurationServiceConfigurationDestination {
        /**
         * (Updatable) The OCID of the resource.
         */
        logObjectId: string;
    }

    export interface UnifiedAgentConfigurationServiceConfigurationSource {
        /**
         * (Updatable)
         */
        channels: string[];
        /**
         * (Updatable) The name key to tag this grok pattern.
         */
        name: string;
        /**
         * (Updatable) source parser object.
         */
        parser: outputs.Logging.UnifiedAgentConfigurationServiceConfigurationSourceParser;
        /**
         * (Updatable)
         */
        paths: string[];
        /**
         * (Updatable) Unified schema logging source type.
         */
        sourceType: string;
    }

    export interface UnifiedAgentConfigurationServiceConfigurationSourceParser {
        /**
         * (Updatable)
         */
        delimiter: string;
        /**
         * (Updatable)
         */
        expression: string;
        /**
         * (Updatable) Specify the time field for the event time. If the event doesn't have this field, the current time is used.
         */
        fieldTimeKey: string;
        /**
         * (Updatable)
         */
        formatFirstline: string;
        /**
         * (Updatable)
         */
        formats: string[];
        /**
         * (Updatable)
         */
        grokFailureKey: string;
        /**
         * (Updatable)
         */
        grokNameKey: string;
        /**
         * (Updatable) If true, use Fluent::EventTime.now(current time) as a timestamp when timeKey is specified.
         */
        isEstimateCurrentEvent: boolean;
        /**
         * (Updatable) If true, keep time field in the record.
         */
        isKeepTimeKey: boolean;
        /**
         * (Updatable) If true, an empty string field is replaced with nil.
         */
        isNullEmptyString: boolean;
        /**
         * (Updatable)
         */
        isSupportColonlessIdent: boolean;
        /**
         * (Updatable)
         */
        isWithPriority: boolean;
        /**
         * (Updatable)
         */
        keys: string[];
        /**
         * (Updatable)
         */
        messageFormat: string;
        /**
         * (Updatable)
         */
        messageKey: string;
        /**
         * (Updatable)
         */
        multiLineStartRegexp: string;
        /**
         * (Updatable) Specify the null value pattern.
         */
        nullValuePattern: string;
        /**
         * (Updatable) Type of fluent parser.
         */
        parserType: string;
        /**
         * (Updatable)
         */
        patterns: outputs.Logging.UnifiedAgentConfigurationServiceConfigurationSourceParserPattern[];
        /**
         * (Updatable)
         */
        rfc5424timeFormat: string;
        /**
         * (Updatable)
         */
        syslogParserType: string;
        /**
         * (Updatable)
         */
        timeFormat: string;
        /**
         * (Updatable)
         */
        timeType: string;
        /**
         * (Updatable) Specify the timeout for parse processing. This is mainly for detecting an incorrect regexp pattern.
         */
        timeoutInMilliseconds: number;
        /**
         * (Updatable) Specify types for converting a field into another type.
         */
        types: {[key: string]: any};
    }

    export interface UnifiedAgentConfigurationServiceConfigurationSourceParserPattern {
        /**
         * (Updatable) Process value using the specified format. This is available only when timeType is a string.
         */
        fieldTimeFormat: string;
        /**
         * (Updatable) Specify the time field for the event time. If the event doesn't have this field, the current time is used.
         */
        fieldTimeKey: string;
        /**
         * (Updatable) Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
         */
        fieldTimeZone: string;
        /**
         * (Updatable) The name key to tag this grok pattern.
         */
        name: string;
        /**
         * (Updatable) The grok pattern.
         */
        pattern: string;
    }
}

export namespace ManagementAgent {
    export interface GetManagementAgentAvailableHistoriesAvailabilityHistory {
        /**
         * The availability status of managementAgent
         */
        availabilityStatus: string;
        /**
         * Unique Management Agent identifier
         */
        managementAgentId: string;
        /**
         * The time till which the Management Agent was known to be in the availability status. An RFC3339 formatted datetime string
         */
        timeAvailabilityStatusEnded: string;
        /**
         * The time at which the Management Agent moved to the availability status. An RFC3339 formatted datetime string
         */
        timeAvailabilityStatusStarted: string;
    }

    export interface GetManagementAgentAvailableHistoriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagementAgentCountItem {
        /**
         * The number of Management Agents in this group
         */
        count: number;
        /**
         * The Aggregation of Management Agent Dimensions
         */
        dimensions: outputs.ManagementAgent.GetManagementAgentCountItemDimension[];
    }

    export interface GetManagementAgentCountItemDimension {
        /**
         * The availability status of managementAgent
         */
        availabilityStatus: string;
        /**
         * When set to true then agents that have at least one plugin deployed will be returned. When set to false only agents that have no plugins deployed will be returned.
         */
        hasPlugins: boolean;
        /**
         * A filter to return either agents or gateway types depending upon install type selected by user. By default both install type will be returned.
         */
        installType: string;
        /**
         * Platform Type
         */
        platformType: string;
        /**
         * Agent image version
         */
        version: string;
    }

    export interface GetManagementAgentImagesFilter {
        /**
         * A filter to return only resources that match the entire platform name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagementAgentImagesManagementAgentImage {
        /**
         * Agent image content SHA256 Hash
         */
        checksum: string;
        /**
         * Agent image resource id
         */
        id: string;
        /**
         * Object storage URL for download
         */
        objectUrl: string;
        /**
         * The installation package target architecture type
         */
        packageArchitectureType: string;
        /**
         * The installation package type
         */
        packageType: string;
        /**
         * Agent image platform display name
         */
        platformName: string;
        /**
         * Agent image platform type
         */
        platformType: string;
        /**
         * Agent image size in bytes
         */
        size: number;
        /**
         * Filter to return only Management Agents in the particular lifecycle state.
         */
        state: string;
        /**
         * Agent image version
         */
        version: string;
    }

    export interface GetManagementAgentInstallKeysFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagementAgentInstallKeysManagementAgentInstallKey {
        /**
         * Total number of install for this keys
         */
        allowedKeyInstallCount: number;
        /**
         * The OCID of the compartment to which a request will be scoped.
         */
        compartmentId: string;
        /**
         * Principal id of user who created the Agent Install key
         */
        createdByPrincipalId: string;
        /**
         * Total number of install for this keys
         */
        currentKeyInstallCount: number;
        /**
         * The display name for which the Key needs to be listed.
         */
        displayName: string;
        /**
         * Agent install Key identifier
         */
        id: string;
        /**
         * If set to true, the install key has no expiration date or usage limit. Properties allowedKeyInstallCount and timeExpires are ignored if set to true. Defaults to false.
         */
        isUnlimited: boolean;
        /**
         * Management Agent Install Key
         */
        key: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Filter to return only Management Agents in the particular lifecycle state.
         */
        state: string;
        /**
         * The time when Management Agent install Key was created. An RFC3339 formatted date time string
         */
        timeCreated: string;
        /**
         * date after which key would expire after creation
         */
        timeExpires: string;
        /**
         * The time when Management Agent install Key was updated. An RFC3339 formatted date time string
         */
        timeUpdated: string;
    }

    export interface GetManagementAgentPluginCountItem {
        /**
         * The number of Management Agent Plugins in this group
         */
        count: number;
        /**
         * The Aggregation of Management Agent Plugin Dimensions
         */
        dimensions: outputs.ManagementAgent.GetManagementAgentPluginCountItemDimension[];
    }

    export interface GetManagementAgentPluginCountItemDimension {
        /**
         * Management Agent Plugin Display Name
         */
        pluginDisplayName: string;
        /**
         * Management Agent Plugin Name
         */
        pluginName: string;
    }

    export interface GetManagementAgentPluginList {
        /**
         * flag indicating whether the plugin is in enabled mode or disabled mode.
         */
        isEnabled: boolean;
        /**
         * Management Agent Plugin Identifier, can be renamed
         */
        pluginDisplayName: string;
        /**
         * Plugin Id
         */
        pluginId: string;
        /**
         * Management Agent Plugin Name
         */
        pluginName: string;
        /**
         * Plugin Status
         */
        pluginStatus: string;
        /**
         * Status message of the Plugin
         */
        pluginStatusMessage: string;
        /**
         * Plugin Version
         */
        pluginVersion: string;
    }

    export interface GetManagementAgentPluginsFilter {
        /**
         * Management Agent Plugin Name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagementAgentPluginsManagementAgentPlugin {
        /**
         * Management Agent Plugin description
         */
        description: string;
        /**
         * Filter to return only Management Agent Plugins having the particular display name.
         */
        displayName: string;
        /**
         * Management Agent Plugin Id
         */
        id: string;
        /**
         * A flag to indicate whether a given plugin can be deployed from Agent Console UI or not.
         */
        isConsoleDeployable: boolean;
        /**
         * Management Agent Plugin Name
         */
        name: string;
        /**
         * Filter to return only Management Agents in the particular lifecycle state.
         */
        state: string;
        /**
         * Supported Platform Types
         */
        supportedPlatformTypes: string[];
        /**
         * Management Agent Plugin Version
         */
        version: number;
    }

    export interface GetManagementAgentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagementAgentsManagementAgent {
        /**
         * Filter to return only Management Agents in the particular availability status.
         */
        availabilityStatus: string;
        /**
         * The OCID of the compartment to which a request will be scoped.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        deployPluginsIds: string[];
        /**
         * Filter to return only Management Agents having the particular display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Management Agent host machine name
         */
        host: string;
        /**
         * Filter to return only Management Agents having the particular agent host id.
         */
        hostId: string;
        /**
         * agent identifier
         */
        id: string;
        /**
         * agent install key identifier
         */
        installKeyId: string;
        /**
         * Path where Management Agent is installed
         */
        installPath: string;
        /**
         * A filter to return either agents or gateway types depending upon install type selected by user. By default both install type will be returned.
         */
        installType: string;
        /**
         * true if the agent can be upgraded automatically; false if it must be upgraded manually. This flag is derived from the tenancy level auto upgrade preference.
         */
        isAgentAutoUpgradable: boolean;
        /**
         * true, if the agent image is manually downloaded and installed. false, if the agent is deployed as a plugin in Oracle Cloud Agent.
         */
        isCustomerDeployed: boolean;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        managedAgentId: string;
        /**
         * Platform Name
         */
        platformName: string;
        /**
         * Array of PlatformTypes to return only results having the particular platform types. Example: ["LINUX"]
         */
        platformType: string;
        /**
         * Platform Version
         */
        platformVersion: string;
        /**
         * list of managementAgentPlugins associated with the agent
         */
        pluginLists: outputs.ManagementAgent.GetManagementAgentsManagementAgentPluginList[];
        /**
         * Version of the deployment artifact instantiated by this Management Agent. The format for Standalone resourceMode is YYMMDD.HHMM, and the format for other modes (whose artifacts are based upon Standalone but can advance independently) is YYMMDD.HHMM.VVVVVVVVVVVV. VVVVVVVVVVVV is always a numeric value between 000000000000 and 999999999999
         */
        resourceArtifactVersion: string;
        /**
         * Filter to return only Management Agents in the particular lifecycle state.
         */
        state: string;
        /**
         * The time the Management Agent was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
         */
        timeLastHeartbeat: string;
        /**
         * The time the Management Agent was last updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
        /**
         * Array of versions to return only Management Agents having the particular agent versions. Example: ["202020.0101","210201.0513"]
         */
        version: string;
    }

    export interface GetManagementAgentsManagementAgentPluginList {
        /**
         * flag indicating whether the plugin is in enabled mode or disabled mode.
         */
        isEnabled: boolean;
        /**
         * Management Agent Plugin Identifier, can be renamed
         */
        pluginDisplayName: string;
        /**
         * Plugin Id
         */
        pluginId: string;
        /**
         * Array of pluginName to return only Management Agents having the particular Plugins installed. A special pluginName of 'None' can be provided and this will return only Management Agents having no plugin installed. Example: ["PluginA"]
         */
        pluginName: string;
        /**
         * Plugin Status
         */
        pluginStatus: string;
        /**
         * Status message of the Plugin
         */
        pluginStatusMessage: string;
        /**
         * Plugin Version
         */
        pluginVersion: string;
    }

    export interface ManagementAgentPluginList {
        /**
         * flag indicating whether the plugin is in enabled mode or disabled mode.
         */
        isEnabled: boolean;
        /**
         * Management Agent Plugin Identifier, can be renamed
         */
        pluginDisplayName: string;
        /**
         * Plugin Id
         */
        pluginId: string;
        /**
         * Management Agent Plugin Name
         */
        pluginName: string;
        /**
         * Plugin Status
         */
        pluginStatus: string;
        /**
         * Status message of the Plugin
         */
        pluginStatusMessage: string;
        /**
         * Plugin Version
         */
        pluginVersion: string;
    }
}

export namespace Marketplace {
    export interface GetAcceptedAgreementsAcceptedAgreement {
        /**
         * The unique identifier for the terms of use agreement itself.
         */
        agreementId: string;
        /**
         * The unique identifier for the compartment.
         */
        compartmentId: string;
        /**
         * The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The display name of the resource.
         */
        displayName: string;
        /**
         * The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The unique identifier for the acceptance of the agreement within a specific compartment.
         */
        id: string;
        /**
         * The unique identifier for the listing.
         */
        listingId: string;
        /**
         * The version of the package. Package versions are unique within a listing.
         */
        packageVersion: string;
        signature: string;
        /**
         * The time the agreement was accepted.
         */
        timeAccepted: string;
    }

    export interface GetAcceptedAgreementsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCategoriesCategory {
        /**
         * Name of the product category.
         */
        name: string;
    }

    export interface GetCategoriesFilter {
        /**
         * Name of the product category.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetListingBanner {
        /**
         * The content URL of the screenshot.
         */
        contentUrl: string;
        /**
         * The file extension of the screenshot.
         */
        fileExtension: string;
        /**
         * The MIME type of the screenshot.
         */
        mimeType: string;
        /**
         * Text that describes the resource.
         */
        name: string;
    }

    export interface GetListingDocumentationLink {
        /**
         * The category that the document belongs to.
         */
        documentCategory: string;
        /**
         * Text that describes the resource.
         */
        name: string;
        /**
         * The URL of the resource.
         */
        url: string;
    }

    export interface GetListingIcon {
        /**
         * The content URL of the screenshot.
         */
        contentUrl: string;
        /**
         * The file extension of the screenshot.
         */
        fileExtension: string;
        /**
         * The MIME type of the screenshot.
         */
        mimeType: string;
        /**
         * Text that describes the resource.
         */
        name: string;
    }

    export interface GetListingLanguage {
        /**
         * A code assigned to the item.
         */
        code: string;
        /**
         * Text that describes the resource.
         */
        name: string;
    }

    export interface GetListingLink {
        /**
         * The anchor tag.
         */
        href: string;
        /**
         * Reference links to the previous page, next page, and other pages.
         */
        rel: string;
    }

    export interface GetListingPackageAgreementsAgreement {
        /**
         * Who authored the agreement.
         */
        author: string;
        /**
         * The content URL of the agreement.
         */
        contentUrl: string;
        /**
         * The unique identifier for the agreement.
         */
        id: string;
        /**
         * Textual prompt to read and accept the agreement.
         */
        prompt: string;
    }

    export interface GetListingPackageAgreementsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetListingPackageOperatingSystem {
        /**
         * The name of the variable.
         */
        name: string;
    }

    export interface GetListingPackagePricing {
        /**
         * The currency of the pricing model.
         */
        currency: string;
        /**
         * The model for international market pricing.
         */
        internationalMarketPrices: outputs.Marketplace.GetListingPackagePricingInternationalMarketPrice[];
        /**
         * The type of pricing for a PAYGO model, eg PER_OCPU_LINEAR, PER_OCPU_MIN_BILLING, PER_INSTANCE.  Null if type is not PAYGO.
         */
        payGoStrategy: string;
        /**
         * The pricing rate.
         */
        rate: number;
        /**
         * The type of the pricing model.
         */
        type: string;
    }

    export interface GetListingPackagePricingInternationalMarketPrice {
        /**
         * The currency of the pricing model.
         */
        currencyCode: string;
        /**
         * The symbol of the currency
         */
        currencySymbol: string;
        /**
         * The pricing rate.
         */
        rate: number;
    }

    export interface GetListingPackageRegion {
        /**
         * A code assigned to the item.
         */
        code: string;
        /**
         * Countries in the region.
         */
        countries: outputs.Marketplace.GetListingPackageRegionCountry[];
        /**
         * The name of the variable.
         */
        name: string;
    }

    export interface GetListingPackageRegionCountry {
        /**
         * A code assigned to the item.
         */
        code: string;
        /**
         * The name of the variable.
         */
        name: string;
    }

    export interface GetListingPackageVariable {
        /**
         * The data type of the variable.
         */
        dataType: string;
        /**
         * The variable's default value.
         */
        defaultValue: string;
        /**
         * A description of the variable.
         */
        description: string;
        /**
         * A brief textual description that helps to explain the variable.
         */
        hintMessage: string;
        /**
         * Whether the variable is mandatory.
         */
        isMandatory: boolean;
        /**
         * The name of the variable.
         */
        name: string;
    }

    export interface GetListingPackagesFilter {
        /**
         * The name of the variable.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetListingPackagesListingPackage {
        /**
         * The unique identifier for the listing.
         */
        listingId: string;
        /**
         * The operating system used by the listing.
         */
        operatingSystems: outputs.Marketplace.GetListingPackagesListingPackageOperatingSystem[];
        /**
         * A filter to return only packages that match the given package type exactly.
         */
        packageType: string;
        /**
         * The version of the package. Package versions are unique within a listing.
         */
        packageVersion: string;
        /**
         * The model for pricing.
         */
        pricings: outputs.Marketplace.GetListingPackagesListingPackagePricing[];
        /**
         * The regions where the listing is available.
         */
        regions: outputs.Marketplace.GetListingPackagesListingPackageRegion[];
        /**
         * The unique identifier for the package resource.
         */
        resourceId: string;
        /**
         * The date and time this listing package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetListingPackagesListingPackageOperatingSystem {
        /**
         * The name of the variable.
         */
        name: string;
    }

    export interface GetListingPackagesListingPackagePricing {
        /**
         * The currency of the pricing model.
         */
        currency: string;
        /**
         * The model for international market pricing.
         */
        internationalMarketPrices: outputs.Marketplace.GetListingPackagesListingPackagePricingInternationalMarketPrice[];
        /**
         * The type of pricing for a PAYGO model, eg PER_OCPU_LINEAR, PER_OCPU_MIN_BILLING, PER_INSTANCE.  Null if type is not PAYGO.
         */
        payGoStrategy: string;
        /**
         * The pricing rate.
         */
        rate: number;
        /**
         * The type of the pricing model.
         */
        type: string;
    }

    export interface GetListingPackagesListingPackagePricingInternationalMarketPrice {
        /**
         * The currency of the pricing model.
         */
        currencyCode: string;
        /**
         * The symbol of the currency
         */
        currencySymbol: string;
        /**
         * The pricing rate.
         */
        rate: number;
    }

    export interface GetListingPackagesListingPackageRegion {
        /**
         * A code assigned to the item.
         */
        code: string;
        /**
         * Countries in the region.
         */
        countries: outputs.Marketplace.GetListingPackagesListingPackageRegionCountry[];
        /**
         * The name of the variable.
         */
        name: string;
    }

    export interface GetListingPackagesListingPackageRegionCountry {
        /**
         * A code assigned to the item.
         */
        code: string;
        /**
         * The name of the variable.
         */
        name: string;
    }

    export interface GetListingPublisher {
        /**
         * The email address of the publisher.
         */
        contactEmail: string;
        /**
         * The phone number of the publisher.
         */
        contactPhone: string;
        /**
         * A description of the screenshot.
         */
        description: string;
        /**
         * The address of the publisher's headquarters.
         */
        hqAddress: string;
        /**
         * The unique identifier for the publisher.
         */
        id: string;
        /**
         * Reference links.
         */
        links: outputs.Marketplace.GetListingPublisherLink[];
        /**
         * The model for upload data for images and icons.
         */
        logos: outputs.Marketplace.GetListingPublisherLogo[];
        /**
         * Text that describes the resource.
         */
        name: string;
        /**
         * The publisher's website.
         */
        websiteUrl: string;
        /**
         * The year the publisher's company or organization was founded.
         */
        yearFounded: string;
    }

    export interface GetListingPublisherLink {
        /**
         * The anchor tag.
         */
        href: string;
        /**
         * Reference links to the previous page, next page, and other pages.
         */
        rel: string;
    }

    export interface GetListingPublisherLogo {
        /**
         * The content URL of the screenshot.
         */
        contentUrl: string;
        /**
         * The file extension of the screenshot.
         */
        fileExtension: string;
        /**
         * The MIME type of the screenshot.
         */
        mimeType: string;
        /**
         * Text that describes the resource.
         */
        name: string;
    }

    export interface GetListingRegion {
        /**
         * A code assigned to the item.
         */
        code: string;
        /**
         * Countries in the region.
         */
        countries: outputs.Marketplace.GetListingRegionCountry[];
        /**
         * Text that describes the resource.
         */
        name: string;
    }

    export interface GetListingRegionCountry {
        /**
         * A code assigned to the item.
         */
        code: string;
        /**
         * Text that describes the resource.
         */
        name: string;
    }

    export interface GetListingScreenshot {
        /**
         * The content URL of the screenshot.
         */
        contentUrl: string;
        /**
         * A description of the screenshot.
         */
        description: string;
        /**
         * The file extension of the screenshot.
         */
        fileExtension: string;
        /**
         * The MIME type of the screenshot.
         */
        mimeType: string;
        /**
         * Text that describes the resource.
         */
        name: string;
    }

    export interface GetListingSupportContact {
        /**
         * The email of the contact.
         */
        email: string;
        /**
         * Text that describes the resource.
         */
        name: string;
        /**
         * The phone number of the contact.
         */
        phone: string;
        /**
         * The email subject line to use when contacting support.
         */
        subject: string;
    }

    export interface GetListingSupportLink {
        /**
         * Text that describes the resource.
         */
        name: string;
        /**
         * The URL of the resource.
         */
        url: string;
    }

    export interface GetListingSupportedOperatingSystem {
        /**
         * Text that describes the resource.
         */
        name: string;
    }

    export interface GetListingTaxesFilter {
        /**
         * Name of the tax code.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetListingTaxesTax {
        /**
         * Unique code for the tax.
         */
        code: string;
        /**
         * Country, which imposes the tax.
         */
        country: string;
        /**
         * Name of the tax code.
         */
        name: string;
        /**
         * The URL with more details about this tax.
         */
        url: string;
    }

    export interface GetListingVideo {
        /**
         * Text that describes the resource.
         */
        name: string;
        /**
         * The URL of the resource.
         */
        url: string;
    }

    export interface GetListingsFilter {
        /**
         * The name of the listing.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetListingsListing {
        /**
         * The model for upload data for images and icons.
         */
        banners: outputs.Marketplace.GetListingsListingBanner[];
        /**
         * Product categories that the listing belongs to.
         */
        categories: string[];
        /**
         * The list of compatible architectures supported by the listing
         */
        compatibleArchitectures: string[];
        /**
         * The default package version.
         */
        defaultPackageVersion: string;
        /**
         * Links to additional documentation provided by the publisher specifically for the listing.
         */
        documentationLinks: outputs.Marketplace.GetListingsListingDocumentationLink[];
        /**
         * The model for upload data for images and icons.
         */
        icons: outputs.Marketplace.GetListingsListingIcon[];
        /**
         * The unique identifier for the publisher.
         */
        id: string;
        /**
         * Indicates whether to show only featured listings. If this is set to `false` or is omitted, then all listings will be returned.
         */
        isFeatured: boolean;
        /**
         * The publisher category to which the listing belongs. The publisher category informs where the listing appears for use.
         */
        listingType: string;
        /**
         * The name of the listing.
         */
        name: string;
        /**
         * A filter to return only packages that match the given package type exactly.
         */
        packageType: string;
        pricingTypes: string[];
        /**
         * Summary details about the publisher of the listing.
         */
        publishers: outputs.Marketplace.GetListingsListingPublisher[];
        /**
         * The regions where the listing is eligible to be deployed.
         */
        regions: outputs.Marketplace.GetListingsListingRegion[];
        /**
         * A short description of the listing.
         */
        shortDescription: string;
        /**
         * The list of operating systems supported by the listing.
         */
        supportedOperatingSystems: outputs.Marketplace.GetListingsListingSupportedOperatingSystem[];
    }

    export interface GetListingsListingBanner {
        /**
         * The content URL of the screenshot.
         */
        contentUrl: string;
        /**
         * The file extension of the screenshot.
         */
        fileExtension: string;
        /**
         * The MIME type of the screenshot.
         */
        mimeType: string;
        /**
         * The name of the listing.
         */
        name: string;
    }

    export interface GetListingsListingDocumentationLink {
        /**
         * The category that the document belongs to.
         */
        documentCategory: string;
        /**
         * The name of the listing.
         */
        name: string;
        /**
         * The URL of the resource.
         */
        url: string;
    }

    export interface GetListingsListingIcon {
        /**
         * The content URL of the screenshot.
         */
        contentUrl: string;
        /**
         * The file extension of the screenshot.
         */
        fileExtension: string;
        /**
         * The MIME type of the screenshot.
         */
        mimeType: string;
        /**
         * The name of the listing.
         */
        name: string;
    }

    export interface GetListingsListingPublisher {
        /**
         * A description of the screenshot.
         */
        description: string;
        /**
         * The unique identifier for the publisher.
         */
        id: string;
        /**
         * The name of the listing.
         */
        name: string;
    }

    export interface GetListingsListingRegion {
        /**
         * A code assigned to the item.
         */
        code: string;
        /**
         * Countries in the region.
         */
        countries: outputs.Marketplace.GetListingsListingRegionCountry[];
        /**
         * The name of the listing.
         */
        name: string;
    }

    export interface GetListingsListingRegionCountry {
        /**
         * A code assigned to the item.
         */
        code: string;
        /**
         * The name of the listing.
         */
        name: string;
    }

    export interface GetListingsListingSupportedOperatingSystem {
        /**
         * The name of the listing.
         */
        name: string;
    }

    export interface GetPublicationIcon {
        /**
         * The content URL of the upload data.
         */
        contentUrl: string;
        /**
         * The file extension of the upload data.
         */
        fileExtension: string;
        /**
         * The MIME type of the upload data.
         */
        mimeType: string;
        /**
         * The name of the operating system.
         */
        name: string;
    }

    export interface GetPublicationPackageDetail {
        eulas: outputs.Marketplace.GetPublicationPackageDetailEula[];
        imageId: string;
        operatingSystems: outputs.Marketplace.GetPublicationPackageDetailOperatingSystem[];
        /**
         * The listing's package type.
         */
        packageType: string;
        packageVersion: string;
    }

    export interface GetPublicationPackageDetailEula {
        eulaType: string;
        licenseText: string;
    }

    export interface GetPublicationPackageDetailOperatingSystem {
        /**
         * The name of the operating system.
         */
        name: string;
    }

    export interface GetPublicationPackageOperatingSystem {
        /**
         * The name of the variable.
         */
        name: string;
    }

    export interface GetPublicationPackageVariable {
        /**
         * The data type of the variable.
         */
        dataType: string;
        /**
         * The variable's default value.
         */
        defaultValue: string;
        /**
         * A description of the variable.
         */
        description: string;
        /**
         * A brief textual description that helps to explain the variable.
         */
        hintMessage: string;
        /**
         * Whether the variable is mandatory.
         */
        isMandatory: boolean;
        /**
         * The name of the variable.
         */
        name: string;
    }

    export interface GetPublicationPackagesFilter {
        /**
         * The name of the variable.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPublicationPackagesPublicationPackage {
        /**
         * The ID of the listing that the specified package belongs to.
         */
        listingId: string;
        /**
         * A filter to return only packages that match the given package type exactly.
         */
        packageType: string;
        /**
         * The version of the package. Package versions are unique within a listing.
         */
        packageVersion: string;
        /**
         * The unique identifier for the package resource.
         */
        resourceId: string;
        /**
         * The date and time the publication package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetPublicationSupportContact {
        /**
         * The email of the contact.
         */
        email: string;
        /**
         * The name of the operating system.
         */
        name: string;
        /**
         * The phone number of the contact.
         */
        phone: string;
        /**
         * The email subject line to use when contacting support.
         */
        subject: string;
    }

    export interface GetPublicationSupportedOperatingSystem {
        /**
         * The name of the operating system.
         */
        name: string;
    }

    export interface GetPublicationsFilter {
        /**
         * The name of the publication.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPublicationsPublication {
        /**
         * The unique identifier for the compartment.
         */
        compartmentId: string;
        /**
         * The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The model for upload data for images and icons.
         */
        icons: outputs.Marketplace.GetPublicationsPublicationIcon[];
        /**
         * The unique identifier for the publication in Marketplace.
         */
        id: string;
        isAgreementAcknowledged: boolean;
        /**
         * The type of the listing.
         */
        listingType: string;
        /**
         * A long description of the publication to use in the listing.
         */
        longDescription: string;
        /**
         * The name of the publication.
         */
        name: string;
        packageDetails: outputs.Marketplace.GetPublicationsPublicationPackageDetail[];
        /**
         * The listing's package type.
         */
        packageType: string;
        /**
         * A short description of the publication to use in the listing.
         */
        shortDescription: string;
        /**
         * The lifecycle state of the publication.
         */
        state: string;
        /**
         * Contact information for getting support from the publisher for the listing.
         */
        supportContacts: outputs.Marketplace.GetPublicationsPublicationSupportContact[];
        /**
         * The list of operating systems supported by the listing.
         */
        supportedOperatingSystems: outputs.Marketplace.GetPublicationsPublicationSupportedOperatingSystem[];
        /**
         * The date and time the publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
    }

    export interface GetPublicationsPublicationIcon {
        /**
         * The content URL of the upload data.
         */
        contentUrl: string;
        /**
         * The file extension of the upload data.
         */
        fileExtension: string;
        /**
         * The MIME type of the upload data.
         */
        mimeType: string;
        /**
         * The name of the publication.
         */
        name: string;
    }

    export interface GetPublicationsPublicationPackageDetail {
        eulas: outputs.Marketplace.GetPublicationsPublicationPackageDetailEula[];
        imageId: string;
        operatingSystems: outputs.Marketplace.GetPublicationsPublicationPackageDetailOperatingSystem[];
        /**
         * The listing's package type.
         */
        packageType: string;
        packageVersion: string;
    }

    export interface GetPublicationsPublicationPackageDetailEula {
        eulaType: string;
        licenseText: string;
    }

    export interface GetPublicationsPublicationPackageDetailOperatingSystem {
        /**
         * The name of the publication.
         */
        name: string;
    }

    export interface GetPublicationsPublicationSupportContact {
        /**
         * The email of the contact.
         */
        email: string;
        /**
         * The name of the publication.
         */
        name: string;
        /**
         * The phone number of the contact.
         */
        phone: string;
        /**
         * The email subject line to use when contacting support.
         */
        subject: string;
    }

    export interface GetPublicationsPublicationSupportedOperatingSystem {
        /**
         * The name of the publication.
         */
        name: string;
    }

    export interface GetPublishersFilter {
        /**
         * The name of the publisher.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPublishersPublisher {
        /**
         * A description of the publisher.
         */
        description: string;
        /**
         * The unique identifier for the publisher.
         */
        id: string;
        /**
         * The name of the publisher.
         */
        name: string;
    }

    export interface PublicationIcon {
        /**
         * The content URL of the upload data.
         */
        contentUrl: string;
        /**
         * The file extension of the upload data.
         */
        fileExtension: string;
        /**
         * The MIME type of the upload data.
         */
        mimeType: string;
        /**
         * (Updatable) The name of the contact.
         */
        name: string;
    }

    export interface PublicationPackageDetails {
        /**
         * The end user license agreeement (EULA) that consumers of this listing must accept.
         */
        eulas: outputs.Marketplace.PublicationPackageDetailsEula[];
        /**
         * The unique identifier for the base image of the publication.
         */
        imageId: string;
        /**
         * The operating system used by the listing.
         */
        operatingSystem: outputs.Marketplace.PublicationPackageDetailsOperatingSystem;
        /**
         * The package's type.
         */
        packageType: string;
        /**
         * The package version.
         */
        packageVersion: string;
    }

    export interface PublicationPackageDetailsEula {
        /**
         * The end user license agreement's type.
         */
        eulaType: string;
        /**
         * The text of the end user license agreement.
         */
        licenseText: string;
    }

    export interface PublicationPackageDetailsOperatingSystem {
        /**
         * (Updatable) The name of the contact.
         */
        name: string;
    }

    export interface PublicationSupportContact {
        /**
         * (Updatable) The email of the contact.
         */
        email: string;
        /**
         * (Updatable) The name of the contact.
         */
        name: string;
        /**
         * (Updatable) The phone number of the contact.
         */
        phone: string;
        /**
         * (Updatable) The email subject line to use when contacting support.
         */
        subject: string;
    }

    export interface PublicationSupportedOperatingSystem {
        /**
         * (Updatable) The name of the contact.
         */
        name: string;
    }

}

export namespace MeteringComputation {
    export interface CustomTableSavedCustomTable {
        /**
         * (Updatable) The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
         */
        columnGroupBies: string[];
        /**
         * (Updatable) The compartment depth level.
         */
        compartmentDepth: number;
        /**
         * (Updatable) The name of the custom table.
         */
        displayName: string;
        /**
         * (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
         */
        groupByTags: outputs.MeteringComputation.CustomTableSavedCustomTableGroupByTag[];
        /**
         * (Updatable) The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
         */
        rowGroupBies: string[];
        /**
         * (Updatable) The version of the custom table.
         */
        version: number;
    }

    export interface CustomTableSavedCustomTableGroupByTag {
        /**
         * (Updatable) The tag key.
         */
        key: string;
        /**
         * (Updatable) The tag namespace.
         */
        namespace: string;
        /**
         * (Updatable) The tag value.
         */
        value: string;
    }

    export interface GetConfigurationItem {
        /**
         * The configuration key.
         */
        key: string;
        /**
         * The configuration value.
         */
        values: string[];
    }

    export interface GetCustomTableSavedCustomTable {
        /**
         * The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
         */
        columnGroupBies: string[];
        /**
         * The compartment depth level.
         */
        compartmentDepth: number;
        /**
         * The name of the custom table.
         */
        displayName: string;
        /**
         * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
         */
        groupByTags: outputs.MeteringComputation.GetCustomTableSavedCustomTableGroupByTag[];
        /**
         * The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
         */
        rowGroupBies: string[];
        /**
         * The version of the custom table.
         */
        version: number;
    }

    export interface GetCustomTableSavedCustomTableGroupByTag {
        /**
         * The tag key.
         */
        key: string;
        /**
         * The tag namespace.
         */
        namespace: string;
        /**
         * The tag value.
         */
        value: string;
    }

    export interface GetCustomTablesCustomTableCollection {
        items: outputs.MeteringComputation.GetCustomTablesCustomTableCollectionItem[];
    }

    export interface GetCustomTablesCustomTableCollectionItem {
        /**
         * The compartment ID in which to list resources.
         */
        compartmentId: string;
        /**
         * The custom table OCID.
         */
        id: string;
        /**
         * The custom table for Cost Analysis UI rendering.
         */
        savedCustomTables: outputs.MeteringComputation.GetCustomTablesCustomTableCollectionItemSavedCustomTable[];
        /**
         * The saved report ID in which to list resources.
         */
        savedReportId: string;
    }

    export interface GetCustomTablesCustomTableCollectionItemSavedCustomTable {
        /**
         * The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
         */
        columnGroupBies: string[];
        /**
         * The compartment depth level.
         */
        compartmentDepth: number;
        /**
         * The name of the custom table.
         */
        displayName: string;
        /**
         * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
         */
        groupByTags: outputs.MeteringComputation.GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag[];
        /**
         * The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
         */
        rowGroupBies: string[];
        /**
         * The version of the custom table.
         */
        version: number;
    }

    export interface GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag {
        /**
         * The tag key.
         */
        key: string;
        /**
         * The tag namespace.
         */
        namespace: string;
        /**
         * The tag value.
         */
        value: string;
    }

    export interface GetCustomTablesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetQueriesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetQueriesQueryCollection {
        items: outputs.MeteringComputation.GetQueriesQueryCollectionItem[];
    }

    export interface GetQueriesQueryCollectionItem {
        /**
         * The compartment ID in which to list resources.
         */
        compartmentId: string;
        /**
         * The query OCID.
         */
        id: string;
        /**
         * The common fields for queries.
         */
        queryDefinitions: outputs.MeteringComputation.GetQueriesQueryCollectionItemQueryDefinition[];
    }

    export interface GetQueriesQueryCollectionItemQueryDefinition {
        /**
         * The common fields for Cost Analysis UI rendering.
         */
        costAnalysisUis: outputs.MeteringComputation.GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi[];
        /**
         * The query display name. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The request of the generated Cost Analysis report.
         */
        reportQueries: outputs.MeteringComputation.GetQueriesQueryCollectionItemQueryDefinitionReportQuery[];
        /**
         * The saved query version.
         */
        version: number;
    }

    export interface GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi {
        /**
         * The graph type.
         */
        graph: string;
        /**
         * A cumulative graph.
         */
        isCumulativeGraph: boolean;
    }

    export interface GetQueriesQueryCollectionItemQueryDefinitionReportQuery {
        /**
         * The compartment depth level.
         */
        compartmentDepth: number;
        /**
         * The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
         */
        dateRangeName: string;
        /**
         * The filter object for query usage.
         */
        filter: string;
        /**
         * Forecast configuration of usage/cost.
         */
        forecasts: outputs.MeteringComputation.GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast[];
        /**
         * The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
         */
        granularity: string;
        /**
         * Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
         */
        groupBies: string[];
        /**
         * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
         */
        groupByTags: outputs.MeteringComputation.GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag[];
        /**
         * Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
         */
        isAggregateByTime: boolean;
        /**
         * The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
         */
        queryType: string;
        /**
         * Tenant ID.
         */
        tenantId: string;
        /**
         * The usage end time.
         */
        timeUsageEnded: string;
        /**
         * The usage start time.
         */
        timeUsageStarted: string;
    }

    export interface GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast {
        /**
         * BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
         */
        forecastType: string;
        /**
         * The forecast end time.
         */
        timeForecastEnded: string;
        /**
         * The forecast start time. Defaults to UTC-1 if not specified.
         */
        timeForecastStarted: string;
    }

    export interface GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag {
        /**
         * The tag key.
         */
        key: string;
        /**
         * The tag namespace.
         */
        namespace: string;
        /**
         * The tag value.
         */
        value: string;
    }

    export interface GetQueryQueryDefinition {
        /**
         * The common fields for Cost Analysis UI rendering.
         */
        costAnalysisUis: outputs.MeteringComputation.GetQueryQueryDefinitionCostAnalysisUi[];
        /**
         * The query display name. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * The request of the generated Cost Analysis report.
         */
        reportQueries: outputs.MeteringComputation.GetQueryQueryDefinitionReportQuery[];
        /**
         * The saved query version.
         */
        version: number;
    }

    export interface GetQueryQueryDefinitionCostAnalysisUi {
        /**
         * The graph type.
         */
        graph: string;
        /**
         * A cumulative graph.
         */
        isCumulativeGraph: boolean;
    }

    export interface GetQueryQueryDefinitionReportQuery {
        /**
         * The compartment depth level.
         */
        compartmentDepth: number;
        /**
         * The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
         */
        dateRangeName: string;
        /**
         * The filter object for query usage.
         */
        filter: string;
        /**
         * Forecast configuration of usage/cost.
         */
        forecasts: outputs.MeteringComputation.GetQueryQueryDefinitionReportQueryForecast[];
        /**
         * The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
         */
        granularity: string;
        /**
         * Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
         */
        groupBies: string[];
        /**
         * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
         */
        groupByTags: outputs.MeteringComputation.GetQueryQueryDefinitionReportQueryGroupByTag[];
        /**
         * Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
         */
        isAggregateByTime: boolean;
        /**
         * The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
         */
        queryType: string;
        /**
         * Tenant ID.
         */
        tenantId: string;
        /**
         * The usage end time.
         */
        timeUsageEnded: string;
        /**
         * The usage start time.
         */
        timeUsageStarted: string;
    }

    export interface GetQueryQueryDefinitionReportQueryForecast {
        /**
         * BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
         */
        forecastType: string;
        /**
         * The forecast end time.
         */
        timeForecastEnded: string;
        /**
         * The forecast start time. Defaults to UTC-1 if not specified.
         */
        timeForecastStarted: string;
    }

    export interface GetQueryQueryDefinitionReportQueryGroupByTag {
        /**
         * The tag key.
         */
        key: string;
        /**
         * The tag namespace.
         */
        namespace: string;
        /**
         * The tag value.
         */
        value: string;
    }

    export interface GetScheduleQueryProperty {
        /**
         * The depth level of the compartment.
         */
        compartmentDepth: number;
        /**
         * Static or dynamic date range `dateRangeType`, which corresponds with type-specific characteristics.
         */
        dateRanges: outputs.MeteringComputation.GetScheduleQueryPropertyDateRange[];
        /**
         * The filter object for query usage.
         */
        filter: string;
        /**
         * The usage granularity. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation.   Allowed values are: DAILY MONTHLY
         */
        granularity: string;
        /**
         * Aggregate the result by. For example: [ "tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName" ]
         */
        groupBies: string[];
        /**
         * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: [ { "namespace": "oracle", "key": "createdBy" ]
         */
        groupByTags: outputs.MeteringComputation.GetScheduleQueryPropertyGroupByTag[];
        /**
         * Specifies whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
         */
        isAggregateByTime: boolean;
        /**
         * The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data.  Allowed values are: USAGE COST USAGE_AND_COST
         */
        queryType: string;
    }

    export interface GetScheduleQueryPropertyDateRange {
        /**
         * Defines whether the schedule date range is STATIC or DYNAMIC
         */
        dateRangeType: string;
        dynamicDateRangeType: string;
        /**
         * The usage end time.
         */
        timeUsageEnded: string;
        /**
         * The usage start time.
         */
        timeUsageStarted: string;
    }

    export interface GetScheduleQueryPropertyGroupByTag {
        /**
         * The tag key.
         */
        key: string;
        /**
         * The namespace needed to determine object storage bucket.
         */
        namespace: string;
        /**
         * The tag value.
         */
        value: string;
    }

    export interface GetScheduleResultLocation {
        /**
         * The bucket name where usage/cost CSVs will be uploaded
         */
        bucket: string;
        /**
         * Defines the type of location where the usage/cost CSVs will be stored
         */
        locationType: string;
        /**
         * The namespace needed to determine object storage bucket.
         */
        namespace: string;
        /**
         * The destination Object Store Region specified by customer
         */
        region: string;
    }

    export interface GetScheduledRunsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetScheduledRunsScheduledRunCollection {
        items: outputs.MeteringComputation.GetScheduledRunsScheduledRunCollectionItem[];
    }

    export interface GetScheduledRunsScheduledRunCollectionItem {
        /**
         * The ocid representing unique shedule run
         */
        id: string;
        /**
         * Additional details about scheduled run failure
         */
        lifecycleDetails: string;
        /**
         * The unique ID of a schedule.
         */
        scheduleId: string;
        /**
         * Specifies if the schedule job was run successfully or not.
         */
        state: string;
        /**
         * The time when schedule started executing
         */
        timeCreated: string;
        /**
         * The time when schedule finished executing
         */
        timeFinished: string;
    }

    export interface GetSchedulesFilter {
        /**
         * Query parameter for filtering by name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSchedulesScheduleCollection {
        items: outputs.MeteringComputation.GetSchedulesScheduleCollectionItem[];
    }

    export interface GetSchedulesScheduleCollectionItem {
        /**
         * The compartment ID in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID representing unique shedule
         */
        id: string;
        /**
         * Query parameter for filtering by name
         */
        name: string;
        /**
         * The query properties.
         */
        queryProperties: outputs.MeteringComputation.GetSchedulesScheduleCollectionItemQueryProperty[];
        /**
         * The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
         */
        resultLocations: outputs.MeteringComputation.GetSchedulesScheduleCollectionItemResultLocation[];
        /**
         * In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
         */
        scheduleRecurrences: string;
        /**
         * The lifecycle state of the schedule
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time of when the schedule was created
         */
        timeCreated: string;
        /**
         * The date and time of the first time job execution
         */
        timeScheduled: string;
    }

    export interface GetSchedulesScheduleCollectionItemQueryProperty {
        /**
         * The depth level of the compartment.
         */
        compartmentDepth: number;
        /**
         * Static or dynamic date range `dateRangeType`, which corresponds with type-specific characteristics.
         */
        dateRanges: outputs.MeteringComputation.GetSchedulesScheduleCollectionItemQueryPropertyDateRange[];
        /**
         * The filter object for query usage.
         */
        filter: string;
        /**
         * The usage granularity. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation.   Allowed values are: DAILY MONTHLY
         */
        granularity: string;
        /**
         * Aggregate the result by. For example: [ "tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName" ]
         */
        groupBies: string[];
        /**
         * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: [ { "namespace": "oracle", "key": "createdBy" ]
         */
        groupByTags: outputs.MeteringComputation.GetSchedulesScheduleCollectionItemQueryPropertyGroupByTag[];
        /**
         * Specifies whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
         */
        isAggregateByTime: boolean;
        /**
         * The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data.  Allowed values are: USAGE COST USAGE_AND_COST
         */
        queryType: string;
    }

    export interface GetSchedulesScheduleCollectionItemQueryPropertyDateRange {
        /**
         * Defines whether the schedule date range is STATIC or DYNAMIC
         */
        dateRangeType: string;
        dynamicDateRangeType: string;
        /**
         * The usage end time.
         */
        timeUsageEnded: string;
        /**
         * The usage start time.
         */
        timeUsageStarted: string;
    }

    export interface GetSchedulesScheduleCollectionItemQueryPropertyGroupByTag {
        /**
         * The tag key.
         */
        key: string;
        /**
         * The namespace needed to determine object storage bucket.
         */
        namespace: string;
        /**
         * The tag value.
         */
        value: string;
    }

    export interface GetSchedulesScheduleCollectionItemResultLocation {
        /**
         * The bucket name where usage/cost CSVs will be uploaded
         */
        bucket: string;
        /**
         * Defines the type of location where the usage/cost CSVs will be stored
         */
        locationType: string;
        /**
         * The namespace needed to determine object storage bucket.
         */
        namespace: string;
        /**
         * The destination Object Store Region specified by customer
         */
        region: string;
    }

    export interface QueryQueryDefinition {
        /**
         * (Updatable) The common fields for Cost Analysis UI rendering.
         */
        costAnalysisUi: outputs.MeteringComputation.QueryQueryDefinitionCostAnalysisUi;
        /**
         * (Updatable) The query display name. Avoid entering confidential information.
         */
        displayName: string;
        /**
         * (Updatable) The request of the generated Cost Analysis report.
         */
        reportQuery: outputs.MeteringComputation.QueryQueryDefinitionReportQuery;
        /**
         * (Updatable) The saved query version.
         */
        version: number;
    }

    export interface QueryQueryDefinitionCostAnalysisUi {
        /**
         * (Updatable) The graph type.
         */
        graph: string;
        /**
         * (Updatable) A cumulative graph.
         */
        isCumulativeGraph: boolean;
    }

    export interface QueryQueryDefinitionReportQuery {
        /**
         * (Updatable) The compartment depth level.
         */
        compartmentDepth: number;
        /**
         * (Updatable) The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
         */
        dateRangeName: string;
        /**
         * (Updatable) The filter object for query usage.
         */
        filter: string;
        /**
         * (Updatable) Forecast configuration of usage/cost.
         */
        forecast: outputs.MeteringComputation.QueryQueryDefinitionReportQueryForecast;
        /**
         * (Updatable) The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
         */
        granularity: string;
        /**
         * (Updatable) Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
         */
        groupBies: string[];
        /**
         * (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
         */
        groupByTags: outputs.MeteringComputation.QueryQueryDefinitionReportQueryGroupByTag[];
        /**
         * (Updatable) Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
         */
        isAggregateByTime: boolean;
        /**
         * (Updatable) The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
         */
        queryType: string;
        /**
         * (Updatable) Tenant ID.
         */
        tenantId: string;
        /**
         * (Updatable) The usage end time.
         */
        timeUsageEnded: string;
        /**
         * (Updatable) The usage start time.
         */
        timeUsageStarted: string;
    }

    export interface QueryQueryDefinitionReportQueryForecast {
        /**
         * (Updatable) BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
         */
        forecastType: string;
        /**
         * (Updatable) The forecast end time.
         */
        timeForecastEnded: string;
        /**
         * (Updatable) The forecast start time. Defaults to UTC-1 if not specified.
         */
        timeForecastStarted: string;
    }

    export interface QueryQueryDefinitionReportQueryGroupByTag {
        /**
         * (Updatable) The tag key.
         */
        key: string;
        /**
         * (Updatable) The tag namespace.
         */
        namespace: string;
        /**
         * (Updatable) The tag value.
         */
        value: string;
    }

    export interface ScheduleQueryProperties {
        /**
         * The depth level of the compartment.
         */
        compartmentDepth: number;
        /**
         * Static or dynamic date range `dateRangeType`, which corresponds with type-specific characteristics.
         */
        dateRange: outputs.MeteringComputation.ScheduleQueryPropertiesDateRange;
        /**
         * The filter object for query usage.
         */
        filter: string;
        /**
         * The usage granularity. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation.   Allowed values are: DAILY MONTHLY
         */
        granularity: string;
        /**
         * Aggregate the result by. For example: [ "tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName" ]
         */
        groupBies: string[];
        /**
         * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: [ { "namespace": "oracle", "key": "createdBy" ]
         */
        groupByTags: outputs.MeteringComputation.ScheduleQueryPropertiesGroupByTag[];
        /**
         * Specifies whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
         */
        isAggregateByTime: boolean;
        /**
         * The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data.  Allowed values are: USAGE COST USAGE_AND_COST
         */
        queryType: string;
    }

    export interface ScheduleQueryPropertiesDateRange {
        /**
         * Defines whether the schedule date range is STATIC or DYNAMIC
         */
        dateRangeType: string;
        dynamicDateRangeType: string;
        /**
         * The usage end time.
         */
        timeUsageEnded: string;
        /**
         * The usage start time.
         */
        timeUsageStarted: string;
    }

    export interface ScheduleQueryPropertiesGroupByTag {
        /**
         * The tag key.
         */
        key: string;
        /**
         * The namespace needed to determine object storage bucket.
         */
        namespace: string;
        /**
         * The tag value.
         */
        value: string;
    }

    export interface ScheduleResultLocation {
        /**
         * The bucket name where usage/cost CSVs will be uploaded
         */
        bucket: string;
        /**
         * Defines the type of location where the usage/cost CSVs will be stored
         */
        locationType: string;
        /**
         * The namespace needed to determine object storage bucket.
         */
        namespace: string;
        /**
         * The destination Object Store Region specified by customer
         */
        region: string;
    }

    export interface UsageForecast {
        /**
         * BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
         */
        forecastType: string;
        /**
         * The forecast end time.
         */
        timeForecastEnded: string;
        /**
         * The forecast start time. Defaults to UTC-1 if not specified.
         */
        timeForecastStarted: string;
    }

    export interface UsageGroupByTag {
        /**
         * The tag key.
         */
        key: string;
        /**
         * The tag namespace.
         */
        namespace: string;
        /**
         * The tag value.
         */
        value: string;
    }

    export interface UsageItem {
        /**
         * The availability domain of the usage.
         */
        ad: string;
        /**
         * The compartment OCID.
         */
        compartmentId: string;
        /**
         * The compartment name.
         */
        compartmentName: string;
        /**
         * The compartment path, starting from root.
         */
        compartmentPath: string;
        /**
         * The computed cost.
         */
        computedAmount: number;
        /**
         * The usage number.
         */
        computedQuantity: number;
        /**
         * The price currency.
         */
        currency: string;
        /**
         * The discretionary discount applied to the SKU.
         */
        discount: number;
        /**
         * The forecasted data.
         */
        isForecast: boolean;
        /**
         * The SKU list rate (not discount).
         */
        listRate: number;
        /**
         * The overage usage.
         */
        overage: string;
        /**
         * The SPM OverageFlag.
         */
        overagesFlag: string;
        /**
         * Platform for the cost.
         */
        platform: string;
        /**
         * The region of the usage.
         */
        region: string;
        /**
         * The resource OCID that is incurring the cost.
         */
        resourceId: string;
        /**
         * The resource name that is incurring the cost.
         */
        resourceName: string;
        /**
         * The service name that is incurring the cost.
         */
        service: string;
        /**
         * The resource shape.
         */
        shape: string;
        /**
         * The SKU friendly name.
         */
        skuName: string;
        /**
         * The SKU part number.
         */
        skuPartNumber: string;
        /**
         * The subscription ID.
         */
        subscriptionId: string;
        /**
         * For grouping, a tag definition. For filtering, a definition and key.
         */
        tags: outputs.MeteringComputation.UsageItemTag[];
        /**
         * Tenant ID.
         */
        tenantId: string;
        /**
         * The tenancy name.
         */
        tenantName: string;
        /**
         * The usage end time.
         */
        timeUsageEnded: string;
        /**
         * The usage start time.
         */
        timeUsageStarted: string;
        /**
         * The usage unit.
         */
        unit: string;
        /**
         * The price per unit.
         */
        unitPrice: number;
        /**
         * The resource size being metered.
         */
        weight: number;
    }

    export interface UsageItemTag {
        /**
         * The tag key.
         */
        key: string;
        /**
         * The tag namespace.
         */
        namespace: string;
        /**
         * The tag value.
         */
        value: string;
    }
}

export namespace Monitoring {
    export interface AlarmSuppression {
        /**
         * (Updatable) Human-readable reason for suppressing alarm notifications. It does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        description: string;
        /**
         * (Updatable) The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
         */
        timeSuppressFrom: string;
        /**
         * (Updatable) The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T02:02:29.600Z`
         */
        timeSuppressUntil: string;
    }

    export interface GetAlarmHistoryCollectionEntry {
        /**
         * Description for this alarm history entry.
         */
        summary: string;
        /**
         * Timestamp for this alarm history entry. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
         */
        timestamp: string;
        /**
         * Timestamp for the transition of the alarm state. For example, the time when the alarm transitioned from OK to Firing. Available for state transition entries only. Note: A three-minute lag for this value accounts for any late-arriving metrics.  Example: `2019-02-01T0:59:00.789Z`
         */
        timestampTriggered: string;
    }

    export interface GetAlarmStatusesAlarmStatus {
        /**
         * A filter to return only resources that match the given display name exactly. Use this filter to list an alarm by name. Alternatively, when you know the alarm OCID, use the GetAlarm operation.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm.
         */
        id: string;
        /**
         * The configured severity of the alarm.  Example: `CRITICAL`
         */
        severity: string;
        /**
         * The status of this alarm.  Example: `FIRING`
         */
        status: string;
        /**
         * The configuration details for suppressing an alarm.
         */
        suppressions: outputs.Monitoring.GetAlarmStatusesAlarmStatusSuppression[];
        /**
         * Timestamp for the transition of the alarm state. For example, the time when the alarm transitioned from OK to Firing. Note: A three-minute lag for this value accounts for any late-arriving metrics.  Example: `2019-02-01T01:02:29.600Z`
         */
        timestampTriggered: string;
    }

    export interface GetAlarmStatusesAlarmStatusSuppression {
        /**
         * Human-readable reason for suppressing alarm notifications. It does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        description: string;
        /**
         * The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
         */
        timeSuppressFrom: string;
        /**
         * The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T02:02:29.600Z`
         */
        timeSuppressUntil: string;
    }

    export interface GetAlarmStatusesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAlarmSuppression {
        /**
         * Human-readable reason for suppressing alarm notifications. It does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        description: string;
        /**
         * The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
         */
        timeSuppressFrom: string;
        /**
         * The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T02:02:29.600Z`
         */
        timeSuppressUntil: string;
    }

    export interface GetAlarmsAlarm {
        /**
         * The human-readable content of the notification delivered. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices.  Example: `High CPU usage alert. Follow runbook instructions for resolution.`
         */
        body: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
         */
        compartmentId: string;
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A list of destinations to which the notifications for this alarm will be delivered. Each destination is represented by an [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) related to the supported destination service. For example, a destination using the Notifications service is represented by a topic OCID. Supported destination services: Notifications Service. Limit: One destination per supported destination service.
         */
        destinations: string[];
        /**
         * A filter to return only resources that match the given display name exactly. Use this filter to list an alarm by name. Alternatively, when you know the alarm OCID, use the GetAlarm operation.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm.
         */
        id: string;
        /**
         * Whether the alarm is enabled.  Example: `true`
         */
        isEnabled: boolean;
        /**
         * The format to use for notification messages sent from this alarm. The formats are:
         */
        messageFormat: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric being evaluated by the alarm.
         */
        metricCompartmentId: string;
        /**
         * When true, the alarm evaluates metrics from all compartments and subcompartments. The parameter can only be set to true when metricCompartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, the alarm evaluates metrics from only the compartment specified in metricCompartmentId. Default is false.  Example: `true`
         */
        metricCompartmentIdInSubtree: boolean;
        /**
         * The source service or application emitting the metric that is evaluated by the alarm.  Example: `ociComputeagent`
         */
        namespace: string;
        /**
         * The period of time that the condition defined in the alarm must persist before the alarm state changes from "OK" to "FIRING". For example, a value of 5 minutes means that the alarm must persist in breaching the condition for five minutes before the alarm updates its state to "FIRING".
         */
        pendingDuration: string;
        /**
         * The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of the Monitoring service interprets results for each returned time series as Boolean values, where zero represents false and a non-zero value represents true. A true value means that the trigger rule condition has been met. The query must specify a metric, statistic, interval, and trigger rule (threshold or absence). Supported values for interval depend on the specified time range. More interval values are supported for smaller time ranges. You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`. For details about Monitoring Query Language (MQL), see [Monitoring Query Language (MQL) Reference](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Reference/mql.htm). For available dimensions, review the metric definition for the supported service. See [Supported Services](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
         */
        query: string;
        /**
         * The frequency at which notifications are re-submitted, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, `PT4H` indicates four hours. Minimum: PT1M. Maximum: P30D.
         */
        repeatNotificationDuration: string;
        /**
         * The time between calculated aggregation windows for the alarm. Supported value: `1m`
         */
        resolution: string;
        /**
         * Resource group to match for metric data retrieved by the alarm. A resource group is a custom string that you can match when retrieving custom metrics. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
         */
        resourceGroup: string;
        /**
         * The perceived type of response required when the alarm is in the "FIRING" state.  Example: `CRITICAL`
         */
        severity: string;
        /**
         * A filter to return only alarms that match the given lifecycle state exactly. When not specified, only alarms in the ACTIVE lifecycle state are listed.
         */
        state: string;
        /**
         * The configuration details for suppressing an alarm.
         */
        suppressions: outputs.Monitoring.GetAlarmsAlarmSuppression[];
        /**
         * The date and time the alarm was created. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time the alarm was last updated. Format defined by RFC3339.  Example: `2019-02-03T01:02:29.600Z`
         */
        timeUpdated: string;
    }

    export interface GetAlarmsAlarmSuppression {
        /**
         * Human-readable reason for suppressing alarm notifications. It does not have to be unique, and it's changeable. Avoid entering confidential information.
         */
        description: string;
        /**
         * The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
         */
        timeSuppressFrom: string;
        /**
         * The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T02:02:29.600Z`
         */
        timeSuppressUntil: string;
    }

    export interface GetAlarmsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMetricDataFilter {
        /**
         * The name of the metric.  Example: `CpuUtilization`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMetricDataMetricData {
        /**
         * The list of timestamp-value pairs returned for the specified request. Metric values are rolled up to the start time specified in the request. For important limits information related to data points, see MetricData Reference at the top of this page.
         */
        aggregatedDatapoints: outputs.Monitoring.GetMetricDataMetricDataAggregatedDatapoint[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
         */
        compartmentId: string;
        /**
         * When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
         */
        compartmentIdInSubtree: boolean;
        /**
         * Qualifiers provided in the definition of the returned metric. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `"resourceId": "ocid1.instance.region1.phx.exampleuniqueID"`
         */
        dimensions: {[key: string]: any};
        /**
         * The end of the time range to use when searching for metric data points. Format is defined by RFC3339. The response excludes metric data points for the endTime. Default value: the timestamp representing when the call was sent.  Example: `2019-02-01T02:02:29.600Z`
         */
        endTime: string;
        /**
         * The references provided in a metric definition to indicate extra information about the metric.  Example: `"unit": "bytes"`
         */
        metadata: {[key: string]: any};
        /**
         * The name of the metric.  Example: `CpuUtilization`
         */
        name: string;
        /**
         * The source service or application to use when searching for metric data points to aggregate.  Example: `ociComputeagent`
         */
        namespace: string;
        /**
         * The Monitoring Query Language (MQL) expression to use when searching for metric data points to aggregate. The query must specify a metric, statistic, and interval. Supported values for interval depend on the specified time range. More interval values are supported for smaller time ranges. You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`.
         */
        query: string;
        /**
         * The time between calculated aggregation windows. Use with the query interval to vary the frequency at which aggregated data points are returned. For example, use a query interval of 5 minutes with a resolution of 1 minute to retrieve five-minute aggregations at a one-minute frequency. The resolution must be equal or less than the interval in the query. The default resolution is 1m (one minute). Supported values: `1m`-`60m`, `1h`-`24h`, `1d`.  Example: `5m`
         */
        resolution: string;
        /**
         * Resource group that you want to match. A null value returns only metric data that has no resource groups. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
         */
        resourceGroup: string;
        /**
         * The beginning of the time range to use when searching for metric data points. Format is defined by RFC3339. The response includes metric data points for the startTime. Default value: the timestamp 3 hours before the call was sent.  Example: `2019-02-01T01:02:29.600Z`
         */
        startTime: string;
    }

    export interface GetMetricDataMetricDataAggregatedDatapoint {
        /**
         * The date and time associated with the value of this data point. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
         */
        timestamp: string;
        /**
         * Numeric value of the metric.  Example: `10.4`
         */
        value: number;
    }

    export interface GetMetricsFilter {
        /**
         * The metric name to use when searching for metric definitions.  Example: `CpuUtilization`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMetricsMetric {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
         */
        compartmentId: string;
        /**
         * When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
         */
        compartmentIdInSubtree: boolean;
        /**
         * Qualifiers that you want to use when searching for metric definitions. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `"resourceId": "ocid1.instance.region1.phx.exampleuniqueID"`
         */
        dimensionFilters: {[key: string]: any};
        /**
         * Qualifiers provided in a metric definition. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `"resourceId": "ocid1.instance.region1.phx.exampleuniqueID"`
         */
        dimensions: {[key: string]: any};
        /**
         * Group metrics by these fields in the response. For example, to list all metric namespaces available in a compartment, groupBy the "namespace" field. Supported fields: namespace, name, resourceGroup.
         */
        groupBies: string[];
        /**
         * The metric name to use when searching for metric definitions.  Example: `CpuUtilization`
         */
        name: string;
        /**
         * The source service or application to use when searching for metric definitions.  Example: `ociComputeagent`
         */
        namespace: string;
        /**
         * Resource group that you want to match. A null value returns only metric data that has no resource groups. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
         */
        resourceGroup: string;
    }

}

export namespace Mysql {
    export interface AnalyticsClusterClusterNode {
        /**
         * The ID of the node within MySQL Analytics Cluster.
         */
        nodeId: string;
        /**
         * (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
         */
        state: string;
        /**
         * The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeUpdated: string;
    }

    export interface ChannelSource {
        /**
         * (Updatable) The network address of the MySQL instance.
         */
        hostname: string;
        /**
         * (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
         */
        password: string;
        /**
         * (Updatable) The port the source MySQL instance listens on.
         */
        port: number;
        /**
         * (Updatable) The specific source identifier.
         */
        sourceType: string;
        /**
         * (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
         */
        sslCaCertificate: outputs.Mysql.ChannelSourceSslCaCertificate;
        /**
         * (Updatable) The SSL mode of the Channel.
         */
        sslMode: string;
        /**
         * (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
         */
        username: string;
    }

    export interface ChannelSourceSslCaCertificate {
        /**
         * (Updatable) The type of CA certificate.
         */
        certificateType: string;
        /**
         * (Updatable) The string containing the CA certificate in PEM format.
         */
        contents: string;
    }

    export interface ChannelTarget {
        /**
         * (Updatable) The username for the replication applier of the target MySQL DB System.
         */
        applierUsername: string;
        /**
         * (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
         */
        channelName: string;
        /**
         * The OCID of the target DB System.
         */
        dbSystemId: string;
        /**
         * (Updatable) The specific target identifier.
         */
        targetType: string;
    }

    export interface GetAnalyticsClusterClusterNode {
        /**
         * The ID of the node within MySQL Analytics Cluster.
         */
        nodeId: string;
        /**
         * The current state of the Analytics Cluster.
         */
        state: string;
        /**
         * The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetChannelSource {
        /**
         * The network address of the MySQL instance.
         */
        hostname: string;
        password: string;
        /**
         * The port the source MySQL instance listens on.
         */
        port: number;
        /**
         * The specific source identifier.
         */
        sourceType: string;
        /**
         * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
         */
        sslCaCertificates: outputs.Mysql.GetChannelSourceSslCaCertificate[];
        /**
         * The SSL mode of the Channel.
         */
        sslMode: string;
        /**
         * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
         */
        username: string;
    }

    export interface GetChannelSourceSslCaCertificate {
        /**
         * The type of CA certificate.
         */
        certificateType: string;
        /**
         * The string containing the CA certificate in PEM format.
         */
        contents: string;
    }

    export interface GetChannelTarget {
        /**
         * The username for the replication applier of the target MySQL DB System.
         */
        applierUsername: string;
        /**
         * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
         */
        channelName: string;
        /**
         * The OCID of the source DB System.
         */
        dbSystemId: string;
        /**
         * The specific target identifier.
         */
        targetType: string;
    }

    export interface GetChannelsChannel {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * User provided description of the Channel.
         */
        description: string;
        /**
         * A filter to return only the resource matching the given display name exactly.
         */
        displayName: string;
        /**
         * Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Channel.
         */
        id: string;
        /**
         * If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
         */
        isEnabled: boolean;
        /**
         * A message describing the state of the Channel.
         */
        lifecycleDetails: string;
        /**
         * Parameters detailing how to provision the source for the given Channel.
         */
        sources: outputs.Mysql.GetChannelsChannelSource[];
        /**
         * The LifecycleState of the Channel.
         */
        state: string;
        /**
         * Details about the Channel target.
         */
        targets: outputs.Mysql.GetChannelsChannelTarget[];
        /**
         * The date and time the Channel was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the Channel was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetChannelsChannelSource {
        /**
         * The network address of the MySQL instance.
         */
        hostname: string;
        password: string;
        /**
         * The port the source MySQL instance listens on.
         */
        port: number;
        /**
         * The specific source identifier.
         */
        sourceType: string;
        /**
         * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
         */
        sslCaCertificates: outputs.Mysql.GetChannelsChannelSourceSslCaCertificate[];
        /**
         * The SSL mode of the Channel.
         */
        sslMode: string;
        /**
         * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
         */
        username: string;
    }

    export interface GetChannelsChannelSourceSslCaCertificate {
        /**
         * The type of CA certificate.
         */
        certificateType: string;
        /**
         * The string containing the CA certificate in PEM format.
         */
        contents: string;
    }

    export interface GetChannelsChannelTarget {
        /**
         * The username for the replication applier of the target MySQL DB System.
         */
        applierUsername: string;
        /**
         * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
         */
        channelName: string;
        /**
         * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        dbSystemId: string;
        /**
         * The specific target identifier.
         */
        targetType: string;
    }

    export interface GetChannelsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHeatWaveClusterClusterNode {
        /**
         * The ID of the node within MySQL HeatWave cluster.
         */
        nodeId: string;
        /**
         * The current state of the HeatWave cluster.
         */
        state: string;
        /**
         * The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetMysqlBackupDbSystemSnapshot {
        /**
         * The username for the administrative user.
         */
        adminUsername: string;
        /**
         * The Availability Domain where the primary DB System should be located.
         */
        availabilityDomain: string;
        /**
         * The Backup policy for the DB System.
         */
        backupPolicies: outputs.Mysql.GetMysqlBackupDbSystemSnapshotBackupPolicy[];
        /**
         * The OCID of the compartment the DB System belongs in.
         */
        compartmentId: string;
        /**
         * The OCID of the Configuration to be used for Instances in this DB System.
         */
        configurationId: string;
        /**
         * Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
         */
        crashRecovery: string;
        /**
         * Initial size of the data volume in GiBs that will be created and attached.
         */
        dataStorageSizeInGb: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The Deletion policy for the DB System.
         */
        deletionPolicies: outputs.Mysql.GetMysqlBackupDbSystemSnapshotDeletionPolicy[];
        /**
         * A user-supplied description for the backup.
         */
        description: string;
        /**
         * A user-supplied display name for the backup.
         */
        displayName: string;
        /**
         * The network endpoints available for this DB System.
         */
        endpoints: outputs.Mysql.GetMysqlBackupDbSystemSnapshotEndpoint[];
        /**
         * The name of the Fault Domain the DB System is located in.
         */
        faultDomain: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
         */
        hostnameLabel: string;
        /**
         * OCID of the backup itself
         */
        id: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * Specifies if the DB System is highly available.
         */
        isHighlyAvailable: boolean;
        /**
         * The Maintenance Policy for the DB System.
         */
        maintenances: outputs.Mysql.GetMysqlBackupDbSystemSnapshotMaintenance[];
        /**
         * The MySQL server version of the DB System used for backup.
         */
        mysqlVersion: string;
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The shape of the DB System instance used for backup.
         */
        shapeName: string;
        /**
         * The OCID of the subnet the DB System is associated with.
         */
        subnetId: string;
    }

    export interface GetMysqlBackupDbSystemSnapshotBackupPolicy {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Specifies if PITR is enabled or disabled.
         */
        isEnabled: boolean;
        /**
         * The PITR policy for the DB System.
         */
        pitrPolicies: outputs.Mysql.GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy[];
        /**
         * Number of days to retain this backup.
         */
        retentionInDays: number;
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
        /**
         * Specifies if PITR is enabled or disabled.
         */
        isEnabled: boolean;
    }

    export interface GetMysqlBackupDbSystemSnapshotDeletionPolicy {
        /**
         * Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
         */
        automaticBackupRetention: string;
        /**
         * Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
         */
        finalBackup: string;
        /**
         * Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
         */
        isDeleteProtected: boolean;
    }

    export interface GetMysqlBackupDbSystemSnapshotEndpoint {
        /**
         * The network address of the DB System.
         */
        hostname: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * The access modes from the client that this endpoint supports.
         */
        modes: string[];
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
         */
        status: string;
        /**
         * Additional information about the current endpoint status.
         */
        statusDetails: string;
    }

    export interface GetMysqlBackupDbSystemSnapshotMaintenance {
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface GetMysqlBackupsBackup {
        /**
         * The size of the backup in base-2 (IEC) gibibytes. (GiB).
         */
        backupSizeInGbs: number;
        /**
         * The type of backup.
         */
        backupType: string;
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Backup creationType
         */
        creationType: string;
        /**
         * Initial size of the data volume in GiBs that will be created and attached.
         */
        dataStorageSizeInGb: number;
        /**
         * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        dbSystemId: string;
        /**
         * Snapshot of the DbSystem details at the time of the backup
         */
        dbSystemSnapshots: outputs.Mysql.GetMysqlBackupsBackupDbSystemSnapshot[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-supplied description for the backup.
         */
        description: string;
        /**
         * A filter to return only the resource matching the given display name exactly.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * OCID of the backup itself
         */
        id: string;
        /**
         * Additional information about the current lifecycleState.
         */
        lifecycleDetails: string;
        /**
         * The MySQL server version of the DB System used for backup.
         */
        mysqlVersion: string;
        /**
         * Number of days to retain this backup.
         */
        retentionInDays: number;
        /**
         * The shape of the DB System instance used for backup.
         */
        shapeName: string;
        /**
         * Backup Lifecycle State
         */
        state: string;
        /**
         * The time the backup record was created.
         */
        timeCreated: string;
        /**
         * The time at which the backup was updated.
         */
        timeUpdated: string;
    }

    export interface GetMysqlBackupsBackupDbSystemSnapshot {
        /**
         * The username for the administrative user.
         */
        adminUsername: string;
        /**
         * The Availability Domain where the primary DB System should be located.
         */
        availabilityDomain: string;
        /**
         * The Backup policy for the DB System.
         */
        backupPolicies: outputs.Mysql.GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy[];
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The OCID of the Configuration to be used for Instances in this DB System.
         */
        configurationId: string;
        /**
         * Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
         */
        crashRecovery: string;
        /**
         * Initial size of the data volume in GiBs that will be created and attached.
         */
        dataStorageSizeInGb: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The Deletion policy for the DB System.
         */
        deletionPolicies: outputs.Mysql.GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy[];
        /**
         * A user-supplied description for the backup.
         */
        description: string;
        /**
         * A filter to return only the resource matching the given display name exactly.
         */
        displayName: string;
        /**
         * The network endpoints available for this DB System.
         */
        endpoints: outputs.Mysql.GetMysqlBackupsBackupDbSystemSnapshotEndpoint[];
        /**
         * The name of the Fault Domain the DB System is located in.
         */
        faultDomain: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
         */
        hostnameLabel: string;
        /**
         * OCID of the backup itself
         */
        id: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * Specifies if the DB System is highly available.
         */
        isHighlyAvailable: boolean;
        /**
         * The Maintenance Policy for the DB System.
         */
        maintenances: outputs.Mysql.GetMysqlBackupsBackupDbSystemSnapshotMaintenance[];
        /**
         * The MySQL server version of the DB System used for backup.
         */
        mysqlVersion: string;
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The shape of the DB System instance used for backup.
         */
        shapeName: string;
        /**
         * The OCID of the subnet the DB System is associated with.
         */
        subnetId: string;
    }

    export interface GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Specifies if PITR is enabled or disabled.
         */
        isEnabled: boolean;
        /**
         * The PITR policy for the DB System.
         */
        pitrPolicies: outputs.Mysql.GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy[];
        /**
         * Number of days to retain this backup.
         */
        retentionInDays: number;
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy {
        /**
         * Specifies if PITR is enabled or disabled.
         */
        isEnabled: boolean;
    }

    export interface GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy {
        /**
         * Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
         */
        automaticBackupRetention: string;
        /**
         * Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
         */
        finalBackup: string;
        /**
         * Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
         */
        isDeleteProtected: boolean;
    }

    export interface GetMysqlBackupsBackupDbSystemSnapshotEndpoint {
        /**
         * The network address of the DB System.
         */
        hostname: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * The access modes from the client that this endpoint supports.
         */
        modes: string[];
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
         */
        status: string;
        /**
         * Additional information about the current endpoint status.
         */
        statusDetails: string;
    }

    export interface GetMysqlBackupsBackupDbSystemSnapshotMaintenance {
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface GetMysqlBackupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMysqlConfigurationVariable {
        /**
         * ("autocommit")
         */
        autocommit: boolean;
        /**
         * Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
         */
        binlogExpireLogsSeconds: number;
        /**
         * Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
         */
        binlogRowMetadata: string;
        /**
         * When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
         */
        binlogRowValueOptions: string;
        /**
         * Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
         */
        binlogTransactionCompression: boolean;
        /**
         * ("completionType")
         */
        completionType: string;
        /**
         * ("connectTimeout")
         */
        connectTimeout: number;
        /**
         * ("cteMaxRecursionDepth")
         */
        cteMaxRecursionDepth: number;
        /**
         * ("defaultAuthenticationPlugin")
         */
        defaultAuthenticationPlugin: string;
        /**
         * ("foreignKeyChecks")
         */
        foreignKeyChecks: boolean;
        /**
         * ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
         */
        generatedRandomPasswordLength: number;
        /**
         * * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
         * * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
         * * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
         * * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
         * * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
         */
        groupReplicationConsistency: string;
        /**
         * ("informationSchemaStatsExpiry")
         */
        informationSchemaStatsExpiry: number;
        /**
         * ("innodbBufferPoolInstances")
         */
        innodbBufferPoolInstances: number;
        /**
         * ("innodbBufferPoolSize")
         */
        innodbBufferPoolSize: string;
        /**
         * ("innodbFtEnableStopword")
         */
        innodbFtEnableStopword: boolean;
        /**
         * ("innodbFtMaxTokenSize")
         */
        innodbFtMaxTokenSize: number;
        /**
         * ("innodbFtMinTokenSize")
         */
        innodbFtMinTokenSize: number;
        /**
         * ("innodbFtNumWordOptimize")
         */
        innodbFtNumWordOptimize: number;
        /**
         * ("innodbFtResultCacheLimit")
         */
        innodbFtResultCacheLimit: number;
        /**
         * ("innodbFtServerStopwordTable")
         */
        innodbFtServerStopwordTable: string;
        /**
         * ("innodbLockWaitTimeout")
         */
        innodbLockWaitTimeout: number;
        /**
         * ("innodbMaxPurgeLag")
         */
        innodbMaxPurgeLag: number;
        /**
         * ("innodbMaxPurgeLagDelay")
         */
        innodbMaxPurgeLagDelay: number;
        /**
         * ("localInfile")
         */
        localInfile: boolean;
        /**
         * ("mandatoryRoles")
         */
        mandatoryRoles: string;
        /**
         * ("maxConnections")
         */
        maxConnections: number;
        /**
         * ("maxExecutionTime")
         */
        maxExecutionTime: number;
        /**
         * ("maxPreparedStmtCount")
         */
        maxPreparedStmtCount: number;
        /**
         * ("mysqlFirewallMode")
         */
        mysqlFirewallMode: boolean;
        /**
         * DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
         */
        mysqlZstdDefaultCompressionLevel: number;
        /**
         * ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxConnectTimeout: number;
        /**
         * Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
         */
        mysqlxDeflateDefaultCompressionLevel: number;
        /**
         * Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
         */
        mysqlxDeflateMaxClientCompressionLevel: number;
        /**
         * ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxDocumentIdUniquePrefix: number;
        /**
         * ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxEnableHelloNotice: boolean;
        /**
         * ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxIdleWorkerThreadTimeout: number;
        /**
         * ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxInteractiveTimeout: number;
        /**
         * Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
         */
        mysqlxLz4defaultCompressionLevel: number;
        /**
         * Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
         */
        mysqlxLz4maxClientCompressionLevel: number;
        /**
         * ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxMaxAllowedPacket: number;
        /**
         * ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxMinWorkerThreads: number;
        /**
         * ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxReadTimeout: number;
        /**
         * ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxWaitTimeout: number;
        /**
         * ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxWriteTimeout: number;
        /**
         * Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
         */
        mysqlxZstdDefaultCompressionLevel: number;
        /**
         * Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
         */
        mysqlxZstdMaxClientCompressionLevel: number;
        /**
         * ("parserMaxMemSize")
         */
        parserMaxMemSize: number;
        /**
         * ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
         */
        queryAllocBlockSize: number;
        /**
         * ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
         */
        queryPreallocSize: number;
        /**
         * ("sqlMode")
         */
        sqlMode: string;
        /**
         * ("sqlRequirePrimaryKey")
         */
        sqlRequirePrimaryKey: boolean;
        /**
         * ("sqlWarnings")
         */
        sqlWarnings: boolean;
        /**
         * ("transactionIsolation")
         */
        transactionIsolation: string;
    }

    export interface GetMysqlConfigurationsConfiguration {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * User-provided data about the Configuration.
         */
        description: string;
        /**
         * A filter to return only the resource matching the given display name exactly.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Configuration.
         */
        id: string;
        /**
         * The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
         */
        parentConfigurationId: string;
        /**
         * The requested Shape name.
         */
        shapeName: string;
        /**
         * Configuration Lifecycle State
         */
        state: string;
        /**
         * The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeUpdated: string;
        /**
         * The requested Configuration types.
         */
        type: string;
        /**
         * User controllable service variables.
         */
        variables: outputs.Mysql.GetMysqlConfigurationsConfigurationVariables;
    }

    export interface GetMysqlConfigurationsConfigurationVariables {
        /**
         * ("autocommit")
         */
        autocommit: boolean;
        /**
         * Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
         */
        binlogExpireLogsSeconds: number;
        /**
         * Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
         */
        binlogRowMetadata: string;
        /**
         * When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
         */
        binlogRowValueOptions: string;
        /**
         * Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
         */
        binlogTransactionCompression: boolean;
        /**
         * ("completionType")
         */
        completionType: string;
        /**
         * ("connectTimeout")
         */
        connectTimeout: number;
        /**
         * ("cteMaxRecursionDepth")
         */
        cteMaxRecursionDepth: number;
        /**
         * ("defaultAuthenticationPlugin")
         */
        defaultAuthenticationPlugin: string;
        /**
         * ("foreignKeyChecks")
         */
        foreignKeyChecks: boolean;
        /**
         * ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
         */
        generatedRandomPasswordLength: number;
        /**
         * * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
         * * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
         * * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
         * * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
         * * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
         */
        groupReplicationConsistency: string;
        /**
         * ("informationSchemaStatsExpiry")
         */
        informationSchemaStatsExpiry: number;
        /**
         * ("innodbBufferPoolInstances")
         */
        innodbBufferPoolInstances: number;
        /**
         * ("innodbBufferPoolSize")
         */
        innodbBufferPoolSize: string;
        /**
         * ("innodbFtEnableStopword")
         */
        innodbFtEnableStopword: boolean;
        /**
         * ("innodbFtMaxTokenSize")
         */
        innodbFtMaxTokenSize: number;
        /**
         * ("innodbFtMinTokenSize")
         */
        innodbFtMinTokenSize: number;
        /**
         * ("innodbFtNumWordOptimize")
         */
        innodbFtNumWordOptimize: number;
        /**
         * ("innodbFtResultCacheLimit")
         */
        innodbFtResultCacheLimit: number;
        /**
         * ("innodbFtServerStopwordTable")
         */
        innodbFtServerStopwordTable: string;
        /**
         * ("innodbLockWaitTimeout")
         */
        innodbLockWaitTimeout: number;
        /**
         * ("innodbMaxPurgeLag")
         */
        innodbMaxPurgeLag: number;
        /**
         * ("innodbMaxPurgeLagDelay")
         */
        innodbMaxPurgeLagDelay: number;
        /**
         * ("localInfile")
         */
        localInfile: boolean;
        /**
         * ("mandatoryRoles")
         */
        mandatoryRoles: string;
        /**
         * ("maxConnections")
         */
        maxConnections: number;
        /**
         * ("maxExecutionTime")
         */
        maxExecutionTime: number;
        /**
         * ("maxPreparedStmtCount")
         */
        maxPreparedStmtCount: number;
        /**
         * ("mysqlFirewallMode")
         */
        mysqlFirewallMode: boolean;
        /**
         * DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
         */
        mysqlZstdDefaultCompressionLevel: number;
        /**
         * ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxConnectTimeout: number;
        /**
         * Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
         */
        mysqlxDeflateDefaultCompressionLevel: number;
        /**
         * Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
         */
        mysqlxDeflateMaxClientCompressionLevel: number;
        /**
         * ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxDocumentIdUniquePrefix: number;
        /**
         * ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxEnableHelloNotice: boolean;
        /**
         * ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxIdleWorkerThreadTimeout: number;
        /**
         * ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxInteractiveTimeout: number;
        /**
         * Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
         */
        mysqlxLz4defaultCompressionLevel: number;
        /**
         * Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
         */
        mysqlxLz4maxClientCompressionLevel: number;
        /**
         * ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxMaxAllowedPacket: number;
        /**
         * ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxMinWorkerThreads: number;
        /**
         * ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxReadTimeout: number;
        /**
         * ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxWaitTimeout: number;
        /**
         * ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
         */
        mysqlxWriteTimeout: number;
        /**
         * Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
         */
        mysqlxZstdDefaultCompressionLevel: number;
        /**
         * Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
         */
        mysqlxZstdMaxClientCompressionLevel: number;
        /**
         * ("parserMaxMemSize")
         */
        parserMaxMemSize: number;
        /**
         * ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
         */
        queryAllocBlockSize: number;
        /**
         * ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
         */
        queryPreallocSize: number;
        /**
         * ("sqlMode")
         */
        sqlMode: string;
        /**
         * ("sqlRequirePrimaryKey")
         */
        sqlRequirePrimaryKey: boolean;
        /**
         * ("sqlWarnings")
         */
        sqlWarnings: boolean;
        /**
         * ("transactionIsolation")
         */
        transactionIsolation: string;
    }

    export interface GetMysqlConfigurationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMysqlDbSystemAnalyticsCluster {
        /**
         * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
         */
        clusterSize: number;
        /**
         * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
         */
        shapeName: string;
        /**
         * The current state of the DB System.
         */
        state: string;
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface GetMysqlDbSystemBackupPolicy {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Whether the Channel has been enabled by the user.
         */
        isEnabled: boolean;
        /**
         * The PITR policy for the DB System.
         */
        pitrPolicies: outputs.Mysql.GetMysqlDbSystemBackupPolicyPitrPolicy[];
        /**
         * The number of days automated backups are retained.
         */
        retentionInDays: number;
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface GetMysqlDbSystemBackupPolicyPitrPolicy {
        /**
         * Whether the Channel has been enabled by the user.
         */
        isEnabled: boolean;
    }

    export interface GetMysqlDbSystemChannel {
        /**
         * The OCID of the compartment the DB System belongs in.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The user-friendly name for the DB System. It does not have to be unique.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the DB System.
         */
        id: string;
        /**
         * Whether the Channel has been enabled by the user.
         */
        isEnabled: boolean;
        /**
         * Additional information about the current lifecycleState.
         */
        lifecycleDetails: string;
        /**
         * Parameters detailing how to provision the initial data of the DB System.
         */
        sources: outputs.Mysql.GetMysqlDbSystemChannelSource[];
        /**
         * The current state of the DB System.
         */
        state: string;
        /**
         * Details about the Channel target.
         */
        targets: outputs.Mysql.GetMysqlDbSystemChannelTarget[];
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface GetMysqlDbSystemChannelSource {
        /**
         * The network address of the DB System.
         */
        hostname: string;
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The specific source identifier.
         */
        sourceType: string;
        /**
         * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
         */
        sslCaCertificates: outputs.Mysql.GetMysqlDbSystemChannelSourceSslCaCertificate[];
        /**
         * The SSL mode of the Channel.
         */
        sslMode: string;
        /**
         * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
         */
        username: string;
    }

    export interface GetMysqlDbSystemChannelSourceSslCaCertificate {
        /**
         * The type of CA certificate.
         */
        certificateType: string;
        /**
         * The string containing the CA certificate in PEM format.
         */
        contents: string;
    }

    export interface GetMysqlDbSystemChannelTarget {
        /**
         * The username for the replication applier of the target MySQL DB System.
         */
        applierUsername: string;
        /**
         * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
         */
        channelName: string;
        /**
         * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        dbSystemId: string;
        /**
         * The specific target identifier.
         */
        targetType: string;
    }

    export interface GetMysqlDbSystemCurrentPlacement {
        /**
         * The availability domain in which the DB System is placed.
         */
        availabilityDomain: string;
        /**
         * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
         */
        faultDomain: string;
    }

    export interface GetMysqlDbSystemDeletionPolicy {
        /**
         * Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
         */
        automaticBackupRetention: string;
        /**
         * Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
         */
        finalBackup: string;
        /**
         * Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
         */
        isDeleteProtected: boolean;
    }

    export interface GetMysqlDbSystemEndpoint {
        /**
         * The network address of the DB System.
         */
        hostname: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * The access modes from the client that this endpoint supports.
         */
        modes: string[];
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
         */
        status: string;
        /**
         * Additional information about the current endpoint status.
         */
        statusDetails: string;
    }

    export interface GetMysqlDbSystemHeatWaveCluster {
        /**
         * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
         */
        clusterSize: number;
        /**
         * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
         */
        shapeName: string;
        /**
         * The current state of the DB System.
         */
        state: string;
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface GetMysqlDbSystemMaintenance {
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface GetMysqlDbSystemPointInTimeRecoveryDetail {
        /**
         * Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeEarliestRecoveryPoint: string;
        /**
         * Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeLatestRecoveryPoint: string;
    }

    export interface GetMysqlDbSystemSource {
        /**
         * The OCID of the backup to be used as the source for the new DB System.
         */
        backupId: string;
        /**
         * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        dbSystemId: string;
        /**
         * The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
         */
        recoveryPoint: string;
        /**
         * The specific source identifier.
         */
        sourceType: string;
    }

    export interface GetMysqlDbSystemsDbSystem {
        adminPassword: string;
        adminUsername: string;
        /**
         * DEPRECATED -- please use HeatWave API instead. A summary of an Analytics Cluster.
         */
        analyticsClusters: outputs.Mysql.GetMysqlDbSystemsDbSystemAnalyticsCluster[];
        /**
         * The availability domain in which the DB System is placed.
         */
        availabilityDomain: string;
        /**
         * The Backup policy for the DB System.
         */
        backupPolicies: outputs.Mysql.GetMysqlDbSystemsDbSystemBackupPolicy[];
        /**
         * A list with a summary of all the Channels attached to the DB System.
         */
        channels: outputs.Mysql.GetMysqlDbSystemsDbSystemChannel[];
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * The requested Configuration instance.
         */
        configurationId: string;
        /**
         * Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
         */
        crashRecovery: string;
        /**
         * The availability domain and fault domain a DB System is placed in.
         */
        currentPlacements: outputs.Mysql.GetMysqlDbSystemsDbSystemCurrentPlacement[];
        /**
         * Initial size of the data volume in GiBs that will be created and attached.
         */
        dataStorageSizeInGb: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The Deletion policy for the DB System.
         */
        deletionPolicies: outputs.Mysql.GetMysqlDbSystemsDbSystemDeletionPolicy[];
        /**
         * User-provided data about the DB System.
         */
        description: string;
        /**
         * A filter to return only the resource matching the given display name exactly.
         */
        displayName: string;
        /**
         * The network endpoints available for this DB System.
         */
        endpoints: outputs.Mysql.GetMysqlDbSystemsDbSystemEndpoint[];
        /**
         * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
         */
        faultDomain: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A summary of a HeatWave cluster.
         */
        heatWaveClusters: outputs.Mysql.GetMysqlDbSystemsDbSystemHeatWaveCluster[];
        /**
         * The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
         */
        hostnameLabel: string;
        /**
         * The OCID of the DB System.
         */
        id: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * DEPRECATED -- please use HeatWave API instead. If true, return only DB Systems with an Analytics Cluster attached, if false return only DB Systems with no Analytics Cluster attached. If not present, return all DB Systems.
         */
        isAnalyticsClusterAttached: boolean;
        /**
         * If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
         */
        isHeatWaveClusterAttached: boolean;
        /**
         * Specifies if the DB System is highly available.
         */
        isHighlyAvailable: boolean;
        /**
         * Additional information about the current lifecycleState.
         */
        lifecycleDetails: string;
        /**
         * The Maintenance Policy for the DB System.
         */
        maintenances: outputs.Mysql.GetMysqlDbSystemsDbSystemMaintenance[];
        /**
         * Name of the MySQL Version in use for the DB System.
         */
        mysqlVersion: string;
        /**
         * Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
         */
        pointInTimeRecoveryDetails: outputs.Mysql.GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail[];
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
         */
        shapeName: string;
        shutdownType: string;
        /**
         * Parameters detailing how to provision the initial data of the DB System.
         */
        sources: outputs.Mysql.GetMysqlDbSystemsDbSystemSource[];
        /**
         * DbSystem Lifecycle State
         */
        state: string;
        /**
         * The OCID of the subnet the DB System is associated with.
         */
        subnetId: string;
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface GetMysqlDbSystemsDbSystemAnalyticsCluster {
        /**
         * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
         */
        clusterSize: number;
        /**
         * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
         */
        shapeName: string;
        /**
         * DbSystem Lifecycle State
         */
        state: string;
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface GetMysqlDbSystemsDbSystemBackupPolicy {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Whether the Channel has been enabled by the user.
         */
        isEnabled: boolean;
        /**
         * The PITR policy for the DB System.
         */
        pitrPolicies: outputs.Mysql.GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy[];
        /**
         * The number of days automated backups are retained.
         */
        retentionInDays: number;
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy {
        /**
         * Whether the Channel has been enabled by the user.
         */
        isEnabled: boolean;
    }

    export interface GetMysqlDbSystemsDbSystemChannel {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only the resource matching the given display name exactly.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the DB System.
         */
        id: string;
        /**
         * Whether the Channel has been enabled by the user.
         */
        isEnabled: boolean;
        /**
         * Additional information about the current lifecycleState.
         */
        lifecycleDetails: string;
        /**
         * Parameters detailing how to provision the initial data of the DB System.
         */
        sources: outputs.Mysql.GetMysqlDbSystemsDbSystemChannelSource[];
        /**
         * DbSystem Lifecycle State
         */
        state: string;
        /**
         * Details about the Channel target.
         */
        targets: outputs.Mysql.GetMysqlDbSystemsDbSystemChannelTarget[];
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface GetMysqlDbSystemsDbSystemChannelSource {
        /**
         * The network address of the DB System.
         */
        hostname: string;
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The specific source identifier.
         */
        sourceType: string;
        /**
         * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
         */
        sslCaCertificates: outputs.Mysql.GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate[];
        /**
         * The SSL mode of the Channel.
         */
        sslMode: string;
        /**
         * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
         */
        username: string;
    }

    export interface GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate {
        /**
         * The type of CA certificate.
         */
        certificateType: string;
        /**
         * The string containing the CA certificate in PEM format.
         */
        contents: string;
    }

    export interface GetMysqlDbSystemsDbSystemChannelTarget {
        /**
         * The username for the replication applier of the target MySQL DB System.
         */
        applierUsername: string;
        /**
         * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
         */
        channelName: string;
        /**
         * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        dbSystemId: string;
        /**
         * The specific target identifier.
         */
        targetType: string;
    }

    export interface GetMysqlDbSystemsDbSystemCurrentPlacement {
        /**
         * The availability domain in which the DB System is placed.
         */
        availabilityDomain: string;
        /**
         * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
         */
        faultDomain: string;
    }

    export interface GetMysqlDbSystemsDbSystemDeletionPolicy {
        /**
         * Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
         */
        automaticBackupRetention: string;
        /**
         * Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
         */
        finalBackup: string;
        /**
         * Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
         */
        isDeleteProtected: boolean;
    }

    export interface GetMysqlDbSystemsDbSystemEndpoint {
        /**
         * The network address of the DB System.
         */
        hostname: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * The access modes from the client that this endpoint supports.
         */
        modes: string[];
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
         */
        status: string;
        /**
         * Additional information about the current endpoint status.
         */
        statusDetails: string;
    }

    export interface GetMysqlDbSystemsDbSystemHeatWaveCluster {
        /**
         * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
         */
        clusterSize: number;
        /**
         * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
         */
        shapeName: string;
        /**
         * DbSystem Lifecycle State
         */
        state: string;
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface GetMysqlDbSystemsDbSystemMaintenance {
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail {
        /**
         * Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeEarliestRecoveryPoint: string;
        /**
         * Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeLatestRecoveryPoint: string;
    }

    export interface GetMysqlDbSystemsDbSystemSource {
        /**
         * The OCID of the backup to be used as the source for the new DB System.
         */
        backupId: string;
        /**
         * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        dbSystemId: string;
        /**
         * The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
         */
        recoveryPoint: string;
        /**
         * The specific source identifier.
         */
        sourceType: string;
    }

    export interface GetMysqlDbSystemsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMysqlVersionFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMysqlVersionVersion {
        /**
         * A descriptive summary of a group of versions.
         */
        versionFamily: string;
        /**
         * The list of supported MySQL Versions.
         */
        versions: outputs.Mysql.GetMysqlVersionVersionVersion[];
    }

    export interface GetMysqlVersionVersionVersion {
        /**
         * A link to a page describing the version.
         */
        description: string;
        /**
         * The specific version identifier
         */
        version: string;
    }

    export interface GetShapesFilter {
        /**
         * Name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetShapesShape {
        /**
         * The number of CPU Cores the Instance provides. These are "OCPU"s.
         */
        cpuCoreCount: number;
        /**
         * Return shapes that are supported by the service feature.
         */
        isSupportedFors: string[];
        /**
         * The amount of RAM the Instance provides. This is an IEC base-2 number.
         */
        memorySizeInGbs: number;
        /**
         * Name
         */
        name: string;
    }

    export interface HeatWaveClusterClusterNode {
        /**
         * The ID of the node within MySQL HeatWave cluster.
         */
        nodeId: string;
        /**
         * (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
         */
        state: string;
        /**
         * The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeCreated: string;
        /**
         * The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeUpdated: string;
    }

    export interface MysqlBackupDbSystemSnapshot {
        /**
         * The username for the administrative user.
         */
        adminUsername: string;
        /**
         * The Availability Domain where the primary DB System should be located.
         */
        availabilityDomain: string;
        /**
         * The Backup policy for the DB System.
         */
        backupPolicies: outputs.Mysql.MysqlBackupDbSystemSnapshotBackupPolicy[];
        /**
         * (Updatable) The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * The OCID of the Configuration to be used for Instances in this DB System.
         */
        configurationId: string;
        /**
         * Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
         */
        crashRecovery: string;
        /**
         * Initial size of the data volume in GiBs that will be created and attached.
         */
        dataStorageSizeInGb: number;
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The Deletion policy for the DB System.
         */
        deletionPolicies: outputs.Mysql.MysqlBackupDbSystemSnapshotDeletionPolicy[];
        /**
         * (Updatable) A user-supplied description for the backup.
         */
        description: string;
        /**
         * (Updatable) A user-supplied display name for the backup.
         */
        displayName: string;
        /**
         * The network endpoints available for this DB System.
         */
        endpoints: outputs.Mysql.MysqlBackupDbSystemSnapshotEndpoint[];
        /**
         * The name of the Fault Domain the DB System is located in.
         */
        faultDomain: string;
        /**
         * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
         */
        hostnameLabel: string;
        /**
         * OCID of the backup itself
         */
        id: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * Specifies if the DB System is highly available.
         */
        isHighlyAvailable: boolean;
        /**
         * The Maintenance Policy for the DB System.
         */
        maintenances: outputs.Mysql.MysqlBackupDbSystemSnapshotMaintenance[];
        /**
         * The MySQL server version of the DB System used for backup.
         */
        mysqlVersion: string;
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The shape of the DB System instance used for backup.
         */
        shapeName: string;
        /**
         * The OCID of the subnet the DB System is associated with.
         */
        subnetId: string;
    }

    export interface MysqlBackupDbSystemSnapshotBackupPolicy {
        /**
         * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Specifies if PITR is enabled or disabled.
         */
        isEnabled: boolean;
        /**
         * The PITR policy for the DB System.
         */
        pitrPolicies: outputs.Mysql.MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy[];
        /**
         * (Updatable) Number of days to retain this backup.
         */
        retentionInDays: number;
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
        /**
         * Specifies if PITR is enabled or disabled.
         */
        isEnabled: boolean;
    }

    export interface MysqlBackupDbSystemSnapshotDeletionPolicy {
        /**
         * Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
         */
        automaticBackupRetention: string;
        /**
         * Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
         */
        finalBackup: string;
        /**
         * Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
         */
        isDeleteProtected: boolean;
    }

    export interface MysqlBackupDbSystemSnapshotEndpoint {
        /**
         * The network address of the DB System.
         */
        hostname: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * The access modes from the client that this endpoint supports.
         */
        modes: string[];
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
         */
        status: string;
        /**
         * Additional information about the current endpoint status.
         */
        statusDetails: string;
    }

    export interface MysqlBackupDbSystemSnapshotMaintenance {
        /**
         * The start time of the maintenance window.
         */
        windowStartTime: string;
    }

    export interface MysqlDbSystemAnalyticsCluster {
        /**
         * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
         */
        clusterSize: number;
        /**
         * The name of the shape. The shape determines the resources allocated
         * * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
         */
        shapeName: string;
        /**
         * (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
         */
        state: string;
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface MysqlDbSystemBackupPolicy {
        /**
         * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * (Updatable) Specifies if PITR is enabled or disabled.
         */
        isEnabled: boolean;
        /**
         * (Updatable) The PITR policy for the DB System.
         */
        pitrPolicy: outputs.Mysql.MysqlDbSystemBackupPolicyPitrPolicy;
        /**
         * (Updatable) Number of days to retain an automatic backup.
         */
        retentionInDays: number;
        /**
         * (Updatable) The start of the 2 hour maintenance window.
         */
        windowStartTime: string;
    }

    export interface MysqlDbSystemBackupPolicyPitrPolicy {
        /**
         * (Updatable) Specifies if PITR is enabled or disabled.
         */
        isEnabled: boolean;
    }

    export interface MysqlDbSystemChannel {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * (Updatable) The user-friendly name for the DB System. It does not have to be unique.
         */
        displayName: string;
        /**
         * (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the DB System.
         */
        id: string;
        /**
         * (Updatable) Specifies if PITR is enabled or disabled.
         */
        isEnabled: boolean;
        /**
         * Additional information about the current lifecycleState.
         */
        lifecycleDetails: string;
        /**
         * Parameters detailing how to provision the initial data of the system.
         */
        sources: outputs.Mysql.MysqlDbSystemChannelSource[];
        /**
         * (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
         */
        state: string;
        /**
         * Details about the Channel target.
         */
        targets: outputs.Mysql.MysqlDbSystemChannelTarget[];
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface MysqlDbSystemChannelSource {
        /**
         * The network address of the DB System.
         */
        hostname: string;
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
         */
        sourceType: string;
        /**
         * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
         */
        sslCaCertificates: outputs.Mysql.MysqlDbSystemChannelSourceSslCaCertificate[];
        /**
         * The SSL mode of the Channel.
         */
        sslMode: string;
        /**
         * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
         */
        username: string;
    }

    export interface MysqlDbSystemChannelSourceSslCaCertificate {
        /**
         * The type of CA certificate.
         */
        certificateType: string;
        /**
         * The string containing the CA certificate in PEM format.
         */
        contents: string;
    }

    export interface MysqlDbSystemChannelTarget {
        /**
         * The username for the replication applier of the target MySQL DB System.
         */
        applierUsername: string;
        /**
         * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
         */
        channelName: string;
        /**
         * The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
         */
        dbSystemId: string;
        /**
         * The specific target identifier.
         */
        targetType: string;
    }

    export interface MysqlDbSystemCurrentPlacement {
        /**
         * The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
         */
        availabilityDomain: string;
        /**
         * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
         */
        faultDomain: string;
    }

    export interface MysqlDbSystemDeletionPolicy {
        /**
         * (Updatable) Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
         */
        automaticBackupRetention: string;
        /**
         * (Updatable) Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
         */
        finalBackup: string;
        /**
         * (Updatable) Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
         */
        isDeleteProtected: boolean;
    }

    export interface MysqlDbSystemEndpoint {
        /**
         * The network address of the DB System.
         */
        hostname: string;
        /**
         * The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
         */
        ipAddress: string;
        /**
         * The access modes from the client that this endpoint supports.
         */
        modes: string[];
        /**
         * The port for primary endpoint of the DB System to listen on.
         */
        port: number;
        /**
         * The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
         */
        portX: number;
        /**
         * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
         */
        status: string;
        /**
         * Additional information about the current endpoint status.
         */
        statusDetails: string;
    }

    export interface MysqlDbSystemHeatWaveCluster {
        /**
         * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
         */
        clusterSize: number;
        /**
         * The name of the shape. The shape determines the resources allocated
         * * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
         */
        shapeName: string;
        /**
         * (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
         */
        state: string;
        /**
         * The date and time the DB System was created.
         */
        timeCreated: string;
        /**
         * The time the DB System was last updated.
         */
        timeUpdated: string;
    }

    export interface MysqlDbSystemMaintenance {
        /**
         * (Updatable) The start of the 2 hour maintenance window.
         */
        windowStartTime: string;
    }

    export interface MysqlDbSystemPointInTimeRecoveryDetail {
        /**
         * Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeEarliestRecoveryPoint: string;
        /**
         * Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         */
        timeLatestRecoveryPoint: string;
    }

    export interface MysqlDbSystemSource {
        /**
         * The OCID of the backup to be used as the source for the new DB System.
         */
        backupId: string;
        /**
         * The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
         */
        dbSystemId: string;
        /**
         * The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
         */
        recoveryPoint: string;
        /**
         * The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
         */
        sourceType: string;
    }

}

export namespace NetworkFirewall {
    export interface GetNetworkFirewallPoliciesFilter {
        /**
         * Name for the Security rule, must be unique within the policy.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollection {
        items: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItem[];
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItem {
        /**
         * Map defining application lists of the policy. The value of an entry is a list of "applications", each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
         */
        applicationLists: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemApplicationList[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
         */
        decryptionProfiles: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionProfile[];
        /**
         * List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
         */
        decryptionRules: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRule[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique Network Firewall Policy identifier
         */
        id: string;
        /**
         * Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
         */
        ipAddressLists: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemIpAddressList[];
        /**
         * To determine if any Network Firewall is associated with this Network Firewall Policy.
         */
        isFirewallAttached: boolean;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Map defining secrets of the policy. The value of an entry is a "mapped secret" consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
         */
        mappedSecrets: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret[];
        /**
         * List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
         */
        securityRules: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRule[];
        /**
         * A filter to return only resources with a lifecycleState matching the given value.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time instant at which the Network Firewall Policy was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The time instant at which the Network Firewall Policy was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         */
        timeUpdated: string;
        /**
         * Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
         */
        urlLists: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemUrlList[];
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemApplicationList {
        icmpCode: number;
        icmpType: number;
        key: string;
        maximumPort: number;
        minimumPort: number;
        /**
         * Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionProfile {
        /**
         * Whether to block sessions if the server's certificate uses extensions other than key usage and/or extended key usage.
         */
        areCertificateExtensionsRestricted: boolean;
        /**
         * Whether to automatically append SAN to impersonating certificate if server certificate is missing SAN.
         */
        isAutoIncludeAltName: boolean;
        /**
         * Whether to block sessions if server's certificate is expired.
         */
        isExpiredCertificateBlocked: boolean;
        /**
         * Whether to block sessions if the firewall is temporarily unable to decrypt their traffic.
         */
        isOutOfCapacityBlocked: boolean;
        /**
         * Whether to block sessions if the revocation status check for server's certificate does not succeed within the maximum allowed time (defaulting to 5 seconds).
         */
        isRevocationStatusTimeoutBlocked: boolean;
        /**
         * Whether to block sessions if the revocation status check for server's certificate results in "unknown".
         */
        isUnknownRevocationStatusBlocked: boolean;
        /**
         * Whether to block sessions if SSL cipher suite is not supported.
         */
        isUnsupportedCipherBlocked: boolean;
        /**
         * Whether to block sessions if SSL version is not supported.
         */
        isUnsupportedVersionBlocked: boolean;
        /**
         * Whether to block sessions if server's certificate is issued by an untrusted certificate authority (CA).
         */
        isUntrustedIssuerBlocked: boolean;
        key: string;
        /**
         * Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRule {
        /**
         * Types of Action on the Traffic flow.
         * * ALLOW - Allows the traffic.
         * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
         * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
         * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
         */
        action: string;
        /**
         * Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
         */
        conditions: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRuleCondition[];
        /**
         * The name of the decryption profile to use.
         */
        decryptionProfile: string;
        /**
         * Name for the Security rule, must be unique within the policy.
         */
        name: string;
        /**
         * The name of a mapped secret. Its `type` must match that of the specified decryption profile.
         */
        secret: string;
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRuleCondition {
        /**
         * An array of IP address list names to be evaluated against the traffic destination address.
         */
        destinations: string[];
        /**
         * An array of IP address list names to be evaluated against the traffic source address.
         */
        sources: string[];
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemIpAddressList {
        ipAddressListName: string;
        ipAddressListValues: string[];
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret {
        key: string;
        /**
         * Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
        /**
         * OCID for the Vault Secret to be used.
         */
        vaultSecretId: string;
        /**
         * Version number of the secret to be used.
         */
        versionNumber: number;
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRule {
        /**
         * Types of Action on the Traffic flow.
         * * ALLOW - Allows the traffic.
         * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
         * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
         * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
         */
        action: string;
        /**
         * Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
         */
        conditions: outputs.NetworkFirewall.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRuleCondition[];
        /**
         * Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
         * * INTRUSION_DETECTION - Intrusion Detection.
         * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
         */
        inspection: string;
        /**
         * Name for the Security rule, must be unique within the policy.
         */
        name: string;
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRuleCondition {
        /**
         * An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
         */
        applications: string[];
        /**
         * An array of IP address list names to be evaluated against the traffic destination address.
         */
        destinations: string[];
        /**
         * An array of IP address list names to be evaluated against the traffic source address.
         */
        sources: string[];
        /**
         * An array of URL pattern list names to be evaluated against the HTTP(S) request target.
         */
        urls: string[];
    }

    export interface GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemUrlList {
        key: string;
        pattern: string;
        /**
         * Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
    }

    export interface GetNetworkFirewallPolicyApplicationList {
        icmpCode: number;
        icmpType: number;
        key: string;
        maximumPort: number;
        minimumPort: number;
        /**
         * Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
    }

    export interface GetNetworkFirewallPolicyDecryptionProfile {
        /**
         * Whether to block sessions if the server's certificate uses extensions other than key usage and/or extended key usage.
         */
        areCertificateExtensionsRestricted: boolean;
        /**
         * Whether to automatically append SAN to impersonating certificate if server certificate is missing SAN.
         */
        isAutoIncludeAltName: boolean;
        /**
         * Whether to block sessions if server's certificate is expired.
         */
        isExpiredCertificateBlocked: boolean;
        /**
         * Whether to block sessions if the firewall is temporarily unable to decrypt their traffic.
         */
        isOutOfCapacityBlocked: boolean;
        /**
         * Whether to block sessions if the revocation status check for server's certificate does not succeed within the maximum allowed time (defaulting to 5 seconds).
         */
        isRevocationStatusTimeoutBlocked: boolean;
        /**
         * Whether to block sessions if the revocation status check for server's certificate results in "unknown".
         */
        isUnknownRevocationStatusBlocked: boolean;
        /**
         * Whether to block sessions if SSL cipher suite is not supported.
         */
        isUnsupportedCipherBlocked: boolean;
        /**
         * Whether to block sessions if SSL version is not supported.
         */
        isUnsupportedVersionBlocked: boolean;
        /**
         * Whether to block sessions if server's certificate is issued by an untrusted certificate authority (CA).
         */
        isUntrustedIssuerBlocked: boolean;
        key: string;
        /**
         * Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
    }

    export interface GetNetworkFirewallPolicyDecryptionRule {
        /**
         * Types of Action on the Traffic flow.
         * * ALLOW - Allows the traffic.
         * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
         * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
         * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
         */
        action: string;
        /**
         * Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
         */
        conditions: outputs.NetworkFirewall.GetNetworkFirewallPolicyDecryptionRuleCondition[];
        /**
         * The name of the decryption profile to use.
         */
        decryptionProfile: string;
        /**
         * Name for the Security rule, must be unique within the policy.
         */
        name: string;
        /**
         * The name of a mapped secret. Its `type` must match that of the specified decryption profile.
         */
        secret: string;
    }

    export interface GetNetworkFirewallPolicyDecryptionRuleCondition {
        /**
         * An array of IP address list names to be evaluated against the traffic destination address.
         */
        destinations: string[];
        /**
         * An array of IP address list names to be evaluated against the traffic source address.
         */
        sources: string[];
    }

    export interface GetNetworkFirewallPolicyIpAddressList {
        ipAddressListName: string;
        ipAddressListValues: string[];
    }

    export interface GetNetworkFirewallPolicyMappedSecret {
        key: string;
        /**
         * Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
        /**
         * OCID for the Vault Secret to be used.
         */
        vaultSecretId: string;
        /**
         * Version number of the secret to be used.
         */
        versionNumber: number;
    }

    export interface GetNetworkFirewallPolicySecurityRule {
        /**
         * Types of Action on the Traffic flow.
         * * ALLOW - Allows the traffic.
         * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
         * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
         * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
         */
        action: string;
        /**
         * Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
         */
        conditions: outputs.NetworkFirewall.GetNetworkFirewallPolicySecurityRuleCondition[];
        /**
         * Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
         * * INTRUSION_DETECTION - Intrusion Detection.
         * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
         */
        inspection: string;
        /**
         * Name for the Security rule, must be unique within the policy.
         */
        name: string;
    }

    export interface GetNetworkFirewallPolicySecurityRuleCondition {
        /**
         * An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
         */
        applications: string[];
        /**
         * An array of IP address list names to be evaluated against the traffic destination address.
         */
        destinations: string[];
        /**
         * An array of IP address list names to be evaluated against the traffic source address.
         */
        sources: string[];
        /**
         * An array of URL pattern list names to be evaluated against the HTTP(S) request target.
         */
        urls: string[];
    }

    export interface GetNetworkFirewallPolicyUrlList {
        key: string;
        pattern: string;
        /**
         * Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
    }

    export interface GetNetworkFirewallsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkFirewallsNetworkFirewallCollection {
        items: outputs.NetworkFirewall.GetNetworkFirewallsNetworkFirewallCollectionItem[];
    }

    export interface GetNetworkFirewallsNetworkFirewallCollectionItem {
        /**
         * A filter to return only resources that are present within the specified availability domain. To get a list of availability domains for a tenancy, use [ListAvailabilityDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/AvailabilityDomain/ListAvailabilityDomains) operation. Example: `kIdk:PHX-AD-1`
         */
        availabilityDomain: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Network Firewall resource.
         */
        id: string;
        /**
         * IPv4 address for the Network Firewall.
         */
        ipv4address: string;
        /**
         * IPv6 address for the Network Firewall.
         */
        ipv6address: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the entire networkFirewallPolicyId given.
         */
        networkFirewallPolicyId: string;
        /**
         * An array of network security groups [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the Network Firewall.
         */
        networkSecurityGroupIds: string[];
        /**
         * A filter to return only resources with a lifecycleState matching the given value.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the Network Firewall.
         */
        subnetId: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time instant at which the Network Firewall was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The time instant at which the Network Firewall was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         */
        timeUpdated: string;
    }

    export interface NetworkFirewallPolicyApplicationList {
        icmpCode: number;
        icmpType: number;
        key: string;
        maximumPort: number;
        minimumPort: number;
        /**
         * (Updatable) Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
    }

    export interface NetworkFirewallPolicyDecryptionProfile {
        /**
         * (Updatable) Whether to block sessions if the server's certificate uses extensions other than key usage and/or extended key usage.
         */
        areCertificateExtensionsRestricted?: boolean;
        /**
         * (Updatable) Whether to automatically append SAN to impersonating certificate if server certificate is missing SAN.
         */
        isAutoIncludeAltName?: boolean;
        /**
         * (Updatable) Whether to block sessions if server's certificate is expired.
         */
        isExpiredCertificateBlocked?: boolean;
        /**
         * (Updatable) Whether to block sessions if the firewall is temporarily unable to decrypt their traffic.
         */
        isOutOfCapacityBlocked?: boolean;
        /**
         * (Updatable) Whether to block sessions if the revocation status check for server's certificate does not succeed within the maximum allowed time (defaulting to 5 seconds).
         */
        isRevocationStatusTimeoutBlocked?: boolean;
        /**
         * (Updatable) Whether to block sessions if the revocation status check for server's certificate results in "unknown".
         */
        isUnknownRevocationStatusBlocked?: boolean;
        /**
         * (Updatable) Whether to block sessions if SSL cipher suite is not supported.
         */
        isUnsupportedCipherBlocked?: boolean;
        /**
         * (Updatable) Whether to block sessions if SSL version is not supported.
         */
        isUnsupportedVersionBlocked?: boolean;
        /**
         * (Updatable) Whether to block sessions if server's certificate is issued by an untrusted certificate authority (CA).
         */
        isUntrustedIssuerBlocked?: boolean;
        key: string;
        /**
         * (Updatable) Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
    }

    export interface NetworkFirewallPolicyDecryptionRule {
        /**
         * (Updatable) Types of Action on the Traffic flow.
         * * ALLOW - Allows the traffic.
         * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
         * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
         * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
         */
        action: string;
        /**
         * (Updatable) Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
         */
        condition: outputs.NetworkFirewall.NetworkFirewallPolicyDecryptionRuleCondition;
        /**
         * (Updatable) The name of the decryption profile to use.
         */
        decryptionProfile: string;
        /**
         * (Updatable) Name for the Security rule, must be unique within the policy.
         */
        name: string;
        /**
         * (Updatable) The name of a mapped secret. Its `type` must match that of the specified decryption profile.
         */
        secret: string;
    }

    export interface NetworkFirewallPolicyDecryptionRuleCondition {
        /**
         * (Updatable) An array of IP address list names to be evaluated against the traffic destination address.
         */
        destinations: string[];
        /**
         * (Updatable) An array of IP address list names to be evaluated against the traffic source address.
         */
        sources: string[];
    }

    export interface NetworkFirewallPolicyIpAddressList {
        ipAddressListName: string;
        ipAddressListValues: string[];
    }

    export interface NetworkFirewallPolicyMappedSecret {
        key: string;
        /**
         * (Updatable) Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
        /**
         * (Updatable) OCID for the Vault Secret to be used.
         */
        vaultSecretId?: string;
        /**
         * (Updatable) Version number of the secret to be used.
         */
        versionNumber?: number;
    }

    export interface NetworkFirewallPolicySecurityRule {
        /**
         * (Updatable) Types of Action on the Traffic flow.
         * * ALLOW - Allows the traffic.
         * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
         * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
         * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
         */
        action: string;
        /**
         * (Updatable) Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
         */
        condition: outputs.NetworkFirewall.NetworkFirewallPolicySecurityRuleCondition;
        /**
         * (Updatable) Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
         * * INTRUSION_DETECTION - Intrusion Detection.
         * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
         */
        inspection: string;
        /**
         * (Updatable) Name for the Security rule, must be unique within the policy.
         */
        name: string;
    }

    export interface NetworkFirewallPolicySecurityRuleCondition {
        /**
         * (Updatable) An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
         */
        applications: string[];
        /**
         * (Updatable) An array of IP address list names to be evaluated against the traffic destination address.
         */
        destinations: string[];
        /**
         * (Updatable) An array of IP address list names to be evaluated against the traffic source address.
         */
        sources: string[];
        /**
         * (Updatable) An array of URL pattern list names to be evaluated against the HTTP(S) request target.
         */
        urls: string[];
    }

    export interface NetworkFirewallPolicyUrlList {
        key: string;
        pattern: string;
        /**
         * (Updatable) Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         */
        type: string;
    }
}

export namespace NetworkLoadBalancer {
    export interface BackendSetBackend {
        /**
         * The IP address of the backend server. Example: `10.0.0.3`
         */
        ipAddress: string;
        /**
         * Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
         */
        isBackup: boolean;
        /**
         * Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
         */
        isDrain: boolean;
        /**
         * Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
         */
        isOffline: boolean;
        /**
         * A user-friendly name for the backend set that must be unique and cannot be changed.
         */
        name: string;
        /**
         * (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
         */
        port: number;
        /**
         * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
         */
        targetId: string;
        /**
         * The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
         */
        weight: number;
    }

    export interface BackendSetHealthChecker {
        /**
         * (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
         */
        intervalInMillis: number;
        /**
         * (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
         */
        port: number;
        /**
         * (Updatable) The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
         */
        protocol: string;
        /**
         * (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
         */
        requestData: string;
        /**
         * (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
         */
        responseBodyRegex: string;
        /**
         * (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
         */
        responseData: string;
        /**
         * (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
         */
        retries: number;
        /**
         * (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
         */
        returnCode: number;
        /**
         * (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
         */
        timeoutInMillis: number;
        /**
         * (Updatable) The path against which to run the health check.  Example: `/healthcheck`
         */
        urlPath: string;
    }

    export interface GetBackendHealthHealthCheckResult {
        /**
         * The result of the most recent health check.
         */
        healthCheckStatus: string;
        /**
         * The date and time the data was retrieved, in the format defined by RFC3339.  Example: `2020-05-01T18:28:11+00:00`
         */
        timestamp: string;
    }

    export interface GetBackendSetBackend {
        /**
         * The IP address of the backend server. Example: `10.0.0.3`
         */
        ipAddress: string;
        /**
         * Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
         */
        isBackup: boolean;
        /**
         * Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
         */
        isDrain: boolean;
        /**
         * Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
         */
        isOffline: boolean;
        /**
         * A user-friendly name for the backend set that must be unique and cannot be changed.
         */
        name: string;
        /**
         * The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
         */
        port: number;
        /**
         * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
         */
        targetId: string;
        /**
         * The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
         */
        weight: number;
    }

    export interface GetBackendSetHealthChecker {
        /**
         * The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
         */
        intervalInMillis: number;
        /**
         * The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
         */
        port: number;
        /**
         * The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
         */
        protocol: string;
        /**
         * Base64 encoded pattern to be sent as UDP or TCP health check probe.
         */
        requestData: string;
        /**
         * A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
         */
        responseBodyRegex: string;
        /**
         * Base64 encoded pattern to be validated as UDP or TCP health check probe response.
         */
        responseData: string;
        /**
         * The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
         */
        retries: number;
        /**
         * The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
         */
        returnCode: number;
        /**
         * The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
         */
        timeoutInMillis: number;
        /**
         * The path against which to run the health check.  Example: `/healthcheck`
         */
        urlPath: string;
    }

    export interface GetBackendSetsBackendSetCollection {
        items: outputs.NetworkLoadBalancer.GetBackendSetsBackendSetCollectionItem[];
    }

    export interface GetBackendSetsBackendSetCollectionItem {
        /**
         * Array of backends.
         */
        backends: outputs.NetworkLoadBalancer.GetBackendSetsBackendSetCollectionItemBackend[];
        /**
         * The health check policy configuration. For more information, see [Editing Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/editinghealthcheck.htm).
         */
        healthCheckers: outputs.NetworkLoadBalancer.GetBackendSetsBackendSetCollectionItemHealthChecker[];
        id: string;
        /**
         * IP version associated with the backend set.
         */
        ipVersion: string;
        /**
         * If this parameter is enabled, then the network load balancer preserves the source IP of the packet when it is forwarded to backends. Backends see the original source IP. If the isPreserveSourceDestination parameter is enabled for the network load balancer resource, then this parameter cannot be disabled. The value is true by default.
         */
        isPreserveSource: boolean;
        /**
         * A user-friendly name for the backend set that must be unique and cannot be changed.
         */
        name: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
         */
        networkLoadBalancerId: string;
        /**
         * The network load balancer policy for the backend set.  Example: `FIVE_TUPLE`
         */
        policy: string;
    }

    export interface GetBackendSetsBackendSetCollectionItemBackend {
        /**
         * The IP address of the backend server. Example: `10.0.0.3`
         */
        ipAddress: string;
        /**
         * Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
         */
        isBackup: boolean;
        /**
         * Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
         */
        isDrain: boolean;
        /**
         * Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
         */
        isOffline: boolean;
        /**
         * A user-friendly name for the backend set that must be unique and cannot be changed.
         */
        name: string;
        /**
         * The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
         */
        port: number;
        /**
         * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
         */
        targetId: string;
        /**
         * The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
         */
        weight: number;
    }

    export interface GetBackendSetsBackendSetCollectionItemHealthChecker {
        /**
         * The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
         */
        intervalInMillis: number;
        /**
         * The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
         */
        port: number;
        /**
         * The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
         */
        protocol: string;
        /**
         * Base64 encoded pattern to be sent as UDP or TCP health check probe.
         */
        requestData: string;
        /**
         * A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
         */
        responseBodyRegex: string;
        /**
         * Base64 encoded pattern to be validated as UDP or TCP health check probe response.
         */
        responseData: string;
        /**
         * The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
         */
        retries: number;
        /**
         * The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
         */
        returnCode: number;
        /**
         * The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
         */
        timeoutInMillis: number;
        /**
         * The path against which to run the health check.  Example: `/healthcheck`
         */
        urlPath: string;
    }

    export interface GetBackendSetsFilter {
        /**
         * A user-friendly name for the backend set that must be unique and cannot be changed.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBackendsBackendCollection {
        items: outputs.NetworkLoadBalancer.GetBackendsBackendCollectionItem[];
    }

    export interface GetBackendsBackendCollectionItem {
        /**
         * The name of the backend set associated with the backend servers.  Example: `exampleBackendSet`
         */
        backendSetName: string;
        id: string;
        /**
         * The IP address of the backend server. Example: `10.0.0.3`
         */
        ipAddress: string;
        /**
         * Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
         */
        isBackup: boolean;
        /**
         * Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
         */
        isDrain: boolean;
        /**
         * Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
         */
        isOffline: boolean;
        /**
         * A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
         */
        name: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
         */
        networkLoadBalancerId: string;
        /**
         * The communication port for the backend server.  Example: `8080`
         */
        port: number;
        /**
         * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
         */
        targetId: string;
        /**
         * The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
         */
        weight: number;
    }

    export interface GetBackendsFilter {
        /**
         * A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetListenersFilter {
        /**
         * A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetListenersListenerCollection {
        items: outputs.NetworkLoadBalancer.GetListenersListenerCollectionItem[];
    }

    export interface GetListenersListenerCollectionItem {
        /**
         * The name of the associated backend set.  Example: `exampleBackendSet`
         */
        defaultBackendSetName: string;
        id: string;
        /**
         * IP version associated with the listener.
         */
        ipVersion: string;
        /**
         * A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
         */
        name: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
         */
        networkLoadBalancerId: string;
        /**
         * The communication port for the listener.  Example: `80`
         */
        port: number;
        /**
         * The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). To get a list of valid protocols, use the [ListNetworkLoadBalancersProtocols](https://docs.cloud.oracle.com/iaas/api/#/en/NetworkLoadBalancer/20200501/networkLoadBalancerProtocol/ListNetworkLoadBalancersProtocols) operation.  Example: `TCP`
         */
        protocol: string;
    }

    export interface GetNetworkLoadBalancerIpAddress {
        /**
         * An IP address.  Example: `192.168.0.3`
         */
        ipAddress: string;
        /**
         * IP version associated with this IP address.
         */
        ipVersion: string;
        /**
         * Whether the IP address is public or private.
         */
        isPublic: boolean;
        /**
         * An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
         */
        reservedIps: outputs.NetworkLoadBalancer.GetNetworkLoadBalancerIpAddressReservedIp[];
    }

    export interface GetNetworkLoadBalancerIpAddressReservedIp {
        /**
         * OCID of the reserved public IP address created with the virtual cloud network.
         */
        id: string;
    }

    export interface GetNetworkLoadBalancerReservedIp {
        /**
         * OCID of the reserved public IP address created with the virtual cloud network.
         */
        id: string;
    }

    export interface GetNetworkLoadBalancersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkLoadBalancersNetworkLoadBalancerCollection {
        items: outputs.NetworkLoadBalancer.GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem[];
    }

    export interface GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancers to list.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * OCID of the reserved public IP address created with the virtual cloud network.
         */
        id: string;
        /**
         * An array of IP addresses.
         */
        ipAddresses: outputs.NetworkLoadBalancer.GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress[];
        /**
         * When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC. Packets are sent to the backend set without any changes to the source and destination IP.
         */
        isPreserveSourceDestination: boolean;
        /**
         * Whether the network load balancer has a virtual cloud network-local (private) IP address.
         */
        isPrivate: boolean;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
         */
        networkSecurityGroupIds: string[];
        /**
         * IP version associated with the NLB.
         */
        nlbIpVersion: string;
        reservedIps: outputs.NetworkLoadBalancer.GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp[];
        /**
         * A filter to return only resources that match the given lifecycle state.
         */
        state: string;
        /**
         * The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)."
         */
        subnetId: string;
        /**
         * Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
         */
        timeUpdated: string;
    }

    export interface GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress {
        /**
         * An IP address.  Example: `192.168.0.3`
         */
        ipAddress: string;
        /**
         * IP version associated with this IP address.
         */
        ipVersion: string;
        /**
         * Whether the IP address is public or private.
         * If "true", then the IP address is public and accessible from the internet.
         */
        isPublic: boolean;
        /**
         * An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
         */
        reservedIps: outputs.NetworkLoadBalancer.GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp[];
    }

    export interface GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp {
        /**
         * OCID of the reserved public IP address created with the virtual cloud network.
         */
        id: string;
    }

    export interface GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp {
        /**
         * OCID of the reserved public IP address created with the virtual cloud network.
         */
        id: string;
    }

    export interface GetNetworkLoadBalancersPoliciesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection {
        /**
         * Array of NetworkLoadBalancersPolicySummary objects.
         */
        items: string[];
    }

    export interface GetNetworkLoadBalancersProtocolsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection {
        /**
         * Array of NetworkLoadBalancersProtocolSummary objects.
         */
        items: string[];
    }

    export interface NetworkLoadBalancerIpAddress {
        /**
         * An IP address.  Example: `192.168.0.3`
         */
        ipAddress: string;
        /**
         * IP version associated with this IP address.
         */
        ipVersion: string;
        /**
         * Whether the IP address is public or private.
         */
        isPublic: boolean;
        /**
         * An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
         */
        reservedIps: outputs.NetworkLoadBalancer.NetworkLoadBalancerIpAddressReservedIp[];
    }

    export interface NetworkLoadBalancerIpAddressReservedIp {
        /**
         * OCID of the reserved public IP address created with the virtual cloud network.
         */
        id: string;
    }

    export interface NetworkLoadBalancerReservedIp {
        /**
         * OCID of the reserved public IP address created with the virtual cloud network.
         */
        id: string;
    }

    export interface NetworkLoadBalancersBackendSetsUnifiedBackend {
        /**
         * (Updatable) The IP address of the backend server.  Example: `10.0.0.3`
         */
        ipAddress: string;
        /**
         * (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
         */
        isBackup: boolean;
        /**
         * (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
         */
        isDrain: boolean;
        /**
         * (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
         */
        isOffline: boolean;
        /**
         * A user-friendly name for the backend set that must be unique and cannot be changed.
         */
        name: string;
        /**
         * (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
         */
        port: number;
        /**
         * (Updatable) The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
         */
        targetId: string;
        /**
         * (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
         */
        weight: number;
    }

    export interface NetworkLoadBalancersBackendSetsUnifiedHealthChecker {
        /**
         * (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
         */
        intervalInMillis: number;
        /**
         * (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
         */
        port: number;
        /**
         * (Updatable) The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
         */
        protocol: string;
        /**
         * (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
         */
        requestData: string;
        /**
         * (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
         */
        responseBodyRegex: string;
        /**
         * (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
         */
        responseData: string;
        /**
         * (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
         */
        retries: number;
        /**
         * (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
         */
        returnCode: number;
        /**
         * (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
         */
        timeoutInMillis: number;
        /**
         * (Updatable) The path against which to run the health check.  Example: `/healthcheck`
         */
        urlPath: string;
    }

}

export namespace Nosql {
    export interface GetIndexKey {
        /**
         * The name of a column to be included as an index key.
         */
        columnName: string;
        /**
         * If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
         */
        jsonFieldType: string;
        /**
         * If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
         */
        jsonPath: string;
    }

    export interface GetIndexesFilter {
        /**
         * A shell-globbing-style (*?[]) filter for names.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIndexesIndexCollection {
        /**
         * The ID of a table's compartment. When a table is identified by name, the compartmentId is often needed to provide context for interpreting the name.
         */
        compartmentId: string;
        id: string;
        isIfNotExists: boolean;
        /**
         * A set of keys for a secondary index.
         */
        keys: outputs.Nosql.GetIndexesIndexCollectionKey[];
        /**
         * A message describing the current state in more detail.
         */
        lifecycleDetails: string;
        /**
         * A shell-globbing-style (*?[]) filter for names.
         */
        name: string;
        /**
         * Filter list by the lifecycle state of the item.
         */
        state: string;
        /**
         * the OCID of the table to which this index belongs.
         */
        tableId: string;
        /**
         * The name of the table to which this index belongs.
         */
        tableName: string;
        /**
         * A table name within the compartment, or a table OCID.
         */
        tableNameOrId: string;
    }

    export interface GetIndexesIndexCollectionKey {
        /**
         * The name of a column to be included as an index key.
         */
        columnName: string;
        /**
         * If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
         */
        jsonFieldType: string;
        /**
         * If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
         */
        jsonPath: string;
    }

    export interface GetTableSchema {
        /**
         * The columns of a table.
         */
        columns: outputs.Nosql.GetTableSchemaColumn[];
        /**
         * A list of column names that make up a key.
         */
        primaryKeys: string[];
        /**
         * A list of column names that make up a key.
         */
        shardKeys: string[];
        /**
         * The default Time-to-Live for the table, in days.
         */
        ttl: number;
    }

    export interface GetTableSchemaColumn {
        /**
         * The column default value.
         */
        defaultValue: string;
        /**
         * The column nullable flag.
         */
        isNullable: boolean;
        /**
         * The column name.
         */
        name: string;
        /**
         * The column type.
         */
        type: string;
    }

    export interface GetTableTableLimit {
        /**
         * The capacity mode of the table.  If capacityMode = ON_DEMAND, maxReadUnits and maxWriteUnits are not used, and both will have the value of zero.
         */
        capacityMode: string;
        /**
         * Maximum sustained read throughput limit for the table.
         */
        maxReadUnits: number;
        /**
         * Maximum size of storage used by the table.
         */
        maxStorageInGbs: number;
        /**
         * Maximum sustained write throughput limit for the table.
         */
        maxWriteUnits: number;
    }

    export interface GetTablesFilter {
        /**
         * A shell-globbing-style (*?[]) filter for names.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetTablesTableCollection {
        /**
         * The ID of a table's compartment.
         */
        compartmentId: string;
        /**
         * A DDL statement representing the schema.
         */
        ddlStatement: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace": {"bar-key": "value"}}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier that is immutable.
         */
        id: string;
        /**
         * True if this table can be reclaimed after an idle period.
         */
        isAutoReclaimable: boolean;
        /**
         * A message describing the current state in more detail.
         */
        lifecycleDetails: string;
        /**
         * A shell-globbing-style (*?[]) filter for names.
         */
        name: string;
        /**
         * The table schema information as a JSON object.
         */
        schemas: outputs.Nosql.GetTablesTableCollectionSchema[];
        /**
         * Filter list by the lifecycle state of the item.
         */
        state: string;
        /**
         * Read-only system tag. These predefined keys are scoped to namespaces.  At present the only supported namespace is `"orcl-cloud"`; and the only key in that namespace is `"free-tier-retained"`. Example: `{"orcl-cloud"": {"free-tier-retained": "true"}}`
         */
        systemTags: {[key: string]: any};
        /**
         * Throughput and storage limits configuration of a table.
         */
        tableLimits: outputs.Nosql.GetTablesTableCollectionTableLimit[];
        /**
         * The time the the table was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * If lifecycleState is INACTIVE, indicates when this table will be automatically removed. An RFC3339 formatted datetime string.
         */
        timeOfExpiration: string;
        /**
         * The time the the table's metadata was last updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetTablesTableCollectionSchema {
        /**
         * The columns of a table.
         */
        columns: outputs.Nosql.GetTablesTableCollectionSchemaColumn[];
        /**
         * A list of column names that make up a key.
         */
        primaryKeys: string[];
        /**
         * A list of column names that make up a key.
         */
        shardKeys: string[];
        /**
         * The default Time-to-Live for the table, in days.
         */
        ttl: number;
    }

    export interface GetTablesTableCollectionSchemaColumn {
        /**
         * The column default value.
         */
        defaultValue: string;
        /**
         * The column nullable flag.
         */
        isNullable: boolean;
        /**
         * A shell-globbing-style (*?[]) filter for names.
         */
        name: string;
        /**
         * The column type.
         */
        type: string;
    }

    export interface GetTablesTableCollectionTableLimit {
        /**
         * The capacity mode of the table.  If capacityMode = ON_DEMAND, maxReadUnits and maxWriteUnits are not used, and both will have the value of zero.
         */
        capacityMode: string;
        /**
         * Maximum sustained read throughput limit for the table.
         */
        maxReadUnits: number;
        /**
         * Maximum size of storage used by the table.
         */
        maxStorageInGbs: number;
        /**
         * Maximum sustained write throughput limit for the table.
         */
        maxWriteUnits: number;
    }

    export interface IndexKey {
        /**
         * The name of a column to be included as an index key.
         */
        columnName: string;
        /**
         * If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
         */
        jsonFieldType: string;
        /**
         * If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
         */
        jsonPath: string;
    }

    export interface TableSchema {
        /**
         * The columns of a table.
         */
        columns: outputs.Nosql.TableSchemaColumn[];
        /**
         * A list of column names that make up a key.
         */
        primaryKeys: string[];
        /**
         * A list of column names that make up a key.
         */
        shardKeys: string[];
        /**
         * The default Time-to-Live for the table, in days.
         */
        ttl: number;
    }

    export interface TableSchemaColumn {
        /**
         * The column default value.
         */
        defaultValue: string;
        /**
         * The column nullable flag.
         */
        isNullable: boolean;
        /**
         * Table name.
         */
        name: string;
        /**
         * The column type.
         */
        type: string;
    }

    export interface TableTableLimits {
        /**
         * (Updatable) The capacity mode of the table.  If capacityMode = ON_DEMAND, maxReadUnits and maxWriteUnits are not used, and both will have the value of zero.
         */
        capacityMode: string;
        /**
         * (Updatable) Maximum sustained read throughput limit for the table.
         */
        maxReadUnits: number;
        /**
         * (Updatable) Maximum size of storage used by the table.
         */
        maxStorageInGbs: number;
        /**
         * (Updatable) Maximum sustained write throughput limit for the table.
         */
        maxWriteUnits: number;
    }
}

export namespace ObjectStorage {
    export interface BucketRetentionRule {
        /**
         * A user-specified name for the retention rule. Names can be helpful in identifying retention rules. The name should be unique. This attribute is a forcenew attribute
         */
        displayName: string;
        /**
         * (Updatable)
         */
        duration?: outputs.ObjectStorage.BucketRetentionRuleDuration;
        /**
         * Unique identifier for the retention rule.
         */
        retentionRuleId: string;
        /**
         * The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
         */
        timeCreated: string;
        /**
         * The date and time that the retention rule was modified as per [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeModified: string;
        /**
         * (Updatable) The date and time as per [RFC 3339](https://tools.ietf.org/html/rfc3339) after which this rule is locked and can only be deleted by deleting the bucket. Once a rule is locked, only increases in the duration are allowed and no other properties can be changed. This property cannot be updated for rules that are in a locked state. Specifying it when a duration is not specified is considered an error.
         */
        timeRuleLocked?: string;
    }

    export interface BucketRetentionRuleDuration {
        /**
         * (Updatable) The timeAmount is interpreted in units defined by the timeUnit parameter, and is calculated in relation to each object's Last-Modified timestamp.
         */
        timeAmount: string;
        /**
         * (Updatable) The unit that should be used to interpret timeAmount.
         */
        timeUnit: string;
    }

    export interface GetBucketRetentionRule {
        /**
         * User specified name for the retention rule.
         */
        displayName: string;
        durations: outputs.ObjectStorage.GetBucketRetentionRuleDuration[];
        /**
         * Unique identifier for the retention rule.
         */
        retentionRuleId: string;
        /**
         * The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
         */
        timeCreated: string;
        /**
         * The date and time that the retention rule was modified as per [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeModified: string;
        /**
         * The date and time as per [RFC 3339](https://tools.ietf.org/html/rfc3339) after which this rule becomes locked. and can only be deleted by deleting the bucket.
         */
        timeRuleLocked: string;
    }

    export interface GetBucketRetentionRuleDuration {
        /**
         * The timeAmount is interpreted in units defined by the timeUnit parameter, and is calculated in relation to each object's Last-Modified timestamp.
         */
        timeAmount: string;
        /**
         * The unit that should be used to interpret timeAmount.
         */
        timeUnit: string;
    }

    export interface GetBucketSummariesBucketSummary {
        /**
         * The type of public access enabled on this bucket. A bucket is set to `NoPublicAccess` by default, which only allows an authenticated caller to access the bucket and its contents. When `ObjectRead` is enabled on the bucket, public access is allowed for the `GetObject`, `HeadObject`, and `ListObjects` operations. When `ObjectReadWithoutList` is enabled on the bucket, public access is allowed for the `GetObject` and `HeadObject` operations.
         */
        accessType: string;
        /**
         * The approximate number of objects in the bucket. Count statistics are reported periodically. You will see a lag between what is displayed and the actual object count.
         */
        approximateCount: string;
        /**
         * The approximate total size in bytes of all objects in the bucket. Size statistics are reported periodically. You will see a lag between what is displayed and the actual size of the bucket.
         */
        approximateSize: string;
        /**
         * The auto tiering status on the bucket. A bucket is created with auto tiering `Disabled` by default. For auto tiering `InfrequentAccess`, objects are transitioned automatically between the 'Standard' and 'InfrequentAccess' tiers based on the access pattern of the objects.
         */
        autoTiering: string;
        bucketId: string;
        /**
         * The ID of the compartment in which to list buckets.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the bucket.
         */
        createdBy: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The entity tag (ETag) for the bucket.
         */
        etag: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        id: string;
        /**
         * Whether or not this bucket is read only. By default, `isReadOnly` is set to `false`. This will be set to 'true' when this bucket is configured as a destination in a replication policy.
         */
        isReadOnly: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a master encryption key used to call the Key Management service to generate a data encryption key or to encrypt or decrypt a data encryption key.
         */
        kmsKeyId: string;
        /**
         * Arbitrary string keys and values for user-defined metadata.
         */
        metadata: {[key: string]: any};
        /**
         * The name of the bucket. Avoid entering confidential information. Example: my-new-bucket1
         */
        name: string;
        /**
         * The Object Storage namespace used for the request.
         */
        namespace: string;
        /**
         * Whether or not events are emitted for object state changes in this bucket. By default, `objectEventsEnabled` is set to `false`. Set `objectEventsEnabled` to `true` to emit events for object state changes. For more information about events, see [Overview of Events](https://docs.cloud.oracle.com/iaas/Content/Events/Concepts/eventsoverview.htm).
         */
        objectEventsEnabled: boolean;
        /**
         * The entity tag (ETag) for the live object lifecycle policy on the bucket.
         */
        objectLifecyclePolicyEtag: string;
        /**
         * Whether or not this bucket is a replication source. By default, `replicationEnabled` is set to `false`. This will be set to 'true' when you create a replication policy for the bucket.
         */
        replicationEnabled: boolean;
        retentionRules: outputs.ObjectStorage.GetBucketSummariesBucketSummaryRetentionRule[];
        /**
         * The storage tier type assigned to the bucket. A bucket is set to `Standard` tier by default, which means objects uploaded or copied to the bucket will be in the standard storage tier. When the `Archive` tier type is set explicitly for a bucket, objects uploaded or copied to the bucket will be stored in archive storage. The `storageTier` property is immutable after bucket is created.
         */
        storageTier: string;
        /**
         * The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
         */
        timeCreated: string;
        /**
         * The versioning status on the bucket. A bucket is created with versioning `Disabled` by default. For versioning `Enabled`, objects are protected from overwrites and deletes, by maintaining their version history. When versioning is `Suspended`, the previous versions will still remain but new versions will no longer be created when overwitten or deleted.
         */
        versioning: string;
    }

    export interface GetBucketSummariesBucketSummaryRetentionRule {
        displayName: string;
        durations: outputs.ObjectStorage.GetBucketSummariesBucketSummaryRetentionRuleDuration[];
        retentionRuleId: string;
        /**
         * The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
         */
        timeCreated: string;
        timeModified: string;
        timeRuleLocked: string;
    }

    export interface GetBucketSummariesBucketSummaryRetentionRuleDuration {
        timeAmount: string;
        timeUnit: string;
    }

    export interface GetBucketSummariesFilter {
        /**
         * The name of the bucket. Avoid entering confidential information. Example: my-new-bucket1
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetObjectLifecyclePolicyRule {
        /**
         * The action of the object lifecycle policy rule. Rules using the action 'ARCHIVE' move objects from Standard and InfrequentAccess storage tiers into the [Archive storage tier](https://docs.cloud.oracle.com/iaas/Content/Archive/Concepts/archivestorageoverview.htm). Rules using the action 'INFREQUENT_ACCESS' move objects from Standard storage tier into the Infrequent Access Storage tier. Objects that are already in InfrequentAccess tier or in Archive tier are left untouched. Rules using the action 'DELETE' permanently delete objects from buckets. Rules using 'ABORT' abort the uncommitted multipart-uploads and permanently delete their parts from buckets.
         */
        action: string;
        /**
         * A Boolean that determines whether this rule is currently enabled.
         */
        isEnabled: boolean;
        /**
         * The name of the lifecycle rule to be applied.
         */
        name: string;
        /**
         * A filter that compares object names to a set of prefixes or patterns to determine if a rule applies to a given object. The filter can contain include glob patterns, exclude glob patterns and inclusion prefixes. The inclusion prefixes property is kept for backward compatibility. It is recommended to use inclusion patterns instead of prefixes. Exclusions take precedence over inclusions.
         */
        objectNameFilters: outputs.ObjectStorage.GetObjectLifecyclePolicyRuleObjectNameFilter[];
        /**
         * The target of the object lifecycle policy rule. The values of target can be either "objects", "multipart-uploads" or "previous-object-versions". This field when declared as "objects" is used to specify ARCHIVE, INFREQUENT_ACCESS or DELETE rule for objects. This field when declared as "previous-object-versions" is used to specify ARCHIVE, INFREQUENT_ACCESS or DELETE rule for previous versions of existing objects. This field when declared as "multipart-uploads" is used to specify the ABORT (only) rule for uncommitted multipart-uploads.
         */
        target: string;
        /**
         * Specifies the age of objects to apply the rule to. The timeAmount is interpreted in units defined by the timeUnit parameter, and is calculated in relation to each object's Last-Modified time.
         */
        timeAmount: string;
        /**
         * The unit that should be used to interpret timeAmount.  Days are defined as starting and ending at midnight UTC. Years are defined as 365.2425 days long and likewise round up to the next midnight UTC.
         */
        timeUnit: string;
    }

    export interface GetObjectLifecyclePolicyRuleObjectNameFilter {
        /**
         * An array of glob patterns to match the object names to exclude. An empty array is ignored. Exclusion patterns take precedence over inclusion patterns. A Glob pattern is a sequence of characters to match text. Any character that appears in the pattern, other than the special pattern characters described below, matches itself. Glob patterns must be between 1 and 1024 characters.
         */
        exclusionPatterns: string[];
        /**
         * An array of glob patterns to match the object names to include. An empty array includes all objects in the bucket. Exclusion patterns take precedence over inclusion patterns. A Glob pattern is a sequence of characters to match text. Any character that appears in the pattern, other than the special pattern characters described below, matches itself. Glob patterns must be between 1 and 1024 characters.
         */
        inclusionPatterns: string[];
        /**
         * An array of object name prefixes that the rule will apply to. An empty array means to include all objects.
         */
        inclusionPrefixes: string[];
    }

    export interface GetObjectVersionsFilter {
        /**
         * The name of the object. Avoid entering confidential information. Example: test/object1.log
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetObjectVersionsItem {
        /**
         * Archival state of an object. This field is set only for objects in Archive tier.
         */
        archivalState: string;
        /**
         * The current entity tag (ETag) for the object.
         */
        etag: string;
        /**
         * This flag will indicate if the version is deleted or not.
         */
        isDeleteMarker: boolean;
        /**
         * Base64-encoded MD5 hash of the object data.
         */
        md5: string;
        /**
         * The name of the object. Avoid entering confidential information. Example: test/object1.log
         */
        name: string;
        /**
         * Size of the object in bytes.
         */
        size: string;
        /**
         * The storage tier that the object is stored in.
         */
        storageTier: string;
        /**
         * The date and time the object was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
         */
        timeCreated: string;
        /**
         * The date and time the object was modified, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616#section-14.29).
         */
        timeModified: string;
        /**
         * VersionId of the object.
         */
        versionId: string;
    }

    export interface GetObjectsFilter {
        /**
         * The name of the object.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetObjectsObject {
        archivalState: string;
        /**
         * The current entity tag (ETag) for the object.
         */
        etag: string;
        /**
         * Base64-encoded MD5 hash of the object data.
         */
        md5: string;
        /**
         * The name of the object.
         */
        name: string;
        /**
         * Size of the object in bytes.
         */
        size: string;
        /**
         * The storage tier that the object is stored in.
         * * `archival-state` - Archival state of an object. This field is set only for objects in Archive tier.
         */
        storageTier: string;
        /**
         * The date and time the object was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
         */
        timeCreated: string;
        /**
         * The date and time the object was modified, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616#section-14.29).
         */
        timeModified: string;
    }

    export interface GetPreauthrequestsFilter {
        /**
         * The user-provided name of the pre-authenticated request.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPreauthrequestsPreauthenticatedRequest {
        /**
         * The operation that can be performed on this resource.
         */
        accessType: string;
        /**
         * The URI to embed in the URL when using the pre-authenticated request.
         */
        accessUri: string;
        /**
         * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         */
        bucket: string;
        /**
         * Specifies whether a list operation is allowed on a PAR with accessType "AnyObjectRead" or "AnyObjectReadWrite". Deny: Prevents the user from performing a list operation. ListObjects: Authorizes the user to perform a list operation.
         */
        bucketListingAction: string;
        /**
         * The unique identifier to use when directly addressing the pre-authenticated request.
         */
        id: string;
        /**
         * The user-provided name of the pre-authenticated request.
         */
        name: string;
        /**
         * The Object Storage namespace used for the request.
         */
        namespace: string;
        /**
         * Deprecated. Instead use `objectName`.The name of the object that is being granted access to by the pre-authenticated request. Avoid entering confidential information. The object name can be null and if so, the pre-authenticated request grants access to the entire bucket. Example: test/object1.log
         *
         * @deprecated The 'object' field has been deprecated. Please use 'object_name' instead.
         */
        object: string;
        /**
         * The name of the object that is being granted access to by the pre-authenticated request. Avoid entering confidential information. The object name can be null and if so, the pre-authenticated request grants access to the entire bucket. Example: test/object1.log
         */
        objectName: string;
        parId: string;
        /**
         * The date when the pre-authenticated request was created as per specification [RFC 3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The expiration date for the pre-authenticated request as per [RFC 3339](https://tools.ietf.org/html/rfc3339). After this date the pre-authenticated request will no longer be valid.
         */
        timeExpires: string;
    }

    export interface GetReplicationPoliciesFilter {
        /**
         * The name of the policy.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetReplicationPoliciesReplicationPolicy {
        /**
         * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         */
        bucket: string;
        /**
         * @deprecated The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported.
         */
        deleteObjectInDestinationBucket: string;
        /**
         * The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
         */
        destinationBucketName: string;
        /**
         * The destination region to replicate to, for example "us-ashburn-1".
         */
        destinationRegionName: string;
        /**
         * The id of the replication policy.
         */
        id: string;
        /**
         * The name of the policy.
         */
        name: string;
        /**
         * The Object Storage namespace used for the request.
         */
        namespace: string;
        /**
         * The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
         */
        status: string;
        /**
         * A human-readable description of the status.
         */
        statusMessage: string;
        /**
         * The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * Changes made to the source bucket before this time has been replicated.
         */
        timeLastSync: string;
    }

    export interface GetReplicationSourcesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetReplicationSourcesReplicationSource {
        /**
         * The name of the policy.
         */
        policyName: string;
        /**
         * The source bucket replicating data from.
         */
        sourceBucketName: string;
        /**
         * The source region replicating data from, for example "us-ashburn-1".
         */
        sourceRegionName: string;
    }

    export interface ObjectLifecyclePolicyRule {
        /**
         * (Updatable) The action of the object lifecycle policy rule. Rules using the action 'ARCHIVE' move objects from Standard and InfrequentAccess storage tiers into the [Archive storage tier](https://docs.cloud.oracle.com/iaas/Content/Archive/Concepts/archivestorageoverview.htm). Rules using the action 'INFREQUENT_ACCESS' move objects from Standard storage tier into the Infrequent Access Storage tier. Objects that are already in InfrequentAccess tier or in Archive tier are left untouched. Rules using the action 'DELETE' permanently delete objects from buckets. Rules using 'ABORT' abort the uncommitted multipart-uploads and permanently delete their parts from buckets.
         */
        action: string;
        /**
         * (Updatable) A Boolean that determines whether this rule is currently enabled.
         */
        isEnabled: boolean;
        /**
         * (Updatable) The name of the lifecycle rule to be applied.
         */
        name: string;
        /**
         * (Updatable) A filter that compares object names to a set of prefixes or patterns to determine if a rule applies to a given object. The filter can contain include glob patterns, exclude glob patterns and inclusion prefixes. The inclusion prefixes property is kept for backward compatibility. It is recommended to use inclusion patterns instead of prefixes. Exclusions take precedence over inclusions.
         */
        objectNameFilter: outputs.ObjectStorage.ObjectLifecyclePolicyRuleObjectNameFilter;
        /**
         * (Updatable) The target of the object lifecycle policy rule. The values of target can be either "objects", "multipart-uploads" or "previous-object-versions". This field when declared as "objects" is used to specify ARCHIVE, INFREQUENT_ACCESS or DELETE rule for objects. This field when declared as "previous-object-versions" is used to specify ARCHIVE, INFREQUENT_ACCESS or DELETE rule for previous versions of existing objects. This field when declared as "multipart-uploads" is used to specify the ABORT (only) rule for uncommitted multipart-uploads.
         */
        target?: string;
        /**
         * (Updatable) Specifies the age of objects to apply the rule to. The timeAmount is interpreted in units defined by the timeUnit parameter, and is calculated in relation to each object's Last-Modified time.
         */
        timeAmount: string;
        /**
         * (Updatable) The unit that should be used to interpret timeAmount.  Days are defined as starting and ending at midnight UTC. Years are defined as 365.2425 days long and likewise round up to the next midnight UTC.
         */
        timeUnit: string;
    }

    export interface ObjectLifecyclePolicyRuleObjectNameFilter {
        /**
         * (Updatable) An array of glob patterns to match the object names to exclude. An empty array is ignored. Exclusion patterns take precedence over inclusion patterns. A Glob pattern is a sequence of characters to match text. Any character that appears in the pattern, other than the special pattern characters described below, matches itself. Glob patterns must be between 1 and 1024 characters.
         */
        exclusionPatterns: string[];
        /**
         * (Updatable) An array of glob patterns to match the object names to include. An empty array includes all objects in the bucket. Exclusion patterns take precedence over inclusion patterns. A Glob pattern is a sequence of characters to match text. Any character that appears in the pattern, other than the special pattern characters described below, matches itself. Glob patterns must be between 1 and 1024 characters.
         */
        inclusionPatterns: string[];
        /**
         * (Updatable) An array of object name prefixes that the rule will apply to. An empty array means to include all objects.
         */
        inclusionPrefixes: string[];
    }

    export interface StorageObjectSourceUriDetails {
        /**
         * The name of the bucket for the source object.
         */
        bucket: string;
        /**
         * The entity tag to match the target object.
         */
        destinationObjectIfMatchEtag?: string;
        /**
         * The entity tag to not match the target object.
         */
        destinationObjectIfNoneMatchEtag?: string;
        /**
         * The top-level namespace of the source object.
         */
        namespace: string;
        /**
         * The name of the source object.
         */
        object: string;
        /**
         * The region of the source object.
         */
        region: string;
        /**
         * The entity tag to match the source object.
         */
        sourceObjectIfMatchEtag?: string;
        /**
         * The version id of the object to be restored.
         */
        sourceVersionId?: string;
    }
}

export namespace Oce {
    export interface GetOceInstancesFilter {
        /**
         * OceInstance Name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOceInstancesOceInstance {
        /**
         * a list of add-on features for the ocm instance
         */
        addOnFeatures: string[];
        /**
         * Admin Email for Notification
         */
        adminEmail: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * OceInstance description, can be updated
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique GUID identifier that is immutable on creation
         */
        guid: string;
        /**
         * Unique identifier that is immutable on creation
         */
        id: string;
        idcsAccessToken: string;
        /**
         * IDCS Tenancy Identifier
         */
        idcsTenancy: string;
        /**
         * Flag indicating whether the instance access is private or public
         */
        instanceAccessType: string;
        /**
         * Flag indicating whether the instance license is new cloud or bring your own license
         */
        instanceLicenseType: string;
        /**
         * Instance type based on its usage
         */
        instanceUsageType: string;
        /**
         * Details of the current state of the instance lifecycle
         */
        lifecycleDetails: string;
        /**
         * OceInstance Name
         */
        name: string;
        /**
         * Object Storage Namespace of tenancy
         */
        objectStorageNamespace: string;
        /**
         * SERVICE data. Example: `{"service": {"IDCS": "value"}}`
         */
        service: {[key: string]: any};
        /**
         * Filter results on lifecycleState.
         */
        state: string;
        /**
         * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        stateMessage: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The ID of the tenancy in which to list resources.
         */
        tenancyId: string;
        /**
         * Tenancy Name
         */
        tenancyName: string;
        /**
         * The time the the OceInstance was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the OceInstance was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
        /**
         * Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
         */
        upgradeSchedule: string;
        /**
         * Web Application Firewall(WAF) primary domain
         */
        wafPrimaryDomain: string;
    }

}

export namespace Ocvp {
    export interface GetExsiHostsEsxiHostCollection {
        /**
         * Current billing cycle end date. If the value in `currentSku` and `nextSku` are different, the value specified in `nextSku` becomes the new `currentSKU` when the `contractEndDate` is reached. Example: `2016-08-25T21:10:29.600Z`
         */
        billingContractEndDate: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
         */
        capacityReservationId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
         */
        compartmentId: string;
        /**
         * The availability domain of the ESXi host.
         */
        computeAvailabilityDomain: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute instance.
         */
        computeInstanceId: string;
        /**
         * The billing option currently used by the ESXi host. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
         */
        currentSku: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the esxi host that is failed.
         */
        failedEsxiHostId: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The date and time when the new esxi host should start billing cycle. [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2021-07-25T21:10:29.600Z`
         */
        gracePeriodEndDate: string;
        /**
         * The OCPU count of the ESXi host.
         */
        hostOcpuCount: number;
        /**
         * The compute shape name of the ESXi host. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
         */
        hostShapeName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host.
         */
        id: string;
        /**
         * The billing option to switch to after the current billing cycle ends. If `nextSku` is null or empty, `currentSku` continues to the next billing cycle. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
         */
        nextSku: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the esxi host that is newly created to replace the failed node.
         */
        replacementEsxiHostId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
         */
        sddcId: string;
        /**
         * The lifecycle state of the resource.
         */
        state: string;
        /**
         * The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetExsiHostsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSddcHcxOnPremLicense {
        /**
         * HCX on-premise license key value.
         */
        activationKey: string;
        /**
         * status of HCX on-premise license.
         */
        status: string;
        /**
         * Name of the system that consumed the HCX on-premise license
         */
        systemName: string;
    }

    export interface GetSddcsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSddcsSddcCollection {
        /**
         * The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
         */
        actualEsxiHostsCount: number;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
         */
        capacityReservationId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The name of the availability domain that the Compute instances are running in.  Example: `Uocm:PHX-AD-1`
         */
        computeAvailabilityDomain: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given display name exactly.
         */
        displayName: string;
        /**
         * The number of ESXi hosts in the SDDC.
         */
        esxiHostsCount: number;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        hcxAction: string;
        /**
         * The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
         */
        hcxFqdn: string;
        /**
         * The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
         */
        hcxInitialPassword: string;
        /**
         * The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys.
         */
        hcxOnPremKey: string;
        /**
         * The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
         */
        hcxOnPremLicenses: outputs.Ocvp.GetSddcsSddcCollectionHcxOnPremLicense[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
         */
        hcxPrivateIpId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the HCX component of the VMware environment.
         */
        hcxVlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
         */
        id: string;
        /**
         * The initial OCPU count of the SDDC's ESXi hosts.
         */
        initialHostOcpuCount: number;
        /**
         * The initial compute shape of the SDDC's ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
         */
        initialHostShapeName: string;
        /**
         * The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
         */
        initialSku: string;
        /**
         * A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix.
         */
        instanceDisplayNamePrefix: string;
        /**
         * Indicates whether HCX is enabled for this SDDC.
         */
        isHcxEnabled: boolean;
        /**
         * Indicates whether HCX Enterprise is enabled for this SDDC.
         */
        isHcxEnterpriseEnabled: boolean;
        /**
         * Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
         */
        isHcxPendingDowngrade: boolean;
        /**
         * Indicates whether shielded instance is enabled at the SDDC level.
         */
        isShieldedInstanceEnabled: boolean;
        /**
         * Indicates whether this SDDC is designated for only single ESXi host.
         */
        isSingleHostSddc: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 1 component of the VMware environment.
         */
        nsxEdgeUplink1vlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 2 component of the VMware environment.
         */
        nsxEdgeUplink2vlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
         */
        nsxEdgeUplinkIpId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge VTEP component of the VMware environment.
         */
        nsxEdgeVtepVlanId: string;
        /**
         * The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
         */
        nsxManagerFqdn: string;
        /**
         * The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
         */
        nsxManagerInitialPassword: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
         */
        nsxManagerPrivateIpId: string;
        /**
         * The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
         */
        nsxManagerUsername: string;
        /**
         * The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
         */
        nsxOverlaySegmentName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX VTEP component of the VMware environment.
         */
        nsxVtepVlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet used to provision the SDDC.
         */
        provisioningSubnetId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
         */
        provisioningVlanId: string;
        refreshHcxLicenseStatus: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
         */
        replicationVlanId: string;
        reservingHcxOnPremiseLicenseKeys: string[];
        /**
         * One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorizedKeys` file.
         */
        sshAuthorizedKeys: string;
        /**
         * The lifecycle state of the resource.
         */
        state: string;
        /**
         * The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeHcxBillingCycleEnd: string;
        /**
         * The date and time the SDDC's HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         */
        timeHcxLicenseStatusUpdated: string;
        /**
         * The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
        /**
         * The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
         */
        vcenterFqdn: string;
        /**
         * The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
         */
        vcenterInitialPassword: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
         */
        vcenterPrivateIpId: string;
        /**
         * The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
         */
        vcenterUsername: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vMotion component of the VMware environment.
         */
        vmotionVlanId: string;
        /**
         * In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
         */
        vmwareSoftwareVersion: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSAN component of the VMware environment.
         */
        vsanVlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere component of the VMware environment.
         */
        vsphereVlanId: string;
        /**
         * The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
         */
        workloadNetworkCidr: string;
    }

    export interface GetSddcsSddcCollectionHcxOnPremLicense {
        /**
         * HCX on-premise license key value.
         */
        activationKey: string;
        /**
         * status of HCX on-premise license.
         */
        status: string;
        /**
         * Name of the system that consumed the HCX on-premise license
         */
        systemName: string;
    }

    export interface GetSupportedHostShapesFilter {
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSupportedHostShapesItem {
        /**
         * The default OCPU count of the shape.
         */
        defaultOcpuCount: number;
        /**
         * Description of the shape.
         */
        description: string;
        /**
         * Indicates whether the shape supports shielded instances.
         */
        isSupportShieldedInstances: boolean;
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        /**
         * The family of the shape. ESXi hosts of one SDDC must have the same shape family.
         */
        shapeFamily: string;
        /**
         * Support OCPU count of the shape.
         */
        supportedOcpuCounts: number[];
        /**
         * The operations where you can use the shape. The operations can be CREATE_SDDC or CREATE_ESXI_HOST.
         */
        supportedOperations: string[];
        /**
         * The supported SDDC types for the shape.
         */
        supportedSddcTypes: string[];
        /**
         * The VMware software versions supported by the shape.
         */
        supportedVmwareSoftwareVersions: string[];
    }

    export interface GetSupportedSkusFilter {
        /**
         * name of SKU
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSupportedSkusItem {
        /**
         * name of SKU
         */
        name: string;
    }

    export interface GetSupportedVmwareSoftwareVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSupportedVmwareSoftwareVersionsItem {
        /**
         * A description of the software in the bundle.
         */
        description: string;
        /**
         * A short, unique string that identifies the version of bundled software.
         */
        version: string;
    }

    export interface SddcHcxOnPremLicense {
        /**
         * HCX on-premise license key value.
         */
        activationKey: string;
        /**
         * status of HCX on-premise license.
         */
        status: string;
        /**
         * Name of the system that consumed the HCX on-premise license
         */
        systemName: string;
    }

}

export namespace Oda {
    export interface GetOdaInstanceRestrictedOperation {
        /**
         * Name of the restricted operation.
         */
        operationName: string;
        /**
         * Name of the service restricting the operation.
         */
        restrictingService: string;
    }

    export interface GetOdaInstancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOdaInstancesOdaInstance {
        /**
         * A list of attachment identifiers for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
         */
        attachmentIds: string[];
        /**
         * A list of attachment types for this instance (if any). Use attachmentIds to get the details of the attachments.
         */
        attachmentTypes: string[];
        /**
         * List the Digital Assistant instances that belong to this compartment.
         */
        compartmentId: string;
        /**
         * URL for the connector's endpoint.
         */
        connectorUrl: string;
        /**
         * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the Digital Assistant instance.
         */
        description: string;
        /**
         * List only the information for the Digital Assistant instance with this user-friendly name. These names don't have to be unique and may change.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type, or scope. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique immutable identifier that was assigned when the instance was created.
         */
        id: string;
        /**
         * If isRoleBasedAccess is set to true, this property specifies the URL for the administration console used to manage the Identity Application instance Digital Assistant has created inside the user-specified identity domain.
         */
        identityAppConsoleUrl: string;
        /**
         * If isRoleBasedAccess is set to true, this property specifies the GUID of the Identity Application instance Digital Assistant has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this Digital Assistant instance for users within the identity domain.
         */
        identityAppGuid: string;
        /**
         * If isRoleBasedAccess is set to true, this property specifies the identity domain that is to be used to implement this type of authorzation. Digital Assistant will create an Identity Application instance and Application Roles within this identity domain. The caller may then perform and user roll mappings they like to grant access to users within the identity domain.
         */
        identityDomain: string;
        /**
         * A list of package ids imported into this instance (if any). Use GetImportedPackage to get the details of the imported packages.
         */
        importedPackageIds: string[];
        /**
         * A list of package names imported into this instance (if any). Use importedPackageIds field to get the details of the imported packages.
         */
        importedPackageNames: string[];
        /**
         * Should this Digital Assistant instance use role-based authorization via an identity domain (true) or use the default policy-based authorization via IAM policies (false)
         */
        isRoleBasedAccess: boolean;
        /**
         * The current sub-state of the Digital Assistant instance.
         */
        lifecycleSubState: string;
        /**
         * A list of restricted operations (across all attachments) for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
         */
        restrictedOperations: outputs.Oda.GetOdaInstancesOdaInstanceRestrictedOperation[];
        /**
         * Shape or size of the instance.
         */
        shapeName: string;
        /**
         * List only the Digital Assistant instances that are in this lifecycle state.
         */
        state: string;
        /**
         * A message that describes the current state in more detail. For example, actionable information about an instance that's in the `FAILED` state.
         */
        stateMessage: string;
        /**
         * When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         */
        timeCreated: string;
        /**
         * When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         */
        timeUpdated: string;
        /**
         * URL for the Digital Assistant web application that's associated with the instance.
         */
        webAppUrl: string;
    }

    export interface GetOdaInstancesOdaInstanceRestrictedOperation {
        /**
         * Name of the restricted operation.
         */
        operationName: string;
        /**
         * Name of the service restricting the operation.
         */
        restrictingService: string;
    }

    export interface OdaInstanceRestrictedOperation {
        /**
         * Name of the restricted operation.
         */
        operationName: string;
        /**
         * Name of the service restricting the operation.
         */
        restrictingService: string;
    }

}

export namespace OneSubsription {
    export interface GetAggregatedComputedUsagesAggregatedComputedUsage {
        /**
         * Aggregation of computed usages for the subscribed service.
         */
        aggregatedComputedUsages: outputs.OneSubsription.GetAggregatedComputedUsagesAggregatedComputedUsageAggregatedComputedUsage[];
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * Product part number for subscribed service line, called parent product.
         */
        parentProducts: outputs.OneSubsription.GetAggregatedComputedUsagesAggregatedComputedUsageParentProduct[];
        /**
         * Subscribed service line parent id
         */
        parentSubscribedServiceId: string;
        /**
         * Subscribed service asociated subscription plan number.
         */
        planNumber: string;
        /**
         * Subscribed services pricing model
         */
        pricingModel: string;
        /**
         * Inernal SPM Ratecard Id at line level
         */
        rateCardId: string;
        /**
         * Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
         */
        subscriptionId: string;
        /**
         * Subscribed services contract line end date, expressed in RFC 3339 timestamp format.
         */
        timeEnd: string;
        /**
         * Subscribed services contract line start date, expressed in RFC 3339 timestamp format.
         */
        timeStart: string;
    }

    export interface GetAggregatedComputedUsagesAggregatedComputedUsageAggregatedComputedUsage {
        /**
         * Sum of Computed Line Amount rounded
         */
        cost: string;
        /**
         * Sum of Computed Line Amount unrounded
         */
        costUnrounded: string;
        /**
         * Data Center Attribute as sent by MQS to SPM.
         */
        dataCenter: string;
        /**
         * Net Unit Price for the product in consideration.
         */
        netUnitPrice: string;
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetAggregatedComputedUsagesAggregatedComputedUsageAggregatedComputedUsageProduct[];
        /**
         * Total Quantity that was used for computation
         */
        quantity: string;
        /**
         * Metered Service date , expressed in RFC 3339 timestamp format.
         */
        timeMeteredOn: string;
        /**
         * Usage compute type in SPM.
         */
        type: string;
    }

    export interface GetAggregatedComputedUsagesAggregatedComputedUsageAggregatedComputedUsageProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Measure
         */
        unitOfMeasure: string;
    }

    export interface GetAggregatedComputedUsagesAggregatedComputedUsageParentProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Measure
         */
        unitOfMeasure: string;
    }

    export interface GetAggregatedComputedUsagesFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetBillingSchedulesBillingSchedule {
        /**
         * Billing schedule line net amount
         */
        amount: string;
        /**
         * Indicates the associated AR Customer transaction id a unique identifier existing on AR.
         */
        arCustomerTransactionId: string;
        /**
         * Indicates the associated AR Invoice Number
         */
        arInvoiceNumber: string;
        /**
         * Billing frequency
         */
        billingFrequency: string;
        /**
         * Billing schedule invoice status
         */
        invoiceStatus: string;
        /**
         * Billing schedule net unit price
         */
        netUnitPrice: string;
        /**
         * Order number associated with the Subscribed Service
         */
        orderNumber: string;
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetBillingSchedulesBillingScheduleProduct[];
        /**
         * Billing schedule quantity
         */
        quantity: string;
        /**
         * This param is used to get only the billing schedules for a particular Subscribed Service
         */
        subscribedServiceId: string;
        /**
         * Billing schedule end date
         */
        timeEnd: string;
        /**
         * Billing schedule invoicing date
         */
        timeInvoicing: string;
        /**
         * Billing schedule start date
         */
        timeStart: string;
    }

    export interface GetBillingSchedulesBillingScheduleProduct {
        /**
         * Product name
         */
        name: string;
        /**
         * Indicates the associated AR Invoice Number
         */
        partNumber: string;
    }

    export interface GetBillingSchedulesFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCommitmentsCommitment {
        /**
         * Commitment available amount
         */
        availableAmount: string;
        /**
         * Funded Allocation line value example: 12000.00
         */
        fundedAllocationValue: string;
        /**
         * SPM internal Commitment ID
         */
        id: string;
        /**
         * Commitment quantity
         */
        quantity: string;
        /**
         * This param is used to get the commitments for a particular subscribed service
         */
        subscribedServiceId: string;
        /**
         * Commitment end date
         */
        timeEnd: string;
        /**
         * Commitment start date
         */
        timeStart: string;
        /**
         * Commitment used amount
         */
        usedAmount: string;
    }

    export interface GetCommitmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetComputedUsageParentProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
    }

    export interface GetComputedUsageProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
    }

    export interface GetComputedUsagesComputedUsage {
        /**
         * Subscribed service commitmentId.
         */
        commitmentServiceId: string;
        /**
         * SPM Internal compute records source .
         */
        computeSource: string;
        computedUsageId: string;
        /**
         * Computed Line Amount not rounded
         */
        cost: string;
        /**
         * Computed Line Amount rounded.
         */
        costRounded: string;
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * Data Center Attribute as sent by MQS to SPM.
         */
        dataCenter: string;
        /**
         * SPM Internal computed usage Id , 32 character string
         */
        id: string;
        /**
         * Invoicing status for the aggregated compute usage
         */
        isInvoiced: boolean;
        /**
         * MQS Identfier send to SPM , SPM does not transform this attribute and is received as is.
         */
        mqsMessageId: string;
        /**
         * Net Unit Price for the product in consideration, price actual.
         */
        netUnitPrice: string;
        /**
         * SPM Internal Original usage Line number identifier in SPM coming from Metered Services entity.
         */
        originalUsageNumber: string;
        /**
         * Product part number for subscribed service line, called parent product.
         */
        parentProducts: outputs.OneSubsription.GetComputedUsagesComputedUsageParentProduct[];
        /**
         * Subscribed service line parent id
         */
        parentSubscribedServiceId: string;
        /**
         * Subscription plan number
         */
        planNumber: string;
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetComputedUsagesComputedUsageProduct[];
        /**
         * Total Quantity that was used for computation
         */
        quantity: string;
        /**
         * Ratecard Id at subscribed service level
         */
        rateCardId: string;
        /**
         * References the tier in the ratecard for that usage (OCI will be using the same reference to cross-reference for correctness on the usage csv report), comes from Entity OBSCNTR_IPT_PRODUCTTIER.
         */
        rateCardTierdId: string;
        /**
         * Computed Usage created time, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
        /**
         * Metered Service date, expressed in RFC 3339 timestamp format.
         */
        timeMeteredOn: string;
        /**
         * Usae computation date, expressed in RFC 3339 timestamp format.
         */
        timeOfArrival: string;
        /**
         * Computed Usage updated time, expressed in RFC 3339 timestamp format.
         */
        timeUpdated: string;
        /**
         * Usage compute type in SPM.
         */
        type: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
        /**
         * SPM Internal usage Line number identifier in SPM coming from Metered Services entity.
         */
        usageNumber: string;
    }

    export interface GetComputedUsagesComputedUsageParentProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
    }

    export interface GetComputedUsagesComputedUsageProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
    }

    export interface GetComputedUsagesFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInvoiceLineComputedUsagesFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInvoiceLineComputedUsagesInvoicelineComputedUsage {
        /**
         * Sum of Usage/Service Billing Line net Amount
         */
        cost: number;
        /**
         * Computed Line Amount rounded.
         */
        costRounded: number;
        /**
         * Net Unit Price for the product in consideration, price actual.
         */
        netUnitPrice: number;
        /**
         * Product description
         */
        parentProducts: outputs.OneSubsription.GetInvoiceLineComputedUsagesInvoicelineComputedUsageParentProduct[];
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetInvoiceLineComputedUsagesInvoicelineComputedUsageProduct[];
        /**
         * Total Quantity that was used for computation
         */
        quantity: number;
        /**
         * Metered Service date.
         */
        timeMeteredOn: string;
        /**
         * Usage compute type in SPM.
         */
        type: string;
    }

    export interface GetInvoiceLineComputedUsagesInvoicelineComputedUsageParentProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Measure
         */
        unitOfMeasure: string;
    }

    export interface GetInvoiceLineComputedUsagesInvoicelineComputedUsageProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Measure
         */
        unitOfMeasure: string;
    }

    export interface GetInvoicesFilter {
        /**
         * Payment Term name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInvoicesInvoice {
        /**
         * AR Invoice Numbers comma separated under one invoice
         */
        arInvoices: string;
        /**
         * Address.
         */
        billToAddresses: outputs.OneSubsription.GetInvoicesInvoiceBillToAddress[];
        /**
         * User.
         */
        billToContacts: outputs.OneSubsription.GetInvoicesInvoiceBillToContact[];
        /**
         * Business partner.
         */
        billToCustomers: outputs.OneSubsription.GetInvoicesInvoiceBillToCustomer[];
        /**
         * User that created the Payment term
         */
        createdBy: string;
        /**
         * Currency details
         */
        currencies: outputs.OneSubsription.GetInvoicesInvoiceCurrency[];
        /**
         * Invoice Lines under particular invoice.
         */
        invoiceLines: outputs.OneSubsription.GetInvoicesInvoiceInvoiceLine[];
        /**
         * Organization details
         */
        organizations: outputs.OneSubsription.GetInvoicesInvoiceOrganization[];
        /**
         * Payment Method
         */
        paymentMethod: string;
        /**
         * Payment Term details
         */
        paymentTerms: outputs.OneSubsription.GetInvoicesInvoicePaymentTerm[];
        /**
         * Receipt Method of Payment Mode
         */
        receiptMethod: string;
        /**
         * SPM Document Number is an functional identifier for invoice in SPM
         */
        spmInvoiceNumber: string;
        /**
         * Document Status in SPM which depicts current state of invoice
         */
        status: string;
        /**
         * Invoice associated subscription plan number.
         */
        subscriptionNumber: string;
        /**
         * SPM Invocie creation date
         */
        timeCreated: string;
        /**
         * Invoice Date
         */
        timeInvoiceDate: string;
        /**
         * SPM Invoice updated date
         */
        timeUpdated: string;
        /**
         * Document Type in SPM like SPM Invoice,SPM Credit Memo etc.,
         */
        type: string;
        /**
         * User that updated SPM Invoice
         */
        updatedBy: string;
    }

    export interface GetInvoicesInvoiceBillToAddress {
        /**
         * Bill to site use Id.
         */
        billSiteUseId: string;
        /**
         * Identify as the customer's billing address.
         */
        isBillTo: boolean;
        /**
         * Identify as the customer's shipping address.
         */
        isShipTo: boolean;
        /**
         * Address location.
         */
        locations: outputs.OneSubsription.GetInvoicesInvoiceBillToAddressLocation[];
        /**
         * Payment Term name
         */
        name: string;
        /**
         * Phone.
         */
        phone: string;
        /**
         * Service to site use Id.
         */
        service2siteUseId: string;
        /**
         * TCA customer account site Id.
         */
        tcaCustAcctSiteId: string;
        /**
         * Party site number.
         */
        tcaPartySiteNumber: string;
    }

    export interface GetInvoicesInvoiceBillToAddressLocation {
        /**
         * Address first line.
         */
        address1: string;
        /**
         * Address second line.
         */
        address2: string;
        /**
         * City.
         */
        city: string;
        /**
         * Country.
         */
        country: string;
        /**
         * Postal code.
         */
        postalCode: string;
        /**
         * Region.
         */
        region: string;
        /**
         * TCA Location identifier.
         */
        tcaLocationId: string;
    }

    export interface GetInvoicesInvoiceBillToContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Payment Term name
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * userName.
         */
        userName: string;
    }

    export interface GetInvoicesInvoiceBillToCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Payment Term name
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA customer account number.
         */
        tcaCustomerAccountNumber: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetInvoicesInvoiceCurrency {
        /**
         * Currency Code
         */
        isoCode: string;
        /**
         * Payment Term name
         */
        name: string;
        /**
         * Standard Precision of the Currency
         */
        stdPrecision: string;
    }

    export interface GetInvoicesInvoiceInvoiceLine {
        /**
         * AR Invoice Number for Invoice Line
         */
        arInvoiceNumber: string;
        /**
         * Data Center Attribute.
         */
        dataCenter: string;
        /**
         * SPM Invoice Line internal identifier
         */
        id: string;
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetInvoicesInvoiceInvoiceLineProduct[];
        /**
         * Usage end time
         */
        timeEnd: string;
        /**
         * Usage start time
         */
        timeStart: string;
    }

    export interface GetInvoicesInvoiceInvoiceLineProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Payment Term name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Measure
         */
        unitOfMeasure: string;
    }

    export interface GetInvoicesInvoiceOrganization {
        /**
         * Payment Term name
         */
        name: string;
        /**
         * Organization ID
         */
        number: number;
    }

    export interface GetInvoicesInvoicePaymentTerm {
        /**
         * User that created the Payment term
         */
        createdBy: string;
        /**
         * Payment term Description
         */
        description: string;
        /**
         * Payment term active flag
         */
        isActive: boolean;
        /**
         * Payment Term name
         */
        name: string;
        /**
         * SPM Invocie creation date
         */
        timeCreated: string;
        /**
         * SPM Invoice updated date
         */
        timeUpdated: string;
        /**
         * User that updated SPM Invoice
         */
        updatedBy: string;
        /**
         * Payment Term value
         */
        value: string;
    }

    export interface GetOrganizationSubscriptionsFilter {
        /**
         * Currency name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOrganizationSubscriptionsOrganizationSubscription {
        /**
         * Currency details
         */
        currencies: outputs.OneSubsription.GetOrganizationSubscriptionsOrganizationSubscriptionCurrency[];
        /**
         * SPM internal Subscription ID
         */
        id: string;
        /**
         * Customer friendly service name provided by PRG
         */
        serviceName: string;
        /**
         * Status of the plan
         */
        status: string;
        /**
         * Represents the date when the last service of the subscription ends
         */
        timeEnd: string;
        /**
         * Represents the date when the first service of the subscription was activated
         */
        timeStart: string;
        /**
         * Total aggregate TCLV of all lines for the subscription including expired, active, and signed
         */
        totalValue: string;
        /**
         * Subscription Type i.e. IAAS,SAAS,PAAS
         */
        type: string;
    }

    export interface GetOrganizationSubscriptionsOrganizationSubscriptionCurrency {
        /**
         * Currency Code
         */
        isoCode: string;
        /**
         * Currency name
         */
        name: string;
        /**
         * Standard Precision of the Currency
         */
        stdPrecision: string;
    }

    export interface GetRatecardsFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRatecardsRateCard {
        /**
         * Currency details
         */
        currencies: outputs.OneSubsription.GetRatecardsRateCardCurrency[];
        /**
         * Rate card discretionary discount percentage
         */
        discretionaryDiscountPercentage: string;
        /**
         * Rate card price tier flag
         */
        isTier: boolean;
        /**
         * Rate card tier net unit price
         */
        netUnitPrice: string;
        /**
         * Rate card tier overage price
         */
        overagePrice: string;
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetRatecardsRateCardProduct[];
        /**
         * List of tiered rate card prices
         */
        rateCardTiers: outputs.OneSubsription.GetRatecardsRateCardRateCardTier[];
        /**
         * SPM internal Subscribed Service ID
         */
        subscribedServiceId: string;
        /**
         * Rate card end date
         */
        timeEnd: string;
        /**
         * Rate card start date
         */
        timeStart: string;
    }

    export interface GetRatecardsRateCardCurrency {
        /**
         * Currency Code
         */
        isoCode: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Standard Precision of the Currency
         */
        stdPrecision: string;
    }

    export interface GetRatecardsRateCardProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * This param is used to get the rate card(s) filterd by the partNumber
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of measure
         */
        unitOfMeasure: string;
    }

    export interface GetRatecardsRateCardRateCardTier {
        /**
         * Rate card tier net unit price
         */
        netUnitPrice: string;
        /**
         * Rate card tier overage price
         */
        overagePrice: string;
        /**
         * Rate card tier quantity range
         */
        upToQuantity: string;
    }

    export interface GetSubscribedServiceBillToAddress {
        /**
         * Bill to site use Id.
         */
        billSiteUseId: string;
        /**
         * Identify as the customer shipping address.
         */
        isBillTo: boolean;
        /**
         * Identify as the customer invoicing address.
         */
        isShipTo: boolean;
        /**
         * Address location.
         */
        locations: outputs.OneSubsription.GetSubscribedServiceBillToAddressLocation[];
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phone.
         */
        phone: string;
        /**
         * Service to site use Id.
         */
        service2siteUseId: string;
        /**
         * TCA customer account site Id.
         */
        tcaCustAcctSiteId: string;
        /**
         * Party site number.
         */
        tcaPartySiteNumber: string;
    }

    export interface GetSubscribedServiceBillToAddressLocation {
        /**
         * Address first line.
         */
        address1: string;
        /**
         * Address second line.
         */
        address2: string;
        /**
         * City.
         */
        city: string;
        /**
         * Country.
         */
        country: string;
        /**
         * Postal code.
         */
        postalCode: string;
        /**
         * Region.
         */
        region: string;
        /**
         * Region.
         */
        tcaLocationId: string;
    }

    export interface GetSubscribedServiceBillToContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServiceBillToCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscribedServiceCommitmentService {
        /**
         * Commitment available amount
         */
        availableAmount: string;
        /**
         * Funded Allocation line value example: 12000.00
         */
        fundedAllocationValue: string;
        /**
         * Subscribed service line net amount
         */
        lineNetAmount: string;
        /**
         * Subscribed service quantity
         */
        quantity: string;
        /**
         * Subscribed service end date
         */
        timeEnd: string;
        /**
         * Subscribed service start date
         */
        timeStart: string;
    }

    export interface GetSubscribedServiceEndUserAddress {
        /**
         * Bill to site use Id.
         */
        billSiteUseId: string;
        /**
         * Identify as the customer shipping address.
         */
        isBillTo: boolean;
        /**
         * Identify as the customer invoicing address.
         */
        isShipTo: boolean;
        /**
         * Address location.
         */
        locations: outputs.OneSubsription.GetSubscribedServiceEndUserAddressLocation[];
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phone.
         */
        phone: string;
        /**
         * Service to site use Id.
         */
        service2siteUseId: string;
        /**
         * TCA customer account site Id.
         */
        tcaCustAcctSiteId: string;
        /**
         * Party site number.
         */
        tcaPartySiteNumber: string;
    }

    export interface GetSubscribedServiceEndUserAddressLocation {
        /**
         * Address first line.
         */
        address1: string;
        /**
         * Address second line.
         */
        address2: string;
        /**
         * City.
         */
        city: string;
        /**
         * Country.
         */
        country: string;
        /**
         * Postal code.
         */
        postalCode: string;
        /**
         * Region.
         */
        region: string;
        /**
         * Region.
         */
        tcaLocationId: string;
    }

    export interface GetSubscribedServiceEndUserContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServiceEndUserCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscribedServicePaymentTerm {
        /**
         * User that created the Payment term
         */
        createdBy: string;
        /**
         * Payment term Description
         */
        description: string;
        /**
         * Payment term active flag
         */
        isActive: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Subscribed service creation date
         */
        timeCreated: string;
        /**
         * Subscribed service last update date
         */
        timeUpdated: string;
        /**
         * User that updated the subscribed service
         */
        updatedBy: string;
        /**
         * Payment Term value
         */
        value: string;
    }

    export interface GetSubscribedServiceProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Product part numner
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of measure
         */
        unitOfMeasure: string;
    }

    export interface GetSubscribedServiceRateCard {
        /**
         * Currency details
         */
        currencies: outputs.OneSubsription.GetSubscribedServiceRateCardCurrency[];
        /**
         * Rate card discretionary discount percentage
         */
        discretionaryDiscountPercentage: string;
        /**
         * Rate card price tier flag
         */
        isTier: boolean;
        /**
         * Rate card tier net unit price
         */
        netUnitPrice: string;
        /**
         * Rate card tier overage price
         */
        overagePrice: string;
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetSubscribedServiceRateCardProduct[];
        /**
         * List of tiered rate card prices
         */
        rateCardTiers: outputs.OneSubsription.GetSubscribedServiceRateCardRateCardTier[];
        /**
         * The Subscribed Service Id
         */
        subscribedServiceId: string;
        /**
         * Subscribed service end date
         */
        timeEnd: string;
        /**
         * Subscribed service start date
         */
        timeStart: string;
    }

    export interface GetSubscribedServiceRateCardCurrency {
        /**
         * Currency Code
         */
        isoCode: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Standard Precision of the Currency
         */
        stdPrecision: string;
    }

    export interface GetSubscribedServiceRateCardProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Product part numner
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of measure
         */
        unitOfMeasure: string;
    }

    export interface GetSubscribedServiceRateCardRateCardTier {
        /**
         * Rate card tier net unit price
         */
        netUnitPrice: string;
        /**
         * Rate card tier overage price
         */
        overagePrice: string;
        /**
         * Rate card tier quantity range
         */
        upToQuantity: string;
    }

    export interface GetSubscribedServiceResellerAddress {
        /**
         * Bill to site use Id.
         */
        billSiteUseId: string;
        /**
         * Identify as the customer shipping address.
         */
        isBillTo: boolean;
        /**
         * Identify as the customer invoicing address.
         */
        isShipTo: boolean;
        /**
         * Address location.
         */
        locations: outputs.OneSubsription.GetSubscribedServiceResellerAddressLocation[];
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phone.
         */
        phone: string;
        /**
         * Service to site use Id.
         */
        service2siteUseId: string;
        /**
         * TCA customer account site Id.
         */
        tcaCustAcctSiteId: string;
        /**
         * Party site number.
         */
        tcaPartySiteNumber: string;
    }

    export interface GetSubscribedServiceResellerAddressLocation {
        /**
         * Address first line.
         */
        address1: string;
        /**
         * Address second line.
         */
        address2: string;
        /**
         * City.
         */
        city: string;
        /**
         * Country.
         */
        country: string;
        /**
         * Postal code.
         */
        postalCode: string;
        /**
         * Region.
         */
        region: string;
        /**
         * Region.
         */
        tcaLocationId: string;
    }

    export interface GetSubscribedServiceResellerContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServiceResellerCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscribedServiceServiceToAddress {
        /**
         * Bill to site use Id.
         */
        billSiteUseId: string;
        /**
         * Identify as the customer shipping address.
         */
        isBillTo: boolean;
        /**
         * Identify as the customer invoicing address.
         */
        isShipTo: boolean;
        /**
         * Address location.
         */
        locations: outputs.OneSubsription.GetSubscribedServiceServiceToAddressLocation[];
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phone.
         */
        phone: string;
        /**
         * Service to site use Id.
         */
        service2siteUseId: string;
        /**
         * TCA customer account site Id.
         */
        tcaCustAcctSiteId: string;
        /**
         * Party site number.
         */
        tcaPartySiteNumber: string;
    }

    export interface GetSubscribedServiceServiceToAddressLocation {
        /**
         * Address first line.
         */
        address1: string;
        /**
         * Address second line.
         */
        address2: string;
        /**
         * City.
         */
        city: string;
        /**
         * Country.
         */
        country: string;
        /**
         * Postal code.
         */
        postalCode: string;
        /**
         * Region.
         */
        region: string;
        /**
         * Region.
         */
        tcaLocationId: string;
    }

    export interface GetSubscribedServiceServiceToContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServiceServiceToCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscribedServiceSoldToContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServiceSoldToCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscribedServicesFilter {
        /**
         * Commercial name also called customer name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubscribedServicesSubscribedService {
        /**
         * Subscribed service admin email id
         */
        adminEmail: string;
        /**
         * Subscribed service agreement ID
         */
        agreementId: string;
        /**
         * Subscribed service agrrement name
         */
        agreementName: string;
        /**
         * Subscribed service agrrement type
         */
        agreementType: string;
        /**
         * Commitment available amount
         */
        availableAmount: string;
        /**
         * Address.
         */
        billToAddresses: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceBillToAddress[];
        /**
         * User.
         */
        billToContacts: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceBillToContact[];
        /**
         * Business partner.
         */
        billToCustomers: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceBillToCustomer[];
        /**
         * Subscribed service invoice frequency
         */
        billingFrequency: string;
        /**
         * Booking Opportunity Number of Subscribed Service
         */
        bookingOptyNumber: string;
        /**
         * Subscribed service buyer email id
         */
        buyerEmail: string;
        /**
         * Subscribed service commitment schedule Id
         */
        commitmentScheduleId: string;
        /**
         * List of Commitment services of a line
         */
        commitmentServices: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceCommitmentService[];
        /**
         * User that created the Payment term
         */
        createdBy: string;
        /**
         * Subscribed service credit percentage
         */
        creditPercentage: string;
        /**
         * Subscribed service CSI number
         */
        csi: string;
        /**
         * Identifier for a customer's transactions for purchase of ay oracle services
         */
        customerTransactionReference: string;
        /**
         * Subscribed service data center
         */
        dataCenter: string;
        /**
         * Subscribed service data center region
         */
        dataCenterRegion: string;
        /**
         * Subscribed service eligible to renew field
         */
        eligibleToRenew: string;
        /**
         * Address.
         */
        endUserAddresses: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceEndUserAddress[];
        /**
         * User.
         */
        endUserContacts: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceEndUserContact[];
        /**
         * Business partner.
         */
        endUserCustomers: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceEndUserCustomer[];
        /**
         * Subscribed service fulfillment set
         */
        fulfillmentSet: string;
        /**
         * Funded Allocation line value example: 12000.00
         */
        fundedAllocationValue: string;
        /**
         * SPM internal Subscribed Service ID
         */
        id: string;
        /**
         * Indicates if a service can recieve usages and consequently have available amounts computed
         */
        isAllowance: boolean;
        /**
         * If true compares rate between ratecard and the active pricelist and minimum rate would be fetched
         */
        isCapToPriceList: boolean;
        /**
         * Used in context of service credit lines
         */
        isCreditEnabled: boolean;
        /**
         * Indicator on whether or not there has been usage for the subscribed service
         */
        isHavingUsage: boolean;
        /**
         * Subscribed service intent to pay flag
         */
        isIntentToPay: boolean;
        /**
         * Subscribed service payg flag
         */
        isPayg: boolean;
        /**
         * Indicates if the Subscribed service has a single ratecard
         */
        isSingleRateCard: boolean;
        /**
         * Indicates if the commitment lines can have different quantities
         */
        isVariableCommitment: boolean;
        /**
         * Subscribed service line net amount
         */
        lineNetAmount: string;
        /**
         * Subscribed service Major Set
         */
        majorSet: string;
        /**
         * Rate card tier net unit price
         */
        netUnitPrice: string;
        /**
         * Subscribed service operation type
         */
        operationType: string;
        /**
         * Sales Order Header associated to the subscribed service
         */
        orderHeaderId: string;
        /**
         * Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
         */
        orderLineId: string;
        /**
         * Sales Order Line Number associated to the subscribed service
         */
        orderLineNumber: number;
        /**
         * Sales Order Number associated to the subscribed service
         */
        orderNumber: string;
        /**
         * Order Type of Subscribed Service
         */
        orderType: string;
        /**
         * Subscribed service Promotion Amount
         */
        originalPromoAmount: string;
        /**
         * Overage Bill To of Subscribed Service
         */
        overageBillTo: string;
        /**
         * Subscribed service Overage Discount Percentage
         */
        overageDiscountPercentage: string;
        /**
         * Overage Policy of Subscribed Service
         */
        overagePolicy: string;
        /**
         * Subscribed service partner credit amount
         */
        partnerCreditAmount: string;
        /**
         * This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
         */
        partnerTransactionType: string;
        /**
         * Pay As You Go policy of Subscribed Service (Can be null - indicating no payg policy)
         */
        paygPolicy: string;
        /**
         * Payment Method of Subscribed Service
         */
        paymentMethod: string;
        /**
         * Payment Number of Subscribed Service
         */
        paymentNumber: string;
        /**
         * Payment Term details
         */
        paymentTerms: outputs.OneSubsription.GetSubscribedServicesSubscribedServicePaymentTerm[];
        /**
         * Indicates the period for which the commitment amount can be utilised exceeding which the amount lapses. Also used in calculation of total contract line value
         */
        pricePeriod: string;
        /**
         * Subscribed service pricing model
         */
        pricingModel: string;
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceProduct[];
        /**
         * Subscribed service program type
         */
        programType: string;
        /**
         * Not null if this service has an associated promotion line in SPM. Contains the line identifier from Order Management of  the associated promo line.
         */
        promoOrderLineId: string;
        /**
         * Subscribed service promotion type
         */
        promoType: string;
        /**
         * Promotion Pricing Type of Subscribed Service (Can be null - indicating no promotion pricing)
         */
        promotionPricingType: string;
        /**
         * Subscribed service provisioning source
         */
        provisioningSource: string;
        /**
         * Subscribed service quantity
         */
        quantity: string;
        /**
         * Subscribed service Rate Card Discount Percentage
         */
        rateCardDiscountPercentage: string;
        /**
         * List of Rate Cards of a Subscribed Service
         */
        rateCards: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceRateCard[];
        /**
         * SPM Ratecard Type
         */
        ratecardType: string;
        /**
         * Subscribed service Opportunity Id
         */
        renewalOptyId: string;
        /**
         * Renewal Opportunity Number of Subscribed Service
         */
        renewalOptyNumber: string;
        /**
         * Renewal Opportunity Type of Subscribed Service
         */
        renewalOptyType: string;
        /**
         * SPM renewed Subscription ID
         */
        renewedSubscribedServiceId: string;
        /**
         * Address.
         */
        resellerAddresses: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceResellerAddress[];
        /**
         * User.
         */
        resellerContacts: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceResellerContact[];
        /**
         * Business partner.
         */
        resellerCustomers: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceResellerCustomer[];
        /**
         * Subscribed service Revenue Line Id
         */
        revenueLineId: string;
        /**
         * Revenue Line NUmber of Subscribed Service
         */
        revenueLineNumber: string;
        /**
         * Subscribed service Revised ARR
         */
        revisedArrInLc: string;
        /**
         * Subscribed service Revised ARR in Standard Currency
         */
        revisedArrInSc: string;
        /**
         * Subscribed service sales account party id
         */
        salesAccountPartyId: string;
        /**
         * Sales Channel of Subscribed Service
         */
        salesChannel: string;
        /**
         * Subscribed service line number
         */
        serialNumber: string;
        /**
         * Address.
         */
        serviceToAddresses: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceServiceToAddress[];
        /**
         * User.
         */
        serviceToContacts: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceServiceToContact[];
        /**
         * Business partner.
         */
        serviceToCustomers: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceServiceToCustomer[];
        /**
         * User.
         */
        soldToContacts: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceSoldToContact[];
        /**
         * Business partner.
         */
        soldToCustomers: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceSoldToCustomer[];
        /**
         * Subscribed service start date type
         */
        startDateType: string;
        /**
         * This param is used to filter subscribed services based on its status
         */
        status: string;
        /**
         * Line level Subscription Id
         */
        subscriptionId: string;
        /**
         * Subscribed service source
         */
        subscriptionSource: string;
        /**
         * Subscribed service System ARR
         */
        systemArrInLc: string;
        /**
         * Subscribed service System ARR in Standard Currency
         */
        systemArrInSc: string;
        /**
         * Subscribed service System ATR-ARR
         */
        systemAtrArrInLc: string;
        /**
         * Subscribed service System ATR-ARR in Standard Currency
         */
        systemAtrArrInSc: string;
        /**
         * Term value in Months
         */
        termValue: string;
        /**
         * Term value UOM
         */
        termValueUom: string;
        /**
         * Subscribed service agrrement end date
         */
        timeAgreementEnd: string;
        /**
         * Subscribed service creation date
         */
        timeCreated: string;
        /**
         * Subscribed service customer config date
         */
        timeCustomerConfig: string;
        /**
         * Subscribed service end date
         */
        timeEnd: string;
        /**
         * Subscribed service Major Set End date
         */
        timeMajorsetEnd: string;
        /**
         * Subscribed service Major Set Start date
         */
        timeMajorsetStart: string;
        /**
         * Subscribed service payment expiry date
         */
        timePaymentExpiry: string;
        /**
         * Subscribed service provisioning date
         */
        timeProvisioned: string;
        /**
         * Subscribed service service configuration email sent date
         */
        timeServiceConfigurationEmailSent: string;
        /**
         * Subscribed service start date
         */
        timeStart: string;
        /**
         * Subscribed service last update date
         */
        timeUpdated: string;
        /**
         * Subscribed service welcome email sent date
         */
        timeWelcomeEmailSent: string;
        /**
         * Subscribed service total value
         */
        totalValue: string;
        /**
         * Subscribed service Transaction Extension Id
         */
        transactionExtensionId: string;
        /**
         * Subscribed Service line type
         */
        type: string;
        /**
         * User that updated the subscribed service
         */
        updatedBy: string;
        /**
         * Subscribed service used amount
         */
        usedAmount: string;
    }

    export interface GetSubscribedServicesSubscribedServiceBillToAddress {
        /**
         * Bill to site use Id.
         */
        billSiteUseId: string;
        /**
         * Identify as the customer shipping address.
         */
        isBillTo: boolean;
        /**
         * Identify as the customer invoicing address.
         */
        isShipTo: boolean;
        /**
         * Address location.
         */
        locations: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceBillToAddressLocation[];
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phone.
         */
        phone: string;
        /**
         * Service to site use Id.
         */
        service2siteUseId: string;
        /**
         * TCA customer account site Id.
         */
        tcaCustAcctSiteId: string;
        /**
         * Party site number.
         */
        tcaPartySiteNumber: string;
    }

    export interface GetSubscribedServicesSubscribedServiceBillToAddressLocation {
        /**
         * Address first line.
         */
        address1: string;
        /**
         * Address second line.
         */
        address2: string;
        /**
         * City.
         */
        city: string;
        /**
         * Country.
         */
        country: string;
        /**
         * Postal code.
         */
        postalCode: string;
        /**
         * Region.
         */
        region: string;
        /**
         * Region.
         */
        tcaLocationId: string;
    }

    export interface GetSubscribedServicesSubscribedServiceBillToContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServicesSubscribedServiceBillToCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscribedServicesSubscribedServiceCommitmentService {
        /**
         * Commitment available amount
         */
        availableAmount: string;
        /**
         * Funded Allocation line value example: 12000.00
         */
        fundedAllocationValue: string;
        /**
         * Subscribed service line net amount
         */
        lineNetAmount: string;
        /**
         * Subscribed service quantity
         */
        quantity: string;
        /**
         * Subscribed service end date
         */
        timeEnd: string;
        /**
         * Subscribed service start date
         */
        timeStart: string;
    }

    export interface GetSubscribedServicesSubscribedServiceEndUserAddress {
        /**
         * Bill to site use Id.
         */
        billSiteUseId: string;
        /**
         * Identify as the customer shipping address.
         */
        isBillTo: boolean;
        /**
         * Identify as the customer invoicing address.
         */
        isShipTo: boolean;
        /**
         * Address location.
         */
        locations: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceEndUserAddressLocation[];
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phone.
         */
        phone: string;
        /**
         * Service to site use Id.
         */
        service2siteUseId: string;
        /**
         * TCA customer account site Id.
         */
        tcaCustAcctSiteId: string;
        /**
         * Party site number.
         */
        tcaPartySiteNumber: string;
    }

    export interface GetSubscribedServicesSubscribedServiceEndUserAddressLocation {
        /**
         * Address first line.
         */
        address1: string;
        /**
         * Address second line.
         */
        address2: string;
        /**
         * City.
         */
        city: string;
        /**
         * Country.
         */
        country: string;
        /**
         * Postal code.
         */
        postalCode: string;
        /**
         * Region.
         */
        region: string;
        /**
         * Region.
         */
        tcaLocationId: string;
    }

    export interface GetSubscribedServicesSubscribedServiceEndUserContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServicesSubscribedServiceEndUserCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscribedServicesSubscribedServicePaymentTerm {
        /**
         * User that created the Payment term
         */
        createdBy: string;
        /**
         * Payment term Description
         */
        description: string;
        /**
         * Payment term active flag
         */
        isActive: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Subscribed service creation date
         */
        timeCreated: string;
        /**
         * Subscribed service last update date
         */
        timeUpdated: string;
        /**
         * User that updated the subscribed service
         */
        updatedBy: string;
        /**
         * Payment Term value
         */
        value: string;
    }

    export interface GetSubscribedServicesSubscribedServiceProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Product part numner
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of measure
         */
        unitOfMeasure: string;
    }

    export interface GetSubscribedServicesSubscribedServiceRateCard {
        /**
         * Currency details
         */
        currencies: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceRateCardCurrency[];
        /**
         * Rate card discretionary discount percentage
         */
        discretionaryDiscountPercentage: string;
        /**
         * Rate card price tier flag
         */
        isTier: boolean;
        /**
         * Rate card tier net unit price
         */
        netUnitPrice: string;
        /**
         * Rate card tier overage price
         */
        overagePrice: string;
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceRateCardProduct[];
        /**
         * List of tiered rate card prices
         */
        rateCardTiers: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceRateCardRateCardTier[];
        /**
         * SPM internal Subscribed Service ID
         */
        subscribedServiceId: string;
        /**
         * Subscribed service end date
         */
        timeEnd: string;
        /**
         * Subscribed service start date
         */
        timeStart: string;
    }

    export interface GetSubscribedServicesSubscribedServiceRateCardCurrency {
        /**
         * Currency Code
         */
        isoCode: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Standard Precision of the Currency
         */
        stdPrecision: string;
    }

    export interface GetSubscribedServicesSubscribedServiceRateCardProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Product part numner
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of measure
         */
        unitOfMeasure: string;
    }

    export interface GetSubscribedServicesSubscribedServiceRateCardRateCardTier {
        /**
         * Rate card tier net unit price
         */
        netUnitPrice: string;
        /**
         * Rate card tier overage price
         */
        overagePrice: string;
        /**
         * Rate card tier quantity range
         */
        upToQuantity: string;
    }

    export interface GetSubscribedServicesSubscribedServiceResellerAddress {
        /**
         * Bill to site use Id.
         */
        billSiteUseId: string;
        /**
         * Identify as the customer shipping address.
         */
        isBillTo: boolean;
        /**
         * Identify as the customer invoicing address.
         */
        isShipTo: boolean;
        /**
         * Address location.
         */
        locations: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceResellerAddressLocation[];
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phone.
         */
        phone: string;
        /**
         * Service to site use Id.
         */
        service2siteUseId: string;
        /**
         * TCA customer account site Id.
         */
        tcaCustAcctSiteId: string;
        /**
         * Party site number.
         */
        tcaPartySiteNumber: string;
    }

    export interface GetSubscribedServicesSubscribedServiceResellerAddressLocation {
        /**
         * Address first line.
         */
        address1: string;
        /**
         * Address second line.
         */
        address2: string;
        /**
         * City.
         */
        city: string;
        /**
         * Country.
         */
        country: string;
        /**
         * Postal code.
         */
        postalCode: string;
        /**
         * Region.
         */
        region: string;
        /**
         * Region.
         */
        tcaLocationId: string;
    }

    export interface GetSubscribedServicesSubscribedServiceResellerContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServicesSubscribedServiceResellerCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscribedServicesSubscribedServiceServiceToAddress {
        /**
         * Bill to site use Id.
         */
        billSiteUseId: string;
        /**
         * Identify as the customer shipping address.
         */
        isBillTo: boolean;
        /**
         * Identify as the customer invoicing address.
         */
        isShipTo: boolean;
        /**
         * Address location.
         */
        locations: outputs.OneSubsription.GetSubscribedServicesSubscribedServiceServiceToAddressLocation[];
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phone.
         */
        phone: string;
        /**
         * Service to site use Id.
         */
        service2siteUseId: string;
        /**
         * TCA customer account site Id.
         */
        tcaCustAcctSiteId: string;
        /**
         * Party site number.
         */
        tcaPartySiteNumber: string;
    }

    export interface GetSubscribedServicesSubscribedServiceServiceToAddressLocation {
        /**
         * Address first line.
         */
        address1: string;
        /**
         * Address second line.
         */
        address2: string;
        /**
         * City.
         */
        city: string;
        /**
         * Country.
         */
        country: string;
        /**
         * Postal code.
         */
        postalCode: string;
        /**
         * Region.
         */
        region: string;
        /**
         * Region.
         */
        tcaLocationId: string;
    }

    export interface GetSubscribedServicesSubscribedServiceServiceToContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServicesSubscribedServiceServiceToCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscribedServicesSubscribedServiceSoldToContact {
        /**
         * Email.
         */
        email: string;
        /**
         * First name.
         */
        firstName: string;
        /**
         * Last name.
         */
        lastName: string;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * TCA contact ID.
         */
        tcaContactId: string;
        /**
         * TCA customer account site ID.
         */
        tcaCustAccntSiteId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * Username.
         */
        username: string;
    }

    export interface GetSubscribedServicesSubscribedServiceSoldToCustomer {
        /**
         * Customer chain type.
         */
        customerChainType: string;
        /**
         * The business partner is chain customer or not.
         */
        isChainCustomer: boolean;
        /**
         * The business partner is part of the public sector or not.
         */
        isPublicSector: boolean;
        /**
         * Commercial name also called customer name.
         */
        name: string;
        /**
         * Phonetic name.
         */
        namePhonetic: string;
        /**
         * TCA customer account number.
         */
        tcaCustAccountNumber: string;
        /**
         * TCA customer account ID.
         */
        tcaCustomerAccountId: string;
        /**
         * TCA party ID.
         */
        tcaPartyId: string;
        /**
         * TCA party number.
         */
        tcaPartyNumber: string;
    }

    export interface GetSubscriptionsFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubscriptionsSubscription {
        /**
         * Currency details
         */
        currencies: outputs.OneSubsription.GetSubscriptionsSubscriptionCurrency[];
        /**
         * Hold reason of the plan
         */
        holdReason: string;
        /**
         * Customer friendly service name provided by PRG
         */
        serviceName: string;
        /**
         * Subscribed service status
         */
        status: string;
        /**
         * List of Subscribed Services of the plan
         */
        subscribedServices: outputs.OneSubsription.GetSubscriptionsSubscriptionSubscribedService[];
        /**
         * Represents the date when the last service of the subscription ends
         */
        timeEnd: string;
        /**
         * Represents the date of the hold release
         */
        timeHoldReleaseEta: string;
        /**
         * Represents the date when the first service of the subscription was activated
         */
        timeStart: string;
    }

    export interface GetSubscriptionsSubscriptionCurrency {
        /**
         * Currency Code
         */
        isoCode: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Standard Precision of the Currency
         */
        stdPrecision: string;
    }

    export interface GetSubscriptionsSubscriptionSubscribedService {
        /**
         * Commitment available amount
         */
        availableAmount: string;
        /**
         * Booking Opportunity Number of Subscribed Service
         */
        bookingOptyNumber: string;
        /**
         * List of Commitment services of a line
         */
        commitmentServices: outputs.OneSubsription.GetSubscriptionsSubscriptionSubscribedServiceCommitmentService[];
        /**
         * Subscribed service CSI number
         */
        csi: string;
        /**
         * Subscribed service data center region
         */
        dataCenterRegion: string;
        /**
         * Funded Allocation line value example: 12000.00
         */
        fundedAllocationValue: string;
        /**
         * SPM internal Subscribed Service ID
         */
        id: string;
        /**
         * Subscribed service intent to pay flag
         */
        isIntentToPay: boolean;
        /**
         * Subscribed service net unit price
         */
        netUnitPrice: string;
        /**
         * Subscribed service operation type
         */
        operationType: string;
        /**
         * Sales Order Number associated to the subscribed service
         */
        orderNumber: string;
        /**
         * Subscribed service Promotion Amount
         */
        originalPromoAmount: string;
        /**
         * This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
         */
        partnerTransactionType: string;
        /**
         * Subscribed service pricing model
         */
        pricingModel: string;
        /**
         * Product description
         */
        products: outputs.OneSubsription.GetSubscriptionsSubscriptionSubscribedServiceProduct[];
        /**
         * Subscribed service program type
         */
        programType: string;
        /**
         * Subscribed service promotion type
         */
        promoType: string;
        /**
         * Subscribed service quantity
         */
        quantity: string;
        /**
         * Subscribed service status
         */
        status: string;
        /**
         * Term value in Months
         */
        termValue: string;
        /**
         * Term value UOM
         */
        termValueUom: string;
        /**
         * Represents the date when the last service of the subscription ends
         */
        timeEnd: string;
        /**
         * Represents the date when the first service of the subscription was activated
         */
        timeStart: string;
        /**
         * Subscribed service total value
         */
        totalValue: string;
        /**
         * Subscribed service used amount
         */
        usedAmount: string;
    }

    export interface GetSubscriptionsSubscriptionSubscribedServiceCommitmentService {
        /**
         * Commitment available amount
         */
        availableAmount: string;
        /**
         * Funded Allocation line value example: 12000.00
         */
        fundedAllocationValue: string;
        /**
         * Commitment line net amount
         */
        lineNetAmount: string;
        /**
         * Subscribed service quantity
         */
        quantity: string;
        /**
         * Represents the date when the last service of the subscription ends
         */
        timeEnd: string;
        /**
         * Represents the date when the first service of the subscription was activated
         */
        timeStart: string;
    }

    export interface GetSubscriptionsSubscriptionSubscribedServiceProduct {
        /**
         * Product name
         */
        name: string;
        /**
         * Product part numner
         */
        partNumber: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Unit of measure
         */
        unitOfMeasure: string;
    }

}

export namespace Ons {
    export interface GetNotificationTopicsFilter {
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNotificationTopicsNotificationTopic {
        /**
         * The endpoint for managing subscriptions or publishing messages to the topic.
         */
        apiEndpoint: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the topic.
         */
        description: string;
        /**
         * For optimistic concurrency control. See `if-match`.
         */
        etag: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to only return resources that match the given id exactly.
         */
        id: string;
        /**
         * A filter to only return resources that match the given name exactly.
         */
        name: string;
        /**
         * A unique short topic Id. This is used only for SMS subscriptions.
         */
        shortTopicId: string;
        /**
         * Filter returned list by specified lifecycle state. This parameter is case-insensitive.
         */
        state: string;
        /**
         * The time the topic was created.
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
         */
        topicId: string;
    }

    export interface GetSubscriptionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubscriptionsSubscription {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The time when this suscription was created.
         */
        createdTime: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        deliveryPolicies: outputs.Ons.GetSubscriptionsSubscriptionDeliveryPolicy[];
        /**
         * A locator that corresponds to the subscription protocol.  For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. Avoid entering confidential information.
         */
        endpoint: string;
        /**
         * For optimistic concurrency control. See `if-match`.
         */
        etag: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription.
         */
        id: string;
        /**
         * The protocol used for the subscription.
         */
        protocol: string;
        /**
         * The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
         */
        state: string;
        /**
         * Return all subscriptions that are subscribed to the given topic OCID. Either this query parameter or the compartmentId query parameter must be set.
         */
        topicId: string;
    }

    export interface GetSubscriptionsSubscriptionDeliveryPolicy {
        backoffRetryPolicies: outputs.Ons.GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy[];
    }

    export interface GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy {
        /**
         * The maximum retry duration in milliseconds.
         */
        maxRetryDuration: number;
        /**
         * The type of delivery policy. Default value: EXPONENTIAL.
         */
        policyType: string;
    }

}

export namespace Opensearch {
    export interface GetOpensearchClustersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOpensearchClustersOpensearchClusterCollection {
        items: outputs.Opensearch.GetOpensearchClustersOpensearchClusterCollectionItem[];
    }

    export interface GetOpensearchClustersOpensearchClusterCollectionItem {
        /**
         * The availability domains to distribute the cluser nodes across.
         */
        availabilityDomains: string[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * The number of data nodes configured for the cluster.
         */
        dataNodeCount: number;
        /**
         * The bare metal shape for the cluster's data nodes.
         */
        dataNodeHostBareMetalShape: string;
        /**
         * The amount of memory in GB, for the cluster's data nodes.
         */
        dataNodeHostMemoryGb: number;
        /**
         * The number of OCPUs configured for the cluster's data nodes.
         */
        dataNodeHostOcpuCount: number;
        /**
         * The instance type for the cluster's data nodes.
         */
        dataNodeHostType: string;
        /**
         * The amount of storage in GB, to configure per node for the cluster's data nodes.
         */
        dataNodeStorageGb: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * The fully qualified domain name (FQDN) for the cluster's API endpoint.
         */
        fqdn: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * unique OpensearchCluster identifier
         */
        id: string;
        /**
         * Additional information about the current lifecycle state of the cluster.
         */
        lifecycleDetails: string;
        /**
         * The number of master nodes configured for the cluster.
         */
        masterNodeCount: number;
        /**
         * The bare metal shape for the cluster's master nodes.
         */
        masterNodeHostBareMetalShape: string;
        /**
         * The amount of memory in GB, for the cluster's master nodes.
         */
        masterNodeHostMemoryGb: number;
        /**
         * The number of OCPUs configured for cluster's master nodes.
         */
        masterNodeHostOcpuCount: number;
        /**
         * The instance type for the cluster's master nodes.
         */
        masterNodeHostType: string;
        /**
         * The fully qualified domain name (FQDN) for the cluster's OpenSearch Dashboard API endpoint.
         */
        opendashboardFqdn: string;
        /**
         * The number of OpenSearch Dashboard nodes configured for the cluster.
         */
        opendashboardNodeCount: number;
        /**
         * The amount of memory in GB, for the cluster's OpenSearch Dashboard nodes.
         */
        opendashboardNodeHostMemoryGb: number;
        /**
         * The amount of memory in GB, for the cluster's OpenSearch Dashboard nodes.
         */
        opendashboardNodeHostOcpuCount: number;
        /**
         * The private IP address for the cluster's OpenSearch Dashboard.
         */
        opendashboardPrivateIp: string;
        /**
         * The fully qualified domain name (FQDN) for the cluster's API endpoint.
         */
        opensearchFqdn: string;
        /**
         * The cluster's private IP address.
         */
        opensearchPrivateIp: string;
        /**
         * The software version the cluster is running.
         */
        softwareVersion: string;
        /**
         * A filter to return only OpensearchClusters their lifecycleState matches the given lifecycleState.
         */
        state: string;
        /**
         * The OCID for the compartment where the cluster's subnet is located.
         */
        subnetCompartmentId: string;
        /**
         * The OCID of the cluster's subnet.
         */
        subnetId: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The amount of time in milliseconds since the cluster was created.
         */
        timeCreated: string;
        /**
         * The amount of time in milliseconds since the cluster was updated.
         */
        timeDeleted: string;
        /**
         * The amount of time in milliseconds since the cluster was updated.
         */
        timeUpdated: string;
        /**
         * The size in GB of the cluster's total storage.
         */
        totalStorageGb: number;
        /**
         * The OCID for the compartment where the cluster's VCN is located.
         */
        vcnCompartmentId: string;
        /**
         * The OCID of the cluster's VCN.
         */
        vcnId: string;
    }

    export interface GetOpensearchVersionItem {
        /**
         * The version of OpenSearch.
         */
        version: string;
    }

    export interface GetOpensearchVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOpensearchVersionsOpensearchVersionsCollection {
        /**
         * A list of OpenSearch versions.
         */
        items: outputs.Opensearch.GetOpensearchVersionsOpensearchVersionsCollectionItem[];
    }

    export interface GetOpensearchVersionsOpensearchVersionsCollectionItem {
        /**
         * The version of OpenSearch.
         */
        version: string;
    }

}

export namespace OperatorAccessControl {
    export interface GetAccessRequestHistoryItem {
        /**
         * List of operator actions for which approvals were requested by the operator.
         */
        actionsLists: string[];
        /**
         * Reason or description about the cause of change.
         */
        description: string;
        /**
         * Duration for approval of request or extension depending on the type of action.
         */
        duration: number;
        /**
         * Whether the access request was automatically approved.
         */
        isAutoApproved: boolean;
        /**
         * The current state of the AccessRequest.
         */
        state: string;
        /**
         * Time when the respective action happened in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
         */
        timeOfAction: string;
        /**
         * Approver who modified the access request.
         */
        userId: string;
    }

    export interface GetAccessRequestsAccessRequestCollection {
        items: outputs.OperatorAccessControl.GetAccessRequestsAccessRequestCollectionItem[];
    }

    export interface GetAccessRequestsAccessRequestCollectionItem {
        /**
         * Summary comment by the operator creating the access request.
         */
        accessReasonSummary: string;
        /**
         * List of operator actions for which approval is sought by the operator user.
         */
        actionRequestsLists: string[];
        /**
         * The last recent Comment entered by the approver of the request.
         */
        approverComment: string;
        /**
         * Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level.  By default, auditing is enabled at the command level i.e., each command issued by the operator is audited. When keystroke-level is chosen,  in addition to command level logging, key strokes are also logged.
         */
        auditTypes: string[];
        /**
         * The comment entered by the operator while closing the request.
         */
        closureComment: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace.
         */
        definedTags: {[key: string]: any};
        /**
         * Duration in hours for which access is sought on the target resource.
         */
        duration: number;
        /**
         * Duration in hours for which extension access is sought on the target resource.
         */
        extendDuration: number;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the access request.
         */
        id: string;
        /**
         * Whether the access request was automatically approved.
         */
        isAutoApproved: boolean;
        /**
         * more in detail about the lifeCycleState.
         */
        lifecycleDetails: string;
        /**
         * Additional message specific to the access request that can be specified by the approver at the time of approval.
         */
        opctlAdditionalMessage: string;
        /**
         * The OCID of the operator control governing the target resource.
         */
        opctlId: string;
        /**
         * Name of the Operator control governing the target resource.
         */
        opctlName: string;
        /**
         * A unique identifier associated with the operator who raised the request. This identifier can not be used directly to identify the operator. You need to provide this identifier if you would like Oracle to provide additional information about the operator action within Oracle tenancy.
         */
        operatorId: string;
        /**
         * Summary reason for which the operator is requesting access on the target resource.
         */
        reason: string;
        /**
         * This is an automatic identifier generated by the system which is easier for human comprehension.
         */
        requestId: string;
        /**
         * The OCID of the target resource associated with the access request. The operator raises an access request to get approval to  access the target resource.
         */
        resourceId: string;
        /**
         * A filter to return only resources that match the given ResourceName.
         */
        resourceName: string;
        /**
         * A filter to return only lists of resources that match the entire given service type.
         */
        resourceType: string;
        /**
         * Priority assigned to the access request by the operator
         */
        severity: string;
        /**
         * A filter to return only resources whose lifecycleState matches the given AccessRequest lifecycleState.
         */
        state: string;
        /**
         * System message that will be displayed to the operator at login to the target resource.
         */
        systemMessage: string;
        /**
         * Time when the access request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
         */
        timeOfCreation: string;
        /**
         * Time when the access request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
         */
        timeOfModification: string;
        /**
         * The time when access request is scheduled to be approved in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
         */
        timeOfUserCreation: string;
        /**
         * The OCID of the user that last modified the access request.
         */
        userId: string;
        /**
         * The OCID of the workflow associated with the access request. This is needed if you want to contact Oracle Support for a stuck access request or for an access request that encounters an internal error.
         */
        workflowIds: string[];
    }

    export interface GetAccessRequestsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetActionProperty {
        /**
         * Name of the property
         */
        name: string;
        /**
         * value of the property
         */
        value: string;
    }

    export interface GetActionsFilter {
        /**
         * A filter to return only resources that match the entire display name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetActionsOperatorActionCollection {
        items: outputs.OperatorAccessControl.GetActionsOperatorActionCollectionItem[];
    }

    export interface GetActionsOperatorActionCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId?: string;
        /**
         * Name of the infrastructure layer associated with the operator action.
         */
        component: string;
        /**
         * Display Name of the operator action.
         */
        customerDisplayName: string;
        /**
         * Description of the operator action in terms of associated risk profile, and characteristics of the operating system commands made available to the operator under this operator action.
         */
        description: string;
        /**
         * Unique Oracle assigned identifier for the operator action.
         */
        id: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        name: string;
        /**
         * Fine grained properties associated with the operator control.
         */
        properties: outputs.OperatorAccessControl.GetActionsOperatorActionCollectionItemProperty[];
        /**
         * A filter to return only lists of resources that match the entire given service type.
         */
        resourceType: string;
        /**
         * A filter to return only resources whose lifecycleState matches the given OperatorAction lifecycleState.
         */
        state?: string;
    }

    export interface GetActionsOperatorActionCollectionItemProperty {
        /**
         * A filter to return only resources that match the entire display name given.
         */
        name: string;
        /**
         * value of the property
         */
        value: string;
    }

    export interface GetControlAssignmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetControlAssignmentsOperatorControlAssignmentCollection {
        items: outputs.OperatorAccessControl.GetControlAssignmentsOperatorControlAssignmentCollectionItem[];
    }

    export interface GetControlAssignmentsOperatorControlAssignmentCollectionItem {
        /**
         * The OCID of the user who created this operator control assignment.
         */
        assignerId: string;
        /**
         * Comment about the assignment of the operator control to this target resource.
         */
        comment: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace.
         */
        definedTags: {[key: string]: any};
        /**
         * description containing reason for releasing of OperatorControl.
         */
        detachmentDescription: string;
        /**
         * The code identifying the error occurred during Assignment operation.
         */
        errorCode: number;
        /**
         * The message describing the error occurred during Assignment operation.
         */
        errorMessage: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the operator control assignment.
         */
        id: string;
        /**
         * The boolean if true would autoApprove during maintenance.
         */
        isAutoApproveDuringMaintenance: boolean;
        /**
         * If set, then the target resource is always governed by the operator control.
         */
        isEnforcedAlways: boolean;
        /**
         * If set indicates that the audit logs are being forwarded to the relevant remote logging server
         */
        isLogForwarded: boolean;
        /**
         * More in detail about the lifeCycleState.
         */
        lifecycleDetails: string;
        /**
         * The OCID of the operator control.
         */
        operatorControlId: string;
        /**
         * The address of the remote syslog server where the audit logs are being forwarded to. Address in host or IP format.
         */
        remoteSyslogServerAddress: string;
        /**
         * The CA certificate of the remote syslog server.
         */
        remoteSyslogServerCaCert: string;
        /**
         * The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
         */
        remoteSyslogServerPort: number;
        /**
         * The OCID of the compartment that contains the target resource.
         */
        resourceCompartmentId: string;
        /**
         * The OCID of the target resource.
         */
        resourceId: string;
        /**
         * A filter to return only resources that match the given ResourceName.
         */
        resourceName: string;
        /**
         * A filter to return only lists of resources that match the entire given service type.
         */
        resourceType: string;
        /**
         * A filter to return only resources whose lifecycleState matches the given OperatorControlAssignment lifecycleState.
         */
        state: string;
        /**
         * The time at which the target resource will be brought under the governance of the operator control expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: '2020-05-22T21:10:29.600Z'
         */
        timeAssignmentFrom: string;
        /**
         * The time at which the target resource will leave the governance of the operator control expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
         */
        timeAssignmentTo: string;
        /**
         * Time when the operator control assignment is created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
         */
        timeOfAssignment: string;
        /**
         * Time on which the operator control assignment was deleted in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
         */
        timeOfDeletion: string;
        /**
         * User id who released the operatorControl.
         */
        unassignerId: string;
    }

    export interface GetControlsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetControlsOperatorControlCollection {
        items: outputs.OperatorAccessControl.GetControlsOperatorControlCollectionItem[];
    }

    export interface GetControlsOperatorControlCollectionItem {
        /**
         * List of operator actions that need explicit approval. Any operator action not in the pre-approved list will require explicit approval. Access requests associated with a resource governed by this operator control will be require explicit approval if the access request contains any operator action in this list.
         */
        approvalRequiredOpActionLists: string[];
        /**
         * List of user groups who can approve an access request associated with a target resource under the governance of this operator control.
         */
        approverGroupsLists: string[];
        /**
         * List of users who can approve an access request associated with a target resource under the governance of this operator control.
         */
        approversLists: string[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace.
         */
        definedTags: {[key: string]: any};
        /**
         * Description of operator control.
         */
        description: string;
        /**
         * List of emailId.
         */
        emailIdLists: string[];
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the operator control.
         */
        id: string;
        /**
         * Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
         */
        isFullyPreApproved: boolean;
        /**
         * Description associated with the latest modification of the operator control.
         */
        lastModifiedInfo: string;
        /**
         * Name of the operator control. The name must be unique.
         */
        operatorControlName: string;
        /**
         * List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be automatically approved if the access request only contain operator actions in the pre-approved list.
         */
        preApprovedOpActionLists: string[];
        /**
         * A filter to return only lists of resources that match the entire given service type.
         */
        resourceType: string;
        /**
         * A filter to return only resources whose lifecycleState matches the given OperatorControl lifecycleState.
         */
        state: string;
        /**
         * System message that would be displayed to the operator users on accessing the target resource under the governance of this operator control.
         */
        systemMessage: string;
        /**
         * Time when the operator control was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
         */
        timeOfCreation: string;
        /**
         * Time when deleted expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'. Note a deleted operator control still stays in the system, so that you can still audit operator actions associated with access requests raised on target resources governed by the deleted operator control.
         */
        timeOfDeletion: string;
        /**
         * Time when the operator control was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
         */
        timeOfModification: string;
    }

}

export namespace Opsi {
    export interface DatabaseInsightConnectionCredentialDetails {
        /**
         * Credential source name that had been added in Management Agent wallet. This is supplied in the External Database Service.
         */
        credentialSourceName: string;
        /**
         * Credential type.
         */
        credentialType: string;
        /**
         * The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
         */
        passwordSecretId: string;
        /**
         * database user role.
         */
        role: string;
        /**
         * database user name.
         */
        userName: string;
    }

    export interface DatabaseInsightConnectionDetails {
        /**
         * Name of the listener host that will be used to create the connect string to the database.
         */
        hostName: string;
        /**
         * List of hosts and port for private endpoint accessed database resource.
         */
        hosts: outputs.Opsi.DatabaseInsightConnectionDetailsHost[];
        /**
         * Listener port number used for connection requests.
         */
        port: number;
        /**
         * Protocol used for connection requests for private endpoint accssed database resource.
         */
        protocol: string;
        /**
         * Database service name used for connection requests.
         */
        serviceName: string;
    }

    export interface DatabaseInsightConnectionDetailsHost {
        /**
         * Host IP used for connection requests for Cloud DB resource.
         */
        hostIp: string;
        /**
         * Listener port number used for connection requests.
         */
        port: number;
    }

    export interface DatabaseInsightCredentialDetails {
        /**
         * Credential source name that had been added in Management Agent wallet. This is supplied in the External Database Service.
         */
        credentialSourceName?: string;
        /**
         * Credential type.
         */
        credentialType: string;
        /**
         * The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
         */
        passwordSecretId?: string;
        /**
         * database user role.
         */
        role: string;
        /**
         * database user name.
         */
        userName?: string;
    }

    export interface GetAwrHubAwrSnapshotItem {
        /**
         * DatabaseId of the Source database for which AWR Data will be uploaded to AWR Hub.
         */
        awrSourceDatabaseId: string;
        /**
         * The total number of errors.
         */
        errorCount: string;
        /**
         * The database instance number.
         */
        instanceNumber: number;
        /**
         * The identifier of the snapshot.
         */
        snapshotIdentifier: number;
        /**
         * The timestamp of the database startup.
         */
        timeDbStartup: string;
        /**
         * The start time of the snapshot.
         */
        timeSnapshotBegin: string;
        /**
         * The end time of the snapshot.
         */
        timeSnapshotEnd: string;
    }

    export interface GetAwrHubAwrSnapshotsAwrSnapshotCollection {
        /**
         * A list of AWR snapshot summary data.
         */
        items: outputs.Opsi.GetAwrHubAwrSnapshotsAwrSnapshotCollectionItem[];
    }

    export interface GetAwrHubAwrSnapshotsAwrSnapshotCollectionItem {
        /**
         * A list of AWR snapshot summary data.
         */
        items: outputs.Opsi.GetAwrHubAwrSnapshotsAwrSnapshotCollectionItemItem[];
    }

    export interface GetAwrHubAwrSnapshotsAwrSnapshotCollectionItemItem {
        /**
         * DatabaseId of the Source database for which AWR Data will be uploaded to AWR Hub.
         */
        awrSourceDatabaseId: string;
        /**
         * The total number of errors.
         */
        errorCount: string;
        /**
         * The database instance number.
         */
        instanceNumber: number;
        /**
         * The identifier of the snapshot.
         */
        snapshotIdentifier: number;
        /**
         * The timestamp of the database startup.
         */
        timeDbStartup: string;
        /**
         * The start time of the snapshot.
         */
        timeSnapshotBegin: string;
        /**
         * The end time of the snapshot.
         */
        timeSnapshotEnd: string;
    }

    export interface GetAwrHubAwrSnapshotsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAwrHubAwrSourcesSummaryItem {
        /**
         * Unique Awr Hub identifier
         */
        awrHubId: string;
        /**
         * DatabaseId of the Source database for which AWR Data will be uploaded to AWR Hub.
         */
        awrSourceDatabaseId: string;
        /**
         * Number of hours since last AWR snapshots import happened from the Source database.
         */
        hoursSinceLastImport: number;
        /**
         * The maximum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
         */
        maxSnapshotIdentifier: number;
        /**
         * The minimum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
         */
        minSnapshotIdentifier: number;
        /**
         * Name for an Awr source database
         */
        name: string;
        /**
         * Number of AWR snapshots uploaded from the Source database.
         */
        snapshotsUploaded: number;
        /**
         * The time at which the earliest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
         */
        timeFirstSnapshotGenerated: string;
        /**
         * The time at which the latest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
         */
        timeLastSnapshotGenerated: string;
    }

    export interface GetAwrHubsAwrHubSummaryCollection {
        items: outputs.Opsi.GetAwrHubsAwrHubSummaryCollectionItem[];
    }

    export interface GetAwrHubsAwrHubSummaryCollectionItem {
        /**
         * Mailbox URL required for AWR hub and AWR source setup.
         */
        awrMailboxUrl: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique Awr Hub identifier
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Object Storage Bucket Name
         */
        objectStorageBucketName: string;
        /**
         * Unique Operations Insights Warehouse identifier
         */
        operationsInsightsWarehouseId: string;
        /**
         * Lifecycle states
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time at which the resource was first created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time at which the resource was last updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface GetAwrHubsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDatabaseInsightConnectionCredentialDetail {
        /**
         * Credential source name that had been added in Management Agent wallet. This is supplied in the External Database Service.
         */
        credentialSourceName: string;
        /**
         * Credential type.
         */
        credentialType: string;
        /**
         * The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
         */
        passwordSecretId: string;
        /**
         * database user role.
         */
        role: string;
        /**
         * database user name.
         */
        userName: string;
    }

    export interface GetDatabaseInsightConnectionDetail {
        /**
         * Name of the listener host that will be used to create the connect string to the database.
         */
        hostName: string;
        /**
         * List of hosts and port for private endpoint accessed database resource.
         */
        hosts: outputs.Opsi.GetDatabaseInsightConnectionDetailHost[];
        /**
         * Listener port number used for connection requests.
         */
        port: number;
        /**
         * Protocol used for connection requests for private endpoint accssed database resource.
         */
        protocol: string;
        /**
         * Database service name used for connection requests.
         */
        serviceName: string;
    }

    export interface GetDatabaseInsightConnectionDetailHost {
        /**
         * Host IP used for connection requests for Cloud DB resource.
         */
        hostIp: string;
        /**
         * Listener port number used for connection requests.
         */
        port: number;
    }

    export interface GetDatabaseInsightCredentialDetail {
        /**
         * Credential source name that had been added in Management Agent wallet. This is supplied in the External Database Service.
         */
        credentialSourceName: string;
        /**
         * Credential type.
         */
        credentialType: string;
        /**
         * The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
         */
        passwordSecretId: string;
        /**
         * database user role.
         */
        role: string;
        /**
         * database user name.
         */
        userName: string;
    }

    export interface GetDatabaseInsightsDatabaseInsightsCollection {
        items: outputs.Opsi.GetDatabaseInsightsDatabaseInsightsCollectionItem[];
    }

    export interface GetDatabaseInsightsDatabaseInsightsCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * User credential details to connect to the database. This is supplied via the External Database Service.
         */
        connectionCredentialDetails: outputs.Opsi.GetDatabaseInsightsDatabaseInsightsCollectionItemConnectionCredentialDetail[];
        /**
         * Connection details to connect to the database. HostName, protocol, and port should be specified.
         */
        connectionDetails: outputs.Opsi.GetDatabaseInsightsDatabaseInsightsCollectionItemConnectionDetail[];
        /**
         * User credential details to connect to the database. This is supplied via the External Database Service.
         */
        credentialDetails: outputs.Opsi.GetDatabaseInsightsDatabaseInsightsCollectionItemCredentialDetail[];
        /**
         * A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
         */
        databaseConnectionStatusDetails: string;
        /**
         * Display name of database
         */
        databaseDisplayName: string;
        /**
         * Optional list of database [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated DBaaS entity.
         */
        databaseId: string;
        /**
         * Name of database
         */
        databaseName: string;
        /**
         * Oracle Cloud Infrastructure database resource type
         */
        databaseResourceType: string;
        /**
         * Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
         */
        databaseType: string;
        /**
         * The version of the database.
         */
        databaseVersion: string;
        dbmPrivateEndpointId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        deploymentType: string;
        /**
         * Unique Enterprise Manager bridge identifier
         */
        enterpriseManagerBridgeId: string;
        /**
         * Enterprise Manager Entity Display Name
         */
        enterpriseManagerEntityDisplayName: string;
        /**
         * Enterprise Manager Entity Unique Identifier
         */
        enterpriseManagerEntityIdentifier: string;
        /**
         * Enterprise Manager Entity Name
         */
        enterpriseManagerEntityName: string;
        /**
         * Enterprise Manager Entity Type
         */
        enterpriseManagerEntityType: string;
        /**
         * Enterprise Manager Unqiue Identifier
         */
        enterpriseManagerIdentifier: string;
        /**
         * Source of the database entity.
         */
        entitySource: string;
        /**
         * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of exadata insight resource.
         */
        exadataInsightId: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Optional list of database insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Unique Operations Insights PrivateEndpoint identifier
         */
        opsiPrivateEndpointId: string;
        /**
         * Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
         */
        processorCount: number;
        /**
         * Database service name used for connection requests.
         */
        serviceName: string;
        /**
         * Lifecycle states
         */
        state: string;
        /**
         * Resource Status
         */
        status: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the the database insight was first enabled. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the database insight was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface GetDatabaseInsightsDatabaseInsightsCollectionItemConnectionCredentialDetail {
        /**
         * Credential source name that had been added in Management Agent wallet. This is supplied in the External Database Service.
         */
        credentialSourceName: string;
        /**
         * Credential type.
         */
        credentialType: string;
        /**
         * The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
         */
        passwordSecretId: string;
        /**
         * database user role.
         */
        role: string;
        /**
         * database user name.
         */
        userName: string;
    }

    export interface GetDatabaseInsightsDatabaseInsightsCollectionItemConnectionDetail {
        /**
         * Name of the listener host that will be used to create the connect string to the database.
         */
        hostName: string;
        /**
         * List of hosts and port for private endpoint accessed database resource.
         */
        hosts: outputs.Opsi.GetDatabaseInsightsDatabaseInsightsCollectionItemConnectionDetailHost[];
        /**
         * Listener port number used for connection requests.
         */
        port: number;
        /**
         * Protocol used for connection requests for private endpoint accssed database resource.
         */
        protocol: string;
        /**
         * Database service name used for connection requests.
         */
        serviceName: string;
    }

    export interface GetDatabaseInsightsDatabaseInsightsCollectionItemConnectionDetailHost {
        /**
         * Host IP used for connection requests for Cloud DB resource.
         */
        hostIp: string;
        /**
         * Listener port number used for connection requests.
         */
        port: number;
    }

    export interface GetDatabaseInsightsDatabaseInsightsCollectionItemCredentialDetail {
        /**
         * Credential source name that had been added in Management Agent wallet. This is supplied in the External Database Service.
         */
        credentialSourceName: string;
        /**
         * Credential type.
         */
        credentialType: string;
        /**
         * The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
         */
        passwordSecretId: string;
        /**
         * database user role.
         */
        role: string;
        /**
         * database user name.
         */
        userName: string;
    }

    export interface GetDatabaseInsightsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetEnterpriseManagerBridgesEnterpriseManagerBridgeCollection {
        items: outputs.Opsi.GetEnterpriseManagerBridgesEnterpriseManagerBridgeCollectionItem[];
    }

    export interface GetEnterpriseManagerBridgesEnterpriseManagerBridgeCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of Enterprise Manager Bridge
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique Enterprise Manager bridge identifier
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Object Storage Bucket Name
         */
        objectStorageBucketName: string;
        /**
         * A message describing status of the object storage bucket of this resource. For example, it can be used to provide actionable information about the permission and content validity of the bucket.
         */
        objectStorageBucketStatusDetails: string;
        /**
         * Object Storage Namespace Name
         */
        objectStorageNamespaceName: string;
        /**
         * Lifecycle states
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the the Enterprise Manager bridge was first created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the Enterprise Manager bridge was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface GetEnterpriseManagerBridgesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetExadataInsightsExadataInsightSummaryCollection {
        items: outputs.Opsi.GetExadataInsightsExadataInsightSummaryCollectionItem[];
    }

    export interface GetExadataInsightsExadataInsightSummaryCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Unique Enterprise Manager bridge identifier
         */
        enterpriseManagerBridgeId: string;
        /**
         * Enterprise Manager Entity Display Name
         */
        enterpriseManagerEntityDisplayName: string;
        /**
         * Enterprise Manager Entity Unique Identifier
         */
        enterpriseManagerEntityIdentifier: string;
        /**
         * Enterprise Manager Entity Name
         */
        enterpriseManagerEntityName: string;
        /**
         * Enterprise Manager Entity Type
         */
        enterpriseManagerEntityType: string;
        /**
         * Enterprise Manager Unique Identifier
         */
        enterpriseManagerIdentifier: string;
        /**
         * Source of the Exadata system.
         */
        entitySource: string;
        /**
         * The user-friendly name for the Exadata system. The name does not have to be unique.
         */
        exadataDisplayName: string;
        /**
         * The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
         */
        exadataName: string;
        /**
         * Exadata rack type.
         */
        exadataRackType: string;
        /**
         * Filter by one or more Exadata types. Possible value are DBMACHINE, EXACS, and EXACC.
         */
        exadataType: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Optional list of Exadata insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        isAutoSyncEnabled: boolean;
        /**
         * true if virtualization is used in the Exadata system
         */
        isVirtualizedExadata: boolean;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Lifecycle states
         */
        state: string;
        /**
         * Resource Status
         */
        status: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the Exadata insight was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface GetExadataInsightsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHostInsightsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHostInsightsHostInsightSummaryCollection {
        items: outputs.Opsi.GetHostInsightsHostInsightSummaryCollectionItem[];
    }

    export interface GetHostInsightsHostInsightSummaryCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute Instance
         */
        computeId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Unique Enterprise Manager bridge identifier
         */
        enterpriseManagerBridgeId: string;
        /**
         * Enterprise Manager Entity Display Name
         */
        enterpriseManagerEntityDisplayName: string;
        /**
         * Enterprise Manager Entity Unique Identifier
         */
        enterpriseManagerEntityIdentifier: string;
        /**
         * Enterprise Manager Entity Name
         */
        enterpriseManagerEntityName: string;
        /**
         * Enterprise Manager Entity Type
         */
        enterpriseManagerEntityType: string;
        /**
         * Enterprise Manager Unique Identifier
         */
        enterpriseManagerIdentifier: string;
        /**
         * Source of the host entity.
         */
        entitySource: string;
        /**
         * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of exadata insight resource. 
         * <<<<<<< ours
         */
        exadataInsightId: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The user-friendly name for the host. The name does not have to be unique.
         */
        hostDisplayName: string;
        /**
         * The host name. The host name is unique amongst the hosts managed by the same management agent.
         */
        hostName: string;
        /**
         * Filter by one or more host types. Possible value is EXTERNAL-HOST.
         * >>>>>>> theirs
         */
        hostType: string;
        /**
         * Optional list of host insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
         */
        managementAgentId: string;
        /**
         * Platform name.
         */
        platformName: string;
        /**
         * Filter by one or more platform types. Supported platformType(s) for MACS-managed external host insight: [LINUX]. Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX].
         */
        platformType: string;
        /**
         * Platform version.
         */
        platformVersion: string;
        /**
         * Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
         */
        processorCount: number;
        /**
         * Lifecycle states
         */
        state: string;
        /**
         * Resource Status
         */
        status: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the the host insight was first enabled. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time the host insight was updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface GetImportableAgentEntitiesItem {
        /**
         * Source of the importable agent entity.
         */
        entitySource: string;
        /**
         * The host name. The host name is unique amongst the hosts managed by the same management agent.
         */
        hostName: string;
        /**
         * The [Display Name](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Display) of the Management Agent
         */
        managementAgentDisplayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
         */
        managementAgentId: string;
        /**
         * Platform type. Supported platformType(s) for MACS-managed external host insight: [LINUX]. Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX].
         */
        platformType: string;
    }

    export interface GetImportableAgentEntityItem {
        /**
         * Source of the importable agent entity.
         */
        entitySource: string;
        /**
         * The host name. The host name is unique amongst the hosts managed by the same management agent.
         */
        hostName: string;
        /**
         * The [Display Name](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Display) of the Management Agent
         */
        managementAgentDisplayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
         */
        managementAgentId: string;
        /**
         * Platform type. Supported platformType(s) for MACS-managed external host insight: [LINUX]. Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX].
         */
        platformType: string;
    }

    export interface GetImportableComputeEntitiesItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The [Display Name](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Display) of the Compute Instance
         */
        computeDisplayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute Instance
         */
        computeId: string;
        /**
         * Source of the importable agent entity.
         */
        entitySource: string;
        /**
         * The host name. The host name is unique amongst the hosts managed by the same management agent.
         */
        hostName: string;
        /**
         * Platform type. Supported platformType(s) for MACS-managed external host insight: [LINUX]. Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX].
         */
        platformType: string;
    }

    export interface GetImportableComputeEntityItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * The [Display Name](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Display) of the Compute Instance
         */
        computeDisplayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute Instance
         */
        computeId: string;
        /**
         * Source of the importable agent entity.
         */
        entitySource: string;
        /**
         * The host name. The host name is unique amongst the hosts managed by the same management agent.
         */
        hostName: string;
        /**
         * Platform type. Supported platformType(s) for MACS-managed external host insight: [LINUX]. Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX].
         */
        platformType: string;
    }

    export interface GetOperationsInsightsPrivateEndpointsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOperationsInsightsPrivateEndpointsOperationsInsightsPrivateEndpointCollection {
        items: outputs.Opsi.GetOperationsInsightsPrivateEndpointsOperationsInsightsPrivateEndpointCollectionItem[];
    }

    export interface GetOperationsInsightsPrivateEndpointsOperationsInsightsPrivateEndpointCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the private endpoint.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the Private service accessed database.
         */
        id: string;
        /**
         * The option to filter OPSI private endpoints that can used for RAC. Should be used along with vcnId query parameter.
         */
        isUsedForRacDbs: boolean;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * The OCIDs of the network security groups that the private endpoint belongs to.
         */
        nsgIds: string[];
        /**
         * A message describing the status of the private endpoint connection of this resource. For example, it can be used to provide actionable information about the validity of the private endpoint connection.
         */
        privateEndpointStatusDetails: string;
        /**
         * The private IP addresses assigned to the private endpoint. All IP addresses will be concatenated if it is RAC DBs.
         */
        privateIp: string;
        /**
         * Lifecycle states
         */
        state: string;
        /**
         * The OCID of the subnet.
         */
        subnetId: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the private endpoint was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetOperationsInsightsWarehouseUsersFilter {
        /**
         * Username for schema which would have access to AWR Data,  Enterprise Manager Data and Operations Insights OPSI Hub.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOperationsInsightsWarehouseUsersOperationsInsightsWarehouseUserSummaryCollection {
        items: outputs.Opsi.GetOperationsInsightsWarehouseUsersOperationsInsightsWarehouseUserSummaryCollectionItem[];
    }

    export interface GetOperationsInsightsWarehouseUsersOperationsInsightsWarehouseUserSummaryCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * User provided connection password for the AWR Data,  Enterprise Manager Data and Operations Insights OPSI Hub.
         */
        connectionPassword: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique Operations Insights Warehouse User identifier
         */
        id: string;
        /**
         * Indicate whether user has access to AWR data.
         */
        isAwrDataAccess: boolean;
        /**
         * Indicate whether user has access to EM data.
         */
        isEmDataAccess: boolean;
        /**
         * Indicate whether user has access to OPSI data.
         */
        isOpsiDataAccess: boolean;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Username for schema which would have access to AWR Data,  Enterprise Manager Data and Operations Insights OPSI Hub.
         */
        name: string;
        /**
         * Unique Operations Insights Warehouse identifier
         */
        operationsInsightsWarehouseId: string;
        /**
         * Lifecycle states
         */
        state: string;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time at which the resource was first created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time at which the resource was last updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

    export interface GetOperationsInsightsWarehousesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOperationsInsightsWarehousesOperationsInsightsWarehouseSummaryCollection {
        items: outputs.Opsi.GetOperationsInsightsWarehousesOperationsInsightsWarehouseSummaryCollectionItem[];
    }

    export interface GetOperationsInsightsWarehousesOperationsInsightsWarehouseSummaryCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Number of OCPUs allocated to OPSI Warehouse ADW.
         */
        cpuAllocated: number;
        /**
         * Number of OCPUs used by OPSI Warehouse ADW. Can be fractional.
         */
        cpuUsed: number;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name.
         */
        displayName: string;
        /**
         * OCID of the dynamic group created for the warehouse
         */
        dynamicGroupId: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique Operations Insights Warehouse identifier
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        lifecycleDetails: string;
        /**
         * Tenancy Identifier of Operations Insights service
         */
        operationsInsightsTenancyId: string;
        /**
         * Lifecycle states
         */
        state: string;
        /**
         * Storage allocated to OPSI Warehouse ADW.
         */
        storageAllocatedInGbs: number;
        /**
         * Storage by OPSI Warehouse ADW in GB.
         */
        storageUsedInGbs: number;
        /**
         * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time at which the resource was first created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * The time at which the ADW wallet was last rotated for the Operations Insights Warehouse. An RFC3339 formatted datetime string
         */
        timeLastWalletRotated: string;
        /**
         * The time at which the resource was last updated. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
    }

}

export namespace Optimizer {
    export interface GetCategoriesCategoryCollection {
        items: outputs.Optimizer.GetCategoriesCategoryCollectionItem[];
    }

    export interface GetCategoriesCategoryCollectionItem {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Text describing the category.
         */
        description: string;
        /**
         * The estimated cost savings, in dollars, for the category.
         */
        estimatedCostSaving: number;
        /**
         * Additional metadata key/value pairs for the category.
         */
        extendedMetadata: {[key: string]: any};
        /**
         * The unique OCID of the category.
         */
        id: string;
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
         */
        recommendationCounts: outputs.Optimizer.GetCategoriesCategoryCollectionItemRecommendationCount[];
        /**
         * An array of `ResourceCount` objects grouped by the status of the recommendation.
         */
        resourceCounts: outputs.Optimizer.GetCategoriesCategoryCollectionItemResourceCount[];
        /**
         * A filter that returns results that match the lifecycle state specified.
         */
        state: string;
        /**
         * The date and time the category details were created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the category details were last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetCategoriesCategoryCollectionItemRecommendationCount {
        /**
         * The count of resources.
         */
        count: number;
        /**
         * The level of importance assigned to the recommendation.
         */
        importance: string;
    }

    export interface GetCategoriesCategoryCollectionItemResourceCount {
        /**
         * The count of resources.
         */
        count: number;
        /**
         * The recommendation status of the resource.
         */
        status: string;
    }

    export interface GetCategoriesFilter {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCategoryRecommendationCount {
        /**
         * The count of resources.
         */
        count: number;
        /**
         * The level of importance assigned to the recommendation.
         */
        importance: string;
    }

    export interface GetCategoryResourceCount {
        /**
         * The count of resources.
         */
        count: number;
        /**
         * The recommendation status of the resource.
         */
        status: string;
    }

    export interface GetEnrollmentStatusesEnrollmentStatusCollection {
        items: outputs.Optimizer.GetEnrollmentStatusesEnrollmentStatusCollectionItem[];
    }

    export interface GetEnrollmentStatusesEnrollmentStatusCollectionItem {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        enrollmentStatusId: string;
        /**
         * The OCID of the enrollment status.
         */
        id: string;
        /**
         * A filter that returns results that match the lifecycle state specified.
         */
        state: string;
        /**
         * A filter that returns results that match the Cloud Advisor enrollment status specified.
         */
        status: string;
        /**
         * The reason for the enrollment status of the tenancy.
         */
        statusReason: string;
        /**
         * The date and time the enrollment status was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the enrollment status was last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetEnrollmentStatusesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHistoriesFilter {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHistoriesHistoryCollection {
        /**
         * A collection of history summaries.
         */
        items: outputs.Optimizer.GetHistoriesHistoryCollectionItem[];
    }

    export interface GetHistoriesHistoryCollectionItem {
        /**
         * Details about the recommended action.
         */
        actions: outputs.Optimizer.GetHistoriesHistoryCollectionItemAction[];
        /**
         * The unique OCID associated with the category.
         */
        categoryId: string;
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * The name assigned to the compartment.
         */
        compartmentName: string;
        /**
         * The estimated cost savings, in dollars, for the resource action.
         */
        estimatedCostSaving: number;
        /**
         * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         */
        extendedMetadata: {[key: string]: any};
        /**
         * The unique OCID associated with the recommendation history.
         */
        id: string;
        /**
         * Custom metadata key/value pairs for the resource action.
         */
        metadata: {[key: string]: any};
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * The unique OCID associated with the recommendation.
         */
        recommendationId: string;
        /**
         * Optional. A filter that returns results that match the recommendation name specified.
         */
        recommendationName: string;
        /**
         * The unique OCID associated with the resource action.
         */
        resourceActionId: string;
        /**
         * The unique OCID associated with the resource.
         */
        resourceId: string;
        /**
         * Optional. A filter that returns results that match the resource type specified.
         */
        resourceType: string;
        /**
         * A filter that returns results that match the lifecycle state specified.
         */
        state: string;
        /**
         * A filter that returns recommendations that match the status specified.
         */
        status: string;
        /**
         * The date and time the recommendation history was created, in the format defined by RFC3339.
         */
        timeCreated: string;
    }

    export interface GetHistoriesHistoryCollectionItemAction {
        /**
         * Text describing the recommended action.
         */
        description: string;
        /**
         * The status of the resource action.
         */
        type: string;
        /**
         * The URL path to documentation that explains how to perform the action.
         */
        url: string;
    }

    export interface GetProfileLevelItem {
        /**
         * The default aggregation interval (in days) for profiles using this profile level.
         */
        defaultInterval: number;
        /**
         * The metrics that will be evaluated by profiles using this profile level.
         */
        metrics: outputs.Optimizer.GetProfileLevelItemMetric[];
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * Optional. A filter that returns results that match the recommendation name specified.
         */
        recommendationName: string;
        /**
         * The date and time the category details were created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the category details were last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * An array of aggregation intervals (in days) allowed for profiles using this profile level.
         */
        validIntervals: number[];
    }

    export interface GetProfileLevelItemMetric {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * The name of the statistic (e.g., `p95`).
         */
        statistic: string;
        /**
         * Optional. The metric value that the recommendation will target.
         */
        target: number;
        /**
         * The threshold that must be crossed for the recommendation to appear.
         */
        threshold: number;
    }

    export interface GetProfileLevelsConfiguration {
        /**
         * The list of tags specified in the current profile override.
         */
        items: outputs.Optimizer.GetProfileLevelsConfigurationItem[];
    }

    export interface GetProfileLevelsConfigurationItem {
        /**
         * The pre-defined profile level.
         */
        level: string;
        /**
         * The unique OCID of the recommendation.
         */
        recommendationId: string;
    }

    export interface GetProfileLevelsFilter {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProfileLevelsProfileLevelCollection {
        /**
         * A collection of profile levels.
         */
        items: outputs.Optimizer.GetProfileLevelsProfileLevelCollectionItem[];
    }

    export interface GetProfileLevelsProfileLevelCollectionItem {
        /**
         * The default aggregation interval (in days) for profiles using this profile level.
         */
        defaultInterval: number;
        /**
         * The metrics that will be evaluated by profiles using this profile level.
         */
        metrics: outputs.Optimizer.GetProfileLevelsProfileLevelCollectionItemMetric[];
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * Optional. A filter that returns results that match the recommendation name specified.
         */
        recommendationName: string;
        /**
         * The date and time the category details were created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the category details were last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
        /**
         * An array of aggregation intervals (in days) allowed for profiles using this profile level.
         */
        validIntervals: number[];
    }

    export interface GetProfileLevelsProfileLevelCollectionItemMetric {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * The name of the statistic (e.g., `p95`).
         */
        statistic: string;
        /**
         * Optional. The metric value that the recommendation will target.
         */
        target: number;
        /**
         * The threshold that must be crossed for the recommendation to appear.
         */
        threshold: number;
    }

    export interface GetProfileTargetCompartment {
        /**
         * The list of tags specified in the current profile override.
         */
        items: string[];
    }

    export interface GetProfileTargetTag {
        /**
         * The list of tags specified in the current profile override.
         */
        items: outputs.Optimizer.GetProfileTargetTagItem[];
    }

    export interface GetProfileTargetTagItem {
        /**
         * The name you use to refer to the tag, also known as the tag key.
         */
        tagDefinitionName: string;
        /**
         * The name of the tag namespace.
         */
        tagNamespaceName: string;
        /**
         * Specifies which tag value types in the `tagValues` field result in overrides of the recommendation criteria.
         */
        tagValueType: string;
        /**
         * The list of tag values. The tag value is the value that the user applying the tag adds to the tag key.
         */
        tagValues: string[];
    }

    export interface GetProfilesFilter {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProfilesProfileCollection {
        /**
         * The list of tags specified in the current profile override.
         */
        items: outputs.Optimizer.GetProfilesProfileCollectionItem[];
    }

    export interface GetProfilesProfileCollectionItem {
        /**
         * The time period over which to collect data for the recommendations, measured in number of days.
         */
        aggregationIntervalInDays: number;
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Text describing the profile. Avoid entering confidential information.
         */
        description: string;
        /**
         * Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The unique OCID of the profile.
         */
        id: string;
        /**
         * A list of configuration levels for each recommendation.
         */
        levelsConfigurations: outputs.Optimizer.GetProfilesProfileCollectionItemLevelsConfiguration[];
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * A filter that returns results that match the lifecycle state specified.
         */
        state: string;
        /**
         * Optional. The compartments specified in the profile override for a recommendation.
         */
        targetCompartments: outputs.Optimizer.GetProfilesProfileCollectionItemTargetCompartment[];
        /**
         * Optional. The tags specified in the profile override for a recommendation.
         */
        targetTags: outputs.Optimizer.GetProfilesProfileCollectionItemTargetTag[];
        /**
         * The date and time the profile was created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time the profile was last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetProfilesProfileCollectionItemLevelsConfiguration {
        /**
         * The list of tags specified in the current profile override.
         */
        items: outputs.Optimizer.GetProfilesProfileCollectionItemLevelsConfigurationItem[];
    }

    export interface GetProfilesProfileCollectionItemLevelsConfigurationItem {
        /**
         * The pre-defined profile level.
         */
        level: string;
        /**
         * The unique OCID of the recommendation.
         */
        recommendationId: string;
    }

    export interface GetProfilesProfileCollectionItemTargetCompartment {
        /**
         * The list of tags specified in the current profile override.
         */
        items: string[];
    }

    export interface GetProfilesProfileCollectionItemTargetTag {
        /**
         * The list of tags specified in the current profile override.
         */
        items: outputs.Optimizer.GetProfilesProfileCollectionItemTargetTagItem[];
    }

    export interface GetProfilesProfileCollectionItemTargetTagItem {
        /**
         * The name you use to refer to the tag, also known as the tag key.
         */
        tagDefinitionName: string;
        /**
         * The name of the tag namespace.
         */
        tagNamespaceName: string;
        /**
         * Specifies which tag value types in the `tagValues` field result in overrides of the recommendation criteria.
         */
        tagValueType: string;
        /**
         * The list of tag values. The tag value is the value that the user applying the tag adds to the tag key.
         */
        tagValues: string[];
    }

    export interface GetRecommendationResourceCount {
        /**
         * The count of resources.
         */
        count: number;
        /**
         * The current status of the recommendation.
         */
        status: string;
    }

    export interface GetRecommendationStrategiesFilter {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRecommendationStrategiesRecommendationStrategyCollection {
        /**
         * A collection of recommendation strategy summaries.
         */
        items: outputs.Optimizer.GetRecommendationStrategiesRecommendationStrategyCollectionItem[];
    }

    export interface GetRecommendationStrategiesRecommendationStrategyCollectionItem {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * The list of strategies used.
         */
        strategies: outputs.Optimizer.GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategy[];
    }

    export interface GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategy {
        /**
         * Whether this is the default recommendation strategy.
         */
        isDefault: boolean;
        /**
         * The list of strategies for the parameters.
         */
        parametersDefinitions: outputs.Optimizer.GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategyParametersDefinition[];
        /**
         * The name of the strategy.
         */
        strategyName: string;
    }

    export interface GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategyParametersDefinition {
        /**
         * A default value used for the strategy parameter.
         */
        defaultValues: any[];
        /**
         * Text describing the strategy parameter.
         */
        description: string;
        /**
         * Whether this parameter is required.
         */
        isRequired: boolean;
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * The list of possible values used for these strategy parameters.
         */
        possibleValues: any[];
        /**
         * The type of strategy parameter.
         */
        type: string;
    }

    export interface GetRecommendationStrategyItem {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * The list of strategies used.
         */
        strategies: outputs.Optimizer.GetRecommendationStrategyItemStrategy[];
    }

    export interface GetRecommendationStrategyItemStrategy {
        /**
         * Whether this is the default recommendation strategy.
         */
        isDefault: boolean;
        /**
         * The list of strategies for the parameters.
         */
        parametersDefinitions: outputs.Optimizer.GetRecommendationStrategyItemStrategyParametersDefinition[];
        /**
         * The name of the strategy.
         */
        strategyName: string;
    }

    export interface GetRecommendationStrategyItemStrategyParametersDefinition {
        /**
         * A default value used for the strategy parameter.
         */
        defaultValues: any[];
        /**
         * Text describing the strategy parameter.
         */
        description: string;
        /**
         * Whether this parameter is required.
         */
        isRequired: boolean;
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * The list of possible values used for these strategy parameters.
         */
        possibleValues: any[];
        /**
         * The type of strategy parameter.
         */
        type: string;
    }

    export interface GetRecommendationSupportedLevel {
        /**
         * The list of supported levels.
         */
        items: outputs.Optimizer.GetRecommendationSupportedLevelItem[];
    }

    export interface GetRecommendationSupportedLevelItem {
        /**
         * The name of the profile level.
         */
        name: string;
    }

    export interface GetRecommendationsFilter {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRecommendationsRecommendationCollection {
        /**
         * The list of supported levels.
         */
        items: outputs.Optimizer.GetRecommendationsRecommendationCollectionItem[];
    }

    export interface GetRecommendationsRecommendationCollectionItem {
        /**
         * The unique OCID associated with the category.
         */
        categoryId: string;
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Text describing the recommendation.
         */
        description: string;
        /**
         * The estimated cost savings, in dollars, for the recommendation.
         */
        estimatedCostSaving: number;
        /**
         * Additional metadata key/value pairs for the recommendation.
         */
        extendedMetadata: {[key: string]: any};
        /**
         * The unique OCID associated with the recommendation.
         */
        id: string;
        /**
         * The level of importance assigned to the recommendation.
         */
        importance: string;
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        recommendationId: string;
        /**
         * An array of `ResourceCount` objects grouped by the status of the resource actions.
         */
        resourceCounts: outputs.Optimizer.GetRecommendationsRecommendationCollectionItemResourceCount[];
        /**
         * A filter that returns results that match the lifecycle state specified.
         */
        state: string;
        /**
         * A filter that returns recommendations that match the status specified.
         */
        status: string;
        /**
         * Optional. The profile levels supported by a recommendation. For example, profile level values could be `Low`, `Medium`, and `High`. Not all recommendations support this field.
         */
        supportedLevels: outputs.Optimizer.GetRecommendationsRecommendationCollectionItemSupportedLevel[];
        /**
         * The date and time the recommendation details were created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time that the recommendation entered its current status. The format is defined by RFC3339.
         */
        timeStatusBegin: string;
        /**
         * The date and time the current status will change. The format is defined by RFC3339.
         */
        timeStatusEnd: string;
        /**
         * The date and time the recommendation details were last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetRecommendationsRecommendationCollectionItemResourceCount {
        /**
         * The count of resources.
         */
        count: number;
        /**
         * A filter that returns recommendations that match the status specified.
         */
        status: string;
    }

    export interface GetRecommendationsRecommendationCollectionItemSupportedLevel {
        /**
         * The list of supported levels.
         */
        items: outputs.Optimizer.GetRecommendationsRecommendationCollectionItemSupportedLevelItem[];
    }

    export interface GetRecommendationsRecommendationCollectionItemSupportedLevelItem {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
    }

    export interface GetResourceActionAction {
        /**
         * Text describing the recommended action.
         */
        description: string;
        /**
         * The status of the resource action.
         */
        type: string;
        /**
         * The URL path to documentation that explains how to perform the action.
         */
        url: string;
    }

    export interface GetResourceActionsFilter {
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetResourceActionsResourceActionCollection {
        items: outputs.Optimizer.GetResourceActionsResourceActionCollectionItem[];
    }

    export interface GetResourceActionsResourceActionCollectionItem {
        /**
         * Details about the recommended action.
         */
        actions: outputs.Optimizer.GetResourceActionsResourceActionCollectionItemAction[];
        /**
         * The unique OCID associated with the category.
         */
        categoryId: string;
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * The name associated with the compartment.
         */
        compartmentName: string;
        /**
         * The estimated cost savings, in dollars, for the resource action.
         */
        estimatedCostSaving: number;
        /**
         * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         */
        extendedMetadata: {[key: string]: any};
        /**
         * The unique OCID associated with the resource action.
         */
        id: string;
        /**
         * Custom metadata key/value pairs for the resource action.
         */
        metadata: {[key: string]: any};
        /**
         * Optional. A filter that returns results that match the name specified.
         */
        name: string;
        /**
         * The unique OCID associated with the recommendation.
         */
        recommendationId: string;
        resourceActionId: string;
        /**
         * The unique OCID associated with the resource.
         */
        resourceId: string;
        /**
         * Optional. A filter that returns results that match the resource type specified.
         */
        resourceType: string;
        /**
         * A filter that returns results that match the lifecycle state specified.
         */
        state: string;
        /**
         * A filter that returns recommendations that match the status specified.
         */
        status: string;
        /**
         * The date and time the resource action details were created, in the format defined by RFC3339.
         */
        timeCreated: string;
        /**
         * The date and time that the resource action entered its current status. The format is defined by RFC3339.
         */
        timeStatusBegin: string;
        /**
         * The date and time the current status will change. The format is defined by RFC3339.
         */
        timeStatusEnd: string;
        /**
         * The date and time the resource action details were last updated, in the format defined by RFC3339.
         */
        timeUpdated: string;
    }

    export interface GetResourceActionsResourceActionCollectionItemAction {
        /**
         * Text describing the recommended action.
         */
        description: string;
        /**
         * The status of the resource action.
         */
        type: string;
        /**
         * The URL path to documentation that explains how to perform the action.
         */
        url: string;
    }

    export interface ProfileLevelsConfiguration {
        /**
         * (Updatable) The list of tags specified in the current profile override.
         */
        items: outputs.Optimizer.ProfileLevelsConfigurationItem[];
    }

    export interface ProfileLevelsConfigurationItem {
        /**
         * (Updatable) The pre-defined profile level.
         */
        level: string;
        /**
         * (Updatable) The unique OCID of the recommendation.
         */
        recommendationId: string;
    }

    export interface ProfileTargetCompartments {
        /**
         * (Updatable) The list of tags specified in the current profile override.
         */
        items: string[];
    }

    export interface ProfileTargetTags {
        /**
         * (Updatable) The list of tags specified in the current profile override.
         */
        items: outputs.Optimizer.ProfileTargetTagsItem[];
    }

    export interface ProfileTargetTagsItem {
        /**
         * (Updatable) The name you use to refer to the tag, also known as the tag key.
         */
        tagDefinitionName: string;
        /**
         * (Updatable) The name of the tag namespace.
         */
        tagNamespaceName: string;
        /**
         * (Updatable) Specifies which tag value types in the `tagValues` field result in overrides of the recommendation criteria.
         */
        tagValueType: string;
        /**
         * (Updatable) The list of tag values. The tag value is the value that the user applying the tag adds to the tag key.
         */
        tagValues: string[];
    }

    export interface RecommendationResourceCount {
        /**
         * The count of resources.
         */
        count: number;
        /**
         * (Updatable) The status of the recommendation.
         */
        status: string;
    }

    export interface RecommendationSupportedLevel {
        /**
         * The list of supported levels.
         */
        items: outputs.Optimizer.RecommendationSupportedLevelItem[];
    }

    export interface RecommendationSupportedLevelItem {
        /**
         * The name of the profile level.
         */
        name: string;
    }

    export interface ResourceActionAction {
        /**
         * Text describing the recommended action.
         */
        description: string;
        /**
         * The status of the resource action.
         */
        type: string;
        /**
         * The URL path to documentation that explains how to perform the action.
         */
        url: string;
    }

}

export namespace OsManagement {
    export interface GetManagedInstanceAutonomouse {
        /**
         * True if daily updates are enabled
         */
        isAutoUpdateEnabled: boolean;
    }

    export interface GetManagedInstanceChildSoftwareSource {
        /**
         * software source identifier
         */
        id: string;
        /**
         * software source name
         */
        name: string;
    }

    export interface GetManagedInstanceGroupManagedInstance {
        /**
         * User friendly name
         */
        displayName: string;
        /**
         * unique identifier that is immutable on creation
         */
        id: string;
    }

    export interface GetManagedInstanceGroupsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedInstanceGroupsManagedInstanceGroup {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Information specified by the user about the managed instance group
         */
        description: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * unique identifier that is immutable on creation
         */
        id: string;
        managedInstanceCount: number;
        /**
         * list of Managed Instances in the group
         */
        managedInstances: outputs.OsManagement.GetManagedInstanceGroupsManagedInstanceGroupManagedInstance[];
        /**
         * The OS family for which to list resources.
         */
        osFamily: string;
        /**
         * The current lifecycle state for the object.
         */
        state: string;
    }

    export interface GetManagedInstanceGroupsManagedInstanceGroupManagedInstance {
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * unique identifier that is immutable on creation
         */
        id: string;
    }

    export interface GetManagedInstanceManagedInstanceGroup {
        /**
         * User friendly name
         */
        displayName: string;
        /**
         * software source identifier
         */
        id: string;
    }

    export interface GetManagedInstanceModuleStreamsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance {
        /**
         * The name of a module.  This parameter is required if a streamName is specified.
         */
        moduleName: string;
        /**
         * The set of profiles that the module stream contains.
         */
        profiles: outputs.OsManagement.GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile[];
        /**
         * The OCID of the software source that provides this module stream.
         */
        softwareSourceId: string;
        /**
         * The status of the stream
         */
        status: string;
        /**
         * The name of the stream of the containing module.  This parameter is required if a profileName is specified.
         */
        streamName: string;
        /**
         * The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         */
        timeModified: string;
    }

    export interface GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile {
        /**
         * The name of a module.  This parameter is required if a streamName is specified.
         */
        moduleName: string;
        /**
         * The name of the profile
         */
        profileName: string;
        /**
         * The status of the stream
         */
        status: string;
        /**
         * The name of the stream of the containing module.  This parameter is required if a profileName is specified.
         */
        streamName: string;
        /**
         * The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         */
        timeModified: string;
    }

    export interface GetManagedInstanceParentSoftwareSource {
        /**
         * software source identifier
         */
        id: string;
        /**
         * software source name
         */
        name: string;
    }

    export interface GetManagedInstanceStreamProfileFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance {
        /**
         * The name of a module.  This parameter is required if a streamName is specified.
         */
        moduleName: string;
        /**
         * The name of the profile of the containing module stream
         */
        profileName: string;
        /**
         * The status of the profile.
         */
        status: string;
        /**
         * The name of the stream of the containing module.  This parameter is required if a profileName is specified.
         */
        streamName: string;
        /**
         * The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         */
        timeModified: string;
    }

    export interface GetManagedInstancesFilter {
        /**
         * software source name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetManagedInstancesManagedInstance {
        /**
         * if present, indicates the Managed Instance is an autonomous instance. Holds all the Autonomous specific information
         */
        autonomouses: outputs.OsManagement.GetManagedInstancesManagedInstanceAutonomouse[];
        /**
         * Number of bug fix type updates available to be installed
         */
        bugUpdatesAvailable: number;
        /**
         * list of child Software Sources attached to the Managed Instance
         */
        childSoftwareSources: outputs.OsManagement.GetManagedInstancesManagedInstanceChildSoftwareSource[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Information specified by the user about the managed instance
         */
        description: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Number of enhancement type updates available to be installed
         */
        enhancementUpdatesAvailable: number;
        /**
         * software source identifier
         */
        id: string;
        /**
         * True if user allow data collection for this instance
         */
        isDataCollectionAuthorized: boolean;
        /**
         * Indicates whether a reboot is required to complete installation of updates.
         */
        isRebootRequired: boolean;
        /**
         * The ksplice effective kernel version
         */
        kspliceEffectiveKernelVersion: string;
        /**
         * Time at which the instance last booted
         */
        lastBoot: string;
        /**
         * Time at which the instance last checked in
         */
        lastCheckin: string;
        /**
         * The ids of the managed instance groups of which this instance is a member.
         */
        managedInstanceGroups: outputs.OsManagement.GetManagedInstancesManagedInstanceManagedInstanceGroup[];
        managedInstanceId: string;
        /**
         * OCID of the ONS topic used to send notification to users
         */
        notificationTopicId: string;
        /**
         * The OS family for which to list resources.
         */
        osFamily: string;
        /**
         * Operating System Kernel Version
         */
        osKernelVersion: string;
        /**
         * Operating System Name
         */
        osName: string;
        /**
         * Operating System Version
         */
        osVersion: string;
        /**
         * Number of non-classified updates available to be installed
         */
        otherUpdatesAvailable: number;
        /**
         * the parent (base) Software Source attached to the Managed Instance
         */
        parentSoftwareSources: outputs.OsManagement.GetManagedInstancesManagedInstanceParentSoftwareSource[];
        /**
         * Number of scheduled jobs associated with this instance
         */
        scheduledJobCount: number;
        /**
         * Number of security type updates available to be installed
         */
        securityUpdatesAvailable: number;
        /**
         * status of the managed instance.
         */
        status: string;
        /**
         * Number of updates available to be installed
         */
        updatesAvailable: number;
        /**
         * Number of work requests associated with this instance
         */
        workRequestCount: number;
    }

    export interface GetManagedInstancesManagedInstanceAutonomouse {
        /**
         * True if daily updates are enabled
         */
        isAutoUpdateEnabled: boolean;
    }

    export interface GetManagedInstancesManagedInstanceChildSoftwareSource {
        /**
         * software source identifier
         */
        id: string;
        /**
         * software source name
         */
        name: string;
    }

    export interface GetManagedInstancesManagedInstanceManagedInstanceGroup {
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * software source identifier
         */
        id: string;
    }

    export interface GetManagedInstancesManagedInstanceParentSoftwareSource {
        /**
         * software source identifier
         */
        id: string;
        /**
         * software source name
         */
        name: string;
    }

    export interface GetSoftwareSourceAssociatedManagedInstance {
        /**
         * User friendly name for the software source
         */
        displayName: string;
        /**
         * OCID for the Software Source
         */
        id: string;
    }

    export interface GetSoftwareSourceStreamProfileFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSoftwareSourceStreamProfileModuleStreamProfile {
        /**
         * The name of a module.  This parameter is required if a streamName is specified.
         */
        moduleName: string;
        /**
         * The name of the profile of the containing module stream
         */
        profileName: string;
        /**
         * The name of the stream of the containing module.  This parameter is required if a profileName is specified.
         */
        streamName: string;
    }

    export interface GetSoftwareSourcesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSoftwareSourcesSoftwareSource {
        /**
         * The architecture type supported by the Software Source
         */
        archType: string;
        /**
         * list of the Managed Instances associated with this Software Sources
         */
        associatedManagedInstances: outputs.OsManagement.GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance[];
        /**
         * The yum repository checksum type used by this software source
         */
        checksumType: string;
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Information specified by the user about the software source
         */
        description: string;
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Fingerprint of the GPG key for this software source
         */
        gpgKeyFingerprint: string;
        /**
         * ID of the GPG key for this software source
         */
        gpgKeyId: string;
        /**
         * URL of the GPG key for this software source
         */
        gpgKeyUrl: string;
        /**
         * OCID for the Software Source
         */
        id: string;
        /**
         * Email address of the person maintaining this software source
         */
        maintainerEmail: string;
        /**
         * Name of the person maintaining this software source
         */
        maintainerName: string;
        /**
         * Phone number of the person maintaining this software source
         */
        maintainerPhone: string;
        /**
         * Number of packages
         */
        packages: number;
        /**
         * OCID for the parent software source, if there is one
         */
        parentId: string;
        /**
         * Display name the parent software source, if there is one
         */
        parentName: string;
        /**
         * Type of the Software Source
         */
        repoType: string;
        /**
         * The current lifecycle state for the object.
         */
        state: string;
        /**
         * status of the software source.
         */
        status: string;
        /**
         * URL for the repostiory
         */
        url: string;
    }

    export interface GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance {
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * OCID for the Software Source
         */
        id: string;
    }

    export interface ManagedInstanceAutonomouse {
        /**
         * True if daily updates are enabled
         */
        isAutoUpdateEnabled: boolean;
    }

    export interface ManagedInstanceChildSoftwareSource {
        /**
         * software source identifier
         */
        id: string;
        /**
         * software source name
         */
        name: string;
    }

    export interface ManagedInstanceGroupManagedInstance {
        /**
         * (Updatable) Managed Instance Group identifier
         */
        displayName: string;
        /**
         * unique identifier that is immutable on creation
         */
        id: string;
    }

    export interface ManagedInstanceManagedInstanceGroup {
        /**
         * User friendly name
         */
        displayName: string;
        /**
         * software source identifier
         */
        id: string;
    }

    export interface ManagedInstanceManagementChildSoftwareSource {
        /**
         * software source identifier
         */
        id: string;
        /**
         * software source name
         */
        name: string;
    }

    export interface ManagedInstanceManagementManagedInstanceGroup {
        /**
         * User friendly name
         */
        displayName: string;
        /**
         * software source identifier
         */
        id: string;
    }

    export interface ManagedInstanceManagementParentSoftwareSource {
        /**
         * software source identifier
         */
        id: string;
        /**
         * software source name
         */
        name: string;
    }

    export interface ManagedInstanceParentSoftwareSource {
        /**
         * software source identifier
         */
        id: string;
        /**
         * software source name
         */
        name: string;
    }

    export interface SoftwareSourceAssociatedManagedInstance {
        /**
         * (Updatable) User friendly name for the software source
         */
        displayName: string;
        /**
         * OCID for the Software Source
         */
        id: string;
    }
}

export namespace OspGateway {
    export interface GetInvoiceBillToAddress {
        /**
         * Address line 1
         */
        addressLine1: string;
        /**
         * Address line 2
         */
        addressLine2: string;
        /**
         * Address line 3
         */
        addressLine3: string;
        /**
         * Address line 4
         */
        addressLine4: string;
        /**
         * Name of the city
         */
        city: string;
        /**
         * Name of the customer company
         */
        companyName: string;
        /**
         * Name of the contact person
         */
        contactName: string;
        /**
         * Country details model
         */
        countries: outputs.OspGateway.GetInvoiceBillToAddressCountry[];
        /**
         * County name
         */
        county: string;
        /**
         * ZIP no
         */
        postalCode: string;
        /**
         * Name of the province
         */
        province: string;
        /**
         * Name of the state
         */
        state: string;
        /**
         * Street name
         */
        streetName: string;
        /**
         * House no
         */
        streetNumber: string;
    }

    export interface GetInvoiceBillToAddressCountry {
        /**
         * Country code in ISO-3166-1 3-letter format
         */
        ascii3countryCode: string;
        /**
         * Country code in ISO-3166-1 2-letter format
         */
        countryCode: string;
        /**
         * Indentifier of the country. This is a DB side unique id which was generated when the entity was created in the table
         */
        countryId: number;
        /**
         * Name of the country
         */
        countryName: string;
        /**
         * Language identifier
         */
        languageId: number;
    }

    export interface GetInvoiceCurrency {
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * Currency symbol
         */
        currencySymbol: string;
        /**
         * Name of the currency
         */
        name: string;
        /**
         * Round decimal point
         */
        roundDecimalPoint: number;
        /**
         * USD conversion rate of the currency
         */
        usdConversion: number;
    }

    export interface GetInvoiceLastPaymentDetail {
        /**
         * Amount that paid
         */
        amountPaid: number;
        /**
         * Credit card type
         */
        creditCardType: string;
        /**
         * Last four routing digits of the card
         */
        echeckRouting: string;
        /**
         * Last four digits of the card
         */
        lastDigits: string;
        /**
         * Name on the credit card
         */
        nameOnCard: string;
        /**
         * example
         */
        paidBy: string;
        /**
         * Payment method
         */
        paymentMethod: string;
        /**
         * The id (email address) of the paypal payment
         */
        paypalId: string;
        /**
         * paypal payment reference
         */
        paypalReference: string;
        /**
         * Expired date of the credit card
         */
        timeExpiration: string;
        /**
         * Paid the invoice on this day
         */
        timePaidOn: string;
    }

    export interface GetInvoicesFilter {
        /**
         * Name of the currency
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInvoicesInvoiceCollection {
        items: outputs.OspGateway.GetInvoicesInvoiceCollectionItem[];
    }

    export interface GetInvoicesInvoiceCollectionItem {
        /**
         * Address details model
         */
        billToAddresses: outputs.OspGateway.GetInvoicesInvoiceCollectionItemBillToAddress[];
        /**
         * Currency details model
         */
        currencies: outputs.OspGateway.GetInvoicesInvoiceCollectionItemCurrency[];
        /**
         * Transaction identifier
         */
        internalInvoiceId: string;
        /**
         * Total amount of invoice
         */
        invoiceAmount: number;
        /**
         * Invoice amount adjust
         */
        invoiceAmountAdjusted: number;
        /**
         * Invoice amount applied
         */
        invoiceAmountApplied: number;
        /**
         * Invoice amount credit
         */
        invoiceAmountCredited: number;
        /**
         * Balance of invoice
         */
        invoiceAmountDue: number;
        invoiceAmountInDispute: number;
        /**
         * The invoice query param (not unique).
         */
        invoiceId: string;
        /**
         * Invoice external reference
         */
        invoiceNumber: string;
        /**
         * Invoice PO number
         */
        invoicePoNumber: string;
        /**
         * Invoice reference number
         */
        invoiceRefNumber: string;
        /**
         * Invoice status
         */
        invoiceStatus: string;
        /**
         * Type of invoice
         */
        invoiceType: string;
        /**
         * Is credit card payment eligible
         */
        isCreditCardPayable: boolean;
        /**
         * Is pdf download access allowed
         */
        isDisplayDownloadPdf: boolean;
        isDisplayViewPdf: boolean;
        isPaid: boolean;
        /**
         * Whether invoice can be payed
         */
        isPayable: boolean;
        isPaymentFailed: boolean;
        /**
         * Is emailing pdf allowed
         */
        isPdfEmailAvailable: boolean;
        /**
         * Payment related details
         */
        lastPaymentDetails: outputs.OspGateway.GetInvoicesInvoiceCollectionItemLastPaymentDetail[];
        partyName: string;
        /**
         * Payment terms
         */
        paymentTerms: string;
        /**
         * Preferred Email on the invoice
         */
        preferredEmail: string;
        /**
         * List of subscription identifiers
         */
        subscriptionIds: string[];
        /**
         * Tax of invoice amount
         */
        tax: number;
        /**
         * Date of invoice
         */
        timeInvoice: string;
        /**
         * Due date of invoice
         */
        timeInvoiceDue: string;
    }

    export interface GetInvoicesInvoiceCollectionItemBillToAddress {
        /**
         * Address line 1
         */
        addressLine1: string;
        /**
         * Address line 2
         */
        addressLine2: string;
        /**
         * Address line 3
         */
        addressLine3: string;
        /**
         * Address line 4
         */
        addressLine4: string;
        /**
         * Name of the city
         */
        city: string;
        /**
         * Name of the customer company
         */
        companyName: string;
        /**
         * Name of the contact person
         */
        contactName: string;
        /**
         * Country details model
         */
        countries: outputs.OspGateway.GetInvoicesInvoiceCollectionItemBillToAddressCountry[];
        /**
         * County name
         */
        county: string;
        /**
         * ZIP no
         */
        postalCode: string;
        /**
         * Name of the province
         */
        province: string;
        /**
         * Name of the state
         */
        state: string;
        /**
         * Street name
         */
        streetName: string;
        /**
         * House no
         */
        streetNumber: string;
    }

    export interface GetInvoicesInvoiceCollectionItemBillToAddressCountry {
        /**
         * Country code in ISO-3166-1 3-letter format
         */
        ascii3countryCode: string;
        /**
         * Country code in ISO-3166-1 2-letter format
         */
        countryCode: string;
        /**
         * Indentifier of the country. This is a DB side unique id which was generated when the entity was created in the table
         */
        countryId: number;
        /**
         * Name of the country
         */
        countryName: string;
        /**
         * Language identifier
         */
        languageId: number;
    }

    export interface GetInvoicesInvoiceCollectionItemCurrency {
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * Currency symbol
         */
        currencySymbol: string;
        /**
         * Name of the currency
         */
        name: string;
        /**
         * Round decimal point
         */
        roundDecimalPoint: number;
        /**
         * USD conversion rate of the currency
         */
        usdConversion: number;
    }

    export interface GetInvoicesInvoiceCollectionItemLastPaymentDetail {
        /**
         * Amount that paid
         */
        amountPaid: number;
        /**
         * Credit card type
         */
        creditCardType: string;
        /**
         * Last four routing digits of the card
         */
        echeckRouting: string;
        /**
         * Last four digits of the card
         */
        lastDigits: string;
        /**
         * Name on the credit card
         */
        nameOnCard: string;
        /**
         * example
         */
        paidBy: string;
        /**
         * Payment method
         */
        paymentMethod: string;
        /**
         * The id (email address) of the paypal payment
         */
        paypalId: string;
        /**
         * paypal payment reference
         */
        paypalReference: string;
        /**
         * Expired date of the credit card
         */
        timeExpiration: string;
        /**
         * Paid the invoice on this day
         */
        timePaidOn: string;
    }

    export interface GetInvoicesInvoiceLineItem {
        /**
         * Currency details model
         */
        currencies: outputs.OspGateway.GetInvoicesInvoiceLineItemCurrency[];
        /**
         * Unit price of the ordered product
         */
        netUnitPrice: number;
        /**
         * Product of the item
         */
        orderNo: string;
        /**
         * Part number
         */
        partNumber: string;
        /**
         * Product of the item
         */
        product: string;
        /**
         * Quantity of the ordered product
         */
        quantity: number;
        /**
         * End date
         */
        timeEnd: string;
        /**
         * Start date
         */
        timeStart: string;
        /**
         * Total price of the ordered product (Net unit price x quantity)
         */
        totalPrice: number;
    }

    export interface GetInvoicesInvoiceLineItemCurrency {
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * Currency symbol
         */
        currencySymbol: string;
        /**
         * Name of the currency
         */
        name: string;
        /**
         * Round decimal point
         */
        roundDecimalPoint: number;
        /**
         * USD conversion rate of the currency
         */
        usdConversion: number;
    }

    export interface GetInvoicesInvoiceLinesFilter {
        /**
         * Name of the currency
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetInvoicesInvoiceLinesInvoiceLineCollection {
        /**
         * Invoice line list elements
         */
        items: outputs.OspGateway.GetInvoicesInvoiceLinesInvoiceLineCollectionItem[];
    }

    export interface GetInvoicesInvoiceLinesInvoiceLineCollectionItem {
        /**
         * Currency details model
         */
        currencies: outputs.OspGateway.GetInvoicesInvoiceLinesInvoiceLineCollectionItemCurrency[];
        /**
         * Unit price of the ordered product
         */
        netUnitPrice: number;
        /**
         * Product of the item
         */
        orderNo: string;
        /**
         * Part number
         */
        partNumber: string;
        /**
         * Product of the item
         */
        product: string;
        /**
         * Quantity of the ordered product
         */
        quantity: number;
        /**
         * End date
         */
        timeEnd: string;
        /**
         * Start date
         */
        timeStart: string;
        /**
         * Total price of the ordered product (Net unit price x quantity)
         */
        totalPrice: number;
    }

    export interface GetInvoicesInvoiceLinesInvoiceLineCollectionItemCurrency {
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * Currency symbol
         */
        currencySymbol: string;
        /**
         * Name of the currency
         */
        name: string;
        /**
         * Round decimal point
         */
        roundDecimalPoint: number;
        /**
         * USD conversion rate of the currency
         */
        usdConversion: number;
    }

    export interface GetSubscriptionBillingAddress {
        /**
         * Address identifier.
         */
        addressKey: string;
        /**
         * Name of the city.
         */
        city: string;
        /**
         * Name of the customer company.
         */
        companyName: string;
        /**
         * Country of the address.
         */
        country: string;
        /**
         * The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * First name of the paypal user.
         */
        firstName: string;
        /**
         * Last name of the paypal user.
         */
        lastName: string;
        /**
         * Address line 1.
         */
        line1: string;
        /**
         * Address line 2.
         */
        line2: string;
        /**
         * Post code of the address.
         */
        postalCode: string;
        /**
         * State of the address.
         */
        state: string;
    }

    export interface GetSubscriptionPaymentGateway {
        /**
         * Merchant details.
         */
        merchantDefinedDatas: outputs.OspGateway.GetSubscriptionPaymentGatewayMerchantDefinedData[];
    }

    export interface GetSubscriptionPaymentGatewayMerchantDefinedData {
        /**
         * Cloud account name.
         */
        cloudAccountName: string;
        /**
         * Promotion type code.
         */
        promoType: string;
    }

    export interface GetSubscriptionPaymentOption {
        /**
         * Credit card type.
         */
        creditCardType: string;
        /**
         * The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * Agreement id for the paypal account.
         */
        extBillingAgreementId: string;
        /**
         * First name of the paypal user.
         */
        firstName: string;
        /**
         * Last four digits of the card.
         */
        lastDigits: string;
        /**
         * Last name of the paypal user.
         */
        lastName: string;
        /**
         * Name on the credit card.
         */
        nameOnCard: string;
        /**
         * Payment method
         */
        paymentMethod: string;
        /**
         * Expired date of the credit card.
         */
        timeExpiration: string;
        /**
         * Wallet instrument internal id.
         */
        walletInstrumentId: string;
        /**
         * Wallet transaction id.
         */
        walletTransactionId: string;
    }

    export interface GetSubscriptionSubscription {
        /**
         * Bill to customer Account id.
         */
        billToCustAccountId: string;
        /**
         * Billing address details model.
         */
        billingAddresses: outputs.OspGateway.GetSubscriptionSubscriptionBillingAddress[];
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * GSI Subscription external code.
         */
        gsiOrgCode: string;
        /**
         * Subscription id identifier (OCID).
         */
        id: string;
        /**
         * Payment intension.
         */
        isIntentToPay: boolean;
        /**
         * Language short code (en, de, hu, etc)
         */
        languageCode: string;
        /**
         * GSI organization external identifier.
         */
        organizationId: string;
        /**
         * Payment gateway details.
         */
        paymentGateways: outputs.OspGateway.GetSubscriptionSubscriptionPaymentGateway[];
        /**
         * Payment option list of a subscription.
         */
        paymentOptions: outputs.OspGateway.GetSubscriptionSubscriptionPaymentOption[];
        /**
         * Subscription plan type.
         */
        planType: string;
        /**
         * Ship to customer account role.
         */
        shipToCustAcctRoleId: string;
        /**
         * Ship to customer account site address id.
         */
        shipToCustAcctSiteId: string;
        /**
         * Subscription plan number.
         */
        subscriptionPlanNumber: string;
        /**
         * Tax details.
         */
        taxInfos: outputs.OspGateway.GetSubscriptionSubscriptionTaxInfo[];
        /**
         * Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
         */
        timePlanUpgrade: string;
        /**
         * Start date of the subscription.
         */
        timeStart: string;
        /**
         * Status of the upgrade.
         */
        upgradeState: string;
        /**
         * This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
         */
        upgradeStateDetails: string;
    }

    export interface GetSubscriptionSubscriptionBillingAddress {
        /**
         * Address identifier.
         */
        addressKey: string;
        /**
         * Name of the city.
         */
        city: string;
        /**
         * Name of the customer company.
         */
        companyName: string;
        /**
         * Country of the address.
         */
        country: string;
        /**
         * The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * First name of the paypal user.
         */
        firstName: string;
        /**
         * Last name of the paypal user.
         */
        lastName: string;
        /**
         * Address line 1.
         */
        line1: string;
        /**
         * Address line 2.
         */
        line2: string;
        /**
         * Post code of the address.
         */
        postalCode: string;
        /**
         * State of the address.
         */
        state: string;
    }

    export interface GetSubscriptionSubscriptionPaymentGateway {
        /**
         * Merchant details.
         */
        merchantDefinedDatas: outputs.OspGateway.GetSubscriptionSubscriptionPaymentGatewayMerchantDefinedData[];
    }

    export interface GetSubscriptionSubscriptionPaymentGatewayMerchantDefinedData {
        /**
         * Cloud account name.
         */
        cloudAccountName: string;
        /**
         * Promotion type code.
         */
        promoType: string;
    }

    export interface GetSubscriptionSubscriptionPaymentOption {
        /**
         * Credit card type.
         */
        creditCardType: string;
        /**
         * The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * Agreement id for the paypal account.
         */
        extBillingAgreementId: string;
        /**
         * First name of the paypal user.
         */
        firstName: string;
        /**
         * Last four digits of the card.
         */
        lastDigits: string;
        /**
         * Last name of the paypal user.
         */
        lastName: string;
        /**
         * Name on the credit card.
         */
        nameOnCard: string;
        /**
         * Payment method
         */
        paymentMethod: string;
        /**
         * Expired date of the credit card.
         */
        timeExpiration: string;
        /**
         * Wallet instrument internal id.
         */
        walletInstrumentId: string;
        /**
         * Wallet transaction id.
         */
        walletTransactionId: string;
    }

    export interface GetSubscriptionSubscriptionTaxInfo {
        /**
         * Tax exemption reason code.
         */
        noTaxReasonCode: string;
        /**
         * Tax exemption reason description.
         */
        noTaxReasonCodeDetails: string;
        /**
         * Brazilian companies' CNPJ number.
         */
        taxCnpj: string;
        /**
         * Tay payer identifier.
         */
        taxPayerId: string;
        /**
         * Tax registration number.
         */
        taxRegNumber: string;
    }

    export interface GetSubscriptionTaxInfo {
        /**
         * Tax exemption reason code.
         */
        noTaxReasonCode: string;
        /**
         * Tax exemption reason description.
         */
        noTaxReasonCodeDetails: string;
        /**
         * Brazilian companies' CNPJ number.
         */
        taxCnpj: string;
        /**
         * Tay payer identifier.
         */
        taxPayerId: string;
        /**
         * Tax registration number.
         */
        taxRegNumber: string;
    }

    export interface GetSubscriptionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubscriptionsSubscriptionCollection {
        items: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItem[];
    }

    export interface GetSubscriptionsSubscriptionCollectionItem {
        /**
         * Bill to customer Account id.
         */
        billToCustAccountId: string;
        /**
         * Billing address details model.
         */
        billingAddresses: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemBillingAddress[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Currency code
         */
        currencyCode: string;
        email: string;
        /**
         * GSI Subscription external code.
         */
        gsiOrgCode: string;
        /**
         * Subscription id identifier (OCID).
         */
        id: string;
        /**
         * Payment intension.
         */
        isIntentToPay: boolean;
        /**
         * Language short code (en, de, hu, etc)
         */
        languageCode: string;
        /**
         * GSI organization external identifier.
         */
        organizationId: string;
        /**
         * The home region's public name of the logged in user.
         */
        ospHomeRegion: string;
        /**
         * Payment gateway details.
         */
        paymentGateways: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemPaymentGateway[];
        /**
         * Payment option list of a subscription.
         */
        paymentOptions: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemPaymentOption[];
        /**
         * Subscription plan type.
         */
        planType: string;
        /**
         * Ship to customer account role.
         */
        shipToCustAcctRoleId: string;
        /**
         * Ship to customer account site address id.
         */
        shipToCustAcctSiteId: string;
        subscriptionId: string;
        /**
         * Subscription plan number.
         */
        subscriptionPlanNumber: string;
        subscriptions: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemSubscription[];
        /**
         * Tax details.
         */
        taxInfos: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemTaxInfo[];
        /**
         * Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
         */
        timePlanUpgrade: string;
        /**
         * Start date of the subscription.
         */
        timeStart: string;
        /**
         * Status of the upgrade.
         */
        upgradeState: string;
        /**
         * This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
         */
        upgradeStateDetails: string;
    }

    export interface GetSubscriptionsSubscriptionCollectionItemBillingAddress {
        /**
         * Address identifier.
         */
        addressKey: string;
        /**
         * Name of the city.
         */
        city: string;
        /**
         * Name of the customer company.
         */
        companyName: string;
        /**
         * Country of the address.
         */
        country: string;
        /**
         * The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * First name of the paypal user.
         */
        firstName: string;
        /**
         * Last name of the paypal user.
         */
        lastName: string;
        /**
         * Address line 1.
         */
        line1: string;
        /**
         * Address line 2.
         */
        line2: string;
        /**
         * Post code of the address.
         */
        postalCode: string;
        /**
         * State of the address.
         */
        state: string;
    }

    export interface GetSubscriptionsSubscriptionCollectionItemPaymentGateway {
        /**
         * Merchant details.
         */
        merchantDefinedDatas: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemPaymentGatewayMerchantDefinedData[];
    }

    export interface GetSubscriptionsSubscriptionCollectionItemPaymentGatewayMerchantDefinedData {
        /**
         * Cloud account name.
         */
        cloudAccountName: string;
        /**
         * Promotion type code.
         */
        promoType: string;
    }

    export interface GetSubscriptionsSubscriptionCollectionItemPaymentOption {
        /**
         * Credit card type.
         */
        creditCardType: string;
        /**
         * The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * Agreement id for the paypal account.
         */
        extBillingAgreementId: string;
        /**
         * First name of the paypal user.
         */
        firstName: string;
        /**
         * Last four digits of the card.
         */
        lastDigits: string;
        /**
         * Last name of the paypal user.
         */
        lastName: string;
        /**
         * Name on the credit card.
         */
        nameOnCard: string;
        /**
         * Payment method
         */
        paymentMethod: string;
        /**
         * Expired date of the credit card.
         */
        timeExpiration: string;
        /**
         * Wallet instrument internal id.
         */
        walletInstrumentId: string;
        /**
         * Wallet transaction id.
         */
        walletTransactionId: string;
    }

    export interface GetSubscriptionsSubscriptionCollectionItemSubscription {
        /**
         * Bill to customer Account id.
         */
        billToCustAccountId: string;
        /**
         * Billing address details model.
         */
        billingAddresses: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemSubscriptionBillingAddress[];
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * GSI Subscription external code.
         */
        gsiOrgCode: string;
        /**
         * Subscription id identifier (OCID).
         */
        id: string;
        /**
         * Payment intension.
         */
        isIntentToPay: boolean;
        /**
         * Language short code (en, de, hu, etc)
         */
        languageCode: string;
        /**
         * GSI organization external identifier.
         */
        organizationId: string;
        /**
         * Payment gateway details.
         */
        paymentGateways: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemSubscriptionPaymentGateway[];
        /**
         * Payment option list of a subscription.
         */
        paymentOptions: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemSubscriptionPaymentOption[];
        /**
         * Subscription plan type.
         */
        planType: string;
        /**
         * Ship to customer account role.
         */
        shipToCustAcctRoleId: string;
        /**
         * Ship to customer account site address id.
         */
        shipToCustAcctSiteId: string;
        /**
         * Subscription plan number.
         */
        subscriptionPlanNumber: string;
        /**
         * Tax details.
         */
        taxInfos: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemSubscriptionTaxInfo[];
        /**
         * Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
         */
        timePlanUpgrade: string;
        /**
         * Start date of the subscription.
         */
        timeStart: string;
        /**
         * Status of the upgrade.
         */
        upgradeState: string;
        /**
         * This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
         */
        upgradeStateDetails: string;
    }

    export interface GetSubscriptionsSubscriptionCollectionItemSubscriptionBillingAddress {
        /**
         * Address identifier.
         */
        addressKey: string;
        /**
         * Name of the city.
         */
        city: string;
        /**
         * Name of the customer company.
         */
        companyName: string;
        /**
         * Country of the address.
         */
        country: string;
        /**
         * The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * First name of the paypal user.
         */
        firstName: string;
        /**
         * Last name of the paypal user.
         */
        lastName: string;
        /**
         * Address line 1.
         */
        line1: string;
        /**
         * Address line 2.
         */
        line2: string;
        /**
         * Post code of the address.
         */
        postalCode: string;
        /**
         * State of the address.
         */
        state: string;
    }

    export interface GetSubscriptionsSubscriptionCollectionItemSubscriptionPaymentGateway {
        /**
         * Merchant details.
         */
        merchantDefinedDatas: outputs.OspGateway.GetSubscriptionsSubscriptionCollectionItemSubscriptionPaymentGatewayMerchantDefinedData[];
    }

    export interface GetSubscriptionsSubscriptionCollectionItemSubscriptionPaymentGatewayMerchantDefinedData {
        /**
         * Cloud account name.
         */
        cloudAccountName: string;
        /**
         * Promotion type code.
         */
        promoType: string;
    }

    export interface GetSubscriptionsSubscriptionCollectionItemSubscriptionPaymentOption {
        /**
         * Credit card type.
         */
        creditCardType: string;
        /**
         * The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * Agreement id for the paypal account.
         */
        extBillingAgreementId: string;
        /**
         * First name of the paypal user.
         */
        firstName: string;
        /**
         * Last four digits of the card.
         */
        lastDigits: string;
        /**
         * Last name of the paypal user.
         */
        lastName: string;
        /**
         * Name on the credit card.
         */
        nameOnCard: string;
        /**
         * Payment method
         */
        paymentMethod: string;
        /**
         * Expired date of the credit card.
         */
        timeExpiration: string;
        /**
         * Wallet instrument internal id.
         */
        walletInstrumentId: string;
        /**
         * Wallet transaction id.
         */
        walletTransactionId: string;
    }

    export interface GetSubscriptionsSubscriptionCollectionItemSubscriptionTaxInfo {
        /**
         * Tax exemption reason code.
         */
        noTaxReasonCode: string;
        /**
         * Tax exemption reason description.
         */
        noTaxReasonCodeDetails: string;
        /**
         * Brazilian companies' CNPJ number.
         */
        taxCnpj: string;
        /**
         * Tay payer identifier.
         */
        taxPayerId: string;
        /**
         * Tax registration number.
         */
        taxRegNumber: string;
    }

    export interface GetSubscriptionsSubscriptionCollectionItemTaxInfo {
        /**
         * Tax exemption reason code.
         */
        noTaxReasonCode: string;
        /**
         * Tax exemption reason description.
         */
        noTaxReasonCodeDetails: string;
        /**
         * Brazilian companies' CNPJ number.
         */
        taxCnpj: string;
        /**
         * Tay payer identifier.
         */
        taxPayerId: string;
        /**
         * Tax registration number.
         */
        taxRegNumber: string;
    }

    export interface SubscriptionBillingAddress {
        /**
         * (Updatable) Address identifier.
         */
        addressKey: string;
        /**
         * (Updatable) Name of the city.
         */
        city: string;
        /**
         * (Updatable) Name of the customer company.
         */
        companyName: string;
        /**
         * (Updatable) Country of the address.
         */
        country: string;
        /**
         * (Updatable) The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * (Updatable) First name of the paypal user.
         */
        firstName: string;
        /**
         * (Updatable) Last name of the paypal user.
         */
        lastName: string;
        /**
         * (Updatable) Address line 1.
         */
        line1: string;
        /**
         * (Updatable) Address line 2.
         */
        line2: string;
        /**
         * (Updatable) Post code of the address.
         */
        postalCode: string;
        /**
         * (Updatable) State of the address.
         */
        state: string;
    }

    export interface SubscriptionPaymentGateway {
        /**
         * (Updatable) Merchant details.
         */
        merchantDefinedDatas: outputs.OspGateway.SubscriptionPaymentGatewayMerchantDefinedData[];
    }

    export interface SubscriptionPaymentGatewayMerchantDefinedData {
        /**
         * (Updatable) Cloud account name.
         */
        cloudAccountName: string;
        /**
         * (Updatable) Promotion type code.
         */
        promoType: string;
    }

    export interface SubscriptionPaymentOption {
        /**
         * (Updatable) Credit card type.
         */
        creditCardType: string;
        /**
         * (Updatable) The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * (Updatable) Agreement id for the paypal account.
         */
        extBillingAgreementId: string;
        /**
         * (Updatable) First name of the paypal user.
         */
        firstName: string;
        /**
         * (Updatable) Last four digits of the card.
         */
        lastDigits: string;
        /**
         * (Updatable) Last name of the paypal user.
         */
        lastName: string;
        /**
         * (Updatable) Name on the credit card.
         */
        nameOnCard: string;
        /**
         * (Updatable) Payment method
         */
        paymentMethod: string;
        /**
         * (Updatable) Expired date of the credit card.
         */
        timeExpiration: string;
        /**
         * (Updatable) Wallet instrument internal id.
         */
        walletInstrumentId: string;
        /**
         * (Updatable) Wallet transaction id.
         */
        walletTransactionId: string;
    }

    export interface SubscriptionSubscription {
        /**
         * (Updatable) Bill to customer Account id.
         */
        billToCustAccountId: string;
        /**
         * (Updatable) Billing address details model.
         */
        billingAddresses?: outputs.OspGateway.SubscriptionSubscriptionBillingAddress[];
        /**
         * (Updatable) Currency code
         */
        currencyCode: string;
        /**
         * (Updatable) GSI Subscription external code.
         */
        gsiOrgCode: string;
        /**
         * (Updatable) Subscription id identifier (OCID).
         */
        id: string;
        /**
         * (Updatable) Payment intension.
         */
        isIntentToPay: boolean;
        /**
         * (Updatable) Language short code (en, de, hu, etc)
         */
        languageCode: string;
        /**
         * (Updatable) GSI organization external identifier.
         */
        organizationId: string;
        /**
         * (Updatable) Payment gateway details.
         */
        paymentGateway: outputs.OspGateway.SubscriptionSubscriptionPaymentGateway;
        /**
         * (Updatable) Payment option list of a subscription.
         */
        paymentOptions: outputs.OspGateway.SubscriptionSubscriptionPaymentOption[];
        /**
         * (Updatable) Subscription plan type.
         */
        planType: string;
        /**
         * (Updatable) Ship to customer account role.
         */
        shipToCustAcctRoleId: string;
        /**
         * (Updatable) Ship to customer account site address id.
         */
        shipToCustAcctSiteId: string;
        /**
         * (Updatable) Subscription plan number.
         */
        subscriptionPlanNumber: string;
        /**
         * (Updatable) Tax details.
         */
        taxInfo: outputs.OspGateway.SubscriptionSubscriptionTaxInfo;
        /**
         * (Updatable) Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
         */
        timePlanUpgrade: string;
        /**
         * (Updatable) Start date of the subscription.
         */
        timeStart: string;
        /**
         * (Updatable) Status of the upgrade.
         */
        upgradeState: string;
        /**
         * (Updatable) This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
         */
        upgradeStateDetails: string;
    }

    export interface SubscriptionSubscriptionBillingAddress {
        /**
         * (Updatable) Address identifier.
         */
        addressKey: string;
        /**
         * (Updatable) Name of the city.
         */
        city: string;
        /**
         * (Updatable) Name of the customer company.
         */
        companyName: string;
        /**
         * (Updatable) Country of the address.
         */
        country: string;
        /**
         * (Updatable) The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * (Updatable) First name of the paypal user.
         */
        firstName: string;
        /**
         * (Updatable) Last name of the paypal user.
         */
        lastName: string;
        /**
         * (Updatable) Address line 1.
         */
        line1: string;
        /**
         * (Updatable) Address line 2.
         */
        line2: string;
        /**
         * (Updatable) Post code of the address.
         */
        postalCode: string;
        /**
         * (Updatable) State of the address.
         */
        state: string;
    }

    export interface SubscriptionSubscriptionPaymentGateway {
        /**
         * (Updatable) Merchant details.
         */
        merchantDefinedData: outputs.OspGateway.SubscriptionSubscriptionPaymentGatewayMerchantDefinedData;
    }

    export interface SubscriptionSubscriptionPaymentGatewayMerchantDefinedData {
        /**
         * (Updatable) Cloud account name.
         */
        cloudAccountName: string;
        /**
         * (Updatable) Promotion type code.
         */
        promoType: string;
    }

    export interface SubscriptionSubscriptionPaymentOption {
        /**
         * (Updatable) Credit card type.
         */
        creditCardType: string;
        /**
         * (Updatable) The email address of the paypal user.
         */
        emailAddress: string;
        /**
         * (Updatable) Agreement id for the paypal account.
         */
        extBillingAgreementId: string;
        /**
         * (Updatable) First name of the paypal user.
         */
        firstName: string;
        /**
         * (Updatable) Last four digits of the card.
         */
        lastDigits: string;
        /**
         * (Updatable) Last name of the paypal user.
         */
        lastName: string;
        /**
         * (Updatable) Name on the credit card.
         */
        nameOnCard: string;
        /**
         * (Updatable) Payment method
         */
        paymentMethod: string;
        /**
         * (Updatable) Expired date of the credit card.
         */
        timeExpiration: string;
        /**
         * (Updatable) Wallet instrument internal id.
         */
        walletInstrumentId: string;
        /**
         * (Updatable) Wallet transaction id.
         */
        walletTransactionId: string;
    }

    export interface SubscriptionSubscriptionTaxInfo {
        /**
         * (Updatable) Tax exemption reason code.
         */
        noTaxReasonCode: string;
        /**
         * (Updatable) Tax exemption reason description.
         */
        noTaxReasonCodeDetails: string;
        /**
         * (Updatable) Brazilian companies' CNPJ number.
         */
        taxCnpj: string;
        /**
         * (Updatable) Tay payer identifier.
         */
        taxPayerId: string;
        /**
         * (Updatable) Tax registration number.
         */
        taxRegNumber: string;
    }

    export interface SubscriptionTaxInfo {
        /**
         * (Updatable) Tax exemption reason code.
         */
        noTaxReasonCode: string;
        /**
         * (Updatable) Tax exemption reason description.
         */
        noTaxReasonCodeDetails: string;
        /**
         * (Updatable) Brazilian companies' CNPJ number.
         */
        taxCnpj: string;
        /**
         * (Updatable) Tay payer identifier.
         */
        taxPayerId: string;
        /**
         * (Updatable) Tax registration number.
         */
        taxRegNumber: string;
    }

}

export namespace OsubBillingSchedule {
    export interface GetBillingScheduleBillingSchedule {
        /**
         * Billing schedule line net amount
         */
        amount: string;
        /**
         * Indicates the associated AR Customer transaction id a unique identifier existing on AR.
         */
        arCustomerTransactionId: string;
        /**
         * Indicates the associated AR Invoice Number
         */
        arInvoiceNumber: string;
        /**
         * Billing frequency
         */
        billingFrequency: string;
        /**
         * Billing schedule invoice status
         */
        invoiceStatus: string;
        /**
         * Billing schedule net unit price
         */
        netUnitPrice: string;
        /**
         * Order number associated with the Subscribed Service
         */
        orderNumber: string;
        /**
         * Product description
         */
        products: outputs.OsubBillingSchedule.GetBillingScheduleBillingScheduleProduct[];
        /**
         * Billing schedule quantity
         */
        quantity: string;
        /**
         * Billing schedule end date
         */
        timeEnd: string;
        /**
         * Billing schedule invoicing date
         */
        timeInvoicing: string;
        /**
         * Billing schedule start date
         */
        timeStart: string;
    }

    export interface GetBillingScheduleBillingScheduleProduct {
        /**
         * Product name
         */
        name: string;
        /**
         * Indicates the associated AR Invoice Number
         */
        partNumber: string;
    }

    export interface GetBillingScheduleFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace OsubOrganizationSubscription {
    export interface GetOrganizationSubscriptionsFilter {
        /**
         * Currency name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetOrganizationSubscriptionsSubscription {
        /**
         * Currency details
         */
        currencies: outputs.OsubOrganizationSubscription.GetOrganizationSubscriptionsSubscriptionCurrency[];
        /**
         * SPM internal Subscription ID
         */
        id: string;
        /**
         * Customer friendly service name provided by PRG
         */
        serviceName: string;
        /**
         * Status of the plan
         */
        status: string;
        /**
         * Represents the date when the last service of the subscription ends
         */
        timeEnd: string;
        /**
         * Represents the date when the first service of the subscription was activated
         */
        timeStart: string;
        /**
         * Total aggregate TCLV of all lines for the subscription including expired, active, and signed
         */
        totalValue: string;
        /**
         * Subscription Type i.e. IAAS,SAAS,PAAS
         */
        type: string;
    }

    export interface GetOrganizationSubscriptionsSubscriptionCurrency {
        /**
         * Currency Code
         */
        isoCode: string;
        /**
         * Currency name
         */
        name: string;
        /**
         * Standard Precision of the Currency
         */
        stdPrecision: string;
    }

}

export namespace OsubSubscription {
    export interface GetCommitmentsCommitment {
        /**
         * Commitment available amount
         */
        availableAmount: string;
        /**
         * Funded Allocation line value example: 12000.00
         */
        fundedAllocationValue: string;
        /**
         * SPM internal Commitment ID
         */
        id: string;
        /**
         * Commitment quantity
         */
        quantity: string;
        /**
         * Commitment end date
         */
        timeEnd: string;
        /**
         * Commitment start date
         */
        timeStart: string;
        /**
         * Commitment used amount
         */
        usedAmount: string;
    }

    export interface GetCommitmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRatecardsFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetRatecardsRateCard {
        /**
         * Currency details
         */
        currencies: outputs.OsubSubscription.GetRatecardsRateCardCurrency[];
        /**
         * Rate card discretionary discount percentage
         */
        discretionaryDiscountPercentage: string;
        /**
         * Rate card price tier flag
         */
        isTier: boolean;
        /**
         * Rate card tier net unit price
         */
        netUnitPrice: string;
        /**
         * Rate card tier overage price
         */
        overagePrice: string;
        /**
         * Product description
         */
        products: outputs.OsubSubscription.GetRatecardsRateCardProduct[];
        /**
         * List of tiered rate card prices
         */
        rateCardTiers: outputs.OsubSubscription.GetRatecardsRateCardRateCardTier[];
        /**
         * Rate card end date
         */
        timeEnd: string;
        /**
         * Rate card start date
         */
        timeStart: string;
    }

    export interface GetRatecardsRateCardCurrency {
        /**
         * Currency Code
         */
        isoCode: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Standard Precision of the Currency
         */
        stdPrecision: string;
    }

    export interface GetRatecardsRateCardProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * This param is used to get the rate card(s) filterd by the partNumber
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of measure
         */
        unitOfMeasure: string;
    }

    export interface GetRatecardsRateCardRateCardTier {
        /**
         * Rate card tier net unit price
         */
        netUnitPrice: string;
        /**
         * Rate card tier overage price
         */
        overagePrice: string;
        /**
         * Rate card tier quantity range
         */
        upToQuantity: string;
    }

    export interface GetSubscriptionsFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubscriptionsSubscription {
        /**
         * Currency details
         */
        currencies: outputs.OsubSubscription.GetSubscriptionsSubscriptionCurrency[];
        /**
         * Customer friendly service name provided by PRG
         */
        serviceName: string;
        /**
         * Subscribed service status
         */
        status: string;
        /**
         * List of Subscribed Services of the plan
         */
        subscribedServices: outputs.OsubSubscription.GetSubscriptionsSubscriptionSubscribedService[];
        /**
         * Represents the date when the last service of the subscription ends
         */
        timeEnd: string;
        /**
         * Represents the date when the first service of the subscription was activated
         */
        timeStart: string;
    }

    export interface GetSubscriptionsSubscriptionCurrency {
        /**
         * Currency Code
         */
        isoCode: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Standard Precision of the Currency
         */
        stdPrecision: string;
    }

    export interface GetSubscriptionsSubscriptionSubscribedService {
        /**
         * Booking Opportunity Number of Subscribed Service
         */
        bookingOptyNumber: string;
        /**
         * List of Commitment services of a line
         */
        commitmentServices: outputs.OsubSubscription.GetSubscriptionsSubscriptionSubscribedServiceCommitmentService[];
        /**
         * Subscribed service CSI number
         */
        csi: string;
        /**
         * Subscribed service data center region
         */
        dataCenterRegion: string;
        /**
         * Funded Allocation line value example: 12000.00
         */
        fundedAllocationValue: string;
        /**
         * SPM internal Subscribed Service ID
         */
        id: string;
        /**
         * Subscribed service intent to pay flag
         */
        isIntentToPay: boolean;
        /**
         * Subscribed service net unit price
         */
        netUnitPrice: string;
        /**
         * Subscribed service operation type
         */
        operationType: string;
        /**
         * Sales Order Number associated to the subscribed service
         */
        orderNumber: string;
        /**
         * This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
         */
        partnerTransactionType: string;
        /**
         * Subscribed service pricing model
         */
        pricingModel: string;
        /**
         * Product description
         */
        products: outputs.OsubSubscription.GetSubscriptionsSubscriptionSubscribedServiceProduct[];
        /**
         * Subscribed service program type
         */
        programType: string;
        /**
         * Subscribed service promotion type
         */
        promoType: string;
        /**
         * Subscribed service quantity
         */
        quantity: string;
        /**
         * Subscribed service status
         */
        status: string;
        /**
         * Term value in Months
         */
        termValue: string;
        /**
         * Term value UOM
         */
        termValueUom: string;
        /**
         * Represents the date when the last service of the subscription ends
         */
        timeEnd: string;
        /**
         * Represents the date when the first service of the subscription was activated
         */
        timeStart: string;
        /**
         * Subscribed service total value
         */
        totalValue: string;
    }

    export interface GetSubscriptionsSubscriptionSubscribedServiceCommitmentService {
        /**
         * Commitment available amount
         */
        availableAmount: string;
        /**
         * Funded Allocation line value example: 12000.00
         */
        fundedAllocationValue: string;
        /**
         * Commitment line net amount
         */
        lineNetAmount: string;
        /**
         * Subscribed service quantity
         */
        quantity: string;
        /**
         * Represents the date when the last service of the subscription ends
         */
        timeEnd: string;
        /**
         * Represents the date when the first service of the subscription was activated
         */
        timeStart: string;
    }

    export interface GetSubscriptionsSubscriptionSubscribedServiceProduct {
        /**
         * Product name
         */
        name: string;
        /**
         * Product part numner
         */
        partNumber: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Unit of measure
         */
        unitOfMeasure: string;
    }

}

export namespace OsubUsage {
    export interface GetCommitmentAggregatedsComputedUsageAggregated {
        /**
         * Aggregation of computed usages for the subscribed service.
         */
        aggregatedComputedUsages: outputs.OsubUsage.GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage[];
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * Product part number for subscribed service line, called parent product.
         */
        parentProducts: outputs.OsubUsage.GetCommitmentAggregatedsComputedUsageAggregatedParentProduct[];
        /**
         * Subscribed service line parent id
         */
        parentSubscribedServiceId: string;
        /**
         * Subscribed service asociated subscription plan number.
         */
        planNumber: string;
        /**
         * Subscribed services pricing model
         */
        pricingModel: string;
        /**
         * Inernal SPM Ratecard Id at line level
         */
        rateCardId: string;
        /**
         * Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
         */
        subscriptionId: string;
        /**
         * Subscribed services contract line end date, expressed in RFC 3339 timestamp format.
         */
        timeEnd: string;
        /**
         * Subscribed services contract line start date, expressed in RFC 3339 timestamp format.
         */
        timeStart: string;
    }

    export interface GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage {
        /**
         * Sum of Computed Line Amount rounded
         */
        cost: string;
        /**
         * Sum of Computed Line Amount unrounded
         */
        costUnrounded: string;
        /**
         * Data Center Attribute as sent by MQS to SPM.
         */
        dataCenter: string;
        /**
         * Net Unit Price for the product in consideration.
         */
        netUnitPrice: string;
        /**
         * Product description
         */
        products: outputs.OsubUsage.GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct[];
        /**
         * Total Quantity that was used for computation
         */
        quantity: string;
        /**
         * Metered Service date , expressed in RFC 3339 timestamp format.
         */
        timeMeteredOn: string;
        /**
         * Usage compute type in SPM.
         */
        type: string;
    }

    export interface GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Measure
         */
        unitOfMeasure: string;
    }

    export interface GetCommitmentAggregatedsComputedUsageAggregatedParentProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Measure
         */
        unitOfMeasure: string;
    }

    export interface GetCommitmentAggregatedsFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetComputedUsageParentProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
    }

    export interface GetComputedUsageProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
    }

    export interface GetComputedUsagesComputedUsage {
        /**
         * Subscribed service commitmentId.
         */
        commitmentServiceId: string;
        /**
         * SPM Internal compute records source .
         */
        computeSource: string;
        computedUsageId: string;
        /**
         * Computed Line Amount not rounded
         */
        cost: string;
        /**
         * Computed Line Amount rounded.
         */
        costRounded: string;
        /**
         * Currency code
         */
        currencyCode: string;
        /**
         * Data Center Attribute as sent by MQS to SPM.
         */
        dataCenter: string;
        /**
         * SPM Internal computed usage Id , 32 character string
         */
        id: string;
        /**
         * Invoicing status for the aggregated compute usage
         */
        isInvoiced: boolean;
        /**
         * MQS Identfier send to SPM , SPM does not transform this attribute and is received as is.
         */
        mqsMessageId: string;
        /**
         * Net Unit Price for the product in consideration, price actual.
         */
        netUnitPrice: string;
        /**
         * SPM Internal Original usage Line number identifier in SPM coming from Metered Services entity.
         */
        originalUsageNumber: string;
        /**
         * Product part number for subscribed service line, called parent product.
         */
        parentProducts: outputs.OsubUsage.GetComputedUsagesComputedUsageParentProduct[];
        /**
         * Subscribed service line parent id
         */
        parentSubscribedServiceId: string;
        /**
         * Subscription plan number
         */
        planNumber: string;
        /**
         * Product description
         */
        products: outputs.OsubUsage.GetComputedUsagesComputedUsageProduct[];
        /**
         * Total Quantity that was used for computation
         */
        quantity: string;
        /**
         * Ratecard Id at subscribed service level
         */
        rateCardId: string;
        /**
         * References the tier in the ratecard for that usage (OCI will be using the same reference to cross-reference for correctness on the usage csv report), comes from Entity OBSCNTR_IPT_PRODUCTTIER.
         */
        rateCardTierdId: string;
        /**
         * Computed Usage created time, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
        /**
         * Metered Service date, expressed in RFC 3339 timestamp format.
         */
        timeMeteredOn: string;
        /**
         * Usae computation date, expressed in RFC 3339 timestamp format.
         */
        timeOfArrival: string;
        /**
         * Computed Usage updated time, expressed in RFC 3339 timestamp format.
         */
        timeUpdated: string;
        /**
         * Usage compute type in SPM.
         */
        type: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
        /**
         * SPM Internal usage Line number identifier in SPM coming from Metered Services entity.
         */
        usageNumber: string;
    }

    export interface GetComputedUsagesComputedUsageParentProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
    }

    export interface GetComputedUsagesComputedUsageProduct {
        /**
         * Metered service billing category
         */
        billingCategory: string;
        /**
         * Product name
         */
        name: string;
        /**
         * Product part number
         */
        partNumber: string;
        /**
         * Product category
         */
        productCategory: string;
        /**
         * Product provisioning group
         */
        provisioningGroup: string;
        /**
         * Rate card part type of Product
         */
        ucmRateCardPartType: string;
        /**
         * Unit of Messure
         */
        unitOfMeasure: string;
    }

    export interface GetComputedUsagesFilter {
        /**
         * Product name
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

}

export namespace ResourceManager {
    export interface GetPrivateEndpointsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPrivateEndpointsPrivateEndpointCollection {
        items: outputs.ResourceManager.GetPrivateEndpointsPrivateEndpointCollectionItem[];
    }

    export interface GetPrivateEndpointsPrivateEndpointCollectionItem {
        /**
         * A filter to return only resources that exist in the compartment, identified by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the private endpoint. Avoid entering confidential information.
         */
        description: string;
        /**
         * A filter to return only resources that match the given display name exactly. Use this filter to list a resource by name. Requires `sortBy` set to `DISPLAYNAME`. Alternatively, when you know the resource OCID, use the related Get operation.
         */
        displayName: string;
        /**
         * DNS Proxy forwards any DNS FQDN queries over into the consumer DNS resolver if the DNS FQDN is included in the dns zones list otherwise it goes to service provider VCN resolver.
         */
        dnsZones: string[];
        /**
         * Free-form tags associated with the resource. Each tag is a key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the private endpoint details.
         */
        id: string;
        /**
         * When `true`, allows the private endpoint to be used with a configuration source provider.
         */
        isUsedWithConfigurationSourceProvider: boolean;
        /**
         * An array of network security groups (NSG) that the customer can optionally provide.
         */
        nsgIdLists: string[];
        /**
         * The source IPs which resource manager service will use to connect to customer's network. Automatically assigned by Resource Manager Service.
         */
        sourceIps: string[];
        /**
         * The current lifecycle state of the private endpoint.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet within the VCN for the private endpoint.
         */
        subnetId: string;
        /**
         * The date and time at which the private endpoint was created. Format is defined by RFC3339. Example: `2020-11-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetStackConfigSource {
        configSourceType: string;
        workingDirectory: string;
        zipFileBase64encoded: string;
    }

    export interface GetStacksFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetStacksStack {
        /**
         * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) on which to filter.
         */
        compartmentId: string;
        configSource: outputs.ResourceManager.GetStacksStackConfigSource;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * General description of the stack.
         */
        description: string;
        /**
         * Display name on which to query.
         */
        displayName: string;
        /**
         * Free-form tags associated with this resource. Each tag is a key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) on which to query for a stack.
         */
        id: string;
        /**
         * A filter that returns only those resources that match the specified lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time at which the stack was created.
         */
        timeCreated: string;
        variables: {[key: string]: any};
    }

    export interface GetStacksStackConfigSource {
        configSourceType: string;
        workingDirectory: string;
        zipFileBase64encoded: string;
    }

}

export namespace Sch {
    export interface ConnectorSource {
        /**
         * (Updatable) The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
         */
        cursor: outputs.Sch.ConnectorSourceCursor;
        /**
         * (Updatable) The type descriminator.
         */
        kind: string;
        /**
         * (Updatable) The logs for this Logging source.
         */
        logSources: outputs.Sch.ConnectorSourceLogSource[];
        /**
         * (Updatable) The list of metric namespaces to retrieve data from.
         */
        monitoringSources: outputs.Sch.ConnectorSourceMonitoringSource[];
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
         */
        streamId: string;
    }

    export interface ConnectorSourceCursor {
        /**
         * (Updatable) The type descriminator.
         */
        kind: string;
    }

    export interface ConnectorSourceLogSource {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
         */
        compartmentId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
         */
        logGroupId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
         */
        logId: string;
    }

    export interface ConnectorSourceMonitoringSource {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
         */
        compartmentId: string;
        /**
         * (Updatable) Discriminator for namespaces in the compartment-specific list.
         */
        namespaceDetails: outputs.Sch.ConnectorSourceMonitoringSourceNamespaceDetails;
    }

    export interface ConnectorSourceMonitoringSourceNamespaceDetails {
        /**
         * (Updatable) The type descriminator.
         */
        kind: string;
        /**
         * (Updatable) The namespaces for the compartment-specific list.
         */
        namespaces: outputs.Sch.ConnectorSourceMonitoringSourceNamespaceDetailsNamespace[];
    }

    export interface ConnectorSourceMonitoringSourceNamespaceDetailsNamespace {
        /**
         * (Updatable) The metrics to query for the specified metric namespace.
         */
        metrics: outputs.Sch.ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics;
        /**
         * (Updatable) The namespace.
         */
        namespace: string;
    }

    export interface ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics {
        /**
         * (Updatable) The type descriminator.
         */
        kind: string;
    }

    export interface ConnectorTarget {
        /**
         * (Updatable) The batch rollover size in megabytes.
         */
        batchRolloverSizeInMbs: number;
        /**
         * (Updatable) The batch rollover time in milliseconds.
         */
        batchRolloverTimeInMs: number;
        /**
         * (Updatable) The name of the bucket. Avoid entering confidential information.
         */
        bucket: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
         */
        compartmentId: string;
        /**
         * (Updatable) List of dimension names and values.
         */
        dimensions: outputs.Sch.ConnectorTargetDimension[];
        /**
         * (Updatable) Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
         */
        enableFormattedMessaging: boolean;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
         */
        functionId: string;
        /**
         * (Updatable) The type descriminator.
         */
        kind: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
         */
        logGroupId: string;
        /**
         * (Updatable) Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
         */
        logSourceIdentifier: string;
        /**
         * (Updatable) The name of the metric.  Example: `CpuUtilization`
         */
        metric: string;
        /**
         * (Updatable) The namespace of the metric.  Example: `ociComputeagent`
         */
        metricNamespace: string;
        /**
         * (Updatable) The namespace.
         */
        namespace: string;
        /**
         * (Updatable) The prefix of the objects. Avoid entering confidential information.
         */
        objectNamePrefix: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
         */
        streamId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
         */
        topicId: string;
    }

    export interface ConnectorTargetDimension {
        /**
         * (Updatable) Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
         */
        dimensionValue: outputs.Sch.ConnectorTargetDimensionDimensionValue;
        /**
         * (Updatable) Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
         */
        name: string;
    }

    export interface ConnectorTargetDimensionDimensionValue {
        /**
         * (Updatable) The type descriminator.
         */
        kind: string;
        /**
         * (Updatable) The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
         */
        path: string;
        /**
         * (Updatable) The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
         */
        value: string;
    }

    export interface ConnectorTask {
        /**
         * (Updatable) Size limit (kilobytes) for batch sent to invoke the function.
         */
        batchSizeInKbs: number;
        /**
         * (Updatable) Time limit (seconds) for batch sent to invoke the function.
         */
        batchTimeInSec: number;
        /**
         * (Updatable) A filter or mask to limit the source used in the flow defined by the service connector.
         */
        condition: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
         */
        functionId: string;
        /**
         * (Updatable) The type descriminator.
         */
        kind: string;
    }

    export interface GetServiceConnectorSource {
        /**
         * The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
         */
        cursors: outputs.Sch.GetServiceConnectorSourceCursor[];
        /**
         * The type descriminator.
         */
        kind: string;
        /**
         * The logs for this Logging source.
         */
        logSources: outputs.Sch.GetServiceConnectorSourceLogSource[];
        /**
         * The list of metric namespaces to retrieve data from.
         */
        monitoringSources: outputs.Sch.GetServiceConnectorSourceMonitoringSource[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
         */
        streamId: string;
    }

    export interface GetServiceConnectorSourceCursor {
        /**
         * The type descriminator.
         */
        kind: string;
    }

    export interface GetServiceConnectorSourceLogSource {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
         */
        logId: string;
    }

    export interface GetServiceConnectorSourceMonitoringSource {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
         */
        compartmentId: string;
        /**
         * Discriminator for namespaces in the compartment-specific list.
         */
        namespaceDetails: outputs.Sch.GetServiceConnectorSourceMonitoringSourceNamespaceDetail[];
    }

    export interface GetServiceConnectorSourceMonitoringSourceNamespaceDetail {
        /**
         * The type descriminator.
         */
        kind: string;
        /**
         * The namespaces for the compartment-specific list.
         */
        namespaces: outputs.Sch.GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace[];
    }

    export interface GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace {
        /**
         * The metrics to query for the specified metric namespace.
         */
        metrics: outputs.Sch.GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric[];
        /**
         * The namespace.
         */
        namespace: string;
    }

    export interface GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric {
        /**
         * The type descriminator.
         */
        kind: string;
    }

    export interface GetServiceConnectorTarget {
        /**
         * The batch rollover size in megabytes.
         */
        batchRolloverSizeInMbs: number;
        /**
         * The batch rollover time in milliseconds.
         */
        batchRolloverTimeInMs: number;
        /**
         * The name of the bucket. Avoid entering confidential information.
         */
        bucket: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
         */
        compartmentId: string;
        /**
         * List of dimension names and values.
         */
        dimensions: outputs.Sch.GetServiceConnectorTargetDimension[];
        /**
         * Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
         */
        enableFormattedMessaging: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
         */
        functionId: string;
        /**
         * The type descriminator.
         */
        kind: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
         */
        logGroupId: string;
        /**
         * Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
         */
        logSourceIdentifier: string;
        /**
         * The name of the metric.  Example: `CpuUtilization`
         */
        metric: string;
        /**
         * The namespace of the metric.  Example: `ociComputeagent`
         */
        metricNamespace: string;
        /**
         * The namespace.
         */
        namespace: string;
        /**
         * The prefix of the objects. Avoid entering confidential information.
         */
        objectNamePrefix: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
         */
        streamId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
         */
        topicId: string;
    }

    export interface GetServiceConnectorTargetDimension {
        /**
         * Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
         */
        dimensionValues: outputs.Sch.GetServiceConnectorTargetDimensionDimensionValue[];
        /**
         * Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
         */
        name: string;
    }

    export interface GetServiceConnectorTargetDimensionDimensionValue {
        /**
         * The type descriminator.
         */
        kind: string;
        /**
         * The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
         */
        path: string;
        /**
         * The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
         */
        value: string;
    }

    export interface GetServiceConnectorTask {
        /**
         * Size limit (kilobytes) for batch sent to invoke the function.
         */
        batchSizeInKbs: number;
        /**
         * Time limit (seconds) for batch sent to invoke the function.
         */
        batchTimeInSec: number;
        /**
         * A filter or mask to limit the source used in the flow defined by the service connector.
         */
        condition: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
         */
        functionId: string;
        /**
         * The type descriminator.
         */
        kind: string;
    }

    export interface GetServiceConnectorsFilter {
        /**
         * Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetServiceConnectorsServiceConnectorCollection {
        items: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItem[];
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the resource. Avoid entering confidential information.
         */
        description: string;
        /**
         * A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service connector.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
         */
        lifecyleDetails: string;
        /**
         * An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
         */
        sources: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemSource[];
        /**
         * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
         */
        state: string;
        /**
         * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
         */
        systemTags: {[key: string]: any};
        /**
         * An object that represents the target of the flow defined by the service connector. An example target is a stream (Streaming service). For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
         */
        targets: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemTarget[];
        /**
         * The list of tasks.
         */
        tasks: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemTask[];
        /**
         * The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         */
        timeUpdated: string;
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemSource {
        /**
         * The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
         */
        cursors: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemSourceCursor[];
        /**
         * The type descriminator.
         */
        kind: string;
        /**
         * The logs for this Logging source.
         */
        logSources: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource[];
        /**
         * The list of metric namespaces to retrieve data from.
         */
        monitoringSources: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
         */
        streamId: string;
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemSourceCursor {
        /**
         * The type descriminator.
         */
        kind: string;
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
         */
        compartmentId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
         */
        logGroupId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
         */
        logId: string;
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
         */
        compartmentId: string;
        /**
         * Discriminator for namespaces in the compartment-specific list.
         */
        namespaceDetails: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail[];
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail {
        /**
         * The type descriminator.
         */
        kind: string;
        /**
         * The namespaces for the compartment-specific list.
         */
        namespaces: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace[];
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace {
        /**
         * The metrics to query for the specified metric namespace.
         */
        metrics: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric[];
        /**
         * The namespace.
         */
        namespace: string;
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric {
        /**
         * The type descriminator.
         */
        kind: string;
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemTarget {
        /**
         * The batch rollover size in megabytes.
         */
        batchRolloverSizeInMbs: number;
        /**
         * The batch rollover time in milliseconds.
         */
        batchRolloverTimeInMs: number;
        /**
         * The name of the bucket. Avoid entering confidential information.
         */
        bucket: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
         */
        compartmentId: string;
        /**
         * List of dimension names and values.
         */
        dimensions: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemTargetDimension[];
        /**
         * Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
         */
        enableFormattedMessaging: boolean;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
         */
        functionId: string;
        /**
         * The type descriminator.
         */
        kind: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
         */
        logGroupId: string;
        /**
         * Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
         */
        logSourceIdentifier: string;
        /**
         * The name of the metric.  Example: `CpuUtilization`
         */
        metric: string;
        /**
         * The namespace of the metric.  Example: `ociComputeagent`
         */
        metricNamespace: string;
        /**
         * The namespace.
         */
        namespace: string;
        /**
         * The prefix of the objects. Avoid entering confidential information.
         */
        objectNamePrefix: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
         */
        streamId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
         */
        topicId: string;
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemTargetDimension {
        /**
         * Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
         */
        dimensionValues: outputs.Sch.GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue[];
        /**
         * Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
         */
        name: string;
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue {
        /**
         * The type descriminator.
         */
        kind: string;
        /**
         * The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
         */
        path: string;
        /**
         * The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
         */
        value: string;
    }

    export interface GetServiceConnectorsServiceConnectorCollectionItemTask {
        /**
         * Size limit (kilobytes) for batch sent to invoke the function.
         */
        batchSizeInKbs: number;
        /**
         * Time limit (seconds) for batch sent to invoke the function.
         */
        batchTimeInSec: number;
        /**
         * A filter or mask to limit the source used in the flow defined by the service connector.
         */
        condition: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
         */
        functionId: string;
        /**
         * The type descriminator.
         */
        kind: string;
    }

}

export namespace Secrets {
    export interface GetSecretbundleSecretBundleContent {
        /**
         * The base64-encoded content of the secret.
         */
        content: string;
        /**
         * The formatting type of the secret contents.
         */
        contentType: string;
    }

    export interface GetSecretbundleVersionsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSecretbundleVersionsSecretBundleVersion {
        /**
         * The OCID of the secret.
         */
        secretId: string;
        /**
         * A list of possible rotation states for the secret bundle.
         */
        stages: string[];
        /**
         * The time when the secret bundle was created.
         */
        timeCreated: string;
        /**
         * An optional property indicating when to delete the secret version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * An optional property indicating when the secret version will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfExpiry: string;
        /**
         * The version name of the secret bundle, as provided when the secret was created or last rotated.
         */
        versionName: string;
        /**
         * The version number of the secret.
         */
        versionNumber: string;
    }

}

export namespace ServiceCatalog {
    export interface GetPrivateApplicationLogo {
        /**
         * The content URL of the uploaded data.
         */
        contentUrl: string;
        /**
         * The name used to refer to the uploaded data.
         */
        displayName: string;
        /**
         * The MIME type of the uploaded data.
         */
        mimeType: string;
    }

    export interface GetPrivateApplicationPackageDetail {
        /**
         * Type of packages within this private application.
         */
        packageType: string;
        version: string;
        zipFileBase64encoded: string;
    }

    export interface GetPrivateApplicationPackagesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPrivateApplicationPackagesPrivateApplicationPackageCollection {
        items: outputs.ServiceCatalog.GetPrivateApplicationPackagesPrivateApplicationPackageCollectionItem[];
    }

    export interface GetPrivateApplicationPackagesPrivateApplicationPackageCollectionItem {
        contentUrl: string;
        /**
         * Exact match name filter.
         */
        displayName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private application package.
         */
        id: string;
        mimeType: string;
        /**
         * Name of the package type. If multiple package types are provided, then any resource with one or more matching package types will be returned.
         */
        packageType: string;
        /**
         * The unique identifier for the private application.
         */
        privateApplicationId: string;
        /**
         * The date and time the private application package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-27T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The package version.
         */
        version: string;
    }

    export interface GetPrivateApplicationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPrivateApplicationsPrivateApplicationCollection {
        items: outputs.ServiceCatalog.GetPrivateApplicationsPrivateApplicationCollectionItem[];
    }

    export interface GetPrivateApplicationsPrivateApplicationCollectionItem {
        /**
         * The unique identifier for the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Exact match name filter.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The unique identifier for the private application in Marketplace.
         */
        id: string;
        logoFileBase64encoded: string;
        /**
         * The model for uploaded binary data, like logos and images.
         */
        logos: outputs.ServiceCatalog.GetPrivateApplicationsPrivateApplicationCollectionItemLogo[];
        /**
         * A long description of the private application.
         */
        longDescription: string;
        packageDetails: outputs.ServiceCatalog.GetPrivateApplicationsPrivateApplicationCollectionItemPackageDetail[];
        /**
         * Type of packages within this private application.
         */
        packageType: string;
        /**
         * A short description of the private application.
         */
        shortDescription: string;
        /**
         * The lifecycle state of the private application.
         */
        state: string;
        /**
         * The date and time the private application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time the private application was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
         */
        timeUpdated: string;
    }

    export interface GetPrivateApplicationsPrivateApplicationCollectionItemLogo {
        /**
         * The content URL of the uploaded data.
         */
        contentUrl: string;
        /**
         * Exact match name filter.
         */
        displayName: string;
        /**
         * The MIME type of the uploaded data.
         */
        mimeType: string;
    }

    export interface GetPrivateApplicationsPrivateApplicationCollectionItemPackageDetail {
        /**
         * Type of packages within this private application.
         */
        packageType: string;
        version: string;
        zipFileBase64encoded: string;
    }

    export interface GetServiceCatalogAssociationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetServiceCatalogAssociationsServiceCatalogAssociationCollection {
        items: outputs.ServiceCatalog.GetServiceCatalogAssociationsServiceCatalogAssociationCollectionItem[];
    }

    export interface GetServiceCatalogAssociationsServiceCatalogAssociationCollectionItem {
        /**
         * The unique identifier of the entity associated with service catalog.
         */
        entityId: string;
        /**
         * The type of the application in the service catalog.
         */
        entityType: string;
        /**
         * Identifier of the association.
         */
        id: string;
        /**
         * The unique identifier for the service catalog.
         */
        serviceCatalogId: string;
        /**
         * Timestamp of when the resource was associated with service catalog.
         */
        timeCreated: string;
    }

    export interface GetServiceCatalogsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetServiceCatalogsServiceCatalogCollection {
        items: outputs.ServiceCatalog.GetServiceCatalogsServiceCatalogCollectionItem[];
    }

    export interface GetServiceCatalogsServiceCatalogCollectionItem {
        /**
         * The unique identifier for the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Exact match name filter.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The unique identifier for the Service catalog.
         */
        id: string;
        /**
         * The lifecycle state of the service catalog.
         */
        state: string;
        /**
         * The date and time the service catalog was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * The date and time the service catalog was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
         */
        timeUpdated: string;
    }

    export interface PrivateApplicationLogo {
        /**
         * The content URL of the uploaded data.
         */
        contentUrl: string;
        /**
         * (Updatable) The name of the private application.
         */
        displayName: string;
        /**
         * The MIME type of the uploaded data.
         */
        mimeType: string;
    }

    export interface PrivateApplicationPackageDetails {
        /**
         * The package's type.
         */
        packageType: string;
        /**
         * The package version.
         */
        version: string;
        zipFileBase64encoded: string;
    }
}

export namespace ServiceManagerProxy {
    export interface GetServiceEnvironmentServiceDefinition {
        /**
         * Display name of the service. For example, "Oracle Retail Order Management Cloud Service".
         */
        displayName: string;
        /**
         * Short display name of the service. For example, "Retail Order Management".
         */
        shortDisplayName: string;
        /**
         * The service definition type. For example, a service definition type "RGBUOROMS"  would be for the service "Oracle Retail Order Management Cloud Service".
         */
        type: string;
    }

    export interface GetServiceEnvironmentServiceEnvironmentEndpoint {
        /**
         * Description of the environment link
         */
        description: string;
        /**
         * Service environment endpoint type.
         */
        environmentType: string;
        /**
         * Service environment instance URL.
         */
        url: string;
    }

    export interface GetServiceEnvironmentsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetServiceEnvironmentsServiceEnvironmentCollection {
        items: outputs.ServiceManagerProxy.GetServiceEnvironmentsServiceEnvironmentCollectionItem[];
    }

    export interface GetServiceEnvironmentsServiceEnvironmentCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment.
         */
        compartmentId: string;
        /**
         * The URL for the console.
         */
        consoleUrl: string;
        definedTags: {[key: string]: any};
        freeformTags: {[key: string]: any};
        /**
         * Unqiue identifier for the entitlement related to the environment.
         */
        id: string;
        /**
         * Details for a service definition.
         */
        serviceDefinitions: outputs.ServiceManagerProxy.GetServiceEnvironmentsServiceEnvironmentCollectionItemServiceDefinition[];
        /**
         * Array of service environment end points.
         */
        serviceEnvironmentEndpoints: outputs.ServiceManagerProxy.GetServiceEnvironmentsServiceEnvironmentCollectionItemServiceEnvironmentEndpoint[];
        /**
         * Status of the entitlement registration for the service.
         */
        status: string;
        /**
         * The unique subscription ID associated with the service environment ID.
         */
        subscriptionId: string;
    }

    export interface GetServiceEnvironmentsServiceEnvironmentCollectionItemServiceDefinition {
        /**
         * The display name of the resource.
         */
        displayName: string;
        /**
         * Short display name of the service. For example, "Retail Order Management".
         */
        shortDisplayName: string;
        /**
         * The service definition type. For example, a service definition type "RGBUOROMS"  would be for the service "Oracle Retail Order Management Cloud Service".
         */
        type: string;
    }

    export interface GetServiceEnvironmentsServiceEnvironmentCollectionItemServiceEnvironmentEndpoint {
        /**
         * Description of the environment link
         */
        description: string;
        /**
         * Service environment endpoint type.
         */
        environmentType: string;
        /**
         * Service environment instance URL.
         */
        url: string;
    }

}

export namespace ServiceMesh {
    export interface AccessPolicyRule {
        /**
         * (Updatable) Action for the traffic between the source and the destination.
         */
        action: string;
        /**
         * (Updatable) Target of the access policy. This can either be the source or the destination of the traffic.
         */
        destination: outputs.ServiceMesh.AccessPolicyRuleDestination;
        /**
         * (Updatable) Target of the access policy. This can either be the source or the destination of the traffic.
         */
        source: outputs.ServiceMesh.AccessPolicyRuleSource;
    }

    export interface AccessPolicyRuleDestination {
        /**
         * (Updatable) The hostnames of the external service. Only applicable for HTTP and HTTPS protocols. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com", "*". Hostname "*" can be used to allow all hosts.
         */
        hostnames: string[];
        /**
         * (Updatable) The OCID of the ingress gateway resource.
         */
        ingressGatewayId: string;
        /**
         * (Updatable) The ipAddresses of the external service in CIDR notation. Only applicable for TCP protocol. All requests matching the given CIDR notation will pass through. In case a wildcard CIDR "0.0.0.0/0" is provided, the same port cannot be used for a virtual service communication.
         */
        ipAddresses: string[];
        /**
         * (Updatable) Ports exposed by an external service. If left empty all ports will be allowed.
         */
        ports: number[];
        /**
         * (Updatable) Protocol of the external service
         */
        protocol: string;
        /**
         * (Updatable) Traffic type of the target.
         */
        type: string;
        /**
         * (Updatable) The OCID of the virtual service resource.
         */
        virtualServiceId: string;
    }

    export interface AccessPolicyRuleSource {
        /**
         * (Updatable) The hostnames of the external service. Only applicable for HTTP and HTTPS protocols. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com", "*". Hostname "*" can be used to allow all hosts.
         */
        hostnames: string[];
        /**
         * (Updatable) The OCID of the ingress gateway resource.
         */
        ingressGatewayId: string;
        /**
         * (Updatable) The ipAddresses of the external service in CIDR notation. Only applicable for TCP protocol. All requests matching the given CIDR notation will pass through. In case a wildcard CIDR "0.0.0.0/0" is provided, the same port cannot be used for a virtual service communication.
         */
        ipAddresses: string[];
        /**
         * (Updatable) Ports exposed by an external service. If left empty all ports will be allowed.
         */
        ports: number[];
        /**
         * (Updatable) Protocol of the external service
         */
        protocol: string;
        /**
         * (Updatable) Traffic type of the target.
         */
        type: string;
        /**
         * (Updatable) The OCID of the virtual service resource.
         */
        virtualServiceId: string;
    }

    export interface GetAccessPoliciesAccessPolicyCollection {
        items: outputs.ServiceMesh.GetAccessPoliciesAccessPolicyCollectionItem[];
    }

    export interface GetAccessPoliciesAccessPolicyCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique AccessPolicy identifier.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * Unique Mesh identifier.
         */
        meshId: string;
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * List of applicable rules.
         */
        rules: outputs.ServiceMesh.GetAccessPoliciesAccessPolicyCollectionItemRule[];
        /**
         * A filter to return only resources that match the life cycle state given.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time when this resource was created in an RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time when this resource was updated in an RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetAccessPoliciesAccessPolicyCollectionItemRule {
        /**
         * Action for the traffic between the source and the destination.
         */
        action: string;
        /**
         * Target of the access policy. This can either be the source or the destination of the traffic.
         */
        destinations: outputs.ServiceMesh.GetAccessPoliciesAccessPolicyCollectionItemRuleDestination[];
        /**
         * Target of the access policy. This can either be the source or the destination of the traffic.
         */
        sources: outputs.ServiceMesh.GetAccessPoliciesAccessPolicyCollectionItemRuleSource[];
    }

    export interface GetAccessPoliciesAccessPolicyCollectionItemRuleDestination {
        /**
         * The hostnames of the external service. Only applicable for HTTP and HTTPS protocols. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com", "*". Hostname "*" can be used to allow all hosts.
         */
        hostnames: string[];
        /**
         * The OCID of the ingress gateway resource.
         */
        ingressGatewayId: string;
        /**
         * The ipAddresses of the external service in CIDR notation. Only applicable for TCP protocol. All requests matching the given CIDR notation will pass through. In case a wildcard CIDR "0.0.0.0/0" is provided, the same port cannot be used for a virtual service communication.
         */
        ipAddresses: string[];
        /**
         * Ports exposed by an external service. If left empty all ports will be allowed.
         */
        ports: number[];
        /**
         * Protocol of the external service
         */
        protocol: string;
        /**
         * Traffic type of the target.
         */
        type: string;
        /**
         * The OCID of the virtual service resource.
         */
        virtualServiceId: string;
    }

    export interface GetAccessPoliciesAccessPolicyCollectionItemRuleSource {
        /**
         * The hostnames of the external service. Only applicable for HTTP and HTTPS protocols. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com", "*". Hostname "*" can be used to allow all hosts.
         */
        hostnames: string[];
        /**
         * The OCID of the ingress gateway resource.
         */
        ingressGatewayId: string;
        /**
         * The ipAddresses of the external service in CIDR notation. Only applicable for TCP protocol. All requests matching the given CIDR notation will pass through. In case a wildcard CIDR "0.0.0.0/0" is provided, the same port cannot be used for a virtual service communication.
         */
        ipAddresses: string[];
        /**
         * Ports exposed by an external service. If left empty all ports will be allowed.
         */
        ports: number[];
        /**
         * Protocol of the external service
         */
        protocol: string;
        /**
         * Traffic type of the target.
         */
        type: string;
        /**
         * The OCID of the virtual service resource.
         */
        virtualServiceId: string;
    }

    export interface GetAccessPoliciesFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAccessPolicyRule {
        /**
         * Action for the traffic between the source and the destination.
         */
        action: string;
        /**
         * Target of the access policy. This can either be the source or the destination of the traffic.
         */
        destinations: outputs.ServiceMesh.GetAccessPolicyRuleDestination[];
        /**
         * Target of the access policy. This can either be the source or the destination of the traffic.
         */
        sources: outputs.ServiceMesh.GetAccessPolicyRuleSource[];
    }

    export interface GetAccessPolicyRuleDestination {
        /**
         * The hostnames of the external service. Only applicable for HTTP and HTTPS protocols. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com", "*". Hostname "*" can be used to allow all hosts.
         */
        hostnames: string[];
        /**
         * The OCID of the ingress gateway resource.
         */
        ingressGatewayId: string;
        /**
         * The ipAddresses of the external service in CIDR notation. Only applicable for TCP protocol. All requests matching the given CIDR notation will pass through. In case a wildcard CIDR "0.0.0.0/0" is provided, the same port cannot be used for a virtual service communication.
         */
        ipAddresses: string[];
        /**
         * Ports exposed by an external service. If left empty all ports will be allowed.
         */
        ports: number[];
        /**
         * Protocol of the external service
         */
        protocol: string;
        /**
         * Traffic type of the target.
         */
        type: string;
        /**
         * The OCID of the virtual service resource.
         */
        virtualServiceId: string;
    }

    export interface GetAccessPolicyRuleSource {
        /**
         * The hostnames of the external service. Only applicable for HTTP and HTTPS protocols. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com", "*". Hostname "*" can be used to allow all hosts.
         */
        hostnames: string[];
        /**
         * The OCID of the ingress gateway resource.
         */
        ingressGatewayId: string;
        /**
         * The ipAddresses of the external service in CIDR notation. Only applicable for TCP protocol. All requests matching the given CIDR notation will pass through. In case a wildcard CIDR "0.0.0.0/0" is provided, the same port cannot be used for a virtual service communication.
         */
        ipAddresses: string[];
        /**
         * Ports exposed by an external service. If left empty all ports will be allowed.
         */
        ports: number[];
        /**
         * Protocol of the external service
         */
        protocol: string;
        /**
         * Traffic type of the target.
         */
        type: string;
        /**
         * The OCID of the virtual service resource.
         */
        virtualServiceId: string;
    }

    export interface GetIngressGatewayAccessLogging {
        /**
         * Determines if the logging configuration is enabled.
         */
        isEnabled: boolean;
    }

    export interface GetIngressGatewayHost {
        /**
         * Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com".
         */
        hostnames: string[];
        /**
         * The listeners for the ingress gateway.
         */
        listeners: outputs.ServiceMesh.GetIngressGatewayHostListener[];
        /**
         * A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
         */
        name: string;
    }

    export interface GetIngressGatewayHostListener {
        /**
         * Port on which ingress gateway is listening.
         */
        port: number;
        /**
         * Type of protocol used.
         */
        protocol: string;
        /**
         * TLS enforcement config for the ingress listener.
         */
        tls: outputs.ServiceMesh.GetIngressGatewayHostListenerTl[];
    }

    export interface GetIngressGatewayHostListenerTl {
        /**
         * Resource representing the TLS configuration used for validating client certificates.
         */
        clientValidations: outputs.ServiceMesh.GetIngressGatewayHostListenerTlClientValidation[];
        /**
         * DISABLED: Connection can only be plaintext. PERMISSIVE: Connection can be either plaintext or TLS/mTLS. If the clientValidation.trustedCaBundle property is configured for the listener, mTLS is performed and the client's certificates are validated by the gateway. TLS: Connection can only be TLS.  MUTUAL_TLS: Connection can only be MTLS.
         */
        mode: string;
        /**
         * Resource representing the location of the TLS certificate.
         */
        serverCertificates: outputs.ServiceMesh.GetIngressGatewayHostListenerTlServerCertificate[];
    }

    export interface GetIngressGatewayHostListenerTlClientValidation {
        /**
         * A list of alternate names to verify the subject identity in the certificate presented by the client.
         */
        subjectAlternateNames: string[];
        /**
         * Resource representing the CA bundle.
         */
        trustedCaBundles: outputs.ServiceMesh.GetIngressGatewayHostListenerTlClientValidationTrustedCaBundle[];
    }

    export interface GetIngressGatewayHostListenerTlClientValidationTrustedCaBundle {
        /**
         * The OCID of the CA Bundle resource.
         */
        caBundleId: string;
        /**
         * Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
         */
        secretName: string;
        /**
         * Type of certificate.
         */
        type: string;
    }

    export interface GetIngressGatewayHostListenerTlServerCertificate {
        /**
         * The OCID of the certificate resource that will be used for mTLS authentication with other virtual services in the mesh.
         */
        certificateId: string;
        /**
         * Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
         */
        secretName: string;
        /**
         * Type of certificate.
         */
        type: string;
    }

    export interface GetIngressGatewayMtl {
        /**
         * The OCID of the certificate resource that will be used for mTLS authentication with other virtual services in the mesh.
         */
        certificateId: string;
        /**
         * The number of days the mTLS certificate is valid.  This value should be less than the Maximum Validity Duration  for Certificates (Days) setting on the Certificate Authority associated with this Mesh.  The certificate will be automatically renewed after 2/3 of the validity period, so a certificate with a maximum validity of 45 days will be renewed every 30 days.
         */
        maximumValidity: number;
    }

    export interface GetIngressGatewayRouteTableRouteRule {
        /**
         * The destination of the request.
         */
        destinations: outputs.ServiceMesh.GetIngressGatewayRouteTableRouteRuleDestination[];
        /**
         * The ingress gateway host to which the route rule attaches. If not specified, the route rule gets attached to all hosts on the ingress gateway.
         */
        ingressGatewayHosts: outputs.ServiceMesh.GetIngressGatewayRouteTableRouteRuleIngressGatewayHost[];
        /**
         * If true, the rule will check that the content-type header has a application/grpc or one of the various application/grpc+ values.
         */
        isGrpc: boolean;
        /**
         * If true, the hostname will be rewritten to the target virtual deployment's DNS hostname.
         */
        isHostRewriteEnabled: boolean;
        /**
         * If true, the matched path prefix will be rewritten to '/' before being directed to the target virtual deployment.
         */
        isPathRewriteEnabled: boolean;
        /**
         * Route to match
         */
        path: string;
        /**
         * Match type for the route
         */
        pathType: string;
        /**
         * Type of protocol.
         */
        type: string;
    }

    export interface GetIngressGatewayRouteTableRouteRuleDestination {
        /**
         * The port of the ingress gateway host listener. Leave empty to match all ports for the host.
         */
        port: number;
        /**
         * The OCID of the virtual service where the request will be routed.
         */
        virtualServiceId: string;
        /**
         * Weight of traffic target.
         */
        weight: number;
    }

    export interface GetIngressGatewayRouteTableRouteRuleIngressGatewayHost {
        /**
         * Name of the ingress gateway host that this route should apply to.
         */
        name: string;
        /**
         * The port of the ingress gateway host listener. Leave empty to match all ports for the host.
         */
        port: number;
    }

    export interface GetIngressGatewayRouteTablesFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIngressGatewayRouteTablesIngressGatewayRouteTableCollection {
        items: outputs.ServiceMesh.GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItem[];
    }

    export interface GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique IngressGatewayRouteTable identifier.
         */
        id: string;
        /**
         * Unique IngressGateway identifier.
         */
        ingressGatewayId: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * The priority of the route table. A lower value means a higher priority. The routes are declared based on the priority.
         */
        priority: number;
        /**
         * The route rules for the ingress gateway.
         */
        routeRules: outputs.ServiceMesh.GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRule[];
        /**
         * A filter to return only resources that match the life cycle state given.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time when this resource was created in an RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time when this resource was updated in an RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRule {
        /**
         * The destination of the request.
         */
        destinations: outputs.ServiceMesh.GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleDestination[];
        /**
         * The ingress gateway host to which the route rule attaches. If not specified, the route rule gets attached to all hosts on the ingress gateway.
         */
        ingressGatewayHosts: outputs.ServiceMesh.GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleIngressGatewayHost[];
        /**
         * If true, the rule will check that the content-type header has a application/grpc or one of the various application/grpc+ values.
         */
        isGrpc: boolean;
        /**
         * If true, the hostname will be rewritten to the target virtual deployment's DNS hostname.
         */
        isHostRewriteEnabled: boolean;
        /**
         * If true, the matched path prefix will be rewritten to '/' before being directed to the target virtual deployment.
         */
        isPathRewriteEnabled: boolean;
        /**
         * Route to match
         */
        path: string;
        /**
         * Match type for the route
         */
        pathType: string;
        /**
         * Type of protocol.
         */
        type: string;
    }

    export interface GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleDestination {
        /**
         * The port of the ingress gateway host listener. Leave empty to match all ports for the host.
         */
        port: number;
        /**
         * The OCID of the virtual service where the request will be routed.
         */
        virtualServiceId: string;
        /**
         * Weight of traffic target.
         */
        weight: number;
    }

    export interface GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleIngressGatewayHost {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * The port of the ingress gateway host listener. Leave empty to match all ports for the host.
         */
        port: number;
    }

    export interface GetIngressGatewaysFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetIngressGatewaysIngressGatewayCollection {
        items: outputs.ServiceMesh.GetIngressGatewaysIngressGatewayCollectionItem[];
    }

    export interface GetIngressGatewaysIngressGatewayCollectionItem {
        /**
         * This configuration determines if logging is enabled and where the logs will be output.
         */
        accessLoggings: outputs.ServiceMesh.GetIngressGatewaysIngressGatewayCollectionItemAccessLogging[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Array of hostnames and their listener configuration that this gateway will bind to.
         */
        hosts: outputs.ServiceMesh.GetIngressGatewaysIngressGatewayCollectionItemHost[];
        /**
         * Unique IngressGateway identifier.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * Unique Mesh identifier.
         */
        meshId: string;
        /**
         * Mutual TLS settings used when sending requests to virtual services within the mesh.
         */
        mtls: outputs.ServiceMesh.GetIngressGatewaysIngressGatewayCollectionItemMtl[];
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * A filter to return only resources that match the life cycle state given.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time when this resource was created in an RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time when this resource was updated in an RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetIngressGatewaysIngressGatewayCollectionItemAccessLogging {
        /**
         * Determines if the logging configuration is enabled.
         */
        isEnabled: boolean;
    }

    export interface GetIngressGatewaysIngressGatewayCollectionItemHost {
        /**
         * Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com".
         */
        hostnames: string[];
        /**
         * The listeners for the ingress gateway.
         */
        listeners: outputs.ServiceMesh.GetIngressGatewaysIngressGatewayCollectionItemHostListener[];
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
    }

    export interface GetIngressGatewaysIngressGatewayCollectionItemHostListener {
        /**
         * Port on which ingress gateway is listening.
         */
        port: number;
        /**
         * Type of protocol used.
         */
        protocol: string;
        /**
         * TLS enforcement config for the ingress listener.
         */
        tls: outputs.ServiceMesh.GetIngressGatewaysIngressGatewayCollectionItemHostListenerTl[];
    }

    export interface GetIngressGatewaysIngressGatewayCollectionItemHostListenerTl {
        /**
         * Resource representing the TLS configuration used for validating client certificates.
         */
        clientValidations: outputs.ServiceMesh.GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidation[];
        /**
         * DISABLED: Connection can only be plaintext. PERMISSIVE: Connection can be either plaintext or TLS/mTLS. If the clientValidation.trustedCaBundle property is configured for the listener, mTLS is performed and the client's certificates are validated by the gateway. TLS: Connection can only be TLS.  MUTUAL_TLS: Connection can only be MTLS.
         */
        mode: string;
        /**
         * Resource representing the location of the TLS certificate.
         */
        serverCertificates: outputs.ServiceMesh.GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlServerCertificate[];
    }

    export interface GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidation {
        /**
         * A list of alternate names to verify the subject identity in the certificate presented by the client.
         */
        subjectAlternateNames: string[];
        /**
         * Resource representing the CA bundle.
         */
        trustedCaBundles: outputs.ServiceMesh.GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidationTrustedCaBundle[];
    }

    export interface GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidationTrustedCaBundle {
        /**
         * The OCID of the CA Bundle resource.
         */
        caBundleId: string;
        /**
         * Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
         */
        secretName: string;
        /**
         * Type of certificate.
         */
        type: string;
    }

    export interface GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlServerCertificate {
        /**
         * The OCID of the certificate resource that will be used for mTLS authentication with other virtual services in the mesh.
         */
        certificateId: string;
        /**
         * Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
         */
        secretName: string;
        /**
         * Type of certificate.
         */
        type: string;
    }

    export interface GetIngressGatewaysIngressGatewayCollectionItemMtl {
        /**
         * The OCID of the certificate resource that will be used for mTLS authentication with other virtual services in the mesh.
         */
        certificateId: string;
        /**
         * The number of days the mTLS certificate is valid.  This value should be less than the Maximum Validity Duration  for Certificates (Days) setting on the Certificate Authority associated with this Mesh.  The certificate will be automatically renewed after 2/3 of the validity period, so a certificate with a maximum validity of 45 days will be renewed every 30 days.
         */
        maximumValidity: number;
    }

    export interface GetMeshCertificateAuthority {
        /**
         * Unique identifier that is immutable on creation.
         */
        id: string;
    }

    export interface GetMeshMtl {
        /**
         * DISABLED: No minimum virtual services within this mesh can use any mTLS authentication mode. PERMISSIVE: Virtual services within this mesh can use either PERMISSIVE or STRICT modes. STRICT: All virtual services within this mesh must use STRICT mode.
         */
        minimum: string;
    }

    export interface GetMeshesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMeshesMeshCollection {
        items: outputs.ServiceMesh.GetMeshesMeshCollectionItem[];
    }

    export interface GetMeshesMeshCollectionItem {
        /**
         * A list of certificate authority resources to use for creating leaf certificates for mTLS authentication. Currently we only support one certificate authority, but this may expand in future releases.
         */
        certificateAuthorities: outputs.ServiceMesh.GetMeshesMeshCollectionItemCertificateAuthority[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
         */
        description: string;
        /**
         * A filter to return only resources that match the entire displayName given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique Mesh identifier.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * Sets a minimum level of mTLS authentication for all virtual services within the mesh.
         */
        mtls: outputs.ServiceMesh.GetMeshesMeshCollectionItemMtl[];
        /**
         * A filter to return only resources that match the life cycle state given.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time when this resource was created in an RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time when this resource was updated in an RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetMeshesMeshCollectionItemCertificateAuthority {
        /**
         * Unique Mesh identifier.
         */
        id: string;
    }

    export interface GetMeshesMeshCollectionItemMtl {
        /**
         * DISABLED: No minimum virtual services within this mesh can use any mTLS authentication mode. PERMISSIVE: Virtual services within this mesh can use either PERMISSIVE or STRICT modes. STRICT: All virtual services within this mesh must use STRICT mode.
         */
        minimum: string;
    }

    export interface GetVirtualDeploymentAccessLogging {
        /**
         * Determines if the logging configuration is enabled.
         */
        isEnabled: boolean;
    }

    export interface GetVirtualDeploymentListener {
        /**
         * Port in which virtual deployment is running.
         */
        port: number;
        /**
         * Type of protocol used in virtual deployment.
         */
        protocol: string;
    }

    export interface GetVirtualDeploymentServiceDiscovery {
        /**
         * The hostname of the virtual deployments.
         */
        hostname: string;
        /**
         * Type of service discovery.
         */
        type: string;
    }

    export interface GetVirtualDeploymentsFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVirtualDeploymentsVirtualDeploymentCollection {
        items: outputs.ServiceMesh.GetVirtualDeploymentsVirtualDeploymentCollectionItem[];
    }

    export interface GetVirtualDeploymentsVirtualDeploymentCollectionItem {
        /**
         * This configuration determines if logging is enabled and where the logs will be output.
         */
        accessLoggings: outputs.ServiceMesh.GetVirtualDeploymentsVirtualDeploymentCollectionItemAccessLogging[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique VirtualDeployment identifier.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * The listeners for the virtual deployment
         */
        listeners: outputs.ServiceMesh.GetVirtualDeploymentsVirtualDeploymentCollectionItemListener[];
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * Service Discovery configuration for virtual deployments.
         */
        serviceDiscoveries: outputs.ServiceMesh.GetVirtualDeploymentsVirtualDeploymentCollectionItemServiceDiscovery[];
        /**
         * A filter to return only resources that match the life cycle state given.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time when this resource was created in an RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time when this resource was updated in an RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * Unique VirtualService identifier.
         */
        virtualServiceId: string;
    }

    export interface GetVirtualDeploymentsVirtualDeploymentCollectionItemAccessLogging {
        /**
         * Determines if the logging configuration is enabled.
         */
        isEnabled: boolean;
    }

    export interface GetVirtualDeploymentsVirtualDeploymentCollectionItemListener {
        /**
         * Port in which virtual deployment is running.
         */
        port: number;
        /**
         * Type of protocol used in virtual deployment.
         */
        protocol: string;
    }

    export interface GetVirtualDeploymentsVirtualDeploymentCollectionItemServiceDiscovery {
        /**
         * The hostname of the virtual deployments.
         */
        hostname: string;
        /**
         * Type of service discovery.
         */
        type: string;
    }

    export interface GetVirtualServiceDefaultRoutingPolicy {
        /**
         * Type of the virtual service routing policy.
         */
        type: string;
    }

    export interface GetVirtualServiceMtl {
        /**
         * The OCID of the certificate resource that will be used for mTLS authentication with other virtual services in the mesh.
         */
        certificateId: string;
        /**
         * The number of days the mTLS certificate is valid.  This value should be less than the Maximum Validity Duration  for Certificates (Days) setting on the Certificate Authority associated with this Mesh.  The certificate will be automatically renewed after 2/3 of the validity period, so a certificate with a maximum validity of 45 days will be renewed every 30 days.
         */
        maximumValidity: number;
        /**
         * DISABLED: Connection is not tunneled. PERMISSIVE: Connection can be either plaintext or an mTLS tunnel. STRICT: Connection is an mTLS tunnel.  Clients without a valid certificate will be rejected.
         */
        mode: string;
    }

    export interface GetVirtualServiceRouteTableRouteRule {
        /**
         * The destination of the request.
         */
        destinations: outputs.ServiceMesh.GetVirtualServiceRouteTableRouteRuleDestination[];
        /**
         * If true, the rule will check that the content-type header has a application/grpc or one of the various application/grpc+ values.
         */
        isGrpc: boolean;
        /**
         * Route to match
         */
        path: string;
        /**
         * Match type for the route
         */
        pathType: string;
        /**
         * Type of protocol.
         */
        type: string;
    }

    export interface GetVirtualServiceRouteTableRouteRuleDestination {
        /**
         * Port on virtual deployment to target. If port is missing, the rule will target all ports on the virtual deployment.
         */
        port: number;
        /**
         * The OCID of the virtual deployment where the request will be routed.
         */
        virtualDeploymentId: string;
        /**
         * Weight of traffic target.
         */
        weight: number;
    }

    export interface GetVirtualServiceRouteTablesFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVirtualServiceRouteTablesVirtualServiceRouteTableCollection {
        items: outputs.ServiceMesh.GetVirtualServiceRouteTablesVirtualServiceRouteTableCollectionItem[];
    }

    export interface GetVirtualServiceRouteTablesVirtualServiceRouteTableCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique VirtualServiceRouteTable identifier.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
         */
        priority: number;
        /**
         * The route rules for the virtual service.
         */
        routeRules: outputs.ServiceMesh.GetVirtualServiceRouteTablesVirtualServiceRouteTableCollectionItemRouteRule[];
        /**
         * A filter to return only resources that match the life cycle state given.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time when this resource was created in an RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time when this resource was updated in an RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * Unique VirtualService identifier.
         */
        virtualServiceId: string;
    }

    export interface GetVirtualServiceRouteTablesVirtualServiceRouteTableCollectionItemRouteRule {
        /**
         * The destination of the request.
         */
        destinations: outputs.ServiceMesh.GetVirtualServiceRouteTablesVirtualServiceRouteTableCollectionItemRouteRuleDestination[];
        /**
         * If true, the rule will check that the content-type header has a application/grpc or one of the various application/grpc+ values.
         */
        isGrpc: boolean;
        /**
         * Route to match
         */
        path: string;
        /**
         * Match type for the route
         */
        pathType: string;
        /**
         * Type of protocol.
         */
        type: string;
    }

    export interface GetVirtualServiceRouteTablesVirtualServiceRouteTableCollectionItemRouteRuleDestination {
        /**
         * Port on virtual deployment to target. If port is missing, the rule will target all ports on the virtual deployment.
         */
        port: number;
        /**
         * The OCID of the virtual deployment where the request will be routed.
         */
        virtualDeploymentId: string;
        /**
         * Weight of traffic target.
         */
        weight: number;
    }

    export interface GetVirtualServicesFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVirtualServicesVirtualServiceCollection {
        items: outputs.ServiceMesh.GetVirtualServicesVirtualServiceCollectionItem[];
    }

    export interface GetVirtualServicesVirtualServiceCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Routing policy for the virtual service.
         */
        defaultRoutingPolicies: outputs.ServiceMesh.GetVirtualServicesVirtualServiceCollectionItemDefaultRoutingPolicy[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
         */
        description: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The DNS hostnames of the virtual service that is used by its callers. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com". Can be omitted if the virtual service will only have TCP virtual deployments.
         */
        hosts: string[];
        /**
         * Unique VirtualService identifier.
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
         */
        lifecycleDetails: string;
        /**
         * Unique Mesh identifier.
         */
        meshId: string;
        /**
         * Mutual TLS settings used when communicating with other virtual services or ingress gateways within the mesh.
         */
        mtls: outputs.ServiceMesh.GetVirtualServicesVirtualServiceCollectionItemMtl[];
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        /**
         * A filter to return only resources that match the life cycle state given.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time when this resource was created in an RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time when this resource was updated in an RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetVirtualServicesVirtualServiceCollectionItemDefaultRoutingPolicy {
        /**
         * Type of the virtual service routing policy.
         */
        type: string;
    }

    export interface GetVirtualServicesVirtualServiceCollectionItemMtl {
        /**
         * The OCID of the certificate resource that will be used for mTLS authentication with other virtual services in the mesh.
         */
        certificateId: string;
        /**
         * The number of days the mTLS certificate is valid.  This value should be less than the Maximum Validity Duration  for Certificates (Days) setting on the Certificate Authority associated with this Mesh.  The certificate will be automatically renewed after 2/3 of the validity period, so a certificate with a maximum validity of 45 days will be renewed every 30 days.
         */
        maximumValidity: number;
        /**
         * DISABLED: Connection is not tunneled. PERMISSIVE: Connection can be either plaintext or an mTLS tunnel. STRICT: Connection is an mTLS tunnel.  Clients without a valid certificate will be rejected.
         */
        mode: string;
    }

    export interface IngressGatewayAccessLogging {
        /**
         * (Updatable) Determines if the logging configuration is enabled.
         */
        isEnabled: boolean;
    }

    export interface IngressGatewayHost {
        /**
         * (Updatable) Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com".
         */
        hostnames: string[];
        /**
         * (Updatable) The listeners for the ingress gateway.
         */
        listeners: outputs.ServiceMesh.IngressGatewayHostListener[];
        /**
         * A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
         */
        name: string;
    }

    export interface IngressGatewayHostListener {
        /**
         * (Updatable) Port on which ingress gateway is listening.
         */
        port: number;
        /**
         * (Updatable) Type of protocol used.
         */
        protocol: string;
        /**
         * (Updatable) TLS enforcement config for the ingress listener.
         */
        tls: outputs.ServiceMesh.IngressGatewayHostListenerTls;
    }

    export interface IngressGatewayHostListenerTls {
        /**
         * (Updatable) Resource representing the TLS configuration used for validating client certificates.
         */
        clientValidation: outputs.ServiceMesh.IngressGatewayHostListenerTlsClientValidation;
        /**
         * (Updatable) DISABLED: Connection can only be plaintext. PERMISSIVE: Connection can be either plaintext or TLS/mTLS. If the clientValidation.trustedCaBundle property is configured for the listener, mTLS is performed and the client's certificates are validated by the gateway. TLS: Connection can only be TLS.  MUTUAL_TLS: Connection can only be MTLS.
         */
        mode: string;
        /**
         * (Updatable) Resource representing the location of the TLS certificate.
         */
        serverCertificate: outputs.ServiceMesh.IngressGatewayHostListenerTlsServerCertificate;
    }

    export interface IngressGatewayHostListenerTlsClientValidation {
        /**
         * (Updatable) A list of alternate names to verify the subject identity in the certificate presented by the client.
         */
        subjectAlternateNames: string[];
        /**
         * (Updatable) Resource representing the CA bundle.
         */
        trustedCaBundle: outputs.ServiceMesh.IngressGatewayHostListenerTlsClientValidationTrustedCaBundle;
    }

    export interface IngressGatewayHostListenerTlsClientValidationTrustedCaBundle {
        /**
         * (Updatable) The OCID of the CA Bundle resource.
         */
        caBundleId: string;
        /**
         * (Updatable) Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
         */
        secretName: string;
        /**
         * (Updatable) Type of certificate.
         */
        type: string;
    }

    export interface IngressGatewayHostListenerTlsServerCertificate {
        /**
         * (Updatable) The OCID of the leaf certificate resource.
         */
        certificateId: string;
        /**
         * (Updatable) Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
         */
        secretName: string;
        /**
         * (Updatable) Type of certificate.
         */
        type: string;
    }

    export interface IngressGatewayMtls {
        /**
         * (Updatable) The OCID of the leaf certificate resource.
         */
        certificateId: string;
        /**
         * (Updatable) The number of days the mTLS certificate is valid.  This value should be less than the Maximum Validity Duration  for Certificates (Days) setting on the Certificate Authority associated with this Mesh.  The certificate will be automatically renewed after 2/3 of the validity period, so a certificate with a maximum validity of 45 days will be renewed every 30 days.
         */
        maximumValidity: number;
    }

    export interface IngressGatewayRouteTableRouteRule {
        /**
         * (Updatable) The destination of the request.
         */
        destinations: outputs.ServiceMesh.IngressGatewayRouteTableRouteRuleDestination[];
        /**
         * (Updatable) The ingress gateway host to which the route rule attaches. If not specified, the route rule gets attached to all hosts on the ingress gateway.
         */
        ingressGatewayHost: outputs.ServiceMesh.IngressGatewayRouteTableRouteRuleIngressGatewayHost;
        /**
         * (Updatable) If true, the rule will check that the content-type header has a application/grpc or one of the various application/grpc+ values.
         */
        isGrpc: boolean;
        /**
         * (Updatable) If true, the hostname will be rewritten to the target virtual deployment's DNS hostname.
         */
        isHostRewriteEnabled: boolean;
        /**
         * (Updatable) If true, the matched path prefix will be rewritten to '/' before being directed to the target virtual deployment.
         */
        isPathRewriteEnabled: boolean;
        /**
         * (Updatable) Route to match
         */
        path: string;
        /**
         * (Updatable) Match type for the route
         */
        pathType: string;
        /**
         * (Updatable) Type of protocol.
         */
        type: string;
    }

    export interface IngressGatewayRouteTableRouteRuleDestination {
        /**
         * (Updatable) The port of the ingress gateway host listener. Leave empty to match all ports for the host.
         */
        port: number;
        /**
         * (Updatable) The OCID of the virtual service where the request will be routed.
         */
        virtualServiceId: string;
        /**
         * (Updatable) Weight of traffic target.
         */
        weight: number;
    }

    export interface IngressGatewayRouteTableRouteRuleIngressGatewayHost {
        /**
         * (Updatable) Name of the ingress gateway host that this route should apply to.
         */
        name: string;
        /**
         * (Updatable) The port of the ingress gateway host listener. Leave empty to match all ports for the host.
         */
        port: number;
    }

    export interface MeshCertificateAuthority {
        /**
         * The OCID of the certificate authority resource.
         */
        id: string;
    }

    export interface MeshMtls {
        /**
         * (Updatable) DISABLED: No minimum virtual services within this mesh can use any mTLS authentication mode. PERMISSIVE: Virtual services within this mesh can use either PERMISSIVE or STRICT modes. STRICT: All virtual services within this mesh must use STRICT mode.
         */
        minimum: string;
    }

    export interface VirtualDeploymentAccessLogging {
        /**
         * (Updatable) Determines if the logging configuration is enabled.
         */
        isEnabled: boolean;
    }

    export interface VirtualDeploymentListener {
        /**
         * (Updatable) Port in which virtual deployment is running.
         */
        port: number;
        /**
         * (Updatable) Type of protocol used in virtual deployment.
         */
        protocol: string;
    }

    export interface VirtualDeploymentServiceDiscovery {
        /**
         * (Updatable) The hostname of the virtual deployments.
         */
        hostname: string;
        /**
         * (Updatable) Type of service discovery.
         */
        type: string;
    }

    export interface VirtualServiceDefaultRoutingPolicy {
        /**
         * (Updatable) Type of the virtual service routing policy.
         */
        type: string;
    }

    export interface VirtualServiceMtls {
        /**
         * The OCID of the certificate resource that will be used for mTLS authentication with other virtual services in the mesh.
         */
        certificateId: string;
        /**
         * (Updatable) The number of days the mTLS certificate is valid.  This value should be less than the Maximum Validity Duration  for Certificates (Days) setting on the Certificate Authority associated with this Mesh.  The certificate will be automatically renewed after 2/3 of the validity period, so a certificate with a maximum validity of 45 days will be renewed every 30 days.
         */
        maximumValidity: number;
        /**
         * (Updatable) DISABLED: Connection is not tunneled. PERMISSIVE: Connection can be either plaintext or an mTLS tunnel. STRICT: Connection is an mTLS tunnel.  Clients without a valid certificate will be rejected.
         */
        mode: string;
    }

    export interface VirtualServiceRouteTableRouteRule {
        /**
         * (Updatable) The destination of the request.
         */
        destinations: outputs.ServiceMesh.VirtualServiceRouteTableRouteRuleDestination[];
        /**
         * (Updatable) If true, the rule will check that the content-type header has a application/grpc or one of the various application/grpc+ values.
         */
        isGrpc: boolean;
        /**
         * (Updatable) Route to match
         */
        path: string;
        /**
         * (Updatable) Match type for the route
         */
        pathType: string;
        /**
         * (Updatable) Type of protocol.
         */
        type: string;
    }

    export interface VirtualServiceRouteTableRouteRuleDestination {
        /**
         * (Updatable) Port on virtual deployment to target. If port is missing, the rule will target all ports on the virtual deployment.
         */
        port: number;
        /**
         * (Updatable) The OCID of the virtual deployment where the request will be routed.
         */
        virtualDeploymentId: string;
        /**
         * (Updatable) Weight of traffic target.
         */
        weight: number;
    }

}

export namespace StackMonitoring {
    export interface DiscoveryJobDiscoveryDetails {
        /**
         * The OCID of Management Agent
         */
        agentId: string;
        /**
         * List of DiscoveryJob Credential Details.
         */
        credentials?: outputs.StackMonitoring.DiscoveryJobDiscoveryDetailsCredentials;
        /**
         * Property Details
         */
        properties: outputs.StackMonitoring.DiscoveryJobDiscoveryDetailsProperties;
        /**
         * The Name of resource type
         */
        resourceName: string;
        /**
         * Resource Type.
         */
        resourceType: string;
        /**
         * Property Details
         */
        tags?: outputs.StackMonitoring.DiscoveryJobDiscoveryDetailsTags;
    }

    export interface DiscoveryJobDiscoveryDetailsCredentials {
        /**
         * List of DiscoveryJob credentials.
         */
        items: outputs.StackMonitoring.DiscoveryJobDiscoveryDetailsCredentialsItem[];
    }

    export interface DiscoveryJobDiscoveryDetailsCredentialsItem {
        /**
         * Name of Credential
         */
        credentialName: string;
        /**
         * Name of Credential Type
         */
        credentialType: string;
        /**
         * Property Details
         */
        properties: outputs.StackMonitoring.DiscoveryJobDiscoveryDetailsCredentialsItemProperties;
    }

    export interface DiscoveryJobDiscoveryDetailsCredentialsItemProperties {
        /**
         * Key/Value pair of Property
         */
        propertiesMap?: {[key: string]: any};
    }

    export interface DiscoveryJobDiscoveryDetailsProperties {
        /**
         * Key/Value pair of Property
         */
        propertiesMap?: {[key: string]: any};
    }

    export interface DiscoveryJobDiscoveryDetailsTags {
        /**
         * Key/Value pair of Property
         */
        propertiesMap?: {[key: string]: any};
    }

    export interface GetDiscoveryJobDiscoveryDetail {
        /**
         * The OCID of Management Agent
         */
        agentId: string;
        /**
         * List of DiscoveryJOb Credential Details.
         */
        credentials: outputs.StackMonitoring.GetDiscoveryJobDiscoveryDetailCredential[];
        /**
         * Property Details
         */
        properties: outputs.StackMonitoring.GetDiscoveryJobDiscoveryDetailProperty[];
        /**
         * The Name of resource type
         */
        resourceName: string;
        /**
         * Resource Type.
         */
        resourceType: string;
        /**
         * Property Details
         */
        tags: outputs.StackMonitoring.GetDiscoveryJobDiscoveryDetailTag[];
    }

    export interface GetDiscoveryJobDiscoveryDetailCredential {
        /**
         * List of DiscoveryJob credentials.
         */
        items: outputs.StackMonitoring.GetDiscoveryJobDiscoveryDetailCredentialItem[];
    }

    export interface GetDiscoveryJobDiscoveryDetailCredentialItem {
        /**
         * Name of Credential
         */
        credentialName: string;
        /**
         * Name of Credential Type
         */
        credentialType: string;
        /**
         * Property Details
         */
        properties: outputs.StackMonitoring.GetDiscoveryJobDiscoveryDetailCredentialItemProperty[];
    }

    export interface GetDiscoveryJobDiscoveryDetailCredentialItemProperty {
        /**
         * Key/Value pair of Property
         */
        propertiesMap: {[key: string]: any};
    }

    export interface GetDiscoveryJobDiscoveryDetailProperty {
        /**
         * Key/Value pair of Property
         */
        propertiesMap: {[key: string]: any};
    }

    export interface GetDiscoveryJobDiscoveryDetailTag {
        /**
         * Key/Value pair of Property
         */
        propertiesMap: {[key: string]: any};
    }

    export interface GetDiscoveryJobLogsDiscoveryJobLogCollection {
        /**
         * List of logs
         */
        items: outputs.StackMonitoring.GetDiscoveryJobLogsDiscoveryJobLogCollectionItem[];
    }

    export interface GetDiscoveryJobLogsDiscoveryJobLogCollectionItem {
        /**
         * The OCID of Discovery job
         */
        id: string;
        /**
         * Log message
         */
        logMessage: string;
        /**
         * The log type like INFO, WARNING, ERROR, SUCCESS
         */
        logType: string;
        /**
         * Time the Job log was created
         */
        timeCreated: string;
    }

    export interface GetDiscoveryJobLogsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetDiscoveryJobsDiscoveryJobCollection {
        /**
         * List of DiscoveryJob credentials.
         */
        items: outputs.StackMonitoring.GetDiscoveryJobsDiscoveryJobCollectionItem[];
    }

    export interface GetDiscoveryJobsDiscoveryJobCollectionItem {
        /**
         * The ID of the compartment in which data is listed.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Add option submits new discovery Job. Add with retry option to re-submit failed discovery job. Refresh option refreshes the existing discovered resources.
         */
        discoveryType: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of Discovery job
         */
        id: string;
        /**
         * The Name of resource type
         */
        resourceName: string;
        /**
         * Resource Type.
         */
        resourceType: string;
        /**
         * The current state of the DiscoveryJob Resource.
         */
        state: string;
        /**
         * Specifies the status of the discovery job
         */
        status: string;
        /**
         * The short summary of the status of the discovery job
         */
        statusMessage: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The OCID of Tenant
         */
        tenantId: string;
        /**
         * The time the discovery Job was updated.
         */
        timeUpdated: string;
        /**
         * The OCID of user in which the job is submitted
         */
        userId: string;
    }

    export interface GetDiscoveryJobsFilter {
        /**
         * A filter to return only discovery jobs that match the entire resource name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetMonitoredResourceAlias {
        /**
         * Monitored Resource Alias Reference Source Credential
         */
        credentials: outputs.StackMonitoring.GetMonitoredResourceAliasCredential[];
        /**
         * property name
         */
        name: string;
        /**
         * The source type and source name combination,delimited with (.) separator. {source type}.{source name} and source type max char limit is 63.
         */
        source: string;
    }

    export interface GetMonitoredResourceAliasCredential {
        /**
         * property name
         */
        name: string;
        /**
         * The name of the service owning the credential. Ex stack-monitoring or dbmgmt
         */
        service: string;
        /**
         * The source type and source name combination,delimited with (.) separator. {source type}.{source name} and source type max char limit is 63.
         */
        source: string;
    }

    export interface GetMonitoredResourceCredential {
        /**
         * Type of credentials specified in the credentials element. Three possible values - EXISTING, PLAINTEXT and ENCRYPTED. * EXISTING  - Credential is already stored in agent and only credential name need to be passed for existing credential. * PLAINTEXT - The credential properties will have credentials in plain text format. * ENCRYPTED - The credential properties will have credentials stored in vault in encrypted format using KMS client which uses master key for encryption. The same master key will be used to decrypt the credentials before passing on to the management agent.
         */
        credentialType: string;
        /**
         * The user-specified textual description of the credential.
         */
        description: string;
        /**
         * The master key OCID and applicable only for property value type ENCRYPTION. Key OCID is passed as input to Key management service decrypt API to retrieve the encrypted property value text.
         */
        keyId: string;
        /**
         * property name
         */
        name: string;
        /**
         * List of monitored resource properties
         */
        properties: outputs.StackMonitoring.GetMonitoredResourceCredentialProperty[];
        /**
         * The source type and source name combination,delimited with (.) separator. {source type}.{source name} and source type max char limit is 63.
         */
        source: string;
        /**
         * Monitored resource type
         */
        type: string;
    }

    export interface GetMonitoredResourceCredentialProperty {
        /**
         * property name
         */
        name: string;
        /**
         * property value
         */
        value: string;
    }

    export interface GetMonitoredResourceDatabaseConnectionDetail {
        /**
         * Database connector Identifier
         */
        connectorId: string;
        /**
         * dbId of the database
         */
        dbId: string;
        /**
         * UniqueName used for database connection requests.
         */
        dbUniqueName: string;
        /**
         * Listener Port number used for connection requests.
         */
        port: number;
        /**
         * Protocol used in DB connection string when connecting to external database service.
         */
        protocol: string;
        /**
         * Service name used for connection requests.
         */
        serviceName: string;
    }

    export interface GetMonitoredResourceProperty {
        /**
         * property name
         */
        name: string;
        /**
         * property value
         */
        value: string;
    }

    export interface MonitoredResourceAliases {
        /**
         * (Updatable) Monitored Resource Alias Reference Source Credential
         */
        credential: outputs.StackMonitoring.MonitoredResourceAliasesCredential;
        /**
         * (Updatable) property name
         */
        name: string;
        /**
         * (Updatable) The source type and source name combination,delimited with (.) separator. {source type}.{source name} and source type max char limit is 63.
         */
        source: string;
    }

    export interface MonitoredResourceAliasesCredential {
        /**
         * (Updatable) property name
         */
        name: string;
        /**
         * (Updatable) The name of the service owning the credential. Ex stack-monitoring or dbmgmt
         */
        service: string;
        /**
         * (Updatable) The source type and source name combination,delimited with (.) separator. {source type}.{source name} and source type max char limit is 63.
         */
        source: string;
    }

    export interface MonitoredResourceCredentials {
        /**
         * (Updatable) Type of credentials specified in the credentials element. Three possible values - EXISTING, PLAINTEXT and ENCRYPTED. * EXISTING  - Credential is already stored in agent and only credential name need to be passed for existing credential. * PLAINTEXT - The credential properties will have credentials in plain text format. * ENCRYPTED - The credential properties will have credentials stored in vault in encrypted format using KMS client which uses master key for encryption. The same master key will be used to decrypt the credentials before passing on to the management agent.
         */
        credentialType?: string;
        /**
         * (Updatable) The user-specified textual description of the credential.
         */
        description?: string;
        /**
         * (Updatable) The master key OCID and applicable only for property value type ENCRYPTION. Key OCID is passed as input to Key management service decrypt API to retrieve the encrypted property value text.
         */
        keyId?: string;
        /**
         * (Updatable) property name
         */
        name?: string;
        /**
         * (Updatable) List of monitored resource properties
         */
        properties?: outputs.StackMonitoring.MonitoredResourceCredentialsProperty[];
        /**
         * (Updatable) The source type and source name combination,delimited with (.) separator. {source type}.{source name} and source type max char limit is 63.
         */
        source?: string;
        /**
         * Monitored resource type
         */
        type?: string;
    }

    export interface MonitoredResourceCredentialsProperty {
        /**
         * (Updatable) property name
         */
        name?: string;
        /**
         * (Updatable) property value
         */
        value?: string;
    }

    export interface MonitoredResourceDatabaseConnectionDetails {
        /**
         * (Updatable) Database connector Identifier
         */
        connectorId?: string;
        /**
         * (Updatable) dbId of the database
         */
        dbId?: string;
        /**
         * (Updatable) UniqueName used for database connection requests.
         */
        dbUniqueName?: string;
        /**
         * (Updatable) Listener Port number used for connection requests.
         */
        port: number;
        /**
         * (Updatable) Protocol used in DB connection string when connecting to external database service.
         */
        protocol: string;
        /**
         * (Updatable) Service name used for connection requests.
         */
        serviceName: string;
    }

    export interface MonitoredResourceProperty {
        /**
         * (Updatable) property name
         */
        name?: string;
        /**
         * (Updatable) property value
         */
        value?: string;
    }

    export interface MonitoredResourcesAssociateMonitoredResourceDestinationResourceDetail {
        /**
         * Monitored Resource Name
         */
        name: string;
        /**
         * Monitored Resource Type
         */
        type: string;
    }

    export interface MonitoredResourcesAssociateMonitoredResourceSourceResourceDetail {
        /**
         * Monitored Resource Name
         */
        name: string;
        /**
         * Monitored Resource Type
         */
        type: string;
    }

    export interface MonitoredResourcesListMemberItem {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Monitored Resource Host
         */
        hostName: string;
        /**
         * Parent monitored resource identifier
         */
        parentId: string;
        /**
         * Monitored resource display name.
         */
        resourceDisplayName: string;
        /**
         * Monitored resource identifier
         */
        resourceId: string;
        /**
         * Monitored resource name
         */
        resourceName: string;
        /**
         * Monitored resource type
         */
        resourceType: string;
        /**
         * The current state of the Resource.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
    }

    export interface MonitoredResourcesSearchAssociationItem {
        /**
         * Association type to be created between source and destination resources
         */
        associationType: string;
        /**
         * Association Resource Details
         */
        destinationResourceDetails: outputs.StackMonitoring.MonitoredResourcesSearchAssociationItemDestinationResourceDetail[];
        /**
         * Destination Monitored Resource Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        destinationResourceId: string;
        /**
         * Association Resource Details
         */
        sourceResourceDetails: outputs.StackMonitoring.MonitoredResourcesSearchAssociationItemSourceResourceDetail[];
        /**
         * Source Monitored Resource Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         */
        sourceResourceId: string;
        /**
         * The time the the association was created. An RFC3339 formatted datetime string
         */
        timeCreated: string;
    }

    export interface MonitoredResourcesSearchAssociationItemDestinationResourceDetail {
        /**
         * Monitored Resource Name
         */
        name: string;
        /**
         * Monitored Resource Type
         */
        type: string;
    }

    export interface MonitoredResourcesSearchAssociationItemSourceResourceDetail {
        /**
         * Monitored Resource Name
         */
        name: string;
        /**
         * Monitored Resource Type
         */
        type: string;
    }

    export interface MonitoredResourcesSearchItem {
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Monitored resource display name.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return resources with host name match
         */
        hostName: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored resource.
         */
        id: string;
        /**
         * A filter to return resources with matching management agent id.
         */
        managementAgentId: string;
        /**
         * A filter to return resources that match exact resource name
         */
        name: string;
        /**
         * A filter to return resources with matching lifecycle state.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Monitored resource creation time. An RFC3339 formatted datetime string
         */
        timeCreated: string;
        /**
         * Monitored resource updation time. An RFC3339 formatted datetime string
         */
        timeUpdated: string;
        /**
         * A filter to return resources that match resource type
         */
        type: string;
    }
}

export namespace Streaming {
    export interface GetConnectHarnessesConnectHarness {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given ID exactly.
         */
        id: string;
        /**
         * Any additional details about the current state of the connect harness.
         */
        lifecycleStateDetails: string;
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
         */
        timeCreated: string;
    }

    export interface GetConnectHarnessesFilter {
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetStreamPoolCustomEncryptionKey {
        /**
         * Life cycle State of the custom key
         */
        keyState: string;
        /**
         * Custom Encryption Key (Master Key) ocid.
         */
        kmsKeyId: string;
    }

    export interface GetStreamPoolKafkaSetting {
        /**
         * Enable auto creation of topic on the server.
         */
        autoCreateTopicsEnable: boolean;
        /**
         * Bootstrap servers.
         */
        bootstrapServers: string;
        /**
         * The number of hours to keep a log file before deleting it (in hours).
         */
        logRetentionHours: number;
        /**
         * The default number of log partitions per topic.
         */
        numPartitions: number;
    }

    export interface GetStreamPoolPrivateEndpointSetting {
        /**
         * The optional list of network security groups that are associated with the private endpoint of the stream pool.
         */
        nsgIds: string[];
        /**
         * The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
         */
        privateEndpointIp: string;
        /**
         * The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
         */
        subnetId: string;
    }

    export interface GetStreamPoolsFilter {
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetStreamPoolsStreamPool {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * Custom Encryption Key which will be used for encryption by all the streams in the pool.
         */
        customEncryptionKeys: outputs.Streaming.GetStreamPoolsStreamPoolCustomEncryptionKey[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
         */
        definedTags: {[key: string]: any};
        /**
         * The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
         */
        endpointFqdn: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given ID exactly.
         */
        id: string;
        /**
         * True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
         */
        isPrivate: boolean;
        /**
         * Settings for the Kafka compatibility layer.
         */
        kafkaSettings: outputs.Streaming.GetStreamPoolsStreamPoolKafkaSetting[];
        /**
         * Any additional details about the current state of the stream.
         */
        lifecycleStateDetails: string;
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        /**
         * Optional settings if the stream pool is private.
         */
        privateEndpointSettings: outputs.Streaming.GetStreamPoolsStreamPoolPrivateEndpointSetting[];
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
         */
        timeCreated: string;
    }

    export interface GetStreamPoolsStreamPoolCustomEncryptionKey {
        /**
         * Life cycle State of the custom key
         */
        keyState: string;
        /**
         * Custom Encryption Key (Master Key) ocid.
         */
        kmsKeyId: string;
    }

    export interface GetStreamPoolsStreamPoolKafkaSetting {
        /**
         * Enable auto creation of topic on the server.
         */
        autoCreateTopicsEnable: boolean;
        /**
         * Bootstrap servers.
         */
        bootstrapServers: string;
        /**
         * The number of hours to keep a log file before deleting it (in hours).
         */
        logRetentionHours: number;
        /**
         * The default number of log partitions per topic.
         */
        numPartitions: number;
    }

    export interface GetStreamPoolsStreamPoolPrivateEndpointSetting {
        /**
         * The optional list of network security groups that are associated with the private endpoint of the stream pool.
         */
        nsgIds: string[];
        /**
         * The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
         */
        privateEndpointIp: string;
        /**
         * The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
         */
        subnetId: string;
    }

    export interface GetStreamsFilter {
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetStreamsStream {
        /**
         * The OCID of the compartment. Is exclusive with the `streamPoolId` parameter. One of them is required.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
         */
        definedTags: {[key: string]: any};
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the given ID exactly.
         */
        id: string;
        /**
         * Any additional details about the current state of the stream.
         */
        lifecycleStateDetails: string;
        /**
         * The endpoint to use when creating the StreamClient to consume or publish messages in the stream. If the associated stream pool is private, the endpoint is also private and can only be accessed from inside the stream pool's associated subnet.
         */
        messagesEndpoint: string;
        /**
         * A filter to return only resources that match the given name exactly.
         */
        name: string;
        /**
         * The number of partitions in the stream.
         */
        partitions: number;
        /**
         * The retention period of the stream, in hours. This property is read-only.
         */
        retentionInHours: number;
        /**
         * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * The OCID of the stream pool. Is exclusive with the `compartmentId` parameter. One of them is required.
         */
        streamPoolId: string;
        /**
         * The date and time the stream was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
         */
        timeCreated: string;
    }

    export interface StreamPoolCustomEncryptionKey {
        /**
         * Life cycle State of the custom key
         */
        keyState: string;
        /**
         * (Updatable) Custom Encryption Key (Master Key) ocid.
         */
        kmsKeyId: string;
    }

    export interface StreamPoolKafkaSettings {
        /**
         * (Updatable) Enable auto creation of topic on the server.
         */
        autoCreateTopicsEnable: boolean;
        /**
         * (Updatable) Bootstrap servers.
         */
        bootstrapServers: string;
        /**
         * (Updatable) The number of hours to keep a log file before deleting it (in hours).
         */
        logRetentionHours: number;
        /**
         * (Updatable) The default number of log partitions per topic.
         */
        numPartitions: number;
    }

    export interface StreamPoolPrivateEndpointSettings {
        /**
         * The optional list of network security groups to be used with the private endpoint of the stream pool. That value cannot be changed.
         */
        nsgIds: string[];
        /**
         * The optional private IP you want to be associated with your private stream pool. That parameter can only be specified when the subnetId parameter is set. It cannot be changed. The private IP needs to be part of the CIDR range of the specified subnetId or the creation will fail. If not specified a random IP inside the subnet will be chosen. After the stream pool is created, a custom FQDN, pointing to this private IP, is created. The FQDN is then used to access the service instead of the private IP.
         */
        privateEndpointIp: string;
        /**
         * If specified, the stream pool will be private and only accessible from inside that subnet. Producing-to and consuming-from a stream inside a private stream pool can also only be done from inside the subnet. That value cannot be changed.
         */
        subnetId: string;
    }

}

export namespace UsageProxy {
    export interface GetSubscriptionProductItem {
        /**
         * The earned rewards for the product.
         */
        earnedRewards: number;
        /**
         * The boolean parameter to indicate if the product is eligible to earn rewards.
         */
        isEligibleToEarnRewards: boolean;
        /**
         * The rate card product name.
         */
        productName: string;
        /**
         * The rate card product number.
         */
        productNumber: string;
        /**
         * The rate card product usage amount.
         */
        usageAmount: number;
    }

    export interface GetSubscriptionProductsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubscriptionProductsProductCollection {
        /**
         * The list of product rewards summaries.
         */
        items: outputs.UsageProxy.GetSubscriptionProductsProductCollectionItem[];
    }

    export interface GetSubscriptionProductsProductCollectionItem {
        /**
         * The list of product rewards summaries.
         */
        items: outputs.UsageProxy.GetSubscriptionProductsProductCollectionItemItem[];
    }

    export interface GetSubscriptionProductsProductCollectionItemItem {
        /**
         * The earned rewards for the product.
         */
        earnedRewards: number;
        /**
         * The boolean parameter to indicate if the product is eligible to earn rewards.
         */
        isEligibleToEarnRewards: boolean;
        /**
         * The rate card product name.
         */
        productName: string;
        /**
         * The rate card product number.
         */
        productNumber: string;
        /**
         * The rate card product usage amount.
         */
        usageAmount: number;
    }

    export interface GetSubscriptionRedeemableUserItem {
        /**
         * The email ID of a user that can redeem rewards.
         */
        emailId: string;
    }

    export interface GetSubscriptionRedeemableUsersFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubscriptionRedeemableUsersRedeemableUserCollection {
        /**
         * The list of user email IDs that can redeem rewards.
         */
        items: outputs.UsageProxy.GetSubscriptionRedeemableUsersRedeemableUserCollectionItem[];
    }

    export interface GetSubscriptionRedeemableUsersRedeemableUserCollectionItem {
        /**
         * The list of user email IDs that can redeem rewards.
         */
        items: outputs.UsageProxy.GetSubscriptionRedeemableUsersRedeemableUserCollectionItemItem[];
        /**
         * The subscription ID for which rewards information is requested for.
         */
        subscriptionId: string;
        /**
         * The OCID of the tenancy.
         */
        tenancyId: string;
        userId: string;
    }

    export interface GetSubscriptionRedeemableUsersRedeemableUserCollectionItemItem {
        /**
         * The email ID of a user that can redeem rewards.
         */
        emailId: string;
    }

    export interface GetSubscriptionRewardItem {
        /**
         * The number of rewards available for a specific usage period.
         */
        availableRewards: number;
        /**
         * The number of rewards earned for the specific usage period.
         */
        earnedRewards: number;
        /**
         * The eligible usage amount for the usage period.
         */
        eligibleUsageAmount: number;
        /**
         * The ineligible usage amount for the usage period.
         */
        ineligibleUsageAmount: number;
        /**
         * The boolean parameter to indicate whether or not the available rewards are manually posted.
         */
        isManual: boolean;
        /**
         * The number of rewards redeemed for a specific month.
         */
        redeemedRewards: number;
        /**
         * The date and time when rewards accrue.
         */
        timeRewardsEarned: string;
        /**
         * The date and time when rewards expire.
         */
        timeRewardsExpired: string;
        /**
         * The end date and time for the usage period.
         */
        timeUsageEnded: string;
        /**
         * The start date and time for the usage period.
         */
        timeUsageStarted: string;
        /**
         * The usage amount for the usage period.
         */
        usageAmount: number;
        /**
         * The usage period ID.
         */
        usagePeriodKey: string;
    }

    export interface GetSubscriptionRewardSummary {
        /**
         * The currency unit for the reward amount.
         */
        currency: string;
        /**
         * The redemption code used in the billing center during the reward redemption process
         */
        redemptionCode: string;
        /**
         * The current Rewards percentage in decimal format.
         */
        rewardsRate: number;
        /**
         * The subscription ID for which rewards information is requested for.
         */
        subscriptionId: string;
        /**
         * The OCID of the tenancy.
         */
        tenancyId: string;
        /**
         * The total number of available rewards for a given subscription ID.
         */
        totalRewardsAvailable: number;
    }

    export interface GetSubscriptionRewardsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSubscriptionRewardsRewardCollection {
        /**
         * The monthly summary of rewards.
         */
        items: outputs.UsageProxy.GetSubscriptionRewardsRewardCollectionItem[];
    }

    export interface GetSubscriptionRewardsRewardCollectionItem {
        /**
         * The monthly summary of rewards.
         */
        items: outputs.UsageProxy.GetSubscriptionRewardsRewardCollectionItemItem[];
        /**
         * The overall monthly reward summary.
         */
        summaries: outputs.UsageProxy.GetSubscriptionRewardsRewardCollectionItemSummary[];
    }

    export interface GetSubscriptionRewardsRewardCollectionItemItem {
        /**
         * The number of rewards available for a specific usage period.
         */
        availableRewards: number;
        /**
         * The number of rewards earned for the specific usage period.
         */
        earnedRewards: number;
        /**
         * The eligible usage amount for the usage period.
         */
        eligibleUsageAmount: number;
        /**
         * The ineligible usage amount for the usage period.
         */
        ineligibleUsageAmount: number;
        /**
         * The boolean parameter to indicate whether or not the available rewards are manually posted.
         */
        isManual: boolean;
        /**
         * The number of rewards redeemed for a specific month.
         */
        redeemedRewards: number;
        /**
         * The date and time when rewards accrue.
         */
        timeRewardsEarned: string;
        /**
         * The date and time when rewards expire.
         */
        timeRewardsExpired: string;
        /**
         * The end date and time for the usage period.
         */
        timeUsageEnded: string;
        /**
         * The start date and time for the usage period.
         */
        timeUsageStarted: string;
        /**
         * The usage amount for the usage period.
         */
        usageAmount: number;
        /**
         * The usage period ID.
         */
        usagePeriodKey: string;
    }

    export interface GetSubscriptionRewardsRewardCollectionItemSummary {
        /**
         * The currency unit for the reward amount.
         */
        currency: string;
        /**
         * The redemption code used in the billing center during the reward redemption process
         */
        redemptionCode: string;
        /**
         * The current Rewards percentage in decimal format.
         */
        rewardsRate: number;
        /**
         * The subscription ID for which rewards information is requested for.
         */
        subscriptionId: string;
        /**
         * The OCID of the tenancy.
         */
        tenancyId: string;
        /**
         * The total number of available rewards for a given subscription ID.
         */
        totalRewardsAvailable: number;
    }

    export interface SubscriptionRedeemableUserItem {
        /**
         * The email ID for a user that can redeem rewards.
         */
        emailId: string;
    }
}

export namespace Vault {
    export interface GetSecretSecretContent {
        content: string;
        contentType: string;
        name: string;
        stage: string;
    }

    export interface GetSecretSecretRule {
        /**
         * A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
         */
        isEnforcedOnDeletedSecretVersions: boolean;
        /**
         * A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
         */
        isSecretContentRetrievalBlockedOnExpiry: boolean;
        /**
         * The type of rule, which either controls when the secret contents expire or whether they can be reused.
         */
        ruleType: string;
        /**
         * A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. No enforcement mechanism exists at this time, but audit logs record the expiration on the appropriate date, according to the time interval specified in the rule. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
         */
        secretVersionExpiryInterval: string;
        /**
         * An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfAbsoluteExpiry: string;
    }

    export interface GetSecretsFilter {
        /**
         * The secret name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetSecretsSecret {
        /**
         * The OCID of the compartment.
         */
        compartmentId: string;
        /**
         * The version number of the secret version that's currently in use.
         */
        currentVersionNumber: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A brief description of the secret. Avoid entering confidential information.
         */
        description: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The OCID of the secret.
         */
        id: string;
        /**
         * The OCID of the master encryption key that is used to encrypt the secret.
         */
        keyId: string;
        /**
         * Additional information about the current lifecycle state of the secret.
         */
        lifecycleDetails: string;
        /**
         * Additional metadata that you can use to provide context about how to use the secret or during rotation or other administrative tasks. For example, for a secret that you use to connect to a database, the additional metadata might specify the connection endpoint and the connection string. Provide additional metadata as key-value pairs.
         */
        metadata: {[key: string]: any};
        secretContents: outputs.Vault.GetSecretsSecretSecretContent[];
        /**
         * The user-friendly name of the secret. Avoid entering confidential information.
         */
        secretName: string;
        /**
         * A list of rules that control how the secret is used and managed.
         */
        secretRules: outputs.Vault.GetSecretsSecretSecretRule[];
        /**
         * A filter that returns only resources that match the specified lifecycle state. The state value is case-insensitive.
         */
        state: string;
        /**
         * A property indicating when the secret was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeCreated: string;
        /**
         * An optional property indicating when the current secret version will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfCurrentVersionExpiry: string;
        /**
         * An optional property indicating when to delete the secret, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfDeletion: string;
        /**
         * The OCID of the vault.
         */
        vaultId: string;
    }

    export interface GetSecretsSecretSecretContent {
        content: string;
        contentType: string;
        /**
         * The secret name.
         */
        name: string;
        stage: string;
    }

    export interface GetSecretsSecretSecretRule {
        /**
         * A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
         */
        isEnforcedOnDeletedSecretVersions: boolean;
        /**
         * A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
         */
        isSecretContentRetrievalBlockedOnExpiry: boolean;
        /**
         * The type of rule, which either controls when the secret contents expire or whether they can be reused.
         */
        ruleType: string;
        /**
         * A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. No enforcement mechanism exists at this time, but audit logs record the expiration on the appropriate date, according to the time interval specified in the rule. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
         */
        secretVersionExpiryInterval: string;
        /**
         * An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfAbsoluteExpiry: string;
    }

    export interface SecretSecretContent {
        /**
         * (Updatable) The base64-encoded content of the secret.
         */
        content: string;
        /**
         * (Updatable) content type . Example `BASE64` .
         */
        contentType: string;
        /**
         * (Updatable) Names should be unique within a secret. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
         */
        name: string;
        /**
         * (Updatable) The rotation state of the secret content. The default is `CURRENT`, meaning that the secret is currently in use. A secret version that you mark as `PENDING` is staged and available for use, but you don't yet want to rotate it into current, active use. For example, you might create or update a secret and mark its rotation state as `PENDING` if you haven't yet updated the secret on the target system. When creating a secret, only the value `CURRENT` is applicable, although the value `LATEST` is also automatically applied. When updating  a secret, you can specify a version's rotation state as either `CURRENT` or `PENDING`.
         */
        stage: string;
    }

    export interface SecretSecretRule {
        /**
         * (Updatable) A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
         */
        isEnforcedOnDeletedSecretVersions: boolean;
        /**
         * (Updatable) A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
         */
        isSecretContentRetrievalBlockedOnExpiry: boolean;
        /**
         * (Updatable) The type of rule, which either controls when the secret contents expire or whether they can be reused.
         */
        ruleType: string;
        /**
         * (Updatable) A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. No enforcement mechanism exists at this time, but audit logs record the expiration on the appropriate date, according to the time interval specified in the rule. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
         */
        secretVersionExpiryInterval: string;
        /**
         * (Updatable) An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
         */
        timeOfAbsoluteExpiry: string;
    }
}

export namespace VisualBuilder {
    export interface GetVbInstanceAlternateCustomEndpoint {
        /**
         * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * A custom hostname to be used for the vb instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface GetVbInstanceApplicationsApplicationSummaryCollection {
        items: outputs.VisualBuilder.GetVbInstanceApplicationsApplicationSummaryCollectionItem[];
    }

    export interface GetVbInstanceApplicationsApplicationSummaryCollectionItem {
        /**
         * The Visual Builder application identifier.
         */
        id: string;
        /**
         * The Visual Builder application project identifier.
         */
        projectId: string;
        /**
         * The state of visual builder application. Either LIVE or STAGED
         */
        state: string;
        /**
         * The Visual Builder application version
         */
        version: string;
    }

    export interface GetVbInstanceCustomEndpoint {
        /**
         * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * A custom hostname to be used for the vb instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface GetVbInstancesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetVbInstancesVbInstanceSummaryCollection {
        items: outputs.VisualBuilder.GetVbInstancesVbInstanceSummaryCollectionItem[];
    }

    export interface GetVbInstancesVbInstanceSummaryCollectionItem {
        /**
         * A list of alternate custom endpoints used for the vb instance URL.
         */
        alternateCustomEndpoints: outputs.VisualBuilder.GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * The entitlement used for billing purposes.
         */
        consumptionModel: string;
        /**
         * Details for a custom endpoint for the vb instance.
         */
        customEndpoints: outputs.VisualBuilder.GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint[];
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier that is immutable on creation.
         */
        id: string;
        idcsOpenId: string;
        /**
         * The Vb Instance URL.
         */
        instanceUrl: string;
        /**
         * Visual Builder is enabled or not.
         */
        isVisualBuilderEnabled: boolean;
        /**
         * The number of Nodes
         */
        nodeCount: number;
        /**
         * Life cycle state to query on.
         */
        state: string;
        /**
         * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         */
        stateMessage: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the the VbInstance was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the VbInstance was updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint {
        /**
         * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * A custom hostname to be used for the vb instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint {
        /**
         * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * A custom hostname to be used for the vb instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface VbInstanceAlternateCustomEndpoint {
        /**
         * (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * (Updatable) A custom hostname to be used for the vb instance URL, in FQDN format.
         */
        hostname: string;
    }

    export interface VbInstanceCustomEndpoint {
        /**
         * (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
         */
        certificateSecretId: string;
        /**
         * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
         */
        certificateSecretVersion: number;
        /**
         * (Updatable) A custom hostname to be used for the vb instance URL, in FQDN format.
         */
        hostname: string;
    }

}

export namespace VnMonitoring {
    export interface GetPathAnalyzerTestDestinationEndpoint {
        /**
         * The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
         */
        address: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
         */
        instanceId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
         */
        listenerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's load balancer.
         */
        loadBalancerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's network load balancer.
         */
        networkLoadBalancerId: string;
        /**
         * The current state of the `PathAnalyzerTest` resource.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
         */
        subnetId: string;
        /**
         * The type of the `Endpoint`.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
         */
        vlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
         */
        vnicId: string;
    }

    export interface GetPathAnalyzerTestProtocolParameter {
        /**
         * The destination port to use in a `PathAnalyzerTest` resource.
         */
        destinationPort: number;
        /**
         * The [ICMP](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml) code.
         */
        icmpCode: number;
        /**
         * The [ICMP](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml) type.
         */
        icmpType: number;
        /**
         * The source port to use in a `PathAnalyzerTest` resource.
         */
        sourcePort: number;
        /**
         * The type of the `Endpoint`.
         */
        type: string;
    }

    export interface GetPathAnalyzerTestQueryOption {
        /**
         * If true, a path analysis is done for both the forward and reverse routes.
         */
        isBiDirectionalAnalysis: boolean;
    }

    export interface GetPathAnalyzerTestSourceEndpoint {
        /**
         * The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
         */
        address: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
         */
        instanceId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
         */
        listenerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's load balancer.
         */
        loadBalancerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's network load balancer.
         */
        networkLoadBalancerId: string;
        /**
         * The current state of the `PathAnalyzerTest` resource.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
         */
        subnetId: string;
        /**
         * The type of the `Endpoint`.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
         */
        vlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
         */
        vnicId: string;
    }

    export interface GetPathAnalyzerTestsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetPathAnalyzerTestsPathAnalyzerTestCollection {
        items: outputs.VnMonitoring.GetPathAnalyzerTestsPathAnalyzerTestCollectionItem[];
    }

    export interface GetPathAnalyzerTestsPathAnalyzerTestCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Information describing a source or destination in a `PathAnalyzerTest` resource.
         */
        destinationEndpoints: outputs.VnMonitoring.GetPathAnalyzerTestsPathAnalyzerTestCollectionItemDestinationEndpoint[];
        /**
         * A filter that returns only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A unique identifier established when the resource is created. The identifier can't be changed later.
         */
        id: string;
        /**
         * The IP protocol to use for the `PathAnalyzerTest` resource.
         */
        protocol: number;
        /**
         * Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
         */
        protocolParameters: outputs.VnMonitoring.GetPathAnalyzerTestsPathAnalyzerTestCollectionItemProtocolParameter[];
        /**
         * Defines the query options required for a `PathAnalyzerTest` resource.
         */
        queryOptions: outputs.VnMonitoring.GetPathAnalyzerTestsPathAnalyzerTestCollectionItemQueryOption[];
        /**
         * Information describing a source or destination in a `PathAnalyzerTest` resource.
         */
        sourceEndpoints: outputs.VnMonitoring.GetPathAnalyzerTestsPathAnalyzerTestCollectionItemSourceEndpoint[];
        /**
         * A filter that returns only resources whose `lifecycleState` matches the given `lifecycleState`.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The date and time the `PathAnalyzerTest` resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeCreated: string;
        /**
         * The date and time the `PathAnalyzerTest` resource was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         */
        timeUpdated: string;
    }

    export interface GetPathAnalyzerTestsPathAnalyzerTestCollectionItemDestinationEndpoint {
        /**
         * The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
         */
        address: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
         */
        instanceId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
         */
        listenerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's load balancer.
         */
        loadBalancerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's network load balancer.
         */
        networkLoadBalancerId: string;
        /**
         * A filter that returns only resources whose `lifecycleState` matches the given `lifecycleState`.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
         */
        subnetId: string;
        /**
         * The type of the `Endpoint`.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
         */
        vlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
         */
        vnicId: string;
    }

    export interface GetPathAnalyzerTestsPathAnalyzerTestCollectionItemProtocolParameter {
        /**
         * The destination port to use in a `PathAnalyzerTest` resource.
         */
        destinationPort: number;
        /**
         * The [ICMP](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml) code.
         */
        icmpCode: number;
        /**
         * The [ICMP](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml) type.
         */
        icmpType: number;
        /**
         * The source port to use in a `PathAnalyzerTest` resource.
         */
        sourcePort: number;
        /**
         * The type of the `Endpoint`.
         */
        type: string;
    }

    export interface GetPathAnalyzerTestsPathAnalyzerTestCollectionItemQueryOption {
        /**
         * If true, a path analysis is done for both the forward and reverse routes.
         */
        isBiDirectionalAnalysis: boolean;
    }

    export interface GetPathAnalyzerTestsPathAnalyzerTestCollectionItemSourceEndpoint {
        /**
         * The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
         */
        address: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
         */
        instanceId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
         */
        listenerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's load balancer.
         */
        loadBalancerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's network load balancer.
         */
        networkLoadBalancerId: string;
        /**
         * A filter that returns only resources whose `lifecycleState` matches the given `lifecycleState`.
         */
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
         */
        subnetId: string;
        /**
         * The type of the `Endpoint`.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
         */
        vlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
         */
        vnicId: string;
    }

    export interface PathAnalysiDestinationEndpoint {
        /**
         * The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
         */
        address: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
         */
        instanceId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
         */
        listenerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's load balancer.
         */
        loadBalancerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's network load balancer.
         */
        networkLoadBalancerId: string;
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
         */
        subnetId: string;
        /**
         * The type of the `PathAnalysis` query.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
         */
        vlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
         */
        vnicId: string;
    }

    export interface PathAnalysiProtocolParameters {
        /**
         * The destination port to use in a `PathAnalyzerTest` resource.
         */
        destinationPort: number;
        /**
         * The [ICMP](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml) code.
         */
        icmpCode: number;
        /**
         * The [ICMP](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml) type.
         */
        icmpType: number;
        /**
         * The source port to use in a `PathAnalyzerTest` resource.
         */
        sourcePort: number;
        /**
         * The type of the `PathAnalysis` query.
         */
        type: string;
    }

    export interface PathAnalysiQueryOptions {
        /**
         * If true, a path analysis is done for both the forward and reverse routes.
         */
        isBiDirectionalAnalysis: boolean;
    }

    export interface PathAnalysiSourceEndpoint {
        /**
         * The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
         */
        address: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
         */
        instanceId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
         */
        listenerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's load balancer.
         */
        loadBalancerId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's network load balancer.
         */
        networkLoadBalancerId: string;
        state: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
         */
        subnetId: string;
        /**
         * The type of the `PathAnalysis` query.
         */
        type: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
         */
        vlanId: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
         */
        vnicId: string;
    }

    export interface PathAnalyzerTestDestinationEndpoint {
        /**
         * (Updatable) The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
         */
        address: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
         */
        instanceId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
         */
        listenerId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's load balancer.
         */
        loadBalancerId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's network load balancer.
         */
        networkLoadBalancerId: string;
        /**
         * The current state of the `PathAnalyzerTest` resource.
         */
        state: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
         */
        subnetId: string;
        /**
         * (Updatable) The type of the `Endpoint`.
         */
        type: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
         */
        vlanId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
         */
        vnicId: string;
    }

    export interface PathAnalyzerTestProtocolParameters {
        /**
         * (Updatable) The destination port to use in a `PathAnalyzerTest` resource.
         */
        destinationPort: number;
        /**
         * (Updatable) The [ICMP](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml) code.
         */
        icmpCode: number;
        /**
         * (Updatable) The [ICMP](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml) type.
         */
        icmpType: number;
        /**
         * (Updatable) The source port to use in a `PathAnalyzerTest` resource.
         */
        sourcePort: number;
        /**
         * (Updatable) The type of the `Endpoint`.
         */
        type: string;
    }

    export interface PathAnalyzerTestQueryOptions {
        /**
         * (Updatable) If true, a path analysis is done for both the forward and reverse routes.
         */
        isBiDirectionalAnalysis: boolean;
    }

    export interface PathAnalyzerTestSourceEndpoint {
        /**
         * (Updatable) The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
         */
        address: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
         */
        instanceId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
         */
        listenerId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's load balancer.
         */
        loadBalancerId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener's network load balancer.
         */
        networkLoadBalancerId: string;
        /**
         * The current state of the `PathAnalyzerTest` resource.
         */
        state: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
         */
        subnetId: string;
        /**
         * (Updatable) The type of the `Endpoint`.
         */
        type: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
         */
        vlanId: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
         */
        vnicId: string;
    }

}

export namespace VulnerabilityScanning {
    export interface ContainerScanRecipeScanSettings {
        /**
         * (Updatable) The scan level
         */
        scanLevel: string;
    }

    export interface ContainerScanTargetTargetRegistry {
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
         */
        compartmentId: string;
        /**
         * (Updatable) List of repositories to scan images in. If left empty, the target defaults to scanning all repos in the compartmentId
         */
        repositories: string[];
        /**
         * (Updatable) The scan level
         */
        type: string;
        /**
         * (Updatable) URL of the registry. Required for non-OCIR registry types (for OCIR registry types, it can be inferred from the tenancy).
         */
        url: string;
    }

    export interface GetContainerScanRecipeScanSetting {
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetContainerScanRecipesContainerScanRecipeSummaryCollection {
        items: outputs.VulnerabilityScanning.GetContainerScanRecipesContainerScanRecipeSummaryCollectionItem[];
    }

    export interface GetContainerScanRecipesContainerScanRecipeSummaryCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan recipe. Immutable and generated on creation.
         */
        id: string;
        /**
         * This field is set equal to the number of images we want to scan in the first go when the recipe is created
         */
        imageCount: number;
        /**
         * A collection of container scan settings
         */
        scanSettings: outputs.VulnerabilityScanning.GetContainerScanRecipesContainerScanRecipeSummaryCollectionItemScanSetting[];
        /**
         * A filter to return only resources whose lifecycleState matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
         */
        timeCreated: string;
        /**
         * Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
         */
        timeUpdated: string;
    }

    export interface GetContainerScanRecipesContainerScanRecipeSummaryCollectionItemScanSetting {
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetContainerScanRecipesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetContainerScanTargetTargetRegistry {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
         */
        compartmentId: string;
        /**
         * List of repositories to scan images in. If left empty, the target defaults to scanning all repos in the compartmentId
         */
        repositories: string[];
        /**
         * The scan level
         */
        type: string;
        /**
         * URL of the registry.
         */
        url: string;
    }

    export interface GetContainerScanTargetsContainerScanTargetSummaryCollection {
        items: outputs.VulnerabilityScanning.GetContainerScanTargetsContainerScanTargetSummaryCollectionItem[];
    }

    export interface GetContainerScanTargetsContainerScanTargetSummaryCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * ID of the container scan recipe this target applies.
         */
        containerScanRecipeId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Target description.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan target. Immutable and generated on creation.
         */
        id: string;
        /**
         * A filter to return only resources whose lifecycleState matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Registry information for a container scan target
         */
        targetRegistries: outputs.VulnerabilityScanning.GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry[];
        /**
         * Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
         */
        timeCreated: string;
        /**
         * Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
         */
        timeUpdated: string;
    }

    export interface GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * List of repositories to scan images in. If left empty, the target defaults to scanning all repos in the compartmentId
         */
        repositories: string[];
        /**
         * The scan level
         */
        type: string;
        /**
         * URL of the registry.
         */
        url: string;
    }

    export interface GetContainerScanTargetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHostScanRecipeAgentSetting {
        /**
         * Agent configuration for host scan agent settings. This model is polymorphic, presenting different configuration options based on selected agent vendor.
         */
        agentConfigurations: outputs.VulnerabilityScanning.GetHostScanRecipeAgentSettingAgentConfiguration[];
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetHostScanRecipeAgentSettingAgentConfiguration {
        /**
         * CIS (Center for Internet Security) Benchmark scan settings for a host scan
         */
        cisBenchmarkSettings: outputs.VulnerabilityScanning.GetHostScanRecipeAgentSettingAgentConfigurationCisBenchmarkSetting[];
        /**
         * Endpoint Protection scan settings for a host scan
         */
        endpointProtectionSettings: outputs.VulnerabilityScanning.GetHostScanRecipeAgentSettingAgentConfigurationEndpointProtectionSetting[];
        /**
         * Vendor to use for the host scan agent.
         */
        vendor: string;
    }

    export interface GetHostScanRecipeAgentSettingAgentConfigurationCisBenchmarkSetting {
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetHostScanRecipeAgentSettingAgentConfigurationEndpointProtectionSetting {
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetHostScanRecipeApplicationSetting {
        /**
         * Scan recurrences in RFC-5545 section 3.3.10 format. Only supported input are weekly, biweekly, monthly listed below FREQ=WEEKLY;WKST=<weekday>;INTERVAL=1 - This weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=WEEKLY;WKST=<weekday>;INTERVAL=2 - This bi-weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=MONTHLY;WKST=<weekday>;INTERVAL=1 - This monthly scan on the specified weekday (e.g. SU for Sunday, starting from the next such weekday based on the time of setting creation)
         */
        applicationScanRecurrence: string;
        /**
         * List of folders selected for scanning
         */
        foldersToScans: outputs.VulnerabilityScanning.GetHostScanRecipeApplicationSettingFoldersToScan[];
        /**
         * Enable or disable application scan
         */
        isEnabled: boolean;
    }

    export interface GetHostScanRecipeApplicationSettingFoldersToScan {
        /**
         * Folder to be scanned in the corresponding operating system
         */
        folder: string;
        /**
         * Operating system type
         */
        operatingsystem: string;
    }

    export interface GetHostScanRecipePortSetting {
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetHostScanRecipeSchedule {
        /**
         * Day of week the scheduled scan occurs (not applicable for DAILY type)
         */
        dayOfWeek: string;
        /**
         * How often the scan occurs
         */
        type: string;
    }

    export interface GetHostScanRecipesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollection {
        items: outputs.VulnerabilityScanning.GetHostScanRecipesHostScanRecipeSummaryCollectionItem[];
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollectionItem {
        /**
         * Agent scan settings for a host scan
         */
        agentSettings: outputs.VulnerabilityScanning.GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSetting[];
        /**
         * Agent scan settings for an application scan (as a part of a host scan)
         */
        applicationSettings: outputs.VulnerabilityScanning.GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSetting[];
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * Unique identifier of the config that is immutable on creation
         */
        id: string;
        /**
         * Port scan settings for a host scan
         */
        portSettings: outputs.VulnerabilityScanning.GetHostScanRecipesHostScanRecipeSummaryCollectionItemPortSetting[];
        /**
         * A scanning schedule
         */
        schedules: outputs.VulnerabilityScanning.GetHostScanRecipesHostScanRecipeSummaryCollectionItemSchedule[];
        /**
         * A filter to return only resources whose lifecycleState matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
         */
        timeCreated: string;
        /**
         * Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
         */
        timeUpdated: string;
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSetting {
        /**
         * Agent configuration for host scan agent settings. This model is polymorphic, presenting different configuration options based on selected agent vendor.
         */
        agentConfigurations: outputs.VulnerabilityScanning.GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration[];
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration {
        /**
         * CIS (Center for Internet Security) Benchmark scan settings for a host scan
         */
        cisBenchmarkSettings: outputs.VulnerabilityScanning.GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationCisBenchmarkSetting[];
        /**
         * Endpoint Protection scan settings for a host scan
         */
        endpointProtectionSettings: outputs.VulnerabilityScanning.GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationEndpointProtectionSetting[];
        /**
         * Vendor to use for the host scan agent.
         */
        vendor: string;
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationCisBenchmarkSetting {
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationEndpointProtectionSetting {
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSetting {
        /**
         * Scan recurrences in RFC-5545 section 3.3.10 format. Only supported input are weekly, biweekly, monthly listed below FREQ=WEEKLY;WKST=<weekday>;INTERVAL=1 - This weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=WEEKLY;WKST=<weekday>;INTERVAL=2 - This bi-weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=MONTHLY;WKST=<weekday>;INTERVAL=1 - This monthly scan on the specified weekday (e.g. SU for Sunday, starting from the next such weekday based on the time of setting creation)
         */
        applicationScanRecurrence: string;
        /**
         * List of folders selected for scanning
         */
        foldersToScans: outputs.VulnerabilityScanning.GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSettingFoldersToScan[];
        /**
         * Enable or disable application scan
         */
        isEnabled: boolean;
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSettingFoldersToScan {
        /**
         * Folder to be scanned in the corresponding operating system
         */
        folder: string;
        /**
         * Operating system type
         */
        operatingsystem: string;
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollectionItemPortSetting {
        /**
         * The scan level
         */
        scanLevel: string;
    }

    export interface GetHostScanRecipesHostScanRecipeSummaryCollectionItemSchedule {
        /**
         * Day of week the scheduled scan occurs (not applicable for DAILY type)
         */
        dayOfWeek: string;
        /**
         * How often the scan occurs
         */
        type: string;
    }

    export interface GetHostScanTargetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHostScanTargetsHostScanTargetSummaryCollection {
        items: outputs.VulnerabilityScanning.GetHostScanTargetsHostScanTargetSummaryCollectionItem[];
    }

    export interface GetHostScanTargetsHostScanTargetSummaryCollectionItem {
        /**
         * The ID of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * Target description.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * ID of the host scan recipe this target applies.
         */
        hostScanRecipeId: string;
        /**
         * Unique identifier of the config that is immutable on creation
         */
        id: string;
        /**
         * List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
         */
        instanceIds: string[];
        /**
         * A filter to return only resources whose lifecycleState matches the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
         */
        targetCompartmentId: string;
        /**
         * Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
         */
        timeCreated: string;
        /**
         * Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
         */
        timeUpdated: string;
    }

    export interface HostScanRecipeAgentSettings {
        /**
         * (Updatable) Agent configuration for host scan agent settings. This model is polymorphic, presenting different configuration options based on selected agent vendor.
         */
        agentConfiguration: outputs.VulnerabilityScanning.HostScanRecipeAgentSettingsAgentConfiguration;
        /**
         * (Updatable) The scan level
         */
        scanLevel: string;
    }

    export interface HostScanRecipeAgentSettingsAgentConfiguration {
        /**
         * (Updatable) CIS (Center for Internet Security) Benchmark scan settings for a host scan
         */
        cisBenchmarkSettings: outputs.VulnerabilityScanning.HostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettings;
        /**
         * (Updatable) Endpoint Protection scan settings for a host scan
         */
        endpointProtectionSettings: outputs.VulnerabilityScanning.HostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettings;
        /**
         * (Updatable) Vendor to use for the host scan agent.
         */
        vendor: string;
    }

    export interface HostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettings {
        /**
         * (Updatable) The scan level
         */
        scanLevel: string;
    }

    export interface HostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettings {
        /**
         * (Updatable) The scan level
         */
        scanLevel: string;
    }

    export interface HostScanRecipeApplicationSettings {
        /**
         * (Updatable) Scan recurrences in RFC-5545 section 3.3.10 format. Only supported input are weekly, biweekly, monthly listed below FREQ=WEEKLY;WKST=<weekday>;INTERVAL=1 - This weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=WEEKLY;WKST=<weekday>;INTERVAL=2 - This bi-weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=MONTHLY;WKST=<weekday>;INTERVAL=1 - This monthly scan on the specified weekday (e.g. SU for Sunday, starting from the next such weekday based on the time of setting creation)
         */
        applicationScanRecurrence: string;
        /**
         * (Updatable) List of folders selected for scanning
         */
        foldersToScans: outputs.VulnerabilityScanning.HostScanRecipeApplicationSettingsFoldersToScan[];
        /**
         * (Updatable) Enable or disable application scan
         */
        isEnabled: boolean;
    }

    export interface HostScanRecipeApplicationSettingsFoldersToScan {
        /**
         * (Updatable) Folder to be scanned in the corresponding operating system
         */
        folder: string;
        /**
         * (Updatable) Operating system type
         */
        operatingsystem: string;
    }

    export interface HostScanRecipePortSettings {
        /**
         * (Updatable) The scan level
         */
        scanLevel: string;
    }

    export interface HostScanRecipeSchedule {
        /**
         * (Updatable) Day of week the scheduled scan occurs (not applicable for DAILY type)
         */
        dayOfWeek: string;
        /**
         * (Updatable) How often the scan occurs
         */
        type: string;
    }

}

export namespace Waa {
    export interface AppAccelerationPolicyResponseCachingPolicy {
        /**
         * (Updatable) When false, responses will not be cached by the backend based on response headers.
         */
        isResponseHeaderBasedCachingEnabled: boolean;
    }

    export interface AppAccelerationPolicyResponseCompressionPolicy {
        /**
         * (Updatable) An object that specifies the gzip compression policy.
         */
        gzipCompression: outputs.Waa.AppAccelerationPolicyResponseCompressionPolicyGzipCompression;
    }

    export interface AppAccelerationPolicyResponseCompressionPolicyGzipCompression {
        /**
         * (Updatable) When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
         */
        isEnabled: boolean;
    }

    export interface GetAppAccelerationPoliciesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAppAccelerationPoliciesWebAppAccelerationPolicyCollection {
        items: outputs.Waa.GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem[];
    }

    export interface GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only the WebAppAccelerationPolicy with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
         */
        lifecycleDetails: string;
        /**
         * An object that specifies an HTTP response caching policy.
         */
        responseCachingPolicies: outputs.Waa.GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy[];
        /**
         * An object that specifies a compression policy for HTTP response from ENABLEMENT POINT to the client.
         */
        responseCompressionPolicies: outputs.Waa.GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy[];
        /**
         * A filter to return only resources that match the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the WebAppAccelerationPolicy was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the WebAppAccelerationPolicy was updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy {
        /**
         * When false, responses will not be cached by the backend based on response headers.
         */
        isResponseHeaderBasedCachingEnabled: boolean;
    }

    export interface GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy {
        /**
         * An object that specifies the gzip compression policy.
         */
        gzipCompressions: outputs.Waa.GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression[];
    }

    export interface GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression {
        /**
         * When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
         */
        isEnabled: boolean;
    }

    export interface GetAppAccelerationPolicyResponseCachingPolicy {
        /**
         * When false, responses will not be cached by the backend based on response headers.
         */
        isResponseHeaderBasedCachingEnabled: boolean;
    }

    export interface GetAppAccelerationPolicyResponseCompressionPolicy {
        /**
         * An object that specifies the gzip compression policy.
         */
        gzipCompressions: outputs.Waa.GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression[];
    }

    export interface GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression {
        /**
         * When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
         */
        isEnabled: boolean;
    }

    export interface GetAppAccelerationsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetAppAccelerationsWebAppAccelerationCollection {
        items: outputs.Waa.GetAppAccelerationsWebAppAccelerationCollectionItem[];
    }

    export interface GetAppAccelerationsWebAppAccelerationCollectionItem {
        /**
         * Type of the WebAppFirewall, as example LOAD_BALANCER.
         */
        backendType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only the WebAppAcceleration with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
         */
        lifecycleDetails: string;
        /**
         * LoadBalancer [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to which the WebAppAccelerationPolicy is attached to.
         */
        loadBalancerId: string;
        /**
         * A filter to return only resources that match the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the WebAppAcceleration was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the WebAppAcceleration was updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * A filter to return only the WebAppAcceleration with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of related WebAppAccelerationPolicy.
         */
        webAppAccelerationPolicyId: string;
    }

}

export namespace Waas {
    export interface CertificateExtension {
        /**
         * The critical flag of the extension. Critical extensions must be processed, non-critical extensions can be ignored.
         */
        isCritical: boolean;
        /**
         * The certificate extension name.
         */
        name: string;
        /**
         * The certificate extension value.
         */
        value: string;
    }

    export interface CertificateIssuerName {
        /**
         * The fully qualified domain name used for DNS lookups of the server.
         */
        commonName: string;
        /**
         * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
         */
        country: string;
        /**
         * The email address of the server's administrator.
         */
        emailAddress: string;
        /**
         * The city in which the organization is located.
         */
        locality: string;
        /**
         * The organization name.
         */
        organization: string;
        /**
         * The field to differentiate between divisions within an organization.
         */
        organizationalUnit: string;
        /**
         * The province where the organization is located.
         */
        stateProvince: string;
    }

    export interface CertificatePublicKeyInfo {
        /**
         * The algorithm identifier and parameters for the public key.
         */
        algorithm: string;
        /**
         * The private key exponent.
         */
        exponent: number;
        /**
         * The number of bits in a key used by a cryptographic algorithm.
         */
        keySize: number;
    }

    export interface CertificateSubjectName {
        /**
         * The fully qualified domain name used for DNS lookups of the server.
         */
        commonName: string;
        /**
         * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
         */
        country: string;
        /**
         * The email address of the server's administrator.
         */
        emailAddress: string;
        /**
         * The city in which the organization is located.
         */
        locality: string;
        /**
         * The organization name.
         */
        organization: string;
        /**
         * The field to differentiate between divisions within an organization.
         */
        organizationalUnit: string;
        /**
         * The province where the organization is located.
         */
        stateProvince: string;
    }

    export interface GetAddressListsAddressList {
        /**
         * The total number of unique IP addresses in the address list.
         */
        addressCount: number;
        /**
         * The list of IP addresses or CIDR notations.
         */
        addresses: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The user-friendly name of the address list.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the address list.
         */
        id: string;
        /**
         * The current lifecycle state of the address list.
         */
        state: string;
        /**
         * The date and time the address list was created, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
    }

    export interface GetAddressListsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCertificateExtension {
        /**
         * The critical flag of the extension. Critical extensions must be processed, non-critical extensions can be ignored.
         */
        isCritical: boolean;
        /**
         * The certificate extension name.
         */
        name: string;
        /**
         * The certificate extension value.
         */
        value: string;
    }

    export interface GetCertificateIssuerName {
        /**
         * The fully qualified domain name used for DNS lookups of the server.
         */
        commonName: string;
        /**
         * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
         */
        country: string;
        /**
         * The email address of the server's administrator.
         */
        emailAddress: string;
        /**
         * The city in which the organization is located.
         */
        locality: string;
        /**
         * The organization name.
         */
        organization: string;
        /**
         * The field to differentiate between divisions within an organization.
         */
        organizationalUnit: string;
        /**
         * The province where the organization is located.
         */
        stateProvince: string;
    }

    export interface GetCertificatePublicKeyInfo {
        /**
         * The algorithm identifier and parameters for the public key.
         */
        algorithm: string;
        /**
         * The private key exponent.
         */
        exponent: number;
        /**
         * The number of bits in a key used by a cryptographic algorithm.
         */
        keySize: number;
    }

    export interface GetCertificateSubjectName {
        /**
         * The fully qualified domain name used for DNS lookups of the server.
         */
        commonName: string;
        /**
         * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
         */
        country: string;
        /**
         * The email address of the server's administrator.
         */
        emailAddress: string;
        /**
         * The city in which the organization is located.
         */
        locality: string;
        /**
         * The organization name.
         */
        organization: string;
        /**
         * The field to differentiate between divisions within an organization.
         */
        organizationalUnit: string;
        /**
         * The province where the organization is located.
         */
        stateProvince: string;
    }

    export interface GetCertificatesCertificate {
        /**
         * The data of the SSL certificate.
         */
        certificateData: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The user-friendly name of the SSL certificate.
         */
        displayName: string;
        /**
         * Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
         */
        extensions: outputs.Waas.GetCertificatesCertificateExtension[];
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate.
         */
        id: string;
        /**
         * This indicates whether trust verification was disabled during the creation of SSL certificate. If `true` SSL certificate trust verification was disabled and this SSL certificate is most likely self-signed.
         */
        isTrustVerificationDisabled: boolean;
        issuedBy: string;
        /**
         * The issuer of the certificate.
         */
        issuerNames: outputs.Waas.GetCertificatesCertificateIssuerName[];
        privateKeyData: string;
        /**
         * Information about the public key and the algorithm used by the public key.
         */
        publicKeyInfos: outputs.Waas.GetCertificatesCertificatePublicKeyInfo[];
        /**
         * A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
         */
        serialNumber: string;
        /**
         * The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
         */
        signatureAlgorithm: string;
        /**
         * The current lifecycle state of the SSL certificate.
         */
        state: string;
        /**
         * The entity to be secured by the certificate.
         */
        subjectNames: outputs.Waas.GetCertificatesCertificateSubjectName[];
        /**
         * The date and time the certificate was created, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
        /**
         * The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
         */
        timeNotValidAfter: string;
        /**
         * The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
         */
        timeNotValidBefore: string;
        /**
         * The version of the encoded certificate.
         */
        version: number;
    }

    export interface GetCertificatesCertificateExtension {
        /**
         * The critical flag of the extension. Critical extensions must be processed, non-critical extensions can be ignored.
         */
        isCritical: boolean;
        /**
         * The certificate extension name.
         */
        name: string;
        /**
         * The certificate extension value.
         */
        value: string;
    }

    export interface GetCertificatesCertificateIssuerName {
        /**
         * The fully qualified domain name used for DNS lookups of the server.
         */
        commonName: string;
        /**
         * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
         */
        country: string;
        /**
         * The email address of the server's administrator.
         */
        emailAddress: string;
        /**
         * The city in which the organization is located.
         */
        locality: string;
        /**
         * The organization name.
         */
        organization: string;
        /**
         * The field to differentiate between divisions within an organization.
         */
        organizationalUnit: string;
        /**
         * The province where the organization is located.
         */
        stateProvince: string;
    }

    export interface GetCertificatesCertificatePublicKeyInfo {
        /**
         * The algorithm identifier and parameters for the public key.
         */
        algorithm: string;
        /**
         * The private key exponent.
         */
        exponent: number;
        /**
         * The number of bits in a key used by a cryptographic algorithm.
         */
        keySize: number;
    }

    export interface GetCertificatesCertificateSubjectName {
        /**
         * The fully qualified domain name used for DNS lookups of the server.
         */
        commonName: string;
        /**
         * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
         */
        country: string;
        /**
         * The email address of the server's administrator.
         */
        emailAddress: string;
        /**
         * The city in which the organization is located.
         */
        locality: string;
        /**
         * The organization name.
         */
        organization: string;
        /**
         * The field to differentiate between divisions within an organization.
         */
        organizationalUnit: string;
        /**
         * The province where the organization is located.
         */
        stateProvince: string;
    }

    export interface GetCertificatesFilter {
        /**
         * The certificate extension name.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetCustomProtectionRulesCustomProtectionRule {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The description of the custom protection rule.
         */
        description: string;
        /**
         * The user-friendly name of the custom protection rule.
         */
        displayName: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
         */
        id: string;
        /**
         * The auto-generated ID for the custom protection rule. These IDs are referenced in logs.
         */
        modSecurityRuleIds: string[];
        /**
         * The current lifecycle state of the custom protection rule.
         */
        state: string;
        /**
         * The template text of the custom protection rule. All custom protection rules are expressed in ModSecurity Rule Language.
         */
        template: string;
        /**
         * The date and time the protection rule was created, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
    }

    export interface GetCustomProtectionRulesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetEdgeSubnetsEdgeSubnet {
        /**
         * An edge node subnet. This can include /24 or /8 addresses.
         */
        cidr: string;
        /**
         * The name of the region containing the indicated subnet.
         */
        region: string;
        /**
         * The date and time the last change was made to the indicated edge node subnet, expressed in RFC 3339 timestamp format.
         */
        timeModified: string;
    }

    export interface GetEdgeSubnetsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHttpRedirectTarget {
        /**
         * The host portion of the redirect.
         */
        host: string;
        /**
         * The path component of the target URL (e.g., "/path/to/resource" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying, or request-prefixing. Use of \ is not permitted except to escape a following \, {, or }. An empty value is treated the same as static "/". A static value must begin with a leading "/", optionally followed by other path characters. A request-copying value must exactly match "{path}", and will be replaced with the path component of the request URL (including its initial "/"). A request-prefixing value must start with "/" and end with a non-escaped "{path}", which will be replaced with the path component of the request URL (including its initial "/"). Only one such replacement token is allowed.
         */
        path: string;
        /**
         * Port number of the target destination of the redirect, default to match protocol
         */
        port: number;
        /**
         * The protocol used for the target, http or https.
         */
        protocol: string;
        /**
         * The query component of the target URL (e.g., "?redirected" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying. Use of \ is not permitted except to escape a following \, {, or }. An empty value results in a redirection target URL with no query component. A static value must begin with a leading "?", optionally followed by other query characters. A request-copying value must exactly match "{query}", and will be replaced with the query component of the request URL (including a leading "?" if and only if the request URL includes a query component).
         */
        query: string;
    }

    export interface GetHttpRedirectsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetHttpRedirectsHttpRedirect {
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The user-friendly name of the HTTP Redirect. The name can be changed and does not need to be unique.
         */
        displayName: string;
        /**
         * The domain from which traffic will be redirected.
         */
        domain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirect.
         */
        id: string;
        /**
         * The response code returned for the redirect to the client. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.4).
         */
        responseCode: number;
        /**
         * The current lifecycle state of the HTTP Redirect.
         */
        state: string;
        /**
         * The redirect target object including all the redirect data.
         */
        targets: outputs.Waas.GetHttpRedirectsHttpRedirectTarget[];
        /**
         * The date and time the policy was created, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
    }

    export interface GetHttpRedirectsHttpRedirectTarget {
        /**
         * The host portion of the redirect.
         */
        host: string;
        /**
         * The path component of the target URL (e.g., "/path/to/resource" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying, or request-prefixing. Use of \ is not permitted except to escape a following \, {, or }. An empty value is treated the same as static "/". A static value must begin with a leading "/", optionally followed by other path characters. A request-copying value must exactly match "{path}", and will be replaced with the path component of the request URL (including its initial "/"). A request-prefixing value must start with "/" and end with a non-escaped "{path}", which will be replaced with the path component of the request URL (including its initial "/"). Only one such replacement token is allowed.
         */
        path: string;
        /**
         * Port number of the target destination of the redirect, default to match protocol
         */
        port: number;
        /**
         * The protocol used for the target, http or https.
         */
        protocol: string;
        /**
         * The query component of the target URL (e.g., "?redirected" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying. Use of \ is not permitted except to escape a following \, {, or }. An empty value results in a redirection target URL with no query component. A static value must begin with a leading "?", optionally followed by other query characters. A request-copying value must exactly match "{query}", and will be replaced with the query component of the request URL (including a leading "?" if and only if the request URL includes a query component).
         */
        query: string;
    }

    export interface GetProtectionRuleExclusion {
        /**
         * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: string[];
        /**
         * The target of the exclusion.
         */
        target: string;
    }

    export interface GetProtectionRulesFilter {
        /**
         * The name of the protection rule.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProtectionRulesProtectionRule {
        /**
         * Filter rules using a list of actions.
         */
        action: string;
        /**
         * The description of the protection rule.
         */
        description: string;
        /**
         * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: outputs.Waas.GetProtectionRulesProtectionRuleExclusion[];
        /**
         * The unique key of the protection rule.
         */
        key: string;
        /**
         * The list of labels for the protection rule.
         */
        labels: string[];
        /**
         * The list of the ModSecurity rule IDs that apply to this protection rule. For more information about ModSecurity's open source WAF rules, see [Mod Security's documentation](https://www.modsecurity.org/CRS/Documentation/index.html).
         */
        modSecurityRuleIds: string[];
        /**
         * The name of the protection rule.
         */
        name: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WAAS policy.
         */
        waasPolicyId: string;
    }

    export interface GetProtectionRulesProtectionRuleExclusion {
        /**
         * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: string[];
        /**
         * The target of the exclusion.
         */
        target: string;
    }

    export interface GetWaasPoliciesFilter {
        /**
         * The unique name of the whitelist.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetWaasPoliciesWaasPolicy {
        /**
         * An array of additional domains for this web application.
         */
        additionalDomains: string[];
        /**
         * The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
         */
        cname: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
         */
        definedTags: {[key: string]: any};
        /**
         * The user-friendly name of the WAAS policy. The name can be changed and does not need to be unique.
         */
        displayName: string;
        /**
         * The domain for which the cookie is set, defaults to WAAS policy domain.
         */
        domain: string;
        /**
         * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
         */
        id: string;
        /**
         * The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
         */
        originGroups: outputs.Waas.GetWaasPoliciesWaasPolicyOriginGroup[];
        /**
         * A map of host servers (origins) and their keys for the web application. Origin keys are used to associate origins to specific protection rules. The key should be a user-friendly name for the host. **Examples:** `primary` or `secondary`.
         */
        origins: outputs.Waas.GetWaasPoliciesWaasPolicyOrigin[];
        /**
         * The configuration details for the WAAS policy.
         */
        policyConfigs: outputs.Waas.GetWaasPoliciesWaasPolicyPolicyConfig[];
        /**
         * The current lifecycle state of the WAAS policy.
         */
        state: string;
        /**
         * The date and time the policy was created, expressed in RFC 3339 timestamp format.
         */
        timeCreated: string;
        /**
         * The Web Application Firewall configuration for the WAAS policy.
         */
        wafConfigs: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfig[];
    }

    export interface GetWaasPoliciesWaasPolicyOrigin {
        /**
         * A list of HTTP headers to forward to your origin.
         */
        customHeaders: outputs.Waas.GetWaasPoliciesWaasPolicyOriginCustomHeader[];
        /**
         * The HTTP port on the origin that the web application listens on. If unspecified, defaults to `80`. If `0` is specified - the origin is not used for HTTP traffic.
         */
        httpPort: number;
        /**
         * The HTTPS port on the origin that the web application listens on. If unspecified, defaults to `443`. If `0` is specified - the origin is not used for HTTPS traffic.
         */
        httpsPort: number;
        label: string;
        /**
         * The URI of the origin. Does not support paths. Port numbers should be specified in the `httpPort` and `httpsPort` fields.
         */
        uri: string;
    }

    export interface GetWaasPoliciesWaasPolicyOriginCustomHeader {
        /**
         * The unique name of the whitelist.
         */
        name: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPoliciesWaasPolicyOriginGroup {
        label: string;
        originGroups: outputs.Waas.GetWaasPoliciesWaasPolicyOriginGroupOriginGroup[];
    }

    export interface GetWaasPoliciesWaasPolicyOriginGroupOriginGroup {
        /**
         * The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
         */
        origin: string;
        weight: number;
    }

    export interface GetWaasPoliciesWaasPolicyPolicyConfig {
        /**
         * The OCID of the SSL certificate to use if HTTPS is supported.
         */
        certificateId: string;
        /**
         * The set cipher group for the configured TLS protocol. This sets the configuration for the TLS connections between clients and edge nodes only.
         * * **DEFAULT:** Cipher group supports TLS 1.0, TLS 1.1, TLS 1.2, TLS 1.3 protocols. It has the following ciphers enabled: `ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA`
         */
        cipherGroup: string;
        /**
         * Specifies an HTTP header name which is treated as the connecting client's IP address. Applicable only if `isBehindCdn` is enabled.
         */
        clientAddressHeader: string;
        /**
         * Health checks monitor the status of your origin servers and only route traffic to the origins that pass the health check. If the health check fails, origin is automatically removed from the load balancing. There is roughly one health check per EDGE POP per period. Any checks that pass will be reported as "healthy".
         */
        healthChecks: outputs.Waas.GetWaasPoliciesWaasPolicyPolicyConfigHealthCheck[];
        /**
         * Enabling `isBehindCdn` allows for the collection of IP addresses from client requests if the WAF is connected to a CDN.
         */
        isBehindCdn: boolean;
        /**
         * Enable or disable automatic content caching based on the response `cache-control` header. This feature enables the origin to act as a proxy cache. Caching is usually defined using `cache-control` header. For example `cache-control: max-age=120` means that the returned resource is valid for 120 seconds. Caching rules will overwrite this setting.
         */
        isCacheControlRespected: boolean;
        /**
         * Enable or disable HTTPS support. If true, a `certificateId` is required. If unspecified, defaults to `false`.
         */
        isHttpsEnabled: boolean;
        /**
         * Force HTTP to HTTPS redirection. If unspecified, defaults to `false`.
         */
        isHttpsForced: boolean;
        /**
         * Enable or disable GZIP compression of origin responses. If enabled, the header `Accept-Encoding: gzip` is sent to origin, otherwise, the empty `Accept-Encoding:` header is used.
         */
        isOriginCompressionEnabled: boolean;
        /**
         * Enable or disable buffering of responses from the origin. Buffering improves overall stability in case of network issues, but slightly increases Time To First Byte.
         */
        isResponseBufferingEnabled: boolean;
        /**
         * SNI stands for Server Name Indication and is an extension of the TLS protocol. It indicates which hostname is being contacted by the browser at the beginning of the 'handshake'-process. This allows a server to connect multiple SSL Certificates to one IP address and port.
         */
        isSniEnabled: boolean;
        /**
         * An object that represents a load balancing method and its properties.
         */
        loadBalancingMethods: outputs.Waas.GetWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod[];
        /**
         * A list of allowed TLS protocols. Only applicable when HTTPS support is enabled. The TLS protocol is negotiated while the request is connecting and the most recent protocol supported by both the edge node and client browser will be selected. If no such version exists, the connection will be aborted.
         * * **TLS_V1:** corresponds to TLS 1.0 specification.
         * * **TLS_V1_1:** corresponds to TLS 1.1 specification.
         * * **TLS_V1_2:** corresponds to TLS 1.2 specification.
         * * **TLS_V1_3:** corresponds to TLS 1.3 specification.
         */
        tlsProtocols: string[];
        /**
         * ModSecurity is not capable to inspect WebSockets. Therefore paths specified here have WAF disabled if Connection request header from the client has the value Upgrade (case insensitive matching) and Upgrade request header has the value websocket (case insensitive matching). Paths matches if the concatenation of request URL path and query starts with the contents of the one of `websocketPathPrefixes` array value. In All other cases challenges, like JSC, HIC and etc., remain active.
         */
        websocketPathPrefixes: string[];
    }

    export interface GetWaasPoliciesWaasPolicyPolicyConfigHealthCheck {
        /**
         * The HTTP response codes that signify a healthy state.
         * * **2XX:** Success response code group.
         * * **3XX:** Redirection response code group.
         * * **4XX:** Client errors response code group.
         * * **5XX:** Server errors response code group.
         */
        expectedResponseCodeGroups: string[];
        /**
         * Health check will search for the given text in a case-sensitive manner within the response body and will fail if the text is not found.
         */
        expectedResponseText: string;
        /**
         * HTTP header fields to include in health check requests, expressed as `"name": "value"` properties. Because HTTP header field names are case-insensitive, any use of names that are case-insensitive equal to other names will be rejected. If Host is not specified, requests will include a Host header field with value matching the policy's protected domain. If User-Agent is not specified, requests will include a User-Agent header field with value "waf health checks".
         */
        headers: {[key: string]: any};
        /**
         * Number of successful health checks after which the server is marked up.
         */
        healthyThreshold: number;
        /**
         * Time between health checks of an individual origin server, in seconds.
         */
        intervalInSeconds: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * Enables or disables additional check for predefined text in addition to response code.
         */
        isResponseTextCheckEnabled: boolean;
        /**
         * Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
         * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
         * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
         * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
         */
        method: string;
        /**
         * Path to visit on your origins when performing the health check.
         */
        path: string;
        /**
         * Response timeout represents wait time until request is considered failed, in seconds.
         */
        timeoutInSeconds: number;
        /**
         * Number of failed health checks after which the server is marked down.
         */
        unhealthyThreshold: number;
    }

    export interface GetWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod {
        /**
         * The domain for which the cookie is set, defaults to WAAS policy domain.
         */
        domain: string;
        /**
         * The time for which a browser should keep the cookie in seconds. Empty value will cause the cookie to expire at the end of a browser session.
         */
        expirationTimeInSeconds: number;
        /**
         * Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
         * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
         * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
         * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
         */
        method: string;
        /**
         * The unique name of the whitelist.
         */
        name: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfig {
        /**
         * The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of `ALLOW`, `DETECT`, and `BLOCK` rules, based on different criteria.
         */
        accessRules: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigAccessRule[];
        /**
         * The IP address rate limiting settings used to limit the number of requests from an address.
         */
        addressRateLimitings: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigAddressRateLimiting[];
        /**
         * A list of caching rules applied to the web application.
         */
        cachingRules: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigCachingRule[];
        /**
         * A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
         */
        captchas: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigCaptcha[];
        /**
         * A list of the custom protection rule OCIDs and their actions.
         */
        customProtectionRules: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRule[];
        /**
         * The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
         */
        deviceFingerprintChallenges: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge[];
        /**
         * The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
         */
        humanInteractionChallenges: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge[];
        /**
         * The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
         */
        jsChallenges: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigJsChallenge[];
        /**
         * The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
         */
        origin: string;
        /**
         * The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
         */
        originGroups: string[];
        /**
         * The settings to apply to protection rules.
         */
        protectionSettings: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigProtectionSetting[];
        /**
         * A list of IP addresses that bypass the Web Application Firewall.
         */
        whitelists: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigWhitelist[];
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigAccessRule {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * The list of challenges to bypass when `action` is set to `BYPASS`. If unspecified or empty, all challenges are bypassed.
         * * **JS_CHALLENGE:** Bypasses JavaScript Challenge.
         * * **DEVICE_FINGERPRINT_CHALLENGE:** Bypasses Device Fingerprint Challenge.
         * * **HUMAN_INTERACTION_CHALLENGE:** Bypasses Human Interaction Challenge.
         * * **CAPTCHA:** Bypasses CAPTCHA Challenge.
         */
        bypassChallenges: string[];
        /**
         * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
        /**
         * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         */
        criterias: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigAccessRuleCriteria[];
        /**
         * The unique name of the whitelist.
         */
        name: string;
        /**
         * The response status code to return when `action` is set to `REDIRECT`.
         * * **MOVED_PERMANENTLY:** Used for designating the permanent movement of a page (numerical code - 301).
         * * **FOUND:** Used for designating the temporary movement of a page (numerical code - 302).
         */
        redirectResponseCode: string;
        /**
         * The target to which the request should be redirected, represented as a URI reference. Required when `action` is `REDIRECT`.
         */
        redirectUrl: string;
        /**
         * An object that represents an action to apply to an HTTP response headers if all rule criteria will be matched regardless of `action` value.
         */
        responseHeaderManipulations: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigAccessRuleResponseHeaderManipulation[];
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigAccessRuleCriteria {
        /**
         * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
         * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
         * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
         * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
         * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
         * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
         * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
         */
        condition: string;
        /**
         * When enabled, the condition will be matched with case-sensitive rules.
         */
        isCaseSensitive: boolean;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigAccessRuleResponseHeaderManipulation {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * A header field name that conforms to RFC 7230.  Example: `exampleHeaderName`
         */
        header: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigAddressRateLimiting {
        /**
         * The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
         */
        allowedRatePerAddress: number;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
         */
        maxDelayedCountPerAddress: number;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigCachingRule {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * The duration to cache content for the caching rule, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
         */
        cachingDuration: string;
        /**
         * The duration to cache content in the user's browser, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
         */
        clientCachingDuration: string;
        /**
         * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         */
        criterias: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigCachingRuleCriteria[];
        /**
         * Enables or disables client caching. Browsers use the `Cache-Control` header value for caching content locally in the browser. This setting overrides the addition of a `Cache-Control` header in responses.
         */
        isClientCachingEnabled: boolean;
        /**
         * The unique key for the caching rule.
         */
        key: string;
        /**
         * The unique name of the whitelist.
         */
        name: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigCachingRuleCriteria {
        /**
         * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
         * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
         * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
         * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
         * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
         * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
         * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
         */
        condition: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigCaptcha {
        /**
         * The text to show when incorrect CAPTCHA text is entered. If unspecified, defaults to `The CAPTCHA was incorrect. Try again.`
         */
        failureMessage: string;
        /**
         * The text to show in the footer when showing a CAPTCHA challenge. If unspecified, defaults to 'Enter the letters and numbers as they are shown in the image above.'
         */
        footerText: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge. If unspecified, defaults to 'We have detected an increased number of attempts to access this website. To help us keep this site secure, please let us know that you are not a robot by entering the text from the image below.'
         */
        headerText: string;
        /**
         * The amount of time before the CAPTCHA expires, in seconds. If unspecified, defaults to `300`.
         */
        sessionExpirationInSeconds: number;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button. If unspecified, defaults to `Yes, I am human`.
         */
        submitLabel: string;
        /**
         * The title used when displaying a CAPTCHA challenge. If unspecified, defaults to `Are you human?`
         */
        title: string;
        /**
         * The unique URL path at which to show the CAPTCHA challenge.
         */
        url: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRule {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRuleExclusion[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
         */
        id: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRuleExclusion {
        /**
         * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: string[];
        /**
         * The target of the exclusion.
         */
        target: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         */
        actionExpirationInSeconds: number;
        /**
         * The challenge settings if `action` is set to `BLOCK`.
         */
        challengeSettings: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSetting[];
        /**
         * The number of failed requests before taking action. If unspecified, defaults to `10`.
         */
        failureThreshold: number;
        /**
         * The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
         */
        failureThresholdExpirationInSeconds: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * The maximum number of IP addresses permitted with the same device fingerprint. If unspecified, defaults to `20`.
         */
        maxAddressCount: number;
        /**
         * The number of seconds before the maximum addresses count resets. If unspecified, defaults to `60`.
         */
        maxAddressCountExpirationInSeconds: number;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSetting {
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         */
        actionExpirationInSeconds: number;
        /**
         * The challenge settings if `action` is set to `BLOCK`.
         */
        challengeSettings: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallengeChallengeSetting[];
        /**
         * The number of failed requests before taking action. If unspecified, defaults to `10`.
         */
        failureThreshold: number;
        /**
         * The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
         */
        failureThresholdExpirationInSeconds: number;
        /**
         * The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
         */
        interactionThreshold: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         */
        isNatEnabled: boolean;
        /**
         * The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
         */
        recordingPeriodInSeconds: number;
        /**
         * Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         */
        setHttpHeaders: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader[];
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallengeChallengeSetting {
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader {
        /**
         * The unique name of the whitelist.
         */
        name: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigJsChallenge {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         */
        actionExpirationInSeconds: number;
        /**
         * When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
         */
        areRedirectsChallenged: boolean;
        /**
         * The challenge settings if `action` is set to `BLOCK`.
         */
        challengeSettings: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigJsChallengeChallengeSetting[];
        /**
         * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         */
        criterias: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigJsChallengeCriteria[];
        /**
         * The number of failed requests before taking action. If unspecified, defaults to `10`.
         */
        failureThreshold: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         */
        isNatEnabled: boolean;
        /**
         * Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         */
        setHttpHeaders: outputs.Waas.GetWaasPoliciesWaasPolicyWafConfigJsChallengeSetHttpHeader[];
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigJsChallengeChallengeSetting {
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigJsChallengeCriteria {
        /**
         * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
         * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
         * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
         * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
         * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
         * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
         * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
         */
        condition: string;
        /**
         * When enabled, the condition will be matched with case-sensitive rules.
         */
        isCaseSensitive: boolean;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigJsChallengeSetHttpHeader {
        /**
         * The unique name of the whitelist.
         */
        name: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigProtectionSetting {
        /**
         * The list of allowed HTTP methods. If unspecified, default to `[OPTIONS, GET, HEAD, POST]`. This setting only applies if a corresponding protection rule is enabled, such as the "Restrict HTTP Request Methods" rule (key: 911100).
         */
        allowedHttpMethods: string[];
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * Inspects the response body of origin responses. Can be used to detect leakage of sensitive data. If unspecified, defaults to `false`.
         */
        isResponseInspected: boolean;
        /**
         * The maximum number of arguments allowed to be passed to your application before an action is taken. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `255`. This setting only applies if a corresponding protection rule is enabled, such as the "Number of Arguments Limits" rule (key: 960335).  Example: If `maxArgumentCount` to `2` for the Max Number of Arguments protection rule (key: 960335), the following requests would be blocked: `GET /myapp/path?query=one&query=two&query=three` `POST /myapp/path` with Body `{"argument1":"one","argument2":"two","argument3":"three"}`
         */
        maxArgumentCount: number;
        /**
         * The maximum length allowed for each argument name, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `400`. This setting only applies if a corresponding protection rule is enabled, such as the "Values Limits" rule (key: 960208).
         */
        maxNameLengthPerArgument: number;
        /**
         * The maximum response size to be fully inspected, in binary kilobytes (KiB). Anything over this limit will be partially inspected. If unspecified, defaults to `1024`.
         */
        maxResponseSizeInKiB: number;
        /**
         * The maximum length allowed for the sum of the argument name and value, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `64000`. This setting only applies if a corresponding protection rule is enabled, such as the "Total Arguments Limits" rule (key: 960341).
         */
        maxTotalNameLengthOfArguments: number;
        /**
         * The list of media types to allow for inspection, if `isResponseInspected` is enabled. Only responses with MIME types in this list will be inspected. If unspecified, defaults to `["text/html", "text/plain", "text/xml"]`.
         */
        mediaTypes: string[];
        /**
         * The length of time to analyze traffic traffic, in days. After the analysis period, `WafRecommendations` will be populated. If unspecified, defaults to `10`.
         */
        recommendationsPeriodInDays: number;
    }

    export interface GetWaasPoliciesWaasPolicyWafConfigWhitelist {
        /**
         * A list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of IP address lists to include in the whitelist.
         */
        addressLists: string[];
        /**
         * A set of IP addresses or CIDR notations to include in the whitelist.
         */
        addresses: string[];
        /**
         * The unique name of the whitelist.
         */
        name: string;
    }

    export interface GetWaasPolicyOrigin {
        /**
         * A list of HTTP headers to forward to your origin.
         */
        customHeaders: outputs.Waas.GetWaasPolicyOriginCustomHeader[];
        /**
         * The HTTP port on the origin that the web application listens on. If unspecified, defaults to `80`. If `0` is specified - the origin is not used for HTTP traffic.
         */
        httpPort?: number;
        /**
         * The HTTPS port on the origin that the web application listens on. If unspecified, defaults to `443`. If `0` is specified - the origin is not used for HTTPS traffic.
         */
        httpsPort?: number;
        label: string;
        /**
         * The URI of the origin. Does not support paths. Port numbers should be specified in the `httpPort` and `httpsPort` fields.
         */
        uri: string;
    }

    export interface GetWaasPolicyOriginCustomHeader {
        /**
         * The unique name of the whitelist.
         */
        name: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPolicyOriginGroup {
        label: string;
        originGroups: outputs.Waas.GetWaasPolicyOriginGroupOriginGroup[];
    }

    export interface GetWaasPolicyOriginGroupOriginGroup {
        /**
         * The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
         */
        origin: string;
        weight: number;
    }

    export interface GetWaasPolicyPolicyConfig {
        /**
         * The OCID of the SSL certificate to use if HTTPS is supported.
         */
        certificateId: string;
        /**
         * The set cipher group for the configured TLS protocol. This sets the configuration for the TLS connections between clients and edge nodes only.
         * * **DEFAULT:** Cipher group supports TLS 1.0, TLS 1.1, TLS 1.2, TLS 1.3 protocols. It has the following ciphers enabled: `ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA`
         */
        cipherGroup: string;
        /**
         * Specifies an HTTP header name which is treated as the connecting client's IP address. Applicable only if `isBehindCdn` is enabled.
         */
        clientAddressHeader: string;
        /**
         * Health checks monitor the status of your origin servers and only route traffic to the origins that pass the health check. If the health check fails, origin is automatically removed from the load balancing. There is roughly one health check per EDGE POP per period. Any checks that pass will be reported as "healthy".
         */
        healthChecks: outputs.Waas.GetWaasPolicyPolicyConfigHealthChecks;
        /**
         * Enabling `isBehindCdn` allows for the collection of IP addresses from client requests if the WAF is connected to a CDN.
         */
        isBehindCdn: boolean;
        /**
         * Enable or disable automatic content caching based on the response `cache-control` header. This feature enables the origin to act as a proxy cache. Caching is usually defined using `cache-control` header. For example `cache-control: max-age=120` means that the returned resource is valid for 120 seconds. Caching rules will overwrite this setting.
         */
        isCacheControlRespected: boolean;
        /**
         * Enable or disable HTTPS support. If true, a `certificateId` is required. If unspecified, defaults to `false`.
         */
        isHttpsEnabled: boolean;
        /**
         * Force HTTP to HTTPS redirection. If unspecified, defaults to `false`.
         */
        isHttpsForced: boolean;
        /**
         * Enable or disable GZIP compression of origin responses. If enabled, the header `Accept-Encoding: gzip` is sent to origin, otherwise, the empty `Accept-Encoding:` header is used.
         */
        isOriginCompressionEnabled: boolean;
        /**
         * Enable or disable buffering of responses from the origin. Buffering improves overall stability in case of network issues, but slightly increases Time To First Byte.
         */
        isResponseBufferingEnabled: boolean;
        /**
         * SNI stands for Server Name Indication and is an extension of the TLS protocol. It indicates which hostname is being contacted by the browser at the beginning of the 'handshake'-process. This allows a server to connect multiple SSL Certificates to one IP address and port.
         */
        isSniEnabled: boolean;
        /**
         * An object that represents a load balancing method and its properties.
         */
        loadBalancingMethod: outputs.Waas.GetWaasPolicyPolicyConfigLoadBalancingMethod;
        /**
         * A list of allowed TLS protocols. Only applicable when HTTPS support is enabled. The TLS protocol is negotiated while the request is connecting and the most recent protocol supported by both the edge node and client browser will be selected. If no such version exists, the connection will be aborted.
         * * **TLS_V1:** corresponds to TLS 1.0 specification.
         * * **TLS_V1_1:** corresponds to TLS 1.1 specification.
         * * **TLS_V1_2:** corresponds to TLS 1.2 specification.
         * * **TLS_V1_3:** corresponds to TLS 1.3 specification.
         */
        tlsProtocols: string[];
        /**
         * ModSecurity is not capable to inspect WebSockets. Therefore paths specified here have WAF disabled if Connection request header from the client has the value Upgrade (case insensitive matching) and Upgrade request header has the value websocket (case insensitive matching). Paths matches if the concatenation of request URL path and query starts with the contents of the one of `websocketPathPrefixes` array value. In All other cases challenges, like JSC, HIC and etc., remain active.
         */
        websocketPathPrefixes: string[];
    }

    export interface GetWaasPolicyPolicyConfigHealthChecks {
        /**
         * The HTTP response codes that signify a healthy state.
         * * **2XX:** Success response code group.
         * * **3XX:** Redirection response code group.
         * * **4XX:** Client errors response code group.
         * * **5XX:** Server errors response code group.
         */
        expectedResponseCodeGroups: string[];
        /**
         * Health check will search for the given text in a case-sensitive manner within the response body and will fail if the text is not found.
         */
        expectedResponseText: string;
        /**
         * HTTP header fields to include in health check requests, expressed as `"name": "value"` properties. Because HTTP header field names are case-insensitive, any use of names that are case-insensitive equal to other names will be rejected. If Host is not specified, requests will include a Host header field with value matching the policy's protected domain. If User-Agent is not specified, requests will include a User-Agent header field with value "waf health checks".
         */
        headers: {[key: string]: any};
        /**
         * Number of successful health checks after which the server is marked up.
         */
        healthyThreshold: number;
        /**
         * Time between health checks of an individual origin server, in seconds.
         */
        intervalInSeconds: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * Enables or disables additional check for predefined text in addition to response code.
         */
        isResponseTextCheckEnabled: boolean;
        /**
         * Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
         * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
         * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
         * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
         */
        method: string;
        /**
         * Path to visit on your origins when performing the health check.
         */
        path: string;
        /**
         * Response timeout represents wait time until request is considered failed, in seconds.
         */
        timeoutInSeconds: number;
        /**
         * Number of failed health checks after which the server is marked down.
         */
        unhealthyThreshold: number;
    }

    export interface GetWaasPolicyPolicyConfigLoadBalancingMethod {
        /**
         * The domain for which the cookie is set, defaults to WAAS policy domain.
         */
        domain: string;
        /**
         * The time for which a browser should keep the cookie in seconds. Empty value will cause the cookie to expire at the end of a browser session.
         */
        expirationTimeInSeconds: number;
        /**
         * Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
         * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
         * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
         * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
         */
        method: string;
        /**
         * The unique name of the whitelist.
         */
        name: string;
    }

    export interface GetWaasPolicyWafConfig {
        /**
         * The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of `ALLOW`, `DETECT`, and `BLOCK` rules, based on different criteria.
         */
        accessRules: outputs.Waas.GetWaasPolicyWafConfigAccessRule[];
        /**
         * The IP address rate limiting settings used to limit the number of requests from an address.
         */
        addressRateLimiting: outputs.Waas.GetWaasPolicyWafConfigAddressRateLimiting;
        /**
         * A list of caching rules applied to the web application.
         */
        cachingRules: outputs.Waas.GetWaasPolicyWafConfigCachingRule[];
        /**
         * A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
         */
        captchas: outputs.Waas.GetWaasPolicyWafConfigCaptcha[];
        /**
         * A list of the custom protection rule OCIDs and their actions.
         */
        customProtectionRules: outputs.Waas.GetWaasPolicyWafConfigCustomProtectionRule[];
        /**
         * The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
         */
        deviceFingerprintChallenge: outputs.Waas.GetWaasPolicyWafConfigDeviceFingerprintChallenge;
        /**
         * The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
         */
        humanInteractionChallenge: outputs.Waas.GetWaasPolicyWafConfigHumanInteractionChallenge;
        /**
         * The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
         */
        jsChallenge: outputs.Waas.GetWaasPolicyWafConfigJsChallenge;
        /**
         * The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
         */
        origin: string;
        /**
         * The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
         */
        originGroups: string[];
        /**
         * The settings to apply to protection rules.
         */
        protectionSettings: outputs.Waas.GetWaasPolicyWafConfigProtectionSettings;
        /**
         * A list of IP addresses that bypass the Web Application Firewall.
         */
        whitelists: outputs.Waas.GetWaasPolicyWafConfigWhitelist[];
    }

    export interface GetWaasPolicyWafConfigAccessRule {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * The list of challenges to bypass when `action` is set to `BYPASS`. If unspecified or empty, all challenges are bypassed.
         * * **JS_CHALLENGE:** Bypasses JavaScript Challenge.
         * * **DEVICE_FINGERPRINT_CHALLENGE:** Bypasses Device Fingerprint Challenge.
         * * **HUMAN_INTERACTION_CHALLENGE:** Bypasses Human Interaction Challenge.
         * * **CAPTCHA:** Bypasses CAPTCHA Challenge.
         */
        bypassChallenges: string[];
        /**
         * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
        /**
         * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         */
        criterias: outputs.Waas.GetWaasPolicyWafConfigAccessRuleCriteria[];
        /**
         * The unique name of the whitelist.
         */
        name: string;
        /**
         * The response status code to return when `action` is set to `REDIRECT`.
         * * **MOVED_PERMANENTLY:** Used for designating the permanent movement of a page (numerical code - 301).
         * * **FOUND:** Used for designating the temporary movement of a page (numerical code - 302).
         */
        redirectResponseCode: string;
        /**
         * The target to which the request should be redirected, represented as a URI reference. Required when `action` is `REDIRECT`.
         */
        redirectUrl: string;
        /**
         * An object that represents an action to apply to an HTTP response headers if all rule criteria will be matched regardless of `action` value.
         */
        responseHeaderManipulations: outputs.Waas.GetWaasPolicyWafConfigAccessRuleResponseHeaderManipulation[];
    }

    export interface GetWaasPolicyWafConfigAccessRuleCriteria {
        /**
         * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
         * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
         * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
         * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
         * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
         * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
         * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
         */
        condition: string;
        /**
         * When enabled, the condition will be matched with case-sensitive rules.
         */
        isCaseSensitive: boolean;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPolicyWafConfigAccessRuleResponseHeaderManipulation {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * A header field name that conforms to RFC 7230.  Example: `exampleHeaderName`
         */
        header: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPolicyWafConfigAddressRateLimiting {
        /**
         * The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
         */
        allowedRatePerAddress: number;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
         */
        maxDelayedCountPerAddress: number;
    }

    export interface GetWaasPolicyWafConfigCachingRule {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * The duration to cache content for the caching rule, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
         */
        cachingDuration: string;
        /**
         * The duration to cache content in the user's browser, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
         */
        clientCachingDuration: string;
        /**
         * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         */
        criterias: outputs.Waas.GetWaasPolicyWafConfigCachingRuleCriteria[];
        /**
         * Enables or disables client caching. Browsers use the `Cache-Control` header value for caching content locally in the browser. This setting overrides the addition of a `Cache-Control` header in responses.
         */
        isClientCachingEnabled: boolean;
        /**
         * The unique key for the caching rule.
         */
        key: string;
        /**
         * The unique name of the whitelist.
         */
        name: string;
    }

    export interface GetWaasPolicyWafConfigCachingRuleCriteria {
        /**
         * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
         * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
         * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
         * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
         * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
         * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
         * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
         */
        condition: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPolicyWafConfigCaptcha {
        /**
         * The text to show when incorrect CAPTCHA text is entered. If unspecified, defaults to `The CAPTCHA was incorrect. Try again.`
         */
        failureMessage: string;
        /**
         * The text to show in the footer when showing a CAPTCHA challenge. If unspecified, defaults to 'Enter the letters and numbers as they are shown in the image above.'
         */
        footerText: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge. If unspecified, defaults to 'We have detected an increased number of attempts to access this website. To help us keep this site secure, please let us know that you are not a robot by entering the text from the image below.'
         */
        headerText: string;
        /**
         * The amount of time before the CAPTCHA expires, in seconds. If unspecified, defaults to `300`.
         */
        sessionExpirationInSeconds: number;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button. If unspecified, defaults to `Yes, I am human`.
         */
        submitLabel: string;
        /**
         * The title used when displaying a CAPTCHA challenge. If unspecified, defaults to `Are you human?`
         */
        title: string;
        /**
         * The unique URL path at which to show the CAPTCHA challenge.
         */
        url: string;
    }

    export interface GetWaasPolicyWafConfigCustomProtectionRule {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: outputs.Waas.GetWaasPolicyWafConfigCustomProtectionRuleExclusion[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
         */
        id: string;
    }

    export interface GetWaasPolicyWafConfigCustomProtectionRuleExclusion {
        /**
         * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: string[];
        /**
         * The target of the exclusion.
         */
        target: string;
    }

    export interface GetWaasPolicyWafConfigDeviceFingerprintChallenge {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         */
        actionExpirationInSeconds: number;
        /**
         * The challenge settings if `action` is set to `BLOCK`.
         */
        challengeSettings: outputs.Waas.GetWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings;
        /**
         * The number of failed requests before taking action. If unspecified, defaults to `10`.
         */
        failureThreshold: number;
        /**
         * The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
         */
        failureThresholdExpirationInSeconds: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * The maximum number of IP addresses permitted with the same device fingerprint. If unspecified, defaults to `20`.
         */
        maxAddressCount: number;
        /**
         * The number of seconds before the maximum addresses count resets. If unspecified, defaults to `60`.
         */
        maxAddressCountExpirationInSeconds: number;
    }

    export interface GetWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings {
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
    }

    export interface GetWaasPolicyWafConfigHumanInteractionChallenge {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         */
        actionExpirationInSeconds: number;
        /**
         * The challenge settings if `action` is set to `BLOCK`.
         */
        challengeSettings: outputs.Waas.GetWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings;
        /**
         * The number of failed requests before taking action. If unspecified, defaults to `10`.
         */
        failureThreshold: number;
        /**
         * The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
         */
        failureThresholdExpirationInSeconds: number;
        /**
         * The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
         */
        interactionThreshold: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         */
        isNatEnabled: boolean;
        /**
         * The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
         */
        recordingPeriodInSeconds: number;
        /**
         * Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         */
        setHttpHeader: outputs.Waas.GetWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader;
    }

    export interface GetWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings {
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
    }

    export interface GetWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader {
        /**
         * The unique name of the whitelist.
         */
        name: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPolicyWafConfigJsChallenge {
        /**
         * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         */
        actionExpirationInSeconds: number;
        /**
         * When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
         */
        areRedirectsChallenged: boolean;
        /**
         * The challenge settings if `action` is set to `BLOCK`.
         */
        challengeSettings: outputs.Waas.GetWaasPolicyWafConfigJsChallengeChallengeSettings;
        /**
         * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         */
        criterias: outputs.Waas.GetWaasPolicyWafConfigJsChallengeCriteria[];
        /**
         * The number of failed requests before taking action. If unspecified, defaults to `10`.
         */
        failureThreshold: number;
        /**
         * Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         */
        isNatEnabled: boolean;
        /**
         * Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         */
        setHttpHeader: outputs.Waas.GetWaasPolicyWafConfigJsChallengeSetHttpHeader;
    }

    export interface GetWaasPolicyWafConfigJsChallengeChallengeSettings {
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
    }

    export interface GetWaasPolicyWafConfigJsChallengeCriteria {
        /**
         * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
         * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
         * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
         * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
         * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
         * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
         * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
         */
        condition: string;
        /**
         * When enabled, the condition will be matched with case-sensitive rules.
         */
        isCaseSensitive: boolean;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPolicyWafConfigJsChallengeSetHttpHeader {
        /**
         * The unique name of the whitelist.
         */
        name: string;
        /**
         * The value of the header.
         */
        value: string;
    }

    export interface GetWaasPolicyWafConfigProtectionSettings {
        /**
         * The list of allowed HTTP methods. If unspecified, default to `[OPTIONS, GET, HEAD, POST]`. This setting only applies if a corresponding protection rule is enabled, such as the "Restrict HTTP Request Methods" rule (key: 911100).
         */
        allowedHttpMethods: string[];
        /**
         * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * Inspects the response body of origin responses. Can be used to detect leakage of sensitive data. If unspecified, defaults to `false`.
         */
        isResponseInspected: boolean;
        /**
         * The maximum number of arguments allowed to be passed to your application before an action is taken. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `255`. This setting only applies if a corresponding protection rule is enabled, such as the "Number of Arguments Limits" rule (key: 960335).  Example: If `maxArgumentCount` to `2` for the Max Number of Arguments protection rule (key: 960335), the following requests would be blocked: `GET /myapp/path?query=one&query=two&query=three` `POST /myapp/path` with Body `{"argument1":"one","argument2":"two","argument3":"three"}`
         */
        maxArgumentCount: number;
        /**
         * The maximum length allowed for each argument name, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `400`. This setting only applies if a corresponding protection rule is enabled, such as the "Values Limits" rule (key: 960208).
         */
        maxNameLengthPerArgument: number;
        /**
         * The maximum response size to be fully inspected, in binary kilobytes (KiB). Anything over this limit will be partially inspected. If unspecified, defaults to `1024`.
         */
        maxResponseSizeInKiB: number;
        /**
         * The maximum length allowed for the sum of the argument name and value, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `64000`. This setting only applies if a corresponding protection rule is enabled, such as the "Total Arguments Limits" rule (key: 960341).
         */
        maxTotalNameLengthOfArguments: number;
        /**
         * The list of media types to allow for inspection, if `isResponseInspected` is enabled. Only responses with MIME types in this list will be inspected. If unspecified, defaults to `["text/html", "text/plain", "text/xml"]`.
         */
        mediaTypes: string[];
        /**
         * The length of time to analyze traffic traffic, in days. After the analysis period, `WafRecommendations` will be populated. If unspecified, defaults to `10`.
         */
        recommendationsPeriodInDays: number;
    }

    export interface GetWaasPolicyWafConfigWhitelist {
        /**
         * A list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of IP address lists to include in the whitelist.
         */
        addressLists: string[];
        /**
         * A set of IP addresses or CIDR notations to include in the whitelist.
         */
        addresses: string[];
        /**
         * The unique name of the whitelist.
         */
        name: string;
    }

    export interface HttpRedirectTarget {
        /**
         * (Updatable) The host portion of the redirect.
         */
        host: string;
        /**
         * (Updatable) The path component of the target URL (e.g., "/path/to/resource" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying, or request-prefixing. Use of \ is not permitted except to escape a following \, {, or }. An empty value is treated the same as static "/". A static value must begin with a leading "/", optionally followed by other path characters. A request-copying value must exactly match "{path}", and will be replaced with the path component of the request URL (including its initial "/"). A request-prefixing value must start with "/" and end with a non-escaped "{path}", which will be replaced with the path component of the request URL (including its initial "/"). Only one such replacement token is allowed.
         */
        path: string;
        /**
         * (Updatable) Port number of the target destination of the redirect, default to match protocol
         */
        port: number;
        /**
         * (Updatable) The protocol used for the target, http or https.
         */
        protocol: string;
        /**
         * (Updatable) The query component of the target URL (e.g., "?redirected" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying. Use of \ is not permitted except to escape a following \, {, or }. An empty value results in a redirection target URL with no query component. A static value must begin with a leading "?", optionally followed by other query characters. A request-copying value must exactly match "{query}", and will be replaced with the query component of the request URL (including a leading "?" if and only if the request URL includes a query component).
         */
        query: string;
    }

    export interface PolicyOrigin {
        /**
         * (Updatable) A list of HTTP headers to forward to your origin.
         */
        customHeaders: outputs.Waas.PolicyOriginCustomHeader[];
        /**
         * (Updatable) The HTTP port on the origin that the web application listens on. If unspecified, defaults to `80`. If `0` is specified - the origin is not used for HTTP traffic.
         */
        httpPort?: number;
        /**
         * (Updatable) The HTTPS port on the origin that the web application listens on. If unspecified, defaults to `443`. If `0` is specified - the origin is not used for HTTPS traffic.
         */
        httpsPort?: number;
        label: string;
        /**
         * (Updatable) The URI of the origin. Does not support paths. Port numbers should be specified in the `httpPort` and `httpsPort` fields.
         */
        uri: string;
    }

    export interface PolicyOriginCustomHeader {
        /**
         * (Updatable) The unique name of the whitelist.
         */
        name: string;
        /**
         * (Updatable) The value of the header.
         */
        value: string;
    }

    export interface PolicyOriginGroup {
        label: string;
        originGroups: outputs.Waas.PolicyOriginGroupOriginGroup[];
    }

    export interface PolicyOriginGroupOriginGroup {
        /**
         * (Updatable) The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but is not required upon updating the configuration.
         */
        origin: string;
        weight?: number;
    }

    export interface PolicyPolicyConfig {
        /**
         * (Updatable) The OCID of the SSL certificate to use if HTTPS is supported.
         */
        certificateId: string;
        /**
         * (Updatable) The set cipher group for the configured TLS protocol. This sets the configuration for the TLS connections between clients and edge nodes only.
         * * **DEFAULT:** Cipher group supports TLS 1.0, TLS 1.1, TLS 1.2, TLS 1.3 protocols. It has the following ciphers enabled: `ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA`
         */
        cipherGroup: string;
        /**
         * (Updatable) Specifies an HTTP header name which is treated as the connecting client's IP address. Applicable only if `isBehindCdn` is enabled.
         */
        clientAddressHeader?: string;
        /**
         * (Updatable) Health checks monitor the status of your origin servers and only route traffic to the origins that pass the health check. If the health check fails, origin is automatically removed from the load balancing. There is roughly one health check per EDGE POP per period. Any checks that pass will be reported as "healthy".
         */
        healthChecks: outputs.Waas.PolicyPolicyConfigHealthChecks;
        /**
         * (Updatable) Enabling `isBehindCdn` allows for the collection of IP addresses from client requests if the WAF is connected to a CDN.
         */
        isBehindCdn: boolean;
        /**
         * (Updatable) Enable or disable automatic content caching based on the response `cache-control` header. This feature enables the origin to act as a proxy cache. Caching is usually defined using `cache-control` header. For example `cache-control: max-age=120` means that the returned resource is valid for 120 seconds. Caching rules will overwrite this setting.
         */
        isCacheControlRespected: boolean;
        /**
         * (Updatable) Enable or disable HTTPS support. If true, a `certificateId` is required. If unspecified, defaults to `false`.
         */
        isHttpsEnabled: boolean;
        /**
         * (Updatable) Force HTTP to HTTPS redirection. If unspecified, defaults to `false`.
         */
        isHttpsForced: boolean;
        /**
         * (Updatable) Enable or disable GZIP compression of origin responses. If enabled, the header `Accept-Encoding: gzip` is sent to origin, otherwise, the empty `Accept-Encoding:` header is used.
         */
        isOriginCompressionEnabled: boolean;
        /**
         * (Updatable) Enable or disable buffering of responses from the origin. Buffering improves overall stability in case of network issues, but slightly increases Time To First Byte.
         */
        isResponseBufferingEnabled: boolean;
        /**
         * (Updatable) SNI stands for Server Name Indication and is an extension of the TLS protocol. It indicates which hostname is being contacted by the browser at the beginning of the 'handshake'-process. This allows a server to connect multiple SSL Certificates to one IP address and port.
         */
        isSniEnabled: boolean;
        /**
         * (Updatable) An object that represents a load balancing method and its properties.
         */
        loadBalancingMethod: outputs.Waas.PolicyPolicyConfigLoadBalancingMethod;
        /**
         * (Updatable) A list of allowed TLS protocols. Only applicable when HTTPS support is enabled. The TLS protocol is negotiated while the request is connecting and the most recent protocol supported by both the edge node and client browser will be selected. If no such version exists, the connection will be aborted.
         * * **TLS_V1:** corresponds to TLS 1.0 specification.
         * * **TLS_V1_1:** corresponds to TLS 1.1 specification.
         * * **TLS_V1_2:** corresponds to TLS 1.2 specification.
         * * **TLS_V1_3:** corresponds to TLS 1.3 specification.
         */
        tlsProtocols: string[];
        /**
         * (Updatable) ModSecurity is not capable to inspect WebSockets. Therefore paths specified here have WAF disabled if Connection request header from the client has the value Upgrade (case insensitive matching) and Upgrade request header has the value websocket (case insensitive matching). Paths matches if the concatenation of request URL path and query starts with the contents of the one of `websocketPathPrefixes` array value. In All other cases challenges, like JSC, HIC and etc., remain active.
         */
        websocketPathPrefixes: string[];
    }

    export interface PolicyPolicyConfigHealthChecks {
        /**
         * (Updatable) The HTTP response codes that signify a healthy state.
         * * **2XX:** Success response code group.
         * * **3XX:** Redirection response code group.
         * * **4XX:** Client errors response code group.
         * * **5XX:** Server errors response code group.
         */
        expectedResponseCodeGroups: string[];
        /**
         * (Updatable) Health check will search for the given text in a case-sensitive manner within the response body and will fail if the text is not found.
         */
        expectedResponseText: string;
        /**
         * (Updatable) HTTP header fields to include in health check requests, expressed as `"name": "value"` properties. Because HTTP header field names are case-insensitive, any use of names that are case-insensitive equal to other names will be rejected. If Host is not specified, requests will include a Host header field with value matching the policy's protected domain. If User-Agent is not specified, requests will include a User-Agent header field with value "waf health checks".
         */
        headers: {[key: string]: any};
        /**
         * (Updatable) Number of successful health checks after which the server is marked up.
         */
        healthyThreshold: number;
        /**
         * (Updatable) Time between health checks of an individual origin server, in seconds.
         */
        intervalInSeconds: number;
        /**
         * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * (Updatable) Enables or disables additional check for predefined text in addition to response code.
         */
        isResponseTextCheckEnabled: boolean;
        /**
         * (Updatable) Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
         * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
         * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
         * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
         */
        method: string;
        /**
         * (Updatable) Path to visit on your origins when performing the health check.
         */
        path: string;
        /**
         * (Updatable) Response timeout represents wait time until request is considered failed, in seconds.
         */
        timeoutInSeconds: number;
        /**
         * (Updatable) Number of failed health checks after which the server is marked down.
         */
        unhealthyThreshold: number;
    }

    export interface PolicyPolicyConfigLoadBalancingMethod {
        /**
         * (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
         */
        domain: string;
        /**
         * (Updatable) The time for which a browser should keep the cookie in seconds. Empty value will cause the cookie to expire at the end of a browser session.
         */
        expirationTimeInSeconds: number;
        /**
         * (Updatable) Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
         * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
         * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
         * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
         */
        method: string;
        /**
         * (Updatable) The unique name of the whitelist.
         */
        name: string;
    }

    export interface PolicyWafConfig {
        /**
         * (Updatable) The access rules applied to the Web Application Firewall. Access rules allow custom content access policies to be defined and `ALLOW`, `DETECT`, or `BLOCK` actions to be taken on a request when specified criteria are met.
         */
        accessRules: outputs.Waas.PolicyWafConfigAccessRule[];
        /**
         * (Updatable) The settings used to limit the number of requests from an IP address.
         */
        addressRateLimiting: outputs.Waas.PolicyWafConfigAddressRateLimiting;
        /**
         * (Updatable) A list of caching rules applied to the web application.
         */
        cachingRules: outputs.Waas.PolicyWafConfigCachingRule[];
        /**
         * (Updatable) A list of CAPTCHA challenge settings. CAPTCHAs challenge requests to ensure a human is attempting to reach the specified URL and not a bot.
         */
        captchas: outputs.Waas.PolicyWafConfigCaptcha[];
        /**
         * (Updatable) A list of the custom protection rule OCIDs and their actions.
         */
        customProtectionRules: outputs.Waas.PolicyWafConfigCustomProtectionRule[];
        /**
         * (Updatable) The device fingerprint challenge settings. Blocks bots based on unique device fingerprint information.
         */
        deviceFingerprintChallenge: outputs.Waas.PolicyWafConfigDeviceFingerprintChallenge;
        /**
         * (Updatable) The human interaction challenge settings. Detects natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
         */
        humanInteractionChallenge: outputs.Waas.PolicyWafConfigHumanInteractionChallenge;
        /**
         * (Updatable) The JavaScript challenge settings. Blocks bots by challenging requests from browsers that have no JavaScript support.
         */
        jsChallenge: outputs.Waas.PolicyWafConfigJsChallenge;
        /**
         * (Updatable) The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but is not required upon updating the configuration.
         */
        origin: string;
        /**
         * (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
         */
        originGroups: string[];
        /**
         * (Updatable) The settings applied to protection rules.
         */
        protectionSettings: outputs.Waas.PolicyWafConfigProtectionSettings;
        /**
         * (Updatable) A list of IP addresses that bypass the Web Application Firewall.
         */
        whitelists: outputs.Waas.PolicyWafConfigWhitelist[];
    }

    export interface PolicyWafConfigAccessRule {
        /**
         * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * (Updatable) The list of challenges to bypass when `action` is set to `BYPASS`. If unspecified or empty, all challenges are bypassed.
         * * **JS_CHALLENGE:** Bypasses JavaScript Challenge.
         * * **DEVICE_FINGERPRINT_CHALLENGE:** Bypasses Device Fingerprint Challenge.
         * * **HUMAN_INTERACTION_CHALLENGE:** Bypasses Human Interaction Challenge.
         * * **CAPTCHA:** Bypasses CAPTCHA Challenge.
         */
        bypassChallenges: string[];
        /**
         * (Updatable) The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * (Updatable) The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * (Updatable) The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * (Updatable) The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
        /**
         * (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         */
        criterias: outputs.Waas.PolicyWafConfigAccessRuleCriteria[];
        /**
         * (Updatable) The unique name of the whitelist.
         */
        name: string;
        /**
         * (Updatable) The response status code to return when `action` is set to `REDIRECT`.
         * * **MOVED_PERMANENTLY:** Used for designating the permanent movement of a page (numerical code - 301).
         * * **FOUND:** Used for designating the temporary movement of a page (numerical code - 302).
         */
        redirectResponseCode: string;
        /**
         * (Updatable) The target to which the request should be redirected, represented as a URI reference. Required when `action` is `REDIRECT`.
         */
        redirectUrl: string;
        /**
         * (Updatable) An object that represents an action to apply to an HTTP response headers if all rule criteria will be matched regardless of `action` value.
         */
        responseHeaderManipulations: outputs.Waas.PolicyWafConfigAccessRuleResponseHeaderManipulation[];
    }

    export interface PolicyWafConfigAccessRuleCriteria {
        /**
         * (Updatable) The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
         * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
         * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
         * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
         * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
         * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
         * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
         */
        condition: string;
        /**
         * (Updatable) When enabled, the condition will be matched with case-sensitive rules.
         */
        isCaseSensitive: boolean;
        /**
         * (Updatable) The value of the header.
         */
        value: string;
    }

    export interface PolicyWafConfigAccessRuleResponseHeaderManipulation {
        /**
         * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * (Updatable) A header field name that conforms to RFC 7230.  Example: `exampleHeaderName`
         */
        header: string;
        /**
         * (Updatable) The value of the header.
         */
        value: string;
    }

    export interface PolicyWafConfigAddressRateLimiting {
        /**
         * (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
         */
        allowedRatePerAddress: number;
        /**
         * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
         */
        maxDelayedCountPerAddress: number;
    }

    export interface PolicyWafConfigCachingRule {
        /**
         * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * (Updatable) The duration to cache content for the caching rule, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
         */
        cachingDuration?: string;
        /**
         * (Updatable) The duration to cache content in the user's browser, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
         */
        clientCachingDuration?: string;
        /**
         * (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         */
        criterias: outputs.Waas.PolicyWafConfigCachingRuleCriteria[];
        /**
         * (Updatable) Enables or disables client caching. Browsers use the `Cache-Control` header value for caching content locally in the browser. This setting overrides the addition of a `Cache-Control` header in responses.
         */
        isClientCachingEnabled: boolean;
        /**
         * (Updatable) The unique key for the caching rule.
         */
        key: string;
        /**
         * (Updatable) The unique name of the whitelist.
         */
        name: string;
    }

    export interface PolicyWafConfigCachingRuleCriteria {
        /**
         * (Updatable) The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
         * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
         * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
         * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
         * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
         * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
         * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
         */
        condition: string;
        /**
         * (Updatable) The value of the header.
         */
        value: string;
    }

    export interface PolicyWafConfigCaptcha {
        /**
         * (Updatable) The text to show when incorrect CAPTCHA text is entered. If unspecified, defaults to `The CAPTCHA was incorrect. Try again.`
         */
        failureMessage: string;
        /**
         * (Updatable) The text to show in the footer when showing a CAPTCHA challenge. If unspecified, defaults to 'Enter the letters and numbers as they are shown in the image above.'
         */
        footerText: string;
        /**
         * (Updatable) The text to show in the header when showing a CAPTCHA challenge. If unspecified, defaults to 'We have detected an increased number of attempts to access this website. To help us keep this site secure, please let us know that you are not a robot by entering the text from the image below.'
         */
        headerText: string;
        /**
         * (Updatable) The amount of time before the CAPTCHA expires, in seconds. If unspecified, defaults to `300`.
         */
        sessionExpirationInSeconds: number;
        /**
         * (Updatable) The text to show on the label of the CAPTCHA challenge submit button. If unspecified, defaults to `Yes, I am human`.
         */
        submitLabel: string;
        /**
         * (Updatable) The title used when displaying a CAPTCHA challenge. If unspecified, defaults to `Are you human?`
         */
        title: string;
        /**
         * (Updatable) The unique URL path at which to show the CAPTCHA challenge.
         */
        url: string;
    }

    export interface PolicyWafConfigCustomProtectionRule {
        /**
         * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * (Updatable) An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: outputs.Waas.PolicyWafConfigCustomProtectionRuleExclusion[];
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
         */
        id: string;
    }

    export interface PolicyWafConfigCustomProtectionRuleExclusion {
        /**
         * (Updatable) An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: string[];
        /**
         * (Updatable) The target of the exclusion.
         */
        target: string;
    }

    export interface PolicyWafConfigDeviceFingerprintChallenge {
        /**
         * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         */
        actionExpirationInSeconds: number;
        /**
         * (Updatable) The challenge settings if `action` is set to `BLOCK`.
         */
        challengeSettings: outputs.Waas.PolicyWafConfigDeviceFingerprintChallengeChallengeSettings;
        /**
         * (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
         */
        failureThreshold: number;
        /**
         * (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
         */
        failureThresholdExpirationInSeconds: number;
        /**
         * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * (Updatable) The maximum number of IP addresses permitted with the same device fingerprint. If unspecified, defaults to `20`.
         */
        maxAddressCount: number;
        /**
         * (Updatable) The number of seconds before the maximum addresses count resets. If unspecified, defaults to `60`.
         */
        maxAddressCountExpirationInSeconds: number;
    }

    export interface PolicyWafConfigDeviceFingerprintChallengeChallengeSettings {
        /**
         * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * (Updatable) The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * (Updatable) The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * (Updatable) The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * (Updatable) The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
    }

    export interface PolicyWafConfigHumanInteractionChallenge {
        /**
         * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         */
        actionExpirationInSeconds: number;
        /**
         * (Updatable) The challenge settings if `action` is set to `BLOCK`.
         */
        challengeSettings: outputs.Waas.PolicyWafConfigHumanInteractionChallengeChallengeSettings;
        /**
         * (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
         */
        failureThreshold: number;
        /**
         * (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
         */
        failureThresholdExpirationInSeconds: number;
        /**
         * (Updatable) The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
         */
        interactionThreshold: number;
        /**
         * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         */
        isNatEnabled: boolean;
        /**
         * (Updatable) The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
         */
        recordingPeriodInSeconds: number;
        /**
         * (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         */
        setHttpHeader: outputs.Waas.PolicyWafConfigHumanInteractionChallengeSetHttpHeader;
    }

    export interface PolicyWafConfigHumanInteractionChallengeChallengeSettings {
        /**
         * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * (Updatable) The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * (Updatable) The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * (Updatable) The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * (Updatable) The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
    }

    export interface PolicyWafConfigHumanInteractionChallengeSetHttpHeader {
        /**
         * (Updatable) The unique name of the whitelist.
         */
        name: string;
        /**
         * (Updatable) The value of the header.
         */
        value: string;
    }

    export interface PolicyWafConfigJsChallenge {
        /**
         * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         */
        action: string;
        /**
         * (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         */
        actionExpirationInSeconds: number;
        /**
         * (Updatable) When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
         */
        areRedirectsChallenged: boolean;
        /**
         * (Updatable) The challenge settings if `action` is set to `BLOCK`.
         */
        challengeSettings: outputs.Waas.PolicyWafConfigJsChallengeChallengeSettings;
        /**
         * (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         */
        criterias: outputs.Waas.PolicyWafConfigJsChallengeCriteria[];
        /**
         * (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
         */
        failureThreshold: number;
        /**
         * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
         */
        isEnabled: boolean;
        /**
         * (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         */
        isNatEnabled: boolean;
        /**
         * (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         */
        setHttpHeader: outputs.Waas.PolicyWafConfigJsChallengeSetHttpHeader;
    }

    export interface PolicyWafConfigJsChallengeChallengeSettings {
        /**
         * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * (Updatable) The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
         */
        captchaFooter: string;
        /**
         * (Updatable) The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
         */
        captchaHeader: string;
        /**
         * (Updatable) The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
         */
        captchaSubmitLabel: string;
        /**
         * (Updatable) The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
         */
        captchaTitle: string;
    }

    export interface PolicyWafConfigJsChallengeCriteria {
        /**
         * (Updatable) The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
         * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
         * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
         * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
         * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
         * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
         * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
         * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
         * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
         */
        condition: string;
        /**
         * (Updatable) When enabled, the condition will be matched with case-sensitive rules.
         */
        isCaseSensitive: boolean;
        /**
         * (Updatable) The value of the header.
         */
        value: string;
    }

    export interface PolicyWafConfigJsChallengeSetHttpHeader {
        /**
         * (Updatable) The unique name of the whitelist.
         */
        name: string;
        /**
         * (Updatable) The value of the header.
         */
        value: string;
    }

    export interface PolicyWafConfigProtectionSettings {
        /**
         * (Updatable) The list of allowed HTTP methods. If unspecified, default to `[OPTIONS, GET, HEAD, POST]`. This setting only applies if a corresponding protection rule is enabled, such as the "Restrict HTTP Request Methods" rule (key: 911100).
         */
        allowedHttpMethods: string[];
        /**
         * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
         */
        blockAction: string;
        /**
         * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
         */
        blockErrorPageCode: string;
        /**
         * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
         */
        blockErrorPageDescription: string;
        /**
         * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
         */
        blockErrorPageMessage: string;
        /**
         * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
         */
        blockResponseCode: number;
        /**
         * (Updatable) Inspects the response body of origin responses. Can be used to detect leakage of sensitive data. If unspecified, defaults to `false`.
         */
        isResponseInspected: boolean;
        /**
         * (Updatable) The maximum number of arguments allowed to be passed to your application before an action is taken. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `255`. This setting only applies if a corresponding protection rule is enabled, such as the "Number of Arguments Limits" rule (key: 960335).  Example: If `maxArgumentCount` to `2` for the Max Number of Arguments protection rule (key: 960335), the following requests would be blocked: `GET /myapp/path?query=one&query=two&query=three` `POST /myapp/path` with Body `{"argument1":"one","argument2":"two","argument3":"three"}`
         */
        maxArgumentCount: number;
        /**
         * (Updatable) The maximum length allowed for each argument name, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `400`. This setting only applies if a corresponding protection rule is enabled, such as the "Values Limits" rule (key: 960208).
         */
        maxNameLengthPerArgument: number;
        /**
         * (Updatable) The maximum response size to be fully inspected, in binary kilobytes (KiB). Anything over this limit will be partially inspected. If unspecified, defaults to `1024`.
         */
        maxResponseSizeInKiB: number;
        /**
         * (Updatable) The maximum length allowed for the sum of the argument name and value, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `64000`. This setting only applies if a corresponding protection rule is enabled, such as the "Total Arguments Limits" rule (key: 960341).
         */
        maxTotalNameLengthOfArguments: number;
        /**
         * (Updatable) The list of media types to allow for inspection, if `isResponseInspected` is enabled. Only responses with MIME types in this list will be inspected. If unspecified, defaults to `["text/html", "text/plain", "text/xml"]`.
         */
        mediaTypes: string[];
        /**
         * (Updatable) The length of time to analyze traffic traffic, in days. After the analysis period, `WafRecommendations` will be populated. If unspecified, defaults to `10`.
         */
        recommendationsPeriodInDays: number;
    }

    export interface PolicyWafConfigWhitelist {
        /**
         * (Updatable) A list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of IP address lists to include in the whitelist.
         */
        addressLists: string[];
        /**
         * (Updatable) A set of IP addresses or CIDR notations to include in the whitelist.
         */
        addresses: string[];
        /**
         * (Updatable) The unique name of the whitelist.
         */
        name: string;
    }

    export interface ProtectionRuleExclusion {
        /**
         * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
         */
        exclusions: string[];
        /**
         * The target of the exclusion.
         */
        target: string;
    }
}

export namespace Waf {
    export interface AppFirewallPolicyAction {
        /**
         * (Updatable) Type of returned HTTP response body.
         */
        body: outputs.Waf.AppFirewallPolicyActionBody;
        /**
         * (Updatable) Response code.
         */
        code: number;
        /**
         * (Updatable) Adds headers defined in this array for HTTP response.
         */
        headers: outputs.Waf.AppFirewallPolicyActionHeader[];
        /**
         * (Updatable) Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * (Updatable) Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface AppFirewallPolicyActionBody {
        /**
         * (Updatable) Static response body text.
         */
        text: string;
        /**
         * (Updatable) Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface AppFirewallPolicyActionHeader {
        /**
         * (Updatable) Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * (Updatable) The value of the header field.
         */
        value: string;
    }

    export interface AppFirewallPolicyRequestAccessControl {
        /**
         * (Updatable) References an default Action to take if no AccessControlRule was matched. Allowed action types:
         * * **ALLOW** continues execution of other modules and their rules.
         * * **RETURN_HTTP_RESPONSE** terminates further execution of modules and rules and returns defined HTTP response.
         */
        defaultActionName: string;
        /**
         * (Updatable) Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.AppFirewallPolicyRequestAccessControlRule[];
    }

    export interface AppFirewallPolicyRequestAccessControlRule {
        /**
         * (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * (Updatable) An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * (Updatable) The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * (Updatable) Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * (Updatable) Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface AppFirewallPolicyRequestProtection {
        /**
         * (Updatable) References action by name from actions defined in WebAppFirewallPolicy. Executed if HTTP message body size exceeds limit set in field `bodyInspectionSizeLimitInBytes`.
         */
        bodyInspectionSizeLimitExceededActionName: string;
        /**
         * (Updatable) Maximum size of inspected HTTP message body in bytes. Actions to take if this limit is exceeded are defined in `bodyInspectionSizeLimitExceededActionName`.
         */
        bodyInspectionSizeLimitInBytes?: number;
        /**
         * (Updatable) Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.AppFirewallPolicyRequestProtectionRule[];
    }

    export interface AppFirewallPolicyRequestProtectionRule {
        /**
         * (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * (Updatable) An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * (Updatable) The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * (Updatable) Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
         */
        isBodyInspectionEnabled: boolean;
        /**
         * (Updatable) Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
         */
        protectionCapabilities: outputs.Waf.AppFirewallPolicyRequestProtectionRuleProtectionCapability[];
        /**
         * (Updatable) Settings for protection capabilities
         */
        protectionCapabilitySettings: outputs.Waf.AppFirewallPolicyRequestProtectionRuleProtectionCapabilitySettings;
        /**
         * (Updatable) Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface AppFirewallPolicyRequestProtectionRuleProtectionCapability {
        /**
         * (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * (Updatable) The minimum sum of weights of associated collaborative protection capabilities that have triggered which must be reached in order for _this_ capability to trigger. This field is ignored for non-collaborative capabilities.
         */
        collaborativeActionThreshold: number;
        /**
         * (Updatable) Explicit weight values to use for associated collaborative protection capabilities.
         */
        collaborativeWeights: outputs.Waf.AppFirewallPolicyRequestProtectionRuleProtectionCapabilityCollaborativeWeight[];
        /**
         * (Updatable) Identifies specific HTTP message parameters to exclude from inspection by a protection capability.
         */
        exclusions: outputs.Waf.AppFirewallPolicyRequestProtectionRuleProtectionCapabilityExclusions;
        /**
         * (Updatable) Unique key of referenced protection capability.
         */
        key: string;
        /**
         * (Updatable) Version of referenced protection capability.
         */
        version: number;
    }

    export interface AppFirewallPolicyRequestProtectionRuleProtectionCapabilityCollaborativeWeight {
        /**
         * (Updatable) Unique key of referenced protection capability.
         */
        key: string;
        /**
         * (Updatable) The value of weight to set.
         */
        weight: number;
    }

    export interface AppFirewallPolicyRequestProtectionRuleProtectionCapabilityExclusions {
        /**
         * (Updatable) List of URL query parameter values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from inspecting. Example: If we have query parameter 'argumentName=argumentValue' and args=['argumentName'], both 'argumentName' and 'argumentValue' will not be inspected.
         */
        args: string[];
        /**
         * (Updatable) List of HTTP request cookie values (by cookie name) to exclude from inspecting. Example: If we have cookie 'cookieName=cookieValue' and requestCookies=['cookieName'], both 'cookieName' and 'cookieValue' will not be inspected.
         */
        requestCookies: string[];
    }

    export interface AppFirewallPolicyRequestProtectionRuleProtectionCapabilitySettings {
        /**
         * (Updatable) List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
         */
        allowedHttpMethods: string[];
        /**
         * (Updatable) Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
         */
        maxHttpRequestHeaderLength?: number;
        /**
         * (Updatable) Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
         */
        maxHttpRequestHeaders?: number;
        /**
         * (Updatable) Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
         */
        maxNumberOfArguments?: number;
        /**
         * (Updatable) Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
         */
        maxSingleArgumentLength?: number;
        /**
         * (Updatable) Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
         */
        maxTotalArgumentLength?: number;
    }

    export interface AppFirewallPolicyRequestRateLimiting {
        /**
         * (Updatable) Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.AppFirewallPolicyRequestRateLimitingRule[];
    }

    export interface AppFirewallPolicyRequestRateLimitingRule {
        /**
         * (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * (Updatable) An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * (Updatable) The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * (Updatable) Rate Limiting Configurations. Each configuration counts requests towards its own `requestsLimit`.
         */
        configurations: outputs.Waf.AppFirewallPolicyRequestRateLimitingRuleConfiguration[];
        /**
         * (Updatable) Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * (Updatable) Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface AppFirewallPolicyRequestRateLimitingRuleConfiguration {
        /**
         * (Updatable) Duration of block action application in seconds when `requestsLimit` is reached. Optional and can be 0 (no block duration).
         */
        actionDurationInSeconds: number;
        /**
         * (Updatable) Evaluation period in seconds.
         */
        periodInSeconds: number;
        /**
         * (Updatable) Requests allowed per evaluation period.
         */
        requestsLimit: number;
    }

    export interface AppFirewallPolicyResponseAccessControl {
        /**
         * (Updatable) Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.AppFirewallPolicyResponseAccessControlRule[];
    }

    export interface AppFirewallPolicyResponseAccessControlRule {
        /**
         * (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * (Updatable) An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * (Updatable) The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * (Updatable) Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * (Updatable) Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface AppFirewallPolicyResponseProtection {
        /**
         * (Updatable) Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.AppFirewallPolicyResponseProtectionRule[];
    }

    export interface AppFirewallPolicyResponseProtectionRule {
        /**
         * (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * (Updatable) An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * (Updatable) The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * (Updatable) Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
         */
        isBodyInspectionEnabled: boolean;
        /**
         * (Updatable) Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
         */
        protectionCapabilities: outputs.Waf.AppFirewallPolicyResponseProtectionRuleProtectionCapability[];
        /**
         * (Updatable) Settings for protection capabilities
         */
        protectionCapabilitySettings: outputs.Waf.AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettings;
        /**
         * (Updatable) Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface AppFirewallPolicyResponseProtectionRuleProtectionCapability {
        /**
         * (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * (Updatable) The minimum sum of weights of associated collaborative protection capabilities that have triggered which must be reached in order for _this_ capability to trigger. This field is ignored for non-collaborative capabilities.
         */
        collaborativeActionThreshold: number;
        /**
         * (Updatable) Explicit weight values to use for associated collaborative protection capabilities.
         */
        collaborativeWeights: outputs.Waf.AppFirewallPolicyResponseProtectionRuleProtectionCapabilityCollaborativeWeight[];
        /**
         * (Updatable) Identifies specific HTTP message parameters to exclude from inspection by a protection capability.
         */
        exclusions: outputs.Waf.AppFirewallPolicyResponseProtectionRuleProtectionCapabilityExclusions;
        /**
         * (Updatable) Unique key of referenced protection capability.
         */
        key: string;
        /**
         * (Updatable) Version of referenced protection capability.
         */
        version: number;
    }

    export interface AppFirewallPolicyResponseProtectionRuleProtectionCapabilityCollaborativeWeight {
        /**
         * (Updatable) Unique key of referenced protection capability.
         */
        key: string;
        /**
         * (Updatable) The value of weight to set.
         */
        weight: number;
    }

    export interface AppFirewallPolicyResponseProtectionRuleProtectionCapabilityExclusions {
        /**
         * (Updatable) List of URL query parameter values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from inspecting. Example: If we have query parameter 'argumentName=argumentValue' and args=['argumentName'], both 'argumentName' and 'argumentValue' will not be inspected.
         */
        args: string[];
        /**
         * (Updatable) List of HTTP request cookie values (by cookie name) to exclude from inspecting. Example: If we have cookie 'cookieName=cookieValue' and requestCookies=['cookieName'], both 'cookieName' and 'cookieValue' will not be inspected.
         */
        requestCookies: string[];
    }

    export interface AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettings {
        /**
         * (Updatable) List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
         */
        allowedHttpMethods: string[];
        /**
         * (Updatable) Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
         */
        maxHttpRequestHeaderLength?: number;
        /**
         * (Updatable) Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
         */
        maxHttpRequestHeaders?: number;
        /**
         * (Updatable) Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
         */
        maxNumberOfArguments?: number;
        /**
         * (Updatable) Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
         */
        maxSingleArgumentLength?: number;
        /**
         * (Updatable) Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
         */
        maxTotalArgumentLength?: number;
    }

    export interface GetFirewallsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetFirewallsWebAppFirewallCollection {
        items: outputs.Waf.GetFirewallsWebAppFirewallCollectionItem[];
    }

    export interface GetFirewallsWebAppFirewallCollectionItem {
        /**
         * Type of the WebAppFirewall, as example LOAD_BALANCER.
         */
        backendType: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only the WebAppFirewall with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
         */
        lifecycleDetails: string;
        /**
         * LoadBalancer [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to which the WebAppFirewallPolicy is attached to.
         */
        loadBalancerId: string;
        /**
         * A filter to return only resources that match the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the WebAppFirewall was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the WebAppFirewall was updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * A filter to return only the WebAppFirewall with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of related WebAppFirewallPolicy.
         */
        webAppFirewallPolicyId: string;
    }

    export interface GetNetworkAddressListVcnAddress {
        /**
         * A private IP address or CIDR IP address range.
         */
        addresses: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetNetworkAddressListsFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetNetworkAddressListsNetworkAddressListCollection {
        items: outputs.Waf.GetNetworkAddressListsNetworkAddressListCollectionItem[];
    }

    export interface GetNetworkAddressListsNetworkAddressListCollectionItem {
        /**
         * A private IP address or CIDR IP address range.
         */
        addresses: string[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only the NetworkAddressList with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
         */
        lifecycleDetails: string;
        /**
         * A filter to return only resources that match the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the NetworkAddressList was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the NetworkAddressList was updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
        /**
         * Type of NetworkAddressList.
         */
        type: string;
        /**
         * A list of private address prefixes, each associated with a particular VCN. To specify all addresses in a VCN, use "0.0.0.0/0" for IPv4 and "::/0" for IPv6.
         */
        vcnAddresses: outputs.Waf.GetNetworkAddressListsNetworkAddressListCollectionItemVcnAddress[];
    }

    export interface GetNetworkAddressListsNetworkAddressListCollectionItemVcnAddress {
        /**
         * A private IP address or CIDR IP address range.
         */
        addresses: string;
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

    export interface GetProtectionCapabilitiesFilter {
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProtectionCapabilitiesProtectionCapabilityCollection {
        /**
         * List of protection capabilities.
         */
        items: outputs.Waf.GetProtectionCapabilitiesProtectionCapabilityCollectionItem[];
    }

    export interface GetProtectionCapabilitiesProtectionCapabilityCollectionItem {
        /**
         * The default collaborative action threshold for OCI-managed collaborative protection capability. Collaborative protection capabilities are made of several simple, non-collaborative protection capabilities (referred to as `contributing capabilities` later on) which have weights assigned to them. These weights can be found in the `collaborativeWeights` array. For incoming/outgoing HTTP messages, all contributing capabilities are executed and the sum of all triggered contributing capabilities weights is calculated. Only if this sum is greater than or equal to `collaborativeActionThreshold` is the incoming/outgoing HTTP message marked as malicious.
         */
        collaborativeActionThreshold: number;
        /**
         * The weights of contributing capabilities. Defines how much each contributing capability contributes towards the action threshold of a collaborative protection capability.
         */
        collaborativeWeights: outputs.Waf.GetProtectionCapabilitiesProtectionCapabilityCollectionItemCollaborativeWeight[];
        /**
         * The description of protection capability.
         */
        description: string;
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * The list of unique names protection capability group tags that are associated with this capability. Example: ["PCI", "Recommended"]
         */
        groupTags: string[];
        /**
         * A filter to return only resources that matches given isLatestVersion.
         */
        isLatestVersion: boolean;
        /**
         * The unique key of protection capability to filter by.
         */
        key: string;
        /**
         * A filter to return only resources that matches given type.
         */
        type: string;
        /**
         * The version of protection capability.
         */
        version: number;
    }

    export interface GetProtectionCapabilitiesProtectionCapabilityCollectionItemCollaborativeWeight {
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * The unique key of protection capability to filter by.
         */
        key: string;
        /**
         * The weight of contributing protection capability.
         */
        weight: number;
    }

    export interface GetProtectionCapabilityGroupTagsFilter {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetProtectionCapabilityGroupTagsProtectionCapabilityGroupTagCollection {
        /**
         * List of protection capabilities group tags.
         */
        items: outputs.Waf.GetProtectionCapabilityGroupTagsProtectionCapabilityGroupTagCollectionItem[];
    }

    export interface GetProtectionCapabilityGroupTagsProtectionCapabilityGroupTagCollectionItem {
        /**
         * A filter to return only resources that match the entire name given.
         */
        name: string;
    }

    export interface GetWebAppFirewallPoliciesFilter {
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        regex?: boolean;
        values: string[];
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollection {
        items: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItem[];
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItem {
        /**
         * Predefined actions for use in multiple different rules. Not all actions are supported in every module. Some actions terminate further execution of modules and rules in a module and some do not. Actions names must be unique within this array.
         */
        actions: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemAction[];
        /**
         * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         */
        compartmentId: string;
        /**
         * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
         */
        definedTags: {[key: string]: any};
        /**
         * A filter to return only resources that match the entire display name given.
         */
        displayName: string;
        /**
         * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
         */
        freeformTags: {[key: string]: any};
        /**
         * A filter to return only the WebAppFirewallPolicy with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         */
        id: string;
        /**
         * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
         */
        lifecycleDetails: string;
        /**
         * Module that allows inspection of HTTP request properties and to return a defined HTTP response. In this module, rules with the name 'Default Action' are not allowed, since this name is reserved for default action logs.
         */
        requestAccessControls: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestAccessControl[];
        /**
         * Module that allows to enable OCI-managed protection capabilities for incoming HTTP requests.
         */
        requestProtections: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtection[];
        /**
         * Module that allows inspection of HTTP connection properties and to limit requests frequency for a given key.
         */
        requestRateLimitings: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestRateLimiting[];
        /**
         * Module that allows inspection of HTTP response properties and to return a defined HTTP response.
         */
        responseAccessControls: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseAccessControl[];
        /**
         * Module that allows to enable OCI-managed protection capabilities for HTTP responses.
         */
        responseProtections: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtection[];
        /**
         * A filter to return only resources that match the given lifecycleState.
         */
        state: string;
        /**
         * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
         */
        systemTags: {[key: string]: any};
        /**
         * The time the WebAppFirewallPolicy was created. An RFC3339 formatted datetime string.
         */
        timeCreated: string;
        /**
         * The time the WebAppFirewallPolicy was updated. An RFC3339 formatted datetime string.
         */
        timeUpdated: string;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemAction {
        /**
         * Type of returned HTTP response body.
         */
        bodies: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemActionBody[];
        /**
         * Response code.
         */
        code: number;
        /**
         * Adds headers defined in this array for HTTP response.
         */
        headers: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemActionHeader[];
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemActionBody {
        /**
         * Static response body text.
         */
        text: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemActionHeader {
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * The value of the header field.
         */
        value: string;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestAccessControl {
        /**
         * References an default Action to take if no AccessControlRule was matched. Allowed action types:
         * * **ALLOW** continues execution of other modules and their rules.
         * * **RETURN_HTTP_RESPONSE** terminates further execution of modules and rules and returns defined HTTP response.
         */
        defaultActionName: string;
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestAccessControlRule[];
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestAccessControlRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtection {
        /**
         * References action by name from actions defined in WebAppFirewallPolicy. Executed if HTTP message body size exceeds limit set in field `bodyInspectionSizeLimitInBytes`.
         */
        bodyInspectionSizeLimitExceededActionName: string;
        /**
         * Maximum size of inspected HTTP message body in bytes. Actions to take if this limit is exceeded are defined in `bodyInspectionSizeLimitExceededActionName`.
         */
        bodyInspectionSizeLimitInBytes: number;
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRule[];
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
         */
        isBodyInspectionEnabled: boolean;
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
         */
        protectionCapabilities: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRuleProtectionCapability[];
        /**
         * Settings for protection capabilities
         */
        protectionCapabilitySettings: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRuleProtectionCapabilitySetting[];
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRuleProtectionCapability {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * The minimum sum of weights of associated collaborative protection capabilities that have triggered which must be reached in order for _this_ capability to trigger. This field is ignored for non-collaborative capabilities.
         */
        collaborativeActionThreshold: number;
        /**
         * Explicit weight values to use for associated collaborative protection capabilities.
         */
        collaborativeWeights: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRuleProtectionCapabilityCollaborativeWeight[];
        /**
         * Identifies specific HTTP message parameters to exclude from inspection by a protection capability.
         */
        exclusions: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRuleProtectionCapabilityExclusion[];
        /**
         * Unique key of referenced protection capability.
         */
        key: string;
        /**
         * Version of referenced protection capability.
         */
        version: number;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRuleProtectionCapabilityCollaborativeWeight {
        /**
         * Unique key of referenced protection capability.
         */
        key: string;
        /**
         * The value of weight to set.
         */
        weight: number;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRuleProtectionCapabilityExclusion {
        /**
         * List of URL query parameter values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from inspecting. Example: If we have query parameter 'argumentName=argumentValue' and args=['argumentName'], both 'argumentName' and 'argumentValue' will not be inspected.
         */
        args: string[];
        /**
         * List of HTTP request cookie values (by cookie name) to exclude from inspecting. Example: If we have cookie 'cookieName=cookieValue' and requestCookies=['cookieName'], both 'cookieName' and 'cookieValue' will not be inspected.
         */
        requestCookies: string[];
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestProtectionRuleProtectionCapabilitySetting {
        /**
         * List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
         */
        allowedHttpMethods: string[];
        /**
         * Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
         */
        maxHttpRequestHeaderLength: number;
        /**
         * Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
         */
        maxHttpRequestHeaders: number;
        /**
         * Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
         */
        maxNumberOfArguments: number;
        /**
         * Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
         */
        maxSingleArgumentLength: number;
        /**
         * Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
         */
        maxTotalArgumentLength: number;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestRateLimiting {
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestRateLimitingRule[];
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestRateLimitingRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Rate Limiting Configurations. Each configuration counts requests towards its own `requestsLimit`.
         */
        configurations: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestRateLimitingRuleConfiguration[];
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemRequestRateLimitingRuleConfiguration {
        /**
         * Duration of block action application in seconds when `requestsLimit` is reached. Optional and can be 0 (no block duration).
         */
        actionDurationInSeconds: number;
        /**
         * Evaluation period in seconds.
         */
        periodInSeconds: number;
        /**
         * Requests allowed per evaluation period.
         */
        requestsLimit: number;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseAccessControl {
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseAccessControlRule[];
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseAccessControlRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtection {
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRule[];
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
         */
        isBodyInspectionEnabled: boolean;
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
         */
        protectionCapabilities: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapability[];
        /**
         * Settings for protection capabilities
         */
        protectionCapabilitySettings: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting[];
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapability {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * The minimum sum of weights of associated collaborative protection capabilities that have triggered which must be reached in order for _this_ capability to trigger. This field is ignored for non-collaborative capabilities.
         */
        collaborativeActionThreshold: number;
        /**
         * Explicit weight values to use for associated collaborative protection capabilities.
         */
        collaborativeWeights: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilityCollaborativeWeight[];
        /**
         * Identifies specific HTTP message parameters to exclude from inspection by a protection capability.
         */
        exclusions: outputs.Waf.GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilityExclusion[];
        /**
         * Unique key of referenced protection capability.
         */
        key: string;
        /**
         * Version of referenced protection capability.
         */
        version: number;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilityCollaborativeWeight {
        /**
         * Unique key of referenced protection capability.
         */
        key: string;
        /**
         * The value of weight to set.
         */
        weight: number;
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilityExclusion {
        /**
         * List of URL query parameter values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from inspecting. Example: If we have query parameter 'argumentName=argumentValue' and args=['argumentName'], both 'argumentName' and 'argumentValue' will not be inspected.
         */
        args: string[];
        /**
         * List of HTTP request cookie values (by cookie name) to exclude from inspecting. Example: If we have cookie 'cookieName=cookieValue' and requestCookies=['cookieName'], both 'cookieName' and 'cookieValue' will not be inspected.
         */
        requestCookies: string[];
    }

    export interface GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting {
        /**
         * List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
         */
        allowedHttpMethods: string[];
        /**
         * Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
         */
        maxHttpRequestHeaderLength: number;
        /**
         * Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
         */
        maxHttpRequestHeaders: number;
        /**
         * Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
         */
        maxNumberOfArguments: number;
        /**
         * Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
         */
        maxSingleArgumentLength: number;
        /**
         * Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
         */
        maxTotalArgumentLength: number;
    }

    export interface GetWebAppFirewallPolicyAction {
        /**
         * Type of returned HTTP response body.
         */
        bodies: outputs.Waf.GetWebAppFirewallPolicyActionBody[];
        /**
         * Response code.
         */
        code: number;
        /**
         * Adds headers defined in this array for HTTP response.
         */
        headers: outputs.Waf.GetWebAppFirewallPolicyActionHeader[];
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPolicyActionBody {
        /**
         * Static response body text.
         */
        text: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPolicyActionHeader {
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * The value of the header field.
         */
        value: string;
    }

    export interface GetWebAppFirewallPolicyRequestAccessControl {
        /**
         * References an default Action to take if no AccessControlRule was matched. Allowed action types:
         * * **ALLOW** continues execution of other modules and their rules.
         * * **RETURN_HTTP_RESPONSE** terminates further execution of modules and rules and returns defined HTTP response.
         */
        defaultActionName: string;
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPolicyRequestAccessControlRule[];
    }

    export interface GetWebAppFirewallPolicyRequestAccessControlRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPolicyRequestProtection {
        /**
         * References action by name from actions defined in WebAppFirewallPolicy. Executed if HTTP message body size exceeds limit set in field `bodyInspectionSizeLimitInBytes`.
         */
        bodyInspectionSizeLimitExceededActionName: string;
        /**
         * Maximum size of inspected HTTP message body in bytes. Actions to take if this limit is exceeded are defined in `bodyInspectionSizeLimitExceededActionName`.
         */
        bodyInspectionSizeLimitInBytes: number;
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPolicyRequestProtectionRule[];
    }

    export interface GetWebAppFirewallPolicyRequestProtectionRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
         */
        isBodyInspectionEnabled: boolean;
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
         */
        protectionCapabilities: outputs.Waf.GetWebAppFirewallPolicyRequestProtectionRuleProtectionCapability[];
        /**
         * Settings for protection capabilities
         */
        protectionCapabilitySettings: outputs.Waf.GetWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilitySetting[];
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPolicyRequestProtectionRuleProtectionCapability {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * The minimum sum of weights of associated collaborative protection capabilities that have triggered which must be reached in order for _this_ capability to trigger. This field is ignored for non-collaborative capabilities.
         */
        collaborativeActionThreshold: number;
        /**
         * Explicit weight values to use for associated collaborative protection capabilities.
         */
        collaborativeWeights: outputs.Waf.GetWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilityCollaborativeWeight[];
        /**
         * Identifies specific HTTP message parameters to exclude from inspection by a protection capability.
         */
        exclusions: outputs.Waf.GetWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilityExclusion[];
        /**
         * Unique key of referenced protection capability.
         */
        key: string;
        /**
         * Version of referenced protection capability.
         */
        version: number;
    }

    export interface GetWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilityCollaborativeWeight {
        /**
         * Unique key of referenced protection capability.
         */
        key: string;
        /**
         * The value of weight to set.
         */
        weight: number;
    }

    export interface GetWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilityExclusion {
        /**
         * List of URL query parameter values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from inspecting. Example: If we have query parameter 'argumentName=argumentValue' and args=['argumentName'], both 'argumentName' and 'argumentValue' will not be inspected.
         */
        args: string[];
        /**
         * List of HTTP request cookie values (by cookie name) to exclude from inspecting. Example: If we have cookie 'cookieName=cookieValue' and requestCookies=['cookieName'], both 'cookieName' and 'cookieValue' will not be inspected.
         */
        requestCookies: string[];
    }

    export interface GetWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilitySetting {
        /**
         * List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
         */
        allowedHttpMethods: string[];
        /**
         * Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
         */
        maxHttpRequestHeaderLength: number;
        /**
         * Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
         */
        maxHttpRequestHeaders: number;
        /**
         * Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
         */
        maxNumberOfArguments: number;
        /**
         * Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
         */
        maxSingleArgumentLength: number;
        /**
         * Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
         */
        maxTotalArgumentLength: number;
    }

    export interface GetWebAppFirewallPolicyRequestRateLimiting {
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPolicyRequestRateLimitingRule[];
    }

    export interface GetWebAppFirewallPolicyRequestRateLimitingRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Rate Limiting Configurations. Each configuration counts requests towards its own `requestsLimit`.
         */
        configurations: outputs.Waf.GetWebAppFirewallPolicyRequestRateLimitingRuleConfiguration[];
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPolicyRequestRateLimitingRuleConfiguration {
        /**
         * Duration of block action application in seconds when `requestsLimit` is reached. Optional and can be 0 (no block duration).
         */
        actionDurationInSeconds: number;
        /**
         * Evaluation period in seconds.
         */
        periodInSeconds: number;
        /**
         * Requests allowed per evaluation period.
         */
        requestsLimit: number;
    }

    export interface GetWebAppFirewallPolicyResponseAccessControl {
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPolicyResponseAccessControlRule[];
    }

    export interface GetWebAppFirewallPolicyResponseAccessControlRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPolicyResponseProtection {
        /**
         * Ordered list of ProtectionRules. Rules are executed in order of appearance in this array. ProtectionRules in this array can only use protection capabilities of RESPONSE_PROTECTION_CAPABILITY type.
         */
        rules: outputs.Waf.GetWebAppFirewallPolicyResponseProtectionRule[];
    }

    export interface GetWebAppFirewallPolicyResponseProtectionRule {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * An expression that determines whether or not the rule action should be executed.
         */
        condition: string;
        /**
         * The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         */
        conditionLanguage: string;
        /**
         * Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
         */
        isBodyInspectionEnabled: boolean;
        /**
         * Rule name. Must be unique within the module.
         */
        name: string;
        /**
         * An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
         */
        protectionCapabilities: outputs.Waf.GetWebAppFirewallPolicyResponseProtectionRuleProtectionCapability[];
        /**
         * Settings for protection capabilities
         */
        protectionCapabilitySettings: outputs.Waf.GetWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilitySetting[];
        /**
         * Type of WebAppFirewallPolicyRule.
         */
        type: string;
    }

    export interface GetWebAppFirewallPolicyResponseProtectionRuleProtectionCapability {
        /**
         * Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         */
        actionName: string;
        /**
         * The minimum sum of weights of associated collaborative protection capabilities that have triggered which must be reached in order for _this_ capability to trigger. This field is ignored for non-collaborative capabilities.
         */
        collaborativeActionThreshold: number;
        /**
         * Explicit weight values to use for associated collaborative protection capabilities.
         */
        collaborativeWeights: outputs.Waf.GetWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilityCollaborativeWeight[];
        /**
         * Identifies specific HTTP message parameters to exclude from inspection by a protection capability.
         */
        exclusions: outputs.Waf.GetWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilityExclusion[];
        /**
         * Unique key of referenced protection capability.
         */
        key: string;
        /**
         * Version of referenced protection capability.
         */
        version: number;
    }

    export interface GetWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilityCollaborativeWeight {
        /**
         * Unique key of referenced protection capability.
         */
        key: string;
        /**
         * The value of weight to set.
         */
        weight: number;
    }

    export interface GetWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilityExclusion {
        /**
         * List of URL query parameter values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from inspecting. Example: If we have query parameter 'argumentName=argumentValue' and args=['argumentName'], both 'argumentName' and 'argumentValue' will not be inspected.
         */
        args: string[];
        /**
         * List of HTTP request cookie values (by cookie name) to exclude from inspecting. Example: If we have cookie 'cookieName=cookieValue' and requestCookies=['cookieName'], both 'cookieName' and 'cookieValue' will not be inspected.
         */
        requestCookies: string[];
    }

    export interface GetWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilitySetting {
        /**
         * List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
         */
        allowedHttpMethods: string[];
        /**
         * Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
         */
        maxHttpRequestHeaderLength: number;
        /**
         * Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
         */
        maxHttpRequestHeaders: number;
        /**
         * Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
         */
        maxNumberOfArguments: number;
        /**
         * Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
         */
        maxSingleArgumentLength: number;
        /**
         * Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
         */
        maxTotalArgumentLength: number;
    }

    export interface NetworkAddressListVcnAddress {
        /**
         * (Updatable) A private IP address or CIDR IP address range.
         */
        addresses: string;
        /**
         * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         */
        vcnId: string;
    }

}
