// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Subscription Redeemable Users in Oracle Cloud Infrastructure Usage Proxy service.
 *
 * Provides the list of user summary that can redeem rewards for the given subscription ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionRedeemableUsers = oci.UsageProxy.getSubscriptionRedeemableUsers({
 *     subscriptionId: oci_ons_subscription.test_subscription.id,
 *     tenancyId: oci_identity_tenancy.test_tenancy.id,
 * });
 * ```
 */
export function getSubscriptionRedeemableUsers(args: GetSubscriptionRedeemableUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionRedeemableUsersResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:UsageProxy/getSubscriptionRedeemableUsers:getSubscriptionRedeemableUsers", {
        "filters": args.filters,
        "subscriptionId": args.subscriptionId,
        "tenancyId": args.tenancyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscriptionRedeemableUsers.
 */
export interface GetSubscriptionRedeemableUsersArgs {
    filters?: inputs.UsageProxy.GetSubscriptionRedeemableUsersFilter[];
    /**
     * The subscription ID for which rewards information is requested for.
     */
    subscriptionId: string;
    /**
     * The OCID of the tenancy.
     */
    tenancyId: string;
}

/**
 * A collection of values returned by getSubscriptionRedeemableUsers.
 */
export interface GetSubscriptionRedeemableUsersResult {
    readonly filters?: outputs.UsageProxy.GetSubscriptionRedeemableUsersFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of redeemable_user_collection.
     */
    readonly redeemableUserCollections: outputs.UsageProxy.GetSubscriptionRedeemableUsersRedeemableUserCollection[];
    readonly subscriptionId: string;
    readonly tenancyId: string;
}

export function getSubscriptionRedeemableUsersOutput(args: GetSubscriptionRedeemableUsersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriptionRedeemableUsersResult> {
    return pulumi.output(args).apply(a => getSubscriptionRedeemableUsers(a, opts))
}

/**
 * A collection of arguments for invoking getSubscriptionRedeemableUsers.
 */
export interface GetSubscriptionRedeemableUsersOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.UsageProxy.GetSubscriptionRedeemableUsersFilterArgs>[]>;
    /**
     * The subscription ID for which rewards information is requested for.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * The OCID of the tenancy.
     */
    tenancyId: pulumi.Input<string>;
}
