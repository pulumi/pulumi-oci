// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Subscription Redemptions in Oracle Cloud Infrastructure Usage Proxy service.
 *
 * Returns the list of redemption for the subscription ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionRedemptions = oci.UsageProxy.getSubscriptionRedemptions({
 *     subscriptionId: oci_onesubscription_subscription.test_subscription.id,
 *     tenancyId: oci_identity_tenancy.test_tenancy.id,
 *     timeRedeemedGreaterThanOrEqualTo: _var.subscription_redemption_time_redeemed_greater_than_or_equal_to,
 *     timeRedeemedLessThan: _var.subscription_redemption_time_redeemed_less_than,
 * });
 * ```
 */
export function getSubscriptionRedemptions(args: GetSubscriptionRedemptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionRedemptionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:UsageProxy/getSubscriptionRedemptions:getSubscriptionRedemptions", {
        "filters": args.filters,
        "subscriptionId": args.subscriptionId,
        "tenancyId": args.tenancyId,
        "timeRedeemedGreaterThanOrEqualTo": args.timeRedeemedGreaterThanOrEqualTo,
        "timeRedeemedLessThan": args.timeRedeemedLessThan,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscriptionRedemptions.
 */
export interface GetSubscriptionRedemptionsArgs {
    filters?: inputs.UsageProxy.GetSubscriptionRedemptionsFilter[];
    /**
     * The subscription ID for which rewards information is requested for.
     */
    subscriptionId: string;
    /**
     * The OCID of the tenancy.
     */
    tenancyId: string;
    /**
     * The starting redeemed date filter for the redemption history.
     */
    timeRedeemedGreaterThanOrEqualTo?: string;
    /**
     * The ending redeemed date filter for the redemption history.
     */
    timeRedeemedLessThan?: string;
}

/**
 * A collection of values returned by getSubscriptionRedemptions.
 */
export interface GetSubscriptionRedemptionsResult {
    readonly filters?: outputs.UsageProxy.GetSubscriptionRedemptionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * The list of redemption_collection.
     */
    readonly redemptionCollections?: outputs.UsageProxy.GetSubscriptionRedemptionsRedemptionCollection[];
    readonly subscriptionId: string;
    readonly tenancyId: string;
    readonly timeRedeemedGreaterThanOrEqualTo?: string;
    readonly timeRedeemedLessThan?: string;
}
/**
 * This data source provides the list of Subscription Redemptions in Oracle Cloud Infrastructure Usage Proxy service.
 *
 * Returns the list of redemption for the subscription ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionRedemptions = oci.UsageProxy.getSubscriptionRedemptions({
 *     subscriptionId: oci_onesubscription_subscription.test_subscription.id,
 *     tenancyId: oci_identity_tenancy.test_tenancy.id,
 *     timeRedeemedGreaterThanOrEqualTo: _var.subscription_redemption_time_redeemed_greater_than_or_equal_to,
 *     timeRedeemedLessThan: _var.subscription_redemption_time_redeemed_less_than,
 * });
 * ```
 */
export function getSubscriptionRedemptionsOutput(args: GetSubscriptionRedemptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriptionRedemptionsResult> {
    return pulumi.output(args).apply((a: any) => getSubscriptionRedemptions(a, opts))
}

/**
 * A collection of arguments for invoking getSubscriptionRedemptions.
 */
export interface GetSubscriptionRedemptionsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.UsageProxy.GetSubscriptionRedemptionsFilterArgs>[]>;
    /**
     * The subscription ID for which rewards information is requested for.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * The OCID of the tenancy.
     */
    tenancyId: pulumi.Input<string>;
    /**
     * The starting redeemed date filter for the redemption history.
     */
    timeRedeemedGreaterThanOrEqualTo?: pulumi.Input<string>;
    /**
     * The ending redeemed date filter for the redemption history.
     */
    timeRedeemedLessThan?: pulumi.Input<string>;
}
