// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Subscription Rewards in Oracle Cloud Infrastructure Usage Proxy service.
 *
 * Returns the list of rewards for a subscription ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionRewards = oci.UsageProxy.getSubscriptionRewards({
 *     subscriptionId: testSubscription.id,
 *     tenancyId: testTenancy.id,
 * });
 * ```
 */
export function getSubscriptionRewards(args: GetSubscriptionRewardsArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionRewardsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:UsageProxy/getSubscriptionRewards:getSubscriptionRewards", {
        "filters": args.filters,
        "subscriptionId": args.subscriptionId,
        "tenancyId": args.tenancyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscriptionRewards.
 */
export interface GetSubscriptionRewardsArgs {
    filters?: inputs.UsageProxy.GetSubscriptionRewardsFilter[];
    /**
     * The subscription ID for which rewards information is requested for.
     */
    subscriptionId: string;
    /**
     * The OCID of the tenancy.
     */
    tenancyId: string;
}

/**
 * A collection of values returned by getSubscriptionRewards.
 */
export interface GetSubscriptionRewardsResult {
    readonly filters?: outputs.UsageProxy.GetSubscriptionRewardsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of reward_collection.
     */
    readonly rewardCollections: outputs.UsageProxy.GetSubscriptionRewardsRewardCollection[];
    /**
     * The entitlement ID from MQS, which is the same as the subcription ID.
     */
    readonly subscriptionId: string;
    /**
     * The OCID of the target tenancy.
     */
    readonly tenancyId: string;
}
/**
 * This data source provides the list of Subscription Rewards in Oracle Cloud Infrastructure Usage Proxy service.
 *
 * Returns the list of rewards for a subscription ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionRewards = oci.UsageProxy.getSubscriptionRewards({
 *     subscriptionId: testSubscription.id,
 *     tenancyId: testTenancy.id,
 * });
 * ```
 */
export function getSubscriptionRewardsOutput(args: GetSubscriptionRewardsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSubscriptionRewardsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:UsageProxy/getSubscriptionRewards:getSubscriptionRewards", {
        "filters": args.filters,
        "subscriptionId": args.subscriptionId,
        "tenancyId": args.tenancyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscriptionRewards.
 */
export interface GetSubscriptionRewardsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.UsageProxy.GetSubscriptionRewardsFilterArgs>[]>;
    /**
     * The subscription ID for which rewards information is requested for.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * The OCID of the tenancy.
     */
    tenancyId: pulumi.Input<string>;
}
