// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetResourceQuotasArgs, GetResourceQuotasResult, GetResourceQuotasOutputArgs } from "./getResourceQuotas";
export const getResourceQuotas: typeof import("./getResourceQuotas").getResourceQuotas = null as any;
export const getResourceQuotasOutput: typeof import("./getResourceQuotas").getResourceQuotasOutput = null as any;
utilities.lazyLoad(exports, ["getResourceQuotas","getResourceQuotasOutput"], () => require("./getResourceQuotas"));

export { GetResourcesArgs, GetResourcesResult, GetResourcesOutputArgs } from "./getResources";
export const getResources: typeof import("./getResources").getResources = null as any;
export const getResourcesOutput: typeof import("./getResources").getResourcesOutput = null as any;
utilities.lazyLoad(exports, ["getResources","getResourcesOutput"], () => require("./getResources"));

export { GetSubscriptionProductArgs, GetSubscriptionProductResult, GetSubscriptionProductOutputArgs } from "./getSubscriptionProduct";
export const getSubscriptionProduct: typeof import("./getSubscriptionProduct").getSubscriptionProduct = null as any;
export const getSubscriptionProductOutput: typeof import("./getSubscriptionProduct").getSubscriptionProductOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptionProduct","getSubscriptionProductOutput"], () => require("./getSubscriptionProduct"));

export { GetSubscriptionProductsArgs, GetSubscriptionProductsResult, GetSubscriptionProductsOutputArgs } from "./getSubscriptionProducts";
export const getSubscriptionProducts: typeof import("./getSubscriptionProducts").getSubscriptionProducts = null as any;
export const getSubscriptionProductsOutput: typeof import("./getSubscriptionProducts").getSubscriptionProductsOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptionProducts","getSubscriptionProductsOutput"], () => require("./getSubscriptionProducts"));

export { GetSubscriptionRedeemableUserArgs, GetSubscriptionRedeemableUserResult, GetSubscriptionRedeemableUserOutputArgs } from "./getSubscriptionRedeemableUser";
export const getSubscriptionRedeemableUser: typeof import("./getSubscriptionRedeemableUser").getSubscriptionRedeemableUser = null as any;
export const getSubscriptionRedeemableUserOutput: typeof import("./getSubscriptionRedeemableUser").getSubscriptionRedeemableUserOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptionRedeemableUser","getSubscriptionRedeemableUserOutput"], () => require("./getSubscriptionRedeemableUser"));

export { GetSubscriptionRedeemableUsersArgs, GetSubscriptionRedeemableUsersResult, GetSubscriptionRedeemableUsersOutputArgs } from "./getSubscriptionRedeemableUsers";
export const getSubscriptionRedeemableUsers: typeof import("./getSubscriptionRedeemableUsers").getSubscriptionRedeemableUsers = null as any;
export const getSubscriptionRedeemableUsersOutput: typeof import("./getSubscriptionRedeemableUsers").getSubscriptionRedeemableUsersOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptionRedeemableUsers","getSubscriptionRedeemableUsersOutput"], () => require("./getSubscriptionRedeemableUsers"));

export { GetSubscriptionRedemptionArgs, GetSubscriptionRedemptionResult, GetSubscriptionRedemptionOutputArgs } from "./getSubscriptionRedemption";
export const getSubscriptionRedemption: typeof import("./getSubscriptionRedemption").getSubscriptionRedemption = null as any;
export const getSubscriptionRedemptionOutput: typeof import("./getSubscriptionRedemption").getSubscriptionRedemptionOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptionRedemption","getSubscriptionRedemptionOutput"], () => require("./getSubscriptionRedemption"));

export { GetSubscriptionRedemptionsArgs, GetSubscriptionRedemptionsResult, GetSubscriptionRedemptionsOutputArgs } from "./getSubscriptionRedemptions";
export const getSubscriptionRedemptions: typeof import("./getSubscriptionRedemptions").getSubscriptionRedemptions = null as any;
export const getSubscriptionRedemptionsOutput: typeof import("./getSubscriptionRedemptions").getSubscriptionRedemptionsOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptionRedemptions","getSubscriptionRedemptionsOutput"], () => require("./getSubscriptionRedemptions"));

export { GetSubscriptionRewardArgs, GetSubscriptionRewardResult, GetSubscriptionRewardOutputArgs } from "./getSubscriptionReward";
export const getSubscriptionReward: typeof import("./getSubscriptionReward").getSubscriptionReward = null as any;
export const getSubscriptionRewardOutput: typeof import("./getSubscriptionReward").getSubscriptionRewardOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptionReward","getSubscriptionRewardOutput"], () => require("./getSubscriptionReward"));

export { GetSubscriptionRewardsArgs, GetSubscriptionRewardsResult, GetSubscriptionRewardsOutputArgs } from "./getSubscriptionRewards";
export const getSubscriptionRewards: typeof import("./getSubscriptionRewards").getSubscriptionRewards = null as any;
export const getSubscriptionRewardsOutput: typeof import("./getSubscriptionRewards").getSubscriptionRewardsOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptionRewards","getSubscriptionRewardsOutput"], () => require("./getSubscriptionRewards"));

export { GetUsagelimitsArgs, GetUsagelimitsResult, GetUsagelimitsOutputArgs } from "./getUsagelimits";
export const getUsagelimits: typeof import("./getUsagelimits").getUsagelimits = null as any;
export const getUsagelimitsOutput: typeof import("./getUsagelimits").getUsagelimitsOutput = null as any;
utilities.lazyLoad(exports, ["getUsagelimits","getUsagelimitsOutput"], () => require("./getUsagelimits"));

export { SubscriptionRedeemableUserArgs, SubscriptionRedeemableUserState } from "./subscriptionRedeemableUser";
export type SubscriptionRedeemableUser = import("./subscriptionRedeemableUser").SubscriptionRedeemableUser;
export const SubscriptionRedeemableUser: typeof import("./subscriptionRedeemableUser").SubscriptionRedeemableUser = null as any;
utilities.lazyLoad(exports, ["SubscriptionRedeemableUser"], () => require("./subscriptionRedeemableUser"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:UsageProxy/subscriptionRedeemableUser:SubscriptionRedeemableUser":
                return new SubscriptionRedeemableUser(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "UsageProxy/subscriptionRedeemableUser", _module)
