// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Subscription Redeemable User resource in Oracle Cloud Infrastructure Usage Proxy service.
 *
 * Adds the list of redeemable user summary for a subscription ID.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionRedeemableUser = new oci.usageproxy.SubscriptionRedeemableUser("test_subscription_redeemable_user", {
 *     subscriptionId: testSubscription.id,
 *     tenancyId: testTenancy.id,
 *     items: [{
 *         emailId: testEmail.id,
 *         firstName: subscriptionRedeemableUserItemsFirstName,
 *         lastName: subscriptionRedeemableUserItemsLastName,
 *     }],
 *     userId: testUser.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * SubscriptionRedeemableUsers can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:UsageProxy/subscriptionRedeemableUser:SubscriptionRedeemableUser test_subscription_redeemable_user "subscriptions/{subscriptionId}/redeemableUsers/tenancyId/{tenancyId}"
 * ```
 */
export class SubscriptionRedeemableUser extends pulumi.CustomResource {
    /**
     * Get an existing SubscriptionRedeemableUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubscriptionRedeemableUserState, opts?: pulumi.CustomResourceOptions): SubscriptionRedeemableUser {
        return new SubscriptionRedeemableUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:UsageProxy/subscriptionRedeemableUser:SubscriptionRedeemableUser';

    /**
     * Returns true if the given object is an instance of SubscriptionRedeemableUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SubscriptionRedeemableUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SubscriptionRedeemableUser.__pulumiType;
    }

    /**
     * The list of new user to be added to the list of user that can redeem rewards.
     */
    public readonly items!: pulumi.Output<outputs.UsageProxy.SubscriptionRedeemableUserItem[]>;
    /**
     * The subscription ID for which rewards information is requested for.
     */
    public readonly subscriptionId!: pulumi.Output<string>;
    /**
     * The OCID of the tenancy.
     */
    public readonly tenancyId!: pulumi.Output<string>;
    /**
     * The user ID of the person to send a copy of an email.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly userId!: pulumi.Output<string>;

    /**
     * Create a SubscriptionRedeemableUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubscriptionRedeemableUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubscriptionRedeemableUserArgs | SubscriptionRedeemableUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SubscriptionRedeemableUserState | undefined;
            resourceInputs["items"] = state ? state.items : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tenancyId"] = state ? state.tenancyId : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as SubscriptionRedeemableUserArgs | undefined;
            if ((!args || args.items === undefined) && !opts.urn) {
                throw new Error("Missing required property 'items'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            if ((!args || args.tenancyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenancyId'");
            }
            resourceInputs["items"] = args ? args.items : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tenancyId"] = args ? args.tenancyId : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SubscriptionRedeemableUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SubscriptionRedeemableUser resources.
 */
export interface SubscriptionRedeemableUserState {
    /**
     * The list of new user to be added to the list of user that can redeem rewards.
     */
    items?: pulumi.Input<pulumi.Input<inputs.UsageProxy.SubscriptionRedeemableUserItem>[]>;
    /**
     * The subscription ID for which rewards information is requested for.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * The OCID of the tenancy.
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * The user ID of the person to send a copy of an email.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SubscriptionRedeemableUser resource.
 */
export interface SubscriptionRedeemableUserArgs {
    /**
     * The list of new user to be added to the list of user that can redeem rewards.
     */
    items: pulumi.Input<pulumi.Input<inputs.UsageProxy.SubscriptionRedeemableUserItem>[]>;
    /**
     * The subscription ID for which rewards information is requested for.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * The OCID of the tenancy.
     */
    tenancyId: pulumi.Input<string>;
    /**
     * The user ID of the person to send a copy of an email.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    userId?: pulumi.Input<string>;
}
