// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Secrets in Oracle Cloud Infrastructure Vault service.
 *
 * Lists all secrets in the specified vault and compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecrets = oci.Vault.getSecrets({
 *     compartmentId: compartmentId,
 *     name: secretName,
 *     state: secretState,
 *     vaultId: testVault.id,
 * });
 * ```
 */
export function getSecrets(args: GetSecretsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Vault/getSecrets:getSecrets", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
        "vaultId": args.vaultId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsArgs {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    filters?: inputs.Vault.GetSecretsFilter[];
    /**
     * The secret name.
     */
    name?: string;
    /**
     * A filter that returns only resources that match the specified lifecycle state. The state value is case-insensitive.
     */
    state?: string;
    /**
     * The OCID of the vault.
     */
    vaultId?: string;
}

/**
 * A collection of values returned by getSecrets.
 */
export interface GetSecretsResult {
    /**
     * The OCID of the compartment where you want to create the secret.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.Vault.GetSecretsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    /**
     * The list of secrets.
     */
    readonly secrets: outputs.Vault.GetSecretsSecret[];
    /**
     * The current lifecycle state of the secret.
     */
    readonly state?: string;
    /**
     * The OCID of the Vault in which the secret exists
     */
    readonly vaultId?: string;
}
/**
 * This data source provides the list of Secrets in Oracle Cloud Infrastructure Vault service.
 *
 * Lists all secrets in the specified vault and compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecrets = oci.Vault.getSecrets({
 *     compartmentId: compartmentId,
 *     name: secretName,
 *     state: secretState,
 *     vaultId: testVault.id,
 * });
 * ```
 */
export function getSecretsOutput(args: GetSecretsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecretsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Vault/getSecrets:getSecrets", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
        "vaultId": args.vaultId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsOutputArgs {
    /**
     * The OCID of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Vault.GetSecretsFilterArgs>[]>;
    /**
     * The secret name.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter that returns only resources that match the specified lifecycle state. The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
    /**
     * The OCID of the vault.
     */
    vaultId?: pulumi.Input<string>;
}
