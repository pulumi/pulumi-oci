// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Secret resource in Oracle Cloud Infrastructure Vault service.
 *
 * Creates a new secret according to the details of the request.
 *
 * ## Import
 *
 * Secrets can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Vault/secret:Secret test_secret "id"
 * ```
 */
export class Secret extends pulumi.CustomResource {
    /**
     * Get an existing Secret resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecretState, opts?: pulumi.CustomResourceOptions): Secret {
        return new Secret(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Vault/secret:Secret';

    /**
     * Returns true if the given object is an instance of Secret.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Secret {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Secret.__pulumiType;
    }

    /**
     * (Updatable) The OCID of the compartment where you want to create the secret.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * The version number of the secret version that's currently in use.
     */
    public /*out*/ readonly currentVersionNumber!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A brief description of the secret. Avoid entering confidential information.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The OCID of the master encryption key that is used to encrypt the secret.
     */
    public readonly keyId!: pulumi.Output<string>;
    /**
     * Additional information about the current lifecycle state of the secret.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) Additional metadata that you can use to provide context about how to use the secret during rotation or other administrative tasks. For example, for a secret that you use to connect to a database, the additional metadata might specify the connection endpoint and the connection string. Provide additional metadata as key-value pairs.
     */
    public readonly metadata!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The content of the secret and metadata to help identify it.
     */
    public readonly secretContent!: pulumi.Output<outputs.Vault.SecretSecretContent>;
    /**
     * A user-friendly name for the secret. Secret names should be unique within a vault. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     */
    public readonly secretName!: pulumi.Output<string>;
    /**
     * (Updatable) A list of rules to control how the secret is used and managed.
     */
    public readonly secretRules!: pulumi.Output<outputs.Vault.SecretSecretRule[]>;
    /**
     * The current lifecycle state of the secret.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * A property indicating when the secret was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * An optional property indicating when the current secret version will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    public /*out*/ readonly timeOfCurrentVersionExpiry!: pulumi.Output<string>;
    /**
     * An optional property indicating when to delete the secret, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    public /*out*/ readonly timeOfDeletion!: pulumi.Output<string>;
    /**
     * The OCID of the vault where you want to create the secret.
     */
    public readonly vaultId!: pulumi.Output<string>;

    /**
     * Create a Secret resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecretArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecretArgs | SecretState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecretState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["currentVersionNumber"] = state ? state.currentVersionNumber : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["keyId"] = state ? state.keyId : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["secretContent"] = state ? state.secretContent : undefined;
            resourceInputs["secretName"] = state ? state.secretName : undefined;
            resourceInputs["secretRules"] = state ? state.secretRules : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeOfCurrentVersionExpiry"] = state ? state.timeOfCurrentVersionExpiry : undefined;
            resourceInputs["timeOfDeletion"] = state ? state.timeOfDeletion : undefined;
            resourceInputs["vaultId"] = state ? state.vaultId : undefined;
        } else {
            const args = argsOrState as SecretArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.keyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyId'");
            }
            if ((!args || args.secretContent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretContent'");
            }
            if ((!args || args.secretName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretName'");
            }
            if ((!args || args.vaultId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["keyId"] = args ? args.keyId : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["secretContent"] = args ? args.secretContent : undefined;
            resourceInputs["secretName"] = args ? args.secretName : undefined;
            resourceInputs["secretRules"] = args ? args.secretRules : undefined;
            resourceInputs["vaultId"] = args ? args.vaultId : undefined;
            resourceInputs["currentVersionNumber"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeOfCurrentVersionExpiry"] = undefined /*out*/;
            resourceInputs["timeOfDeletion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Secret.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Secret resources.
 */
export interface SecretState {
    /**
     * (Updatable) The OCID of the compartment where you want to create the secret.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The version number of the secret version that's currently in use.
     */
    currentVersionNumber?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A brief description of the secret. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The OCID of the master encryption key that is used to encrypt the secret.
     */
    keyId?: pulumi.Input<string>;
    /**
     * Additional information about the current lifecycle state of the secret.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Additional metadata that you can use to provide context about how to use the secret during rotation or other administrative tasks. For example, for a secret that you use to connect to a database, the additional metadata might specify the connection endpoint and the connection string. Provide additional metadata as key-value pairs.
     */
    metadata?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The content of the secret and metadata to help identify it.
     */
    secretContent?: pulumi.Input<inputs.Vault.SecretSecretContent>;
    /**
     * A user-friendly name for the secret. Secret names should be unique within a vault. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     */
    secretName?: pulumi.Input<string>;
    /**
     * (Updatable) A list of rules to control how the secret is used and managed.
     */
    secretRules?: pulumi.Input<pulumi.Input<inputs.Vault.SecretSecretRule>[]>;
    /**
     * The current lifecycle state of the secret.
     */
    state?: pulumi.Input<string>;
    /**
     * A property indicating when the secret was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * An optional property indicating when the current secret version will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfCurrentVersionExpiry?: pulumi.Input<string>;
    /**
     * An optional property indicating when to delete the secret, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfDeletion?: pulumi.Input<string>;
    /**
     * The OCID of the vault where you want to create the secret.
     */
    vaultId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Secret resource.
 */
export interface SecretArgs {
    /**
     * (Updatable) The OCID of the compartment where you want to create the secret.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A brief description of the secret. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The OCID of the master encryption key that is used to encrypt the secret.
     */
    keyId: pulumi.Input<string>;
    /**
     * (Updatable) Additional metadata that you can use to provide context about how to use the secret during rotation or other administrative tasks. For example, for a secret that you use to connect to a database, the additional metadata might specify the connection endpoint and the connection string. Provide additional metadata as key-value pairs.
     */
    metadata?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The content of the secret and metadata to help identify it.
     */
    secretContent: pulumi.Input<inputs.Vault.SecretSecretContent>;
    /**
     * A user-friendly name for the secret. Secret names should be unique within a vault. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     */
    secretName: pulumi.Input<string>;
    /**
     * (Updatable) A list of rules to control how the secret is used and managed.
     */
    secretRules?: pulumi.Input<pulumi.Input<inputs.Vault.SecretSecretRule>[]>;
    /**
     * The OCID of the vault where you want to create the secret.
     */
    vaultId: pulumi.Input<string>;
}
