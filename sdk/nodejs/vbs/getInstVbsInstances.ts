// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Vbs Instances in Oracle Cloud Infrastructure Vbs Inst service.
 *
 * Returns a list of VbsInstances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVbsInstances = oci.Vbs.getInstVbsInstances({
 *     compartmentId: _var.compartment_id,
 *     id: _var.vbs_instance_id,
 *     name: _var.vbs_instance_name,
 *     state: _var.vbs_instance_state,
 * });
 * ```
 */
export function getInstVbsInstances(args: GetInstVbsInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstVbsInstancesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Vbs/getInstVbsInstances:getInstVbsInstances", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstVbsInstances.
 */
export interface GetInstVbsInstancesArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    filters?: inputs.Vbs.GetInstVbsInstancesFilter[];
    /**
     * unique VbsInstance identifier
     */
    id?: string;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getInstVbsInstances.
 */
export interface GetInstVbsInstancesResult {
    /**
     * Compartment of the service instance
     */
    readonly compartmentId: string;
    readonly filters?: outputs.Vbs.GetInstVbsInstancesFilter[];
    /**
     * Unique identifier that is immutable on creation
     */
    readonly id?: string;
    /**
     * Service instance name (unique identifier)
     */
    readonly name?: string;
    /**
     * The current state of the VbsInstance.
     */
    readonly state?: string;
    /**
     * The list of vbs_instance_summary_collection.
     */
    readonly vbsInstanceSummaryCollections: outputs.Vbs.GetInstVbsInstancesVbsInstanceSummaryCollection[];
}
/**
 * This data source provides the list of Vbs Instances in Oracle Cloud Infrastructure Vbs Inst service.
 *
 * Returns a list of VbsInstances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVbsInstances = oci.Vbs.getInstVbsInstances({
 *     compartmentId: _var.compartment_id,
 *     id: _var.vbs_instance_id,
 *     name: _var.vbs_instance_name,
 *     state: _var.vbs_instance_state,
 * });
 * ```
 */
export function getInstVbsInstancesOutput(args: GetInstVbsInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstVbsInstancesResult> {
    return pulumi.output(args).apply((a: any) => getInstVbsInstances(a, opts))
}

/**
 * A collection of arguments for invoking getInstVbsInstances.
 */
export interface GetInstVbsInstancesOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Vbs.GetInstVbsInstancesFilterArgs>[]>;
    /**
     * unique VbsInstance identifier
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
