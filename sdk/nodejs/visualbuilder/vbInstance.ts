// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Vb Instance resource in Oracle Cloud Infrastructure Visual Builder service.
 *
 * Creates a new Vb Instance.
 *
 * ## Import
 *
 * VbInstances can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:VisualBuilder/vbInstance:VbInstance test_vb_instance "id"
 * ```
 */
export class VbInstance extends pulumi.CustomResource {
    /**
     * Get an existing VbInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VbInstanceState, opts?: pulumi.CustomResourceOptions): VbInstance {
        return new VbInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:VisualBuilder/vbInstance:VbInstance';

    /**
     * Returns true if the given object is an instance of VbInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VbInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VbInstance.__pulumiType;
    }

    /**
     * (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     */
    declare public readonly alternateCustomEndpoints: pulumi.Output<outputs.VisualBuilder.VbInstanceAlternateCustomEndpoint[]>;
    /**
     * (Updatable) Compartment Identifier.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     */
    declare public readonly consumptionModel: pulumi.Output<string>;
    /**
     * (Updatable) Details for a custom endpoint for the vb instance (update).
     */
    declare public readonly customEndpoint: pulumi.Output<outputs.VisualBuilder.VbInstanceCustomEndpoint>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Vb Instance Identifier.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
     */
    declare public readonly idcsOpenId: pulumi.Output<string | undefined>;
    /**
     * The Vb Instance URL.
     */
    declare public /*out*/ readonly instanceUrl: pulumi.Output<string>;
    /**
     * (Updatable) Visual Builder is enabled or not.
     */
    declare public readonly isVisualBuilderEnabled: pulumi.Output<boolean>;
    /**
     * The NAT gateway IP address for the VB management VCN
     */
    declare public /*out*/ readonly managementNatGatewayIp: pulumi.Output<string>;
    /**
     * The Oracle Cloud ID (OCID) of the Visual Builder management VCN
     */
    declare public /*out*/ readonly managementVcnId: pulumi.Output<string>;
    /**
     * (Updatable) Base representation of a network endpoint. In input payload to update an Visual Builder instance endpoint details, an empty payload will clear out any existing configuration for Public Visual Builder instance.
     */
    declare public readonly networkEndpointDetails: pulumi.Output<outputs.VisualBuilder.VbInstanceNetworkEndpointDetails>;
    /**
     * (Updatable) The number of Nodes
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly nodeCount: pulumi.Output<number>;
    /**
     * The NAT gateway IP address for the VB service VCN
     */
    declare public /*out*/ readonly serviceNatGatewayIp: pulumi.Output<string>;
    /**
     * The Oracle Cloud ID (OCID) of the Visual Builder service VCN
     */
    declare public /*out*/ readonly serviceVcnId: pulumi.Output<string>;
    /**
     * The current state of the vb instance.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly stateMessage: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time the the VbInstance was created. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time the VbInstance was updated. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a VbInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VbInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VbInstanceArgs | VbInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VbInstanceState | undefined;
            resourceInputs["alternateCustomEndpoints"] = state?.alternateCustomEndpoints;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["consumptionModel"] = state?.consumptionModel;
            resourceInputs["customEndpoint"] = state?.customEndpoint;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["idcsOpenId"] = state?.idcsOpenId;
            resourceInputs["instanceUrl"] = state?.instanceUrl;
            resourceInputs["isVisualBuilderEnabled"] = state?.isVisualBuilderEnabled;
            resourceInputs["managementNatGatewayIp"] = state?.managementNatGatewayIp;
            resourceInputs["managementVcnId"] = state?.managementVcnId;
            resourceInputs["networkEndpointDetails"] = state?.networkEndpointDetails;
            resourceInputs["nodeCount"] = state?.nodeCount;
            resourceInputs["serviceNatGatewayIp"] = state?.serviceNatGatewayIp;
            resourceInputs["serviceVcnId"] = state?.serviceVcnId;
            resourceInputs["state"] = state?.state;
            resourceInputs["stateMessage"] = state?.stateMessage;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as VbInstanceArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.nodeCount === undefined && !opts.urn) {
                throw new Error("Missing required property 'nodeCount'");
            }
            resourceInputs["alternateCustomEndpoints"] = args?.alternateCustomEndpoints;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["consumptionModel"] = args?.consumptionModel;
            resourceInputs["customEndpoint"] = args?.customEndpoint;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["idcsOpenId"] = args?.idcsOpenId ? pulumi.secret(args.idcsOpenId) : undefined;
            resourceInputs["isVisualBuilderEnabled"] = args?.isVisualBuilderEnabled;
            resourceInputs["networkEndpointDetails"] = args?.networkEndpointDetails;
            resourceInputs["nodeCount"] = args?.nodeCount;
            resourceInputs["instanceUrl"] = undefined /*out*/;
            resourceInputs["managementNatGatewayIp"] = undefined /*out*/;
            resourceInputs["managementVcnId"] = undefined /*out*/;
            resourceInputs["serviceNatGatewayIp"] = undefined /*out*/;
            resourceInputs["serviceVcnId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["idcsOpenId"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(VbInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VbInstance resources.
 */
export interface VbInstanceState {
    /**
     * (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     */
    alternateCustomEndpoints?: pulumi.Input<pulumi.Input<inputs.VisualBuilder.VbInstanceAlternateCustomEndpoint>[]>;
    /**
     * (Updatable) Compartment Identifier.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     */
    consumptionModel?: pulumi.Input<string>;
    /**
     * (Updatable) Details for a custom endpoint for the vb instance (update).
     */
    customEndpoint?: pulumi.Input<inputs.VisualBuilder.VbInstanceCustomEndpoint>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Vb Instance Identifier.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
     */
    idcsOpenId?: pulumi.Input<string>;
    /**
     * The Vb Instance URL.
     */
    instanceUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Visual Builder is enabled or not.
     */
    isVisualBuilderEnabled?: pulumi.Input<boolean>;
    /**
     * The NAT gateway IP address for the VB management VCN
     */
    managementNatGatewayIp?: pulumi.Input<string>;
    /**
     * The Oracle Cloud ID (OCID) of the Visual Builder management VCN
     */
    managementVcnId?: pulumi.Input<string>;
    /**
     * (Updatable) Base representation of a network endpoint. In input payload to update an Visual Builder instance endpoint details, an empty payload will clear out any existing configuration for Public Visual Builder instance.
     */
    networkEndpointDetails?: pulumi.Input<inputs.VisualBuilder.VbInstanceNetworkEndpointDetails>;
    /**
     * (Updatable) The number of Nodes
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    nodeCount?: pulumi.Input<number>;
    /**
     * The NAT gateway IP address for the VB service VCN
     */
    serviceNatGatewayIp?: pulumi.Input<string>;
    /**
     * The Oracle Cloud ID (OCID) of the Visual Builder service VCN
     */
    serviceVcnId?: pulumi.Input<string>;
    /**
     * The current state of the vb instance.
     */
    state?: pulumi.Input<string>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    stateMessage?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time the the VbInstance was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the VbInstance was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VbInstance resource.
 */
export interface VbInstanceArgs {
    /**
     * (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     */
    alternateCustomEndpoints?: pulumi.Input<pulumi.Input<inputs.VisualBuilder.VbInstanceAlternateCustomEndpoint>[]>;
    /**
     * (Updatable) Compartment Identifier.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     */
    consumptionModel?: pulumi.Input<string>;
    /**
     * (Updatable) Details for a custom endpoint for the vb instance (update).
     */
    customEndpoint?: pulumi.Input<inputs.VisualBuilder.VbInstanceCustomEndpoint>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Vb Instance Identifier.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
     */
    idcsOpenId?: pulumi.Input<string>;
    /**
     * (Updatable) Visual Builder is enabled or not.
     */
    isVisualBuilderEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Base representation of a network endpoint. In input payload to update an Visual Builder instance endpoint details, an empty payload will clear out any existing configuration for Public Visual Builder instance.
     */
    networkEndpointDetails?: pulumi.Input<inputs.VisualBuilder.VbInstanceNetworkEndpointDetails>;
    /**
     * (Updatable) The number of Nodes
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    nodeCount: pulumi.Input<number>;
}
