// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Container Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
 *
 * Gets a ContainerScanTarget identified by the target ID. A container scan target specifies a group of one or more Docker image repositories in Oracle Cloud Infrastructure Registry (OCIR) that you want routinely scanned for security vulnerabilities.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testContainerScanTarget = oci.VulnerabilityScanning.getContainerScanTarget({
 *     containerScanTargetId: testContainerScanTargetOciVulnerabilityScanningContainerScanTarget.id,
 * });
 * ```
 */
export function getContainerScanTarget(args: GetContainerScanTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerScanTargetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:VulnerabilityScanning/getContainerScanTarget:getContainerScanTarget", {
        "containerScanTargetId": args.containerScanTargetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getContainerScanTarget.
 */
export interface GetContainerScanTargetArgs {
    /**
     * unique ContainerScanTarget identifier
     */
    containerScanTargetId: string;
}

/**
 * A collection of values returned by getContainerScanTarget.
 */
export interface GetContainerScanTargetResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
     */
    readonly compartmentId: string;
    /**
     * ID of the container scan recipe this target applies.
     */
    readonly containerScanRecipeId: string;
    readonly containerScanTargetId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Target description.
     */
    readonly description: string;
    /**
     * User friendly name of container scan target
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan target. Immutable and generated on creation.
     */
    readonly id: string;
    /**
     * The current state of the config.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * Registry information for a container scan target
     */
    readonly targetRegistries: outputs.VulnerabilityScanning.GetContainerScanTargetTargetRegistry[];
    /**
     * Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    readonly timeCreated: string;
    /**
     * Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Container Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
 *
 * Gets a ContainerScanTarget identified by the target ID. A container scan target specifies a group of one or more Docker image repositories in Oracle Cloud Infrastructure Registry (OCIR) that you want routinely scanned for security vulnerabilities.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testContainerScanTarget = oci.VulnerabilityScanning.getContainerScanTarget({
 *     containerScanTargetId: testContainerScanTargetOciVulnerabilityScanningContainerScanTarget.id,
 * });
 * ```
 */
export function getContainerScanTargetOutput(args: GetContainerScanTargetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetContainerScanTargetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:VulnerabilityScanning/getContainerScanTarget:getContainerScanTarget", {
        "containerScanTargetId": args.containerScanTargetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getContainerScanTarget.
 */
export interface GetContainerScanTargetOutputArgs {
    /**
     * unique ContainerScanTarget identifier
     */
    containerScanTargetId: pulumi.Input<string>;
}
