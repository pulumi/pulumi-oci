// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Host Scan Recipe resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
 *
 * Retrieves a HostScanRecipe identified by the recipe ID. A recipe determines the types of security issues that you want scanned, and how often to scan.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testHostScanRecipe = oci.VulnerabilityScanning.getHostScanRecipe({
 *     hostScanRecipeId: oci_vulnerability_scanning_host_scan_recipe.test_host_scan_recipe.id,
 * });
 * ```
 */
export function getHostScanRecipe(args: GetHostScanRecipeArgs, opts?: pulumi.InvokeOptions): Promise<GetHostScanRecipeResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:VulnerabilityScanning/getHostScanRecipe:getHostScanRecipe", {
        "hostScanRecipeId": args.hostScanRecipeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getHostScanRecipe.
 */
export interface GetHostScanRecipeArgs {
    /**
     * unique HostScanRecipe identifier
     */
    hostScanRecipeId: string;
}

/**
 * A collection of values returned by getHostScanRecipe.
 */
export interface GetHostScanRecipeResult {
    /**
     * Agent scan settings for a host scan
     */
    readonly agentSettings: outputs.VulnerabilityScanning.GetHostScanRecipeAgentSetting[];
    /**
     * Agent scan settings for an application scan (as a part of a host scan)
     */
    readonly applicationSettings: outputs.VulnerabilityScanning.GetHostScanRecipeApplicationSetting[];
    /**
     * Compartment ID of the scan recipe
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * Recipe identifier, which can be renamed
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    readonly hostScanRecipeId: string;
    /**
     * Unique identifier of the config that is immutable on creation
     */
    readonly id: string;
    /**
     * Port scan settings for a host scan
     */
    readonly portSettings: outputs.VulnerabilityScanning.GetHostScanRecipePortSetting[];
    /**
     * A scanning schedule
     */
    readonly schedules: outputs.VulnerabilityScanning.GetHostScanRecipeSchedule[];
    /**
     * The current state of the config.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    readonly timeCreated: string;
    /**
     * Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    readonly timeUpdated: string;
}

export function getHostScanRecipeOutput(args: GetHostScanRecipeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostScanRecipeResult> {
    return pulumi.output(args).apply(a => getHostScanRecipe(a, opts))
}

/**
 * A collection of arguments for invoking getHostScanRecipe.
 */
export interface GetHostScanRecipeOutputArgs {
    /**
     * unique HostScanRecipe identifier
     */
    hostScanRecipeId: pulumi.Input<string>;
}
