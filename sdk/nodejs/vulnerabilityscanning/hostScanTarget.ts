// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Host Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
 *
 * Creates a new HostScanTarget. A host scan target is a collection of compute instances that you want routinely scanned for security vulnerabilities.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testHostScanTarget = new oci.vulnerabilityscanning.HostScanTarget("testHostScanTarget", {
 *     compartmentId: _var.compartment_id,
 *     hostScanRecipeId: oci_vulnerability_scanning_host_scan_recipe.test_host_scan_recipe.id,
 *     targetCompartmentId: oci_identity_compartment.test_compartment.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.host_scan_target_description,
 *     displayName: _var.host_scan_target_display_name,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     instanceIds: _var.host_scan_target_instance_ids,
 * });
 * ```
 *
 * ## Import
 *
 * HostScanTargets can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:VulnerabilityScanning/hostScanTarget:HostScanTarget test_host_scan_target "id"
 * ```
 */
export class HostScanTarget extends pulumi.CustomResource {
    /**
     * Get an existing HostScanTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostScanTargetState, opts?: pulumi.CustomResourceOptions): HostScanTarget {
        return new HostScanTarget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:VulnerabilityScanning/hostScanTarget:HostScanTarget';

    /**
     * Returns true if the given object is an instance of HostScanTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostScanTarget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostScanTarget.__pulumiType;
    }

    /**
     * (Updatable) Compartment ID of the object (this).
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * (Updatable) Target description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * (Updatable) ID of the host scan recipe this target applies.
     */
    public readonly hostScanRecipeId!: pulumi.Output<string>;
    /**
     * (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
     */
    public readonly instanceIds!: pulumi.Output<string[] | undefined>;
    /**
     * The current state of the config.
     */
    public /*out*/ readonly state!: pulumi.Output<string | undefined>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly targetCompartmentId!: pulumi.Output<string>;
    /**
     * Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string | undefined>;
    /**
     * Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string | undefined>;

    /**
     * Create a HostScanTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostScanTargetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostScanTargetArgs | HostScanTargetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostScanTargetState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["hostScanRecipeId"] = state ? state.hostScanRecipeId : undefined;
            resourceInputs["instanceIds"] = state ? state.instanceIds : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["targetCompartmentId"] = state ? state.targetCompartmentId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as HostScanTargetArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.hostScanRecipeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostScanRecipeId'");
            }
            if ((!args || args.targetCompartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetCompartmentId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["hostScanRecipeId"] = args ? args.hostScanRecipeId : undefined;
            resourceInputs["instanceIds"] = args ? args.instanceIds : undefined;
            resourceInputs["targetCompartmentId"] = args ? args.targetCompartmentId : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HostScanTarget.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HostScanTarget resources.
 */
export interface HostScanTargetState {
    /**
     * (Updatable) Compartment ID of the object (this).
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Target description.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) ID of the host scan recipe this target applies.
     */
    hostScanRecipeId?: pulumi.Input<string>;
    /**
     * (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
     */
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The current state of the config.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    targetCompartmentId?: pulumi.Input<string>;
    /**
     * Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HostScanTarget resource.
 */
export interface HostScanTargetArgs {
    /**
     * (Updatable) Compartment ID of the object (this).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Target description.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) ID of the host scan recipe this target applies.
     */
    hostScanRecipeId: pulumi.Input<string>;
    /**
     * (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
     */
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    targetCompartmentId: pulumi.Input<string>;
}
