// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Certificate resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
 *
 * Allows an SSL certificate to be added to a WAAS policy. The Web Application Firewall terminates SSL connections to inspect requests in runtime, and then re-encrypts requests before sending them to the origin for fulfillment.
 *
 * For more information, see [WAF Settings](https://docs.cloud.oracle.com/iaas/Content/WAF/Tasks/wafsettings.htm).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCertificate = new oci.waas.Certificate("testCertificate", {
 *     certificateData: _var.certificate_certificate_data,
 *     compartmentId: _var.compartment_id,
 *     privateKeyData: _var.certificate_private_key_data,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     displayName: _var.certificate_display_name,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     isTrustVerificationDisabled: _var.certificate_is_trust_verification_disabled,
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class Certificate extends pulumi.CustomResource {
    /**
     * Get an existing Certificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificateState, opts?: pulumi.CustomResourceOptions): Certificate {
        return new Certificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Waas/certificate:Certificate';

    /**
     * Returns true if the given object is an instance of Certificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Certificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Certificate.__pulumiType;
    }

    /**
     * The data of the SSL certificate.
     */
    public readonly certificateData!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the SSL certificate.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name for the SSL certificate. The name can be changed and does not need to be unique.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     */
    public /*out*/ readonly extensions!: pulumi.Output<outputs.Waas.CertificateExtension[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Set to `true` if the SSL certificate is self-signed.
     */
    public readonly isTrustVerificationDisabled!: pulumi.Output<boolean>;
    public /*out*/ readonly issuedBy!: pulumi.Output<string>;
    /**
     * The issuer of the certificate.
     */
    public /*out*/ readonly issuerNames!: pulumi.Output<outputs.Waas.CertificateIssuerName[]>;
    /**
     * The private key of the SSL certificate.
     */
    public readonly privateKeyData!: pulumi.Output<string>;
    /**
     * Information about the public key and the algorithm used by the public key.
     */
    public /*out*/ readonly publicKeyInfos!: pulumi.Output<outputs.Waas.CertificatePublicKeyInfo[]>;
    /**
     * A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     */
    public /*out*/ readonly serialNumber!: pulumi.Output<string>;
    /**
     * The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     */
    public /*out*/ readonly signatureAlgorithm!: pulumi.Output<string>;
    /**
     * The current lifecycle state of the SSL certificate.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The entity to be secured by the certificate.
     */
    public /*out*/ readonly subjectNames!: pulumi.Output<outputs.Waas.CertificateSubjectName[]>;
    /**
     * The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     */
    public /*out*/ readonly timeNotValidAfter!: pulumi.Output<string>;
    /**
     * The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     */
    public /*out*/ readonly timeNotValidBefore!: pulumi.Output<string>;
    /**
     * The version of the encoded certificate.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a Certificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CertificateArgs | CertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CertificateState | undefined;
            resourceInputs["certificateData"] = state ? state.certificateData : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["extensions"] = state ? state.extensions : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isTrustVerificationDisabled"] = state ? state.isTrustVerificationDisabled : undefined;
            resourceInputs["issuedBy"] = state ? state.issuedBy : undefined;
            resourceInputs["issuerNames"] = state ? state.issuerNames : undefined;
            resourceInputs["privateKeyData"] = state ? state.privateKeyData : undefined;
            resourceInputs["publicKeyInfos"] = state ? state.publicKeyInfos : undefined;
            resourceInputs["serialNumber"] = state ? state.serialNumber : undefined;
            resourceInputs["signatureAlgorithm"] = state ? state.signatureAlgorithm : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subjectNames"] = state ? state.subjectNames : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeNotValidAfter"] = state ? state.timeNotValidAfter : undefined;
            resourceInputs["timeNotValidBefore"] = state ? state.timeNotValidBefore : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CertificateArgs | undefined;
            if ((!args || args.certificateData === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificateData'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.privateKeyData === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateKeyData'");
            }
            resourceInputs["certificateData"] = args ? args.certificateData : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isTrustVerificationDisabled"] = args ? args.isTrustVerificationDisabled : undefined;
            resourceInputs["privateKeyData"] = args ? args.privateKeyData : undefined;
            resourceInputs["extensions"] = undefined /*out*/;
            resourceInputs["issuedBy"] = undefined /*out*/;
            resourceInputs["issuerNames"] = undefined /*out*/;
            resourceInputs["publicKeyInfos"] = undefined /*out*/;
            resourceInputs["serialNumber"] = undefined /*out*/;
            resourceInputs["signatureAlgorithm"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["subjectNames"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeNotValidAfter"] = undefined /*out*/;
            resourceInputs["timeNotValidBefore"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Certificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Certificate resources.
 */
export interface CertificateState {
    /**
     * The data of the SSL certificate.
     */
    certificateData?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the SSL certificate.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name for the SSL certificate. The name can be changed and does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     */
    extensions?: pulumi.Input<pulumi.Input<inputs.Waas.CertificateExtension>[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Set to `true` if the SSL certificate is self-signed.
     */
    isTrustVerificationDisabled?: pulumi.Input<boolean>;
    issuedBy?: pulumi.Input<string>;
    /**
     * The issuer of the certificate.
     */
    issuerNames?: pulumi.Input<pulumi.Input<inputs.Waas.CertificateIssuerName>[]>;
    /**
     * The private key of the SSL certificate.
     */
    privateKeyData?: pulumi.Input<string>;
    /**
     * Information about the public key and the algorithm used by the public key.
     */
    publicKeyInfos?: pulumi.Input<pulumi.Input<inputs.Waas.CertificatePublicKeyInfo>[]>;
    /**
     * A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the SSL certificate.
     */
    state?: pulumi.Input<string>;
    /**
     * The entity to be secured by the certificate.
     */
    subjectNames?: pulumi.Input<pulumi.Input<inputs.Waas.CertificateSubjectName>[]>;
    /**
     * The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     */
    timeNotValidAfter?: pulumi.Input<string>;
    /**
     * The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     */
    timeNotValidBefore?: pulumi.Input<string>;
    /**
     * The version of the encoded certificate.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Certificate resource.
 */
export interface CertificateArgs {
    /**
     * The data of the SSL certificate.
     */
    certificateData: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the SSL certificate.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name for the SSL certificate. The name can be changed and does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Set to `true` if the SSL certificate is self-signed.
     */
    isTrustVerificationDisabled?: pulumi.Input<boolean>;
    /**
     * The private key of the SSL certificate.
     */
    privateKeyData: pulumi.Input<string>;
}
