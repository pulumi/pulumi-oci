// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Custom Protection Rule resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
 *
 * Creates a new custom protection rule in the specified compartment.
 *
 * Custom protection rules allow you to create rules in addition to the rulesets provided by the Web Application Firewall service, including rules from [ModSecurity](https://modsecurity.org/). The syntax for custom rules is based on the ModSecurity syntax. For more information about custom protection rules, see [Custom Protection Rules](https://docs.cloud.oracle.com/iaas/Content/WAF/Tasks/customprotectionrules.htm).
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCustomProtectionRule = new oci.waas.CustomProtectionRule("testCustomProtectionRule", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.custom_protection_rule_display_name,
 *     template: _var.custom_protection_rule_template,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     description: _var.custom_protection_rule_description,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * CustomProtectionRules can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Waas/customProtectionRule:CustomProtectionRule test_custom_protection_rule "id"
 * ```
 */
export class CustomProtectionRule extends pulumi.CustomResource {
    /**
     * Get an existing CustomProtectionRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomProtectionRuleState, opts?: pulumi.CustomResourceOptions): CustomProtectionRule {
        return new CustomProtectionRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Waas/customProtectionRule:CustomProtectionRule';

    /**
     * Returns true if the given object is an instance of CustomProtectionRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomProtectionRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomProtectionRule.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the custom protection rule.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A description for the Custom Protection rule.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly name for the custom protection rule.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The auto-generated ID for the custom protection rule. These IDs are referenced in logs.
     */
    public /*out*/ readonly modSecurityRuleIds!: pulumi.Output<string[]>;
    /**
     * The current lifecycle state of the custom protection rule.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) The template text of the custom protection rule. All custom protection rules are expressed in ModSecurity Rule Language.
     *
     * Additionally, each rule must include two placeholder variables that are updated by the WAF service upon publication of the rule.
     *
     * `id: {{id_1}}` - This field is populated with a unique rule ID generated by the WAF service which identifies a `SecRule`. More than one `SecRule` can be defined in the `template` field of a CreateCustomSecurityRule call. The value of the first `SecRule` must be `id: {{id_1}}` and the `id` field of each subsequent `SecRule` should increase by one, as shown in the example.
     *
     * `ctl:ruleEngine={{mode}}` - The action to be taken when the criteria of the `SecRule` are met, either `OFF`, `DETECT` or `BLOCK`. This field is automatically populated with the corresponding value of the `action` field of the `CustomProtectionRuleSetting` schema when the `WafConfig` is updated.
     *
     * *Example:* ``` SecRule REQUEST_COOKIES "regex matching SQL injection - part 1/2" \ "phase:2,                                                 \ msg:'Detects chained SQL injection attempts 1/2.',        \ id: {{id_1}},                                             \ ctl:ruleEngine={{mode}},                                  \ deny" SecRule REQUEST_COOKIES "regex matching SQL injection - part 2/2" \ "phase:2,                                                 \ msg:'Detects chained SQL injection attempts 2/2.',        \ id: {{id_2}},                                             \ ctl:ruleEngine={{mode}},                                  \ deny" ```
     *
     * The example contains two `SecRules` each having distinct regex expression to match the `Cookie` header value during the second input analysis phase.
     *
     * For more information about custom protection rules, see [Custom Protection Rules](https://docs.cloud.oracle.com/iaas/Content/WAF/tasks/customprotectionrules.htm).
     *
     * For more information about ModSecurity syntax, see [Making Rules: The Basic Syntax](https://www.modsecurity.org/CRS/Documentation/making.html).
     *
     * For more information about ModSecurity's open source WAF rules, see [Mod Security's OWASP Core Rule Set documentation](https://www.modsecurity.org/CRS/Documentation/index.html).
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly template!: pulumi.Output<string>;
    /**
     * The date and time the protection rule was created, expressed in RFC 3339 timestamp format.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;

    /**
     * Create a CustomProtectionRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomProtectionRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomProtectionRuleArgs | CustomProtectionRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomProtectionRuleState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["modSecurityRuleIds"] = state ? state.modSecurityRuleIds : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
        } else {
            const args = argsOrState as CustomProtectionRuleArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.template === undefined) && !opts.urn) {
                throw new Error("Missing required property 'template'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["modSecurityRuleIds"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomProtectionRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomProtectionRule resources.
 */
export interface CustomProtectionRuleState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the custom protection rule.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A description for the Custom Protection rule.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name for the custom protection rule.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The auto-generated ID for the custom protection rule. These IDs are referenced in logs.
     */
    modSecurityRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The current lifecycle state of the custom protection rule.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) The template text of the custom protection rule. All custom protection rules are expressed in ModSecurity Rule Language.
     *
     * Additionally, each rule must include two placeholder variables that are updated by the WAF service upon publication of the rule.
     *
     * `id: {{id_1}}` - This field is populated with a unique rule ID generated by the WAF service which identifies a `SecRule`. More than one `SecRule` can be defined in the `template` field of a CreateCustomSecurityRule call. The value of the first `SecRule` must be `id: {{id_1}}` and the `id` field of each subsequent `SecRule` should increase by one, as shown in the example.
     *
     * `ctl:ruleEngine={{mode}}` - The action to be taken when the criteria of the `SecRule` are met, either `OFF`, `DETECT` or `BLOCK`. This field is automatically populated with the corresponding value of the `action` field of the `CustomProtectionRuleSetting` schema when the `WafConfig` is updated.
     *
     * *Example:* ``` SecRule REQUEST_COOKIES "regex matching SQL injection - part 1/2" \ "phase:2,                                                 \ msg:'Detects chained SQL injection attempts 1/2.',        \ id: {{id_1}},                                             \ ctl:ruleEngine={{mode}},                                  \ deny" SecRule REQUEST_COOKIES "regex matching SQL injection - part 2/2" \ "phase:2,                                                 \ msg:'Detects chained SQL injection attempts 2/2.',        \ id: {{id_2}},                                             \ ctl:ruleEngine={{mode}},                                  \ deny" ```
     *
     * The example contains two `SecRules` each having distinct regex expression to match the `Cookie` header value during the second input analysis phase.
     *
     * For more information about custom protection rules, see [Custom Protection Rules](https://docs.cloud.oracle.com/iaas/Content/WAF/tasks/customprotectionrules.htm).
     *
     * For more information about ModSecurity syntax, see [Making Rules: The Basic Syntax](https://www.modsecurity.org/CRS/Documentation/making.html).
     *
     * For more information about ModSecurity's open source WAF rules, see [Mod Security's OWASP Core Rule Set documentation](https://www.modsecurity.org/CRS/Documentation/index.html).
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    template?: pulumi.Input<string>;
    /**
     * The date and time the protection rule was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomProtectionRule resource.
 */
export interface CustomProtectionRuleArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the custom protection rule.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A description for the Custom Protection rule.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name for the custom protection rule.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The template text of the custom protection rule. All custom protection rules are expressed in ModSecurity Rule Language.
     *
     * Additionally, each rule must include two placeholder variables that are updated by the WAF service upon publication of the rule.
     *
     * `id: {{id_1}}` - This field is populated with a unique rule ID generated by the WAF service which identifies a `SecRule`. More than one `SecRule` can be defined in the `template` field of a CreateCustomSecurityRule call. The value of the first `SecRule` must be `id: {{id_1}}` and the `id` field of each subsequent `SecRule` should increase by one, as shown in the example.
     *
     * `ctl:ruleEngine={{mode}}` - The action to be taken when the criteria of the `SecRule` are met, either `OFF`, `DETECT` or `BLOCK`. This field is automatically populated with the corresponding value of the `action` field of the `CustomProtectionRuleSetting` schema when the `WafConfig` is updated.
     *
     * *Example:* ``` SecRule REQUEST_COOKIES "regex matching SQL injection - part 1/2" \ "phase:2,                                                 \ msg:'Detects chained SQL injection attempts 1/2.',        \ id: {{id_1}},                                             \ ctl:ruleEngine={{mode}},                                  \ deny" SecRule REQUEST_COOKIES "regex matching SQL injection - part 2/2" \ "phase:2,                                                 \ msg:'Detects chained SQL injection attempts 2/2.',        \ id: {{id_2}},                                             \ ctl:ruleEngine={{mode}},                                  \ deny" ```
     *
     * The example contains two `SecRules` each having distinct regex expression to match the `Cookie` header value during the second input analysis phase.
     *
     * For more information about custom protection rules, see [Custom Protection Rules](https://docs.cloud.oracle.com/iaas/Content/WAF/tasks/customprotectionrules.htm).
     *
     * For more information about ModSecurity syntax, see [Making Rules: The Basic Syntax](https://www.modsecurity.org/CRS/Documentation/making.html).
     *
     * For more information about ModSecurity's open source WAF rules, see [Mod Security's OWASP Core Rule Set documentation](https://www.modsecurity.org/CRS/Documentation/index.html).
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    template: pulumi.Input<string>;
}
