// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Protection Capability Group Tags in Oracle Cloud Infrastructure Waf service.
 *
 * Lists of available group tags filtered by query parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProtectionCapabilityGroupTags = oci.Waf.getProtectionCapabilityGroupTags({
 *     compartmentId: _var.compartment_id,
 *     name: _var.protection_capability_group_tag_name,
 *     type: _var.protection_capability_group_tag_type,
 * });
 * ```
 */
export function getProtectionCapabilityGroupTags(args: GetProtectionCapabilityGroupTagsArgs, opts?: pulumi.InvokeOptions): Promise<GetProtectionCapabilityGroupTagsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Waf/getProtectionCapabilityGroupTags:getProtectionCapabilityGroupTags", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getProtectionCapabilityGroupTags.
 */
export interface GetProtectionCapabilityGroupTagsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId: string;
    filters?: inputs.Waf.GetProtectionCapabilityGroupTagsFilter[];
    /**
     * A filter to return only resources that match the entire name given.
     */
    name?: string;
    /**
     * A filter to return only resources that matches given type.
     */
    type?: string;
}

/**
 * A collection of values returned by getProtectionCapabilityGroupTags.
 */
export interface GetProtectionCapabilityGroupTagsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.Waf.GetProtectionCapabilityGroupTagsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique name of protection capability group tag.
     */
    readonly name?: string;
    /**
     * The list of protection_capability_group_tag_collection.
     */
    readonly protectionCapabilityGroupTagCollections: outputs.Waf.GetProtectionCapabilityGroupTagsProtectionCapabilityGroupTagCollection[];
    readonly type?: string;
}

export function getProtectionCapabilityGroupTagsOutput(args: GetProtectionCapabilityGroupTagsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProtectionCapabilityGroupTagsResult> {
    return pulumi.output(args).apply(a => getProtectionCapabilityGroupTags(a, opts))
}

/**
 * A collection of arguments for invoking getProtectionCapabilityGroupTags.
 */
export interface GetProtectionCapabilityGroupTagsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Waf.GetProtectionCapabilityGroupTagsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only resources that matches given type.
     */
    type?: pulumi.Input<string>;
}
