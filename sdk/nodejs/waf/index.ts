// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AppFirewallArgs, AppFirewallState } from "./appFirewall";
export type AppFirewall = import("./appFirewall").AppFirewall;
export const AppFirewall: typeof import("./appFirewall").AppFirewall = null as any;
utilities.lazyLoad(exports, ["AppFirewall"], () => require("./appFirewall"));

export { AppFirewallPolicyArgs, AppFirewallPolicyState } from "./appFirewallPolicy";
export type AppFirewallPolicy = import("./appFirewallPolicy").AppFirewallPolicy;
export const AppFirewallPolicy: typeof import("./appFirewallPolicy").AppFirewallPolicy = null as any;
utilities.lazyLoad(exports, ["AppFirewallPolicy"], () => require("./appFirewallPolicy"));

export { GetFirewallsArgs, GetFirewallsResult, GetFirewallsOutputArgs } from "./getFirewalls";
export const getFirewalls: typeof import("./getFirewalls").getFirewalls = null as any;
export const getFirewallsOutput: typeof import("./getFirewalls").getFirewallsOutput = null as any;
utilities.lazyLoad(exports, ["getFirewalls","getFirewallsOutput"], () => require("./getFirewalls"));

export { GetNetworkAddressListArgs, GetNetworkAddressListResult, GetNetworkAddressListOutputArgs } from "./getNetworkAddressList";
export const getNetworkAddressList: typeof import("./getNetworkAddressList").getNetworkAddressList = null as any;
export const getNetworkAddressListOutput: typeof import("./getNetworkAddressList").getNetworkAddressListOutput = null as any;
utilities.lazyLoad(exports, ["getNetworkAddressList","getNetworkAddressListOutput"], () => require("./getNetworkAddressList"));

export { GetNetworkAddressListsArgs, GetNetworkAddressListsResult, GetNetworkAddressListsOutputArgs } from "./getNetworkAddressLists";
export const getNetworkAddressLists: typeof import("./getNetworkAddressLists").getNetworkAddressLists = null as any;
export const getNetworkAddressListsOutput: typeof import("./getNetworkAddressLists").getNetworkAddressListsOutput = null as any;
utilities.lazyLoad(exports, ["getNetworkAddressLists","getNetworkAddressListsOutput"], () => require("./getNetworkAddressLists"));

export { GetProtectionCapabilitiesArgs, GetProtectionCapabilitiesResult, GetProtectionCapabilitiesOutputArgs } from "./getProtectionCapabilities";
export const getProtectionCapabilities: typeof import("./getProtectionCapabilities").getProtectionCapabilities = null as any;
export const getProtectionCapabilitiesOutput: typeof import("./getProtectionCapabilities").getProtectionCapabilitiesOutput = null as any;
utilities.lazyLoad(exports, ["getProtectionCapabilities","getProtectionCapabilitiesOutput"], () => require("./getProtectionCapabilities"));

export { GetProtectionCapabilityGroupTagsArgs, GetProtectionCapabilityGroupTagsResult, GetProtectionCapabilityGroupTagsOutputArgs } from "./getProtectionCapabilityGroupTags";
export const getProtectionCapabilityGroupTags: typeof import("./getProtectionCapabilityGroupTags").getProtectionCapabilityGroupTags = null as any;
export const getProtectionCapabilityGroupTagsOutput: typeof import("./getProtectionCapabilityGroupTags").getProtectionCapabilityGroupTagsOutput = null as any;
utilities.lazyLoad(exports, ["getProtectionCapabilityGroupTags","getProtectionCapabilityGroupTagsOutput"], () => require("./getProtectionCapabilityGroupTags"));

export { GetWebAppFirewallArgs, GetWebAppFirewallResult, GetWebAppFirewallOutputArgs } from "./getWebAppFirewall";
export const getWebAppFirewall: typeof import("./getWebAppFirewall").getWebAppFirewall = null as any;
export const getWebAppFirewallOutput: typeof import("./getWebAppFirewall").getWebAppFirewallOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppFirewall","getWebAppFirewallOutput"], () => require("./getWebAppFirewall"));

export { GetWebAppFirewallPoliciesArgs, GetWebAppFirewallPoliciesResult, GetWebAppFirewallPoliciesOutputArgs } from "./getWebAppFirewallPolicies";
export const getWebAppFirewallPolicies: typeof import("./getWebAppFirewallPolicies").getWebAppFirewallPolicies = null as any;
export const getWebAppFirewallPoliciesOutput: typeof import("./getWebAppFirewallPolicies").getWebAppFirewallPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppFirewallPolicies","getWebAppFirewallPoliciesOutput"], () => require("./getWebAppFirewallPolicies"));

export { GetWebAppFirewallPolicyArgs, GetWebAppFirewallPolicyResult, GetWebAppFirewallPolicyOutputArgs } from "./getWebAppFirewallPolicy";
export const getWebAppFirewallPolicy: typeof import("./getWebAppFirewallPolicy").getWebAppFirewallPolicy = null as any;
export const getWebAppFirewallPolicyOutput: typeof import("./getWebAppFirewallPolicy").getWebAppFirewallPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getWebAppFirewallPolicy","getWebAppFirewallPolicyOutput"], () => require("./getWebAppFirewallPolicy"));

export { NetworkAddressListArgs, NetworkAddressListState } from "./networkAddressList";
export type NetworkAddressList = import("./networkAddressList").NetworkAddressList;
export const NetworkAddressList: typeof import("./networkAddressList").NetworkAddressList = null as any;
utilities.lazyLoad(exports, ["NetworkAddressList"], () => require("./networkAddressList"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Waf/appFirewall:AppFirewall":
                return new AppFirewall(name, <any>undefined, { urn })
            case "oci:Waf/appFirewallPolicy:AppFirewallPolicy":
                return new AppFirewallPolicy(name, <any>undefined, { urn })
            case "oci:Waf/networkAddressList:NetworkAddressList":
                return new NetworkAddressList(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Waf/appFirewall", _module)
pulumi.runtime.registerResourceModule("oci", "Waf/appFirewallPolicy", _module)
pulumi.runtime.registerResourceModule("oci", "Waf/networkAddressList", _module)
