// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConfigurationArgs, ConfigurationState } from "./configuration";
export type Configuration = import("./configuration").Configuration;
export const Configuration: typeof import("./configuration").Configuration = null as any;
utilities.lazyLoad(exports, ["Configuration"], () => require("./configuration"));

export { GetConfigurationArgs, GetConfigurationResult, GetConfigurationOutputArgs } from "./getConfiguration";
export const getConfiguration: typeof import("./getConfiguration").getConfiguration = null as any;
export const getConfigurationOutput: typeof import("./getConfiguration").getConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getConfiguration","getConfigurationOutput"], () => require("./getConfiguration"));

export { GetZprPoliciesArgs, GetZprPoliciesResult, GetZprPoliciesOutputArgs } from "./getZprPolicies";
export const getZprPolicies: typeof import("./getZprPolicies").getZprPolicies = null as any;
export const getZprPoliciesOutput: typeof import("./getZprPolicies").getZprPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getZprPolicies","getZprPoliciesOutput"], () => require("./getZprPolicies"));

export { GetZprPolicyArgs, GetZprPolicyResult, GetZprPolicyOutputArgs } from "./getZprPolicy";
export const getZprPolicy: typeof import("./getZprPolicy").getZprPolicy = null as any;
export const getZprPolicyOutput: typeof import("./getZprPolicy").getZprPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getZprPolicy","getZprPolicyOutput"], () => require("./getZprPolicy"));

export { ZprPolicyArgs, ZprPolicyState } from "./zprPolicy";
export type ZprPolicy = import("./zprPolicy").ZprPolicy;
export const ZprPolicy: typeof import("./zprPolicy").ZprPolicy = null as any;
utilities.lazyLoad(exports, ["ZprPolicy"], () => require("./zprPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Zpr/configuration:Configuration":
                return new Configuration(name, <any>undefined, { urn })
            case "oci:Zpr/zprPolicy:ZprPolicy":
                return new ZprPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Zpr/configuration", _module)
pulumi.runtime.registerResourceModule("oci", "Zpr/zprPolicy", _module)
