# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetApmDomainResult',
    'AwaitableGetApmDomainResult',
    'get_apm_domain',
    'get_apm_domain_output',
]

@pulumi.output_type
class GetApmDomainResult:
    """
    A collection of values returned by getApmDomain.
    """
    def __init__(__self__, apm_domain_id=None, compartment_id=None, data_upload_endpoint=None, defined_tags=None, description=None, display_name=None, freeform_tags=None, id=None, is_free_tier=None, state=None, time_created=None, time_updated=None):
        if apm_domain_id and not isinstance(apm_domain_id, str):
            raise TypeError("Expected argument 'apm_domain_id' to be a str")
        pulumi.set(__self__, "apm_domain_id", apm_domain_id)
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if data_upload_endpoint and not isinstance(data_upload_endpoint, str):
            raise TypeError("Expected argument 'data_upload_endpoint' to be a str")
        pulumi.set(__self__, "data_upload_endpoint", data_upload_endpoint)
        if defined_tags and not isinstance(defined_tags, dict):
            raise TypeError("Expected argument 'defined_tags' to be a dict")
        pulumi.set(__self__, "defined_tags", defined_tags)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        pulumi.set(__self__, "display_name", display_name)
        if freeform_tags and not isinstance(freeform_tags, dict):
            raise TypeError("Expected argument 'freeform_tags' to be a dict")
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if is_free_tier and not isinstance(is_free_tier, bool):
            raise TypeError("Expected argument 'is_free_tier' to be a bool")
        pulumi.set(__self__, "is_free_tier", is_free_tier)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if time_created and not isinstance(time_created, str):
            raise TypeError("Expected argument 'time_created' to be a str")
        pulumi.set(__self__, "time_created", time_created)
        if time_updated and not isinstance(time_updated, str):
            raise TypeError("Expected argument 'time_updated' to be a str")
        pulumi.set(__self__, "time_updated", time_updated)

    @property
    @pulumi.getter(name="apmDomainId")
    def apm_domain_id(self) -> str:
        return pulumi.get(self, "apm_domain_id")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        """
        The OCID of the compartment corresponding to the APM domain.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="dataUploadEndpoint")
    def data_upload_endpoint(self) -> str:
        """
        The endpoint where the APM agents upload their observations and metrics.
        """
        return pulumi.get(self, "data_upload_endpoint")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, Any]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        """
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Description of the APM domain.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> str:
        """
        Display name of the APM domain, which can be updated.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, Any]:
        """
        Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        """
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Unique identifier that is immutable on creation.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isFreeTier")
    def is_free_tier(self) -> bool:
        """
        Indicates if this is an Always Free resource.
        """
        return pulumi.get(self, "is_free_tier")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The current lifecycle state of the APM domain.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> str:
        """
        The time the APM domain was created, expressed in RFC 3339 timestamp format.
        """
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> str:
        """
        The time the APM domain was updated, expressed in RFC 3339 timestamp format.
        """
        return pulumi.get(self, "time_updated")


class AwaitableGetApmDomainResult(GetApmDomainResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetApmDomainResult(
            apm_domain_id=self.apm_domain_id,
            compartment_id=self.compartment_id,
            data_upload_endpoint=self.data_upload_endpoint,
            defined_tags=self.defined_tags,
            description=self.description,
            display_name=self.display_name,
            freeform_tags=self.freeform_tags,
            id=self.id,
            is_free_tier=self.is_free_tier,
            state=self.state,
            time_created=self.time_created,
            time_updated=self.time_updated)


def get_apm_domain(apm_domain_id: Optional[str] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetApmDomainResult:
    """
    This data source provides details about a specific Apm Domain resource in Oracle Cloud Infrastructure Apm service.

    Gets the details of the APM domain specified by OCID.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_apm_domain = oci.Apm.get_apm_domain(apm_domain_id=oci_apm_apm_domain["test_apm_domain"]["id"])
    ```


    :param str apm_domain_id: The OCID of the APM domain
    """
    __args__ = dict()
    __args__['apmDomainId'] = apm_domain_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Apm/getApmDomain:getApmDomain', __args__, opts=opts, typ=GetApmDomainResult).value

    return AwaitableGetApmDomainResult(
        apm_domain_id=pulumi.get(__ret__, 'apm_domain_id'),
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        data_upload_endpoint=pulumi.get(__ret__, 'data_upload_endpoint'),
        defined_tags=pulumi.get(__ret__, 'defined_tags'),
        description=pulumi.get(__ret__, 'description'),
        display_name=pulumi.get(__ret__, 'display_name'),
        freeform_tags=pulumi.get(__ret__, 'freeform_tags'),
        id=pulumi.get(__ret__, 'id'),
        is_free_tier=pulumi.get(__ret__, 'is_free_tier'),
        state=pulumi.get(__ret__, 'state'),
        time_created=pulumi.get(__ret__, 'time_created'),
        time_updated=pulumi.get(__ret__, 'time_updated'))


@_utilities.lift_output_func(get_apm_domain)
def get_apm_domain_output(apm_domain_id: Optional[pulumi.Input[str]] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetApmDomainResult]:
    """
    This data source provides details about a specific Apm Domain resource in Oracle Cloud Infrastructure Apm service.

    Gets the details of the APM domain specified by OCID.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_apm_domain = oci.Apm.get_apm_domain(apm_domain_id=oci_apm_apm_domain["test_apm_domain"]["id"])
    ```


    :param str apm_domain_id: The OCID of the APM domain
    """
    ...
