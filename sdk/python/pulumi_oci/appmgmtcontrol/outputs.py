# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetMonitoredInstancesFilterResult',
    'GetMonitoredInstancesMonitoredInstanceCollectionResult',
    'GetMonitoredInstancesMonitoredInstanceCollectionItemResult',
]

@pulumi.output_type
class GetMonitoredInstancesFilterResult(dict):
    def __init__(__self__, *,
                 name: builtins.str,
                 values: Sequence[builtins.str],
                 regex: Optional[builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[builtins.str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter
    def regex(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetMonitoredInstancesMonitoredInstanceCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetMonitoredInstancesMonitoredInstanceCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetMonitoredInstancesMonitoredInstanceCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetMonitoredInstancesMonitoredInstanceCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: builtins.str,
                 display_name: builtins.str,
                 instance_id: builtins.str,
                 lifecycle_details: builtins.str,
                 management_agent_id: builtins.str,
                 monitoring_state: builtins.str,
                 state: builtins.str,
                 time_created: builtins.str,
                 time_updated: builtins.str):
        """
        :param builtins.str compartment_id: The ID of the compartment in which to list resources.
        :param builtins.str display_name: A filter to return only resources that match the entire display name given.
        :param builtins.str instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored instance.
        :param builtins.str lifecycle_details: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        :param builtins.str management_agent_id: Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Used to invoke manage operations on Management Agent Cloud Service.
        :param builtins.str monitoring_state: Monitoring status. Can be either enabled or disabled.
        :param builtins.str state: The current state of the monitored instance.
        :param builtins.str time_created: The time the MonitoredInstance was created. An RFC3339 formatted datetime string
        :param builtins.str time_updated: The time the MonitoredInstance was updated. An RFC3339 formatted datetime string
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        pulumi.set(__self__, "management_agent_id", management_agent_id)
        pulumi.set(__self__, "monitoring_state", monitoring_state)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> builtins.str:
        """
        The ID of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        A filter to return only resources that match the entire display name given.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored instance.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> builtins.str:
        """
        A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        """
        return pulumi.get(self, "lifecycle_details")

    @property
    @pulumi.getter(name="managementAgentId")
    def management_agent_id(self) -> builtins.str:
        """
        Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Used to invoke manage operations on Management Agent Cloud Service.
        """
        return pulumi.get(self, "management_agent_id")

    @property
    @pulumi.getter(name="monitoringState")
    def monitoring_state(self) -> builtins.str:
        """
        Monitoring status. Can be either enabled or disabled.
        """
        return pulumi.get(self, "monitoring_state")

    @property
    @pulumi.getter
    def state(self) -> builtins.str:
        """
        The current state of the monitored instance.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> builtins.str:
        """
        The time the MonitoredInstance was created. An RFC3339 formatted datetime string
        """
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> builtins.str:
        """
        The time the MonitoredInstance was updated. An RFC3339 formatted datetime string
        """
        return pulumi.get(self, "time_updated")


