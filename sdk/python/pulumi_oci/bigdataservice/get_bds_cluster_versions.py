# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetBdsClusterVersionsResult',
    'AwaitableGetBdsClusterVersionsResult',
    'get_bds_cluster_versions',
    'get_bds_cluster_versions_output',
]

@pulumi.output_type
class GetBdsClusterVersionsResult:
    """
    A collection of values returned by getBdsClusterVersions.
    """
    def __init__(__self__, bds_cluster_versions=None, filters=None, id=None):
        if bds_cluster_versions and not isinstance(bds_cluster_versions, list):
            raise TypeError("Expected argument 'bds_cluster_versions' to be a list")
        pulumi.set(__self__, "bds_cluster_versions", bds_cluster_versions)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="bdsClusterVersions")
    def bds_cluster_versions(self) -> Sequence['outputs.GetBdsClusterVersionsBdsClusterVersionResult']:
        """
        The list of bds_cluster_versions.
        """
        return pulumi.get(self, "bds_cluster_versions")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetBdsClusterVersionsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetBdsClusterVersionsResult(GetBdsClusterVersionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBdsClusterVersionsResult(
            bds_cluster_versions=self.bds_cluster_versions,
            filters=self.filters,
            id=self.id)


def get_bds_cluster_versions(filters: Optional[Sequence[Union['GetBdsClusterVersionsFilterArgs', 'GetBdsClusterVersionsFilterArgsDict']]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBdsClusterVersionsResult:
    """
    This data source provides the list of Bds Cluster Versions in Oracle Cloud Infrastructure Big Data Service service.

    Returns a list of cluster versions with associated odh and bds versions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_bds_cluster_versions = oci.BigDataService.get_bds_cluster_versions()
    ```
    """
    __args__ = dict()
    __args__['filters'] = filters
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:BigDataService/getBdsClusterVersions:getBdsClusterVersions', __args__, opts=opts, typ=GetBdsClusterVersionsResult).value

    return AwaitableGetBdsClusterVersionsResult(
        bds_cluster_versions=pulumi.get(__ret__, 'bds_cluster_versions'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'))
def get_bds_cluster_versions_output(filters: Optional[pulumi.Input[Optional[Sequence[Union['GetBdsClusterVersionsFilterArgs', 'GetBdsClusterVersionsFilterArgsDict']]]]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetBdsClusterVersionsResult]:
    """
    This data source provides the list of Bds Cluster Versions in Oracle Cloud Infrastructure Big Data Service service.

    Returns a list of cluster versions with associated odh and bds versions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_bds_cluster_versions = oci.BigDataService.get_bds_cluster_versions()
    ```
    """
    __args__ = dict()
    __args__['filters'] = filters
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:BigDataService/getBdsClusterVersions:getBdsClusterVersions', __args__, opts=opts, typ=GetBdsClusterVersionsResult)
    return __ret__.apply(lambda __response__: GetBdsClusterVersionsResult(
        bds_cluster_versions=pulumi.get(__response__, 'bds_cluster_versions'),
        filters=pulumi.get(__response__, 'filters'),
        id=pulumi.get(__response__, 'id')))
