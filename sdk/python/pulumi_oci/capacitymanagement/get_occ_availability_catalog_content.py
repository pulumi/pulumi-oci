# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetOccAvailabilityCatalogContentResult',
    'AwaitableGetOccAvailabilityCatalogContentResult',
    'get_occ_availability_catalog_content',
    'get_occ_availability_catalog_content_output',
]

@pulumi.output_type
class GetOccAvailabilityCatalogContentResult:
    """
    A collection of values returned by getOccAvailabilityCatalogContent.
    """
    def __init__(__self__, id=None, occ_availability_catalog_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if occ_availability_catalog_id and not isinstance(occ_availability_catalog_id, str):
            raise TypeError("Expected argument 'occ_availability_catalog_id' to be a str")
        pulumi.set(__self__, "occ_availability_catalog_id", occ_availability_catalog_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="occAvailabilityCatalogId")
    def occ_availability_catalog_id(self) -> str:
        return pulumi.get(self, "occ_availability_catalog_id")


class AwaitableGetOccAvailabilityCatalogContentResult(GetOccAvailabilityCatalogContentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOccAvailabilityCatalogContentResult(
            id=self.id,
            occ_availability_catalog_id=self.occ_availability_catalog_id)


def get_occ_availability_catalog_content(occ_availability_catalog_id: Optional[str] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOccAvailabilityCatalogContentResult:
    """
    This data source provides details about a specific Occ Availability Catalog Content resource in Oracle Cloud Infrastructure Capacity Management service.

    Returns the binary contents of the availability catalog. Can be saved as a csv file.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_oci as oci

    test_occ_availability_catalog_content = oci.CapacityManagement.get_occ_availability_catalog_content(occ_availability_catalog_id=oci_capacity_management_occ_availability_catalog["test_occ_availability_catalog"]["id"])
    ```
    <!--End PulumiCodeChooser -->


    :param str occ_availability_catalog_id: The OCID of the availability catalog.
    """
    __args__ = dict()
    __args__['occAvailabilityCatalogId'] = occ_availability_catalog_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:CapacityManagement/getOccAvailabilityCatalogContent:getOccAvailabilityCatalogContent', __args__, opts=opts, typ=GetOccAvailabilityCatalogContentResult).value

    return AwaitableGetOccAvailabilityCatalogContentResult(
        id=pulumi.get(__ret__, 'id'),
        occ_availability_catalog_id=pulumi.get(__ret__, 'occ_availability_catalog_id'))


@_utilities.lift_output_func(get_occ_availability_catalog_content)
def get_occ_availability_catalog_content_output(occ_availability_catalog_id: Optional[pulumi.Input[str]] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOccAvailabilityCatalogContentResult]:
    """
    This data source provides details about a specific Occ Availability Catalog Content resource in Oracle Cloud Infrastructure Capacity Management service.

    Returns the binary contents of the availability catalog. Can be saved as a csv file.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_oci as oci

    test_occ_availability_catalog_content = oci.CapacityManagement.get_occ_availability_catalog_content(occ_availability_catalog_id=oci_capacity_management_occ_availability_catalog["test_occ_availability_catalog"]["id"])
    ```
    <!--End PulumiCodeChooser -->


    :param str occ_availability_catalog_id: The OCID of the availability catalog.
    """
    ...
