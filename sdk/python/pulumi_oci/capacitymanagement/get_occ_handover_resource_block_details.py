# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetOccHandoverResourceBlockDetailsResult',
    'AwaitableGetOccHandoverResourceBlockDetailsResult',
    'get_occ_handover_resource_block_details',
    'get_occ_handover_resource_block_details_output',
]

@pulumi.output_type
class GetOccHandoverResourceBlockDetailsResult:
    """
    A collection of values returned by getOccHandoverResourceBlockDetails.
    """
    def __init__(__self__, filters=None, host_id=None, id=None, occ_handover_resource_block_detail_collections=None, occ_handover_resource_block_id=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if host_id and not isinstance(host_id, str):
            raise TypeError("Expected argument 'host_id' to be a str")
        pulumi.set(__self__, "host_id", host_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if occ_handover_resource_block_detail_collections and not isinstance(occ_handover_resource_block_detail_collections, list):
            raise TypeError("Expected argument 'occ_handover_resource_block_detail_collections' to be a list")
        pulumi.set(__self__, "occ_handover_resource_block_detail_collections", occ_handover_resource_block_detail_collections)
        if occ_handover_resource_block_id and not isinstance(occ_handover_resource_block_id, str):
            raise TypeError("Expected argument 'occ_handover_resource_block_id' to be a str")
        pulumi.set(__self__, "occ_handover_resource_block_id", occ_handover_resource_block_id)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetOccHandoverResourceBlockDetailsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional[str]:
        return pulumi.get(self, "host_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="occHandoverResourceBlockDetailCollections")
    def occ_handover_resource_block_detail_collections(self) -> Sequence['outputs.GetOccHandoverResourceBlockDetailsOccHandoverResourceBlockDetailCollectionResult']:
        """
        The list of occ_handover_resource_block_detail_collection.
        """
        return pulumi.get(self, "occ_handover_resource_block_detail_collections")

    @property
    @pulumi.getter(name="occHandoverResourceBlockId")
    def occ_handover_resource_block_id(self) -> str:
        return pulumi.get(self, "occ_handover_resource_block_id")


class AwaitableGetOccHandoverResourceBlockDetailsResult(GetOccHandoverResourceBlockDetailsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOccHandoverResourceBlockDetailsResult(
            filters=self.filters,
            host_id=self.host_id,
            id=self.id,
            occ_handover_resource_block_detail_collections=self.occ_handover_resource_block_detail_collections,
            occ_handover_resource_block_id=self.occ_handover_resource_block_id)


def get_occ_handover_resource_block_details(filters: Optional[Sequence[Union['GetOccHandoverResourceBlockDetailsFilterArgs', 'GetOccHandoverResourceBlockDetailsFilterArgsDict']]] = None,
                                            host_id: Optional[str] = None,
                                            occ_handover_resource_block_id: Optional[str] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOccHandoverResourceBlockDetailsResult:
    """
    This data source provides the list of Occ Handover Resource Block Details in Oracle Cloud Infrastructure Capacity Management service.

    List details about a given occHandoverResourceBlock.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_occ_handover_resource_block_details = oci.CapacityManagement.get_occ_handover_resource_block_details(occ_handover_resource_block_id=test_occ_handover_resource_block["id"],
        host_id=test_host["id"])
    ```


    :param str host_id: This fiter is applicable only for COMPUTE namespace. It helps in fetching of all resource block details for which the hostId is equal to the one provided in this query param.
    :param str occ_handover_resource_block_id: The OCID of the OccHandoverResource which is a required query parameter for listing OccHandoverResourceDetails.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['hostId'] = host_id
    __args__['occHandoverResourceBlockId'] = occ_handover_resource_block_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:CapacityManagement/getOccHandoverResourceBlockDetails:getOccHandoverResourceBlockDetails', __args__, opts=opts, typ=GetOccHandoverResourceBlockDetailsResult).value

    return AwaitableGetOccHandoverResourceBlockDetailsResult(
        filters=pulumi.get(__ret__, 'filters'),
        host_id=pulumi.get(__ret__, 'host_id'),
        id=pulumi.get(__ret__, 'id'),
        occ_handover_resource_block_detail_collections=pulumi.get(__ret__, 'occ_handover_resource_block_detail_collections'),
        occ_handover_resource_block_id=pulumi.get(__ret__, 'occ_handover_resource_block_id'))
def get_occ_handover_resource_block_details_output(filters: Optional[pulumi.Input[Optional[Sequence[Union['GetOccHandoverResourceBlockDetailsFilterArgs', 'GetOccHandoverResourceBlockDetailsFilterArgsDict']]]]] = None,
                                                   host_id: Optional[pulumi.Input[Optional[str]]] = None,
                                                   occ_handover_resource_block_id: Optional[pulumi.Input[str]] = None,
                                                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOccHandoverResourceBlockDetailsResult]:
    """
    This data source provides the list of Occ Handover Resource Block Details in Oracle Cloud Infrastructure Capacity Management service.

    List details about a given occHandoverResourceBlock.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_occ_handover_resource_block_details = oci.CapacityManagement.get_occ_handover_resource_block_details(occ_handover_resource_block_id=test_occ_handover_resource_block["id"],
        host_id=test_host["id"])
    ```


    :param str host_id: This fiter is applicable only for COMPUTE namespace. It helps in fetching of all resource block details for which the hostId is equal to the one provided in this query param.
    :param str occ_handover_resource_block_id: The OCID of the OccHandoverResource which is a required query parameter for listing OccHandoverResourceDetails.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['hostId'] = host_id
    __args__['occHandoverResourceBlockId'] = occ_handover_resource_block_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:CapacityManagement/getOccHandoverResourceBlockDetails:getOccHandoverResourceBlockDetails', __args__, opts=opts, typ=GetOccHandoverResourceBlockDetailsResult)
    return __ret__.apply(lambda __response__: GetOccHandoverResourceBlockDetailsResult(
        filters=pulumi.get(__response__, 'filters'),
        host_id=pulumi.get(__response__, 'host_id'),
        id=pulumi.get(__response__, 'id'),
        occ_handover_resource_block_detail_collections=pulumi.get(__response__, 'occ_handover_resource_block_detail_collections'),
        occ_handover_resource_block_id=pulumi.get(__response__, 'occ_handover_resource_block_id')))
