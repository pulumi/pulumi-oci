# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetCloudGuardConfigurationResult',
    'AwaitableGetCloudGuardConfigurationResult',
    'get_cloud_guard_configuration',
    'get_cloud_guard_configuration_output',
]

@pulumi.output_type
class GetCloudGuardConfigurationResult:
    """
    A collection of values returned by getCloudGuardConfiguration.
    """
    def __init__(__self__, compartment_id=None, id=None, reporting_region=None, self_manage_resources=None, status=None):
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if reporting_region and not isinstance(reporting_region, str):
            raise TypeError("Expected argument 'reporting_region' to be a str")
        pulumi.set(__self__, "reporting_region", reporting_region)
        if self_manage_resources and not isinstance(self_manage_resources, bool):
            raise TypeError("Expected argument 'self_manage_resources' to be a bool")
        pulumi.set(__self__, "self_manage_resources", self_manage_resources)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="reportingRegion")
    def reporting_region(self) -> str:
        """
        The reporting region value
        """
        return pulumi.get(self, "reporting_region")

    @property
    @pulumi.getter(name="selfManageResources")
    def self_manage_resources(self) -> bool:
        """
        Identifies if Oracle managed resources were created by customers
        """
        return pulumi.get(self, "self_manage_resources")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        Status of Cloud Guard Tenant
        """
        return pulumi.get(self, "status")


class AwaitableGetCloudGuardConfigurationResult(GetCloudGuardConfigurationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudGuardConfigurationResult(
            compartment_id=self.compartment_id,
            id=self.id,
            reporting_region=self.reporting_region,
            self_manage_resources=self.self_manage_resources,
            status=self.status)


def get_cloud_guard_configuration(compartment_id: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudGuardConfigurationResult:
    """
    This data source provides details about a specific Cloud Guard Configuration resource in Oracle Cloud Infrastructure Cloud Guard service.

    GET Cloud Guard Configuration Details for a Tenancy.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_cloud_guard_configuration = oci.CloudGuard.get_cloud_guard_configuration(compartment_id=var["compartment_id"])
    ```


    :param str compartment_id: The ID of the compartment in which to list resources.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:CloudGuard/getCloudGuardConfiguration:getCloudGuardConfiguration', __args__, opts=opts, typ=GetCloudGuardConfigurationResult).value

    return AwaitableGetCloudGuardConfigurationResult(
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        id=pulumi.get(__ret__, 'id'),
        reporting_region=pulumi.get(__ret__, 'reporting_region'),
        self_manage_resources=pulumi.get(__ret__, 'self_manage_resources'),
        status=pulumi.get(__ret__, 'status'))


@_utilities.lift_output_func(get_cloud_guard_configuration)
def get_cloud_guard_configuration_output(compartment_id: Optional[pulumi.Input[str]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCloudGuardConfigurationResult]:
    """
    This data source provides details about a specific Cloud Guard Configuration resource in Oracle Cloud Infrastructure Cloud Guard service.

    GET Cloud Guard Configuration Details for a Tenancy.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_cloud_guard_configuration = oci.CloudGuard.get_cloud_guard_configuration(compartment_id=var["compartment_id"])
    ```


    :param str compartment_id: The ID of the compartment in which to list resources.
    """
    ...
