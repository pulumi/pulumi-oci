# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetInstanceAgentPluginResult',
    'AwaitableGetInstanceAgentPluginResult',
    'get_instance_agent_plugin',
    'get_instance_agent_plugin_output',
]

@pulumi.output_type
class GetInstanceAgentPluginResult:
    """
    A collection of values returned by getInstanceAgentPlugin.
    """
    def __init__(__self__, compartment_id=None, id=None, instanceagent_id=None, message=None, name=None, plugin_name=None, status=None, time_last_updated_utc=None):
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instanceagent_id and not isinstance(instanceagent_id, str):
            raise TypeError("Expected argument 'instanceagent_id' to be a str")
        pulumi.set(__self__, "instanceagent_id", instanceagent_id)
        if message and not isinstance(message, str):
            raise TypeError("Expected argument 'message' to be a str")
        pulumi.set(__self__, "message", message)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if plugin_name and not isinstance(plugin_name, str):
            raise TypeError("Expected argument 'plugin_name' to be a str")
        pulumi.set(__self__, "plugin_name", plugin_name)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if time_last_updated_utc and not isinstance(time_last_updated_utc, str):
            raise TypeError("Expected argument 'time_last_updated_utc' to be a str")
        pulumi.set(__self__, "time_last_updated_utc", time_last_updated_utc)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceagentId")
    def instanceagent_id(self) -> str:
        return pulumi.get(self, "instanceagent_id")

    @property
    @pulumi.getter
    def message(self) -> str:
        """
        The optional message from the agent plugin
        """
        return pulumi.get(self, "message")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The plugin name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="pluginName")
    def plugin_name(self) -> str:
        return pulumi.get(self, "plugin_name")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        The plugin status Specified the plugin state on the instance * `RUNNING` - The plugin is in running state * `STOPPED` - The plugin is in stopped state * `NOT_SUPPORTED` - The plugin is not supported on this platform * `INVALID` - The plugin state is not recognizable by the service
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="timeLastUpdatedUtc")
    def time_last_updated_utc(self) -> str:
        """
        The last update time of the plugin in UTC
        """
        return pulumi.get(self, "time_last_updated_utc")


class AwaitableGetInstanceAgentPluginResult(GetInstanceAgentPluginResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceAgentPluginResult(
            compartment_id=self.compartment_id,
            id=self.id,
            instanceagent_id=self.instanceagent_id,
            message=self.message,
            name=self.name,
            plugin_name=self.plugin_name,
            status=self.status,
            time_last_updated_utc=self.time_last_updated_utc)


def get_instance_agent_plugin(compartment_id: Optional[str] = None,
                              instanceagent_id: Optional[str] = None,
                              plugin_name: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceAgentPluginResult:
    """
    This data source provides details about a specific Instance Agent Plugin resource in Oracle Cloud Infrastructure Compute Instance Agent service.

    The API to get information for a plugin.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_instance_agent_plugin = oci.ComputeInstanceAgent.get_instance_agent_plugin(instanceagent_id=oci_computeinstanceagent_instanceagent["test_instanceagent"]["id"],
        plugin_name=var["instance_agent_plugin_plugin_name"])
    ```


    :param str instanceagent_id: The OCID of the instance.
    :param str plugin_name: The name of the plugin.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['instanceagentId'] = instanceagent_id
    __args__['pluginName'] = plugin_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:ComputeInstanceAgent/getInstanceAgentPlugin:getInstanceAgentPlugin', __args__, opts=opts, typ=GetInstanceAgentPluginResult).value

    return AwaitableGetInstanceAgentPluginResult(
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        id=pulumi.get(__ret__, 'id'),
        instanceagent_id=pulumi.get(__ret__, 'instanceagent_id'),
        message=pulumi.get(__ret__, 'message'),
        name=pulumi.get(__ret__, 'name'),
        plugin_name=pulumi.get(__ret__, 'plugin_name'),
        status=pulumi.get(__ret__, 'status'),
        time_last_updated_utc=pulumi.get(__ret__, 'time_last_updated_utc'))


@_utilities.lift_output_func(get_instance_agent_plugin)
def get_instance_agent_plugin_output(compartment_id: Optional[pulumi.Input[str]] = None,
                                     instanceagent_id: Optional[pulumi.Input[str]] = None,
                                     plugin_name: Optional[pulumi.Input[str]] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceAgentPluginResult]:
    """
    This data source provides details about a specific Instance Agent Plugin resource in Oracle Cloud Infrastructure Compute Instance Agent service.

    The API to get information for a plugin.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_instance_agent_plugin = oci.ComputeInstanceAgent.get_instance_agent_plugin(instanceagent_id=oci_computeinstanceagent_instanceagent["test_instanceagent"]["id"],
        plugin_name=var["instance_agent_plugin_plugin_name"])
    ```


    :param str instanceagent_id: The OCID of the instance.
    :param str plugin_name: The name of the plugin.
    """
    ...
