# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetWorkRequestLogEntriesResult',
    'AwaitableGetWorkRequestLogEntriesResult',
    'get_work_request_log_entries',
    'get_work_request_log_entries_output',
]

@pulumi.output_type
class GetWorkRequestLogEntriesResult:
    """
    A collection of values returned by getWorkRequestLogEntries.
    """
    def __init__(__self__, compartment_id=None, filters=None, id=None, work_request_id=None, work_request_log_entries=None):
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if work_request_id and not isinstance(work_request_id, str):
            raise TypeError("Expected argument 'work_request_id' to be a str")
        pulumi.set(__self__, "work_request_id", work_request_id)
        if work_request_log_entries and not isinstance(work_request_log_entries, list):
            raise TypeError("Expected argument 'work_request_log_entries' to be a list")
        pulumi.set(__self__, "work_request_log_entries", work_request_log_entries)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetWorkRequestLogEntriesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="workRequestId")
    def work_request_id(self) -> str:
        return pulumi.get(self, "work_request_id")

    @property
    @pulumi.getter(name="workRequestLogEntries")
    def work_request_log_entries(self) -> Sequence['outputs.GetWorkRequestLogEntriesWorkRequestLogEntryResult']:
        """
        The list of work_request_log_entries.
        """
        return pulumi.get(self, "work_request_log_entries")


class AwaitableGetWorkRequestLogEntriesResult(GetWorkRequestLogEntriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWorkRequestLogEntriesResult(
            compartment_id=self.compartment_id,
            filters=self.filters,
            id=self.id,
            work_request_id=self.work_request_id,
            work_request_log_entries=self.work_request_log_entries)


def get_work_request_log_entries(compartment_id: Optional[str] = None,
                                 filters: Optional[Sequence[pulumi.InputType['GetWorkRequestLogEntriesFilterArgs']]] = None,
                                 work_request_id: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWorkRequestLogEntriesResult:
    """
    This data source provides the list of Work Request Log Entries in Oracle Cloud Infrastructure Container Engine service.

    Get the logs of a work request.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_work_request_log_entries = oci.ContainerEngine.get_work_request_log_entries(compartment_id=var["compartment_id"],
        work_request_id=oci_containerengine_work_request["test_work_request"]["id"])
    ```


    :param str compartment_id: The OCID of the compartment.
    :param str work_request_id: The OCID of the work request.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['filters'] = filters
    __args__['workRequestId'] = work_request_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:ContainerEngine/getWorkRequestLogEntries:getWorkRequestLogEntries', __args__, opts=opts, typ=GetWorkRequestLogEntriesResult).value

    return AwaitableGetWorkRequestLogEntriesResult(
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        work_request_id=pulumi.get(__ret__, 'work_request_id'),
        work_request_log_entries=pulumi.get(__ret__, 'work_request_log_entries'))


@_utilities.lift_output_func(get_work_request_log_entries)
def get_work_request_log_entries_output(compartment_id: Optional[pulumi.Input[str]] = None,
                                        filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetWorkRequestLogEntriesFilterArgs']]]]] = None,
                                        work_request_id: Optional[pulumi.Input[str]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetWorkRequestLogEntriesResult]:
    """
    This data source provides the list of Work Request Log Entries in Oracle Cloud Infrastructure Container Engine service.

    Get the logs of a work request.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_work_request_log_entries = oci.ContainerEngine.get_work_request_log_entries(compartment_id=var["compartment_id"],
        work_request_id=oci_containerengine_work_request["test_work_request"]["id"])
    ```


    :param str compartment_id: The OCID of the compartment.
    :param str work_request_id: The OCID of the work request.
    """
    ...
