# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetComputeGlobalImageCapabilitySchemasVersionsResult',
    'AwaitableGetComputeGlobalImageCapabilitySchemasVersionsResult',
    'get_compute_global_image_capability_schemas_versions',
    'get_compute_global_image_capability_schemas_versions_output',
]

@pulumi.output_type
class GetComputeGlobalImageCapabilitySchemasVersionsResult:
    """
    A collection of values returned by getComputeGlobalImageCapabilitySchemasVersions.
    """
    def __init__(__self__, compute_global_image_capability_schema_id=None, compute_global_image_capability_schema_versions=None, display_name=None, filters=None, id=None):
        if compute_global_image_capability_schema_id and not isinstance(compute_global_image_capability_schema_id, str):
            raise TypeError("Expected argument 'compute_global_image_capability_schema_id' to be a str")
        pulumi.set(__self__, "compute_global_image_capability_schema_id", compute_global_image_capability_schema_id)
        if compute_global_image_capability_schema_versions and not isinstance(compute_global_image_capability_schema_versions, list):
            raise TypeError("Expected argument 'compute_global_image_capability_schema_versions' to be a list")
        pulumi.set(__self__, "compute_global_image_capability_schema_versions", compute_global_image_capability_schema_versions)
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        pulumi.set(__self__, "display_name", display_name)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="computeGlobalImageCapabilitySchemaId")
    def compute_global_image_capability_schema_id(self) -> str:
        """
        The ocid of the compute global image capability schema
        """
        return pulumi.get(self, "compute_global_image_capability_schema_id")

    @property
    @pulumi.getter(name="computeGlobalImageCapabilitySchemaVersions")
    def compute_global_image_capability_schema_versions(self) -> Sequence['outputs.GetComputeGlobalImageCapabilitySchemasVersionsComputeGlobalImageCapabilitySchemaVersionResult']:
        """
        The list of compute_global_image_capability_schema_versions.
        """
        return pulumi.get(self, "compute_global_image_capability_schema_versions")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[str]:
        """
        A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetComputeGlobalImageCapabilitySchemasVersionsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetComputeGlobalImageCapabilitySchemasVersionsResult(GetComputeGlobalImageCapabilitySchemasVersionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetComputeGlobalImageCapabilitySchemasVersionsResult(
            compute_global_image_capability_schema_id=self.compute_global_image_capability_schema_id,
            compute_global_image_capability_schema_versions=self.compute_global_image_capability_schema_versions,
            display_name=self.display_name,
            filters=self.filters,
            id=self.id)


def get_compute_global_image_capability_schemas_versions(compute_global_image_capability_schema_id: Optional[str] = None,
                                                         display_name: Optional[str] = None,
                                                         filters: Optional[Sequence[pulumi.InputType['GetComputeGlobalImageCapabilitySchemasVersionsFilterArgs']]] = None,
                                                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetComputeGlobalImageCapabilitySchemasVersionsResult:
    """
    This data source provides the list of Compute Global Image Capability Schemas Versions in Oracle Cloud Infrastructure Core service.

    Lists Compute Global Image Capability Schema versions in the specified compartment.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_compute_global_image_capability_schemas_versions = oci.Core.get_compute_global_image_capability_schemas_versions(compute_global_image_capability_schema_id=oci_core_compute_global_image_capability_schema["test_compute_global_image_capability_schema"]["id"],
        display_name=var["compute_global_image_capability_schemas_version_display_name"])
    ```


    :param str compute_global_image_capability_schema_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute global image capability schema
    :param str display_name: A filter to return only resources that match the given display name exactly.
    """
    __args__ = dict()
    __args__['computeGlobalImageCapabilitySchemaId'] = compute_global_image_capability_schema_id
    __args__['displayName'] = display_name
    __args__['filters'] = filters
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Core/getComputeGlobalImageCapabilitySchemasVersions:getComputeGlobalImageCapabilitySchemasVersions', __args__, opts=opts, typ=GetComputeGlobalImageCapabilitySchemasVersionsResult).value

    return AwaitableGetComputeGlobalImageCapabilitySchemasVersionsResult(
        compute_global_image_capability_schema_id=pulumi.get(__ret__, 'compute_global_image_capability_schema_id'),
        compute_global_image_capability_schema_versions=pulumi.get(__ret__, 'compute_global_image_capability_schema_versions'),
        display_name=pulumi.get(__ret__, 'display_name'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_compute_global_image_capability_schemas_versions)
def get_compute_global_image_capability_schemas_versions_output(compute_global_image_capability_schema_id: Optional[pulumi.Input[str]] = None,
                                                                display_name: Optional[pulumi.Input[Optional[str]]] = None,
                                                                filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetComputeGlobalImageCapabilitySchemasVersionsFilterArgs']]]]] = None,
                                                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetComputeGlobalImageCapabilitySchemasVersionsResult]:
    """
    This data source provides the list of Compute Global Image Capability Schemas Versions in Oracle Cloud Infrastructure Core service.

    Lists Compute Global Image Capability Schema versions in the specified compartment.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_compute_global_image_capability_schemas_versions = oci.Core.get_compute_global_image_capability_schemas_versions(compute_global_image_capability_schema_id=oci_core_compute_global_image_capability_schema["test_compute_global_image_capability_schema"]["id"],
        display_name=var["compute_global_image_capability_schemas_version_display_name"])
    ```


    :param str compute_global_image_capability_schema_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute global image capability schema
    :param str display_name: A filter to return only resources that match the given display name exactly.
    """
    ...
