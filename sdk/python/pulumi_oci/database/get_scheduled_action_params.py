# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetScheduledActionParamsResult',
    'AwaitableGetScheduledActionParamsResult',
    'get_scheduled_action_params',
    'get_scheduled_action_params_output',
]

@pulumi.output_type
class GetScheduledActionParamsResult:
    """
    A collection of values returned by getScheduledActionParams.
    """
    def __init__(__self__, action_param_values_collections=None, filters=None, id=None, type=None):
        if action_param_values_collections and not isinstance(action_param_values_collections, list):
            raise TypeError("Expected argument 'action_param_values_collections' to be a list")
        pulumi.set(__self__, "action_param_values_collections", action_param_values_collections)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="actionParamValuesCollections")
    def action_param_values_collections(self) -> Sequence['outputs.GetScheduledActionParamsActionParamValuesCollectionResult']:
        """
        The list of action_param_values_collection.
        """
        return pulumi.get(self, "action_param_values_collections")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetScheduledActionParamsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")


class AwaitableGetScheduledActionParamsResult(GetScheduledActionParamsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetScheduledActionParamsResult(
            action_param_values_collections=self.action_param_values_collections,
            filters=self.filters,
            id=self.id,
            type=self.type)


def get_scheduled_action_params(filters: Optional[Sequence[Union['GetScheduledActionParamsFilterArgs', 'GetScheduledActionParamsFilterArgsDict']]] = None,
                                type: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetScheduledActionParamsResult:
    """
    This data source provides the list of Scheduled Action Params in Oracle Cloud Infrastructure Database service.

    List all the action params and their possible values for a given action type

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_scheduled_action_params = oci.Database.get_scheduled_action_params(type=scheduled_action_param_type)
    ```


    :param str type: The type of the scheduled action
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Database/getScheduledActionParams:getScheduledActionParams', __args__, opts=opts, typ=GetScheduledActionParamsResult).value

    return AwaitableGetScheduledActionParamsResult(
        action_param_values_collections=pulumi.get(__ret__, 'action_param_values_collections'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        type=pulumi.get(__ret__, 'type'))
def get_scheduled_action_params_output(filters: Optional[pulumi.Input[Optional[Sequence[Union['GetScheduledActionParamsFilterArgs', 'GetScheduledActionParamsFilterArgsDict']]]]] = None,
                                       type: Optional[pulumi.Input[str]] = None,
                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetScheduledActionParamsResult]:
    """
    This data source provides the list of Scheduled Action Params in Oracle Cloud Infrastructure Database service.

    List all the action params and their possible values for a given action type

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_scheduled_action_params = oci.Database.get_scheduled_action_params(type=scheduled_action_param_type)
    ```


    :param str type: The type of the scheduled action
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['type'] = type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:Database/getScheduledActionParams:getScheduledActionParams', __args__, opts=opts, typ=GetScheduledActionParamsResult)
    return __ret__.apply(lambda __response__: GetScheduledActionParamsResult(
        action_param_values_collections=pulumi.get(__response__, 'action_param_values_collections'),
        filters=pulumi.get(__response__, 'filters'),
        id=pulumi.get(__response__, 'id'),
        type=pulumi.get(__response__, 'type')))
