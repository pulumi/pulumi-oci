# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SchedulingPolicySchedulingWindowArgs', 'SchedulingPolicySchedulingWindow']

@pulumi.input_type
class SchedulingPolicySchedulingWindowArgs:
    def __init__(__self__, *,
                 scheduling_policy_id: pulumi.Input[str],
                 window_preference: pulumi.Input['SchedulingPolicySchedulingWindowWindowPreferenceArgs'],
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a SchedulingPolicySchedulingWindow resource.
        :param pulumi.Input[str] scheduling_policy_id: The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        :param pulumi.Input['SchedulingPolicySchedulingWindowWindowPreferenceArgs'] window_preference: (Updatable) The Single Scheduling Window details.
        :param pulumi.Input[str] compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] freeform_tags: (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        pulumi.set(__self__, "scheduling_policy_id", scheduling_policy_id)
        pulumi.set(__self__, "window_preference", window_preference)
        if compartment_id is not None:
            pulumi.set(__self__, "compartment_id", compartment_id)
        if defined_tags is not None:
            pulumi.set(__self__, "defined_tags", defined_tags)
        if freeform_tags is not None:
            pulumi.set(__self__, "freeform_tags", freeform_tags)

    @property
    @pulumi.getter(name="schedulingPolicyId")
    def scheduling_policy_id(self) -> pulumi.Input[str]:
        """
        The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        """
        return pulumi.get(self, "scheduling_policy_id")

    @scheduling_policy_id.setter
    def scheduling_policy_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "scheduling_policy_id", value)

    @property
    @pulumi.getter(name="windowPreference")
    def window_preference(self) -> pulumi.Input['SchedulingPolicySchedulingWindowWindowPreferenceArgs']:
        """
        (Updatable) The Single Scheduling Window details.
        """
        return pulumi.get(self, "window_preference")

    @window_preference.setter
    def window_preference(self, value: pulumi.Input['SchedulingPolicySchedulingWindowWindowPreferenceArgs']):
        pulumi.set(self, "window_preference", value)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[pulumi.Input[str]]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "freeform_tags", value)


@pulumi.input_type
class _SchedulingPolicySchedulingWindowState:
    def __init__(__self__, *,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 lifecycle_details: Optional[pulumi.Input[str]] = None,
                 scheduling_policy_id: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 time_created: Optional[pulumi.Input[str]] = None,
                 time_next_scheduling_window_starts: Optional[pulumi.Input[str]] = None,
                 time_updated: Optional[pulumi.Input[str]] = None,
                 window_preference: Optional[pulumi.Input['SchedulingPolicySchedulingWindowWindowPreferenceArgs']] = None):
        """
        Input properties used for looking up and filtering SchedulingPolicySchedulingWindow resources.
        :param pulumi.Input[str] compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        :param pulumi.Input[str] display_name: The user-friendly name for the Scheduling Window. The name does not need to be unique.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] freeform_tags: (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param pulumi.Input[str] lifecycle_details: Additional information about the current lifecycle state.
        :param pulumi.Input[str] scheduling_policy_id: The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        :param pulumi.Input[str] state: The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
        :param pulumi.Input[str] time_created: The date and time the Scheduling Window was created.
        :param pulumi.Input[str] time_next_scheduling_window_starts: The date and time of the next upcoming window associated within the schedulingWindow is planned to start.
        :param pulumi.Input[str] time_updated: The last date and time that the Scheduling Window was updated.
        :param pulumi.Input['SchedulingPolicySchedulingWindowWindowPreferenceArgs'] window_preference: (Updatable) The Single Scheduling Window details.
        """
        if compartment_id is not None:
            pulumi.set(__self__, "compartment_id", compartment_id)
        if defined_tags is not None:
            pulumi.set(__self__, "defined_tags", defined_tags)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if freeform_tags is not None:
            pulumi.set(__self__, "freeform_tags", freeform_tags)
        if lifecycle_details is not None:
            pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        if scheduling_policy_id is not None:
            pulumi.set(__self__, "scheduling_policy_id", scheduling_policy_id)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if time_created is not None:
            pulumi.set(__self__, "time_created", time_created)
        if time_next_scheduling_window_starts is not None:
            pulumi.set(__self__, "time_next_scheduling_window_starts", time_next_scheduling_window_starts)
        if time_updated is not None:
            pulumi.set(__self__, "time_updated", time_updated)
        if window_preference is not None:
            pulumi.set(__self__, "window_preference", window_preference)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[pulumi.Input[str]]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        The user-friendly name for the Scheduling Window. The name does not need to be unique.
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> Optional[pulumi.Input[str]]:
        """
        Additional information about the current lifecycle state.
        """
        return pulumi.get(self, "lifecycle_details")

    @lifecycle_details.setter
    def lifecycle_details(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "lifecycle_details", value)

    @property
    @pulumi.getter(name="schedulingPolicyId")
    def scheduling_policy_id(self) -> Optional[pulumi.Input[str]]:
        """
        The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        """
        return pulumi.get(self, "scheduling_policy_id")

    @scheduling_policy_id.setter
    def scheduling_policy_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "scheduling_policy_id", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        """
        The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> Optional[pulumi.Input[str]]:
        """
        The date and time the Scheduling Window was created.
        """
        return pulumi.get(self, "time_created")

    @time_created.setter
    def time_created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_created", value)

    @property
    @pulumi.getter(name="timeNextSchedulingWindowStarts")
    def time_next_scheduling_window_starts(self) -> Optional[pulumi.Input[str]]:
        """
        The date and time of the next upcoming window associated within the schedulingWindow is planned to start.
        """
        return pulumi.get(self, "time_next_scheduling_window_starts")

    @time_next_scheduling_window_starts.setter
    def time_next_scheduling_window_starts(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_next_scheduling_window_starts", value)

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> Optional[pulumi.Input[str]]:
        """
        The last date and time that the Scheduling Window was updated.
        """
        return pulumi.get(self, "time_updated")

    @time_updated.setter
    def time_updated(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_updated", value)

    @property
    @pulumi.getter(name="windowPreference")
    def window_preference(self) -> Optional[pulumi.Input['SchedulingPolicySchedulingWindowWindowPreferenceArgs']]:
        """
        (Updatable) The Single Scheduling Window details.
        """
        return pulumi.get(self, "window_preference")

    @window_preference.setter
    def window_preference(self, value: Optional[pulumi.Input['SchedulingPolicySchedulingWindowWindowPreferenceArgs']]):
        pulumi.set(self, "window_preference", value)


class SchedulingPolicySchedulingWindow(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 scheduling_policy_id: Optional[pulumi.Input[str]] = None,
                 window_preference: Optional[pulumi.Input[Union['SchedulingPolicySchedulingWindowWindowPreferenceArgs', 'SchedulingPolicySchedulingWindowWindowPreferenceArgsDict']]] = None,
                 __props__=None):
        """
        This resource provides the Scheduling Policy Scheduling Window resource in Oracle Cloud Infrastructure Database service.

        Creates a Scheduling Window resource.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_scheduling_policy_scheduling_window = oci.database.SchedulingPolicySchedulingWindow("test_scheduling_policy_scheduling_window",
            scheduling_policy_id=test_scheduling_policy["id"],
            window_preference={
                "days_of_weeks": [{
                    "name": scheduling_policy_scheduling_window_window_preference_days_of_week_name,
                }],
                "duration": scheduling_policy_scheduling_window_window_preference_duration,
                "is_enforced_duration": scheduling_policy_scheduling_window_window_preference_is_enforced_duration,
                "start_time": scheduling_policy_scheduling_window_window_preference_start_time,
                "weeks_of_months": scheduling_policy_scheduling_window_window_preference_weeks_of_month,
                "months": [{
                    "name": scheduling_policy_scheduling_window_window_preference_months_name,
                }],
            },
            compartment_id=compartment_id,
            defined_tags=scheduling_policy_scheduling_window_defined_tags,
            freeform_tags={
                "Department": "Finance",
            })
        ```

        ## Import

        SchedulingPolicySchedulingWindows can be imported using the `id`, e.g.

        ```sh
        $ pulumi import oci:Database/schedulingPolicySchedulingWindow:SchedulingPolicySchedulingWindow test_scheduling_policy_scheduling_window "schedulingPolicies/{schedulingPolicyId}/schedulingWindows/{schedulingWindowId}"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] freeform_tags: (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param pulumi.Input[str] scheduling_policy_id: The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        :param pulumi.Input[Union['SchedulingPolicySchedulingWindowWindowPreferenceArgs', 'SchedulingPolicySchedulingWindowWindowPreferenceArgsDict']] window_preference: (Updatable) The Single Scheduling Window details.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SchedulingPolicySchedulingWindowArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource provides the Scheduling Policy Scheduling Window resource in Oracle Cloud Infrastructure Database service.

        Creates a Scheduling Window resource.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_scheduling_policy_scheduling_window = oci.database.SchedulingPolicySchedulingWindow("test_scheduling_policy_scheduling_window",
            scheduling_policy_id=test_scheduling_policy["id"],
            window_preference={
                "days_of_weeks": [{
                    "name": scheduling_policy_scheduling_window_window_preference_days_of_week_name,
                }],
                "duration": scheduling_policy_scheduling_window_window_preference_duration,
                "is_enforced_duration": scheduling_policy_scheduling_window_window_preference_is_enforced_duration,
                "start_time": scheduling_policy_scheduling_window_window_preference_start_time,
                "weeks_of_months": scheduling_policy_scheduling_window_window_preference_weeks_of_month,
                "months": [{
                    "name": scheduling_policy_scheduling_window_window_preference_months_name,
                }],
            },
            compartment_id=compartment_id,
            defined_tags=scheduling_policy_scheduling_window_defined_tags,
            freeform_tags={
                "Department": "Finance",
            })
        ```

        ## Import

        SchedulingPolicySchedulingWindows can be imported using the `id`, e.g.

        ```sh
        $ pulumi import oci:Database/schedulingPolicySchedulingWindow:SchedulingPolicySchedulingWindow test_scheduling_policy_scheduling_window "schedulingPolicies/{schedulingPolicyId}/schedulingWindows/{schedulingWindowId}"
        ```

        :param str resource_name: The name of the resource.
        :param SchedulingPolicySchedulingWindowArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SchedulingPolicySchedulingWindowArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 scheduling_policy_id: Optional[pulumi.Input[str]] = None,
                 window_preference: Optional[pulumi.Input[Union['SchedulingPolicySchedulingWindowWindowPreferenceArgs', 'SchedulingPolicySchedulingWindowWindowPreferenceArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SchedulingPolicySchedulingWindowArgs.__new__(SchedulingPolicySchedulingWindowArgs)

            __props__.__dict__["compartment_id"] = compartment_id
            __props__.__dict__["defined_tags"] = defined_tags
            __props__.__dict__["freeform_tags"] = freeform_tags
            if scheduling_policy_id is None and not opts.urn:
                raise TypeError("Missing required property 'scheduling_policy_id'")
            __props__.__dict__["scheduling_policy_id"] = scheduling_policy_id
            if window_preference is None and not opts.urn:
                raise TypeError("Missing required property 'window_preference'")
            __props__.__dict__["window_preference"] = window_preference
            __props__.__dict__["display_name"] = None
            __props__.__dict__["lifecycle_details"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["time_created"] = None
            __props__.__dict__["time_next_scheduling_window_starts"] = None
            __props__.__dict__["time_updated"] = None
        super(SchedulingPolicySchedulingWindow, __self__).__init__(
            'oci:Database/schedulingPolicySchedulingWindow:SchedulingPolicySchedulingWindow',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            compartment_id: Optional[pulumi.Input[str]] = None,
            defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            display_name: Optional[pulumi.Input[str]] = None,
            freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            lifecycle_details: Optional[pulumi.Input[str]] = None,
            scheduling_policy_id: Optional[pulumi.Input[str]] = None,
            state: Optional[pulumi.Input[str]] = None,
            time_created: Optional[pulumi.Input[str]] = None,
            time_next_scheduling_window_starts: Optional[pulumi.Input[str]] = None,
            time_updated: Optional[pulumi.Input[str]] = None,
            window_preference: Optional[pulumi.Input[Union['SchedulingPolicySchedulingWindowWindowPreferenceArgs', 'SchedulingPolicySchedulingWindowWindowPreferenceArgsDict']]] = None) -> 'SchedulingPolicySchedulingWindow':
        """
        Get an existing SchedulingPolicySchedulingWindow resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        :param pulumi.Input[str] display_name: The user-friendly name for the Scheduling Window. The name does not need to be unique.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] freeform_tags: (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param pulumi.Input[str] lifecycle_details: Additional information about the current lifecycle state.
        :param pulumi.Input[str] scheduling_policy_id: The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        :param pulumi.Input[str] state: The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
        :param pulumi.Input[str] time_created: The date and time the Scheduling Window was created.
        :param pulumi.Input[str] time_next_scheduling_window_starts: The date and time of the next upcoming window associated within the schedulingWindow is planned to start.
        :param pulumi.Input[str] time_updated: The last date and time that the Scheduling Window was updated.
        :param pulumi.Input[Union['SchedulingPolicySchedulingWindowWindowPreferenceArgs', 'SchedulingPolicySchedulingWindowWindowPreferenceArgsDict']] window_preference: (Updatable) The Single Scheduling Window details.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SchedulingPolicySchedulingWindowState.__new__(_SchedulingPolicySchedulingWindowState)

        __props__.__dict__["compartment_id"] = compartment_id
        __props__.__dict__["defined_tags"] = defined_tags
        __props__.__dict__["display_name"] = display_name
        __props__.__dict__["freeform_tags"] = freeform_tags
        __props__.__dict__["lifecycle_details"] = lifecycle_details
        __props__.__dict__["scheduling_policy_id"] = scheduling_policy_id
        __props__.__dict__["state"] = state
        __props__.__dict__["time_created"] = time_created
        __props__.__dict__["time_next_scheduling_window_starts"] = time_next_scheduling_window_starts
        __props__.__dict__["time_updated"] = time_updated
        __props__.__dict__["window_preference"] = window_preference
        return SchedulingPolicySchedulingWindow(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Output[str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> pulumi.Output[Mapping[str, str]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        """
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Output[str]:
        """
        The user-friendly name for the Scheduling Window. The name does not need to be unique.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> pulumi.Output[Mapping[str, str]]:
        """
        (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> pulumi.Output[str]:
        """
        Additional information about the current lifecycle state.
        """
        return pulumi.get(self, "lifecycle_details")

    @property
    @pulumi.getter(name="schedulingPolicyId")
    def scheduling_policy_id(self) -> pulumi.Output[str]:
        """
        The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        """
        return pulumi.get(self, "scheduling_policy_id")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[str]:
        """
        The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> pulumi.Output[str]:
        """
        The date and time the Scheduling Window was created.
        """
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeNextSchedulingWindowStarts")
    def time_next_scheduling_window_starts(self) -> pulumi.Output[str]:
        """
        The date and time of the next upcoming window associated within the schedulingWindow is planned to start.
        """
        return pulumi.get(self, "time_next_scheduling_window_starts")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> pulumi.Output[str]:
        """
        The last date and time that the Scheduling Window was updated.
        """
        return pulumi.get(self, "time_updated")

    @property
    @pulumi.getter(name="windowPreference")
    def window_preference(self) -> pulumi.Output['outputs.SchedulingPolicySchedulingWindowWindowPreference']:
        """
        (Updatable) The Single Scheduling Window details.
        """
        return pulumi.get(self, "window_preference")

