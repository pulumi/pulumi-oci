# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetExternalAsmUsersResult',
    'AwaitableGetExternalAsmUsersResult',
    'get_external_asm_users',
    'get_external_asm_users_output',
]

@pulumi.output_type
class GetExternalAsmUsersResult:
    """
    A collection of values returned by getExternalAsmUsers.
    """
    def __init__(__self__, external_asm_id=None, external_asm_user_collections=None, filters=None, id=None):
        if external_asm_id and not isinstance(external_asm_id, str):
            raise TypeError("Expected argument 'external_asm_id' to be a str")
        pulumi.set(__self__, "external_asm_id", external_asm_id)
        if external_asm_user_collections and not isinstance(external_asm_user_collections, list):
            raise TypeError("Expected argument 'external_asm_user_collections' to be a list")
        pulumi.set(__self__, "external_asm_user_collections", external_asm_user_collections)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="externalAsmId")
    def external_asm_id(self) -> str:
        return pulumi.get(self, "external_asm_id")

    @property
    @pulumi.getter(name="externalAsmUserCollections")
    def external_asm_user_collections(self) -> Sequence['outputs.GetExternalAsmUsersExternalAsmUserCollectionResult']:
        """
        The list of external_asm_user_collection.
        """
        return pulumi.get(self, "external_asm_user_collections")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetExternalAsmUsersFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetExternalAsmUsersResult(GetExternalAsmUsersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetExternalAsmUsersResult(
            external_asm_id=self.external_asm_id,
            external_asm_user_collections=self.external_asm_user_collections,
            filters=self.filters,
            id=self.id)


def get_external_asm_users(external_asm_id: Optional[str] = None,
                           filters: Optional[Sequence[pulumi.InputType['GetExternalAsmUsersFilterArgs']]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetExternalAsmUsersResult:
    """
    This data source provides the list of External Asm Users in Oracle Cloud Infrastructure Database Management service.

    Lists ASM users for the external ASM specified by `externalAsmId`.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_external_asm_users = oci.DatabaseManagement.get_external_asm_users(external_asm_id=oci_database_management_external_asm["test_external_asm"]["id"])
    ```


    :param str external_asm_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
    """
    __args__ = dict()
    __args__['externalAsmId'] = external_asm_id
    __args__['filters'] = filters
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:DatabaseManagement/getExternalAsmUsers:getExternalAsmUsers', __args__, opts=opts, typ=GetExternalAsmUsersResult).value

    return AwaitableGetExternalAsmUsersResult(
        external_asm_id=pulumi.get(__ret__, 'external_asm_id'),
        external_asm_user_collections=pulumi.get(__ret__, 'external_asm_user_collections'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_external_asm_users)
def get_external_asm_users_output(external_asm_id: Optional[pulumi.Input[str]] = None,
                                  filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetExternalAsmUsersFilterArgs']]]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetExternalAsmUsersResult]:
    """
    This data source provides the list of External Asm Users in Oracle Cloud Infrastructure Database Management service.

    Lists ASM users for the external ASM specified by `externalAsmId`.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_external_asm_users = oci.DatabaseManagement.get_external_asm_users(external_asm_id=oci_database_management_external_asm["test_external_asm"]["id"])
    ```


    :param str external_asm_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
    """
    ...
