# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetManagedMySqlDatabaseOutboundReplicationsResult',
    'AwaitableGetManagedMySqlDatabaseOutboundReplicationsResult',
    'get_managed_my_sql_database_outbound_replications',
    'get_managed_my_sql_database_outbound_replications_output',
]

@pulumi.output_type
class GetManagedMySqlDatabaseOutboundReplicationsResult:
    """
    A collection of values returned by getManagedMySqlDatabaseOutboundReplications.
    """
    def __init__(__self__, filters=None, id=None, managed_my_sql_database_id=None, managed_my_sql_database_outbound_replication_collections=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if managed_my_sql_database_id and not isinstance(managed_my_sql_database_id, str):
            raise TypeError("Expected argument 'managed_my_sql_database_id' to be a str")
        pulumi.set(__self__, "managed_my_sql_database_id", managed_my_sql_database_id)
        if managed_my_sql_database_outbound_replication_collections and not isinstance(managed_my_sql_database_outbound_replication_collections, list):
            raise TypeError("Expected argument 'managed_my_sql_database_outbound_replication_collections' to be a list")
        pulumi.set(__self__, "managed_my_sql_database_outbound_replication_collections", managed_my_sql_database_outbound_replication_collections)

    @_builtins.property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetManagedMySqlDatabaseOutboundReplicationsFilterResult']]:
        return pulumi.get(self, "filters")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="managedMySqlDatabaseId")
    def managed_my_sql_database_id(self) -> _builtins.str:
        return pulumi.get(self, "managed_my_sql_database_id")

    @_builtins.property
    @pulumi.getter(name="managedMySqlDatabaseOutboundReplicationCollections")
    def managed_my_sql_database_outbound_replication_collections(self) -> Sequence['outputs.GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollectionResult']:
        """
        The list of managed_my_sql_database_outbound_replication_collection.
        """
        return pulumi.get(self, "managed_my_sql_database_outbound_replication_collections")


class AwaitableGetManagedMySqlDatabaseOutboundReplicationsResult(GetManagedMySqlDatabaseOutboundReplicationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetManagedMySqlDatabaseOutboundReplicationsResult(
            filters=self.filters,
            id=self.id,
            managed_my_sql_database_id=self.managed_my_sql_database_id,
            managed_my_sql_database_outbound_replication_collections=self.managed_my_sql_database_outbound_replication_collections)


def get_managed_my_sql_database_outbound_replications(filters: Optional[Sequence[Union['GetManagedMySqlDatabaseOutboundReplicationsFilterArgs', 'GetManagedMySqlDatabaseOutboundReplicationsFilterArgsDict']]] = None,
                                                      managed_my_sql_database_id: Optional[_builtins.str] = None,
                                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetManagedMySqlDatabaseOutboundReplicationsResult:
    """
    This data source provides the list of Managed My Sql Database Outbound Replications in Oracle Cloud Infrastructure Database Management service.

    Retrieves information pertaining to outbound replications of a specific MySQL server.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_managed_my_sql_database_outbound_replications = oci.DatabaseManagement.get_managed_my_sql_database_outbound_replications(managed_my_sql_database_id=test_managed_my_sql_database["id"])
    ```


    :param _builtins.str managed_my_sql_database_id: The OCID of the Managed MySQL Database.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['managedMySqlDatabaseId'] = managed_my_sql_database_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:DatabaseManagement/getManagedMySqlDatabaseOutboundReplications:getManagedMySqlDatabaseOutboundReplications', __args__, opts=opts, typ=GetManagedMySqlDatabaseOutboundReplicationsResult).value

    return AwaitableGetManagedMySqlDatabaseOutboundReplicationsResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        managed_my_sql_database_id=pulumi.get(__ret__, 'managed_my_sql_database_id'),
        managed_my_sql_database_outbound_replication_collections=pulumi.get(__ret__, 'managed_my_sql_database_outbound_replication_collections'))
def get_managed_my_sql_database_outbound_replications_output(filters: Optional[pulumi.Input[Optional[Sequence[Union['GetManagedMySqlDatabaseOutboundReplicationsFilterArgs', 'GetManagedMySqlDatabaseOutboundReplicationsFilterArgsDict']]]]] = None,
                                                             managed_my_sql_database_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetManagedMySqlDatabaseOutboundReplicationsResult]:
    """
    This data source provides the list of Managed My Sql Database Outbound Replications in Oracle Cloud Infrastructure Database Management service.

    Retrieves information pertaining to outbound replications of a specific MySQL server.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_managed_my_sql_database_outbound_replications = oci.DatabaseManagement.get_managed_my_sql_database_outbound_replications(managed_my_sql_database_id=test_managed_my_sql_database["id"])
    ```


    :param _builtins.str managed_my_sql_database_id: The OCID of the Managed MySQL Database.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['managedMySqlDatabaseId'] = managed_my_sql_database_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:DatabaseManagement/getManagedMySqlDatabaseOutboundReplications:getManagedMySqlDatabaseOutboundReplications', __args__, opts=opts, typ=GetManagedMySqlDatabaseOutboundReplicationsResult)
    return __ret__.apply(lambda __response__: GetManagedMySqlDatabaseOutboundReplicationsResult(
        filters=pulumi.get(__response__, 'filters'),
        id=pulumi.get(__response__, 'id'),
        managed_my_sql_database_id=pulumi.get(__response__, 'managed_my_sql_database_id'),
        managed_my_sql_database_outbound_replication_collections=pulumi.get(__response__, 'managed_my_sql_database_outbound_replication_collections')))
