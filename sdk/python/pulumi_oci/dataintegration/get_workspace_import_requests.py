# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetWorkspaceImportRequestsResult',
    'AwaitableGetWorkspaceImportRequestsResult',
    'get_workspace_import_requests',
    'get_workspace_import_requests_output',
]

@pulumi.output_type
class GetWorkspaceImportRequestsResult:
    """
    A collection of values returned by getWorkspaceImportRequests.
    """
    def __init__(__self__, filters=None, id=None, import_request_summary_collections=None, import_status=None, name=None, projection=None, time_ended_in_millis=None, time_started_in_millis=None, workspace_id=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if import_request_summary_collections and not isinstance(import_request_summary_collections, list):
            raise TypeError("Expected argument 'import_request_summary_collections' to be a list")
        pulumi.set(__self__, "import_request_summary_collections", import_request_summary_collections)
        if import_status and not isinstance(import_status, str):
            raise TypeError("Expected argument 'import_status' to be a str")
        pulumi.set(__self__, "import_status", import_status)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if projection and not isinstance(projection, str):
            raise TypeError("Expected argument 'projection' to be a str")
        pulumi.set(__self__, "projection", projection)
        if time_ended_in_millis and not isinstance(time_ended_in_millis, str):
            raise TypeError("Expected argument 'time_ended_in_millis' to be a str")
        pulumi.set(__self__, "time_ended_in_millis", time_ended_in_millis)
        if time_started_in_millis and not isinstance(time_started_in_millis, str):
            raise TypeError("Expected argument 'time_started_in_millis' to be a str")
        pulumi.set(__self__, "time_started_in_millis", time_started_in_millis)
        if workspace_id and not isinstance(workspace_id, str):
            raise TypeError("Expected argument 'workspace_id' to be a str")
        pulumi.set(__self__, "workspace_id", workspace_id)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetWorkspaceImportRequestsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="importRequestSummaryCollections")
    def import_request_summary_collections(self) -> Sequence['outputs.GetWorkspaceImportRequestsImportRequestSummaryCollectionResult']:
        """
        The list of import_request_summary_collection.
        """
        return pulumi.get(self, "import_request_summary_collections")

    @property
    @pulumi.getter(name="importStatus")
    def import_status(self) -> Optional[str]:
        return pulumi.get(self, "import_status")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Name of the import request.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def projection(self) -> Optional[str]:
        return pulumi.get(self, "projection")

    @property
    @pulumi.getter(name="timeEndedInMillis")
    def time_ended_in_millis(self) -> Optional[str]:
        """
        Time at which the request was completely processed.
        """
        return pulumi.get(self, "time_ended_in_millis")

    @property
    @pulumi.getter(name="timeStartedInMillis")
    def time_started_in_millis(self) -> Optional[str]:
        """
        Time at which the request started getting processed.
        """
        return pulumi.get(self, "time_started_in_millis")

    @property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> str:
        return pulumi.get(self, "workspace_id")


class AwaitableGetWorkspaceImportRequestsResult(GetWorkspaceImportRequestsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWorkspaceImportRequestsResult(
            filters=self.filters,
            id=self.id,
            import_request_summary_collections=self.import_request_summary_collections,
            import_status=self.import_status,
            name=self.name,
            projection=self.projection,
            time_ended_in_millis=self.time_ended_in_millis,
            time_started_in_millis=self.time_started_in_millis,
            workspace_id=self.workspace_id)


def get_workspace_import_requests(filters: Optional[Sequence[pulumi.InputType['GetWorkspaceImportRequestsFilterArgs']]] = None,
                                  import_status: Optional[str] = None,
                                  name: Optional[str] = None,
                                  projection: Optional[str] = None,
                                  time_ended_in_millis: Optional[str] = None,
                                  time_started_in_millis: Optional[str] = None,
                                  workspace_id: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWorkspaceImportRequestsResult:
    """
    This data source provides the list of Workspace Import Requests in Oracle Cloud Infrastructure Data Integration service.

    This endpoint can be used to get the list of import object requests.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_workspace_import_requests = oci.DataIntegration.get_workspace_import_requests(workspace_id=oci_dataintegration_workspace["test_workspace"]["id"],
        import_status=var["workspace_import_request_import_status"],
        name=var["workspace_import_request_name"],
        projection=var["workspace_import_request_projection"],
        time_ended_in_millis=var["workspace_import_request_time_ended_in_millis"],
        time_started_in_millis=var["workspace_import_request_time_started_in_millis"])
    ```


    :param str import_status: Specifies import status to use, either -  ALL, SUCCESSFUL, IN_PROGRESS, QUEUED, FAILED .
    :param str name: Used to filter by the name of the object.
    :param str projection: This parameter allows users to specify which view of the import object response to return. SUMMARY - Summary of the import object request will be returned. This is the default option when no value is specified. DETAILS - Details of import object request will be returned. This will include details of all the objects to be exported.
    :param str time_ended_in_millis: Specifies end time of a copy object request.
    :param str time_started_in_millis: Specifies start time of a copy object request.
    :param str workspace_id: The workspace ID.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['importStatus'] = import_status
    __args__['name'] = name
    __args__['projection'] = projection
    __args__['timeEndedInMillis'] = time_ended_in_millis
    __args__['timeStartedInMillis'] = time_started_in_millis
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:DataIntegration/getWorkspaceImportRequests:getWorkspaceImportRequests', __args__, opts=opts, typ=GetWorkspaceImportRequestsResult).value

    return AwaitableGetWorkspaceImportRequestsResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        import_request_summary_collections=pulumi.get(__ret__, 'import_request_summary_collections'),
        import_status=pulumi.get(__ret__, 'import_status'),
        name=pulumi.get(__ret__, 'name'),
        projection=pulumi.get(__ret__, 'projection'),
        time_ended_in_millis=pulumi.get(__ret__, 'time_ended_in_millis'),
        time_started_in_millis=pulumi.get(__ret__, 'time_started_in_millis'),
        workspace_id=pulumi.get(__ret__, 'workspace_id'))


@_utilities.lift_output_func(get_workspace_import_requests)
def get_workspace_import_requests_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetWorkspaceImportRequestsFilterArgs']]]]] = None,
                                         import_status: Optional[pulumi.Input[Optional[str]]] = None,
                                         name: Optional[pulumi.Input[Optional[str]]] = None,
                                         projection: Optional[pulumi.Input[Optional[str]]] = None,
                                         time_ended_in_millis: Optional[pulumi.Input[Optional[str]]] = None,
                                         time_started_in_millis: Optional[pulumi.Input[Optional[str]]] = None,
                                         workspace_id: Optional[pulumi.Input[str]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetWorkspaceImportRequestsResult]:
    """
    This data source provides the list of Workspace Import Requests in Oracle Cloud Infrastructure Data Integration service.

    This endpoint can be used to get the list of import object requests.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_workspace_import_requests = oci.DataIntegration.get_workspace_import_requests(workspace_id=oci_dataintegration_workspace["test_workspace"]["id"],
        import_status=var["workspace_import_request_import_status"],
        name=var["workspace_import_request_name"],
        projection=var["workspace_import_request_projection"],
        time_ended_in_millis=var["workspace_import_request_time_ended_in_millis"],
        time_started_in_millis=var["workspace_import_request_time_started_in_millis"])
    ```


    :param str import_status: Specifies import status to use, either -  ALL, SUCCESSFUL, IN_PROGRESS, QUEUED, FAILED .
    :param str name: Used to filter by the name of the object.
    :param str projection: This parameter allows users to specify which view of the import object response to return. SUMMARY - Summary of the import object request will be returned. This is the default option when no value is specified. DETAILS - Details of import object request will be returned. This will include details of all the objects to be exported.
    :param str time_ended_in_millis: Specifies end time of a copy object request.
    :param str time_started_in_millis: Specifies start time of a copy object request.
    :param str workspace_id: The workspace ID.
    """
    ...
