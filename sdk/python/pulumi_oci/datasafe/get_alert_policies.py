# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetAlertPoliciesResult',
    'AwaitableGetAlertPoliciesResult',
    'get_alert_policies',
    'get_alert_policies_output',
]

@pulumi.output_type
class GetAlertPoliciesResult:
    """
    A collection of values returned by getAlertPolicies.
    """
    def __init__(__self__, access_level=None, alert_policy_collections=None, alert_policy_id=None, compartment_id=None, compartment_id_in_subtree=None, display_name=None, filters=None, id=None, is_user_defined=None, state=None, time_created_greater_than_or_equal_to=None, time_created_less_than=None, type=None):
        if access_level and not isinstance(access_level, str):
            raise TypeError("Expected argument 'access_level' to be a str")
        pulumi.set(__self__, "access_level", access_level)
        if alert_policy_collections and not isinstance(alert_policy_collections, list):
            raise TypeError("Expected argument 'alert_policy_collections' to be a list")
        pulumi.set(__self__, "alert_policy_collections", alert_policy_collections)
        if alert_policy_id and not isinstance(alert_policy_id, str):
            raise TypeError("Expected argument 'alert_policy_id' to be a str")
        pulumi.set(__self__, "alert_policy_id", alert_policy_id)
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if compartment_id_in_subtree and not isinstance(compartment_id_in_subtree, bool):
            raise TypeError("Expected argument 'compartment_id_in_subtree' to be a bool")
        pulumi.set(__self__, "compartment_id_in_subtree", compartment_id_in_subtree)
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        pulumi.set(__self__, "display_name", display_name)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if is_user_defined and not isinstance(is_user_defined, bool):
            raise TypeError("Expected argument 'is_user_defined' to be a bool")
        pulumi.set(__self__, "is_user_defined", is_user_defined)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if time_created_greater_than_or_equal_to and not isinstance(time_created_greater_than_or_equal_to, str):
            raise TypeError("Expected argument 'time_created_greater_than_or_equal_to' to be a str")
        pulumi.set(__self__, "time_created_greater_than_or_equal_to", time_created_greater_than_or_equal_to)
        if time_created_less_than and not isinstance(time_created_less_than, str):
            raise TypeError("Expected argument 'time_created_less_than' to be a str")
        pulumi.set(__self__, "time_created_less_than", time_created_less_than)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="accessLevel")
    def access_level(self) -> Optional[str]:
        return pulumi.get(self, "access_level")

    @property
    @pulumi.getter(name="alertPolicyCollections")
    def alert_policy_collections(self) -> Sequence['outputs.GetAlertPoliciesAlertPolicyCollectionResult']:
        """
        The list of alert_policy_collection.
        """
        return pulumi.get(self, "alert_policy_collections")

    @property
    @pulumi.getter(name="alertPolicyId")
    def alert_policy_id(self) -> Optional[str]:
        return pulumi.get(self, "alert_policy_id")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        """
        The OCID of the compartment that contains the alert policy.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="compartmentIdInSubtree")
    def compartment_id_in_subtree(self) -> Optional[bool]:
        return pulumi.get(self, "compartment_id_in_subtree")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[str]:
        """
        The display name of the alert policy.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetAlertPoliciesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isUserDefined")
    def is_user_defined(self) -> Optional[bool]:
        """
        Indicates if the alert policy is user-defined (true) or pre-defined (false).
        """
        return pulumi.get(self, "is_user_defined")

    @property
    @pulumi.getter
    def state(self) -> Optional[str]:
        """
        The current state of the alert.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="timeCreatedGreaterThanOrEqualTo")
    def time_created_greater_than_or_equal_to(self) -> Optional[str]:
        return pulumi.get(self, "time_created_greater_than_or_equal_to")

    @property
    @pulumi.getter(name="timeCreatedLessThan")
    def time_created_less_than(self) -> Optional[str]:
        return pulumi.get(self, "time_created_less_than")

    @property
    @pulumi.getter
    def type(self) -> Optional[str]:
        return pulumi.get(self, "type")


class AwaitableGetAlertPoliciesResult(GetAlertPoliciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAlertPoliciesResult(
            access_level=self.access_level,
            alert_policy_collections=self.alert_policy_collections,
            alert_policy_id=self.alert_policy_id,
            compartment_id=self.compartment_id,
            compartment_id_in_subtree=self.compartment_id_in_subtree,
            display_name=self.display_name,
            filters=self.filters,
            id=self.id,
            is_user_defined=self.is_user_defined,
            state=self.state,
            time_created_greater_than_or_equal_to=self.time_created_greater_than_or_equal_to,
            time_created_less_than=self.time_created_less_than,
            type=self.type)


def get_alert_policies(access_level: Optional[str] = None,
                       alert_policy_id: Optional[str] = None,
                       compartment_id: Optional[str] = None,
                       compartment_id_in_subtree: Optional[bool] = None,
                       display_name: Optional[str] = None,
                       filters: Optional[Sequence[pulumi.InputType['GetAlertPoliciesFilterArgs']]] = None,
                       is_user_defined: Optional[bool] = None,
                       state: Optional[str] = None,
                       time_created_greater_than_or_equal_to: Optional[str] = None,
                       time_created_less_than: Optional[str] = None,
                       type: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAlertPoliciesResult:
    """
    This data source provides the list of Alert Policies in Oracle Cloud Infrastructure Data Safe service.

    Gets a list of all alert policies.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_alert_policies = oci.DataSafe.get_alert_policies(compartment_id=var["compartment_id"],
        access_level=var["alert_policy_access_level"],
        alert_policy_id=oci_data_safe_alert_policy["test_alert_policy"]["id"],
        compartment_id_in_subtree=var["alert_policy_compartment_id_in_subtree"],
        display_name=var["alert_policy_display_name"],
        is_user_defined=var["alert_policy_is_user_defined"],
        state=var["alert_policy_state"],
        time_created_greater_than_or_equal_to=var["alert_policy_time_created_greater_than_or_equal_to"],
        time_created_less_than=var["alert_policy_time_created_less_than"],
        type=var["alert_policy_type"])
    ```


    :param str access_level: Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
    :param str alert_policy_id: A filter to return policy by it's OCID.
    :param str compartment_id: A filter to return only resources that match the specified compartment OCID.
    :param bool compartment_id_in_subtree: Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
    :param str display_name: A filter to return only resources that match the specified display name.
    :param bool is_user_defined: An optional filter to return only alert policies that are user-defined or not.
    :param str state: An optional filter to return only alert policies that have the given life-cycle state.
    :param str time_created_greater_than_or_equal_to: A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
           
           **Example:** 2016-12-19T16:39:57.600Z
    :param str time_created_less_than: Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
           
           **Example:** 2016-12-19T16:39:57.600Z
    :param str type: An optional filter to return only alert policies of a certain type.
    """
    __args__ = dict()
    __args__['accessLevel'] = access_level
    __args__['alertPolicyId'] = alert_policy_id
    __args__['compartmentId'] = compartment_id
    __args__['compartmentIdInSubtree'] = compartment_id_in_subtree
    __args__['displayName'] = display_name
    __args__['filters'] = filters
    __args__['isUserDefined'] = is_user_defined
    __args__['state'] = state
    __args__['timeCreatedGreaterThanOrEqualTo'] = time_created_greater_than_or_equal_to
    __args__['timeCreatedLessThan'] = time_created_less_than
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:DataSafe/getAlertPolicies:getAlertPolicies', __args__, opts=opts, typ=GetAlertPoliciesResult).value

    return AwaitableGetAlertPoliciesResult(
        access_level=pulumi.get(__ret__, 'access_level'),
        alert_policy_collections=pulumi.get(__ret__, 'alert_policy_collections'),
        alert_policy_id=pulumi.get(__ret__, 'alert_policy_id'),
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        compartment_id_in_subtree=pulumi.get(__ret__, 'compartment_id_in_subtree'),
        display_name=pulumi.get(__ret__, 'display_name'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        is_user_defined=pulumi.get(__ret__, 'is_user_defined'),
        state=pulumi.get(__ret__, 'state'),
        time_created_greater_than_or_equal_to=pulumi.get(__ret__, 'time_created_greater_than_or_equal_to'),
        time_created_less_than=pulumi.get(__ret__, 'time_created_less_than'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_alert_policies)
def get_alert_policies_output(access_level: Optional[pulumi.Input[Optional[str]]] = None,
                              alert_policy_id: Optional[pulumi.Input[Optional[str]]] = None,
                              compartment_id: Optional[pulumi.Input[str]] = None,
                              compartment_id_in_subtree: Optional[pulumi.Input[Optional[bool]]] = None,
                              display_name: Optional[pulumi.Input[Optional[str]]] = None,
                              filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetAlertPoliciesFilterArgs']]]]] = None,
                              is_user_defined: Optional[pulumi.Input[Optional[bool]]] = None,
                              state: Optional[pulumi.Input[Optional[str]]] = None,
                              time_created_greater_than_or_equal_to: Optional[pulumi.Input[Optional[str]]] = None,
                              time_created_less_than: Optional[pulumi.Input[Optional[str]]] = None,
                              type: Optional[pulumi.Input[Optional[str]]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAlertPoliciesResult]:
    """
    This data source provides the list of Alert Policies in Oracle Cloud Infrastructure Data Safe service.

    Gets a list of all alert policies.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_alert_policies = oci.DataSafe.get_alert_policies(compartment_id=var["compartment_id"],
        access_level=var["alert_policy_access_level"],
        alert_policy_id=oci_data_safe_alert_policy["test_alert_policy"]["id"],
        compartment_id_in_subtree=var["alert_policy_compartment_id_in_subtree"],
        display_name=var["alert_policy_display_name"],
        is_user_defined=var["alert_policy_is_user_defined"],
        state=var["alert_policy_state"],
        time_created_greater_than_or_equal_to=var["alert_policy_time_created_greater_than_or_equal_to"],
        time_created_less_than=var["alert_policy_time_created_less_than"],
        type=var["alert_policy_type"])
    ```


    :param str access_level: Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
    :param str alert_policy_id: A filter to return policy by it's OCID.
    :param str compartment_id: A filter to return only resources that match the specified compartment OCID.
    :param bool compartment_id_in_subtree: Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
    :param str display_name: A filter to return only resources that match the specified display name.
    :param bool is_user_defined: An optional filter to return only alert policies that are user-defined or not.
    :param str state: An optional filter to return only alert policies that have the given life-cycle state.
    :param str time_created_greater_than_or_equal_to: A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
           
           **Example:** 2016-12-19T16:39:57.600Z
    :param str time_created_less_than: Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
           
           **Example:** 2016-12-19T16:39:57.600Z
    :param str type: An optional filter to return only alert policies of a certain type.
    """
    ...
