# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetTargetDatabaseGroupGroupMemberResult',
    'AwaitableGetTargetDatabaseGroupGroupMemberResult',
    'get_target_database_group_group_member',
    'get_target_database_group_group_member_output',
]

@pulumi.output_type
class GetTargetDatabaseGroupGroupMemberResult:
    """
    A collection of values returned by getTargetDatabaseGroupGroupMember.
    """
    def __init__(__self__, id=None, target_database_group_id=None, target_database_id=None, target_databases=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if target_database_group_id and not isinstance(target_database_group_id, str):
            raise TypeError("Expected argument 'target_database_group_id' to be a str")
        pulumi.set(__self__, "target_database_group_id", target_database_group_id)
        if target_database_id and not isinstance(target_database_id, str):
            raise TypeError("Expected argument 'target_database_id' to be a str")
        pulumi.set(__self__, "target_database_id", target_database_id)
        if target_databases and not isinstance(target_databases, list):
            raise TypeError("Expected argument 'target_databases' to be a list")
        pulumi.set(__self__, "target_databases", target_databases)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="targetDatabaseGroupId")
    def target_database_group_id(self) -> _builtins.str:
        return pulumi.get(self, "target_database_group_id")

    @_builtins.property
    @pulumi.getter(name="targetDatabaseId")
    def target_database_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "target_database_id")

    @_builtins.property
    @pulumi.getter(name="targetDatabases")
    def target_databases(self) -> Sequence[_builtins.str]:
        """
        List of the OCIDs of the target databases which are members of the target database group.
        """
        return pulumi.get(self, "target_databases")


class AwaitableGetTargetDatabaseGroupGroupMemberResult(GetTargetDatabaseGroupGroupMemberResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTargetDatabaseGroupGroupMemberResult(
            id=self.id,
            target_database_group_id=self.target_database_group_id,
            target_database_id=self.target_database_id,
            target_databases=self.target_databases)


def get_target_database_group_group_member(target_database_group_id: Optional[_builtins.str] = None,
                                           target_database_id: Optional[_builtins.str] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTargetDatabaseGroupGroupMemberResult:
    """
    This data source provides details about a specific Target Database Group Group Member resource in Oracle Cloud Infrastructure Data Safe service.

    Retrieves the members of the target database group with the specified OCID.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_target_database_group_group_member = oci.DataSafe.get_target_database_group_group_member(target_database_group_id=test_target_database_group["id"],
        target_database_id=test_target_database["id"])
    ```


    :param _builtins.str target_database_group_id: The OCID of the specified target database group.
    :param _builtins.str target_database_id: A filter to return the target database only if it is a member of the target database group.
    """
    __args__ = dict()
    __args__['targetDatabaseGroupId'] = target_database_group_id
    __args__['targetDatabaseId'] = target_database_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:DataSafe/getTargetDatabaseGroupGroupMember:getTargetDatabaseGroupGroupMember', __args__, opts=opts, typ=GetTargetDatabaseGroupGroupMemberResult).value

    return AwaitableGetTargetDatabaseGroupGroupMemberResult(
        id=pulumi.get(__ret__, 'id'),
        target_database_group_id=pulumi.get(__ret__, 'target_database_group_id'),
        target_database_id=pulumi.get(__ret__, 'target_database_id'),
        target_databases=pulumi.get(__ret__, 'target_databases'))
def get_target_database_group_group_member_output(target_database_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                  target_database_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTargetDatabaseGroupGroupMemberResult]:
    """
    This data source provides details about a specific Target Database Group Group Member resource in Oracle Cloud Infrastructure Data Safe service.

    Retrieves the members of the target database group with the specified OCID.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_target_database_group_group_member = oci.DataSafe.get_target_database_group_group_member(target_database_group_id=test_target_database_group["id"],
        target_database_id=test_target_database["id"])
    ```


    :param _builtins.str target_database_group_id: The OCID of the specified target database group.
    :param _builtins.str target_database_id: A filter to return the target database only if it is a member of the target database group.
    """
    __args__ = dict()
    __args__['targetDatabaseGroupId'] = target_database_group_id
    __args__['targetDatabaseId'] = target_database_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:DataSafe/getTargetDatabaseGroupGroupMember:getTargetDatabaseGroupGroupMember', __args__, opts=opts, typ=GetTargetDatabaseGroupGroupMemberResult)
    return __ret__.apply(lambda __response__: GetTargetDatabaseGroupGroupMemberResult(
        id=pulumi.get(__response__, 'id'),
        target_database_group_id=pulumi.get(__response__, 'target_database_group_id'),
        target_database_id=pulumi.get(__response__, 'target_database_id'),
        target_databases=pulumi.get(__response__, 'target_databases')))
