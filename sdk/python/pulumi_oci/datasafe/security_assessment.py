# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SecurityAssessmentArgs', 'SecurityAssessment']

@pulumi.input_type
class SecurityAssessmentArgs:
    def __init__(__self__, *,
                 compartment_id: pulumi.Input[str],
                 target_id: pulumi.Input[str],
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 schedule: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a SecurityAssessment resource.
        :param pulumi.Input[str] compartment_id: (Updatable) The OCID of the compartment that contains the security assessment.
        :param pulumi.Input[str] target_id: The OCID of the target database on which security assessment is to be run.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        :param pulumi.Input[str] description: (Updatable) Description of the security assessment.
        :param pulumi.Input[str] display_name: (Updatable) The display name of the security assessment.
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        :param pulumi.Input[str] schedule: (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - <version-string>;<version-specific-schedule>
               
               Allowed version strings - "v1" v1's version specific schedule -<ss> <mm> <hh> <day-of-week> <day-of-month> Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = <ss> (So, the allowed range for <ss> is [0, 59]) 2. minutes = <mm> (So, the allowed range for <mm> is [0, 59]) 3. hours = <hh> (So, the allowed range for <hh> is [0, 23]) <day-of-week> can be either '*' (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is '*'. When not, day of week must equal the given value <day-of-month> can be either '*' (without quotes or a number between 1 and 28) 5. No constraint introduced when it is '*'. When not, day of month must equal the given value
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "target_id", target_id)
        if defined_tags is not None:
            pulumi.set(__self__, "defined_tags", defined_tags)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if freeform_tags is not None:
            pulumi.set(__self__, "freeform_tags", freeform_tags)
        if schedule is not None:
            pulumi.set(__self__, "schedule", schedule)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Input[str]:
        """
        (Updatable) The OCID of the compartment that contains the security assessment.
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="targetId")
    def target_id(self) -> pulumi.Input[str]:
        """
        The OCID of the target database on which security assessment is to be run.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "target_id", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Description of the security assessment.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The display name of the security assessment.
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter
    def schedule(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - <version-string>;<version-specific-schedule>

        Allowed version strings - "v1" v1's version specific schedule -<ss> <mm> <hh> <day-of-week> <day-of-month> Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = <ss> (So, the allowed range for <ss> is [0, 59]) 2. minutes = <mm> (So, the allowed range for <mm> is [0, 59]) 3. hours = <hh> (So, the allowed range for <hh> is [0, 23]) <day-of-week> can be either '*' (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is '*'. When not, day of week must equal the given value <day-of-month> can be either '*' (without quotes or a number between 1 and 28) 5. No constraint introduced when it is '*'. When not, day of month must equal the given value
        """
        return pulumi.get(self, "schedule")

    @schedule.setter
    def schedule(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "schedule", value)


@pulumi.input_type
class _SecurityAssessmentState:
    def __init__(__self__, *,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 ignored_assessment_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ignored_targets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 is_baseline: Optional[pulumi.Input[bool]] = None,
                 is_deviated_from_baseline: Optional[pulumi.Input[bool]] = None,
                 last_compared_baseline_id: Optional[pulumi.Input[str]] = None,
                 lifecycle_details: Optional[pulumi.Input[str]] = None,
                 link: Optional[pulumi.Input[str]] = None,
                 schedule: Optional[pulumi.Input[str]] = None,
                 schedule_security_assessment_id: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 statistics: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityAssessmentStatisticArgs']]]] = None,
                 system_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 target_id: Optional[pulumi.Input[str]] = None,
                 target_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 target_version: Optional[pulumi.Input[str]] = None,
                 time_created: Optional[pulumi.Input[str]] = None,
                 time_last_assessed: Optional[pulumi.Input[str]] = None,
                 time_updated: Optional[pulumi.Input[str]] = None,
                 triggered_by: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SecurityAssessment resources.
        :param pulumi.Input[str] compartment_id: (Updatable) The OCID of the compartment that contains the security assessment.
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        :param pulumi.Input[str] description: (Updatable) Description of the security assessment.
        :param pulumi.Input[str] display_name: (Updatable) The display name of the security assessment.
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ignored_assessment_ids: List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ignored_targets: List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        :param pulumi.Input[bool] is_baseline: Indicates whether or not the security assessment is set as a baseline. This is applicable only for saved security assessments.
        :param pulumi.Input[bool] is_deviated_from_baseline: Indicates whether or not the security assessment deviates from the baseline.
        :param pulumi.Input[str] last_compared_baseline_id: The OCID of the baseline against which the latest security assessment was compared.
        :param pulumi.Input[str] lifecycle_details: Details about the current state of the security assessment.
        :param pulumi.Input[str] link: The summary of findings for the security assessment.
        :param pulumi.Input[str] schedule: (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - <version-string>;<version-specific-schedule>
               
               Allowed version strings - "v1" v1's version specific schedule -<ss> <mm> <hh> <day-of-week> <day-of-month> Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = <ss> (So, the allowed range for <ss> is [0, 59]) 2. minutes = <mm> (So, the allowed range for <mm> is [0, 59]) 3. hours = <hh> (So, the allowed range for <hh> is [0, 23]) <day-of-week> can be either '*' (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is '*'. When not, day of week must equal the given value <day-of-month> can be either '*' (without quotes or a number between 1 and 28) 5. No constraint introduced when it is '*'. When not, day of month must equal the given value
        :param pulumi.Input[str] schedule_security_assessment_id: The OCID of the security assessment that is responsible for creating this scheduled save assessment.
        :param pulumi.Input[str] state: The current state of the security assessment.
        :param pulumi.Input[Sequence[pulumi.Input['SecurityAssessmentStatisticArgs']]] statistics: Statistics showing the number of findings for each category grouped by risk levels for all the targets in the specified security assessment.
        :param pulumi.Input[Mapping[str, Any]] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param pulumi.Input[str] target_id: The OCID of the target database on which security assessment is to be run.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[Sequence[pulumi.Input[str]]] target_ids: Array of database target OCIDs.
        :param pulumi.Input[str] target_version: The version of the target database.
        :param pulumi.Input[str] time_created: The date and time when the security assessment was created. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        :param pulumi.Input[str] time_last_assessed: The date and time when the security assessment was last run. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        :param pulumi.Input[str] time_updated: The date and time when the security assessment was last updated. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        :param pulumi.Input[str] triggered_by: Indicates whether the security assessment was created by system or by a user.
        :param pulumi.Input[str] type: The type of this security assessment. The possible types are:
        """
        if compartment_id is not None:
            pulumi.set(__self__, "compartment_id", compartment_id)
        if defined_tags is not None:
            pulumi.set(__self__, "defined_tags", defined_tags)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if freeform_tags is not None:
            pulumi.set(__self__, "freeform_tags", freeform_tags)
        if ignored_assessment_ids is not None:
            pulumi.set(__self__, "ignored_assessment_ids", ignored_assessment_ids)
        if ignored_targets is not None:
            pulumi.set(__self__, "ignored_targets", ignored_targets)
        if is_baseline is not None:
            pulumi.set(__self__, "is_baseline", is_baseline)
        if is_deviated_from_baseline is not None:
            pulumi.set(__self__, "is_deviated_from_baseline", is_deviated_from_baseline)
        if last_compared_baseline_id is not None:
            pulumi.set(__self__, "last_compared_baseline_id", last_compared_baseline_id)
        if lifecycle_details is not None:
            pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        if link is not None:
            pulumi.set(__self__, "link", link)
        if schedule is not None:
            pulumi.set(__self__, "schedule", schedule)
        if schedule_security_assessment_id is not None:
            pulumi.set(__self__, "schedule_security_assessment_id", schedule_security_assessment_id)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if statistics is not None:
            pulumi.set(__self__, "statistics", statistics)
        if system_tags is not None:
            pulumi.set(__self__, "system_tags", system_tags)
        if target_id is not None:
            pulumi.set(__self__, "target_id", target_id)
        if target_ids is not None:
            pulumi.set(__self__, "target_ids", target_ids)
        if target_version is not None:
            pulumi.set(__self__, "target_version", target_version)
        if time_created is not None:
            pulumi.set(__self__, "time_created", time_created)
        if time_last_assessed is not None:
            pulumi.set(__self__, "time_last_assessed", time_last_assessed)
        if time_updated is not None:
            pulumi.set(__self__, "time_updated", time_updated)
        if triggered_by is not None:
            pulumi.set(__self__, "triggered_by", triggered_by)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the compartment that contains the security assessment.
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Description of the security assessment.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The display name of the security assessment.
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="ignoredAssessmentIds")
    def ignored_assessment_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        """
        return pulumi.get(self, "ignored_assessment_ids")

    @ignored_assessment_ids.setter
    def ignored_assessment_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ignored_assessment_ids", value)

    @property
    @pulumi.getter(name="ignoredTargets")
    def ignored_targets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        """
        return pulumi.get(self, "ignored_targets")

    @ignored_targets.setter
    def ignored_targets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ignored_targets", value)

    @property
    @pulumi.getter(name="isBaseline")
    def is_baseline(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates whether or not the security assessment is set as a baseline. This is applicable only for saved security assessments.
        """
        return pulumi.get(self, "is_baseline")

    @is_baseline.setter
    def is_baseline(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_baseline", value)

    @property
    @pulumi.getter(name="isDeviatedFromBaseline")
    def is_deviated_from_baseline(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates whether or not the security assessment deviates from the baseline.
        """
        return pulumi.get(self, "is_deviated_from_baseline")

    @is_deviated_from_baseline.setter
    def is_deviated_from_baseline(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_deviated_from_baseline", value)

    @property
    @pulumi.getter(name="lastComparedBaselineId")
    def last_compared_baseline_id(self) -> Optional[pulumi.Input[str]]:
        """
        The OCID of the baseline against which the latest security assessment was compared.
        """
        return pulumi.get(self, "last_compared_baseline_id")

    @last_compared_baseline_id.setter
    def last_compared_baseline_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_compared_baseline_id", value)

    @property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> Optional[pulumi.Input[str]]:
        """
        Details about the current state of the security assessment.
        """
        return pulumi.get(self, "lifecycle_details")

    @lifecycle_details.setter
    def lifecycle_details(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "lifecycle_details", value)

    @property
    @pulumi.getter
    def link(self) -> Optional[pulumi.Input[str]]:
        """
        The summary of findings for the security assessment.
        """
        return pulumi.get(self, "link")

    @link.setter
    def link(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "link", value)

    @property
    @pulumi.getter
    def schedule(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - <version-string>;<version-specific-schedule>

        Allowed version strings - "v1" v1's version specific schedule -<ss> <mm> <hh> <day-of-week> <day-of-month> Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = <ss> (So, the allowed range for <ss> is [0, 59]) 2. minutes = <mm> (So, the allowed range for <mm> is [0, 59]) 3. hours = <hh> (So, the allowed range for <hh> is [0, 23]) <day-of-week> can be either '*' (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is '*'. When not, day of week must equal the given value <day-of-month> can be either '*' (without quotes or a number between 1 and 28) 5. No constraint introduced when it is '*'. When not, day of month must equal the given value
        """
        return pulumi.get(self, "schedule")

    @schedule.setter
    def schedule(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "schedule", value)

    @property
    @pulumi.getter(name="scheduleSecurityAssessmentId")
    def schedule_security_assessment_id(self) -> Optional[pulumi.Input[str]]:
        """
        The OCID of the security assessment that is responsible for creating this scheduled save assessment.
        """
        return pulumi.get(self, "schedule_security_assessment_id")

    @schedule_security_assessment_id.setter
    def schedule_security_assessment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "schedule_security_assessment_id", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        """
        The current state of the security assessment.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter
    def statistics(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityAssessmentStatisticArgs']]]]:
        """
        Statistics showing the number of findings for each category grouped by risk levels for all the targets in the specified security assessment.
        """
        return pulumi.get(self, "statistics")

    @statistics.setter
    def statistics(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityAssessmentStatisticArgs']]]]):
        pulumi.set(self, "statistics", value)

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @system_tags.setter
    def system_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "system_tags", value)

    @property
    @pulumi.getter(name="targetId")
    def target_id(self) -> Optional[pulumi.Input[str]]:
        """
        The OCID of the target database on which security assessment is to be run.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "target_id", value)

    @property
    @pulumi.getter(name="targetIds")
    def target_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Array of database target OCIDs.
        """
        return pulumi.get(self, "target_ids")

    @target_ids.setter
    def target_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "target_ids", value)

    @property
    @pulumi.getter(name="targetVersion")
    def target_version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the target database.
        """
        return pulumi.get(self, "target_version")

    @target_version.setter
    def target_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "target_version", value)

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> Optional[pulumi.Input[str]]:
        """
        The date and time when the security assessment was created. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        """
        return pulumi.get(self, "time_created")

    @time_created.setter
    def time_created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_created", value)

    @property
    @pulumi.getter(name="timeLastAssessed")
    def time_last_assessed(self) -> Optional[pulumi.Input[str]]:
        """
        The date and time when the security assessment was last run. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        """
        return pulumi.get(self, "time_last_assessed")

    @time_last_assessed.setter
    def time_last_assessed(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_last_assessed", value)

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> Optional[pulumi.Input[str]]:
        """
        The date and time when the security assessment was last updated. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        """
        return pulumi.get(self, "time_updated")

    @time_updated.setter
    def time_updated(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_updated", value)

    @property
    @pulumi.getter(name="triggeredBy")
    def triggered_by(self) -> Optional[pulumi.Input[str]]:
        """
        Indicates whether the security assessment was created by system or by a user.
        """
        return pulumi.get(self, "triggered_by")

    @triggered_by.setter
    def triggered_by(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "triggered_by", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of this security assessment. The possible types are:
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


class SecurityAssessment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 schedule: Optional[pulumi.Input[str]] = None,
                 target_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        This resource provides the Security Assessment resource in Oracle Cloud Infrastructure Data Safe service.

        Creates a new saved security assessment for one or multiple targets in a compartment. When this operation is performed,
        it will save the latest assessments in the specified compartment. If a schedule is passed, it will persist the latest assessments,
        at the defined date and time, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_security_assessment = oci.data_safe.SecurityAssessment("testSecurityAssessment",
            compartment_id=var["compartment_id"],
            target_id=oci_cloud_guard_target["test_target"]["id"],
            defined_tags={
                "Operations.CostCenter": "42",
            },
            description=var["security_assessment_description"],
            display_name=var["security_assessment_display_name"],
            freeform_tags={
                "Department": "Finance",
            },
            schedule=var["security_assessment_schedule"])
        ```

        ## Import

        SecurityAssessments can be imported using the `id`, e.g.

        ```sh
         $ pulumi import oci:DataSafe/securityAssessment:SecurityAssessment test_security_assessment "id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compartment_id: (Updatable) The OCID of the compartment that contains the security assessment.
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        :param pulumi.Input[str] description: (Updatable) Description of the security assessment.
        :param pulumi.Input[str] display_name: (Updatable) The display name of the security assessment.
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        :param pulumi.Input[str] schedule: (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - <version-string>;<version-specific-schedule>
               
               Allowed version strings - "v1" v1's version specific schedule -<ss> <mm> <hh> <day-of-week> <day-of-month> Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = <ss> (So, the allowed range for <ss> is [0, 59]) 2. minutes = <mm> (So, the allowed range for <mm> is [0, 59]) 3. hours = <hh> (So, the allowed range for <hh> is [0, 23]) <day-of-week> can be either '*' (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is '*'. When not, day of week must equal the given value <day-of-month> can be either '*' (without quotes or a number between 1 and 28) 5. No constraint introduced when it is '*'. When not, day of month must equal the given value
        :param pulumi.Input[str] target_id: The OCID of the target database on which security assessment is to be run.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SecurityAssessmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource provides the Security Assessment resource in Oracle Cloud Infrastructure Data Safe service.

        Creates a new saved security assessment for one or multiple targets in a compartment. When this operation is performed,
        it will save the latest assessments in the specified compartment. If a schedule is passed, it will persist the latest assessments,
        at the defined date and time, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_security_assessment = oci.data_safe.SecurityAssessment("testSecurityAssessment",
            compartment_id=var["compartment_id"],
            target_id=oci_cloud_guard_target["test_target"]["id"],
            defined_tags={
                "Operations.CostCenter": "42",
            },
            description=var["security_assessment_description"],
            display_name=var["security_assessment_display_name"],
            freeform_tags={
                "Department": "Finance",
            },
            schedule=var["security_assessment_schedule"])
        ```

        ## Import

        SecurityAssessments can be imported using the `id`, e.g.

        ```sh
         $ pulumi import oci:DataSafe/securityAssessment:SecurityAssessment test_security_assessment "id"
        ```

        :param str resource_name: The name of the resource.
        :param SecurityAssessmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SecurityAssessmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 schedule: Optional[pulumi.Input[str]] = None,
                 target_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SecurityAssessmentArgs.__new__(SecurityAssessmentArgs)

            if compartment_id is None and not opts.urn:
                raise TypeError("Missing required property 'compartment_id'")
            __props__.__dict__["compartment_id"] = compartment_id
            __props__.__dict__["defined_tags"] = defined_tags
            __props__.__dict__["description"] = description
            __props__.__dict__["display_name"] = display_name
            __props__.__dict__["freeform_tags"] = freeform_tags
            __props__.__dict__["schedule"] = schedule
            if target_id is None and not opts.urn:
                raise TypeError("Missing required property 'target_id'")
            __props__.__dict__["target_id"] = target_id
            __props__.__dict__["ignored_assessment_ids"] = None
            __props__.__dict__["ignored_targets"] = None
            __props__.__dict__["is_baseline"] = None
            __props__.__dict__["is_deviated_from_baseline"] = None
            __props__.__dict__["last_compared_baseline_id"] = None
            __props__.__dict__["lifecycle_details"] = None
            __props__.__dict__["link"] = None
            __props__.__dict__["schedule_security_assessment_id"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["statistics"] = None
            __props__.__dict__["system_tags"] = None
            __props__.__dict__["target_ids"] = None
            __props__.__dict__["target_version"] = None
            __props__.__dict__["time_created"] = None
            __props__.__dict__["time_last_assessed"] = None
            __props__.__dict__["time_updated"] = None
            __props__.__dict__["triggered_by"] = None
            __props__.__dict__["type"] = None
        super(SecurityAssessment, __self__).__init__(
            'oci:DataSafe/securityAssessment:SecurityAssessment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            compartment_id: Optional[pulumi.Input[str]] = None,
            defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            description: Optional[pulumi.Input[str]] = None,
            display_name: Optional[pulumi.Input[str]] = None,
            freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            ignored_assessment_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ignored_targets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            is_baseline: Optional[pulumi.Input[bool]] = None,
            is_deviated_from_baseline: Optional[pulumi.Input[bool]] = None,
            last_compared_baseline_id: Optional[pulumi.Input[str]] = None,
            lifecycle_details: Optional[pulumi.Input[str]] = None,
            link: Optional[pulumi.Input[str]] = None,
            schedule: Optional[pulumi.Input[str]] = None,
            schedule_security_assessment_id: Optional[pulumi.Input[str]] = None,
            state: Optional[pulumi.Input[str]] = None,
            statistics: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityAssessmentStatisticArgs']]]]] = None,
            system_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            target_id: Optional[pulumi.Input[str]] = None,
            target_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            target_version: Optional[pulumi.Input[str]] = None,
            time_created: Optional[pulumi.Input[str]] = None,
            time_last_assessed: Optional[pulumi.Input[str]] = None,
            time_updated: Optional[pulumi.Input[str]] = None,
            triggered_by: Optional[pulumi.Input[str]] = None,
            type: Optional[pulumi.Input[str]] = None) -> 'SecurityAssessment':
        """
        Get an existing SecurityAssessment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compartment_id: (Updatable) The OCID of the compartment that contains the security assessment.
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        :param pulumi.Input[str] description: (Updatable) Description of the security assessment.
        :param pulumi.Input[str] display_name: (Updatable) The display name of the security assessment.
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ignored_assessment_ids: List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ignored_targets: List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        :param pulumi.Input[bool] is_baseline: Indicates whether or not the security assessment is set as a baseline. This is applicable only for saved security assessments.
        :param pulumi.Input[bool] is_deviated_from_baseline: Indicates whether or not the security assessment deviates from the baseline.
        :param pulumi.Input[str] last_compared_baseline_id: The OCID of the baseline against which the latest security assessment was compared.
        :param pulumi.Input[str] lifecycle_details: Details about the current state of the security assessment.
        :param pulumi.Input[str] link: The summary of findings for the security assessment.
        :param pulumi.Input[str] schedule: (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - <version-string>;<version-specific-schedule>
               
               Allowed version strings - "v1" v1's version specific schedule -<ss> <mm> <hh> <day-of-week> <day-of-month> Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = <ss> (So, the allowed range for <ss> is [0, 59]) 2. minutes = <mm> (So, the allowed range for <mm> is [0, 59]) 3. hours = <hh> (So, the allowed range for <hh> is [0, 23]) <day-of-week> can be either '*' (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is '*'. When not, day of week must equal the given value <day-of-month> can be either '*' (without quotes or a number between 1 and 28) 5. No constraint introduced when it is '*'. When not, day of month must equal the given value
        :param pulumi.Input[str] schedule_security_assessment_id: The OCID of the security assessment that is responsible for creating this scheduled save assessment.
        :param pulumi.Input[str] state: The current state of the security assessment.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SecurityAssessmentStatisticArgs']]]] statistics: Statistics showing the number of findings for each category grouped by risk levels for all the targets in the specified security assessment.
        :param pulumi.Input[Mapping[str, Any]] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param pulumi.Input[str] target_id: The OCID of the target database on which security assessment is to be run.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[Sequence[pulumi.Input[str]]] target_ids: Array of database target OCIDs.
        :param pulumi.Input[str] target_version: The version of the target database.
        :param pulumi.Input[str] time_created: The date and time when the security assessment was created. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        :param pulumi.Input[str] time_last_assessed: The date and time when the security assessment was last run. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        :param pulumi.Input[str] time_updated: The date and time when the security assessment was last updated. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        :param pulumi.Input[str] triggered_by: Indicates whether the security assessment was created by system or by a user.
        :param pulumi.Input[str] type: The type of this security assessment. The possible types are:
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SecurityAssessmentState.__new__(_SecurityAssessmentState)

        __props__.__dict__["compartment_id"] = compartment_id
        __props__.__dict__["defined_tags"] = defined_tags
        __props__.__dict__["description"] = description
        __props__.__dict__["display_name"] = display_name
        __props__.__dict__["freeform_tags"] = freeform_tags
        __props__.__dict__["ignored_assessment_ids"] = ignored_assessment_ids
        __props__.__dict__["ignored_targets"] = ignored_targets
        __props__.__dict__["is_baseline"] = is_baseline
        __props__.__dict__["is_deviated_from_baseline"] = is_deviated_from_baseline
        __props__.__dict__["last_compared_baseline_id"] = last_compared_baseline_id
        __props__.__dict__["lifecycle_details"] = lifecycle_details
        __props__.__dict__["link"] = link
        __props__.__dict__["schedule"] = schedule
        __props__.__dict__["schedule_security_assessment_id"] = schedule_security_assessment_id
        __props__.__dict__["state"] = state
        __props__.__dict__["statistics"] = statistics
        __props__.__dict__["system_tags"] = system_tags
        __props__.__dict__["target_id"] = target_id
        __props__.__dict__["target_ids"] = target_ids
        __props__.__dict__["target_version"] = target_version
        __props__.__dict__["time_created"] = time_created
        __props__.__dict__["time_last_assessed"] = time_last_assessed
        __props__.__dict__["time_updated"] = time_updated
        __props__.__dict__["triggered_by"] = triggered_by
        __props__.__dict__["type"] = type
        return SecurityAssessment(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Output[str]:
        """
        (Updatable) The OCID of the compartment that contains the security assessment.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        (Updatable) Description of the security assessment.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Output[str]:
        """
        (Updatable) The display name of the security assessment.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter(name="ignoredAssessmentIds")
    def ignored_assessment_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        """
        return pulumi.get(self, "ignored_assessment_ids")

    @property
    @pulumi.getter(name="ignoredTargets")
    def ignored_targets(self) -> pulumi.Output[Sequence[str]]:
        """
        List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        """
        return pulumi.get(self, "ignored_targets")

    @property
    @pulumi.getter(name="isBaseline")
    def is_baseline(self) -> pulumi.Output[bool]:
        """
        Indicates whether or not the security assessment is set as a baseline. This is applicable only for saved security assessments.
        """
        return pulumi.get(self, "is_baseline")

    @property
    @pulumi.getter(name="isDeviatedFromBaseline")
    def is_deviated_from_baseline(self) -> pulumi.Output[bool]:
        """
        Indicates whether or not the security assessment deviates from the baseline.
        """
        return pulumi.get(self, "is_deviated_from_baseline")

    @property
    @pulumi.getter(name="lastComparedBaselineId")
    def last_compared_baseline_id(self) -> pulumi.Output[str]:
        """
        The OCID of the baseline against which the latest security assessment was compared.
        """
        return pulumi.get(self, "last_compared_baseline_id")

    @property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> pulumi.Output[str]:
        """
        Details about the current state of the security assessment.
        """
        return pulumi.get(self, "lifecycle_details")

    @property
    @pulumi.getter
    def link(self) -> pulumi.Output[str]:
        """
        The summary of findings for the security assessment.
        """
        return pulumi.get(self, "link")

    @property
    @pulumi.getter
    def schedule(self) -> pulumi.Output[str]:
        """
        (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - <version-string>;<version-specific-schedule>

        Allowed version strings - "v1" v1's version specific schedule -<ss> <mm> <hh> <day-of-week> <day-of-month> Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = <ss> (So, the allowed range for <ss> is [0, 59]) 2. minutes = <mm> (So, the allowed range for <mm> is [0, 59]) 3. hours = <hh> (So, the allowed range for <hh> is [0, 23]) <day-of-week> can be either '*' (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is '*'. When not, day of week must equal the given value <day-of-month> can be either '*' (without quotes or a number between 1 and 28) 5. No constraint introduced when it is '*'. When not, day of month must equal the given value
        """
        return pulumi.get(self, "schedule")

    @property
    @pulumi.getter(name="scheduleSecurityAssessmentId")
    def schedule_security_assessment_id(self) -> pulumi.Output[str]:
        """
        The OCID of the security assessment that is responsible for creating this scheduled save assessment.
        """
        return pulumi.get(self, "schedule_security_assessment_id")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[str]:
        """
        The current state of the security assessment.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter
    def statistics(self) -> pulumi.Output[Sequence['outputs.SecurityAssessmentStatistic']]:
        """
        Statistics showing the number of findings for each category grouped by risk levels for all the targets in the specified security assessment.
        """
        return pulumi.get(self, "statistics")

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @property
    @pulumi.getter(name="targetId")
    def target_id(self) -> pulumi.Output[str]:
        """
        The OCID of the target database on which security assessment is to be run.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "target_id")

    @property
    @pulumi.getter(name="targetIds")
    def target_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        Array of database target OCIDs.
        """
        return pulumi.get(self, "target_ids")

    @property
    @pulumi.getter(name="targetVersion")
    def target_version(self) -> pulumi.Output[str]:
        """
        The version of the target database.
        """
        return pulumi.get(self, "target_version")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> pulumi.Output[str]:
        """
        The date and time when the security assessment was created. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        """
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeLastAssessed")
    def time_last_assessed(self) -> pulumi.Output[str]:
        """
        The date and time when the security assessment was last run. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        """
        return pulumi.get(self, "time_last_assessed")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> pulumi.Output[str]:
        """
        The date and time when the security assessment was last updated. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        """
        return pulumi.get(self, "time_updated")

    @property
    @pulumi.getter(name="triggeredBy")
    def triggered_by(self) -> pulumi.Output[str]:
        """
        Indicates whether the security assessment was created by system or by a user.
        """
        return pulumi.get(self, "triggered_by")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of this security assessment. The possible types are:
        """
        return pulumi.get(self, "type")

