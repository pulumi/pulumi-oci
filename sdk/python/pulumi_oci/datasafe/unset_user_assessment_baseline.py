# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['UnsetUserAssessmentBaselineArgs', 'UnsetUserAssessmentBaseline']

@pulumi.input_type
class UnsetUserAssessmentBaselineArgs:
    def __init__(__self__, *,
                 user_assessment_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a UnsetUserAssessmentBaseline resource.
        :param pulumi.Input[str] user_assessment_id: The OCID of the user assessment.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        UnsetUserAssessmentBaselineArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            user_assessment_id=user_assessment_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             user_assessment_id: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("user_assessment_id", user_assessment_id)

    @property
    @pulumi.getter(name="userAssessmentId")
    def user_assessment_id(self) -> pulumi.Input[str]:
        """
        The OCID of the user assessment.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "user_assessment_id")

    @user_assessment_id.setter
    def user_assessment_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "user_assessment_id", value)


@pulumi.input_type
class _UnsetUserAssessmentBaselineState:
    def __init__(__self__, *,
                 user_assessment_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering UnsetUserAssessmentBaseline resources.
        :param pulumi.Input[str] user_assessment_id: The OCID of the user assessment.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        _UnsetUserAssessmentBaselineState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            user_assessment_id=user_assessment_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             user_assessment_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if user_assessment_id is not None:
            _setter("user_assessment_id", user_assessment_id)

    @property
    @pulumi.getter(name="userAssessmentId")
    def user_assessment_id(self) -> Optional[pulumi.Input[str]]:
        """
        The OCID of the user assessment.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "user_assessment_id")

    @user_assessment_id.setter
    def user_assessment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_assessment_id", value)


class UnsetUserAssessmentBaseline(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 user_assessment_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        This resource provides the Unset User Assessment Baseline resource in Oracle Cloud Infrastructure Data Safe service.

        Removes the baseline setting for the saved user assessment. The saved user assessment is no longer considered a baseline.
        Sets the if-match parameter to the value of the etag from a previous GET or POST response for that resource.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_unset_user_assessment_baseline = oci.data_safe.UnsetUserAssessmentBaseline("testUnsetUserAssessmentBaseline", user_assessment_id=oci_data_safe_user_assessment["test_user_assessment"]["id"])
        ```

        ## Import

        UnsetUserAssessmentBaseline can be imported using the `id`, e.g.

        ```sh
         $ pulumi import oci:DataSafe/unsetUserAssessmentBaseline:UnsetUserAssessmentBaseline test_unset_user_assessment_baseline "id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] user_assessment_id: The OCID of the user assessment.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: UnsetUserAssessmentBaselineArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource provides the Unset User Assessment Baseline resource in Oracle Cloud Infrastructure Data Safe service.

        Removes the baseline setting for the saved user assessment. The saved user assessment is no longer considered a baseline.
        Sets the if-match parameter to the value of the etag from a previous GET or POST response for that resource.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_unset_user_assessment_baseline = oci.data_safe.UnsetUserAssessmentBaseline("testUnsetUserAssessmentBaseline", user_assessment_id=oci_data_safe_user_assessment["test_user_assessment"]["id"])
        ```

        ## Import

        UnsetUserAssessmentBaseline can be imported using the `id`, e.g.

        ```sh
         $ pulumi import oci:DataSafe/unsetUserAssessmentBaseline:UnsetUserAssessmentBaseline test_unset_user_assessment_baseline "id"
        ```

        :param str resource_name: The name of the resource.
        :param UnsetUserAssessmentBaselineArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(UnsetUserAssessmentBaselineArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            UnsetUserAssessmentBaselineArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 user_assessment_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = UnsetUserAssessmentBaselineArgs.__new__(UnsetUserAssessmentBaselineArgs)

            if user_assessment_id is None and not opts.urn:
                raise TypeError("Missing required property 'user_assessment_id'")
            __props__.__dict__["user_assessment_id"] = user_assessment_id
        super(UnsetUserAssessmentBaseline, __self__).__init__(
            'oci:DataSafe/unsetUserAssessmentBaseline:UnsetUserAssessmentBaseline',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            user_assessment_id: Optional[pulumi.Input[str]] = None) -> 'UnsetUserAssessmentBaseline':
        """
        Get an existing UnsetUserAssessmentBaseline resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] user_assessment_id: The OCID of the user assessment.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _UnsetUserAssessmentBaselineState.__new__(_UnsetUserAssessmentBaselineState)

        __props__.__dict__["user_assessment_id"] = user_assessment_id
        return UnsetUserAssessmentBaseline(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="userAssessmentId")
    def user_assessment_id(self) -> pulumi.Output[str]:
        """
        The OCID of the user assessment.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "user_assessment_id")

