# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['UnsetUserAssessmentBaselineManagementArgs', 'UnsetUserAssessmentBaselineManagement']

@pulumi.input_type
class UnsetUserAssessmentBaselineManagementArgs:
    def __init__(__self__, *,
                 compartment_id: pulumi.Input[str],
                 user_assessment_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a UnsetUserAssessmentBaselineManagement resource.
        :param pulumi.Input[str] compartment_id: The compartment OCID where the assessment resides.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] user_assessment_id: The OCID of the user assessment.
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "user_assessment_id", user_assessment_id)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Input[str]:
        """
        The compartment OCID where the assessment resides.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="userAssessmentId")
    def user_assessment_id(self) -> pulumi.Input[str]:
        """
        The OCID of the user assessment.
        """
        return pulumi.get(self, "user_assessment_id")

    @user_assessment_id.setter
    def user_assessment_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "user_assessment_id", value)


@pulumi.input_type
class _UnsetUserAssessmentBaselineManagementState:
    def __init__(__self__, *,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 user_assessment_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering UnsetUserAssessmentBaselineManagement resources.
        :param pulumi.Input[str] compartment_id: The compartment OCID where the assessment resides.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] user_assessment_id: The OCID of the user assessment.
        """
        if compartment_id is not None:
            pulumi.set(__self__, "compartment_id", compartment_id)
        if user_assessment_id is not None:
            pulumi.set(__self__, "user_assessment_id", user_assessment_id)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[pulumi.Input[str]]:
        """
        The compartment OCID where the assessment resides.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="userAssessmentId")
    def user_assessment_id(self) -> Optional[pulumi.Input[str]]:
        """
        The OCID of the user assessment.
        """
        return pulumi.get(self, "user_assessment_id")

    @user_assessment_id.setter
    def user_assessment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_assessment_id", value)


class UnsetUserAssessmentBaselineManagement(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 user_assessment_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        This resource provides the Unset User Assessment Baseline management resource in Oracle Cloud Infrastructure Data Safe service.

        Removes the baseline setting for the saved user assessment as the baseline in the compartment where the the specified assessment resides.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_unset_user_assessment_baseline_management = oci.data_safe.UnsetUserAssessmentBaselineManagement("test_unset_user_assessment_baseline_management",
            user_assessment_id=test_set_user_assessment_baseline_management["userAssessmentId"],
            compartment_id=comaprtment_id)
        ```

        ## Import

        UnsetUserAssessmentBaselineManagement can be imported using the `id`, e.g.

        ```sh
        $ pulumi import oci:DataSafe/unsetUserAssessmentBaselineManagement:UnsetUserAssessmentBaselineManagement test_unset_user_assessment_baseline_management "id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compartment_id: The compartment OCID where the assessment resides.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] user_assessment_id: The OCID of the user assessment.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: UnsetUserAssessmentBaselineManagementArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource provides the Unset User Assessment Baseline management resource in Oracle Cloud Infrastructure Data Safe service.

        Removes the baseline setting for the saved user assessment as the baseline in the compartment where the the specified assessment resides.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_unset_user_assessment_baseline_management = oci.data_safe.UnsetUserAssessmentBaselineManagement("test_unset_user_assessment_baseline_management",
            user_assessment_id=test_set_user_assessment_baseline_management["userAssessmentId"],
            compartment_id=comaprtment_id)
        ```

        ## Import

        UnsetUserAssessmentBaselineManagement can be imported using the `id`, e.g.

        ```sh
        $ pulumi import oci:DataSafe/unsetUserAssessmentBaselineManagement:UnsetUserAssessmentBaselineManagement test_unset_user_assessment_baseline_management "id"
        ```

        :param str resource_name: The name of the resource.
        :param UnsetUserAssessmentBaselineManagementArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(UnsetUserAssessmentBaselineManagementArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 user_assessment_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = UnsetUserAssessmentBaselineManagementArgs.__new__(UnsetUserAssessmentBaselineManagementArgs)

            if compartment_id is None and not opts.urn:
                raise TypeError("Missing required property 'compartment_id'")
            __props__.__dict__["compartment_id"] = compartment_id
            if user_assessment_id is None and not opts.urn:
                raise TypeError("Missing required property 'user_assessment_id'")
            __props__.__dict__["user_assessment_id"] = user_assessment_id
        super(UnsetUserAssessmentBaselineManagement, __self__).__init__(
            'oci:DataSafe/unsetUserAssessmentBaselineManagement:UnsetUserAssessmentBaselineManagement',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            compartment_id: Optional[pulumi.Input[str]] = None,
            user_assessment_id: Optional[pulumi.Input[str]] = None) -> 'UnsetUserAssessmentBaselineManagement':
        """
        Get an existing UnsetUserAssessmentBaselineManagement resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compartment_id: The compartment OCID where the assessment resides.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] user_assessment_id: The OCID of the user assessment.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _UnsetUserAssessmentBaselineManagementState.__new__(_UnsetUserAssessmentBaselineManagementState)

        __props__.__dict__["compartment_id"] = compartment_id
        __props__.__dict__["user_assessment_id"] = user_assessment_id
        return UnsetUserAssessmentBaselineManagement(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Output[str]:
        """
        The compartment OCID where the assessment resides.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="userAssessmentId")
    def user_assessment_id(self) -> pulumi.Output[str]:
        """
        The OCID of the user assessment.
        """
        return pulumi.get(self, "user_assessment_id")

