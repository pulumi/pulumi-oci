# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetModelCustomMetadataArtifactContentResult',
    'AwaitableGetModelCustomMetadataArtifactContentResult',
    'get_model_custom_metadata_artifact_content',
    'get_model_custom_metadata_artifact_content_output',
]

@pulumi.output_type
class GetModelCustomMetadataArtifactContentResult:
    """
    A collection of values returned by getModelCustomMetadataArtifactContent.
    """
    def __init__(__self__, id=None, metadatum_key_name=None, model_id=None, range=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if metadatum_key_name and not isinstance(metadatum_key_name, str):
            raise TypeError("Expected argument 'metadatum_key_name' to be a str")
        pulumi.set(__self__, "metadatum_key_name", metadatum_key_name)
        if model_id and not isinstance(model_id, str):
            raise TypeError("Expected argument 'model_id' to be a str")
        pulumi.set(__self__, "model_id", model_id)
        if range and not isinstance(range, str):
            raise TypeError("Expected argument 'range' to be a str")
        pulumi.set(__self__, "range", range)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="metadatumKeyName")
    def metadatum_key_name(self) -> str:
        return pulumi.get(self, "metadatum_key_name")

    @property
    @pulumi.getter(name="modelId")
    def model_id(self) -> str:
        return pulumi.get(self, "model_id")

    @property
    @pulumi.getter
    def range(self) -> Optional[str]:
        return pulumi.get(self, "range")


class AwaitableGetModelCustomMetadataArtifactContentResult(GetModelCustomMetadataArtifactContentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetModelCustomMetadataArtifactContentResult(
            id=self.id,
            metadatum_key_name=self.metadatum_key_name,
            model_id=self.model_id,
            range=self.range)


def get_model_custom_metadata_artifact_content(metadatum_key_name: Optional[str] = None,
                                               model_id: Optional[str] = None,
                                               range: Optional[str] = None,
                                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetModelCustomMetadataArtifactContentResult:
    """
    This data source provides details about a specific Model Custom Metadata Artifact Content resource in Oracle Cloud Infrastructure Data Science service.

    Downloads model custom metadata artifact content for specified model metadata key.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_model_custom_metadata_artifact_content = oci.DataScience.get_model_custom_metadata_artifact_content(metadatum_key_name=test_key["name"],
        model_id=test_model["id"],
        range=model_custom_metadata_artifact_content_range)
    ```


    :param str metadatum_key_name: The name of the model metadatum in the metadata.
    :param str model_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
    :param str range: Optional byte range to fetch, as described in [RFC 7233](https://tools.ietf.org/html/rfc7232#section-2.1), section 2.1. Note that only a single range of bytes is supported.
    """
    __args__ = dict()
    __args__['metadatumKeyName'] = metadatum_key_name
    __args__['modelId'] = model_id
    __args__['range'] = range
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:DataScience/getModelCustomMetadataArtifactContent:getModelCustomMetadataArtifactContent', __args__, opts=opts, typ=GetModelCustomMetadataArtifactContentResult).value

    return AwaitableGetModelCustomMetadataArtifactContentResult(
        id=pulumi.get(__ret__, 'id'),
        metadatum_key_name=pulumi.get(__ret__, 'metadatum_key_name'),
        model_id=pulumi.get(__ret__, 'model_id'),
        range=pulumi.get(__ret__, 'range'))
def get_model_custom_metadata_artifact_content_output(metadatum_key_name: Optional[pulumi.Input[str]] = None,
                                                      model_id: Optional[pulumi.Input[str]] = None,
                                                      range: Optional[pulumi.Input[Optional[str]]] = None,
                                                      opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetModelCustomMetadataArtifactContentResult]:
    """
    This data source provides details about a specific Model Custom Metadata Artifact Content resource in Oracle Cloud Infrastructure Data Science service.

    Downloads model custom metadata artifact content for specified model metadata key.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_model_custom_metadata_artifact_content = oci.DataScience.get_model_custom_metadata_artifact_content(metadatum_key_name=test_key["name"],
        model_id=test_model["id"],
        range=model_custom_metadata_artifact_content_range)
    ```


    :param str metadatum_key_name: The name of the model metadatum in the metadata.
    :param str model_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
    :param str range: Optional byte range to fetch, as described in [RFC 7233](https://tools.ietf.org/html/rfc7232#section-2.1), section 2.1. Note that only a single range of bytes is supported.
    """
    __args__ = dict()
    __args__['metadatumKeyName'] = metadatum_key_name
    __args__['modelId'] = model_id
    __args__['range'] = range
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:DataScience/getModelCustomMetadataArtifactContent:getModelCustomMetadataArtifactContent', __args__, opts=opts, typ=GetModelCustomMetadataArtifactContentResult)
    return __ret__.apply(lambda __response__: GetModelCustomMetadataArtifactContentResult(
        id=pulumi.get(__response__, 'id'),
        metadatum_key_name=pulumi.get(__response__, 'metadatum_key_name'),
        model_id=pulumi.get(__response__, 'model_id'),
        range=pulumi.get(__response__, 'range')))
