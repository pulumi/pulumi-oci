# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetVulnerabilityAggregatedVulnerabilityDataResult',
    'AwaitableGetVulnerabilityAggregatedVulnerabilityDataResult',
    'get_vulnerability_aggregated_vulnerability_data',
    'get_vulnerability_aggregated_vulnerability_data_output',
]

@pulumi.output_type
class GetVulnerabilityAggregatedVulnerabilityDataResult:
    """
    A collection of values returned by getVulnerabilityAggregatedVulnerabilityData.
    """
    def __init__(__self__, aggregated_vulnerability_collections=None, compartment_id=None, database_release=None, filters=None, id=None, state=None, time_created_greater_than=None, time_ended_less_than=None):
        if aggregated_vulnerability_collections and not isinstance(aggregated_vulnerability_collections, list):
            raise TypeError("Expected argument 'aggregated_vulnerability_collections' to be a list")
        pulumi.set(__self__, "aggregated_vulnerability_collections", aggregated_vulnerability_collections)
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if database_release and not isinstance(database_release, str):
            raise TypeError("Expected argument 'database_release' to be a str")
        pulumi.set(__self__, "database_release", database_release)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if time_created_greater_than and not isinstance(time_created_greater_than, str):
            raise TypeError("Expected argument 'time_created_greater_than' to be a str")
        pulumi.set(__self__, "time_created_greater_than", time_created_greater_than)
        if time_ended_less_than and not isinstance(time_ended_less_than, str):
            raise TypeError("Expected argument 'time_ended_less_than' to be a str")
        pulumi.set(__self__, "time_ended_less_than", time_ended_less_than)

    @property
    @pulumi.getter(name="aggregatedVulnerabilityCollections")
    def aggregated_vulnerability_collections(self) -> Sequence['outputs.GetVulnerabilityAggregatedVulnerabilityDataAggregatedVulnerabilityCollectionResult']:
        """
        The list of aggregated_vulnerability_collection.
        """
        return pulumi.get(self, "aggregated_vulnerability_collections")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="databaseRelease")
    def database_release(self) -> Optional[str]:
        return pulumi.get(self, "database_release")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetVulnerabilityAggregatedVulnerabilityDataFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def state(self) -> Optional[str]:
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="timeCreatedGreaterThan")
    def time_created_greater_than(self) -> Optional[str]:
        return pulumi.get(self, "time_created_greater_than")

    @property
    @pulumi.getter(name="timeEndedLessThan")
    def time_ended_less_than(self) -> Optional[str]:
        return pulumi.get(self, "time_ended_less_than")


class AwaitableGetVulnerabilityAggregatedVulnerabilityDataResult(GetVulnerabilityAggregatedVulnerabilityDataResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVulnerabilityAggregatedVulnerabilityDataResult(
            aggregated_vulnerability_collections=self.aggregated_vulnerability_collections,
            compartment_id=self.compartment_id,
            database_release=self.database_release,
            filters=self.filters,
            id=self.id,
            state=self.state,
            time_created_greater_than=self.time_created_greater_than,
            time_ended_less_than=self.time_ended_less_than)


def get_vulnerability_aggregated_vulnerability_data(compartment_id: Optional[str] = None,
                                                    database_release: Optional[str] = None,
                                                    filters: Optional[Sequence[Union['GetVulnerabilityAggregatedVulnerabilityDataFilterArgs', 'GetVulnerabilityAggregatedVulnerabilityDataFilterArgsDict']]] = None,
                                                    state: Optional[str] = None,
                                                    time_created_greater_than: Optional[str] = None,
                                                    time_ended_less_than: Optional[str] = None,
                                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVulnerabilityAggregatedVulnerabilityDataResult:
    """
    This data source provides the list of Vulnerability Aggregated Vulnerability Data in Oracle Cloud Infrastructure Dblm service.

    Gets an AggregatedVulnerabilityData

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_vulnerability_aggregated_vulnerability_data = oci.Dblm.get_vulnerability_aggregated_vulnerability_data(compartment_id=compartment_id,
        database_release=vulnerability_aggregated_vulnerability_data_database_release,
        state=vulnerability_aggregated_vulnerability_data_state,
        time_created_greater_than=vulnerability_aggregated_vulnerability_data_time_created_greater_than,
        time_ended_less_than=vulnerability_aggregated_vulnerability_data_time_ended_less_than)
    ```


    :param str compartment_id: The ID of the compartment in which to list resources.
    :param str database_release: A filter to return only database that match the given release version.
    :param str state: A filter to return only resources their lifecycleState matches the given lifecycleState.
    :param str time_created_greater_than: The created greater than.
    :param str time_ended_less_than: The time ended less than.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['databaseRelease'] = database_release
    __args__['filters'] = filters
    __args__['state'] = state
    __args__['timeCreatedGreaterThan'] = time_created_greater_than
    __args__['timeEndedLessThan'] = time_ended_less_than
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Dblm/getVulnerabilityAggregatedVulnerabilityData:getVulnerabilityAggregatedVulnerabilityData', __args__, opts=opts, typ=GetVulnerabilityAggregatedVulnerabilityDataResult).value

    return AwaitableGetVulnerabilityAggregatedVulnerabilityDataResult(
        aggregated_vulnerability_collections=pulumi.get(__ret__, 'aggregated_vulnerability_collections'),
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        database_release=pulumi.get(__ret__, 'database_release'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        state=pulumi.get(__ret__, 'state'),
        time_created_greater_than=pulumi.get(__ret__, 'time_created_greater_than'),
        time_ended_less_than=pulumi.get(__ret__, 'time_ended_less_than'))
def get_vulnerability_aggregated_vulnerability_data_output(compartment_id: Optional[pulumi.Input[str]] = None,
                                                           database_release: Optional[pulumi.Input[Optional[str]]] = None,
                                                           filters: Optional[pulumi.Input[Optional[Sequence[Union['GetVulnerabilityAggregatedVulnerabilityDataFilterArgs', 'GetVulnerabilityAggregatedVulnerabilityDataFilterArgsDict']]]]] = None,
                                                           state: Optional[pulumi.Input[Optional[str]]] = None,
                                                           time_created_greater_than: Optional[pulumi.Input[Optional[str]]] = None,
                                                           time_ended_less_than: Optional[pulumi.Input[Optional[str]]] = None,
                                                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetVulnerabilityAggregatedVulnerabilityDataResult]:
    """
    This data source provides the list of Vulnerability Aggregated Vulnerability Data in Oracle Cloud Infrastructure Dblm service.

    Gets an AggregatedVulnerabilityData

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_vulnerability_aggregated_vulnerability_data = oci.Dblm.get_vulnerability_aggregated_vulnerability_data(compartment_id=compartment_id,
        database_release=vulnerability_aggregated_vulnerability_data_database_release,
        state=vulnerability_aggregated_vulnerability_data_state,
        time_created_greater_than=vulnerability_aggregated_vulnerability_data_time_created_greater_than,
        time_ended_less_than=vulnerability_aggregated_vulnerability_data_time_ended_less_than)
    ```


    :param str compartment_id: The ID of the compartment in which to list resources.
    :param str database_release: A filter to return only database that match the given release version.
    :param str state: A filter to return only resources their lifecycleState matches the given lifecycleState.
    :param str time_created_greater_than: The created greater than.
    :param str time_ended_less_than: The time ended less than.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['databaseRelease'] = database_release
    __args__['filters'] = filters
    __args__['state'] = state
    __args__['timeCreatedGreaterThan'] = time_created_greater_than
    __args__['timeEndedLessThan'] = time_ended_less_than
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:Dblm/getVulnerabilityAggregatedVulnerabilityData:getVulnerabilityAggregatedVulnerabilityData', __args__, opts=opts, typ=GetVulnerabilityAggregatedVulnerabilityDataResult)
    return __ret__.apply(lambda __response__: GetVulnerabilityAggregatedVulnerabilityDataResult(
        aggregated_vulnerability_collections=pulumi.get(__response__, 'aggregated_vulnerability_collections'),
        compartment_id=pulumi.get(__response__, 'compartment_id'),
        database_release=pulumi.get(__response__, 'database_release'),
        filters=pulumi.get(__response__, 'filters'),
        id=pulumi.get(__response__, 'id'),
        state=pulumi.get(__response__, 'state'),
        time_created_greater_than=pulumi.get(__response__, 'time_created_greater_than'),
        time_ended_less_than=pulumi.get(__response__, 'time_ended_less_than')))
