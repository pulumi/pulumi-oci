# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetDelegatedResourceAccessRequestHistoriesResult',
    'AwaitableGetDelegatedResourceAccessRequestHistoriesResult',
    'get_delegated_resource_access_request_histories',
    'get_delegated_resource_access_request_histories_output',
]

@pulumi.output_type
class GetDelegatedResourceAccessRequestHistoriesResult:
    """
    A collection of values returned by getDelegatedResourceAccessRequestHistories.
    """
    def __init__(__self__, delegated_resource_access_request_history_collections=None, delegated_resource_access_request_id=None, filters=None, id=None):
        if delegated_resource_access_request_history_collections and not isinstance(delegated_resource_access_request_history_collections, list):
            raise TypeError("Expected argument 'delegated_resource_access_request_history_collections' to be a list")
        pulumi.set(__self__, "delegated_resource_access_request_history_collections", delegated_resource_access_request_history_collections)
        if delegated_resource_access_request_id and not isinstance(delegated_resource_access_request_id, str):
            raise TypeError("Expected argument 'delegated_resource_access_request_id' to be a str")
        pulumi.set(__self__, "delegated_resource_access_request_id", delegated_resource_access_request_id)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="delegatedResourceAccessRequestHistoryCollections")
    def delegated_resource_access_request_history_collections(self) -> Sequence['outputs.GetDelegatedResourceAccessRequestHistoriesDelegatedResourceAccessRequestHistoryCollectionResult']:
        """
        The list of delegated_resource_access_request_history_collection.
        """
        return pulumi.get(self, "delegated_resource_access_request_history_collections")

    @property
    @pulumi.getter(name="delegatedResourceAccessRequestId")
    def delegated_resource_access_request_id(self) -> str:
        return pulumi.get(self, "delegated_resource_access_request_id")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetDelegatedResourceAccessRequestHistoriesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetDelegatedResourceAccessRequestHistoriesResult(GetDelegatedResourceAccessRequestHistoriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDelegatedResourceAccessRequestHistoriesResult(
            delegated_resource_access_request_history_collections=self.delegated_resource_access_request_history_collections,
            delegated_resource_access_request_id=self.delegated_resource_access_request_id,
            filters=self.filters,
            id=self.id)


def get_delegated_resource_access_request_histories(delegated_resource_access_request_id: Optional[str] = None,
                                                    filters: Optional[Sequence[Union['GetDelegatedResourceAccessRequestHistoriesFilterArgs', 'GetDelegatedResourceAccessRequestHistoriesFilterArgsDict']]] = None,
                                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDelegatedResourceAccessRequestHistoriesResult:
    """
    This data source provides the list of Delegated Resource Access Request Histories in Oracle Cloud Infrastructure Delegate Access Control service.

    Returns a history of all status associated with the Delegated Resource Access RequestId.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_delegated_resource_access_request_histories = oci.DelegateAccessControl.get_delegated_resource_access_request_histories(delegated_resource_access_request_id=test_delegated_resource_access_request["id"])
    ```


    :param str delegated_resource_access_request_id: Unique Delegated Resource Access Request identifier
    """
    __args__ = dict()
    __args__['delegatedResourceAccessRequestId'] = delegated_resource_access_request_id
    __args__['filters'] = filters
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:DelegateAccessControl/getDelegatedResourceAccessRequestHistories:getDelegatedResourceAccessRequestHistories', __args__, opts=opts, typ=GetDelegatedResourceAccessRequestHistoriesResult).value

    return AwaitableGetDelegatedResourceAccessRequestHistoriesResult(
        delegated_resource_access_request_history_collections=pulumi.get(__ret__, 'delegated_resource_access_request_history_collections'),
        delegated_resource_access_request_id=pulumi.get(__ret__, 'delegated_resource_access_request_id'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'))
def get_delegated_resource_access_request_histories_output(delegated_resource_access_request_id: Optional[pulumi.Input[str]] = None,
                                                           filters: Optional[pulumi.Input[Optional[Sequence[Union['GetDelegatedResourceAccessRequestHistoriesFilterArgs', 'GetDelegatedResourceAccessRequestHistoriesFilterArgsDict']]]]] = None,
                                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDelegatedResourceAccessRequestHistoriesResult]:
    """
    This data source provides the list of Delegated Resource Access Request Histories in Oracle Cloud Infrastructure Delegate Access Control service.

    Returns a history of all status associated with the Delegated Resource Access RequestId.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_delegated_resource_access_request_histories = oci.DelegateAccessControl.get_delegated_resource_access_request_histories(delegated_resource_access_request_id=test_delegated_resource_access_request["id"])
    ```


    :param str delegated_resource_access_request_id: Unique Delegated Resource Access Request identifier
    """
    __args__ = dict()
    __args__['delegatedResourceAccessRequestId'] = delegated_resource_access_request_id
    __args__['filters'] = filters
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:DelegateAccessControl/getDelegatedResourceAccessRequestHistories:getDelegatedResourceAccessRequestHistories', __args__, opts=opts, typ=GetDelegatedResourceAccessRequestHistoriesResult)
    return __ret__.apply(lambda __response__: GetDelegatedResourceAccessRequestHistoriesResult(
        delegated_resource_access_request_history_collections=pulumi.get(__response__, 'delegated_resource_access_request_history_collections'),
        delegated_resource_access_request_id=pulumi.get(__response__, 'delegated_resource_access_request_id'),
        filters=pulumi.get(__response__, 'filters'),
        id=pulumi.get(__response__, 'id')))
