# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['DrProtectionGroupArgs', 'DrProtectionGroup']

@pulumi.input_type
class DrProtectionGroupArgs:
    def __init__(__self__, *,
                 compartment_id: pulumi.Input[str],
                 display_name: pulumi.Input[str],
                 log_location: pulumi.Input['DrProtectionGroupLogLocationArgs'],
                 association: Optional[pulumi.Input['DrProtectionGroupAssociationArgs']] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 disassociate_trigger: Optional[pulumi.Input[int]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 members: Optional[pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]]] = None):
        """
        The set of arguments for constructing a DrProtectionGroup resource.
        :param pulumi.Input[str] compartment_id: (Updatable) The OCID of the compartment in which to create the DR Protection Group.  Example: `ocid1.compartment.oc1..&lt;unique_id&gt;`
        :param pulumi.Input[str] display_name: (Updatable) The display name of the DR Protection Group.  Example: `EBS PHX DRPG`
        :param pulumi.Input['DrProtectionGroupLogLocationArgs'] log_location: (Updatable) Information about creating an Object Storage log location for a DR Protection Group.
        :param pulumi.Input['DrProtectionGroupAssociationArgs'] association: The details for associating this DR Protection Group with a peer (remote) DR Protection Group.
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"Operations.CostCenter": "42"}`
        :param pulumi.Input[int] disassociate_trigger: (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
        :param pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]] members: (Updatable) A list of DR Protection Group members.
        """
        DrProtectionGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            compartment_id=compartment_id,
            display_name=display_name,
            log_location=log_location,
            association=association,
            defined_tags=defined_tags,
            disassociate_trigger=disassociate_trigger,
            freeform_tags=freeform_tags,
            members=members,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             compartment_id: pulumi.Input[str],
             display_name: pulumi.Input[str],
             log_location: pulumi.Input['DrProtectionGroupLogLocationArgs'],
             association: Optional[pulumi.Input['DrProtectionGroupAssociationArgs']] = None,
             defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             disassociate_trigger: Optional[pulumi.Input[int]] = None,
             freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             members: Optional[pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("compartment_id", compartment_id)
        _setter("display_name", display_name)
        _setter("log_location", log_location)
        if association is not None:
            _setter("association", association)
        if defined_tags is not None:
            _setter("defined_tags", defined_tags)
        if disassociate_trigger is not None:
            _setter("disassociate_trigger", disassociate_trigger)
        if freeform_tags is not None:
            _setter("freeform_tags", freeform_tags)
        if members is not None:
            _setter("members", members)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Input[str]:
        """
        (Updatable) The OCID of the compartment in which to create the DR Protection Group.  Example: `ocid1.compartment.oc1..&lt;unique_id&gt;`
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Input[str]:
        """
        (Updatable) The display name of the DR Protection Group.  Example: `EBS PHX DRPG`
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="logLocation")
    def log_location(self) -> pulumi.Input['DrProtectionGroupLogLocationArgs']:
        """
        (Updatable) Information about creating an Object Storage log location for a DR Protection Group.
        """
        return pulumi.get(self, "log_location")

    @log_location.setter
    def log_location(self, value: pulumi.Input['DrProtectionGroupLogLocationArgs']):
        pulumi.set(self, "log_location", value)

    @property
    @pulumi.getter
    def association(self) -> Optional[pulumi.Input['DrProtectionGroupAssociationArgs']]:
        """
        The details for associating this DR Protection Group with a peer (remote) DR Protection Group.
        """
        return pulumi.get(self, "association")

    @association.setter
    def association(self, value: Optional[pulumi.Input['DrProtectionGroupAssociationArgs']]):
        pulumi.set(self, "association", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="disassociateTrigger")
    def disassociate_trigger(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "disassociate_trigger")

    @disassociate_trigger.setter
    def disassociate_trigger(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "disassociate_trigger", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter
    def members(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]]]:
        """
        (Updatable) A list of DR Protection Group members.
        """
        return pulumi.get(self, "members")

    @members.setter
    def members(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]]]):
        pulumi.set(self, "members", value)


@pulumi.input_type
class _DrProtectionGroupState:
    def __init__(__self__, *,
                 association: Optional[pulumi.Input['DrProtectionGroupAssociationArgs']] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 disassociate_trigger: Optional[pulumi.Input[int]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 life_cycle_details: Optional[pulumi.Input[str]] = None,
                 log_location: Optional[pulumi.Input['DrProtectionGroupLogLocationArgs']] = None,
                 members: Optional[pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]]] = None,
                 peer_id: Optional[pulumi.Input[str]] = None,
                 peer_region: Optional[pulumi.Input[str]] = None,
                 role: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 system_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 time_created: Optional[pulumi.Input[str]] = None,
                 time_updated: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering DrProtectionGroup resources.
        :param pulumi.Input['DrProtectionGroupAssociationArgs'] association: The details for associating this DR Protection Group with a peer (remote) DR Protection Group.
        :param pulumi.Input[str] compartment_id: (Updatable) The OCID of the compartment in which to create the DR Protection Group.  Example: `ocid1.compartment.oc1..&lt;unique_id&gt;`
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"Operations.CostCenter": "42"}`
        :param pulumi.Input[int] disassociate_trigger: (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display_name: (Updatable) The display name of the DR Protection Group.  Example: `EBS PHX DRPG`
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
        :param pulumi.Input[str] life_cycle_details: A message describing the DR Protection Group's current state in more detail.
        :param pulumi.Input['DrProtectionGroupLogLocationArgs'] log_location: (Updatable) Information about creating an Object Storage log location for a DR Protection Group.
        :param pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]] members: (Updatable) A list of DR Protection Group members.
        :param pulumi.Input[str] peer_id: The OCID of the peer (remote) DR Protection Group.  Example: `ocid1.drprotectiongroup.oc1.iad.&lt;unique_id&gt;`
        :param pulumi.Input[str] peer_region: The region of the peer (remote) DR Protection Group.  Example: `us-ashburn-1`
        :param pulumi.Input[str] role: The role of this DR Protection Group.
        :param pulumi.Input[str] state: The current state of the DR Protection Group.
        :param pulumi.Input[Mapping[str, Any]] system_tags: Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param pulumi.Input[str] time_created: The date and time the DR Protection Group was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param pulumi.Input[str] time_updated: The date and time the DR Protection Group was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        _DrProtectionGroupState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            association=association,
            compartment_id=compartment_id,
            defined_tags=defined_tags,
            disassociate_trigger=disassociate_trigger,
            display_name=display_name,
            freeform_tags=freeform_tags,
            life_cycle_details=life_cycle_details,
            log_location=log_location,
            members=members,
            peer_id=peer_id,
            peer_region=peer_region,
            role=role,
            state=state,
            system_tags=system_tags,
            time_created=time_created,
            time_updated=time_updated,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             association: Optional[pulumi.Input['DrProtectionGroupAssociationArgs']] = None,
             compartment_id: Optional[pulumi.Input[str]] = None,
             defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             disassociate_trigger: Optional[pulumi.Input[int]] = None,
             display_name: Optional[pulumi.Input[str]] = None,
             freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             life_cycle_details: Optional[pulumi.Input[str]] = None,
             log_location: Optional[pulumi.Input['DrProtectionGroupLogLocationArgs']] = None,
             members: Optional[pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]]] = None,
             peer_id: Optional[pulumi.Input[str]] = None,
             peer_region: Optional[pulumi.Input[str]] = None,
             role: Optional[pulumi.Input[str]] = None,
             state: Optional[pulumi.Input[str]] = None,
             system_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             time_created: Optional[pulumi.Input[str]] = None,
             time_updated: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if association is not None:
            _setter("association", association)
        if compartment_id is not None:
            _setter("compartment_id", compartment_id)
        if defined_tags is not None:
            _setter("defined_tags", defined_tags)
        if disassociate_trigger is not None:
            _setter("disassociate_trigger", disassociate_trigger)
        if display_name is not None:
            _setter("display_name", display_name)
        if freeform_tags is not None:
            _setter("freeform_tags", freeform_tags)
        if life_cycle_details is not None:
            _setter("life_cycle_details", life_cycle_details)
        if log_location is not None:
            _setter("log_location", log_location)
        if members is not None:
            _setter("members", members)
        if peer_id is not None:
            _setter("peer_id", peer_id)
        if peer_region is not None:
            _setter("peer_region", peer_region)
        if role is not None:
            _setter("role", role)
        if state is not None:
            _setter("state", state)
        if system_tags is not None:
            _setter("system_tags", system_tags)
        if time_created is not None:
            _setter("time_created", time_created)
        if time_updated is not None:
            _setter("time_updated", time_updated)

    @property
    @pulumi.getter
    def association(self) -> Optional[pulumi.Input['DrProtectionGroupAssociationArgs']]:
        """
        The details for associating this DR Protection Group with a peer (remote) DR Protection Group.
        """
        return pulumi.get(self, "association")

    @association.setter
    def association(self, value: Optional[pulumi.Input['DrProtectionGroupAssociationArgs']]):
        pulumi.set(self, "association", value)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the compartment in which to create the DR Protection Group.  Example: `ocid1.compartment.oc1..&lt;unique_id&gt;`
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="disassociateTrigger")
    def disassociate_trigger(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "disassociate_trigger")

    @disassociate_trigger.setter
    def disassociate_trigger(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "disassociate_trigger", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The display name of the DR Protection Group.  Example: `EBS PHX DRPG`
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="lifeCycleDetails")
    def life_cycle_details(self) -> Optional[pulumi.Input[str]]:
        """
        A message describing the DR Protection Group's current state in more detail.
        """
        return pulumi.get(self, "life_cycle_details")

    @life_cycle_details.setter
    def life_cycle_details(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "life_cycle_details", value)

    @property
    @pulumi.getter(name="logLocation")
    def log_location(self) -> Optional[pulumi.Input['DrProtectionGroupLogLocationArgs']]:
        """
        (Updatable) Information about creating an Object Storage log location for a DR Protection Group.
        """
        return pulumi.get(self, "log_location")

    @log_location.setter
    def log_location(self, value: Optional[pulumi.Input['DrProtectionGroupLogLocationArgs']]):
        pulumi.set(self, "log_location", value)

    @property
    @pulumi.getter
    def members(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]]]:
        """
        (Updatable) A list of DR Protection Group members.
        """
        return pulumi.get(self, "members")

    @members.setter
    def members(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DrProtectionGroupMemberArgs']]]]):
        pulumi.set(self, "members", value)

    @property
    @pulumi.getter(name="peerId")
    def peer_id(self) -> Optional[pulumi.Input[str]]:
        """
        The OCID of the peer (remote) DR Protection Group.  Example: `ocid1.drprotectiongroup.oc1.iad.&lt;unique_id&gt;`
        """
        return pulumi.get(self, "peer_id")

    @peer_id.setter
    def peer_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "peer_id", value)

    @property
    @pulumi.getter(name="peerRegion")
    def peer_region(self) -> Optional[pulumi.Input[str]]:
        """
        The region of the peer (remote) DR Protection Group.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "peer_region")

    @peer_region.setter
    def peer_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "peer_region", value)

    @property
    @pulumi.getter
    def role(self) -> Optional[pulumi.Input[str]]:
        """
        The role of this DR Protection Group.
        """
        return pulumi.get(self, "role")

    @role.setter
    def role(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "role", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        """
        The current state of the DR Protection Group.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @system_tags.setter
    def system_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "system_tags", value)

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> Optional[pulumi.Input[str]]:
        """
        The date and time the DR Protection Group was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_created")

    @time_created.setter
    def time_created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_created", value)

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> Optional[pulumi.Input[str]]:
        """
        The date and time the DR Protection Group was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_updated")

    @time_updated.setter
    def time_updated(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_updated", value)


class DrProtectionGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 association: Optional[pulumi.Input[pulumi.InputType['DrProtectionGroupAssociationArgs']]] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 disassociate_trigger: Optional[pulumi.Input[int]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 log_location: Optional[pulumi.Input[pulumi.InputType['DrProtectionGroupLogLocationArgs']]] = None,
                 members: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['DrProtectionGroupMemberArgs']]]]] = None,
                 __props__=None):
        """
        This resource provides the Dr Protection Group resource in Oracle Cloud Infrastructure Disaster Recovery service.

        Create a new DR Protection Group.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_dr_protection_group = oci.disaster_recovery.DrProtectionGroup("testDrProtectionGroup",
            compartment_id=var["compartment_id"],
            display_name=var["dr_protection_group_display_name"],
            log_location=oci.disaster_recovery.DrProtectionGroupLogLocationArgs(
                bucket=var["dr_protection_group_log_location_bucket"],
                namespace=var["dr_protection_group_log_location_namespace"],
            ),
            association=oci.disaster_recovery.DrProtectionGroupAssociationArgs(
                role=var["dr_protection_group_association_role"],
                peer_id=oci_blockchain_peer["test_peer"]["id"],
                peer_region=var["dr_protection_group_association_peer_region"],
            ),
            defined_tags={
                "Operations.CostCenter": "42",
            },
            freeform_tags={
                "Department": "Finance",
            },
            members=[oci.disaster_recovery.DrProtectionGroupMemberArgs(
                member_id=oci_disaster_recovery_member["test_member"]["id"],
                member_type=var["dr_protection_group_members_member_type"],
                destination_capacity_reservation_id=oci_disaster_recovery_destination_capacity_reservation["test_destination_capacity_reservation"]["id"],
                destination_compartment_id=oci_identity_compartment["test_compartment"]["id"],
                destination_dedicated_vm_host_id=oci_core_dedicated_vm_host["test_dedicated_vm_host"]["id"],
                is_movable=var["dr_protection_group_members_is_movable"],
                is_retain_fault_domain=var["dr_protection_group_members_is_retain_fault_domain"],
                password_vault_secret_id=oci_vault_secret["test_secret"]["id"],
                vnic_mappings=[oci.disaster_recovery.DrProtectionGroupMemberVnicMappingArgs(
                    destination_nsg_id_lists=var["dr_protection_group_members_vnic_mapping_destination_nsg_id_list"],
                    destination_primary_private_ip_address=var["dr_protection_group_members_vnic_mapping_destination_primary_private_ip_address"],
                    destination_primary_private_ip_hostname_label=var["dr_protection_group_members_vnic_mapping_destination_primary_private_ip_hostname_label"],
                    destination_subnet_id=oci_core_subnet["test_subnet"]["id"],
                    source_vnic_id=oci_core_vnic["test_vnic"]["id"],
                )],
                vnic_mappings=[oci.disaster_recovery.DrProtectionGroupMemberVnicMappingArgs(
                    destination_nsg_id_lists=var["dr_protection_group_members_vnic_mappings_destination_nsg_id_list"],
                    destination_primary_private_ip_address=var["dr_protection_group_members_vnic_mappings_destination_primary_private_ip_address"],
                    destination_primary_private_ip_hostname_label=var["dr_protection_group_members_vnic_mappings_destination_primary_private_ip_hostname_label"],
                    destination_subnet_id=oci_core_subnet["test_subnet"]["id"],
                    source_vnic_id=oci_core_vnic["test_vnic"]["id"],
                )],
            )])
        ```

        ## Import

        DrProtectionGroups can be imported using the `id`, e.g.

        ```sh
         $ pulumi import oci:DisasterRecovery/drProtectionGroup:DrProtectionGroup test_dr_protection_group "id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['DrProtectionGroupAssociationArgs']] association: The details for associating this DR Protection Group with a peer (remote) DR Protection Group.
        :param pulumi.Input[str] compartment_id: (Updatable) The OCID of the compartment in which to create the DR Protection Group.  Example: `ocid1.compartment.oc1..&lt;unique_id&gt;`
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"Operations.CostCenter": "42"}`
        :param pulumi.Input[int] disassociate_trigger: (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display_name: (Updatable) The display name of the DR Protection Group.  Example: `EBS PHX DRPG`
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
        :param pulumi.Input[pulumi.InputType['DrProtectionGroupLogLocationArgs']] log_location: (Updatable) Information about creating an Object Storage log location for a DR Protection Group.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['DrProtectionGroupMemberArgs']]]] members: (Updatable) A list of DR Protection Group members.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DrProtectionGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource provides the Dr Protection Group resource in Oracle Cloud Infrastructure Disaster Recovery service.

        Create a new DR Protection Group.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_dr_protection_group = oci.disaster_recovery.DrProtectionGroup("testDrProtectionGroup",
            compartment_id=var["compartment_id"],
            display_name=var["dr_protection_group_display_name"],
            log_location=oci.disaster_recovery.DrProtectionGroupLogLocationArgs(
                bucket=var["dr_protection_group_log_location_bucket"],
                namespace=var["dr_protection_group_log_location_namespace"],
            ),
            association=oci.disaster_recovery.DrProtectionGroupAssociationArgs(
                role=var["dr_protection_group_association_role"],
                peer_id=oci_blockchain_peer["test_peer"]["id"],
                peer_region=var["dr_protection_group_association_peer_region"],
            ),
            defined_tags={
                "Operations.CostCenter": "42",
            },
            freeform_tags={
                "Department": "Finance",
            },
            members=[oci.disaster_recovery.DrProtectionGroupMemberArgs(
                member_id=oci_disaster_recovery_member["test_member"]["id"],
                member_type=var["dr_protection_group_members_member_type"],
                destination_capacity_reservation_id=oci_disaster_recovery_destination_capacity_reservation["test_destination_capacity_reservation"]["id"],
                destination_compartment_id=oci_identity_compartment["test_compartment"]["id"],
                destination_dedicated_vm_host_id=oci_core_dedicated_vm_host["test_dedicated_vm_host"]["id"],
                is_movable=var["dr_protection_group_members_is_movable"],
                is_retain_fault_domain=var["dr_protection_group_members_is_retain_fault_domain"],
                password_vault_secret_id=oci_vault_secret["test_secret"]["id"],
                vnic_mappings=[oci.disaster_recovery.DrProtectionGroupMemberVnicMappingArgs(
                    destination_nsg_id_lists=var["dr_protection_group_members_vnic_mapping_destination_nsg_id_list"],
                    destination_primary_private_ip_address=var["dr_protection_group_members_vnic_mapping_destination_primary_private_ip_address"],
                    destination_primary_private_ip_hostname_label=var["dr_protection_group_members_vnic_mapping_destination_primary_private_ip_hostname_label"],
                    destination_subnet_id=oci_core_subnet["test_subnet"]["id"],
                    source_vnic_id=oci_core_vnic["test_vnic"]["id"],
                )],
                vnic_mappings=[oci.disaster_recovery.DrProtectionGroupMemberVnicMappingArgs(
                    destination_nsg_id_lists=var["dr_protection_group_members_vnic_mappings_destination_nsg_id_list"],
                    destination_primary_private_ip_address=var["dr_protection_group_members_vnic_mappings_destination_primary_private_ip_address"],
                    destination_primary_private_ip_hostname_label=var["dr_protection_group_members_vnic_mappings_destination_primary_private_ip_hostname_label"],
                    destination_subnet_id=oci_core_subnet["test_subnet"]["id"],
                    source_vnic_id=oci_core_vnic["test_vnic"]["id"],
                )],
            )])
        ```

        ## Import

        DrProtectionGroups can be imported using the `id`, e.g.

        ```sh
         $ pulumi import oci:DisasterRecovery/drProtectionGroup:DrProtectionGroup test_dr_protection_group "id"
        ```

        :param str resource_name: The name of the resource.
        :param DrProtectionGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DrProtectionGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            DrProtectionGroupArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 association: Optional[pulumi.Input[pulumi.InputType['DrProtectionGroupAssociationArgs']]] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 disassociate_trigger: Optional[pulumi.Input[int]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 log_location: Optional[pulumi.Input[pulumi.InputType['DrProtectionGroupLogLocationArgs']]] = None,
                 members: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['DrProtectionGroupMemberArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DrProtectionGroupArgs.__new__(DrProtectionGroupArgs)

            if association is not None and not isinstance(association, DrProtectionGroupAssociationArgs):
                association = association or {}
                def _setter(key, value):
                    association[key] = value
                DrProtectionGroupAssociationArgs._configure(_setter, **association)
            __props__.__dict__["association"] = association
            if compartment_id is None and not opts.urn:
                raise TypeError("Missing required property 'compartment_id'")
            __props__.__dict__["compartment_id"] = compartment_id
            __props__.__dict__["defined_tags"] = defined_tags
            __props__.__dict__["disassociate_trigger"] = disassociate_trigger
            if display_name is None and not opts.urn:
                raise TypeError("Missing required property 'display_name'")
            __props__.__dict__["display_name"] = display_name
            __props__.__dict__["freeform_tags"] = freeform_tags
            if log_location is not None and not isinstance(log_location, DrProtectionGroupLogLocationArgs):
                log_location = log_location or {}
                def _setter(key, value):
                    log_location[key] = value
                DrProtectionGroupLogLocationArgs._configure(_setter, **log_location)
            if log_location is None and not opts.urn:
                raise TypeError("Missing required property 'log_location'")
            __props__.__dict__["log_location"] = log_location
            __props__.__dict__["members"] = members
            __props__.__dict__["life_cycle_details"] = None
            __props__.__dict__["peer_id"] = None
            __props__.__dict__["peer_region"] = None
            __props__.__dict__["role"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["system_tags"] = None
            __props__.__dict__["time_created"] = None
            __props__.__dict__["time_updated"] = None
        super(DrProtectionGroup, __self__).__init__(
            'oci:DisasterRecovery/drProtectionGroup:DrProtectionGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            association: Optional[pulumi.Input[pulumi.InputType['DrProtectionGroupAssociationArgs']]] = None,
            compartment_id: Optional[pulumi.Input[str]] = None,
            defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            disassociate_trigger: Optional[pulumi.Input[int]] = None,
            display_name: Optional[pulumi.Input[str]] = None,
            freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            life_cycle_details: Optional[pulumi.Input[str]] = None,
            log_location: Optional[pulumi.Input[pulumi.InputType['DrProtectionGroupLogLocationArgs']]] = None,
            members: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['DrProtectionGroupMemberArgs']]]]] = None,
            peer_id: Optional[pulumi.Input[str]] = None,
            peer_region: Optional[pulumi.Input[str]] = None,
            role: Optional[pulumi.Input[str]] = None,
            state: Optional[pulumi.Input[str]] = None,
            system_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            time_created: Optional[pulumi.Input[str]] = None,
            time_updated: Optional[pulumi.Input[str]] = None) -> 'DrProtectionGroup':
        """
        Get an existing DrProtectionGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['DrProtectionGroupAssociationArgs']] association: The details for associating this DR Protection Group with a peer (remote) DR Protection Group.
        :param pulumi.Input[str] compartment_id: (Updatable) The OCID of the compartment in which to create the DR Protection Group.  Example: `ocid1.compartment.oc1..&lt;unique_id&gt;`
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"Operations.CostCenter": "42"}`
        :param pulumi.Input[int] disassociate_trigger: (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display_name: (Updatable) The display name of the DR Protection Group.  Example: `EBS PHX DRPG`
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
        :param pulumi.Input[str] life_cycle_details: A message describing the DR Protection Group's current state in more detail.
        :param pulumi.Input[pulumi.InputType['DrProtectionGroupLogLocationArgs']] log_location: (Updatable) Information about creating an Object Storage log location for a DR Protection Group.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['DrProtectionGroupMemberArgs']]]] members: (Updatable) A list of DR Protection Group members.
        :param pulumi.Input[str] peer_id: The OCID of the peer (remote) DR Protection Group.  Example: `ocid1.drprotectiongroup.oc1.iad.&lt;unique_id&gt;`
        :param pulumi.Input[str] peer_region: The region of the peer (remote) DR Protection Group.  Example: `us-ashburn-1`
        :param pulumi.Input[str] role: The role of this DR Protection Group.
        :param pulumi.Input[str] state: The current state of the DR Protection Group.
        :param pulumi.Input[Mapping[str, Any]] system_tags: Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param pulumi.Input[str] time_created: The date and time the DR Protection Group was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param pulumi.Input[str] time_updated: The date and time the DR Protection Group was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DrProtectionGroupState.__new__(_DrProtectionGroupState)

        __props__.__dict__["association"] = association
        __props__.__dict__["compartment_id"] = compartment_id
        __props__.__dict__["defined_tags"] = defined_tags
        __props__.__dict__["disassociate_trigger"] = disassociate_trigger
        __props__.__dict__["display_name"] = display_name
        __props__.__dict__["freeform_tags"] = freeform_tags
        __props__.__dict__["life_cycle_details"] = life_cycle_details
        __props__.__dict__["log_location"] = log_location
        __props__.__dict__["members"] = members
        __props__.__dict__["peer_id"] = peer_id
        __props__.__dict__["peer_region"] = peer_region
        __props__.__dict__["role"] = role
        __props__.__dict__["state"] = state
        __props__.__dict__["system_tags"] = system_tags
        __props__.__dict__["time_created"] = time_created
        __props__.__dict__["time_updated"] = time_updated
        return DrProtectionGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def association(self) -> pulumi.Output['outputs.DrProtectionGroupAssociation']:
        """
        The details for associating this DR Protection Group with a peer (remote) DR Protection Group.
        """
        return pulumi.get(self, "association")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Output[str]:
        """
        (Updatable) The OCID of the compartment in which to create the DR Protection Group.  Example: `ocid1.compartment.oc1..&lt;unique_id&gt;`
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter(name="disassociateTrigger")
    def disassociate_trigger(self) -> pulumi.Output[Optional[int]]:
        """
        (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "disassociate_trigger")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Output[str]:
        """
        (Updatable) The display name of the DR Protection Group.  Example: `EBS PHX DRPG`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter(name="lifeCycleDetails")
    def life_cycle_details(self) -> pulumi.Output[str]:
        """
        A message describing the DR Protection Group's current state in more detail.
        """
        return pulumi.get(self, "life_cycle_details")

    @property
    @pulumi.getter(name="logLocation")
    def log_location(self) -> pulumi.Output['outputs.DrProtectionGroupLogLocation']:
        """
        (Updatable) Information about creating an Object Storage log location for a DR Protection Group.
        """
        return pulumi.get(self, "log_location")

    @property
    @pulumi.getter
    def members(self) -> pulumi.Output[Sequence['outputs.DrProtectionGroupMember']]:
        """
        (Updatable) A list of DR Protection Group members.
        """
        return pulumi.get(self, "members")

    @property
    @pulumi.getter(name="peerId")
    def peer_id(self) -> pulumi.Output[str]:
        """
        The OCID of the peer (remote) DR Protection Group.  Example: `ocid1.drprotectiongroup.oc1.iad.&lt;unique_id&gt;`
        """
        return pulumi.get(self, "peer_id")

    @property
    @pulumi.getter(name="peerRegion")
    def peer_region(self) -> pulumi.Output[str]:
        """
        The region of the peer (remote) DR Protection Group.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "peer_region")

    @property
    @pulumi.getter
    def role(self) -> pulumi.Output[str]:
        """
        The role of this DR Protection Group.
        """
        return pulumi.get(self, "role")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[str]:
        """
        The current state of the DR Protection Group.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> pulumi.Output[str]:
        """
        The date and time the DR Protection Group was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> pulumi.Output[str]:
        """
        The date and time the DR Protection Group was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_updated")

