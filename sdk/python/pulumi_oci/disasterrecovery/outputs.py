# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'DrPlanExecutionExecutionOptions',
    'DrPlanExecutionGroupExecution',
    'DrPlanExecutionGroupExecutionStepExecution',
    'DrPlanExecutionGroupExecutionStepExecutionLogLocation',
    'DrPlanExecutionLogLocation',
    'DrPlanPlanGroup',
    'DrPlanPlanGroupStep',
    'DrPlanPlanGroupStepUserDefinedStep',
    'DrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocation',
    'DrProtectionGroupAssociation',
    'DrProtectionGroupLogLocation',
    'DrProtectionGroupMember',
    'DrProtectionGroupMemberBackendSetMapping',
    'DrProtectionGroupMemberBackupConfig',
    'DrProtectionGroupMemberBackupLocation',
    'DrProtectionGroupMemberBlockVolumeOperation',
    'DrProtectionGroupMemberBlockVolumeOperationAttachmentDetails',
    'DrProtectionGroupMemberBlockVolumeOperationMountDetails',
    'DrProtectionGroupMemberExportMapping',
    'DrProtectionGroupMemberFileSystemOperation',
    'DrProtectionGroupMemberFileSystemOperationMountDetails',
    'DrProtectionGroupMemberFileSystemOperationUnmountDetails',
    'DrProtectionGroupMemberLoadBalancerMapping',
    'DrProtectionGroupMemberManagedNodePoolConfig',
    'DrProtectionGroupMemberNetworkLoadBalancerMapping',
    'DrProtectionGroupMemberVaultMapping',
    'DrProtectionGroupMemberVirtualNodePoolConfig',
    'DrProtectionGroupMemberVnicMapping',
    'GetDrPlanExecutionExecutionOptionResult',
    'GetDrPlanExecutionGroupExecutionResult',
    'GetDrPlanExecutionGroupExecutionStepExecutionResult',
    'GetDrPlanExecutionGroupExecutionStepExecutionLogLocationResult',
    'GetDrPlanExecutionLogLocationResult',
    'GetDrPlanExecutionsDrPlanExecutionCollectionResult',
    'GetDrPlanExecutionsDrPlanExecutionCollectionItemResult',
    'GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOptionResult',
    'GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionResult',
    'GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionResult',
    'GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionLogLocationResult',
    'GetDrPlanExecutionsDrPlanExecutionCollectionItemLogLocationResult',
    'GetDrPlanExecutionsFilterResult',
    'GetDrPlanPlanGroupResult',
    'GetDrPlanPlanGroupStepResult',
    'GetDrPlanPlanGroupStepUserDefinedStepResult',
    'GetDrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocationResult',
    'GetDrPlansDrPlanCollectionResult',
    'GetDrPlansDrPlanCollectionItemResult',
    'GetDrPlansDrPlanCollectionItemPlanGroupResult',
    'GetDrPlansDrPlanCollectionItemPlanGroupStepResult',
    'GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepResult',
    'GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepObjectStorageScriptLocationResult',
    'GetDrPlansFilterResult',
    'GetDrProtectionGroupAssociationResult',
    'GetDrProtectionGroupLogLocationResult',
    'GetDrProtectionGroupMemberResult',
    'GetDrProtectionGroupMemberBackendSetMappingResult',
    'GetDrProtectionGroupMemberBackupConfigResult',
    'GetDrProtectionGroupMemberBackupLocationResult',
    'GetDrProtectionGroupMemberBlockVolumeOperationResult',
    'GetDrProtectionGroupMemberBlockVolumeOperationAttachmentDetailResult',
    'GetDrProtectionGroupMemberBlockVolumeOperationMountDetailResult',
    'GetDrProtectionGroupMemberExportMappingResult',
    'GetDrProtectionGroupMemberFileSystemOperationResult',
    'GetDrProtectionGroupMemberFileSystemOperationMountDetailResult',
    'GetDrProtectionGroupMemberFileSystemOperationUnmountDetailResult',
    'GetDrProtectionGroupMemberLoadBalancerMappingResult',
    'GetDrProtectionGroupMemberManagedNodePoolConfigResult',
    'GetDrProtectionGroupMemberNetworkLoadBalancerMappingResult',
    'GetDrProtectionGroupMemberVaultMappingResult',
    'GetDrProtectionGroupMemberVirtualNodePoolConfigResult',
    'GetDrProtectionGroupMemberVnicMappingResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemAssociationResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemLogLocationResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackendSetMappingResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupConfigResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupLocationResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationAttachmentDetailResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationMountDetailResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberExportMappingResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationMountDetailResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationUnmountDetailResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberLoadBalancerMappingResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberManagedNodePoolConfigResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberNetworkLoadBalancerMappingResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVaultMappingResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVirtualNodePoolConfigResult',
    'GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult',
    'GetDrProtectionGroupsFilterResult',
]

@pulumi.output_type
class DrPlanExecutionExecutionOptions(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "planExecutionType":
            suggest = "plan_execution_type"
        elif key == "arePrechecksEnabled":
            suggest = "are_prechecks_enabled"
        elif key == "areWarningsIgnored":
            suggest = "are_warnings_ignored"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrPlanExecutionExecutionOptions. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrPlanExecutionExecutionOptions.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrPlanExecutionExecutionOptions.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 plan_execution_type: builtins.str,
                 are_prechecks_enabled: Optional[builtins.bool] = None,
                 are_warnings_ignored: Optional[builtins.bool] = None):
        """
        :param builtins.str plan_execution_type: The type of the plan execution.
        :param builtins.bool are_prechecks_enabled: A flag indicating whether prechecks should be executed before the plan execution.  Example: `false`
        :param builtins.bool are_warnings_ignored: A flag indicating whether warnings should be ignored during the switchover precheck.  Example: `true`
        """
        pulumi.set(__self__, "plan_execution_type", plan_execution_type)
        if are_prechecks_enabled is not None:
            pulumi.set(__self__, "are_prechecks_enabled", are_prechecks_enabled)
        if are_warnings_ignored is not None:
            pulumi.set(__self__, "are_warnings_ignored", are_warnings_ignored)

    @property
    @pulumi.getter(name="planExecutionType")
    def plan_execution_type(self) -> builtins.str:
        """
        The type of the plan execution.
        """
        return pulumi.get(self, "plan_execution_type")

    @property
    @pulumi.getter(name="arePrechecksEnabled")
    def are_prechecks_enabled(self) -> Optional[builtins.bool]:
        """
        A flag indicating whether prechecks should be executed before the plan execution.  Example: `false`
        """
        return pulumi.get(self, "are_prechecks_enabled")

    @property
    @pulumi.getter(name="areWarningsIgnored")
    def are_warnings_ignored(self) -> Optional[builtins.bool]:
        """
        A flag indicating whether warnings should be ignored during the switchover precheck.  Example: `true`
        """
        return pulumi.get(self, "are_warnings_ignored")


@pulumi.output_type
class DrPlanExecutionGroupExecution(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"
        elif key == "executionDurationInSec":
            suggest = "execution_duration_in_sec"
        elif key == "groupId":
            suggest = "group_id"
        elif key == "statusDetails":
            suggest = "status_details"
        elif key == "stepExecutions":
            suggest = "step_executions"
        elif key == "timeEnded":
            suggest = "time_ended"
        elif key == "timeStarted":
            suggest = "time_started"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrPlanExecutionGroupExecution. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrPlanExecutionGroupExecution.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrPlanExecutionGroupExecution.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: Optional[builtins.str] = None,
                 execution_duration_in_sec: Optional[builtins.int] = None,
                 group_id: Optional[builtins.str] = None,
                 status: Optional[builtins.str] = None,
                 status_details: Optional[builtins.str] = None,
                 step_executions: Optional[Sequence['outputs.DrPlanExecutionGroupExecutionStepExecution']] = None,
                 time_ended: Optional[builtins.str] = None,
                 time_started: Optional[builtins.str] = None,
                 type: Optional[builtins.str] = None):
        """
        :param builtins.str display_name: (Updatable) The display name of the DR plan execution.  Example: `Execution - EBS Switchover PHX to IAD`
        :param builtins.int execution_duration_in_sec: The total duration in seconds taken to complete the step execution.  Example: `35`
        :param builtins.str group_id: The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        :param builtins.str status: The status of the step execution.
        :param builtins.str status_details: Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        :param Sequence['DrPlanExecutionGroupExecutionStepExecutionArgs'] step_executions: A list of step executions in the group.
        :param builtins.str time_ended: The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_started: The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str type: The group type.  Example: `BUILT_IN`
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if execution_duration_in_sec is not None:
            pulumi.set(__self__, "execution_duration_in_sec", execution_duration_in_sec)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if status_details is not None:
            pulumi.set(__self__, "status_details", status_details)
        if step_executions is not None:
            pulumi.set(__self__, "step_executions", step_executions)
        if time_ended is not None:
            pulumi.set(__self__, "time_ended", time_ended)
        if time_started is not None:
            pulumi.set(__self__, "time_started", time_started)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[builtins.str]:
        """
        (Updatable) The display name of the DR plan execution.  Example: `Execution - EBS Switchover PHX to IAD`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="executionDurationInSec")
    def execution_duration_in_sec(self) -> Optional[builtins.int]:
        """
        The total duration in seconds taken to complete the step execution.  Example: `35`
        """
        return pulumi.get(self, "execution_duration_in_sec")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[builtins.str]:
        """
        The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter
    def status(self) -> Optional[builtins.str]:
        """
        The status of the step execution.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusDetails")
    def status_details(self) -> Optional[builtins.str]:
        """
        Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        """
        return pulumi.get(self, "status_details")

    @property
    @pulumi.getter(name="stepExecutions")
    def step_executions(self) -> Optional[Sequence['outputs.DrPlanExecutionGroupExecutionStepExecution']]:
        """
        A list of step executions in the group.
        """
        return pulumi.get(self, "step_executions")

    @property
    @pulumi.getter(name="timeEnded")
    def time_ended(self) -> Optional[builtins.str]:
        """
        The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_ended")

    @property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> Optional[builtins.str]:
        """
        The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_started")

    @property
    @pulumi.getter
    def type(self) -> Optional[builtins.str]:
        """
        The group type.  Example: `BUILT_IN`
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class DrPlanExecutionGroupExecutionStepExecution(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"
        elif key == "executionDurationInSec":
            suggest = "execution_duration_in_sec"
        elif key == "groupId":
            suggest = "group_id"
        elif key == "logLocations":
            suggest = "log_locations"
        elif key == "statusDetails":
            suggest = "status_details"
        elif key == "stepId":
            suggest = "step_id"
        elif key == "timeEnded":
            suggest = "time_ended"
        elif key == "timeStarted":
            suggest = "time_started"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrPlanExecutionGroupExecutionStepExecution. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrPlanExecutionGroupExecutionStepExecution.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrPlanExecutionGroupExecutionStepExecution.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: Optional[builtins.str] = None,
                 execution_duration_in_sec: Optional[builtins.int] = None,
                 group_id: Optional[builtins.str] = None,
                 log_locations: Optional[Sequence['outputs.DrPlanExecutionGroupExecutionStepExecutionLogLocation']] = None,
                 status: Optional[builtins.str] = None,
                 status_details: Optional[builtins.str] = None,
                 step_id: Optional[builtins.str] = None,
                 time_ended: Optional[builtins.str] = None,
                 time_started: Optional[builtins.str] = None,
                 type: Optional[builtins.str] = None):
        """
        :param builtins.str display_name: (Updatable) The display name of the DR plan execution.  Example: `Execution - EBS Switchover PHX to IAD`
        :param builtins.int execution_duration_in_sec: The total duration in seconds taken to complete the step execution.  Example: `35`
        :param builtins.str group_id: The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        :param Sequence['DrPlanExecutionGroupExecutionStepExecutionLogLocationArgs'] log_locations: The details of an object storage log location for a DR protection group.
        :param builtins.str status: The status of the step execution.
        :param builtins.str status_details: Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        :param builtins.str step_id: The unique id of the step. Must not be modified by user.  Example: `sgid1.step..uniqueID`
        :param builtins.str time_ended: The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_started: The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str type: The group type.  Example: `BUILT_IN`
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if execution_duration_in_sec is not None:
            pulumi.set(__self__, "execution_duration_in_sec", execution_duration_in_sec)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if log_locations is not None:
            pulumi.set(__self__, "log_locations", log_locations)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if status_details is not None:
            pulumi.set(__self__, "status_details", status_details)
        if step_id is not None:
            pulumi.set(__self__, "step_id", step_id)
        if time_ended is not None:
            pulumi.set(__self__, "time_ended", time_ended)
        if time_started is not None:
            pulumi.set(__self__, "time_started", time_started)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[builtins.str]:
        """
        (Updatable) The display name of the DR plan execution.  Example: `Execution - EBS Switchover PHX to IAD`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="executionDurationInSec")
    def execution_duration_in_sec(self) -> Optional[builtins.int]:
        """
        The total duration in seconds taken to complete the step execution.  Example: `35`
        """
        return pulumi.get(self, "execution_duration_in_sec")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[builtins.str]:
        """
        The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter(name="logLocations")
    def log_locations(self) -> Optional[Sequence['outputs.DrPlanExecutionGroupExecutionStepExecutionLogLocation']]:
        """
        The details of an object storage log location for a DR protection group.
        """
        return pulumi.get(self, "log_locations")

    @property
    @pulumi.getter
    def status(self) -> Optional[builtins.str]:
        """
        The status of the step execution.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusDetails")
    def status_details(self) -> Optional[builtins.str]:
        """
        Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        """
        return pulumi.get(self, "status_details")

    @property
    @pulumi.getter(name="stepId")
    def step_id(self) -> Optional[builtins.str]:
        """
        The unique id of the step. Must not be modified by user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "step_id")

    @property
    @pulumi.getter(name="timeEnded")
    def time_ended(self) -> Optional[builtins.str]:
        """
        The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_ended")

    @property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> Optional[builtins.str]:
        """
        The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_started")

    @property
    @pulumi.getter
    def type(self) -> Optional[builtins.str]:
        """
        The group type.  Example: `BUILT_IN`
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class DrPlanExecutionGroupExecutionStepExecutionLogLocation(dict):
    def __init__(__self__, *,
                 bucket: Optional[builtins.str] = None,
                 namespace: Optional[builtins.str] = None,
                 object: Optional[builtins.str] = None):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `operation_logs`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        if bucket is not None:
            pulumi.set(__self__, "bucket", bucket)
        if namespace is not None:
            pulumi.set(__self__, "namespace", namespace)
        if object is not None:
            pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> Optional[builtins.str]:
        """
        The bucket name inside the object storage namespace.  Example: `operation_logs`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> Optional[builtins.str]:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> Optional[builtins.str]:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class DrPlanExecutionLogLocation(dict):
    def __init__(__self__, *,
                 bucket: Optional[builtins.str] = None,
                 namespace: Optional[builtins.str] = None,
                 object: Optional[builtins.str] = None):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `operation_logs`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        if bucket is not None:
            pulumi.set(__self__, "bucket", bucket)
        if namespace is not None:
            pulumi.set(__self__, "namespace", namespace)
        if object is not None:
            pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> Optional[builtins.str]:
        """
        The bucket name inside the object storage namespace.  Example: `operation_logs`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> Optional[builtins.str]:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> Optional[builtins.str]:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class DrPlanPlanGroup(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"
        elif key == "isPauseEnabled":
            suggest = "is_pause_enabled"
        elif key == "refreshStatus":
            suggest = "refresh_status"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrPlanPlanGroup. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrPlanPlanGroup.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrPlanPlanGroup.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: Optional[builtins.str] = None,
                 id: Optional[builtins.str] = None,
                 is_pause_enabled: Optional[builtins.bool] = None,
                 refresh_status: Optional[builtins.str] = None,
                 steps: Optional[Sequence['outputs.DrPlanPlanGroupStep']] = None,
                 type: Optional[builtins.str] = None):
        """
        :param builtins.str display_name: (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
        :param builtins.str id: The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        :param builtins.bool is_pause_enabled: A flag indicating whether this group should be enabled for execution. This flag is only applicable to the `USER_DEFINED_PAUSE` group. The flag should be null for the remaining group types.  Example: `true`
        :param builtins.str refresh_status: The DR plan step refresh status.  Example: `STEP_ADDED`
        :param Sequence['DrPlanPlanGroupStepArgs'] steps: The list of steps in the group.
        :param builtins.str type: The type of DR plan to be created.
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if is_pause_enabled is not None:
            pulumi.set(__self__, "is_pause_enabled", is_pause_enabled)
        if refresh_status is not None:
            pulumi.set(__self__, "refresh_status", refresh_status)
        if steps is not None:
            pulumi.set(__self__, "steps", steps)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[builtins.str]:
        """
        (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def id(self) -> Optional[builtins.str]:
        """
        The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isPauseEnabled")
    def is_pause_enabled(self) -> Optional[builtins.bool]:
        """
        A flag indicating whether this group should be enabled for execution. This flag is only applicable to the `USER_DEFINED_PAUSE` group. The flag should be null for the remaining group types.  Example: `true`
        """
        return pulumi.get(self, "is_pause_enabled")

    @property
    @pulumi.getter(name="refreshStatus")
    def refresh_status(self) -> Optional[builtins.str]:
        """
        The DR plan step refresh status.  Example: `STEP_ADDED`
        """
        return pulumi.get(self, "refresh_status")

    @property
    @pulumi.getter
    def steps(self) -> Optional[Sequence['outputs.DrPlanPlanGroupStep']]:
        """
        The list of steps in the group.
        """
        return pulumi.get(self, "steps")

    @property
    @pulumi.getter
    def type(self) -> Optional[builtins.str]:
        """
        The type of DR plan to be created.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class DrPlanPlanGroupStep(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"
        elif key == "errorMode":
            suggest = "error_mode"
        elif key == "groupId":
            suggest = "group_id"
        elif key == "isEnabled":
            suggest = "is_enabled"
        elif key == "memberId":
            suggest = "member_id"
        elif key == "refreshStatus":
            suggest = "refresh_status"
        elif key == "userDefinedSteps":
            suggest = "user_defined_steps"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrPlanPlanGroupStep. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrPlanPlanGroupStep.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrPlanPlanGroupStep.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: Optional[builtins.str] = None,
                 error_mode: Optional[builtins.str] = None,
                 group_id: Optional[builtins.str] = None,
                 id: Optional[builtins.str] = None,
                 is_enabled: Optional[builtins.bool] = None,
                 member_id: Optional[builtins.str] = None,
                 refresh_status: Optional[builtins.str] = None,
                 timeout: Optional[builtins.int] = None,
                 type: Optional[builtins.str] = None,
                 user_defined_steps: Optional[Sequence['outputs.DrPlanPlanGroupStepUserDefinedStep']] = None):
        """
        :param builtins.str display_name: (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
        :param builtins.str error_mode: The error mode for this step.
        :param builtins.str group_id: The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        :param builtins.str id: The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        :param builtins.bool is_enabled: A flag indicating whether this step should be enabled for execution.  Example: `true`
        :param builtins.str member_id: The OCID of the member associated with this step.  Example: `ocid1.database.oc1..uniqueID`
        :param builtins.str refresh_status: The DR plan step refresh status.  Example: `STEP_ADDED`
        :param builtins.int timeout: The timeout in seconds for executing this step.  Example: `600`
        :param builtins.str type: The type of DR plan to be created.
        :param Sequence['DrPlanPlanGroupStepUserDefinedStepArgs'] user_defined_steps: The details for a user-defined step in a DR plan.
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if error_mode is not None:
            pulumi.set(__self__, "error_mode", error_mode)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)
        if member_id is not None:
            pulumi.set(__self__, "member_id", member_id)
        if refresh_status is not None:
            pulumi.set(__self__, "refresh_status", refresh_status)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if user_defined_steps is not None:
            pulumi.set(__self__, "user_defined_steps", user_defined_steps)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[builtins.str]:
        """
        (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="errorMode")
    def error_mode(self) -> Optional[builtins.str]:
        """
        The error mode for this step.
        """
        return pulumi.get(self, "error_mode")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[builtins.str]:
        """
        The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter
    def id(self) -> Optional[builtins.str]:
        """
        The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[builtins.bool]:
        """
        A flag indicating whether this step should be enabled for execution.  Example: `true`
        """
        return pulumi.get(self, "is_enabled")

    @property
    @pulumi.getter(name="memberId")
    def member_id(self) -> Optional[builtins.str]:
        """
        The OCID of the member associated with this step.  Example: `ocid1.database.oc1..uniqueID`
        """
        return pulumi.get(self, "member_id")

    @property
    @pulumi.getter(name="refreshStatus")
    def refresh_status(self) -> Optional[builtins.str]:
        """
        The DR plan step refresh status.  Example: `STEP_ADDED`
        """
        return pulumi.get(self, "refresh_status")

    @property
    @pulumi.getter
    def timeout(self) -> Optional[builtins.int]:
        """
        The timeout in seconds for executing this step.  Example: `600`
        """
        return pulumi.get(self, "timeout")

    @property
    @pulumi.getter
    def type(self) -> Optional[builtins.str]:
        """
        The type of DR plan to be created.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="userDefinedSteps")
    def user_defined_steps(self) -> Optional[Sequence['outputs.DrPlanPlanGroupStepUserDefinedStep']]:
        """
        The details for a user-defined step in a DR plan.
        """
        return pulumi.get(self, "user_defined_steps")


@pulumi.output_type
class DrPlanPlanGroupStepUserDefinedStep(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "functionId":
            suggest = "function_id"
        elif key == "functionRegion":
            suggest = "function_region"
        elif key == "objectStorageScriptLocations":
            suggest = "object_storage_script_locations"
        elif key == "requestBody":
            suggest = "request_body"
        elif key == "runAsUser":
            suggest = "run_as_user"
        elif key == "runOnInstanceId":
            suggest = "run_on_instance_id"
        elif key == "runOnInstanceRegion":
            suggest = "run_on_instance_region"
        elif key == "scriptCommand":
            suggest = "script_command"
        elif key == "stepType":
            suggest = "step_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrPlanPlanGroupStepUserDefinedStep. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrPlanPlanGroupStepUserDefinedStep.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrPlanPlanGroupStepUserDefinedStep.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 function_id: Optional[builtins.str] = None,
                 function_region: Optional[builtins.str] = None,
                 object_storage_script_locations: Optional[Sequence['outputs.DrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocation']] = None,
                 request_body: Optional[builtins.str] = None,
                 run_as_user: Optional[builtins.str] = None,
                 run_on_instance_id: Optional[builtins.str] = None,
                 run_on_instance_region: Optional[builtins.str] = None,
                 script_command: Optional[builtins.str] = None,
                 step_type: Optional[builtins.str] = None):
        """
        :param builtins.str function_id: The OCID of function to be invoked.  Example: `ocid1.fnfunc.oc1..uniqueID`
        :param builtins.str function_region: The region in which the function is deployed.  Example: `us-ashburn-1`
        :param Sequence['DrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocationArgs'] object_storage_script_locations: The details of an object storage script location for a user-defined step in a DR plan.
        :param builtins.str request_body: The request body for the function.  Example: `{ "FnParam1", "FnParam2" }`
        :param builtins.str run_as_user: The userid on the instance to be used for executing the script or command.  Example: `opc`
        :param builtins.str run_on_instance_id: The OCID of the instance on which this script or command should be executed.
        :param builtins.str run_on_instance_region: The region of the instance where this script or command should be executed.  Example: `us-ashburn-1`
        :param builtins.str script_command: The script name and arguments.  Example: `/usr/bin/python3 /home/opc/scripts/my_app_script.py arg1 arg2 arg3`
        :param builtins.str step_type: The type of the user-defined step.
        """
        if function_id is not None:
            pulumi.set(__self__, "function_id", function_id)
        if function_region is not None:
            pulumi.set(__self__, "function_region", function_region)
        if object_storage_script_locations is not None:
            pulumi.set(__self__, "object_storage_script_locations", object_storage_script_locations)
        if request_body is not None:
            pulumi.set(__self__, "request_body", request_body)
        if run_as_user is not None:
            pulumi.set(__self__, "run_as_user", run_as_user)
        if run_on_instance_id is not None:
            pulumi.set(__self__, "run_on_instance_id", run_on_instance_id)
        if run_on_instance_region is not None:
            pulumi.set(__self__, "run_on_instance_region", run_on_instance_region)
        if script_command is not None:
            pulumi.set(__self__, "script_command", script_command)
        if step_type is not None:
            pulumi.set(__self__, "step_type", step_type)

    @property
    @pulumi.getter(name="functionId")
    def function_id(self) -> Optional[builtins.str]:
        """
        The OCID of function to be invoked.  Example: `ocid1.fnfunc.oc1..uniqueID`
        """
        return pulumi.get(self, "function_id")

    @property
    @pulumi.getter(name="functionRegion")
    def function_region(self) -> Optional[builtins.str]:
        """
        The region in which the function is deployed.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "function_region")

    @property
    @pulumi.getter(name="objectStorageScriptLocations")
    def object_storage_script_locations(self) -> Optional[Sequence['outputs.DrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocation']]:
        """
        The details of an object storage script location for a user-defined step in a DR plan.
        """
        return pulumi.get(self, "object_storage_script_locations")

    @property
    @pulumi.getter(name="requestBody")
    def request_body(self) -> Optional[builtins.str]:
        """
        The request body for the function.  Example: `{ "FnParam1", "FnParam2" }`
        """
        return pulumi.get(self, "request_body")

    @property
    @pulumi.getter(name="runAsUser")
    def run_as_user(self) -> Optional[builtins.str]:
        """
        The userid on the instance to be used for executing the script or command.  Example: `opc`
        """
        return pulumi.get(self, "run_as_user")

    @property
    @pulumi.getter(name="runOnInstanceId")
    def run_on_instance_id(self) -> Optional[builtins.str]:
        """
        The OCID of the instance on which this script or command should be executed.
        """
        return pulumi.get(self, "run_on_instance_id")

    @property
    @pulumi.getter(name="runOnInstanceRegion")
    def run_on_instance_region(self) -> Optional[builtins.str]:
        """
        The region of the instance where this script or command should be executed.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "run_on_instance_region")

    @property
    @pulumi.getter(name="scriptCommand")
    def script_command(self) -> Optional[builtins.str]:
        """
        The script name and arguments.  Example: `/usr/bin/python3 /home/opc/scripts/my_app_script.py arg1 arg2 arg3`
        """
        return pulumi.get(self, "script_command")

    @property
    @pulumi.getter(name="stepType")
    def step_type(self) -> Optional[builtins.str]:
        """
        The type of the user-defined step.
        """
        return pulumi.get(self, "step_type")


@pulumi.output_type
class DrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocation(dict):
    def __init__(__self__, *,
                 bucket: Optional[builtins.str] = None,
                 namespace: Optional[builtins.str] = None,
                 object: Optional[builtins.str] = None):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `custom_dr_scripts`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `validate_app_start.sh`
        """
        if bucket is not None:
            pulumi.set(__self__, "bucket", bucket)
        if namespace is not None:
            pulumi.set(__self__, "namespace", namespace)
        if object is not None:
            pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> Optional[builtins.str]:
        """
        The bucket name inside the object storage namespace.  Example: `custom_dr_scripts`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> Optional[builtins.str]:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> Optional[builtins.str]:
        """
        The object name inside the object storage bucket.  Example: `validate_app_start.sh`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class DrProtectionGroupAssociation(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "peerId":
            suggest = "peer_id"
        elif key == "peerRegion":
            suggest = "peer_region"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupAssociation. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupAssociation.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupAssociation.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 role: builtins.str,
                 peer_id: Optional[builtins.str] = None,
                 peer_region: Optional[builtins.str] = None):
        """
        :param builtins.str role: The role of the DR protection group.  Example: `STANDBY`
        :param builtins.str peer_id: The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        :param builtins.str peer_region: The region of the peer DR protection group.  Example: `us-ashburn-1`
        """
        pulumi.set(__self__, "role", role)
        if peer_id is not None:
            pulumi.set(__self__, "peer_id", peer_id)
        if peer_region is not None:
            pulumi.set(__self__, "peer_region", peer_region)

    @property
    @pulumi.getter
    def role(self) -> builtins.str:
        """
        The role of the DR protection group.  Example: `STANDBY`
        """
        return pulumi.get(self, "role")

    @property
    @pulumi.getter(name="peerId")
    def peer_id(self) -> Optional[builtins.str]:
        """
        The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        """
        return pulumi.get(self, "peer_id")

    @property
    @pulumi.getter(name="peerRegion")
    def peer_region(self) -> Optional[builtins.str]:
        """
        The region of the peer DR protection group.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "peer_region")


@pulumi.output_type
class DrProtectionGroupLogLocation(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: Optional[builtins.str] = None):
        """
        :param builtins.str bucket: (Updatable) The bucket name inside the object storage namespace.  Example: `operation_logs`
        :param builtins.str namespace: (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        if object is not None:
            pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        (Updatable) The bucket name inside the object storage namespace.  Example: `operation_logs`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> Optional[builtins.str]:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class DrProtectionGroupMember(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "memberId":
            suggest = "member_id"
        elif key == "memberType":
            suggest = "member_type"
        elif key == "autonomousDatabaseStandbyTypeForDrDrills":
            suggest = "autonomous_database_standby_type_for_dr_drills"
        elif key == "backendSetMappings":
            suggest = "backend_set_mappings"
        elif key == "backupConfig":
            suggest = "backup_config"
        elif key == "backupLocation":
            suggest = "backup_location"
        elif key == "blockVolumeOperations":
            suggest = "block_volume_operations"
        elif key == "connectionStringType":
            suggest = "connection_string_type"
        elif key == "destinationAvailabilityDomain":
            suggest = "destination_availability_domain"
        elif key == "destinationCapacityReservationId":
            suggest = "destination_capacity_reservation_id"
        elif key == "destinationCompartmentId":
            suggest = "destination_compartment_id"
        elif key == "destinationDedicatedVmHostId":
            suggest = "destination_dedicated_vm_host_id"
        elif key == "destinationLoadBalancerId":
            suggest = "destination_load_balancer_id"
        elif key == "destinationNetworkLoadBalancerId":
            suggest = "destination_network_load_balancer_id"
        elif key == "exportMappings":
            suggest = "export_mappings"
        elif key == "fileSystemOperations":
            suggest = "file_system_operations"
        elif key == "isMovable":
            suggest = "is_movable"
        elif key == "isRetainFaultDomain":
            suggest = "is_retain_fault_domain"
        elif key == "isStartStopEnabled":
            suggest = "is_start_stop_enabled"
        elif key == "jumpHostId":
            suggest = "jump_host_id"
        elif key == "loadBalancerMappings":
            suggest = "load_balancer_mappings"
        elif key == "managedNodePoolConfigs":
            suggest = "managed_node_pool_configs"
        elif key == "networkLoadBalancerMappings":
            suggest = "network_load_balancer_mappings"
        elif key == "passwordVaultSecretId":
            suggest = "password_vault_secret_id"
        elif key == "peerClusterId":
            suggest = "peer_cluster_id"
        elif key == "vaultMappings":
            suggest = "vault_mappings"
        elif key == "virtualNodePoolConfigs":
            suggest = "virtual_node_pool_configs"
        elif key == "vnicMapping":
            suggest = "vnic_mapping"
        elif key == "vnicMappings":
            suggest = "vnic_mappings"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMember. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMember.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMember.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 member_id: builtins.str,
                 member_type: builtins.str,
                 autonomous_database_standby_type_for_dr_drills: Optional[builtins.str] = None,
                 backend_set_mappings: Optional[Sequence['outputs.DrProtectionGroupMemberBackendSetMapping']] = None,
                 backup_config: Optional['outputs.DrProtectionGroupMemberBackupConfig'] = None,
                 backup_location: Optional['outputs.DrProtectionGroupMemberBackupLocation'] = None,
                 block_volume_operations: Optional[Sequence['outputs.DrProtectionGroupMemberBlockVolumeOperation']] = None,
                 bucket: Optional[builtins.str] = None,
                 connection_string_type: Optional[builtins.str] = None,
                 destination_availability_domain: Optional[builtins.str] = None,
                 destination_capacity_reservation_id: Optional[builtins.str] = None,
                 destination_compartment_id: Optional[builtins.str] = None,
                 destination_dedicated_vm_host_id: Optional[builtins.str] = None,
                 destination_load_balancer_id: Optional[builtins.str] = None,
                 destination_network_load_balancer_id: Optional[builtins.str] = None,
                 export_mappings: Optional[Sequence['outputs.DrProtectionGroupMemberExportMapping']] = None,
                 file_system_operations: Optional[Sequence['outputs.DrProtectionGroupMemberFileSystemOperation']] = None,
                 is_movable: Optional[builtins.bool] = None,
                 is_retain_fault_domain: Optional[builtins.bool] = None,
                 is_start_stop_enabled: Optional[builtins.bool] = None,
                 jump_host_id: Optional[builtins.str] = None,
                 load_balancer_mappings: Optional[Sequence['outputs.DrProtectionGroupMemberLoadBalancerMapping']] = None,
                 managed_node_pool_configs: Optional[Sequence['outputs.DrProtectionGroupMemberManagedNodePoolConfig']] = None,
                 namespace: Optional[builtins.str] = None,
                 network_load_balancer_mappings: Optional[Sequence['outputs.DrProtectionGroupMemberNetworkLoadBalancerMapping']] = None,
                 password_vault_secret_id: Optional[builtins.str] = None,
                 peer_cluster_id: Optional[builtins.str] = None,
                 vault_mappings: Optional[Sequence['outputs.DrProtectionGroupMemberVaultMapping']] = None,
                 virtual_node_pool_configs: Optional[Sequence['outputs.DrProtectionGroupMemberVirtualNodePoolConfig']] = None,
                 vnic_mapping: Optional[Sequence['outputs.DrProtectionGroupMemberVnicMapping']] = None,
                 vnic_mappings: Optional[Sequence['outputs.DrProtectionGroupMemberVnicMapping']] = None):
        """
        :param builtins.str member_id: (Updatable) The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
        :param builtins.str member_type: (Updatable) The type of the member.
        :param builtins.str autonomous_database_standby_type_for_dr_drills: (Updatable) This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html for information about these clone types. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html for information about snapshot standby.
        :param Sequence['DrProtectionGroupMemberBackendSetMappingArgs'] backend_set_mappings: (Updatable) A list of backend set mappings that are used to transfer or update backends during DR.
        :param 'DrProtectionGroupMemberBackupConfigArgs' backup_config: (Updatable) Create backup configuration properties for an OKE member.
        :param 'DrProtectionGroupMemberBackupLocationArgs' backup_location: (Updatable) The details for creating the backup location of an OKE Cluster.
        :param Sequence['DrProtectionGroupMemberBlockVolumeOperationArgs'] block_volume_operations: (Updatable) A list of operations performed on block volumes used by the compute instance.
        :param builtins.str bucket: (Updatable) The bucket name inside the object storage namespace.  Example: `bucket_name`
        :param builtins.str connection_string_type: (Updatable) The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html for information about these service types.
        :param builtins.str destination_availability_domain: (Updatable) The availability domain of the destination mount target.  Example: `BBTh:region-AD`
        :param builtins.str destination_capacity_reservation_id: (Updatable) The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
        :param builtins.str destination_compartment_id: (Updatable) The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
        :param builtins.str destination_dedicated_vm_host_id: (Updatable) The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
        :param builtins.str destination_load_balancer_id: (Updatable) The OCID of the destination load balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        :param builtins.str destination_network_load_balancer_id: (Updatable) The OCID of the destination network load balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        :param Sequence['DrProtectionGroupMemberExportMappingArgs'] export_mappings: (Updatable) A list of mappings between file system exports in the primary region and mount targets in the standby region.
        :param Sequence['DrProtectionGroupMemberFileSystemOperationArgs'] file_system_operations: (Updatable) A list of operations performed on file systems used by the compute instance.
        :param builtins.bool is_movable: (Updatable) A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
        :param builtins.bool is_retain_fault_domain: (Updatable) A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
        :param builtins.bool is_start_stop_enabled: (Updatable) A flag indicating whether the non-movable compute instance should be started and stopped during DR operations. *Prechecks cannot be executed on stopped instances that are configured to be started.*
        :param builtins.str jump_host_id: (Updatable) The OCID of the compute instance member that is designated as a jump host. This compute instance will be used to perform DR operations on the cluster using Oracle Cloud Agent's Run Command feature.  Example: `ocid1.instance.oc1..uniqueID`
        :param Sequence['DrProtectionGroupMemberLoadBalancerMappingArgs'] load_balancer_mappings: (Updatable) The list of source-to-destination load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        :param Sequence['DrProtectionGroupMemberManagedNodePoolConfigArgs'] managed_node_pool_configs: (Updatable) The list of managed node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        :param builtins.str namespace: (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param Sequence['DrProtectionGroupMemberNetworkLoadBalancerMappingArgs'] network_load_balancer_mappings: (Updatable) The list of source-to-destination network load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        :param builtins.str password_vault_secret_id: (Updatable) The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
        :param builtins.str peer_cluster_id: (Updatable) The OCID of the peer OKE cluster. This property applies to the OKE cluster member in both the primary and standby region.   Example: `ocid1.cluster.oc1..uniqueID`
        :param Sequence['DrProtectionGroupMemberVaultMappingArgs'] vault_mappings: (Updatable) The list of source-to-destination vault mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        :param Sequence['DrProtectionGroupMemberVirtualNodePoolConfigArgs'] virtual_node_pool_configs: (Updatable) The list of virtual node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        :param Sequence['DrProtectionGroupMemberVnicMappingArgs'] vnic_mapping: (Updatable) A list of compute instance VNIC mappings.
        :param Sequence['DrProtectionGroupMemberVnicMappingArgs'] vnic_mappings: (Updatable) A list of compute instance VNIC mappings.
        """
        pulumi.set(__self__, "member_id", member_id)
        pulumi.set(__self__, "member_type", member_type)
        if autonomous_database_standby_type_for_dr_drills is not None:
            pulumi.set(__self__, "autonomous_database_standby_type_for_dr_drills", autonomous_database_standby_type_for_dr_drills)
        if backend_set_mappings is not None:
            pulumi.set(__self__, "backend_set_mappings", backend_set_mappings)
        if backup_config is not None:
            pulumi.set(__self__, "backup_config", backup_config)
        if backup_location is not None:
            pulumi.set(__self__, "backup_location", backup_location)
        if block_volume_operations is not None:
            pulumi.set(__self__, "block_volume_operations", block_volume_operations)
        if bucket is not None:
            pulumi.set(__self__, "bucket", bucket)
        if connection_string_type is not None:
            pulumi.set(__self__, "connection_string_type", connection_string_type)
        if destination_availability_domain is not None:
            pulumi.set(__self__, "destination_availability_domain", destination_availability_domain)
        if destination_capacity_reservation_id is not None:
            pulumi.set(__self__, "destination_capacity_reservation_id", destination_capacity_reservation_id)
        if destination_compartment_id is not None:
            pulumi.set(__self__, "destination_compartment_id", destination_compartment_id)
        if destination_dedicated_vm_host_id is not None:
            pulumi.set(__self__, "destination_dedicated_vm_host_id", destination_dedicated_vm_host_id)
        if destination_load_balancer_id is not None:
            pulumi.set(__self__, "destination_load_balancer_id", destination_load_balancer_id)
        if destination_network_load_balancer_id is not None:
            pulumi.set(__self__, "destination_network_load_balancer_id", destination_network_load_balancer_id)
        if export_mappings is not None:
            pulumi.set(__self__, "export_mappings", export_mappings)
        if file_system_operations is not None:
            pulumi.set(__self__, "file_system_operations", file_system_operations)
        if is_movable is not None:
            pulumi.set(__self__, "is_movable", is_movable)
        if is_retain_fault_domain is not None:
            pulumi.set(__self__, "is_retain_fault_domain", is_retain_fault_domain)
        if is_start_stop_enabled is not None:
            pulumi.set(__self__, "is_start_stop_enabled", is_start_stop_enabled)
        if jump_host_id is not None:
            pulumi.set(__self__, "jump_host_id", jump_host_id)
        if load_balancer_mappings is not None:
            pulumi.set(__self__, "load_balancer_mappings", load_balancer_mappings)
        if managed_node_pool_configs is not None:
            pulumi.set(__self__, "managed_node_pool_configs", managed_node_pool_configs)
        if namespace is not None:
            pulumi.set(__self__, "namespace", namespace)
        if network_load_balancer_mappings is not None:
            pulumi.set(__self__, "network_load_balancer_mappings", network_load_balancer_mappings)
        if password_vault_secret_id is not None:
            pulumi.set(__self__, "password_vault_secret_id", password_vault_secret_id)
        if peer_cluster_id is not None:
            pulumi.set(__self__, "peer_cluster_id", peer_cluster_id)
        if vault_mappings is not None:
            pulumi.set(__self__, "vault_mappings", vault_mappings)
        if virtual_node_pool_configs is not None:
            pulumi.set(__self__, "virtual_node_pool_configs", virtual_node_pool_configs)
        if vnic_mapping is not None:
            pulumi.set(__self__, "vnic_mapping", vnic_mapping)
        if vnic_mappings is not None:
            pulumi.set(__self__, "vnic_mappings", vnic_mappings)

    @property
    @pulumi.getter(name="memberId")
    def member_id(self) -> builtins.str:
        """
        (Updatable) The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
        """
        return pulumi.get(self, "member_id")

    @property
    @pulumi.getter(name="memberType")
    def member_type(self) -> builtins.str:
        """
        (Updatable) The type of the member.
        """
        return pulumi.get(self, "member_type")

    @property
    @pulumi.getter(name="autonomousDatabaseStandbyTypeForDrDrills")
    def autonomous_database_standby_type_for_dr_drills(self) -> Optional[builtins.str]:
        """
        (Updatable) This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html for information about these clone types. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html for information about snapshot standby.
        """
        return pulumi.get(self, "autonomous_database_standby_type_for_dr_drills")

    @property
    @pulumi.getter(name="backendSetMappings")
    def backend_set_mappings(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberBackendSetMapping']]:
        """
        (Updatable) A list of backend set mappings that are used to transfer or update backends during DR.
        """
        return pulumi.get(self, "backend_set_mappings")

    @property
    @pulumi.getter(name="backupConfig")
    def backup_config(self) -> Optional['outputs.DrProtectionGroupMemberBackupConfig']:
        """
        (Updatable) Create backup configuration properties for an OKE member.
        """
        return pulumi.get(self, "backup_config")

    @property
    @pulumi.getter(name="backupLocation")
    def backup_location(self) -> Optional['outputs.DrProtectionGroupMemberBackupLocation']:
        """
        (Updatable) The details for creating the backup location of an OKE Cluster.
        """
        return pulumi.get(self, "backup_location")

    @property
    @pulumi.getter(name="blockVolumeOperations")
    def block_volume_operations(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberBlockVolumeOperation']]:
        """
        (Updatable) A list of operations performed on block volumes used by the compute instance.
        """
        return pulumi.get(self, "block_volume_operations")

    @property
    @pulumi.getter
    def bucket(self) -> Optional[builtins.str]:
        """
        (Updatable) The bucket name inside the object storage namespace.  Example: `bucket_name`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter(name="connectionStringType")
    def connection_string_type(self) -> Optional[builtins.str]:
        """
        (Updatable) The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html for information about these service types.
        """
        return pulumi.get(self, "connection_string_type")

    @property
    @pulumi.getter(name="destinationAvailabilityDomain")
    def destination_availability_domain(self) -> Optional[builtins.str]:
        """
        (Updatable) The availability domain of the destination mount target.  Example: `BBTh:region-AD`
        """
        return pulumi.get(self, "destination_availability_domain")

    @property
    @pulumi.getter(name="destinationCapacityReservationId")
    def destination_capacity_reservation_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_capacity_reservation_id")

    @property
    @pulumi.getter(name="destinationCompartmentId")
    def destination_compartment_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_compartment_id")

    @property
    @pulumi.getter(name="destinationDedicatedVmHostId")
    def destination_dedicated_vm_host_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_dedicated_vm_host_id")

    @property
    @pulumi.getter(name="destinationLoadBalancerId")
    def destination_load_balancer_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the destination load balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_load_balancer_id")

    @property
    @pulumi.getter(name="destinationNetworkLoadBalancerId")
    def destination_network_load_balancer_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the destination network load balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_network_load_balancer_id")

    @property
    @pulumi.getter(name="exportMappings")
    def export_mappings(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberExportMapping']]:
        """
        (Updatable) A list of mappings between file system exports in the primary region and mount targets in the standby region.
        """
        return pulumi.get(self, "export_mappings")

    @property
    @pulumi.getter(name="fileSystemOperations")
    def file_system_operations(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberFileSystemOperation']]:
        """
        (Updatable) A list of operations performed on file systems used by the compute instance.
        """
        return pulumi.get(self, "file_system_operations")

    @property
    @pulumi.getter(name="isMovable")
    def is_movable(self) -> Optional[builtins.bool]:
        """
        (Updatable) A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
        """
        return pulumi.get(self, "is_movable")

    @property
    @pulumi.getter(name="isRetainFaultDomain")
    def is_retain_fault_domain(self) -> Optional[builtins.bool]:
        """
        (Updatable) A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
        """
        return pulumi.get(self, "is_retain_fault_domain")

    @property
    @pulumi.getter(name="isStartStopEnabled")
    def is_start_stop_enabled(self) -> Optional[builtins.bool]:
        """
        (Updatable) A flag indicating whether the non-movable compute instance should be started and stopped during DR operations. *Prechecks cannot be executed on stopped instances that are configured to be started.*
        """
        return pulumi.get(self, "is_start_stop_enabled")

    @property
    @pulumi.getter(name="jumpHostId")
    def jump_host_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the compute instance member that is designated as a jump host. This compute instance will be used to perform DR operations on the cluster using Oracle Cloud Agent's Run Command feature.  Example: `ocid1.instance.oc1..uniqueID`
        """
        return pulumi.get(self, "jump_host_id")

    @property
    @pulumi.getter(name="loadBalancerMappings")
    def load_balancer_mappings(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberLoadBalancerMapping']]:
        """
        (Updatable) The list of source-to-destination load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "load_balancer_mappings")

    @property
    @pulumi.getter(name="managedNodePoolConfigs")
    def managed_node_pool_configs(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberManagedNodePoolConfig']]:
        """
        (Updatable) The list of managed node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        """
        return pulumi.get(self, "managed_node_pool_configs")

    @property
    @pulumi.getter
    def namespace(self) -> Optional[builtins.str]:
        """
        (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter(name="networkLoadBalancerMappings")
    def network_load_balancer_mappings(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberNetworkLoadBalancerMapping']]:
        """
        (Updatable) The list of source-to-destination network load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "network_load_balancer_mappings")

    @property
    @pulumi.getter(name="passwordVaultSecretId")
    def password_vault_secret_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
        """
        return pulumi.get(self, "password_vault_secret_id")

    @property
    @pulumi.getter(name="peerClusterId")
    def peer_cluster_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the peer OKE cluster. This property applies to the OKE cluster member in both the primary and standby region.   Example: `ocid1.cluster.oc1..uniqueID`
        """
        return pulumi.get(self, "peer_cluster_id")

    @property
    @pulumi.getter(name="vaultMappings")
    def vault_mappings(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberVaultMapping']]:
        """
        (Updatable) The list of source-to-destination vault mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "vault_mappings")

    @property
    @pulumi.getter(name="virtualNodePoolConfigs")
    def virtual_node_pool_configs(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberVirtualNodePoolConfig']]:
        """
        (Updatable) The list of virtual node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        """
        return pulumi.get(self, "virtual_node_pool_configs")

    @property
    @pulumi.getter(name="vnicMapping")
    def vnic_mapping(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberVnicMapping']]:
        """
        (Updatable) A list of compute instance VNIC mappings.
        """
        return pulumi.get(self, "vnic_mapping")

    @property
    @pulumi.getter(name="vnicMappings")
    def vnic_mappings(self) -> Optional[Sequence['outputs.DrProtectionGroupMemberVnicMapping']]:
        """
        (Updatable) A list of compute instance VNIC mappings.
        """
        return pulumi.get(self, "vnic_mappings")


@pulumi.output_type
class DrProtectionGroupMemberBackendSetMapping(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationBackendSetName":
            suggest = "destination_backend_set_name"
        elif key == "isBackendSetForNonMovable":
            suggest = "is_backend_set_for_non_movable"
        elif key == "sourceBackendSetName":
            suggest = "source_backend_set_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberBackendSetMapping. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberBackendSetMapping.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberBackendSetMapping.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_backend_set_name: Optional[builtins.str] = None,
                 is_backend_set_for_non_movable: Optional[builtins.bool] = None,
                 source_backend_set_name: Optional[builtins.str] = None):
        """
        :param builtins.str destination_backend_set_name: (Updatable) The name of the destination backend set.  Example: `Destination-BackendSet-1`
        :param builtins.bool is_backend_set_for_non_movable: (Updatable) This flag specifies if this backend set is used for traffic for non-movable compute instances. Backend sets that point to non-movable instances are only enabled or disabled during DR, their contents are not altered. For non-movable instances this flag should be set to 'true'. Backend sets that point to movable instances are emptied and their contents are transferred to the  destination region load balancer.  For movable instances this flag should be set to 'false'.   Example: `true`
        :param builtins.str source_backend_set_name: (Updatable) The name of the source backend set.  Example: `Source-BackendSet-1`
        """
        if destination_backend_set_name is not None:
            pulumi.set(__self__, "destination_backend_set_name", destination_backend_set_name)
        if is_backend_set_for_non_movable is not None:
            pulumi.set(__self__, "is_backend_set_for_non_movable", is_backend_set_for_non_movable)
        if source_backend_set_name is not None:
            pulumi.set(__self__, "source_backend_set_name", source_backend_set_name)

    @property
    @pulumi.getter(name="destinationBackendSetName")
    def destination_backend_set_name(self) -> Optional[builtins.str]:
        """
        (Updatable) The name of the destination backend set.  Example: `Destination-BackendSet-1`
        """
        return pulumi.get(self, "destination_backend_set_name")

    @property
    @pulumi.getter(name="isBackendSetForNonMovable")
    def is_backend_set_for_non_movable(self) -> Optional[builtins.bool]:
        """
        (Updatable) This flag specifies if this backend set is used for traffic for non-movable compute instances. Backend sets that point to non-movable instances are only enabled or disabled during DR, their contents are not altered. For non-movable instances this flag should be set to 'true'. Backend sets that point to movable instances are emptied and their contents are transferred to the  destination region load balancer.  For movable instances this flag should be set to 'false'.   Example: `true`
        """
        return pulumi.get(self, "is_backend_set_for_non_movable")

    @property
    @pulumi.getter(name="sourceBackendSetName")
    def source_backend_set_name(self) -> Optional[builtins.str]:
        """
        (Updatable) The name of the source backend set.  Example: `Source-BackendSet-1`
        """
        return pulumi.get(self, "source_backend_set_name")


@pulumi.output_type
class DrProtectionGroupMemberBackupConfig(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "backupSchedule":
            suggest = "backup_schedule"
        elif key == "imageReplicationVaultSecretId":
            suggest = "image_replication_vault_secret_id"
        elif key == "maxNumberOfBackupsRetained":
            suggest = "max_number_of_backups_retained"
        elif key == "replicateImages":
            suggest = "replicate_images"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberBackupConfig. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberBackupConfig.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberBackupConfig.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 backup_schedule: Optional[builtins.str] = None,
                 image_replication_vault_secret_id: Optional[builtins.str] = None,
                 max_number_of_backups_retained: Optional[builtins.int] = None,
                 namespaces: Optional[Sequence[builtins.str]] = None,
                 replicate_images: Optional[builtins.str] = None):
        """
        :param builtins.str backup_schedule: (Updatable) The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created.  This format of the string specifying the backup schedule must conform with RFC-5545 (see examples below). This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.
               
               The backup frequency can be HOURLY, DAILY, WEEKLY or MONTHLY, and the upper and lower interval bounds are as follows HOURLY
               * Minimum = 1
               * Maximum = 24 DAILY
               * Minimum = 1
               * Maximum = 30 WEEKLY
               * Minimum = 1
               * Maximum = 1 MONTHLY
               * Minimum = 1
               * Maximum = 12
               
               Examples:  FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=1 > Run a backup every week on monday and wednesday at 10:00 AM. FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=2 > Invalid configuration (can not specify interval of 2).
               
               FREQ=HOURLY;INTERVAL=25 > Invalid configuration (can not specify interval of 25). FREQ=HOURLY;INTERVAL=0 > Invalid configuration (can not specify interval of 0). FREQ=HOURLY;INTERVAL=24 > Run a backup every 24 hours. FREQ=HOURLY;INTERVAL=1 > Run a backup every hour. FREQ=HOURLY;BYMINUTE=30;INTERVAL=15 > Run a backup every 15 hours at the 30th minute. FREQ=DAILY;INTERVAL=31 > Invalid configuration (can not specify interval of 31). FREQ=DAILY;INTERVAL=0 > Invalid configuration (can not specify interval of 0). FREQ=DAILY;INTERVAL=30 > Run a backup every 30 days at 12:00 midnight.  FREQ=DAILY;BYHOUR=17;BYMINUTE=10;INTERVAL=1 > Run a backup every day at 05:10 PM.
        :param builtins.str image_replication_vault_secret_id: (Updatable) The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
        :param builtins.int max_number_of_backups_retained: (Updatable) The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
        :param Sequence[builtins.str] namespaces: (Updatable) A list of namespaces that need to be backed up.  The default value is null. If a list of namespaces is not provided, all namespaces will be backed up. This property applies to the OKE cluster member in primary region.  Example: ["default", "pv-nginx"]
        :param builtins.str replicate_images: (Updatable) Controls the behaviour of image replication across regions. Image replication is enabled by default for DR Protection Groups with a primary role. This property applies to the OKE cluster member in primary region.
        """
        if backup_schedule is not None:
            pulumi.set(__self__, "backup_schedule", backup_schedule)
        if image_replication_vault_secret_id is not None:
            pulumi.set(__self__, "image_replication_vault_secret_id", image_replication_vault_secret_id)
        if max_number_of_backups_retained is not None:
            pulumi.set(__self__, "max_number_of_backups_retained", max_number_of_backups_retained)
        if namespaces is not None:
            pulumi.set(__self__, "namespaces", namespaces)
        if replicate_images is not None:
            pulumi.set(__self__, "replicate_images", replicate_images)

    @property
    @pulumi.getter(name="backupSchedule")
    def backup_schedule(self) -> Optional[builtins.str]:
        """
        (Updatable) The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created.  This format of the string specifying the backup schedule must conform with RFC-5545 (see examples below). This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.

        The backup frequency can be HOURLY, DAILY, WEEKLY or MONTHLY, and the upper and lower interval bounds are as follows HOURLY
        * Minimum = 1
        * Maximum = 24 DAILY
        * Minimum = 1
        * Maximum = 30 WEEKLY
        * Minimum = 1
        * Maximum = 1 MONTHLY
        * Minimum = 1
        * Maximum = 12

        Examples:  FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=1 > Run a backup every week on monday and wednesday at 10:00 AM. FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=2 > Invalid configuration (can not specify interval of 2).

        FREQ=HOURLY;INTERVAL=25 > Invalid configuration (can not specify interval of 25). FREQ=HOURLY;INTERVAL=0 > Invalid configuration (can not specify interval of 0). FREQ=HOURLY;INTERVAL=24 > Run a backup every 24 hours. FREQ=HOURLY;INTERVAL=1 > Run a backup every hour. FREQ=HOURLY;BYMINUTE=30;INTERVAL=15 > Run a backup every 15 hours at the 30th minute. FREQ=DAILY;INTERVAL=31 > Invalid configuration (can not specify interval of 31). FREQ=DAILY;INTERVAL=0 > Invalid configuration (can not specify interval of 0). FREQ=DAILY;INTERVAL=30 > Run a backup every 30 days at 12:00 midnight.  FREQ=DAILY;BYHOUR=17;BYMINUTE=10;INTERVAL=1 > Run a backup every day at 05:10 PM.
        """
        return pulumi.get(self, "backup_schedule")

    @property
    @pulumi.getter(name="imageReplicationVaultSecretId")
    def image_replication_vault_secret_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
        """
        return pulumi.get(self, "image_replication_vault_secret_id")

    @property
    @pulumi.getter(name="maxNumberOfBackupsRetained")
    def max_number_of_backups_retained(self) -> Optional[builtins.int]:
        """
        (Updatable) The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "max_number_of_backups_retained")

    @property
    @pulumi.getter
    def namespaces(self) -> Optional[Sequence[builtins.str]]:
        """
        (Updatable) A list of namespaces that need to be backed up.  The default value is null. If a list of namespaces is not provided, all namespaces will be backed up. This property applies to the OKE cluster member in primary region.  Example: ["default", "pv-nginx"]
        """
        return pulumi.get(self, "namespaces")

    @property
    @pulumi.getter(name="replicateImages")
    def replicate_images(self) -> Optional[builtins.str]:
        """
        (Updatable) Controls the behaviour of image replication across regions. Image replication is enabled by default for DR Protection Groups with a primary role. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "replicate_images")


@pulumi.output_type
class DrProtectionGroupMemberBackupLocation(dict):
    def __init__(__self__, *,
                 bucket: Optional[builtins.str] = None,
                 namespace: Optional[builtins.str] = None,
                 object: Optional[builtins.str] = None):
        """
        :param builtins.str bucket: (Updatable) The bucket name inside the object storage namespace.  Example: `operation_logs`
        :param builtins.str namespace: (Updatable) The namespace in the object storage bucket location (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        if bucket is not None:
            pulumi.set(__self__, "bucket", bucket)
        if namespace is not None:
            pulumi.set(__self__, "namespace", namespace)
        if object is not None:
            pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> Optional[builtins.str]:
        """
        (Updatable) The bucket name inside the object storage namespace.  Example: `operation_logs`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> Optional[builtins.str]:
        """
        (Updatable) The namespace in the object storage bucket location (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> Optional[builtins.str]:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class DrProtectionGroupMemberBlockVolumeOperation(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "attachmentDetails":
            suggest = "attachment_details"
        elif key == "blockVolumeId":
            suggest = "block_volume_id"
        elif key == "mountDetails":
            suggest = "mount_details"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberBlockVolumeOperation. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberBlockVolumeOperation.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberBlockVolumeOperation.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 attachment_details: Optional['outputs.DrProtectionGroupMemberBlockVolumeOperationAttachmentDetails'] = None,
                 block_volume_id: Optional[builtins.str] = None,
                 mount_details: Optional['outputs.DrProtectionGroupMemberBlockVolumeOperationMountDetails'] = None):
        """
        :param 'DrProtectionGroupMemberBlockVolumeOperationAttachmentDetailsArgs' attachment_details: (Updatable) The details for creating a block volume attachment.
        :param builtins.str block_volume_id: (Updatable) The OCID of the block volume.  Example: `ocid1.volume.oc1..uniqueID`
        :param 'DrProtectionGroupMemberBlockVolumeOperationMountDetailsArgs' mount_details: (Updatable) The details for creating a mount for a file system on a block volume.
        """
        if attachment_details is not None:
            pulumi.set(__self__, "attachment_details", attachment_details)
        if block_volume_id is not None:
            pulumi.set(__self__, "block_volume_id", block_volume_id)
        if mount_details is not None:
            pulumi.set(__self__, "mount_details", mount_details)

    @property
    @pulumi.getter(name="attachmentDetails")
    def attachment_details(self) -> Optional['outputs.DrProtectionGroupMemberBlockVolumeOperationAttachmentDetails']:
        """
        (Updatable) The details for creating a block volume attachment.
        """
        return pulumi.get(self, "attachment_details")

    @property
    @pulumi.getter(name="blockVolumeId")
    def block_volume_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the block volume.  Example: `ocid1.volume.oc1..uniqueID`
        """
        return pulumi.get(self, "block_volume_id")

    @property
    @pulumi.getter(name="mountDetails")
    def mount_details(self) -> Optional['outputs.DrProtectionGroupMemberBlockVolumeOperationMountDetails']:
        """
        (Updatable) The details for creating a mount for a file system on a block volume.
        """
        return pulumi.get(self, "mount_details")


@pulumi.output_type
class DrProtectionGroupMemberBlockVolumeOperationAttachmentDetails(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "volumeAttachmentReferenceInstanceId":
            suggest = "volume_attachment_reference_instance_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberBlockVolumeOperationAttachmentDetails. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberBlockVolumeOperationAttachmentDetails.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberBlockVolumeOperationAttachmentDetails.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 volume_attachment_reference_instance_id: Optional[builtins.str] = None):
        """
        :param builtins.str volume_attachment_reference_instance_id: (Updatable) The OCID of the reference compute instance from which to obtain the attachment details for the volume. This reference compute instance is from the peer DR protection group.  Example: `ocid1.instance.oc1..uniqueID`
        """
        if volume_attachment_reference_instance_id is not None:
            pulumi.set(__self__, "volume_attachment_reference_instance_id", volume_attachment_reference_instance_id)

    @property
    @pulumi.getter(name="volumeAttachmentReferenceInstanceId")
    def volume_attachment_reference_instance_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the reference compute instance from which to obtain the attachment details for the volume. This reference compute instance is from the peer DR protection group.  Example: `ocid1.instance.oc1..uniqueID`
        """
        return pulumi.get(self, "volume_attachment_reference_instance_id")


@pulumi.output_type
class DrProtectionGroupMemberBlockVolumeOperationMountDetails(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "mountPoint":
            suggest = "mount_point"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberBlockVolumeOperationMountDetails. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberBlockVolumeOperationMountDetails.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberBlockVolumeOperationMountDetails.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 mount_point: Optional[builtins.str] = None):
        """
        :param builtins.str mount_point: (Updatable) The physical mount point used for mounting the file system on the block volume.  Example: `/mnt/yourmountpoint`
        """
        if mount_point is not None:
            pulumi.set(__self__, "mount_point", mount_point)

    @property
    @pulumi.getter(name="mountPoint")
    def mount_point(self) -> Optional[builtins.str]:
        """
        (Updatable) The physical mount point used for mounting the file system on the block volume.  Example: `/mnt/yourmountpoint`
        """
        return pulumi.get(self, "mount_point")


@pulumi.output_type
class DrProtectionGroupMemberExportMapping(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationMountTargetId":
            suggest = "destination_mount_target_id"
        elif key == "exportId":
            suggest = "export_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberExportMapping. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberExportMapping.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberExportMapping.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_mount_target_id: Optional[builtins.str] = None,
                 export_id: Optional[builtins.str] = None):
        """
        :param builtins.str destination_mount_target_id: (Updatable) The OCID of the destination mount target in the destination region which is used to export the file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        :param builtins.str export_id: (Updatable) The OCID of the export path in the primary region used to mount or unmount the file system.  Example: `ocid1.export.oc1..uniqueID`
        """
        if destination_mount_target_id is not None:
            pulumi.set(__self__, "destination_mount_target_id", destination_mount_target_id)
        if export_id is not None:
            pulumi.set(__self__, "export_id", export_id)

    @property
    @pulumi.getter(name="destinationMountTargetId")
    def destination_mount_target_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the destination mount target in the destination region which is used to export the file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_mount_target_id")

    @property
    @pulumi.getter(name="exportId")
    def export_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the export path in the primary region used to mount or unmount the file system.  Example: `ocid1.export.oc1..uniqueID`
        """
        return pulumi.get(self, "export_id")


@pulumi.output_type
class DrProtectionGroupMemberFileSystemOperation(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "exportPath":
            suggest = "export_path"
        elif key == "mountDetails":
            suggest = "mount_details"
        elif key == "mountPoint":
            suggest = "mount_point"
        elif key == "mountTargetId":
            suggest = "mount_target_id"
        elif key == "unmountDetails":
            suggest = "unmount_details"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberFileSystemOperation. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberFileSystemOperation.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberFileSystemOperation.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 export_path: Optional[builtins.str] = None,
                 mount_details: Optional['outputs.DrProtectionGroupMemberFileSystemOperationMountDetails'] = None,
                 mount_point: Optional[builtins.str] = None,
                 mount_target_id: Optional[builtins.str] = None,
                 unmount_details: Optional['outputs.DrProtectionGroupMemberFileSystemOperationUnmountDetails'] = None):
        """
        :param builtins.str export_path: (Updatable) The export path of the file system.  Example: `/fs-export-path`
        :param 'DrProtectionGroupMemberFileSystemOperationMountDetailsArgs' mount_details: (Updatable) The details for creating a file system mount.
        :param builtins.str mount_point: (Updatable) The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        :param builtins.str mount_target_id: (Updatable) The OCID of the mount target.  Example: `ocid1.mounttarget.oc1..uniqueID`
        :param 'DrProtectionGroupMemberFileSystemOperationUnmountDetailsArgs' unmount_details: (Updatable) The details for creating a file system unmount.
        """
        if export_path is not None:
            pulumi.set(__self__, "export_path", export_path)
        if mount_details is not None:
            pulumi.set(__self__, "mount_details", mount_details)
        if mount_point is not None:
            pulumi.set(__self__, "mount_point", mount_point)
        if mount_target_id is not None:
            pulumi.set(__self__, "mount_target_id", mount_target_id)
        if unmount_details is not None:
            pulumi.set(__self__, "unmount_details", unmount_details)

    @property
    @pulumi.getter(name="exportPath")
    def export_path(self) -> Optional[builtins.str]:
        """
        (Updatable) The export path of the file system.  Example: `/fs-export-path`
        """
        return pulumi.get(self, "export_path")

    @property
    @pulumi.getter(name="mountDetails")
    def mount_details(self) -> Optional['outputs.DrProtectionGroupMemberFileSystemOperationMountDetails']:
        """
        (Updatable) The details for creating a file system mount.
        """
        return pulumi.get(self, "mount_details")

    @property
    @pulumi.getter(name="mountPoint")
    def mount_point(self) -> Optional[builtins.str]:
        """
        (Updatable) The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        """
        return pulumi.get(self, "mount_point")

    @property
    @pulumi.getter(name="mountTargetId")
    def mount_target_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the mount target.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "mount_target_id")

    @property
    @pulumi.getter(name="unmountDetails")
    def unmount_details(self) -> Optional['outputs.DrProtectionGroupMemberFileSystemOperationUnmountDetails']:
        """
        (Updatable) The details for creating a file system unmount.
        """
        return pulumi.get(self, "unmount_details")


@pulumi.output_type
class DrProtectionGroupMemberFileSystemOperationMountDetails(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "mountTargetId":
            suggest = "mount_target_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberFileSystemOperationMountDetails. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberFileSystemOperationMountDetails.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberFileSystemOperationMountDetails.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 mount_target_id: Optional[builtins.str] = None):
        """
        :param builtins.str mount_target_id: (Updatable) The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        if mount_target_id is not None:
            pulumi.set(__self__, "mount_target_id", mount_target_id)

    @property
    @pulumi.getter(name="mountTargetId")
    def mount_target_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "mount_target_id")


@pulumi.output_type
class DrProtectionGroupMemberFileSystemOperationUnmountDetails(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "mountTargetId":
            suggest = "mount_target_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberFileSystemOperationUnmountDetails. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberFileSystemOperationUnmountDetails.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberFileSystemOperationUnmountDetails.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 mount_target_id: Optional[builtins.str] = None):
        """
        :param builtins.str mount_target_id: (Updatable) The OCID of the mount target.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        if mount_target_id is not None:
            pulumi.set(__self__, "mount_target_id", mount_target_id)

    @property
    @pulumi.getter(name="mountTargetId")
    def mount_target_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the mount target.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "mount_target_id")


@pulumi.output_type
class DrProtectionGroupMemberLoadBalancerMapping(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationLoadBalancerId":
            suggest = "destination_load_balancer_id"
        elif key == "sourceLoadBalancerId":
            suggest = "source_load_balancer_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberLoadBalancerMapping. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberLoadBalancerMapping.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberLoadBalancerMapping.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_load_balancer_id: Optional[builtins.str] = None,
                 source_load_balancer_id: Optional[builtins.str] = None):
        """
        :param builtins.str destination_load_balancer_id: (Updatable) The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        :param builtins.str source_load_balancer_id: (Updatable) The OCID of the source Load Balancer. Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        if destination_load_balancer_id is not None:
            pulumi.set(__self__, "destination_load_balancer_id", destination_load_balancer_id)
        if source_load_balancer_id is not None:
            pulumi.set(__self__, "source_load_balancer_id", source_load_balancer_id)

    @property
    @pulumi.getter(name="destinationLoadBalancerId")
    def destination_load_balancer_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_load_balancer_id")

    @property
    @pulumi.getter(name="sourceLoadBalancerId")
    def source_load_balancer_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the source Load Balancer. Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "source_load_balancer_id")


@pulumi.output_type
class DrProtectionGroupMemberManagedNodePoolConfig(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 maximum: Optional[builtins.int] = None,
                 minimum: Optional[builtins.int] = None):
        """
        :param builtins.str id: (Updatable) The OCID of the managed node pool in OKE cluster.
        :param builtins.int maximum: (Updatable) The maximum number to which nodes in the managed node pool could be scaled up.
        :param builtins.int minimum: (Updatable) The minimum number to which nodes in the managed node pool could be scaled down.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if maximum is not None:
            pulumi.set(__self__, "maximum", maximum)
        if minimum is not None:
            pulumi.set(__self__, "minimum", minimum)

    @property
    @pulumi.getter
    def id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the managed node pool in OKE cluster.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def maximum(self) -> Optional[builtins.int]:
        """
        (Updatable) The maximum number to which nodes in the managed node pool could be scaled up.
        """
        return pulumi.get(self, "maximum")

    @property
    @pulumi.getter
    def minimum(self) -> Optional[builtins.int]:
        """
        (Updatable) The minimum number to which nodes in the managed node pool could be scaled down.
        """
        return pulumi.get(self, "minimum")


@pulumi.output_type
class DrProtectionGroupMemberNetworkLoadBalancerMapping(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationNetworkLoadBalancerId":
            suggest = "destination_network_load_balancer_id"
        elif key == "sourceNetworkLoadBalancerId":
            suggest = "source_network_load_balancer_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberNetworkLoadBalancerMapping. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberNetworkLoadBalancerMapping.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberNetworkLoadBalancerMapping.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_network_load_balancer_id: Optional[builtins.str] = None,
                 source_network_load_balancer_id: Optional[builtins.str] = None):
        """
        :param builtins.str destination_network_load_balancer_id: (Updatable) The OCID of the Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        :param builtins.str source_network_load_balancer_id: (Updatable) The OCID of the source Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        if destination_network_load_balancer_id is not None:
            pulumi.set(__self__, "destination_network_load_balancer_id", destination_network_load_balancer_id)
        if source_network_load_balancer_id is not None:
            pulumi.set(__self__, "source_network_load_balancer_id", source_network_load_balancer_id)

    @property
    @pulumi.getter(name="destinationNetworkLoadBalancerId")
    def destination_network_load_balancer_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_network_load_balancer_id")

    @property
    @pulumi.getter(name="sourceNetworkLoadBalancerId")
    def source_network_load_balancer_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the source Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "source_network_load_balancer_id")


@pulumi.output_type
class DrProtectionGroupMemberVaultMapping(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationVaultId":
            suggest = "destination_vault_id"
        elif key == "sourceVaultId":
            suggest = "source_vault_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberVaultMapping. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberVaultMapping.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberVaultMapping.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_vault_id: Optional[builtins.str] = None,
                 source_vault_id: Optional[builtins.str] = None):
        """
        :param builtins.str destination_vault_id: (Updatable) The OCID of the destination Vault.  Example: `ocid1.vault.oc1..uniqueID`
        :param builtins.str source_vault_id: (Updatable) The OCID of the source Vault.  Example: `ocid1.vault.oc1..uniqueID`
        """
        if destination_vault_id is not None:
            pulumi.set(__self__, "destination_vault_id", destination_vault_id)
        if source_vault_id is not None:
            pulumi.set(__self__, "source_vault_id", source_vault_id)

    @property
    @pulumi.getter(name="destinationVaultId")
    def destination_vault_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the destination Vault.  Example: `ocid1.vault.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_vault_id")

    @property
    @pulumi.getter(name="sourceVaultId")
    def source_vault_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the source Vault.  Example: `ocid1.vault.oc1..uniqueID`
        """
        return pulumi.get(self, "source_vault_id")


@pulumi.output_type
class DrProtectionGroupMemberVirtualNodePoolConfig(dict):
    def __init__(__self__, *,
                 id: Optional[builtins.str] = None,
                 maximum: Optional[builtins.int] = None,
                 minimum: Optional[builtins.int] = None):
        """
        :param builtins.str id: (Updatable) The OCID of the virtual node pool in OKE cluster.
        :param builtins.int maximum: (Updatable) The maximum number to which nodes in the virtual node pool could be scaled up.
        :param builtins.int minimum: (Updatable) The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if maximum is not None:
            pulumi.set(__self__, "maximum", maximum)
        if minimum is not None:
            pulumi.set(__self__, "minimum", minimum)

    @property
    @pulumi.getter
    def id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the virtual node pool in OKE cluster.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def maximum(self) -> Optional[builtins.int]:
        """
        (Updatable) The maximum number to which nodes in the virtual node pool could be scaled up.
        """
        return pulumi.get(self, "maximum")

    @property
    @pulumi.getter
    def minimum(self) -> Optional[builtins.int]:
        """
        (Updatable) The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        return pulumi.get(self, "minimum")


@pulumi.output_type
class DrProtectionGroupMemberVnicMapping(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationNsgIdLists":
            suggest = "destination_nsg_id_lists"
        elif key == "destinationPrimaryPrivateIpAddress":
            suggest = "destination_primary_private_ip_address"
        elif key == "destinationPrimaryPrivateIpHostnameLabel":
            suggest = "destination_primary_private_ip_hostname_label"
        elif key == "destinationSubnetId":
            suggest = "destination_subnet_id"
        elif key == "sourceVnicId":
            suggest = "source_vnic_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DrProtectionGroupMemberVnicMapping. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DrProtectionGroupMemberVnicMapping.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DrProtectionGroupMemberVnicMapping.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_nsg_id_lists: Optional[Sequence[builtins.str]] = None,
                 destination_primary_private_ip_address: Optional[builtins.str] = None,
                 destination_primary_private_ip_hostname_label: Optional[builtins.str] = None,
                 destination_subnet_id: Optional[builtins.str] = None,
                 source_vnic_id: Optional[builtins.str] = None):
        """
        :param Sequence[builtins.str] destination_nsg_id_lists: (Updatable) A list of OCIDs of network security groups (NSG) in the destination region which should be assigned to the source VNIC.  Example: `[ ocid1.networksecuritygroup.oc1..uniqueID, ocid1.networksecuritygroup.oc1..uniqueID ]`
        :param builtins.str destination_primary_private_ip_address: (Updatable) The primary private IP address to be assigned to the source VNIC in the destination subnet.  This IP address must belong to the destination subnet.  Example: `10.0.3.3`
        :param builtins.str destination_primary_private_ip_hostname_label: (Updatable) The hostname label to be assigned in the destination subnet for the primary private IP of the source VNIC. This label is the hostname portion of the private IP's fully qualified domain name (FQDN)  (for example, 'myhost1' in the FQDN 'myhost1.subnet123.vcn1.oraclevcn.com').  Example: `myhost1`
        :param builtins.str destination_subnet_id: (Updatable) The OCID of the destination subnet to which the source VNIC should connect.          Example: `ocid1.subnet.oc1..uniqueID`
        :param builtins.str source_vnic_id: (Updatable) The OCID of the source VNIC.  Example: `ocid1.vnic.oc1..uniqueID`
        """
        if destination_nsg_id_lists is not None:
            pulumi.set(__self__, "destination_nsg_id_lists", destination_nsg_id_lists)
        if destination_primary_private_ip_address is not None:
            pulumi.set(__self__, "destination_primary_private_ip_address", destination_primary_private_ip_address)
        if destination_primary_private_ip_hostname_label is not None:
            pulumi.set(__self__, "destination_primary_private_ip_hostname_label", destination_primary_private_ip_hostname_label)
        if destination_subnet_id is not None:
            pulumi.set(__self__, "destination_subnet_id", destination_subnet_id)
        if source_vnic_id is not None:
            pulumi.set(__self__, "source_vnic_id", source_vnic_id)

    @property
    @pulumi.getter(name="destinationNsgIdLists")
    def destination_nsg_id_lists(self) -> Optional[Sequence[builtins.str]]:
        """
        (Updatable) A list of OCIDs of network security groups (NSG) in the destination region which should be assigned to the source VNIC.  Example: `[ ocid1.networksecuritygroup.oc1..uniqueID, ocid1.networksecuritygroup.oc1..uniqueID ]`
        """
        return pulumi.get(self, "destination_nsg_id_lists")

    @property
    @pulumi.getter(name="destinationPrimaryPrivateIpAddress")
    def destination_primary_private_ip_address(self) -> Optional[builtins.str]:
        """
        (Updatable) The primary private IP address to be assigned to the source VNIC in the destination subnet.  This IP address must belong to the destination subnet.  Example: `10.0.3.3`
        """
        return pulumi.get(self, "destination_primary_private_ip_address")

    @property
    @pulumi.getter(name="destinationPrimaryPrivateIpHostnameLabel")
    def destination_primary_private_ip_hostname_label(self) -> Optional[builtins.str]:
        """
        (Updatable) The hostname label to be assigned in the destination subnet for the primary private IP of the source VNIC. This label is the hostname portion of the private IP's fully qualified domain name (FQDN)  (for example, 'myhost1' in the FQDN 'myhost1.subnet123.vcn1.oraclevcn.com').  Example: `myhost1`
        """
        return pulumi.get(self, "destination_primary_private_ip_hostname_label")

    @property
    @pulumi.getter(name="destinationSubnetId")
    def destination_subnet_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the destination subnet to which the source VNIC should connect.          Example: `ocid1.subnet.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_subnet_id")

    @property
    @pulumi.getter(name="sourceVnicId")
    def source_vnic_id(self) -> Optional[builtins.str]:
        """
        (Updatable) The OCID of the source VNIC.  Example: `ocid1.vnic.oc1..uniqueID`
        """
        return pulumi.get(self, "source_vnic_id")


@pulumi.output_type
class GetDrPlanExecutionExecutionOptionResult(dict):
    def __init__(__self__, *,
                 are_prechecks_enabled: builtins.bool,
                 are_warnings_ignored: builtins.bool,
                 plan_execution_type: builtins.str):
        """
        :param builtins.bool are_prechecks_enabled: A flag indicating whether a precheck should be executed before the plan execution.  Example: `true`
        :param builtins.bool are_warnings_ignored: A flag indicating whether warnings should be ignored during the plan execution.  Example: `false`
        :param builtins.str plan_execution_type: The type of the DR plan executed.
        """
        pulumi.set(__self__, "are_prechecks_enabled", are_prechecks_enabled)
        pulumi.set(__self__, "are_warnings_ignored", are_warnings_ignored)
        pulumi.set(__self__, "plan_execution_type", plan_execution_type)

    @property
    @pulumi.getter(name="arePrechecksEnabled")
    def are_prechecks_enabled(self) -> builtins.bool:
        """
        A flag indicating whether a precheck should be executed before the plan execution.  Example: `true`
        """
        return pulumi.get(self, "are_prechecks_enabled")

    @property
    @pulumi.getter(name="areWarningsIgnored")
    def are_warnings_ignored(self) -> builtins.bool:
        """
        A flag indicating whether warnings should be ignored during the plan execution.  Example: `false`
        """
        return pulumi.get(self, "are_warnings_ignored")

    @property
    @pulumi.getter(name="planExecutionType")
    def plan_execution_type(self) -> builtins.str:
        """
        The type of the DR plan executed.
        """
        return pulumi.get(self, "plan_execution_type")


@pulumi.output_type
class GetDrPlanExecutionGroupExecutionResult(dict):
    def __init__(__self__, *,
                 display_name: builtins.str,
                 execution_duration_in_sec: builtins.int,
                 group_id: builtins.str,
                 status: builtins.str,
                 status_details: builtins.str,
                 step_executions: Sequence['outputs.GetDrPlanExecutionGroupExecutionStepExecutionResult'],
                 time_ended: builtins.str,
                 time_started: builtins.str,
                 type: builtins.str):
        """
        :param builtins.str display_name: The display name of the step execution.  Example: `DATABASE_SWITCHOVER`
        :param builtins.int execution_duration_in_sec: The total duration in seconds taken to complete the step execution.  Example: `35`
        :param builtins.str group_id: The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        :param builtins.str status: The status of the step execution.
        :param builtins.str status_details: Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        :param Sequence['GetDrPlanExecutionGroupExecutionStepExecutionArgs'] step_executions: A list of step executions in the group.
        :param builtins.str time_ended: The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_started: The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str type: The group type.  Example: `BUILT_IN`
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "execution_duration_in_sec", execution_duration_in_sec)
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "status_details", status_details)
        pulumi.set(__self__, "step_executions", step_executions)
        pulumi.set(__self__, "time_ended", time_ended)
        pulumi.set(__self__, "time_started", time_started)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        The display name of the step execution.  Example: `DATABASE_SWITCHOVER`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="executionDurationInSec")
    def execution_duration_in_sec(self) -> builtins.int:
        """
        The total duration in seconds taken to complete the step execution.  Example: `35`
        """
        return pulumi.get(self, "execution_duration_in_sec")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> builtins.str:
        """
        The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of the step execution.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusDetails")
    def status_details(self) -> builtins.str:
        """
        Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        """
        return pulumi.get(self, "status_details")

    @property
    @pulumi.getter(name="stepExecutions")
    def step_executions(self) -> Sequence['outputs.GetDrPlanExecutionGroupExecutionStepExecutionResult']:
        """
        A list of step executions in the group.
        """
        return pulumi.get(self, "step_executions")

    @property
    @pulumi.getter(name="timeEnded")
    def time_ended(self) -> builtins.str:
        """
        The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_ended")

    @property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> builtins.str:
        """
        The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_started")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The group type.  Example: `BUILT_IN`
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDrPlanExecutionGroupExecutionStepExecutionResult(dict):
    def __init__(__self__, *,
                 display_name: builtins.str,
                 execution_duration_in_sec: builtins.int,
                 group_id: builtins.str,
                 log_locations: Sequence['outputs.GetDrPlanExecutionGroupExecutionStepExecutionLogLocationResult'],
                 status: builtins.str,
                 status_details: builtins.str,
                 step_id: builtins.str,
                 time_ended: builtins.str,
                 time_started: builtins.str,
                 type: builtins.str):
        """
        :param builtins.str display_name: The display name of the step execution.  Example: `DATABASE_SWITCHOVER`
        :param builtins.int execution_duration_in_sec: The total duration in seconds taken to complete the step execution.  Example: `35`
        :param builtins.str group_id: The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        :param Sequence['GetDrPlanExecutionGroupExecutionStepExecutionLogLocationArgs'] log_locations: The details of an object storage log location for a DR protection group.
        :param builtins.str status: The status of the step execution.
        :param builtins.str status_details: Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        :param builtins.str step_id: The unique id of the step. Must not be modified by user.  Example: `sgid1.step..uniqueID`
        :param builtins.str time_ended: The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_started: The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str type: The group type.  Example: `BUILT_IN`
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "execution_duration_in_sec", execution_duration_in_sec)
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "log_locations", log_locations)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "status_details", status_details)
        pulumi.set(__self__, "step_id", step_id)
        pulumi.set(__self__, "time_ended", time_ended)
        pulumi.set(__self__, "time_started", time_started)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        The display name of the step execution.  Example: `DATABASE_SWITCHOVER`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="executionDurationInSec")
    def execution_duration_in_sec(self) -> builtins.int:
        """
        The total duration in seconds taken to complete the step execution.  Example: `35`
        """
        return pulumi.get(self, "execution_duration_in_sec")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> builtins.str:
        """
        The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter(name="logLocations")
    def log_locations(self) -> Sequence['outputs.GetDrPlanExecutionGroupExecutionStepExecutionLogLocationResult']:
        """
        The details of an object storage log location for a DR protection group.
        """
        return pulumi.get(self, "log_locations")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of the step execution.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusDetails")
    def status_details(self) -> builtins.str:
        """
        Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        """
        return pulumi.get(self, "status_details")

    @property
    @pulumi.getter(name="stepId")
    def step_id(self) -> builtins.str:
        """
        The unique id of the step. Must not be modified by user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "step_id")

    @property
    @pulumi.getter(name="timeEnded")
    def time_ended(self) -> builtins.str:
        """
        The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_ended")

    @property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> builtins.str:
        """
        The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_started")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The group type.  Example: `BUILT_IN`
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDrPlanExecutionGroupExecutionStepExecutionLogLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `operation_logs`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `operation_logs`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrPlanExecutionLogLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `operation_logs`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `operation_logs`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrPlanExecutionsDrPlanExecutionCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDrPlanExecutionsDrPlanExecutionCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: builtins.str,
                 defined_tags: Mapping[str, builtins.str],
                 display_name: builtins.str,
                 dr_protection_group_id: builtins.str,
                 execution_duration_in_sec: builtins.int,
                 execution_options: Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOptionResult'],
                 freeform_tags: Mapping[str, builtins.str],
                 group_executions: Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionResult'],
                 id: builtins.str,
                 life_cycle_details: builtins.str,
                 log_locations: Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemLogLocationResult'],
                 peer_dr_protection_group_id: builtins.str,
                 peer_region: builtins.str,
                 plan_execution_type: builtins.str,
                 plan_id: builtins.str,
                 state: builtins.str,
                 system_tags: Mapping[str, builtins.str],
                 time_created: builtins.str,
                 time_ended: builtins.str,
                 time_started: builtins.str,
                 time_updated: builtins.str):
        """
        :param builtins.str compartment_id: The OCID of the compartment containing this DR plan execution.  Example: `ocid1.compartment.oc1..uniqueID`
        :param Mapping[str, builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"Operations.CostCenter": "42"}`
        :param builtins.str display_name: A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        :param builtins.str dr_protection_group_id: The OCID of the DR protection group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        :param builtins.int execution_duration_in_sec: The total duration in seconds taken to complete the step execution.  Example: `35`
        :param Sequence['GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOptionArgs'] execution_options: The options for a plan execution.
        :param Mapping[str, builtins.str] freeform_tags: Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{"Department": "Finance"}`
        :param Sequence['GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionArgs'] group_executions: A list of groups executed in this DR plan execution.
        :param builtins.str id: The OCID of the DR plan execution.  Example: `ocid1.drplanexecution.oc1..uniqueID`
        :param builtins.str life_cycle_details: A message describing the DR plan execution's current state in more detail.
        :param Sequence['GetDrPlanExecutionsDrPlanExecutionCollectionItemLogLocationArgs'] log_locations: The details of an object storage log location for a DR protection group.
        :param builtins.str peer_dr_protection_group_id: The OCID of peer DR protection group associated with this plan's DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        :param builtins.str peer_region: The region of the peer DR protection group associated with this plan's DR protection group.  Example: `us-ashburn-1`
        :param builtins.str plan_execution_type: The type of the DR plan executed.
        :param builtins.str plan_id: The OCID of the DR plan.  Example: `ocid1.drplan.oc1..uniqueID`
        :param builtins.str state: A filter to return only DR plan executions that match the given lifecycle state.
        :param Mapping[str, builtins.str] system_tags: Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param builtins.str time_created: The date and time at which DR plan execution was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_ended: The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_started: The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_updated: The time when DR plan execution was last updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "dr_protection_group_id", dr_protection_group_id)
        pulumi.set(__self__, "execution_duration_in_sec", execution_duration_in_sec)
        pulumi.set(__self__, "execution_options", execution_options)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "group_executions", group_executions)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "life_cycle_details", life_cycle_details)
        pulumi.set(__self__, "log_locations", log_locations)
        pulumi.set(__self__, "peer_dr_protection_group_id", peer_dr_protection_group_id)
        pulumi.set(__self__, "peer_region", peer_region)
        pulumi.set(__self__, "plan_execution_type", plan_execution_type)
        pulumi.set(__self__, "plan_id", plan_id)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_ended", time_ended)
        pulumi.set(__self__, "time_started", time_started)
        pulumi.set(__self__, "time_updated", time_updated)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> builtins.str:
        """
        The OCID of the compartment containing this DR plan execution.  Example: `ocid1.compartment.oc1..uniqueID`
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="drProtectionGroupId")
    def dr_protection_group_id(self) -> builtins.str:
        """
        The OCID of the DR protection group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        """
        return pulumi.get(self, "dr_protection_group_id")

    @property
    @pulumi.getter(name="executionDurationInSec")
    def execution_duration_in_sec(self) -> builtins.int:
        """
        The total duration in seconds taken to complete the step execution.  Example: `35`
        """
        return pulumi.get(self, "execution_duration_in_sec")

    @property
    @pulumi.getter(name="executionOptions")
    def execution_options(self) -> Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOptionResult']:
        """
        The options for a plan execution.
        """
        return pulumi.get(self, "execution_options")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, builtins.str]:
        """
        Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter(name="groupExecutions")
    def group_executions(self) -> Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionResult']:
        """
        A list of groups executed in this DR plan execution.
        """
        return pulumi.get(self, "group_executions")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The OCID of the DR plan execution.  Example: `ocid1.drplanexecution.oc1..uniqueID`
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lifeCycleDetails")
    def life_cycle_details(self) -> builtins.str:
        """
        A message describing the DR plan execution's current state in more detail.
        """
        return pulumi.get(self, "life_cycle_details")

    @property
    @pulumi.getter(name="logLocations")
    def log_locations(self) -> Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemLogLocationResult']:
        """
        The details of an object storage log location for a DR protection group.
        """
        return pulumi.get(self, "log_locations")

    @property
    @pulumi.getter(name="peerDrProtectionGroupId")
    def peer_dr_protection_group_id(self) -> builtins.str:
        """
        The OCID of peer DR protection group associated with this plan's DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        """
        return pulumi.get(self, "peer_dr_protection_group_id")

    @property
    @pulumi.getter(name="peerRegion")
    def peer_region(self) -> builtins.str:
        """
        The region of the peer DR protection group associated with this plan's DR protection group.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "peer_region")

    @property
    @pulumi.getter(name="planExecutionType")
    def plan_execution_type(self) -> builtins.str:
        """
        The type of the DR plan executed.
        """
        return pulumi.get(self, "plan_execution_type")

    @property
    @pulumi.getter(name="planId")
    def plan_id(self) -> builtins.str:
        """
        The OCID of the DR plan.  Example: `ocid1.drplan.oc1..uniqueID`
        """
        return pulumi.get(self, "plan_id")

    @property
    @pulumi.getter
    def state(self) -> builtins.str:
        """
        A filter to return only DR plan executions that match the given lifecycle state.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, builtins.str]:
        """
        Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> builtins.str:
        """
        The date and time at which DR plan execution was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeEnded")
    def time_ended(self) -> builtins.str:
        """
        The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_ended")

    @property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> builtins.str:
        """
        The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_started")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> builtins.str:
        """
        The time when DR plan execution was last updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOptionResult(dict):
    def __init__(__self__, *,
                 are_prechecks_enabled: builtins.bool,
                 are_warnings_ignored: builtins.bool,
                 plan_execution_type: builtins.str):
        """
        :param builtins.bool are_prechecks_enabled: A flag indicating whether a precheck should be executed before the plan execution.  Example: `true`
        :param builtins.bool are_warnings_ignored: A flag indicating whether warnings should be ignored during the plan execution.  Example: `false`
        :param builtins.str plan_execution_type: The type of the DR plan executed.
        """
        pulumi.set(__self__, "are_prechecks_enabled", are_prechecks_enabled)
        pulumi.set(__self__, "are_warnings_ignored", are_warnings_ignored)
        pulumi.set(__self__, "plan_execution_type", plan_execution_type)

    @property
    @pulumi.getter(name="arePrechecksEnabled")
    def are_prechecks_enabled(self) -> builtins.bool:
        """
        A flag indicating whether a precheck should be executed before the plan execution.  Example: `true`
        """
        return pulumi.get(self, "are_prechecks_enabled")

    @property
    @pulumi.getter(name="areWarningsIgnored")
    def are_warnings_ignored(self) -> builtins.bool:
        """
        A flag indicating whether warnings should be ignored during the plan execution.  Example: `false`
        """
        return pulumi.get(self, "are_warnings_ignored")

    @property
    @pulumi.getter(name="planExecutionType")
    def plan_execution_type(self) -> builtins.str:
        """
        The type of the DR plan executed.
        """
        return pulumi.get(self, "plan_execution_type")


@pulumi.output_type
class GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionResult(dict):
    def __init__(__self__, *,
                 display_name: builtins.str,
                 execution_duration_in_sec: builtins.int,
                 group_id: builtins.str,
                 status: builtins.str,
                 status_details: builtins.str,
                 step_executions: Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionResult'],
                 time_ended: builtins.str,
                 time_started: builtins.str,
                 type: builtins.str):
        """
        :param builtins.str display_name: A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        :param builtins.int execution_duration_in_sec: The total duration in seconds taken to complete the step execution.  Example: `35`
        :param builtins.str group_id: The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        :param builtins.str status: The status of the step execution.
        :param builtins.str status_details: Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        :param Sequence['GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionArgs'] step_executions: A list of step executions in the group.
        :param builtins.str time_ended: The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_started: The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str type: The group type.  Example: `BUILT_IN`
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "execution_duration_in_sec", execution_duration_in_sec)
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "status_details", status_details)
        pulumi.set(__self__, "step_executions", step_executions)
        pulumi.set(__self__, "time_ended", time_ended)
        pulumi.set(__self__, "time_started", time_started)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="executionDurationInSec")
    def execution_duration_in_sec(self) -> builtins.int:
        """
        The total duration in seconds taken to complete the step execution.  Example: `35`
        """
        return pulumi.get(self, "execution_duration_in_sec")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> builtins.str:
        """
        The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of the step execution.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusDetails")
    def status_details(self) -> builtins.str:
        """
        Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        """
        return pulumi.get(self, "status_details")

    @property
    @pulumi.getter(name="stepExecutions")
    def step_executions(self) -> Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionResult']:
        """
        A list of step executions in the group.
        """
        return pulumi.get(self, "step_executions")

    @property
    @pulumi.getter(name="timeEnded")
    def time_ended(self) -> builtins.str:
        """
        The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_ended")

    @property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> builtins.str:
        """
        The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_started")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The group type.  Example: `BUILT_IN`
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionResult(dict):
    def __init__(__self__, *,
                 display_name: builtins.str,
                 execution_duration_in_sec: builtins.int,
                 group_id: builtins.str,
                 log_locations: Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionLogLocationResult'],
                 status: builtins.str,
                 status_details: builtins.str,
                 step_id: builtins.str,
                 time_ended: builtins.str,
                 time_started: builtins.str,
                 type: builtins.str):
        """
        :param builtins.str display_name: A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        :param builtins.int execution_duration_in_sec: The total duration in seconds taken to complete the step execution.  Example: `35`
        :param builtins.str group_id: The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        :param Sequence['GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionLogLocationArgs'] log_locations: The details of an object storage log location for a DR protection group.
        :param builtins.str status: The status of the step execution.
        :param builtins.str status_details: Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        :param builtins.str step_id: The unique id of the step. Must not be modified by user.  Example: `sgid1.step..uniqueID`
        :param builtins.str time_ended: The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_started: The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str type: The group type.  Example: `BUILT_IN`
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "execution_duration_in_sec", execution_duration_in_sec)
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "log_locations", log_locations)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "status_details", status_details)
        pulumi.set(__self__, "step_id", step_id)
        pulumi.set(__self__, "time_ended", time_ended)
        pulumi.set(__self__, "time_started", time_started)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="executionDurationInSec")
    def execution_duration_in_sec(self) -> builtins.int:
        """
        The total duration in seconds taken to complete the step execution.  Example: `35`
        """
        return pulumi.get(self, "execution_duration_in_sec")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> builtins.str:
        """
        The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter(name="logLocations")
    def log_locations(self) -> Sequence['outputs.GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionLogLocationResult']:
        """
        The details of an object storage log location for a DR protection group.
        """
        return pulumi.get(self, "log_locations")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of the step execution.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusDetails")
    def status_details(self) -> builtins.str:
        """
        Additional details on the step execution status.  Example: `This step failed to complete due to a timeout`
        """
        return pulumi.get(self, "status_details")

    @property
    @pulumi.getter(name="stepId")
    def step_id(self) -> builtins.str:
        """
        The unique id of the step. Must not be modified by user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "step_id")

    @property
    @pulumi.getter(name="timeEnded")
    def time_ended(self) -> builtins.str:
        """
        The date and time at which DR plan execution succeeded, failed, was paused, or was canceled. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_ended")

    @property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> builtins.str:
        """
        The date and time at which DR plan execution began. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_started")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The group type.  Example: `BUILT_IN`
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDrPlanExecutionsDrPlanExecutionCollectionItemGroupExecutionStepExecutionLogLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `operation_logs`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `operation_logs`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrPlanExecutionsDrPlanExecutionCollectionItemLogLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `operation_logs`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `operation_logs`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrPlanExecutionsFilterResult(dict):
    def __init__(__self__, *,
                 name: builtins.str,
                 values: Sequence[builtins.str],
                 regex: Optional[builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[builtins.str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter
    def regex(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetDrPlanPlanGroupResult(dict):
    def __init__(__self__, *,
                 display_name: builtins.str,
                 id: builtins.str,
                 is_pause_enabled: builtins.bool,
                 refresh_status: builtins.str,
                 steps: Sequence['outputs.GetDrPlanPlanGroupStepResult'],
                 type: builtins.str):
        """
        :param builtins.str display_name: The display name of the group.  Example: `DATABASE_SWITCHOVER`
        :param builtins.str id: The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        :param builtins.bool is_pause_enabled: A flag indicating whether this group should be enabled for execution. This flag is only applicable to the `USER_DEFINED_PAUSE` group. The flag should be null for the remaining group types.  Example: `true`
        :param builtins.str refresh_status: The DR plan step refresh status.  Example: `STEP_ADDED`
        :param Sequence['GetDrPlanPlanGroupStepArgs'] steps: The list of steps in the group.
        :param builtins.str type: The type of the DR plan.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_pause_enabled", is_pause_enabled)
        pulumi.set(__self__, "refresh_status", refresh_status)
        pulumi.set(__self__, "steps", steps)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        The display name of the group.  Example: `DATABASE_SWITCHOVER`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isPauseEnabled")
    def is_pause_enabled(self) -> builtins.bool:
        """
        A flag indicating whether this group should be enabled for execution. This flag is only applicable to the `USER_DEFINED_PAUSE` group. The flag should be null for the remaining group types.  Example: `true`
        """
        return pulumi.get(self, "is_pause_enabled")

    @property
    @pulumi.getter(name="refreshStatus")
    def refresh_status(self) -> builtins.str:
        """
        The DR plan step refresh status.  Example: `STEP_ADDED`
        """
        return pulumi.get(self, "refresh_status")

    @property
    @pulumi.getter
    def steps(self) -> Sequence['outputs.GetDrPlanPlanGroupStepResult']:
        """
        The list of steps in the group.
        """
        return pulumi.get(self, "steps")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The type of the DR plan.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDrPlanPlanGroupStepResult(dict):
    def __init__(__self__, *,
                 display_name: builtins.str,
                 error_mode: builtins.str,
                 group_id: builtins.str,
                 id: builtins.str,
                 is_enabled: builtins.bool,
                 member_id: builtins.str,
                 refresh_status: builtins.str,
                 timeout: builtins.int,
                 type: builtins.str,
                 user_defined_steps: Sequence['outputs.GetDrPlanPlanGroupStepUserDefinedStepResult']):
        """
        :param builtins.str display_name: The display name of the group.  Example: `DATABASE_SWITCHOVER`
        :param builtins.str error_mode: The error mode for this step.
        :param builtins.str group_id: The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        :param builtins.str id: The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        :param builtins.bool is_enabled: A flag indicating whether this step should be enabled for execution.  Example: `true`
        :param builtins.str member_id: The OCID of the member associated with this step.  Example: `ocid1.database.oc1..uniqueID`
        :param builtins.str refresh_status: The DR plan step refresh status.  Example: `STEP_ADDED`
        :param builtins.int timeout: The timeout in seconds for executing this step.  Example: `600`
        :param builtins.str type: The type of the DR plan.
        :param Sequence['GetDrPlanPlanGroupStepUserDefinedStepArgs'] user_defined_steps: The details for a user-defined step in a DR plan.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "error_mode", error_mode)
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "member_id", member_id)
        pulumi.set(__self__, "refresh_status", refresh_status)
        pulumi.set(__self__, "timeout", timeout)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "user_defined_steps", user_defined_steps)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        The display name of the group.  Example: `DATABASE_SWITCHOVER`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="errorMode")
    def error_mode(self) -> builtins.str:
        """
        The error mode for this step.
        """
        return pulumi.get(self, "error_mode")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> builtins.str:
        """
        The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> builtins.bool:
        """
        A flag indicating whether this step should be enabled for execution.  Example: `true`
        """
        return pulumi.get(self, "is_enabled")

    @property
    @pulumi.getter(name="memberId")
    def member_id(self) -> builtins.str:
        """
        The OCID of the member associated with this step.  Example: `ocid1.database.oc1..uniqueID`
        """
        return pulumi.get(self, "member_id")

    @property
    @pulumi.getter(name="refreshStatus")
    def refresh_status(self) -> builtins.str:
        """
        The DR plan step refresh status.  Example: `STEP_ADDED`
        """
        return pulumi.get(self, "refresh_status")

    @property
    @pulumi.getter
    def timeout(self) -> builtins.int:
        """
        The timeout in seconds for executing this step.  Example: `600`
        """
        return pulumi.get(self, "timeout")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The type of the DR plan.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="userDefinedSteps")
    def user_defined_steps(self) -> Sequence['outputs.GetDrPlanPlanGroupStepUserDefinedStepResult']:
        """
        The details for a user-defined step in a DR plan.
        """
        return pulumi.get(self, "user_defined_steps")


@pulumi.output_type
class GetDrPlanPlanGroupStepUserDefinedStepResult(dict):
    def __init__(__self__, *,
                 function_id: builtins.str,
                 function_region: builtins.str,
                 object_storage_script_locations: Sequence['outputs.GetDrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocationResult'],
                 request_body: builtins.str,
                 run_as_user: builtins.str,
                 run_on_instance_id: builtins.str,
                 run_on_instance_region: builtins.str,
                 script_command: builtins.str,
                 step_type: builtins.str):
        """
        :param builtins.str function_id: The OCID of function to be invoked.  Example: `ocid1.fnfunc.oc1..uniqueID`
        :param builtins.str function_region: The region in which the function is deployed.  Example: `us-ashburn-1`
        :param Sequence['GetDrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocationArgs'] object_storage_script_locations: The details of an object storage script location for a user-defined step in a DR plan.
        :param builtins.str request_body: The request body for the function.  Example: `{ "FnParam1", "FnParam2" }`
        :param builtins.str run_as_user: The userid on the instance to be used for executing the script or command.  Example: `opc`
        :param builtins.str run_on_instance_id: The OCID of the instance on which this script or command should be executed.
        :param builtins.str run_on_instance_region: The region of the instance where this script or command should be executed.  Example: `us-ashburn-1`
        :param builtins.str script_command: The script name and arguments.  Example: `/usr/bin/python3 /home/opc/scripts/my_app_script.py arg1 arg2 arg3`
        :param builtins.str step_type: The type of the user-defined step.
        """
        pulumi.set(__self__, "function_id", function_id)
        pulumi.set(__self__, "function_region", function_region)
        pulumi.set(__self__, "object_storage_script_locations", object_storage_script_locations)
        pulumi.set(__self__, "request_body", request_body)
        pulumi.set(__self__, "run_as_user", run_as_user)
        pulumi.set(__self__, "run_on_instance_id", run_on_instance_id)
        pulumi.set(__self__, "run_on_instance_region", run_on_instance_region)
        pulumi.set(__self__, "script_command", script_command)
        pulumi.set(__self__, "step_type", step_type)

    @property
    @pulumi.getter(name="functionId")
    def function_id(self) -> builtins.str:
        """
        The OCID of function to be invoked.  Example: `ocid1.fnfunc.oc1..uniqueID`
        """
        return pulumi.get(self, "function_id")

    @property
    @pulumi.getter(name="functionRegion")
    def function_region(self) -> builtins.str:
        """
        The region in which the function is deployed.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "function_region")

    @property
    @pulumi.getter(name="objectStorageScriptLocations")
    def object_storage_script_locations(self) -> Sequence['outputs.GetDrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocationResult']:
        """
        The details of an object storage script location for a user-defined step in a DR plan.
        """
        return pulumi.get(self, "object_storage_script_locations")

    @property
    @pulumi.getter(name="requestBody")
    def request_body(self) -> builtins.str:
        """
        The request body for the function.  Example: `{ "FnParam1", "FnParam2" }`
        """
        return pulumi.get(self, "request_body")

    @property
    @pulumi.getter(name="runAsUser")
    def run_as_user(self) -> builtins.str:
        """
        The userid on the instance to be used for executing the script or command.  Example: `opc`
        """
        return pulumi.get(self, "run_as_user")

    @property
    @pulumi.getter(name="runOnInstanceId")
    def run_on_instance_id(self) -> builtins.str:
        """
        The OCID of the instance on which this script or command should be executed.
        """
        return pulumi.get(self, "run_on_instance_id")

    @property
    @pulumi.getter(name="runOnInstanceRegion")
    def run_on_instance_region(self) -> builtins.str:
        """
        The region of the instance where this script or command should be executed.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "run_on_instance_region")

    @property
    @pulumi.getter(name="scriptCommand")
    def script_command(self) -> builtins.str:
        """
        The script name and arguments.  Example: `/usr/bin/python3 /home/opc/scripts/my_app_script.py arg1 arg2 arg3`
        """
        return pulumi.get(self, "script_command")

    @property
    @pulumi.getter(name="stepType")
    def step_type(self) -> builtins.str:
        """
        The type of the user-defined step.
        """
        return pulumi.get(self, "step_type")


@pulumi.output_type
class GetDrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `custom_dr_scripts`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `validate_app_start.sh`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `custom_dr_scripts`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `validate_app_start.sh`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrPlansDrPlanCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDrPlansDrPlanCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDrPlansDrPlanCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDrPlansDrPlanCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: builtins.str,
                 defined_tags: Mapping[str, builtins.str],
                 display_name: builtins.str,
                 dr_protection_group_id: builtins.str,
                 freeform_tags: Mapping[str, builtins.str],
                 id: builtins.str,
                 life_cycle_details: builtins.str,
                 lifecycle_sub_state: builtins.str,
                 peer_dr_protection_group_id: builtins.str,
                 peer_region: builtins.str,
                 plan_groups: Sequence['outputs.GetDrPlansDrPlanCollectionItemPlanGroupResult'],
                 refresh_trigger: builtins.int,
                 source_plan_id: builtins.str,
                 state: builtins.str,
                 system_tags: Mapping[str, builtins.str],
                 time_created: builtins.str,
                 time_updated: builtins.str,
                 type: builtins.str,
                 verify_trigger: builtins.int):
        """
        :param builtins.str compartment_id: The OCID of the compartment containing the DR plan.  Example: `ocid1.compartment.oc1..uniqueID`
        :param Mapping[str, builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"Operations.CostCenter": "42"}`
        :param builtins.str display_name: A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        :param builtins.str dr_protection_group_id: The OCID of the DR protection group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        :param Mapping[str, builtins.str] freeform_tags: Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{"Department": "Finance"}`
        :param builtins.str id: The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        :param builtins.str life_cycle_details: A message describing the DR plan's current state in more detail.
        :param builtins.str lifecycle_sub_state: A filter to return only DR plans that match the given lifecycle sub-state.
        :param builtins.str peer_dr_protection_group_id: The OCID of the peer DR protection group associated with this plan's DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        :param builtins.str peer_region: The region of the peer DR protection group associated with this plan's DR protection group.  Example: `us-ashburn-1`
        :param Sequence['GetDrPlansDrPlanCollectionItemPlanGroupArgs'] plan_groups: The list of groups in this DR plan.
        :param builtins.str source_plan_id: If this is a cloned DR plan, the OCID of the source DR plan that was used to clone this DR plan. If this DR plan was not cloned, then the value for this will be `null`.  Example: `ocid1.drplan.oc1..uniqueID`
        :param builtins.str state: A filter to return only DR plans that match the given lifecycle state.
        :param Mapping[str, builtins.str] system_tags: Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param builtins.str time_created: The date and time the DR plan was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_updated: The date and time the DR plan was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str type: The type of the DR plan.
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "dr_protection_group_id", dr_protection_group_id)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "life_cycle_details", life_cycle_details)
        pulumi.set(__self__, "lifecycle_sub_state", lifecycle_sub_state)
        pulumi.set(__self__, "peer_dr_protection_group_id", peer_dr_protection_group_id)
        pulumi.set(__self__, "peer_region", peer_region)
        pulumi.set(__self__, "plan_groups", plan_groups)
        pulumi.set(__self__, "refresh_trigger", refresh_trigger)
        pulumi.set(__self__, "source_plan_id", source_plan_id)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "verify_trigger", verify_trigger)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> builtins.str:
        """
        The OCID of the compartment containing the DR plan.  Example: `ocid1.compartment.oc1..uniqueID`
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="drProtectionGroupId")
    def dr_protection_group_id(self) -> builtins.str:
        """
        The OCID of the DR protection group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        """
        return pulumi.get(self, "dr_protection_group_id")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, builtins.str]:
        """
        Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lifeCycleDetails")
    def life_cycle_details(self) -> builtins.str:
        """
        A message describing the DR plan's current state in more detail.
        """
        return pulumi.get(self, "life_cycle_details")

    @property
    @pulumi.getter(name="lifecycleSubState")
    def lifecycle_sub_state(self) -> builtins.str:
        """
        A filter to return only DR plans that match the given lifecycle sub-state.
        """
        return pulumi.get(self, "lifecycle_sub_state")

    @property
    @pulumi.getter(name="peerDrProtectionGroupId")
    def peer_dr_protection_group_id(self) -> builtins.str:
        """
        The OCID of the peer DR protection group associated with this plan's DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        """
        return pulumi.get(self, "peer_dr_protection_group_id")

    @property
    @pulumi.getter(name="peerRegion")
    def peer_region(self) -> builtins.str:
        """
        The region of the peer DR protection group associated with this plan's DR protection group.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "peer_region")

    @property
    @pulumi.getter(name="planGroups")
    def plan_groups(self) -> Sequence['outputs.GetDrPlansDrPlanCollectionItemPlanGroupResult']:
        """
        The list of groups in this DR plan.
        """
        return pulumi.get(self, "plan_groups")

    @property
    @pulumi.getter(name="refreshTrigger")
    def refresh_trigger(self) -> builtins.int:
        return pulumi.get(self, "refresh_trigger")

    @property
    @pulumi.getter(name="sourcePlanId")
    def source_plan_id(self) -> builtins.str:
        """
        If this is a cloned DR plan, the OCID of the source DR plan that was used to clone this DR plan. If this DR plan was not cloned, then the value for this will be `null`.  Example: `ocid1.drplan.oc1..uniqueID`
        """
        return pulumi.get(self, "source_plan_id")

    @property
    @pulumi.getter
    def state(self) -> builtins.str:
        """
        A filter to return only DR plans that match the given lifecycle state.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, builtins.str]:
        """
        Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> builtins.str:
        """
        The date and time the DR plan was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> builtins.str:
        """
        The date and time the DR plan was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_updated")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The type of the DR plan.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="verifyTrigger")
    def verify_trigger(self) -> builtins.int:
        return pulumi.get(self, "verify_trigger")


@pulumi.output_type
class GetDrPlansDrPlanCollectionItemPlanGroupResult(dict):
    def __init__(__self__, *,
                 display_name: builtins.str,
                 id: builtins.str,
                 is_pause_enabled: builtins.bool,
                 refresh_status: builtins.str,
                 steps: Sequence['outputs.GetDrPlansDrPlanCollectionItemPlanGroupStepResult'],
                 type: builtins.str):
        """
        :param builtins.str display_name: A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        :param builtins.str id: The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        :param builtins.bool is_pause_enabled: A flag indicating whether this group should be enabled for execution. This flag is only applicable to the `USER_DEFINED_PAUSE` group. The flag should be null for the remaining group types.  Example: `true`
        :param builtins.str refresh_status: The DR plan step refresh status.  Example: `STEP_ADDED`
        :param Sequence['GetDrPlansDrPlanCollectionItemPlanGroupStepArgs'] steps: The list of steps in the group.
        :param builtins.str type: The type of the DR plan.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_pause_enabled", is_pause_enabled)
        pulumi.set(__self__, "refresh_status", refresh_status)
        pulumi.set(__self__, "steps", steps)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isPauseEnabled")
    def is_pause_enabled(self) -> builtins.bool:
        """
        A flag indicating whether this group should be enabled for execution. This flag is only applicable to the `USER_DEFINED_PAUSE` group. The flag should be null for the remaining group types.  Example: `true`
        """
        return pulumi.get(self, "is_pause_enabled")

    @property
    @pulumi.getter(name="refreshStatus")
    def refresh_status(self) -> builtins.str:
        """
        The DR plan step refresh status.  Example: `STEP_ADDED`
        """
        return pulumi.get(self, "refresh_status")

    @property
    @pulumi.getter
    def steps(self) -> Sequence['outputs.GetDrPlansDrPlanCollectionItemPlanGroupStepResult']:
        """
        The list of steps in the group.
        """
        return pulumi.get(self, "steps")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The type of the DR plan.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDrPlansDrPlanCollectionItemPlanGroupStepResult(dict):
    def __init__(__self__, *,
                 display_name: builtins.str,
                 error_mode: builtins.str,
                 group_id: builtins.str,
                 id: builtins.str,
                 is_enabled: builtins.bool,
                 member_id: builtins.str,
                 refresh_status: builtins.str,
                 timeout: builtins.int,
                 type: builtins.str,
                 user_defined_steps: Sequence['outputs.GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepResult']):
        """
        :param builtins.str display_name: A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        :param builtins.str error_mode: The error mode for this step.
        :param builtins.str group_id: The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        :param builtins.str id: The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        :param builtins.bool is_enabled: A flag indicating whether this step should be enabled for execution.  Example: `true`
        :param builtins.str member_id: The OCID of the member associated with this step.  Example: `ocid1.database.oc1..uniqueID`
        :param builtins.str refresh_status: The DR plan step refresh status.  Example: `STEP_ADDED`
        :param builtins.int timeout: The timeout in seconds for executing this step.  Example: `600`
        :param builtins.str type: The type of the DR plan.
        :param Sequence['GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepArgs'] user_defined_steps: The details for a user-defined step in a DR plan.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "error_mode", error_mode)
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "member_id", member_id)
        pulumi.set(__self__, "refresh_status", refresh_status)
        pulumi.set(__self__, "timeout", timeout)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "user_defined_steps", user_defined_steps)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="errorMode")
    def error_mode(self) -> builtins.str:
        """
        The error mode for this step.
        """
        return pulumi.get(self, "error_mode")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> builtins.str:
        """
        The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> builtins.bool:
        """
        A flag indicating whether this step should be enabled for execution.  Example: `true`
        """
        return pulumi.get(self, "is_enabled")

    @property
    @pulumi.getter(name="memberId")
    def member_id(self) -> builtins.str:
        """
        The OCID of the member associated with this step.  Example: `ocid1.database.oc1..uniqueID`
        """
        return pulumi.get(self, "member_id")

    @property
    @pulumi.getter(name="refreshStatus")
    def refresh_status(self) -> builtins.str:
        """
        The DR plan step refresh status.  Example: `STEP_ADDED`
        """
        return pulumi.get(self, "refresh_status")

    @property
    @pulumi.getter
    def timeout(self) -> builtins.int:
        """
        The timeout in seconds for executing this step.  Example: `600`
        """
        return pulumi.get(self, "timeout")

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        The type of the DR plan.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="userDefinedSteps")
    def user_defined_steps(self) -> Sequence['outputs.GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepResult']:
        """
        The details for a user-defined step in a DR plan.
        """
        return pulumi.get(self, "user_defined_steps")


@pulumi.output_type
class GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepResult(dict):
    def __init__(__self__, *,
                 function_id: builtins.str,
                 function_region: builtins.str,
                 object_storage_script_locations: Sequence['outputs.GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepObjectStorageScriptLocationResult'],
                 request_body: builtins.str,
                 run_as_user: builtins.str,
                 run_on_instance_id: builtins.str,
                 run_on_instance_region: builtins.str,
                 script_command: builtins.str,
                 step_type: builtins.str):
        """
        :param builtins.str function_id: The OCID of function to be invoked.  Example: `ocid1.fnfunc.oc1..uniqueID`
        :param builtins.str function_region: The region in which the function is deployed.  Example: `us-ashburn-1`
        :param Sequence['GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepObjectStorageScriptLocationArgs'] object_storage_script_locations: The details of an object storage script location for a user-defined step in a DR plan.
        :param builtins.str request_body: The request body for the function.  Example: `{ "FnParam1", "FnParam2" }`
        :param builtins.str run_as_user: The userid on the instance to be used for executing the script or command.  Example: `opc`
        :param builtins.str run_on_instance_id: The OCID of the instance on which this script or command should be executed.
        :param builtins.str run_on_instance_region: The region of the instance where this script or command should be executed.  Example: `us-ashburn-1`
        :param builtins.str script_command: The script name and arguments.  Example: `/usr/bin/python3 /home/opc/scripts/my_app_script.py arg1 arg2 arg3`
        :param builtins.str step_type: The type of the user-defined step.
        """
        pulumi.set(__self__, "function_id", function_id)
        pulumi.set(__self__, "function_region", function_region)
        pulumi.set(__self__, "object_storage_script_locations", object_storage_script_locations)
        pulumi.set(__self__, "request_body", request_body)
        pulumi.set(__self__, "run_as_user", run_as_user)
        pulumi.set(__self__, "run_on_instance_id", run_on_instance_id)
        pulumi.set(__self__, "run_on_instance_region", run_on_instance_region)
        pulumi.set(__self__, "script_command", script_command)
        pulumi.set(__self__, "step_type", step_type)

    @property
    @pulumi.getter(name="functionId")
    def function_id(self) -> builtins.str:
        """
        The OCID of function to be invoked.  Example: `ocid1.fnfunc.oc1..uniqueID`
        """
        return pulumi.get(self, "function_id")

    @property
    @pulumi.getter(name="functionRegion")
    def function_region(self) -> builtins.str:
        """
        The region in which the function is deployed.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "function_region")

    @property
    @pulumi.getter(name="objectStorageScriptLocations")
    def object_storage_script_locations(self) -> Sequence['outputs.GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepObjectStorageScriptLocationResult']:
        """
        The details of an object storage script location for a user-defined step in a DR plan.
        """
        return pulumi.get(self, "object_storage_script_locations")

    @property
    @pulumi.getter(name="requestBody")
    def request_body(self) -> builtins.str:
        """
        The request body for the function.  Example: `{ "FnParam1", "FnParam2" }`
        """
        return pulumi.get(self, "request_body")

    @property
    @pulumi.getter(name="runAsUser")
    def run_as_user(self) -> builtins.str:
        """
        The userid on the instance to be used for executing the script or command.  Example: `opc`
        """
        return pulumi.get(self, "run_as_user")

    @property
    @pulumi.getter(name="runOnInstanceId")
    def run_on_instance_id(self) -> builtins.str:
        """
        The OCID of the instance on which this script or command should be executed.
        """
        return pulumi.get(self, "run_on_instance_id")

    @property
    @pulumi.getter(name="runOnInstanceRegion")
    def run_on_instance_region(self) -> builtins.str:
        """
        The region of the instance where this script or command should be executed.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "run_on_instance_region")

    @property
    @pulumi.getter(name="scriptCommand")
    def script_command(self) -> builtins.str:
        """
        The script name and arguments.  Example: `/usr/bin/python3 /home/opc/scripts/my_app_script.py arg1 arg2 arg3`
        """
        return pulumi.get(self, "script_command")

    @property
    @pulumi.getter(name="stepType")
    def step_type(self) -> builtins.str:
        """
        The type of the user-defined step.
        """
        return pulumi.get(self, "step_type")


@pulumi.output_type
class GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStepObjectStorageScriptLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `custom_dr_scripts`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `validate_app_start.sh`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `custom_dr_scripts`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `validate_app_start.sh`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrPlansFilterResult(dict):
    def __init__(__self__, *,
                 name: builtins.str,
                 values: Sequence[builtins.str],
                 regex: Optional[builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[builtins.str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter
    def regex(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetDrProtectionGroupAssociationResult(dict):
    def __init__(__self__, *,
                 peer_id: builtins.str,
                 peer_region: builtins.str,
                 role: builtins.str):
        """
        :param builtins.str peer_id: The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        :param builtins.str peer_region: The region of the peer DR protection group.  Example: `us-ashburn-1`
        :param builtins.str role: The role of the DR protection group.
        """
        pulumi.set(__self__, "peer_id", peer_id)
        pulumi.set(__self__, "peer_region", peer_region)
        pulumi.set(__self__, "role", role)

    @property
    @pulumi.getter(name="peerId")
    def peer_id(self) -> builtins.str:
        """
        The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        """
        return pulumi.get(self, "peer_id")

    @property
    @pulumi.getter(name="peerRegion")
    def peer_region(self) -> builtins.str:
        """
        The region of the peer DR protection group.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "peer_region")

    @property
    @pulumi.getter
    def role(self) -> builtins.str:
        """
        The role of the DR protection group.
        """
        return pulumi.get(self, "role")


@pulumi.output_type
class GetDrProtectionGroupLogLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `bucket_name`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `bucket_name`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrProtectionGroupMemberResult(dict):
    def __init__(__self__, *,
                 autonomous_database_standby_type_for_dr_drills: builtins.str,
                 backend_set_mappings: Sequence['outputs.GetDrProtectionGroupMemberBackendSetMappingResult'],
                 backup_configs: Sequence['outputs.GetDrProtectionGroupMemberBackupConfigResult'],
                 backup_locations: Sequence['outputs.GetDrProtectionGroupMemberBackupLocationResult'],
                 block_volume_operations: Sequence['outputs.GetDrProtectionGroupMemberBlockVolumeOperationResult'],
                 bucket: builtins.str,
                 connection_string_type: builtins.str,
                 destination_availability_domain: builtins.str,
                 destination_capacity_reservation_id: builtins.str,
                 destination_compartment_id: builtins.str,
                 destination_dedicated_vm_host_id: builtins.str,
                 destination_load_balancer_id: builtins.str,
                 destination_network_load_balancer_id: builtins.str,
                 export_mappings: Sequence['outputs.GetDrProtectionGroupMemberExportMappingResult'],
                 file_system_operations: Sequence['outputs.GetDrProtectionGroupMemberFileSystemOperationResult'],
                 is_movable: builtins.bool,
                 is_retain_fault_domain: builtins.bool,
                 is_start_stop_enabled: builtins.bool,
                 jump_host_id: builtins.str,
                 load_balancer_mappings: Sequence['outputs.GetDrProtectionGroupMemberLoadBalancerMappingResult'],
                 managed_node_pool_configs: Sequence['outputs.GetDrProtectionGroupMemberManagedNodePoolConfigResult'],
                 member_id: builtins.str,
                 member_type: builtins.str,
                 namespace: builtins.str,
                 network_load_balancer_mappings: Sequence['outputs.GetDrProtectionGroupMemberNetworkLoadBalancerMappingResult'],
                 password_vault_secret_id: builtins.str,
                 peer_cluster_id: builtins.str,
                 vault_mappings: Sequence['outputs.GetDrProtectionGroupMemberVaultMappingResult'],
                 virtual_node_pool_configs: Sequence['outputs.GetDrProtectionGroupMemberVirtualNodePoolConfigResult'],
                 vnic_mapping: Sequence['outputs.GetDrProtectionGroupMemberVnicMappingResult'],
                 vnic_mappings: Sequence['outputs.GetDrProtectionGroupMemberVnicMappingResult']):
        """
        :param builtins.str autonomous_database_standby_type_for_dr_drills: This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html for information about these clone types. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html for information about snapshot standby.
        :param Sequence['GetDrProtectionGroupMemberBackendSetMappingArgs'] backend_set_mappings: A list of backend set mappings that are used to transfer or update backends during DR.
        :param Sequence['GetDrProtectionGroupMemberBackupConfigArgs'] backup_configs: The details of backup performed on OKE Cluster.
        :param Sequence['GetDrProtectionGroupMemberBackupLocationArgs'] backup_locations: The details for object storage backup location of an OKE Cluster
        :param Sequence['GetDrProtectionGroupMemberBlockVolumeOperationArgs'] block_volume_operations: Operations performed on a list of block volumes used on the non-movable compute instance.
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `bucket_name`
        :param builtins.str connection_string_type: The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html for information about these service types.
        :param builtins.str destination_availability_domain: The availability domain of the destination mount target. Example: `BBTh:region-AD`
        :param builtins.str destination_capacity_reservation_id: The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
        :param builtins.str destination_compartment_id: The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
        :param builtins.str destination_dedicated_vm_host_id: The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
        :param builtins.str destination_load_balancer_id: The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        :param builtins.str destination_network_load_balancer_id: The OCID of the destination Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        :param Sequence['GetDrProtectionGroupMemberExportMappingArgs'] export_mappings: A list of mappings between the primary region file system export and destination region mount target.
        :param Sequence['GetDrProtectionGroupMemberFileSystemOperationArgs'] file_system_operations: Operations performed on a list of file systems used on the non-movable compute instance.
        :param builtins.bool is_movable: A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
        :param builtins.bool is_retain_fault_domain: A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
        :param builtins.bool is_start_stop_enabled: A flag indicating whether the non-movable compute instance needs to be started and stopped during DR operations.
        :param builtins.str jump_host_id: The OCID of the compute instance member that is designated as a jump host. This compute instance will be used to perform DR operations on the cluster using Oracle Cloud Agent's Run Command feature.  Example: `ocid1.instance.oc1..uniqueID`
        :param Sequence['GetDrProtectionGroupMemberLoadBalancerMappingArgs'] load_balancer_mappings: The list of source-to-destination load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        :param Sequence['GetDrProtectionGroupMemberManagedNodePoolConfigArgs'] managed_node_pool_configs: The list of node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        :param builtins.str member_id: The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
        :param builtins.str member_type: The type of the member.
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param Sequence['GetDrProtectionGroupMemberNetworkLoadBalancerMappingArgs'] network_load_balancer_mappings: The list of source-to-destination network load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        :param builtins.str password_vault_secret_id: The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
        :param builtins.str peer_cluster_id: The OCID of the peer OKE cluster. This property applies to the OKE cluster member in both the primary and standby region.  Example: `ocid1.cluster.oc1.uniqueID`
        :param Sequence['GetDrProtectionGroupMemberVaultMappingArgs'] vault_mappings: The list of source-to-destination vault mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        :param Sequence['GetDrProtectionGroupMemberVirtualNodePoolConfigArgs'] virtual_node_pool_configs: The list of node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        :param Sequence['GetDrProtectionGroupMemberVnicMappingArgs'] vnic_mapping: A list of compute instance VNIC mappings.
        :param Sequence['GetDrProtectionGroupMemberVnicMappingArgs'] vnic_mappings: A list of compute instance VNIC mappings.
        """
        pulumi.set(__self__, "autonomous_database_standby_type_for_dr_drills", autonomous_database_standby_type_for_dr_drills)
        pulumi.set(__self__, "backend_set_mappings", backend_set_mappings)
        pulumi.set(__self__, "backup_configs", backup_configs)
        pulumi.set(__self__, "backup_locations", backup_locations)
        pulumi.set(__self__, "block_volume_operations", block_volume_operations)
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "connection_string_type", connection_string_type)
        pulumi.set(__self__, "destination_availability_domain", destination_availability_domain)
        pulumi.set(__self__, "destination_capacity_reservation_id", destination_capacity_reservation_id)
        pulumi.set(__self__, "destination_compartment_id", destination_compartment_id)
        pulumi.set(__self__, "destination_dedicated_vm_host_id", destination_dedicated_vm_host_id)
        pulumi.set(__self__, "destination_load_balancer_id", destination_load_balancer_id)
        pulumi.set(__self__, "destination_network_load_balancer_id", destination_network_load_balancer_id)
        pulumi.set(__self__, "export_mappings", export_mappings)
        pulumi.set(__self__, "file_system_operations", file_system_operations)
        pulumi.set(__self__, "is_movable", is_movable)
        pulumi.set(__self__, "is_retain_fault_domain", is_retain_fault_domain)
        pulumi.set(__self__, "is_start_stop_enabled", is_start_stop_enabled)
        pulumi.set(__self__, "jump_host_id", jump_host_id)
        pulumi.set(__self__, "load_balancer_mappings", load_balancer_mappings)
        pulumi.set(__self__, "managed_node_pool_configs", managed_node_pool_configs)
        pulumi.set(__self__, "member_id", member_id)
        pulumi.set(__self__, "member_type", member_type)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "network_load_balancer_mappings", network_load_balancer_mappings)
        pulumi.set(__self__, "password_vault_secret_id", password_vault_secret_id)
        pulumi.set(__self__, "peer_cluster_id", peer_cluster_id)
        pulumi.set(__self__, "vault_mappings", vault_mappings)
        pulumi.set(__self__, "virtual_node_pool_configs", virtual_node_pool_configs)
        pulumi.set(__self__, "vnic_mapping", vnic_mapping)
        pulumi.set(__self__, "vnic_mappings", vnic_mappings)

    @property
    @pulumi.getter(name="autonomousDatabaseStandbyTypeForDrDrills")
    def autonomous_database_standby_type_for_dr_drills(self) -> builtins.str:
        """
        This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html for information about these clone types. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html for information about snapshot standby.
        """
        return pulumi.get(self, "autonomous_database_standby_type_for_dr_drills")

    @property
    @pulumi.getter(name="backendSetMappings")
    def backend_set_mappings(self) -> Sequence['outputs.GetDrProtectionGroupMemberBackendSetMappingResult']:
        """
        A list of backend set mappings that are used to transfer or update backends during DR.
        """
        return pulumi.get(self, "backend_set_mappings")

    @property
    @pulumi.getter(name="backupConfigs")
    def backup_configs(self) -> Sequence['outputs.GetDrProtectionGroupMemberBackupConfigResult']:
        """
        The details of backup performed on OKE Cluster.
        """
        return pulumi.get(self, "backup_configs")

    @property
    @pulumi.getter(name="backupLocations")
    def backup_locations(self) -> Sequence['outputs.GetDrProtectionGroupMemberBackupLocationResult']:
        """
        The details for object storage backup location of an OKE Cluster
        """
        return pulumi.get(self, "backup_locations")

    @property
    @pulumi.getter(name="blockVolumeOperations")
    def block_volume_operations(self) -> Sequence['outputs.GetDrProtectionGroupMemberBlockVolumeOperationResult']:
        """
        Operations performed on a list of block volumes used on the non-movable compute instance.
        """
        return pulumi.get(self, "block_volume_operations")

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `bucket_name`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter(name="connectionStringType")
    def connection_string_type(self) -> builtins.str:
        """
        The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html for information about these service types.
        """
        return pulumi.get(self, "connection_string_type")

    @property
    @pulumi.getter(name="destinationAvailabilityDomain")
    def destination_availability_domain(self) -> builtins.str:
        """
        The availability domain of the destination mount target. Example: `BBTh:region-AD`
        """
        return pulumi.get(self, "destination_availability_domain")

    @property
    @pulumi.getter(name="destinationCapacityReservationId")
    def destination_capacity_reservation_id(self) -> builtins.str:
        """
        The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_capacity_reservation_id")

    @property
    @pulumi.getter(name="destinationCompartmentId")
    def destination_compartment_id(self) -> builtins.str:
        """
        The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_compartment_id")

    @property
    @pulumi.getter(name="destinationDedicatedVmHostId")
    def destination_dedicated_vm_host_id(self) -> builtins.str:
        """
        The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_dedicated_vm_host_id")

    @property
    @pulumi.getter(name="destinationLoadBalancerId")
    def destination_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_load_balancer_id")

    @property
    @pulumi.getter(name="destinationNetworkLoadBalancerId")
    def destination_network_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the destination Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_network_load_balancer_id")

    @property
    @pulumi.getter(name="exportMappings")
    def export_mappings(self) -> Sequence['outputs.GetDrProtectionGroupMemberExportMappingResult']:
        """
        A list of mappings between the primary region file system export and destination region mount target.
        """
        return pulumi.get(self, "export_mappings")

    @property
    @pulumi.getter(name="fileSystemOperations")
    def file_system_operations(self) -> Sequence['outputs.GetDrProtectionGroupMemberFileSystemOperationResult']:
        """
        Operations performed on a list of file systems used on the non-movable compute instance.
        """
        return pulumi.get(self, "file_system_operations")

    @property
    @pulumi.getter(name="isMovable")
    def is_movable(self) -> builtins.bool:
        """
        A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
        """
        return pulumi.get(self, "is_movable")

    @property
    @pulumi.getter(name="isRetainFaultDomain")
    def is_retain_fault_domain(self) -> builtins.bool:
        """
        A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
        """
        return pulumi.get(self, "is_retain_fault_domain")

    @property
    @pulumi.getter(name="isStartStopEnabled")
    def is_start_stop_enabled(self) -> builtins.bool:
        """
        A flag indicating whether the non-movable compute instance needs to be started and stopped during DR operations.
        """
        return pulumi.get(self, "is_start_stop_enabled")

    @property
    @pulumi.getter(name="jumpHostId")
    def jump_host_id(self) -> builtins.str:
        """
        The OCID of the compute instance member that is designated as a jump host. This compute instance will be used to perform DR operations on the cluster using Oracle Cloud Agent's Run Command feature.  Example: `ocid1.instance.oc1..uniqueID`
        """
        return pulumi.get(self, "jump_host_id")

    @property
    @pulumi.getter(name="loadBalancerMappings")
    def load_balancer_mappings(self) -> Sequence['outputs.GetDrProtectionGroupMemberLoadBalancerMappingResult']:
        """
        The list of source-to-destination load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "load_balancer_mappings")

    @property
    @pulumi.getter(name="managedNodePoolConfigs")
    def managed_node_pool_configs(self) -> Sequence['outputs.GetDrProtectionGroupMemberManagedNodePoolConfigResult']:
        """
        The list of node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        """
        return pulumi.get(self, "managed_node_pool_configs")

    @property
    @pulumi.getter(name="memberId")
    def member_id(self) -> builtins.str:
        """
        The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
        """
        return pulumi.get(self, "member_id")

    @property
    @pulumi.getter(name="memberType")
    def member_type(self) -> builtins.str:
        """
        The type of the member.
        """
        return pulumi.get(self, "member_type")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter(name="networkLoadBalancerMappings")
    def network_load_balancer_mappings(self) -> Sequence['outputs.GetDrProtectionGroupMemberNetworkLoadBalancerMappingResult']:
        """
        The list of source-to-destination network load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "network_load_balancer_mappings")

    @property
    @pulumi.getter(name="passwordVaultSecretId")
    def password_vault_secret_id(self) -> builtins.str:
        """
        The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
        """
        return pulumi.get(self, "password_vault_secret_id")

    @property
    @pulumi.getter(name="peerClusterId")
    def peer_cluster_id(self) -> builtins.str:
        """
        The OCID of the peer OKE cluster. This property applies to the OKE cluster member in both the primary and standby region.  Example: `ocid1.cluster.oc1.uniqueID`
        """
        return pulumi.get(self, "peer_cluster_id")

    @property
    @pulumi.getter(name="vaultMappings")
    def vault_mappings(self) -> Sequence['outputs.GetDrProtectionGroupMemberVaultMappingResult']:
        """
        The list of source-to-destination vault mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "vault_mappings")

    @property
    @pulumi.getter(name="virtualNodePoolConfigs")
    def virtual_node_pool_configs(self) -> Sequence['outputs.GetDrProtectionGroupMemberVirtualNodePoolConfigResult']:
        """
        The list of node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        """
        return pulumi.get(self, "virtual_node_pool_configs")

    @property
    @pulumi.getter(name="vnicMapping")
    def vnic_mapping(self) -> Sequence['outputs.GetDrProtectionGroupMemberVnicMappingResult']:
        """
        A list of compute instance VNIC mappings.
        """
        return pulumi.get(self, "vnic_mapping")

    @property
    @pulumi.getter(name="vnicMappings")
    def vnic_mappings(self) -> Sequence['outputs.GetDrProtectionGroupMemberVnicMappingResult']:
        """
        A list of compute instance VNIC mappings.
        """
        return pulumi.get(self, "vnic_mappings")


@pulumi.output_type
class GetDrProtectionGroupMemberBackendSetMappingResult(dict):
    def __init__(__self__, *,
                 destination_backend_set_name: builtins.str,
                 is_backend_set_for_non_movable: builtins.bool,
                 source_backend_set_name: builtins.str):
        """
        :param builtins.str destination_backend_set_name: The name of the destination backend set.  Example: `My_Destination_Backend_Set`
        :param builtins.bool is_backend_set_for_non_movable: This flag specifies if this backend set is used for traffic for non-movable compute instances. Backend sets that point to non-movable instances are only enabled or disabled during DR. For non-movable instances this flag should be set to 'true'. Backend sets that point to movable instances are emptied and their contents are transferred to the destination region network load balancer.  For movable instances this flag should be set to 'false'.   Example: `true`
        :param builtins.str source_backend_set_name: The name of the source backend set.  Example: `My_Source_Backend_Set`
        """
        pulumi.set(__self__, "destination_backend_set_name", destination_backend_set_name)
        pulumi.set(__self__, "is_backend_set_for_non_movable", is_backend_set_for_non_movable)
        pulumi.set(__self__, "source_backend_set_name", source_backend_set_name)

    @property
    @pulumi.getter(name="destinationBackendSetName")
    def destination_backend_set_name(self) -> builtins.str:
        """
        The name of the destination backend set.  Example: `My_Destination_Backend_Set`
        """
        return pulumi.get(self, "destination_backend_set_name")

    @property
    @pulumi.getter(name="isBackendSetForNonMovable")
    def is_backend_set_for_non_movable(self) -> builtins.bool:
        """
        This flag specifies if this backend set is used for traffic for non-movable compute instances. Backend sets that point to non-movable instances are only enabled or disabled during DR. For non-movable instances this flag should be set to 'true'. Backend sets that point to movable instances are emptied and their contents are transferred to the destination region network load balancer.  For movable instances this flag should be set to 'false'.   Example: `true`
        """
        return pulumi.get(self, "is_backend_set_for_non_movable")

    @property
    @pulumi.getter(name="sourceBackendSetName")
    def source_backend_set_name(self) -> builtins.str:
        """
        The name of the source backend set.  Example: `My_Source_Backend_Set`
        """
        return pulumi.get(self, "source_backend_set_name")


@pulumi.output_type
class GetDrProtectionGroupMemberBackupConfigResult(dict):
    def __init__(__self__, *,
                 backup_schedule: builtins.str,
                 image_replication_vault_secret_id: builtins.str,
                 max_number_of_backups_retained: builtins.int,
                 namespaces: Sequence[builtins.str],
                 replicate_images: builtins.str):
        """
        :param builtins.str backup_schedule: The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created. This format of the string specifying the backup schedule must conform with RFC-5545. This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.  Example: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1
        :param builtins.str image_replication_vault_secret_id: The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
        :param builtins.int max_number_of_backups_retained: The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
        :param Sequence[builtins.str] namespaces: A list of namespaces that need to be backed up.  The default value is null. If a list of namespaces is not provided, all namespaces will be backed up. This property applies to the OKE cluster member in primary region.  Example: ["default", "pv-nginx"]
        :param builtins.str replicate_images: Controls the behaviour of image replication across regions. This property applies to the OKE cluster member in primary region.
        """
        pulumi.set(__self__, "backup_schedule", backup_schedule)
        pulumi.set(__self__, "image_replication_vault_secret_id", image_replication_vault_secret_id)
        pulumi.set(__self__, "max_number_of_backups_retained", max_number_of_backups_retained)
        pulumi.set(__self__, "namespaces", namespaces)
        pulumi.set(__self__, "replicate_images", replicate_images)

    @property
    @pulumi.getter(name="backupSchedule")
    def backup_schedule(self) -> builtins.str:
        """
        The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created. This format of the string specifying the backup schedule must conform with RFC-5545. This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.  Example: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1
        """
        return pulumi.get(self, "backup_schedule")

    @property
    @pulumi.getter(name="imageReplicationVaultSecretId")
    def image_replication_vault_secret_id(self) -> builtins.str:
        """
        The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
        """
        return pulumi.get(self, "image_replication_vault_secret_id")

    @property
    @pulumi.getter(name="maxNumberOfBackupsRetained")
    def max_number_of_backups_retained(self) -> builtins.int:
        """
        The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "max_number_of_backups_retained")

    @property
    @pulumi.getter
    def namespaces(self) -> Sequence[builtins.str]:
        """
        A list of namespaces that need to be backed up.  The default value is null. If a list of namespaces is not provided, all namespaces will be backed up. This property applies to the OKE cluster member in primary region.  Example: ["default", "pv-nginx"]
        """
        return pulumi.get(self, "namespaces")

    @property
    @pulumi.getter(name="replicateImages")
    def replicate_images(self) -> builtins.str:
        """
        Controls the behaviour of image replication across regions. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "replicate_images")


@pulumi.output_type
class GetDrProtectionGroupMemberBackupLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `bucket_name`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `bucket_name`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrProtectionGroupMemberBlockVolumeOperationResult(dict):
    def __init__(__self__, *,
                 attachment_details: Sequence['outputs.GetDrProtectionGroupMemberBlockVolumeOperationAttachmentDetailResult'],
                 block_volume_id: builtins.str,
                 mount_details: Sequence['outputs.GetDrProtectionGroupMemberBlockVolumeOperationMountDetailResult']):
        """
        :param Sequence['GetDrProtectionGroupMemberBlockVolumeOperationAttachmentDetailArgs'] attachment_details: The details for attaching or detaching a block volume.
        :param builtins.str block_volume_id: The OCID of the block volume.  Example: `ocid1.volume.oc1..uniqueID`
        :param Sequence['GetDrProtectionGroupMemberBlockVolumeOperationMountDetailArgs'] mount_details: Mount details of a file system.
        """
        pulumi.set(__self__, "attachment_details", attachment_details)
        pulumi.set(__self__, "block_volume_id", block_volume_id)
        pulumi.set(__self__, "mount_details", mount_details)

    @property
    @pulumi.getter(name="attachmentDetails")
    def attachment_details(self) -> Sequence['outputs.GetDrProtectionGroupMemberBlockVolumeOperationAttachmentDetailResult']:
        """
        The details for attaching or detaching a block volume.
        """
        return pulumi.get(self, "attachment_details")

    @property
    @pulumi.getter(name="blockVolumeId")
    def block_volume_id(self) -> builtins.str:
        """
        The OCID of the block volume.  Example: `ocid1.volume.oc1..uniqueID`
        """
        return pulumi.get(self, "block_volume_id")

    @property
    @pulumi.getter(name="mountDetails")
    def mount_details(self) -> Sequence['outputs.GetDrProtectionGroupMemberBlockVolumeOperationMountDetailResult']:
        """
        Mount details of a file system.
        """
        return pulumi.get(self, "mount_details")


@pulumi.output_type
class GetDrProtectionGroupMemberBlockVolumeOperationAttachmentDetailResult(dict):
    def __init__(__self__, *,
                 volume_attachment_reference_instance_id: builtins.str):
        """
        :param builtins.str volume_attachment_reference_instance_id: The OCID of the reference compute instance from which to obtain the attachment details for the volume. This reference compute instance is from the peer DR protection group.  Example: `ocid1.instance.oc1..uniqueID`
        """
        pulumi.set(__self__, "volume_attachment_reference_instance_id", volume_attachment_reference_instance_id)

    @property
    @pulumi.getter(name="volumeAttachmentReferenceInstanceId")
    def volume_attachment_reference_instance_id(self) -> builtins.str:
        """
        The OCID of the reference compute instance from which to obtain the attachment details for the volume. This reference compute instance is from the peer DR protection group.  Example: `ocid1.instance.oc1..uniqueID`
        """
        return pulumi.get(self, "volume_attachment_reference_instance_id")


@pulumi.output_type
class GetDrProtectionGroupMemberBlockVolumeOperationMountDetailResult(dict):
    def __init__(__self__, *,
                 mount_point: builtins.str):
        """
        :param builtins.str mount_point: The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        """
        pulumi.set(__self__, "mount_point", mount_point)

    @property
    @pulumi.getter(name="mountPoint")
    def mount_point(self) -> builtins.str:
        """
        The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        """
        return pulumi.get(self, "mount_point")


@pulumi.output_type
class GetDrProtectionGroupMemberExportMappingResult(dict):
    def __init__(__self__, *,
                 destination_mount_target_id: builtins.str,
                 export_id: builtins.str):
        """
        :param builtins.str destination_mount_target_id: The OCID of the destination mount target on which this file system export should be created.  Example: `ocid1.mounttarget.oc1..uniqueID`
        :param builtins.str export_id: The OCID of the export path.  Example: `ocid1.export.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_mount_target_id", destination_mount_target_id)
        pulumi.set(__self__, "export_id", export_id)

    @property
    @pulumi.getter(name="destinationMountTargetId")
    def destination_mount_target_id(self) -> builtins.str:
        """
        The OCID of the destination mount target on which this file system export should be created.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_mount_target_id")

    @property
    @pulumi.getter(name="exportId")
    def export_id(self) -> builtins.str:
        """
        The OCID of the export path.  Example: `ocid1.export.oc1..uniqueID`
        """
        return pulumi.get(self, "export_id")


@pulumi.output_type
class GetDrProtectionGroupMemberFileSystemOperationResult(dict):
    def __init__(__self__, *,
                 export_path: builtins.str,
                 mount_details: Sequence['outputs.GetDrProtectionGroupMemberFileSystemOperationMountDetailResult'],
                 mount_point: builtins.str,
                 mount_target_id: builtins.str,
                 unmount_details: Sequence['outputs.GetDrProtectionGroupMemberFileSystemOperationUnmountDetailResult']):
        """
        :param builtins.str export_path: The export path of the file system.  Example: `/fs-export-path`
        :param Sequence['GetDrProtectionGroupMemberFileSystemOperationMountDetailArgs'] mount_details: Mount details of a file system.
        :param builtins.str mount_point: The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        :param builtins.str mount_target_id: The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        :param Sequence['GetDrProtectionGroupMemberFileSystemOperationUnmountDetailArgs'] unmount_details: Unmount details for a file system.
        """
        pulumi.set(__self__, "export_path", export_path)
        pulumi.set(__self__, "mount_details", mount_details)
        pulumi.set(__self__, "mount_point", mount_point)
        pulumi.set(__self__, "mount_target_id", mount_target_id)
        pulumi.set(__self__, "unmount_details", unmount_details)

    @property
    @pulumi.getter(name="exportPath")
    def export_path(self) -> builtins.str:
        """
        The export path of the file system.  Example: `/fs-export-path`
        """
        return pulumi.get(self, "export_path")

    @property
    @pulumi.getter(name="mountDetails")
    def mount_details(self) -> Sequence['outputs.GetDrProtectionGroupMemberFileSystemOperationMountDetailResult']:
        """
        Mount details of a file system.
        """
        return pulumi.get(self, "mount_details")

    @property
    @pulumi.getter(name="mountPoint")
    def mount_point(self) -> builtins.str:
        """
        The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        """
        return pulumi.get(self, "mount_point")

    @property
    @pulumi.getter(name="mountTargetId")
    def mount_target_id(self) -> builtins.str:
        """
        The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "mount_target_id")

    @property
    @pulumi.getter(name="unmountDetails")
    def unmount_details(self) -> Sequence['outputs.GetDrProtectionGroupMemberFileSystemOperationUnmountDetailResult']:
        """
        Unmount details for a file system.
        """
        return pulumi.get(self, "unmount_details")


@pulumi.output_type
class GetDrProtectionGroupMemberFileSystemOperationMountDetailResult(dict):
    def __init__(__self__, *,
                 mount_target_id: builtins.str):
        """
        :param builtins.str mount_target_id: The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        pulumi.set(__self__, "mount_target_id", mount_target_id)

    @property
    @pulumi.getter(name="mountTargetId")
    def mount_target_id(self) -> builtins.str:
        """
        The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "mount_target_id")


@pulumi.output_type
class GetDrProtectionGroupMemberFileSystemOperationUnmountDetailResult(dict):
    def __init__(__self__, *,
                 mount_target_id: builtins.str):
        """
        :param builtins.str mount_target_id: The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        pulumi.set(__self__, "mount_target_id", mount_target_id)

    @property
    @pulumi.getter(name="mountTargetId")
    def mount_target_id(self) -> builtins.str:
        """
        The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "mount_target_id")


@pulumi.output_type
class GetDrProtectionGroupMemberLoadBalancerMappingResult(dict):
    def __init__(__self__, *,
                 destination_load_balancer_id: builtins.str,
                 source_load_balancer_id: builtins.str):
        """
        :param builtins.str destination_load_balancer_id: The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        :param builtins.str source_load_balancer_id: The OCID of the source Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_load_balancer_id", destination_load_balancer_id)
        pulumi.set(__self__, "source_load_balancer_id", source_load_balancer_id)

    @property
    @pulumi.getter(name="destinationLoadBalancerId")
    def destination_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_load_balancer_id")

    @property
    @pulumi.getter(name="sourceLoadBalancerId")
    def source_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the source Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "source_load_balancer_id")


@pulumi.output_type
class GetDrProtectionGroupMemberManagedNodePoolConfigResult(dict):
    def __init__(__self__, *,
                 id: builtins.str,
                 maximum: builtins.int,
                 minimum: builtins.int):
        """
        :param builtins.str id: The OCID of the virtual node pool in OKE cluster.
        :param builtins.int maximum: The maximum number to which nodes in the virtual node pool could be scaled up.
        :param builtins.int minimum: The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "maximum", maximum)
        pulumi.set(__self__, "minimum", minimum)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The OCID of the virtual node pool in OKE cluster.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def maximum(self) -> builtins.int:
        """
        The maximum number to which nodes in the virtual node pool could be scaled up.
        """
        return pulumi.get(self, "maximum")

    @property
    @pulumi.getter
    def minimum(self) -> builtins.int:
        """
        The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        return pulumi.get(self, "minimum")


@pulumi.output_type
class GetDrProtectionGroupMemberNetworkLoadBalancerMappingResult(dict):
    def __init__(__self__, *,
                 destination_network_load_balancer_id: builtins.str,
                 source_network_load_balancer_id: builtins.str):
        """
        :param builtins.str destination_network_load_balancer_id: The OCID of the destination Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        :param builtins.str source_network_load_balancer_id: The OCID of the source Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_network_load_balancer_id", destination_network_load_balancer_id)
        pulumi.set(__self__, "source_network_load_balancer_id", source_network_load_balancer_id)

    @property
    @pulumi.getter(name="destinationNetworkLoadBalancerId")
    def destination_network_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the destination Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_network_load_balancer_id")

    @property
    @pulumi.getter(name="sourceNetworkLoadBalancerId")
    def source_network_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the source Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "source_network_load_balancer_id")


@pulumi.output_type
class GetDrProtectionGroupMemberVaultMappingResult(dict):
    def __init__(__self__, *,
                 destination_vault_id: builtins.str,
                 source_vault_id: builtins.str):
        """
        :param builtins.str destination_vault_id: The OCID of the destination Vault.  Example: `ocid1.vault.oc1..uniqueID`
        :param builtins.str source_vault_id: The OCID of the source Vault.  Example: `ocid1.vault.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_vault_id", destination_vault_id)
        pulumi.set(__self__, "source_vault_id", source_vault_id)

    @property
    @pulumi.getter(name="destinationVaultId")
    def destination_vault_id(self) -> builtins.str:
        """
        The OCID of the destination Vault.  Example: `ocid1.vault.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_vault_id")

    @property
    @pulumi.getter(name="sourceVaultId")
    def source_vault_id(self) -> builtins.str:
        """
        The OCID of the source Vault.  Example: `ocid1.vault.oc1..uniqueID`
        """
        return pulumi.get(self, "source_vault_id")


@pulumi.output_type
class GetDrProtectionGroupMemberVirtualNodePoolConfigResult(dict):
    def __init__(__self__, *,
                 id: builtins.str,
                 maximum: builtins.int,
                 minimum: builtins.int):
        """
        :param builtins.str id: The OCID of the virtual node pool in OKE cluster.
        :param builtins.int maximum: The maximum number to which nodes in the virtual node pool could be scaled up.
        :param builtins.int minimum: The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "maximum", maximum)
        pulumi.set(__self__, "minimum", minimum)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The OCID of the virtual node pool in OKE cluster.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def maximum(self) -> builtins.int:
        """
        The maximum number to which nodes in the virtual node pool could be scaled up.
        """
        return pulumi.get(self, "maximum")

    @property
    @pulumi.getter
    def minimum(self) -> builtins.int:
        """
        The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        return pulumi.get(self, "minimum")


@pulumi.output_type
class GetDrProtectionGroupMemberVnicMappingResult(dict):
    def __init__(__self__, *,
                 destination_nsg_id_lists: Sequence[builtins.str],
                 destination_primary_private_ip_address: builtins.str,
                 destination_primary_private_ip_hostname_label: builtins.str,
                 destination_subnet_id: builtins.str,
                 source_vnic_id: builtins.str):
        """
        :param Sequence[builtins.str] destination_nsg_id_lists: A list of OCIDs of network security groups (NSG) in the destination region which should be assigned to the source VNIC.  Example: `[ ocid1.networksecuritygroup.oc1..uniqueID, ocid1.networksecuritygroup.oc1..uniqueID ]`
        :param builtins.str destination_primary_private_ip_address: The private IP address to be assigned as the VNIC's primary IP address in the destination subnet. This must be a valid IP address in the destination subnet and the IP address must be available.  Example: `10.0.3.3`
        :param builtins.str destination_primary_private_ip_hostname_label: The hostname label to be assigned in the destination subnet for the primary private IP of the source VNIC. This label is the hostname portion of the private IP's fully qualified domain name (FQDN)  (for example, 'myhost1' in the FQDN 'myhost1.subnet123.vcn1.oraclevcn.com').  Example: `myhost1`
        :param builtins.str destination_subnet_id: The OCID of the destination subnet to which the source VNIC should connect.  Example: `ocid1.subnet.oc1..uniqueID`
        :param builtins.str source_vnic_id: The OCID of the source VNIC.  Example: `ocid1.vnic.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_nsg_id_lists", destination_nsg_id_lists)
        pulumi.set(__self__, "destination_primary_private_ip_address", destination_primary_private_ip_address)
        pulumi.set(__self__, "destination_primary_private_ip_hostname_label", destination_primary_private_ip_hostname_label)
        pulumi.set(__self__, "destination_subnet_id", destination_subnet_id)
        pulumi.set(__self__, "source_vnic_id", source_vnic_id)

    @property
    @pulumi.getter(name="destinationNsgIdLists")
    def destination_nsg_id_lists(self) -> Sequence[builtins.str]:
        """
        A list of OCIDs of network security groups (NSG) in the destination region which should be assigned to the source VNIC.  Example: `[ ocid1.networksecuritygroup.oc1..uniqueID, ocid1.networksecuritygroup.oc1..uniqueID ]`
        """
        return pulumi.get(self, "destination_nsg_id_lists")

    @property
    @pulumi.getter(name="destinationPrimaryPrivateIpAddress")
    def destination_primary_private_ip_address(self) -> builtins.str:
        """
        The private IP address to be assigned as the VNIC's primary IP address in the destination subnet. This must be a valid IP address in the destination subnet and the IP address must be available.  Example: `10.0.3.3`
        """
        return pulumi.get(self, "destination_primary_private_ip_address")

    @property
    @pulumi.getter(name="destinationPrimaryPrivateIpHostnameLabel")
    def destination_primary_private_ip_hostname_label(self) -> builtins.str:
        """
        The hostname label to be assigned in the destination subnet for the primary private IP of the source VNIC. This label is the hostname portion of the private IP's fully qualified domain name (FQDN)  (for example, 'myhost1' in the FQDN 'myhost1.subnet123.vcn1.oraclevcn.com').  Example: `myhost1`
        """
        return pulumi.get(self, "destination_primary_private_ip_hostname_label")

    @property
    @pulumi.getter(name="destinationSubnetId")
    def destination_subnet_id(self) -> builtins.str:
        """
        The OCID of the destination subnet to which the source VNIC should connect.  Example: `ocid1.subnet.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_subnet_id")

    @property
    @pulumi.getter(name="sourceVnicId")
    def source_vnic_id(self) -> builtins.str:
        """
        The OCID of the source VNIC.  Example: `ocid1.vnic.oc1..uniqueID`
        """
        return pulumi.get(self, "source_vnic_id")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemResult(dict):
    def __init__(__self__, *,
                 associations: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemAssociationResult'],
                 compartment_id: builtins.str,
                 defined_tags: Mapping[str, builtins.str],
                 disassociate_trigger: builtins.int,
                 display_name: builtins.str,
                 freeform_tags: Mapping[str, builtins.str],
                 id: builtins.str,
                 life_cycle_details: builtins.str,
                 lifecycle_sub_state: builtins.str,
                 log_locations: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemLogLocationResult'],
                 members: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberResult'],
                 peer_id: builtins.str,
                 peer_region: builtins.str,
                 role: builtins.str,
                 state: builtins.str,
                 system_tags: Mapping[str, builtins.str],
                 time_created: builtins.str,
                 time_updated: builtins.str):
        """
        :param builtins.str compartment_id: The ID (OCID) of the compartment in which to list resources.  Example: `ocid1.compartment.oc1..uniqueID`
        :param Mapping[str, builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"Operations.CostCenter": "42"}`
        :param builtins.str display_name: A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        :param Mapping[str, builtins.str] freeform_tags: Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{"Department": "Finance"}`
        :param builtins.str id: The OCID of the virtual node pool in OKE cluster.
        :param builtins.str life_cycle_details: A message describing the DR protection group's current state in more detail.
        :param builtins.str lifecycle_sub_state: A filter to return only DR protection groups that match the given lifecycle sub-state.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemLogLocationArgs'] log_locations: The details of an object storage log location for a DR protection group.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberArgs'] members: A list of DR protection group members.
        :param builtins.str peer_id: The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        :param builtins.str peer_region: The region of the peer DR protection group.  Example: `us-ashburn-1`
        :param builtins.str role: The DR protection group Role.
        :param builtins.str state: A filter to return only DR protection groups that match the given lifecycle state.
        :param Mapping[str, builtins.str] system_tags: Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param builtins.str time_created: The date and time the DR protection group was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        :param builtins.str time_updated: The date and time the DR protection group was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        pulumi.set(__self__, "associations", associations)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "disassociate_trigger", disassociate_trigger)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "life_cycle_details", life_cycle_details)
        pulumi.set(__self__, "lifecycle_sub_state", lifecycle_sub_state)
        pulumi.set(__self__, "log_locations", log_locations)
        pulumi.set(__self__, "members", members)
        pulumi.set(__self__, "peer_id", peer_id)
        pulumi.set(__self__, "peer_region", peer_region)
        pulumi.set(__self__, "role", role)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @property
    @pulumi.getter
    def associations(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemAssociationResult']:
        return pulumi.get(self, "associations")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> builtins.str:
        """
        The ID (OCID) of the compartment in which to list resources.  Example: `ocid1.compartment.oc1..uniqueID`
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter(name="disassociateTrigger")
    def disassociate_trigger(self) -> builtins.int:
        return pulumi.get(self, "disassociate_trigger")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> builtins.str:
        """
        A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, builtins.str]:
        """
        Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The OCID of the virtual node pool in OKE cluster.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lifeCycleDetails")
    def life_cycle_details(self) -> builtins.str:
        """
        A message describing the DR protection group's current state in more detail.
        """
        return pulumi.get(self, "life_cycle_details")

    @property
    @pulumi.getter(name="lifecycleSubState")
    def lifecycle_sub_state(self) -> builtins.str:
        """
        A filter to return only DR protection groups that match the given lifecycle sub-state.
        """
        return pulumi.get(self, "lifecycle_sub_state")

    @property
    @pulumi.getter(name="logLocations")
    def log_locations(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemLogLocationResult']:
        """
        The details of an object storage log location for a DR protection group.
        """
        return pulumi.get(self, "log_locations")

    @property
    @pulumi.getter
    def members(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberResult']:
        """
        A list of DR protection group members.
        """
        return pulumi.get(self, "members")

    @property
    @pulumi.getter(name="peerId")
    def peer_id(self) -> builtins.str:
        """
        The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        """
        return pulumi.get(self, "peer_id")

    @property
    @pulumi.getter(name="peerRegion")
    def peer_region(self) -> builtins.str:
        """
        The region of the peer DR protection group.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "peer_region")

    @property
    @pulumi.getter
    def role(self) -> builtins.str:
        """
        The DR protection group Role.
        """
        return pulumi.get(self, "role")

    @property
    @pulumi.getter
    def state(self) -> builtins.str:
        """
        A filter to return only DR protection groups that match the given lifecycle state.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, builtins.str]:
        """
        Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> builtins.str:
        """
        The date and time the DR protection group was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> builtins.str:
        """
        The date and time the DR protection group was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemAssociationResult(dict):
    def __init__(__self__, *,
                 peer_id: builtins.str,
                 peer_region: builtins.str,
                 role: builtins.str):
        """
        :param builtins.str peer_id: The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        :param builtins.str peer_region: The region of the peer DR protection group.  Example: `us-ashburn-1`
        :param builtins.str role: The DR protection group Role.
        """
        pulumi.set(__self__, "peer_id", peer_id)
        pulumi.set(__self__, "peer_region", peer_region)
        pulumi.set(__self__, "role", role)

    @property
    @pulumi.getter(name="peerId")
    def peer_id(self) -> builtins.str:
        """
        The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        """
        return pulumi.get(self, "peer_id")

    @property
    @pulumi.getter(name="peerRegion")
    def peer_region(self) -> builtins.str:
        """
        The region of the peer DR protection group.  Example: `us-ashburn-1`
        """
        return pulumi.get(self, "peer_region")

    @property
    @pulumi.getter
    def role(self) -> builtins.str:
        """
        The DR protection group Role.
        """
        return pulumi.get(self, "role")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemLogLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `bucket_name`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `bucket_name`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberResult(dict):
    def __init__(__self__, *,
                 autonomous_database_standby_type_for_dr_drills: builtins.str,
                 backend_set_mappings: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackendSetMappingResult'],
                 backup_configs: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupConfigResult'],
                 backup_locations: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupLocationResult'],
                 block_volume_operations: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationResult'],
                 bucket: builtins.str,
                 connection_string_type: builtins.str,
                 destination_availability_domain: builtins.str,
                 destination_capacity_reservation_id: builtins.str,
                 destination_compartment_id: builtins.str,
                 destination_dedicated_vm_host_id: builtins.str,
                 destination_load_balancer_id: builtins.str,
                 destination_network_load_balancer_id: builtins.str,
                 export_mappings: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberExportMappingResult'],
                 file_system_operations: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationResult'],
                 is_movable: builtins.bool,
                 is_retain_fault_domain: builtins.bool,
                 is_start_stop_enabled: builtins.bool,
                 jump_host_id: builtins.str,
                 load_balancer_mappings: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberLoadBalancerMappingResult'],
                 managed_node_pool_configs: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberManagedNodePoolConfigResult'],
                 member_id: builtins.str,
                 member_type: builtins.str,
                 namespace: builtins.str,
                 network_load_balancer_mappings: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberNetworkLoadBalancerMappingResult'],
                 password_vault_secret_id: builtins.str,
                 peer_cluster_id: builtins.str,
                 vault_mappings: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVaultMappingResult'],
                 virtual_node_pool_configs: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVirtualNodePoolConfigResult'],
                 vnic_mapping: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult'],
                 vnic_mappings: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult']):
        """
        :param builtins.str autonomous_database_standby_type_for_dr_drills: This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html for information about these clone types. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html for information about snapshot standby.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackendSetMappingArgs'] backend_set_mappings: A list of backend set mappings that are used to transfer or update backends during DR.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupConfigArgs'] backup_configs: The details of backup performed on OKE Cluster.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupLocationArgs'] backup_locations: The details for object storage backup location of an OKE Cluster
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationArgs'] block_volume_operations: Operations performed on a list of block volumes used on the non-movable compute instance.
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `bucket_name`
        :param builtins.str connection_string_type: The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html for information about these service types.
        :param builtins.str destination_availability_domain: The availability domain of the destination mount target. Example: `BBTh:region-AD`
        :param builtins.str destination_capacity_reservation_id: The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
        :param builtins.str destination_compartment_id: The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
        :param builtins.str destination_dedicated_vm_host_id: The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
        :param builtins.str destination_load_balancer_id: The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        :param builtins.str destination_network_load_balancer_id: The OCID of the destination Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberExportMappingArgs'] export_mappings: A list of mappings between the primary region file system export and destination region mount target.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationArgs'] file_system_operations: Operations performed on a list of file systems used on the non-movable compute instance.
        :param builtins.bool is_movable: A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
        :param builtins.bool is_retain_fault_domain: A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
        :param builtins.bool is_start_stop_enabled: A flag indicating whether the non-movable compute instance needs to be started and stopped during DR operations.
        :param builtins.str jump_host_id: The OCID of the compute instance member that is designated as a jump host. This compute instance will be used to perform DR operations on the cluster using Oracle Cloud Agent's Run Command feature.  Example: `ocid1.instance.oc1..uniqueID`
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberLoadBalancerMappingArgs'] load_balancer_mappings: The list of source-to-destination load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberManagedNodePoolConfigArgs'] managed_node_pool_configs: The list of node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        :param builtins.str member_id: The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
        :param builtins.str member_type: The type of the member.
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberNetworkLoadBalancerMappingArgs'] network_load_balancer_mappings: The list of source-to-destination network load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        :param builtins.str password_vault_secret_id: The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
        :param builtins.str peer_cluster_id: The OCID of the peer OKE cluster. This property applies to the OKE cluster member in both the primary and standby region.  Example: `ocid1.cluster.oc1.uniqueID`
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVaultMappingArgs'] vault_mappings: The list of source-to-destination vault mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVirtualNodePoolConfigArgs'] virtual_node_pool_configs: The list of node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingArgs'] vnic_mapping: A list of compute instance VNIC mappings.
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingArgs'] vnic_mappings: A list of compute instance VNIC mappings.
        """
        pulumi.set(__self__, "autonomous_database_standby_type_for_dr_drills", autonomous_database_standby_type_for_dr_drills)
        pulumi.set(__self__, "backend_set_mappings", backend_set_mappings)
        pulumi.set(__self__, "backup_configs", backup_configs)
        pulumi.set(__self__, "backup_locations", backup_locations)
        pulumi.set(__self__, "block_volume_operations", block_volume_operations)
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "connection_string_type", connection_string_type)
        pulumi.set(__self__, "destination_availability_domain", destination_availability_domain)
        pulumi.set(__self__, "destination_capacity_reservation_id", destination_capacity_reservation_id)
        pulumi.set(__self__, "destination_compartment_id", destination_compartment_id)
        pulumi.set(__self__, "destination_dedicated_vm_host_id", destination_dedicated_vm_host_id)
        pulumi.set(__self__, "destination_load_balancer_id", destination_load_balancer_id)
        pulumi.set(__self__, "destination_network_load_balancer_id", destination_network_load_balancer_id)
        pulumi.set(__self__, "export_mappings", export_mappings)
        pulumi.set(__self__, "file_system_operations", file_system_operations)
        pulumi.set(__self__, "is_movable", is_movable)
        pulumi.set(__self__, "is_retain_fault_domain", is_retain_fault_domain)
        pulumi.set(__self__, "is_start_stop_enabled", is_start_stop_enabled)
        pulumi.set(__self__, "jump_host_id", jump_host_id)
        pulumi.set(__self__, "load_balancer_mappings", load_balancer_mappings)
        pulumi.set(__self__, "managed_node_pool_configs", managed_node_pool_configs)
        pulumi.set(__self__, "member_id", member_id)
        pulumi.set(__self__, "member_type", member_type)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "network_load_balancer_mappings", network_load_balancer_mappings)
        pulumi.set(__self__, "password_vault_secret_id", password_vault_secret_id)
        pulumi.set(__self__, "peer_cluster_id", peer_cluster_id)
        pulumi.set(__self__, "vault_mappings", vault_mappings)
        pulumi.set(__self__, "virtual_node_pool_configs", virtual_node_pool_configs)
        pulumi.set(__self__, "vnic_mapping", vnic_mapping)
        pulumi.set(__self__, "vnic_mappings", vnic_mappings)

    @property
    @pulumi.getter(name="autonomousDatabaseStandbyTypeForDrDrills")
    def autonomous_database_standby_type_for_dr_drills(self) -> builtins.str:
        """
        This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html for information about these clone types. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html for information about snapshot standby.
        """
        return pulumi.get(self, "autonomous_database_standby_type_for_dr_drills")

    @property
    @pulumi.getter(name="backendSetMappings")
    def backend_set_mappings(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackendSetMappingResult']:
        """
        A list of backend set mappings that are used to transfer or update backends during DR.
        """
        return pulumi.get(self, "backend_set_mappings")

    @property
    @pulumi.getter(name="backupConfigs")
    def backup_configs(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupConfigResult']:
        """
        The details of backup performed on OKE Cluster.
        """
        return pulumi.get(self, "backup_configs")

    @property
    @pulumi.getter(name="backupLocations")
    def backup_locations(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupLocationResult']:
        """
        The details for object storage backup location of an OKE Cluster
        """
        return pulumi.get(self, "backup_locations")

    @property
    @pulumi.getter(name="blockVolumeOperations")
    def block_volume_operations(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationResult']:
        """
        Operations performed on a list of block volumes used on the non-movable compute instance.
        """
        return pulumi.get(self, "block_volume_operations")

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `bucket_name`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter(name="connectionStringType")
    def connection_string_type(self) -> builtins.str:
        """
        The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html for information about these service types.
        """
        return pulumi.get(self, "connection_string_type")

    @property
    @pulumi.getter(name="destinationAvailabilityDomain")
    def destination_availability_domain(self) -> builtins.str:
        """
        The availability domain of the destination mount target. Example: `BBTh:region-AD`
        """
        return pulumi.get(self, "destination_availability_domain")

    @property
    @pulumi.getter(name="destinationCapacityReservationId")
    def destination_capacity_reservation_id(self) -> builtins.str:
        """
        The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_capacity_reservation_id")

    @property
    @pulumi.getter(name="destinationCompartmentId")
    def destination_compartment_id(self) -> builtins.str:
        """
        The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_compartment_id")

    @property
    @pulumi.getter(name="destinationDedicatedVmHostId")
    def destination_dedicated_vm_host_id(self) -> builtins.str:
        """
        The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_dedicated_vm_host_id")

    @property
    @pulumi.getter(name="destinationLoadBalancerId")
    def destination_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_load_balancer_id")

    @property
    @pulumi.getter(name="destinationNetworkLoadBalancerId")
    def destination_network_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the destination Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_network_load_balancer_id")

    @property
    @pulumi.getter(name="exportMappings")
    def export_mappings(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberExportMappingResult']:
        """
        A list of mappings between the primary region file system export and destination region mount target.
        """
        return pulumi.get(self, "export_mappings")

    @property
    @pulumi.getter(name="fileSystemOperations")
    def file_system_operations(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationResult']:
        """
        Operations performed on a list of file systems used on the non-movable compute instance.
        """
        return pulumi.get(self, "file_system_operations")

    @property
    @pulumi.getter(name="isMovable")
    def is_movable(self) -> builtins.bool:
        """
        A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
        """
        return pulumi.get(self, "is_movable")

    @property
    @pulumi.getter(name="isRetainFaultDomain")
    def is_retain_fault_domain(self) -> builtins.bool:
        """
        A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
        """
        return pulumi.get(self, "is_retain_fault_domain")

    @property
    @pulumi.getter(name="isStartStopEnabled")
    def is_start_stop_enabled(self) -> builtins.bool:
        """
        A flag indicating whether the non-movable compute instance needs to be started and stopped during DR operations.
        """
        return pulumi.get(self, "is_start_stop_enabled")

    @property
    @pulumi.getter(name="jumpHostId")
    def jump_host_id(self) -> builtins.str:
        """
        The OCID of the compute instance member that is designated as a jump host. This compute instance will be used to perform DR operations on the cluster using Oracle Cloud Agent's Run Command feature.  Example: `ocid1.instance.oc1..uniqueID`
        """
        return pulumi.get(self, "jump_host_id")

    @property
    @pulumi.getter(name="loadBalancerMappings")
    def load_balancer_mappings(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberLoadBalancerMappingResult']:
        """
        The list of source-to-destination load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "load_balancer_mappings")

    @property
    @pulumi.getter(name="managedNodePoolConfigs")
    def managed_node_pool_configs(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberManagedNodePoolConfigResult']:
        """
        The list of node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        """
        return pulumi.get(self, "managed_node_pool_configs")

    @property
    @pulumi.getter(name="memberId")
    def member_id(self) -> builtins.str:
        """
        The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
        """
        return pulumi.get(self, "member_id")

    @property
    @pulumi.getter(name="memberType")
    def member_type(self) -> builtins.str:
        """
        The type of the member.
        """
        return pulumi.get(self, "member_type")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter(name="networkLoadBalancerMappings")
    def network_load_balancer_mappings(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberNetworkLoadBalancerMappingResult']:
        """
        The list of source-to-destination network load balancer mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "network_load_balancer_mappings")

    @property
    @pulumi.getter(name="passwordVaultSecretId")
    def password_vault_secret_id(self) -> builtins.str:
        """
        The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
        """
        return pulumi.get(self, "password_vault_secret_id")

    @property
    @pulumi.getter(name="peerClusterId")
    def peer_cluster_id(self) -> builtins.str:
        """
        The OCID of the peer OKE cluster. This property applies to the OKE cluster member in both the primary and standby region.  Example: `ocid1.cluster.oc1.uniqueID`
        """
        return pulumi.get(self, "peer_cluster_id")

    @property
    @pulumi.getter(name="vaultMappings")
    def vault_mappings(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVaultMappingResult']:
        """
        The list of source-to-destination vault mappings required for DR operations. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "vault_mappings")

    @property
    @pulumi.getter(name="virtualNodePoolConfigs")
    def virtual_node_pool_configs(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVirtualNodePoolConfigResult']:
        """
        The list of node pools with configurations for minimum and maximum node counts. This property applies to the OKE cluster member in both the primary and standby region.
        """
        return pulumi.get(self, "virtual_node_pool_configs")

    @property
    @pulumi.getter(name="vnicMapping")
    def vnic_mapping(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult']:
        """
        A list of compute instance VNIC mappings.
        """
        return pulumi.get(self, "vnic_mapping")

    @property
    @pulumi.getter(name="vnicMappings")
    def vnic_mappings(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult']:
        """
        A list of compute instance VNIC mappings.
        """
        return pulumi.get(self, "vnic_mappings")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackendSetMappingResult(dict):
    def __init__(__self__, *,
                 destination_backend_set_name: builtins.str,
                 is_backend_set_for_non_movable: builtins.bool,
                 source_backend_set_name: builtins.str):
        """
        :param builtins.str destination_backend_set_name: The name of the destination backend set.  Example: `My_Destination_Backend_Set`
        :param builtins.bool is_backend_set_for_non_movable: This flag specifies if this backend set is used for traffic for non-movable compute instances. Backend sets that point to non-movable instances are only enabled or disabled during DR. For non-movable instances this flag should be set to 'true'. Backend sets that point to movable instances are emptied and their contents are transferred to the destination region network load balancer.  For movable instances this flag should be set to 'false'.   Example: `true`
        :param builtins.str source_backend_set_name: The name of the source backend set.  Example: `My_Source_Backend_Set`
        """
        pulumi.set(__self__, "destination_backend_set_name", destination_backend_set_name)
        pulumi.set(__self__, "is_backend_set_for_non_movable", is_backend_set_for_non_movable)
        pulumi.set(__self__, "source_backend_set_name", source_backend_set_name)

    @property
    @pulumi.getter(name="destinationBackendSetName")
    def destination_backend_set_name(self) -> builtins.str:
        """
        The name of the destination backend set.  Example: `My_Destination_Backend_Set`
        """
        return pulumi.get(self, "destination_backend_set_name")

    @property
    @pulumi.getter(name="isBackendSetForNonMovable")
    def is_backend_set_for_non_movable(self) -> builtins.bool:
        """
        This flag specifies if this backend set is used for traffic for non-movable compute instances. Backend sets that point to non-movable instances are only enabled or disabled during DR. For non-movable instances this flag should be set to 'true'. Backend sets that point to movable instances are emptied and their contents are transferred to the destination region network load balancer.  For movable instances this flag should be set to 'false'.   Example: `true`
        """
        return pulumi.get(self, "is_backend_set_for_non_movable")

    @property
    @pulumi.getter(name="sourceBackendSetName")
    def source_backend_set_name(self) -> builtins.str:
        """
        The name of the source backend set.  Example: `My_Source_Backend_Set`
        """
        return pulumi.get(self, "source_backend_set_name")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupConfigResult(dict):
    def __init__(__self__, *,
                 backup_schedule: builtins.str,
                 image_replication_vault_secret_id: builtins.str,
                 max_number_of_backups_retained: builtins.int,
                 namespaces: Sequence[builtins.str],
                 replicate_images: builtins.str):
        """
        :param builtins.str backup_schedule: The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created. This format of the string specifying the backup schedule must conform with RFC-5545. This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.  Example: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1
        :param builtins.str image_replication_vault_secret_id: The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
        :param builtins.int max_number_of_backups_retained: The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
        :param Sequence[builtins.str] namespaces: A list of namespaces that need to be backed up.  The default value is null. If a list of namespaces is not provided, all namespaces will be backed up. This property applies to the OKE cluster member in primary region.  Example: ["default", "pv-nginx"]
        :param builtins.str replicate_images: Controls the behaviour of image replication across regions. This property applies to the OKE cluster member in primary region.
        """
        pulumi.set(__self__, "backup_schedule", backup_schedule)
        pulumi.set(__self__, "image_replication_vault_secret_id", image_replication_vault_secret_id)
        pulumi.set(__self__, "max_number_of_backups_retained", max_number_of_backups_retained)
        pulumi.set(__self__, "namespaces", namespaces)
        pulumi.set(__self__, "replicate_images", replicate_images)

    @property
    @pulumi.getter(name="backupSchedule")
    def backup_schedule(self) -> builtins.str:
        """
        The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created. This format of the string specifying the backup schedule must conform with RFC-5545. This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.  Example: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1
        """
        return pulumi.get(self, "backup_schedule")

    @property
    @pulumi.getter(name="imageReplicationVaultSecretId")
    def image_replication_vault_secret_id(self) -> builtins.str:
        """
        The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
        """
        return pulumi.get(self, "image_replication_vault_secret_id")

    @property
    @pulumi.getter(name="maxNumberOfBackupsRetained")
    def max_number_of_backups_retained(self) -> builtins.int:
        """
        The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "max_number_of_backups_retained")

    @property
    @pulumi.getter
    def namespaces(self) -> Sequence[builtins.str]:
        """
        A list of namespaces that need to be backed up.  The default value is null. If a list of namespaces is not provided, all namespaces will be backed up. This property applies to the OKE cluster member in primary region.  Example: ["default", "pv-nginx"]
        """
        return pulumi.get(self, "namespaces")

    @property
    @pulumi.getter(name="replicateImages")
    def replicate_images(self) -> builtins.str:
        """
        Controls the behaviour of image replication across regions. This property applies to the OKE cluster member in primary region.
        """
        return pulumi.get(self, "replicate_images")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackupLocationResult(dict):
    def __init__(__self__, *,
                 bucket: builtins.str,
                 namespace: builtins.str,
                 object: builtins.str):
        """
        :param builtins.str bucket: The bucket name inside the object storage namespace.  Example: `bucket_name`
        :param builtins.str namespace: The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        :param builtins.str object: The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)

    @property
    @pulumi.getter
    def bucket(self) -> builtins.str:
        """
        The bucket name inside the object storage namespace.  Example: `bucket_name`
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def namespace(self) -> builtins.str:
        """
        The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter
    def object(self) -> builtins.str:
        """
        The object name inside the object storage bucket.  Example: `switchover_plan_executions`
        """
        return pulumi.get(self, "object")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationResult(dict):
    def __init__(__self__, *,
                 attachment_details: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationAttachmentDetailResult'],
                 block_volume_id: builtins.str,
                 mount_details: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationMountDetailResult']):
        """
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationAttachmentDetailArgs'] attachment_details: The details for attaching or detaching a block volume.
        :param builtins.str block_volume_id: The OCID of the block volume.  Example: `ocid1.volume.oc1..uniqueID`
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationMountDetailArgs'] mount_details: Mount details of a file system.
        """
        pulumi.set(__self__, "attachment_details", attachment_details)
        pulumi.set(__self__, "block_volume_id", block_volume_id)
        pulumi.set(__self__, "mount_details", mount_details)

    @property
    @pulumi.getter(name="attachmentDetails")
    def attachment_details(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationAttachmentDetailResult']:
        """
        The details for attaching or detaching a block volume.
        """
        return pulumi.get(self, "attachment_details")

    @property
    @pulumi.getter(name="blockVolumeId")
    def block_volume_id(self) -> builtins.str:
        """
        The OCID of the block volume.  Example: `ocid1.volume.oc1..uniqueID`
        """
        return pulumi.get(self, "block_volume_id")

    @property
    @pulumi.getter(name="mountDetails")
    def mount_details(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationMountDetailResult']:
        """
        Mount details of a file system.
        """
        return pulumi.get(self, "mount_details")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationAttachmentDetailResult(dict):
    def __init__(__self__, *,
                 volume_attachment_reference_instance_id: builtins.str):
        """
        :param builtins.str volume_attachment_reference_instance_id: The OCID of the reference compute instance from which to obtain the attachment details for the volume. This reference compute instance is from the peer DR protection group.  Example: `ocid1.instance.oc1..uniqueID`
        """
        pulumi.set(__self__, "volume_attachment_reference_instance_id", volume_attachment_reference_instance_id)

    @property
    @pulumi.getter(name="volumeAttachmentReferenceInstanceId")
    def volume_attachment_reference_instance_id(self) -> builtins.str:
        """
        The OCID of the reference compute instance from which to obtain the attachment details for the volume. This reference compute instance is from the peer DR protection group.  Example: `ocid1.instance.oc1..uniqueID`
        """
        return pulumi.get(self, "volume_attachment_reference_instance_id")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationMountDetailResult(dict):
    def __init__(__self__, *,
                 mount_point: builtins.str):
        """
        :param builtins.str mount_point: The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        """
        pulumi.set(__self__, "mount_point", mount_point)

    @property
    @pulumi.getter(name="mountPoint")
    def mount_point(self) -> builtins.str:
        """
        The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        """
        return pulumi.get(self, "mount_point")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberExportMappingResult(dict):
    def __init__(__self__, *,
                 destination_mount_target_id: builtins.str,
                 export_id: builtins.str):
        """
        :param builtins.str destination_mount_target_id: The OCID of the destination mount target on which this file system export should be created.  Example: `ocid1.mounttarget.oc1..uniqueID`
        :param builtins.str export_id: The OCID of the export path.  Example: `ocid1.export.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_mount_target_id", destination_mount_target_id)
        pulumi.set(__self__, "export_id", export_id)

    @property
    @pulumi.getter(name="destinationMountTargetId")
    def destination_mount_target_id(self) -> builtins.str:
        """
        The OCID of the destination mount target on which this file system export should be created.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_mount_target_id")

    @property
    @pulumi.getter(name="exportId")
    def export_id(self) -> builtins.str:
        """
        The OCID of the export path.  Example: `ocid1.export.oc1..uniqueID`
        """
        return pulumi.get(self, "export_id")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationResult(dict):
    def __init__(__self__, *,
                 export_path: builtins.str,
                 mount_details: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationMountDetailResult'],
                 mount_point: builtins.str,
                 mount_target_id: builtins.str,
                 unmount_details: Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationUnmountDetailResult']):
        """
        :param builtins.str export_path: The export path of the file system.  Example: `/fs-export-path`
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationMountDetailArgs'] mount_details: Mount details of a file system.
        :param builtins.str mount_point: The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        :param builtins.str mount_target_id: The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        :param Sequence['GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationUnmountDetailArgs'] unmount_details: Unmount details for a file system.
        """
        pulumi.set(__self__, "export_path", export_path)
        pulumi.set(__self__, "mount_details", mount_details)
        pulumi.set(__self__, "mount_point", mount_point)
        pulumi.set(__self__, "mount_target_id", mount_target_id)
        pulumi.set(__self__, "unmount_details", unmount_details)

    @property
    @pulumi.getter(name="exportPath")
    def export_path(self) -> builtins.str:
        """
        The export path of the file system.  Example: `/fs-export-path`
        """
        return pulumi.get(self, "export_path")

    @property
    @pulumi.getter(name="mountDetails")
    def mount_details(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationMountDetailResult']:
        """
        Mount details of a file system.
        """
        return pulumi.get(self, "mount_details")

    @property
    @pulumi.getter(name="mountPoint")
    def mount_point(self) -> builtins.str:
        """
        The physical mount point of the file system on a host.  Example: `/mnt/yourmountpoint`
        """
        return pulumi.get(self, "mount_point")

    @property
    @pulumi.getter(name="mountTargetId")
    def mount_target_id(self) -> builtins.str:
        """
        The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "mount_target_id")

    @property
    @pulumi.getter(name="unmountDetails")
    def unmount_details(self) -> Sequence['outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationUnmountDetailResult']:
        """
        Unmount details for a file system.
        """
        return pulumi.get(self, "unmount_details")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationMountDetailResult(dict):
    def __init__(__self__, *,
                 mount_target_id: builtins.str):
        """
        :param builtins.str mount_target_id: The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        pulumi.set(__self__, "mount_target_id", mount_target_id)

    @property
    @pulumi.getter(name="mountTargetId")
    def mount_target_id(self) -> builtins.str:
        """
        The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "mount_target_id")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationUnmountDetailResult(dict):
    def __init__(__self__, *,
                 mount_target_id: builtins.str):
        """
        :param builtins.str mount_target_id: The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        pulumi.set(__self__, "mount_target_id", mount_target_id)

    @property
    @pulumi.getter(name="mountTargetId")
    def mount_target_id(self) -> builtins.str:
        """
        The OCID of the mount target for this file system.  Example: `ocid1.mounttarget.oc1..uniqueID`
        """
        return pulumi.get(self, "mount_target_id")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberLoadBalancerMappingResult(dict):
    def __init__(__self__, *,
                 destination_load_balancer_id: builtins.str,
                 source_load_balancer_id: builtins.str):
        """
        :param builtins.str destination_load_balancer_id: The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        :param builtins.str source_load_balancer_id: The OCID of the source Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_load_balancer_id", destination_load_balancer_id)
        pulumi.set(__self__, "source_load_balancer_id", source_load_balancer_id)

    @property
    @pulumi.getter(name="destinationLoadBalancerId")
    def destination_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the destination Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_load_balancer_id")

    @property
    @pulumi.getter(name="sourceLoadBalancerId")
    def source_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the source Load Balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "source_load_balancer_id")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberManagedNodePoolConfigResult(dict):
    def __init__(__self__, *,
                 id: builtins.str,
                 maximum: builtins.int,
                 minimum: builtins.int):
        """
        :param builtins.str id: The OCID of the virtual node pool in OKE cluster.
        :param builtins.int maximum: The maximum number to which nodes in the virtual node pool could be scaled up.
        :param builtins.int minimum: The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "maximum", maximum)
        pulumi.set(__self__, "minimum", minimum)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The OCID of the virtual node pool in OKE cluster.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def maximum(self) -> builtins.int:
        """
        The maximum number to which nodes in the virtual node pool could be scaled up.
        """
        return pulumi.get(self, "maximum")

    @property
    @pulumi.getter
    def minimum(self) -> builtins.int:
        """
        The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        return pulumi.get(self, "minimum")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberNetworkLoadBalancerMappingResult(dict):
    def __init__(__self__, *,
                 destination_network_load_balancer_id: builtins.str,
                 source_network_load_balancer_id: builtins.str):
        """
        :param builtins.str destination_network_load_balancer_id: The OCID of the destination Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        :param builtins.str source_network_load_balancer_id: The OCID of the source Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_network_load_balancer_id", destination_network_load_balancer_id)
        pulumi.set(__self__, "source_network_load_balancer_id", source_network_load_balancer_id)

    @property
    @pulumi.getter(name="destinationNetworkLoadBalancerId")
    def destination_network_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the destination Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_network_load_balancer_id")

    @property
    @pulumi.getter(name="sourceNetworkLoadBalancerId")
    def source_network_load_balancer_id(self) -> builtins.str:
        """
        The OCID of the source Network Load Balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        """
        return pulumi.get(self, "source_network_load_balancer_id")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVaultMappingResult(dict):
    def __init__(__self__, *,
                 destination_vault_id: builtins.str,
                 source_vault_id: builtins.str):
        """
        :param builtins.str destination_vault_id: The OCID of the destination Vault.  Example: `ocid1.vault.oc1..uniqueID`
        :param builtins.str source_vault_id: The OCID of the source Vault.  Example: `ocid1.vault.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_vault_id", destination_vault_id)
        pulumi.set(__self__, "source_vault_id", source_vault_id)

    @property
    @pulumi.getter(name="destinationVaultId")
    def destination_vault_id(self) -> builtins.str:
        """
        The OCID of the destination Vault.  Example: `ocid1.vault.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_vault_id")

    @property
    @pulumi.getter(name="sourceVaultId")
    def source_vault_id(self) -> builtins.str:
        """
        The OCID of the source Vault.  Example: `ocid1.vault.oc1..uniqueID`
        """
        return pulumi.get(self, "source_vault_id")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVirtualNodePoolConfigResult(dict):
    def __init__(__self__, *,
                 id: builtins.str,
                 maximum: builtins.int,
                 minimum: builtins.int):
        """
        :param builtins.str id: The OCID of the virtual node pool in OKE cluster.
        :param builtins.int maximum: The maximum number to which nodes in the virtual node pool could be scaled up.
        :param builtins.int minimum: The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "maximum", maximum)
        pulumi.set(__self__, "minimum", minimum)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The OCID of the virtual node pool in OKE cluster.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def maximum(self) -> builtins.int:
        """
        The maximum number to which nodes in the virtual node pool could be scaled up.
        """
        return pulumi.get(self, "maximum")

    @property
    @pulumi.getter
    def minimum(self) -> builtins.int:
        """
        The minimum number to which nodes in the virtual node pool could be scaled down.
        """
        return pulumi.get(self, "minimum")


@pulumi.output_type
class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult(dict):
    def __init__(__self__, *,
                 destination_nsg_id_lists: Sequence[builtins.str],
                 destination_primary_private_ip_address: builtins.str,
                 destination_primary_private_ip_hostname_label: builtins.str,
                 destination_subnet_id: builtins.str,
                 source_vnic_id: builtins.str):
        """
        :param Sequence[builtins.str] destination_nsg_id_lists: A list of OCIDs of network security groups (NSG) in the destination region which should be assigned to the source VNIC.  Example: `[ ocid1.networksecuritygroup.oc1..uniqueID, ocid1.networksecuritygroup.oc1..uniqueID ]`
        :param builtins.str destination_primary_private_ip_address: The private IP address to be assigned as the VNIC's primary IP address in the destination subnet. This must be a valid IP address in the destination subnet and the IP address must be available.  Example: `10.0.3.3`
        :param builtins.str destination_primary_private_ip_hostname_label: The hostname label to be assigned in the destination subnet for the primary private IP of the source VNIC. This label is the hostname portion of the private IP's fully qualified domain name (FQDN)  (for example, 'myhost1' in the FQDN 'myhost1.subnet123.vcn1.oraclevcn.com').  Example: `myhost1`
        :param builtins.str destination_subnet_id: The OCID of the destination subnet to which the source VNIC should connect.  Example: `ocid1.subnet.oc1..uniqueID`
        :param builtins.str source_vnic_id: The OCID of the source VNIC.  Example: `ocid1.vnic.oc1..uniqueID`
        """
        pulumi.set(__self__, "destination_nsg_id_lists", destination_nsg_id_lists)
        pulumi.set(__self__, "destination_primary_private_ip_address", destination_primary_private_ip_address)
        pulumi.set(__self__, "destination_primary_private_ip_hostname_label", destination_primary_private_ip_hostname_label)
        pulumi.set(__self__, "destination_subnet_id", destination_subnet_id)
        pulumi.set(__self__, "source_vnic_id", source_vnic_id)

    @property
    @pulumi.getter(name="destinationNsgIdLists")
    def destination_nsg_id_lists(self) -> Sequence[builtins.str]:
        """
        A list of OCIDs of network security groups (NSG) in the destination region which should be assigned to the source VNIC.  Example: `[ ocid1.networksecuritygroup.oc1..uniqueID, ocid1.networksecuritygroup.oc1..uniqueID ]`
        """
        return pulumi.get(self, "destination_nsg_id_lists")

    @property
    @pulumi.getter(name="destinationPrimaryPrivateIpAddress")
    def destination_primary_private_ip_address(self) -> builtins.str:
        """
        The private IP address to be assigned as the VNIC's primary IP address in the destination subnet. This must be a valid IP address in the destination subnet and the IP address must be available.  Example: `10.0.3.3`
        """
        return pulumi.get(self, "destination_primary_private_ip_address")

    @property
    @pulumi.getter(name="destinationPrimaryPrivateIpHostnameLabel")
    def destination_primary_private_ip_hostname_label(self) -> builtins.str:
        """
        The hostname label to be assigned in the destination subnet for the primary private IP of the source VNIC. This label is the hostname portion of the private IP's fully qualified domain name (FQDN)  (for example, 'myhost1' in the FQDN 'myhost1.subnet123.vcn1.oraclevcn.com').  Example: `myhost1`
        """
        return pulumi.get(self, "destination_primary_private_ip_hostname_label")

    @property
    @pulumi.getter(name="destinationSubnetId")
    def destination_subnet_id(self) -> builtins.str:
        """
        The OCID of the destination subnet to which the source VNIC should connect.  Example: `ocid1.subnet.oc1..uniqueID`
        """
        return pulumi.get(self, "destination_subnet_id")

    @property
    @pulumi.getter(name="sourceVnicId")
    def source_vnic_id(self) -> builtins.str:
        """
        The OCID of the source VNIC.  Example: `ocid1.vnic.oc1..uniqueID`
        """
        return pulumi.get(self, "source_vnic_id")


@pulumi.output_type
class GetDrProtectionGroupsFilterResult(dict):
    def __init__(__self__, *,
                 name: builtins.str,
                 values: Sequence[builtins.str],
                 regex: Optional[builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[builtins.str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter
    def regex(self) -> Optional[builtins.bool]:
        return pulumi.get(self, "regex")


