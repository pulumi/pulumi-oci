# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetFilesystemSnapshotPoliciesResult',
    'AwaitableGetFilesystemSnapshotPoliciesResult',
    'get_filesystem_snapshot_policies',
    'get_filesystem_snapshot_policies_output',
]

@pulumi.output_type
class GetFilesystemSnapshotPoliciesResult:
    """
    A collection of values returned by getFilesystemSnapshotPolicies.
    """
    def __init__(__self__, availability_domain=None, compartment_id=None, display_name=None, filesystem_snapshot_policies=None, filters=None, id=None, state=None):
        if availability_domain and not isinstance(availability_domain, str):
            raise TypeError("Expected argument 'availability_domain' to be a str")
        pulumi.set(__self__, "availability_domain", availability_domain)
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        pulumi.set(__self__, "display_name", display_name)
        if filesystem_snapshot_policies and not isinstance(filesystem_snapshot_policies, list):
            raise TypeError("Expected argument 'filesystem_snapshot_policies' to be a list")
        pulumi.set(__self__, "filesystem_snapshot_policies", filesystem_snapshot_policies)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)

    @property
    @pulumi.getter(name="availabilityDomain")
    def availability_domain(self) -> str:
        """
        The availability domain that the file system snapshot policy is in. May be unset using a blank or NULL value.  Example: `Uocm:PHX-AD-2`
        """
        return pulumi.get(self, "availability_domain")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system snapshot policy.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[str]:
        """
        A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My Filesystem Snapshot Policy`
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="filesystemSnapshotPolicies")
    def filesystem_snapshot_policies(self) -> Sequence['outputs.GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyResult']:
        """
        The list of filesystem_snapshot_policies.
        """
        return pulumi.get(self, "filesystem_snapshot_policies")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetFilesystemSnapshotPoliciesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def state(self) -> Optional[str]:
        """
        The current state of this file system snapshot policy.
        """
        return pulumi.get(self, "state")


class AwaitableGetFilesystemSnapshotPoliciesResult(GetFilesystemSnapshotPoliciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFilesystemSnapshotPoliciesResult(
            availability_domain=self.availability_domain,
            compartment_id=self.compartment_id,
            display_name=self.display_name,
            filesystem_snapshot_policies=self.filesystem_snapshot_policies,
            filters=self.filters,
            id=self.id,
            state=self.state)


def get_filesystem_snapshot_policies(availability_domain: Optional[str] = None,
                                     compartment_id: Optional[str] = None,
                                     display_name: Optional[str] = None,
                                     filters: Optional[Sequence[pulumi.InputType['GetFilesystemSnapshotPoliciesFilterArgs']]] = None,
                                     id: Optional[str] = None,
                                     state: Optional[str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFilesystemSnapshotPoliciesResult:
    """
    This data source provides the list of Filesystem Snapshot Policies in Oracle Cloud Infrastructure File Storage service.

    Lists file system snapshot policies in the specified compartment.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_filesystem_snapshot_policies = oci.FileStorage.get_filesystem_snapshot_policies(availability_domain=var["filesystem_snapshot_policy_availability_domain"],
        compartment_id=var["compartment_id"],
        display_name=var["filesystem_snapshot_policy_display_name"],
        id=var["filesystem_snapshot_policy_id"],
        state=var["filesystem_snapshot_policy_state"])
    ```


    :param str availability_domain: The name of the availability domain.  Example: `Uocm:PHX-AD-1`
    :param str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
    :param str display_name: A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
    :param str id: Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
    :param str state: Filter results by the specified lifecycle state. Must be a valid state for the resource type.
    """
    __args__ = dict()
    __args__['availabilityDomain'] = availability_domain
    __args__['compartmentId'] = compartment_id
    __args__['displayName'] = display_name
    __args__['filters'] = filters
    __args__['id'] = id
    __args__['state'] = state
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:FileStorage/getFilesystemSnapshotPolicies:getFilesystemSnapshotPolicies', __args__, opts=opts, typ=GetFilesystemSnapshotPoliciesResult).value

    return AwaitableGetFilesystemSnapshotPoliciesResult(
        availability_domain=pulumi.get(__ret__, 'availability_domain'),
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        display_name=pulumi.get(__ret__, 'display_name'),
        filesystem_snapshot_policies=pulumi.get(__ret__, 'filesystem_snapshot_policies'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        state=pulumi.get(__ret__, 'state'))


@_utilities.lift_output_func(get_filesystem_snapshot_policies)
def get_filesystem_snapshot_policies_output(availability_domain: Optional[pulumi.Input[str]] = None,
                                            compartment_id: Optional[pulumi.Input[str]] = None,
                                            display_name: Optional[pulumi.Input[Optional[str]]] = None,
                                            filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetFilesystemSnapshotPoliciesFilterArgs']]]]] = None,
                                            id: Optional[pulumi.Input[Optional[str]]] = None,
                                            state: Optional[pulumi.Input[Optional[str]]] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFilesystemSnapshotPoliciesResult]:
    """
    This data source provides the list of Filesystem Snapshot Policies in Oracle Cloud Infrastructure File Storage service.

    Lists file system snapshot policies in the specified compartment.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_filesystem_snapshot_policies = oci.FileStorage.get_filesystem_snapshot_policies(availability_domain=var["filesystem_snapshot_policy_availability_domain"],
        compartment_id=var["compartment_id"],
        display_name=var["filesystem_snapshot_policy_display_name"],
        id=var["filesystem_snapshot_policy_id"],
        state=var["filesystem_snapshot_policy_state"])
    ```


    :param str availability_domain: The name of the availability domain.  Example: `Uocm:PHX-AD-1`
    :param str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
    :param str display_name: A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
    :param str id: Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
    :param str state: Filter results by the specified lifecycle state. Must be a valid state for the resource type.
    """
    ...
