# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['FleetArgs', 'Fleet']

@pulumi.input_type
class FleetArgs:
    def __init__(__self__, *,
                 compartment_id: pulumi.Input[_builtins.str],
                 display_name: pulumi.Input[_builtins.str],
                 resource_selection: pulumi.Input['FleetResourceSelectionArgs'],
                 credentials: Optional[pulumi.Input[Sequence[pulumi.Input['FleetCredentialArgs']]]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 details: Optional[pulumi.Input['FleetDetailsArgs']] = None,
                 environment_type: Optional[pulumi.Input[_builtins.str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 is_target_auto_confirm: Optional[pulumi.Input[_builtins.bool]] = None,
                 notification_preferences: Optional[pulumi.Input[Sequence[pulumi.Input['FleetNotificationPreferenceArgs']]]] = None,
                 parent_fleet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 products: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 properties: Optional[pulumi.Input[Sequence[pulumi.Input['FleetPropertyArgs']]]] = None,
                 resources: Optional[pulumi.Input[Sequence[pulumi.Input['FleetResourceArgs']]]] = None):
        """
        The set of arguments for constructing a Fleet resource.
        :param pulumi.Input[_builtins.str] compartment_id: (Updatable) compartment OCID
        :param pulumi.Input[_builtins.str] display_name: (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        :param pulumi.Input['FleetResourceSelectionArgs'] resource_selection: (Updatable) Resource Selection Type
        :param pulumi.Input[Sequence[pulumi.Input['FleetCredentialArgs']]] credentials: Credentials associated with the Fleet.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        :param pulumi.Input[_builtins.str] description: (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        :param pulumi.Input['FleetDetailsArgs'] details: Fleet Type
        :param pulumi.Input[_builtins.str] environment_type: Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        :param pulumi.Input[_builtins.bool] is_target_auto_confirm: (Updatable) A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
        :param pulumi.Input[Sequence[pulumi.Input['FleetNotificationPreferenceArgs']]] notification_preferences: (Updatable) Notification Preferences associated with the Fleet.
        :param pulumi.Input[_builtins.str] parent_fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet that would be the parent for this fleet.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] products: (Updatable) Products associated with the Fleet.
        :param pulumi.Input[Sequence[pulumi.Input['FleetPropertyArgs']]] properties: Properties associated with the Fleet.
        :param pulumi.Input[Sequence[pulumi.Input['FleetResourceArgs']]] resources: Resources associated with the Fleet if resourceSelectionType is MANUAL.
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "resource_selection", resource_selection)
        if credentials is not None:
            pulumi.set(__self__, "credentials", credentials)
        if defined_tags is not None:
            pulumi.set(__self__, "defined_tags", defined_tags)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if details is not None:
            pulumi.set(__self__, "details", details)
        if environment_type is not None:
            pulumi.set(__self__, "environment_type", environment_type)
        if freeform_tags is not None:
            pulumi.set(__self__, "freeform_tags", freeform_tags)
        if is_target_auto_confirm is not None:
            pulumi.set(__self__, "is_target_auto_confirm", is_target_auto_confirm)
        if notification_preferences is not None:
            pulumi.set(__self__, "notification_preferences", notification_preferences)
        if parent_fleet_id is not None:
            pulumi.set(__self__, "parent_fleet_id", parent_fleet_id)
        if products is not None:
            pulumi.set(__self__, "products", products)
        if properties is not None:
            pulumi.set(__self__, "properties", properties)
        if resources is not None:
            pulumi.set(__self__, "resources", resources)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Input[_builtins.str]:
        """
        (Updatable) compartment OCID
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "compartment_id", value)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Input[_builtins.str]:
        """
        (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "display_name", value)

    @_builtins.property
    @pulumi.getter(name="resourceSelection")
    def resource_selection(self) -> pulumi.Input['FleetResourceSelectionArgs']:
        """
        (Updatable) Resource Selection Type
        """
        return pulumi.get(self, "resource_selection")

    @resource_selection.setter
    def resource_selection(self, value: pulumi.Input['FleetResourceSelectionArgs']):
        pulumi.set(self, "resource_selection", value)

    @_builtins.property
    @pulumi.getter
    def credentials(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FleetCredentialArgs']]]]:
        """
        Credentials associated with the Fleet.
        """
        return pulumi.get(self, "credentials")

    @credentials.setter
    def credentials(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FleetCredentialArgs']]]]):
        pulumi.set(self, "credentials", value)

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "defined_tags", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def details(self) -> Optional[pulumi.Input['FleetDetailsArgs']]:
        """
        Fleet Type
        """
        return pulumi.get(self, "details")

    @details.setter
    def details(self, value: Optional[pulumi.Input['FleetDetailsArgs']]):
        pulumi.set(self, "details", value)

    @_builtins.property
    @pulumi.getter(name="environmentType")
    def environment_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
        """
        return pulumi.get(self, "environment_type")

    @environment_type.setter
    def environment_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "environment_type", value)

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "freeform_tags", value)

    @_builtins.property
    @pulumi.getter(name="isTargetAutoConfirm")
    def is_target_auto_confirm(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        (Updatable) A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
        """
        return pulumi.get(self, "is_target_auto_confirm")

    @is_target_auto_confirm.setter
    def is_target_auto_confirm(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_target_auto_confirm", value)

    @_builtins.property
    @pulumi.getter(name="notificationPreferences")
    def notification_preferences(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FleetNotificationPreferenceArgs']]]]:
        """
        (Updatable) Notification Preferences associated with the Fleet.
        """
        return pulumi.get(self, "notification_preferences")

    @notification_preferences.setter
    def notification_preferences(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FleetNotificationPreferenceArgs']]]]):
        pulumi.set(self, "notification_preferences", value)

    @_builtins.property
    @pulumi.getter(name="parentFleetId")
    def parent_fleet_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet that would be the parent for this fleet.
        """
        return pulumi.get(self, "parent_fleet_id")

    @parent_fleet_id.setter
    def parent_fleet_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "parent_fleet_id", value)

    @_builtins.property
    @pulumi.getter
    def products(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        (Updatable) Products associated with the Fleet.
        """
        return pulumi.get(self, "products")

    @products.setter
    def products(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "products", value)

    @_builtins.property
    @pulumi.getter
    def properties(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FleetPropertyArgs']]]]:
        """
        Properties associated with the Fleet.
        """
        return pulumi.get(self, "properties")

    @properties.setter
    def properties(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FleetPropertyArgs']]]]):
        pulumi.set(self, "properties", value)

    @_builtins.property
    @pulumi.getter
    def resources(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FleetResourceArgs']]]]:
        """
        Resources associated with the Fleet if resourceSelectionType is MANUAL.
        """
        return pulumi.get(self, "resources")

    @resources.setter
    def resources(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FleetResourceArgs']]]]):
        pulumi.set(self, "resources", value)


@pulumi.input_type
class _FleetState:
    def __init__(__self__, *,
                 compartment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 credentials: Optional[pulumi.Input[Sequence[pulumi.Input['FleetCredentialArgs']]]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 details: Optional[pulumi.Input['FleetDetailsArgs']] = None,
                 display_name: Optional[pulumi.Input[_builtins.str]] = None,
                 environment_type: Optional[pulumi.Input[_builtins.str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 is_target_auto_confirm: Optional[pulumi.Input[_builtins.bool]] = None,
                 lifecycle_details: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_preferences: Optional[pulumi.Input[Sequence[pulumi.Input['FleetNotificationPreferenceArgs']]]] = None,
                 parent_fleet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 products: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 properties: Optional[pulumi.Input[Sequence[pulumi.Input['FleetPropertyArgs']]]] = None,
                 resource_region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_selection: Optional[pulumi.Input['FleetResourceSelectionArgs']] = None,
                 resources: Optional[pulumi.Input[Sequence[pulumi.Input['FleetResourceArgs']]]] = None,
                 state: Optional[pulumi.Input[_builtins.str]] = None,
                 system_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 time_created: Optional[pulumi.Input[_builtins.str]] = None,
                 time_updated: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Fleet resources.
        :param pulumi.Input[_builtins.str] compartment_id: (Updatable) compartment OCID
        :param pulumi.Input[Sequence[pulumi.Input['FleetCredentialArgs']]] credentials: Credentials associated with the Fleet.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        :param pulumi.Input[_builtins.str] description: (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        :param pulumi.Input['FleetDetailsArgs'] details: Fleet Type
        :param pulumi.Input[_builtins.str] display_name: (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        :param pulumi.Input[_builtins.str] environment_type: Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        :param pulumi.Input[_builtins.bool] is_target_auto_confirm: (Updatable) A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
        :param pulumi.Input[_builtins.str] lifecycle_details: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        :param pulumi.Input[Sequence[pulumi.Input['FleetNotificationPreferenceArgs']]] notification_preferences: (Updatable) Notification Preferences associated with the Fleet.
        :param pulumi.Input[_builtins.str] parent_fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet that would be the parent for this fleet.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] products: (Updatable) Products associated with the Fleet.
        :param pulumi.Input[Sequence[pulumi.Input['FleetPropertyArgs']]] properties: Properties associated with the Fleet.
        :param pulumi.Input[_builtins.str] resource_region: Associated region
        :param pulumi.Input['FleetResourceSelectionArgs'] resource_selection: (Updatable) Resource Selection Type
        :param pulumi.Input[Sequence[pulumi.Input['FleetResourceArgs']]] resources: Resources associated with the Fleet if resourceSelectionType is MANUAL.
        :param pulumi.Input[_builtins.str] state: The lifecycle state of the Fleet.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param pulumi.Input[_builtins.str] time_created: The time this resource was created. An RFC3339 formatted datetime string.
        :param pulumi.Input[_builtins.str] time_updated: The time this resource was last updated. An RFC3339 formatted datetime string.
        """
        if compartment_id is not None:
            pulumi.set(__self__, "compartment_id", compartment_id)
        if credentials is not None:
            pulumi.set(__self__, "credentials", credentials)
        if defined_tags is not None:
            pulumi.set(__self__, "defined_tags", defined_tags)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if details is not None:
            pulumi.set(__self__, "details", details)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if environment_type is not None:
            pulumi.set(__self__, "environment_type", environment_type)
        if freeform_tags is not None:
            pulumi.set(__self__, "freeform_tags", freeform_tags)
        if is_target_auto_confirm is not None:
            pulumi.set(__self__, "is_target_auto_confirm", is_target_auto_confirm)
        if lifecycle_details is not None:
            pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        if notification_preferences is not None:
            pulumi.set(__self__, "notification_preferences", notification_preferences)
        if parent_fleet_id is not None:
            pulumi.set(__self__, "parent_fleet_id", parent_fleet_id)
        if products is not None:
            pulumi.set(__self__, "products", products)
        if properties is not None:
            pulumi.set(__self__, "properties", properties)
        if resource_region is not None:
            pulumi.set(__self__, "resource_region", resource_region)
        if resource_selection is not None:
            pulumi.set(__self__, "resource_selection", resource_selection)
        if resources is not None:
            pulumi.set(__self__, "resources", resources)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if system_tags is not None:
            pulumi.set(__self__, "system_tags", system_tags)
        if time_created is not None:
            pulumi.set(__self__, "time_created", time_created)
        if time_updated is not None:
            pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        (Updatable) compartment OCID
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "compartment_id", value)

    @_builtins.property
    @pulumi.getter
    def credentials(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FleetCredentialArgs']]]]:
        """
        Credentials associated with the Fleet.
        """
        return pulumi.get(self, "credentials")

    @credentials.setter
    def credentials(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FleetCredentialArgs']]]]):
        pulumi.set(self, "credentials", value)

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "defined_tags", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def details(self) -> Optional[pulumi.Input['FleetDetailsArgs']]:
        """
        Fleet Type
        """
        return pulumi.get(self, "details")

    @details.setter
    def details(self, value: Optional[pulumi.Input['FleetDetailsArgs']]):
        pulumi.set(self, "details", value)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "display_name", value)

    @_builtins.property
    @pulumi.getter(name="environmentType")
    def environment_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
        """
        return pulumi.get(self, "environment_type")

    @environment_type.setter
    def environment_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "environment_type", value)

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "freeform_tags", value)

    @_builtins.property
    @pulumi.getter(name="isTargetAutoConfirm")
    def is_target_auto_confirm(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        (Updatable) A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
        """
        return pulumi.get(self, "is_target_auto_confirm")

    @is_target_auto_confirm.setter
    def is_target_auto_confirm(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_target_auto_confirm", value)

    @_builtins.property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        """
        return pulumi.get(self, "lifecycle_details")

    @lifecycle_details.setter
    def lifecycle_details(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lifecycle_details", value)

    @_builtins.property
    @pulumi.getter(name="notificationPreferences")
    def notification_preferences(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FleetNotificationPreferenceArgs']]]]:
        """
        (Updatable) Notification Preferences associated with the Fleet.
        """
        return pulumi.get(self, "notification_preferences")

    @notification_preferences.setter
    def notification_preferences(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FleetNotificationPreferenceArgs']]]]):
        pulumi.set(self, "notification_preferences", value)

    @_builtins.property
    @pulumi.getter(name="parentFleetId")
    def parent_fleet_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet that would be the parent for this fleet.
        """
        return pulumi.get(self, "parent_fleet_id")

    @parent_fleet_id.setter
    def parent_fleet_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "parent_fleet_id", value)

    @_builtins.property
    @pulumi.getter
    def products(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        (Updatable) Products associated with the Fleet.
        """
        return pulumi.get(self, "products")

    @products.setter
    def products(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "products", value)

    @_builtins.property
    @pulumi.getter
    def properties(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FleetPropertyArgs']]]]:
        """
        Properties associated with the Fleet.
        """
        return pulumi.get(self, "properties")

    @properties.setter
    def properties(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FleetPropertyArgs']]]]):
        pulumi.set(self, "properties", value)

    @_builtins.property
    @pulumi.getter(name="resourceRegion")
    def resource_region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Associated region
        """
        return pulumi.get(self, "resource_region")

    @resource_region.setter
    def resource_region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_region", value)

    @_builtins.property
    @pulumi.getter(name="resourceSelection")
    def resource_selection(self) -> Optional[pulumi.Input['FleetResourceSelectionArgs']]:
        """
        (Updatable) Resource Selection Type
        """
        return pulumi.get(self, "resource_selection")

    @resource_selection.setter
    def resource_selection(self, value: Optional[pulumi.Input['FleetResourceSelectionArgs']]):
        pulumi.set(self, "resource_selection", value)

    @_builtins.property
    @pulumi.getter
    def resources(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FleetResourceArgs']]]]:
        """
        Resources associated with the Fleet if resourceSelectionType is MANUAL.
        """
        return pulumi.get(self, "resources")

    @resources.setter
    def resources(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FleetResourceArgs']]]]):
        pulumi.set(self, "resources", value)

    @_builtins.property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The lifecycle state of the Fleet.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "state", value)

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @system_tags.setter
    def system_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "system_tags", value)

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time this resource was created. An RFC3339 formatted datetime string.
        """
        return pulumi.get(self, "time_created")

    @time_created.setter
    def time_created(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "time_created", value)

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time this resource was last updated. An RFC3339 formatted datetime string.
        """
        return pulumi.get(self, "time_updated")

    @time_updated.setter
    def time_updated(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "time_updated", value)


@pulumi.type_token("oci:FleetAppsManagement/fleet:Fleet")
class Fleet(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 credentials: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetCredentialArgs', 'FleetCredentialArgsDict']]]]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 details: Optional[pulumi.Input[Union['FleetDetailsArgs', 'FleetDetailsArgsDict']]] = None,
                 display_name: Optional[pulumi.Input[_builtins.str]] = None,
                 environment_type: Optional[pulumi.Input[_builtins.str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 is_target_auto_confirm: Optional[pulumi.Input[_builtins.bool]] = None,
                 notification_preferences: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetNotificationPreferenceArgs', 'FleetNotificationPreferenceArgsDict']]]]] = None,
                 parent_fleet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 products: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 properties: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetPropertyArgs', 'FleetPropertyArgsDict']]]]] = None,
                 resource_selection: Optional[pulumi.Input[Union['FleetResourceSelectionArgs', 'FleetResourceSelectionArgsDict']]] = None,
                 resources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetResourceArgs', 'FleetResourceArgsDict']]]]] = None,
                 __props__=None):
        """
        This resource provides the Fleet resource in Oracle Cloud Infrastructure Fleet Apps Management service.

        Create a fleet in Fleet Application Management.

        ## Import

        Fleets can be imported using the `id`, e.g.

        ```sh
        $ pulumi import oci:FleetAppsManagement/fleet:Fleet test_fleet "id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] compartment_id: (Updatable) compartment OCID
        :param pulumi.Input[Sequence[pulumi.Input[Union['FleetCredentialArgs', 'FleetCredentialArgsDict']]]] credentials: Credentials associated with the Fleet.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        :param pulumi.Input[_builtins.str] description: (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        :param pulumi.Input[Union['FleetDetailsArgs', 'FleetDetailsArgsDict']] details: Fleet Type
        :param pulumi.Input[_builtins.str] display_name: (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        :param pulumi.Input[_builtins.str] environment_type: Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        :param pulumi.Input[_builtins.bool] is_target_auto_confirm: (Updatable) A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
        :param pulumi.Input[Sequence[pulumi.Input[Union['FleetNotificationPreferenceArgs', 'FleetNotificationPreferenceArgsDict']]]] notification_preferences: (Updatable) Notification Preferences associated with the Fleet.
        :param pulumi.Input[_builtins.str] parent_fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet that would be the parent for this fleet.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] products: (Updatable) Products associated with the Fleet.
        :param pulumi.Input[Sequence[pulumi.Input[Union['FleetPropertyArgs', 'FleetPropertyArgsDict']]]] properties: Properties associated with the Fleet.
        :param pulumi.Input[Union['FleetResourceSelectionArgs', 'FleetResourceSelectionArgsDict']] resource_selection: (Updatable) Resource Selection Type
        :param pulumi.Input[Sequence[pulumi.Input[Union['FleetResourceArgs', 'FleetResourceArgsDict']]]] resources: Resources associated with the Fleet if resourceSelectionType is MANUAL.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: FleetArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource provides the Fleet resource in Oracle Cloud Infrastructure Fleet Apps Management service.

        Create a fleet in Fleet Application Management.

        ## Import

        Fleets can be imported using the `id`, e.g.

        ```sh
        $ pulumi import oci:FleetAppsManagement/fleet:Fleet test_fleet "id"
        ```

        :param str resource_name: The name of the resource.
        :param FleetArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(FleetArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[_builtins.str]] = None,
                 credentials: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetCredentialArgs', 'FleetCredentialArgsDict']]]]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 details: Optional[pulumi.Input[Union['FleetDetailsArgs', 'FleetDetailsArgsDict']]] = None,
                 display_name: Optional[pulumi.Input[_builtins.str]] = None,
                 environment_type: Optional[pulumi.Input[_builtins.str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 is_target_auto_confirm: Optional[pulumi.Input[_builtins.bool]] = None,
                 notification_preferences: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetNotificationPreferenceArgs', 'FleetNotificationPreferenceArgsDict']]]]] = None,
                 parent_fleet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 products: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 properties: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetPropertyArgs', 'FleetPropertyArgsDict']]]]] = None,
                 resource_selection: Optional[pulumi.Input[Union['FleetResourceSelectionArgs', 'FleetResourceSelectionArgsDict']]] = None,
                 resources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetResourceArgs', 'FleetResourceArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = FleetArgs.__new__(FleetArgs)

            if compartment_id is None and not opts.urn:
                raise TypeError("Missing required property 'compartment_id'")
            __props__.__dict__["compartment_id"] = compartment_id
            __props__.__dict__["credentials"] = credentials
            __props__.__dict__["defined_tags"] = defined_tags
            __props__.__dict__["description"] = description
            __props__.__dict__["details"] = details
            if display_name is None and not opts.urn:
                raise TypeError("Missing required property 'display_name'")
            __props__.__dict__["display_name"] = display_name
            __props__.__dict__["environment_type"] = environment_type
            __props__.__dict__["freeform_tags"] = freeform_tags
            __props__.__dict__["is_target_auto_confirm"] = is_target_auto_confirm
            __props__.__dict__["notification_preferences"] = notification_preferences
            __props__.__dict__["parent_fleet_id"] = parent_fleet_id
            __props__.__dict__["products"] = products
            __props__.__dict__["properties"] = properties
            if resource_selection is None and not opts.urn:
                raise TypeError("Missing required property 'resource_selection'")
            __props__.__dict__["resource_selection"] = resource_selection
            __props__.__dict__["resources"] = resources
            __props__.__dict__["lifecycle_details"] = None
            __props__.__dict__["resource_region"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["system_tags"] = None
            __props__.__dict__["time_created"] = None
            __props__.__dict__["time_updated"] = None
        super(Fleet, __self__).__init__(
            'oci:FleetAppsManagement/fleet:Fleet',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            compartment_id: Optional[pulumi.Input[_builtins.str]] = None,
            credentials: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetCredentialArgs', 'FleetCredentialArgsDict']]]]] = None,
            defined_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            details: Optional[pulumi.Input[Union['FleetDetailsArgs', 'FleetDetailsArgsDict']]] = None,
            display_name: Optional[pulumi.Input[_builtins.str]] = None,
            environment_type: Optional[pulumi.Input[_builtins.str]] = None,
            freeform_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            is_target_auto_confirm: Optional[pulumi.Input[_builtins.bool]] = None,
            lifecycle_details: Optional[pulumi.Input[_builtins.str]] = None,
            notification_preferences: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetNotificationPreferenceArgs', 'FleetNotificationPreferenceArgsDict']]]]] = None,
            parent_fleet_id: Optional[pulumi.Input[_builtins.str]] = None,
            products: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            properties: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetPropertyArgs', 'FleetPropertyArgsDict']]]]] = None,
            resource_region: Optional[pulumi.Input[_builtins.str]] = None,
            resource_selection: Optional[pulumi.Input[Union['FleetResourceSelectionArgs', 'FleetResourceSelectionArgsDict']]] = None,
            resources: Optional[pulumi.Input[Sequence[pulumi.Input[Union['FleetResourceArgs', 'FleetResourceArgsDict']]]]] = None,
            state: Optional[pulumi.Input[_builtins.str]] = None,
            system_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            time_created: Optional[pulumi.Input[_builtins.str]] = None,
            time_updated: Optional[pulumi.Input[_builtins.str]] = None) -> 'Fleet':
        """
        Get an existing Fleet resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] compartment_id: (Updatable) compartment OCID
        :param pulumi.Input[Sequence[pulumi.Input[Union['FleetCredentialArgs', 'FleetCredentialArgsDict']]]] credentials: Credentials associated with the Fleet.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        :param pulumi.Input[_builtins.str] description: (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        :param pulumi.Input[Union['FleetDetailsArgs', 'FleetDetailsArgsDict']] details: Fleet Type
        :param pulumi.Input[_builtins.str] display_name: (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        :param pulumi.Input[_builtins.str] environment_type: Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        :param pulumi.Input[_builtins.bool] is_target_auto_confirm: (Updatable) A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
        :param pulumi.Input[_builtins.str] lifecycle_details: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        :param pulumi.Input[Sequence[pulumi.Input[Union['FleetNotificationPreferenceArgs', 'FleetNotificationPreferenceArgsDict']]]] notification_preferences: (Updatable) Notification Preferences associated with the Fleet.
        :param pulumi.Input[_builtins.str] parent_fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet that would be the parent for this fleet.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] products: (Updatable) Products associated with the Fleet.
        :param pulumi.Input[Sequence[pulumi.Input[Union['FleetPropertyArgs', 'FleetPropertyArgsDict']]]] properties: Properties associated with the Fleet.
        :param pulumi.Input[_builtins.str] resource_region: Associated region
        :param pulumi.Input[Union['FleetResourceSelectionArgs', 'FleetResourceSelectionArgsDict']] resource_selection: (Updatable) Resource Selection Type
        :param pulumi.Input[Sequence[pulumi.Input[Union['FleetResourceArgs', 'FleetResourceArgsDict']]]] resources: Resources associated with the Fleet if resourceSelectionType is MANUAL.
        :param pulumi.Input[_builtins.str] state: The lifecycle state of the Fleet.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param pulumi.Input[_builtins.str] time_created: The time this resource was created. An RFC3339 formatted datetime string.
        :param pulumi.Input[_builtins.str] time_updated: The time this resource was last updated. An RFC3339 formatted datetime string.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _FleetState.__new__(_FleetState)

        __props__.__dict__["compartment_id"] = compartment_id
        __props__.__dict__["credentials"] = credentials
        __props__.__dict__["defined_tags"] = defined_tags
        __props__.__dict__["description"] = description
        __props__.__dict__["details"] = details
        __props__.__dict__["display_name"] = display_name
        __props__.__dict__["environment_type"] = environment_type
        __props__.__dict__["freeform_tags"] = freeform_tags
        __props__.__dict__["is_target_auto_confirm"] = is_target_auto_confirm
        __props__.__dict__["lifecycle_details"] = lifecycle_details
        __props__.__dict__["notification_preferences"] = notification_preferences
        __props__.__dict__["parent_fleet_id"] = parent_fleet_id
        __props__.__dict__["products"] = products
        __props__.__dict__["properties"] = properties
        __props__.__dict__["resource_region"] = resource_region
        __props__.__dict__["resource_selection"] = resource_selection
        __props__.__dict__["resources"] = resources
        __props__.__dict__["state"] = state
        __props__.__dict__["system_tags"] = system_tags
        __props__.__dict__["time_created"] = time_created
        __props__.__dict__["time_updated"] = time_updated
        return Fleet(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Output[_builtins.str]:
        """
        (Updatable) compartment OCID
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter
    def credentials(self) -> pulumi.Output[Sequence['outputs.FleetCredential']]:
        """
        Credentials associated with the Fleet.
        """
        return pulumi.get(self, "credentials")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def details(self) -> pulumi.Output['outputs.FleetDetails']:
        """
        Fleet Type
        """
        return pulumi.get(self, "details")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Output[_builtins.str]:
        """
        (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="environmentType")
    def environment_type(self) -> pulumi.Output[_builtins.str]:
        """
        Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
        """
        return pulumi.get(self, "environment_type")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter(name="isTargetAutoConfirm")
    def is_target_auto_confirm(self) -> pulumi.Output[_builtins.bool]:
        """
        (Updatable) A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
        """
        return pulumi.get(self, "is_target_auto_confirm")

    @_builtins.property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> pulumi.Output[_builtins.str]:
        """
        A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        """
        return pulumi.get(self, "lifecycle_details")

    @_builtins.property
    @pulumi.getter(name="notificationPreferences")
    def notification_preferences(self) -> pulumi.Output[Sequence['outputs.FleetNotificationPreference']]:
        """
        (Updatable) Notification Preferences associated with the Fleet.
        """
        return pulumi.get(self, "notification_preferences")

    @_builtins.property
    @pulumi.getter(name="parentFleetId")
    def parent_fleet_id(self) -> pulumi.Output[_builtins.str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet that would be the parent for this fleet.
        """
        return pulumi.get(self, "parent_fleet_id")

    @_builtins.property
    @pulumi.getter
    def products(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        (Updatable) Products associated with the Fleet.
        """
        return pulumi.get(self, "products")

    @_builtins.property
    @pulumi.getter
    def properties(self) -> pulumi.Output[Sequence['outputs.FleetProperty']]:
        """
        Properties associated with the Fleet.
        """
        return pulumi.get(self, "properties")

    @_builtins.property
    @pulumi.getter(name="resourceRegion")
    def resource_region(self) -> pulumi.Output[_builtins.str]:
        """
        Associated region
        """
        return pulumi.get(self, "resource_region")

    @_builtins.property
    @pulumi.getter(name="resourceSelection")
    def resource_selection(self) -> pulumi.Output['outputs.FleetResourceSelection']:
        """
        (Updatable) Resource Selection Type
        """
        return pulumi.get(self, "resource_selection")

    @_builtins.property
    @pulumi.getter
    def resources(self) -> pulumi.Output[Sequence['outputs.FleetResource']]:
        """
        Resources associated with the Fleet if resourceSelectionType is MANUAL.
        """
        return pulumi.get(self, "resources")

    @_builtins.property
    @pulumi.getter
    def state(self) -> pulumi.Output[_builtins.str]:
        """
        The lifecycle state of the Fleet.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> pulumi.Output[_builtins.str]:
        """
        The time this resource was created. An RFC3339 formatted datetime string.
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> pulumi.Output[_builtins.str]:
        """
        The time this resource was last updated. An RFC3339 formatted datetime string.
        """
        return pulumi.get(self, "time_updated")

