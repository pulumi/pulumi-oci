# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetSchedulerJobJobActivityResourcesResult',
    'AwaitableGetSchedulerJobJobActivityResourcesResult',
    'get_scheduler_job_job_activity_resources',
    'get_scheduler_job_job_activity_resources_output',
]

@pulumi.output_type
class GetSchedulerJobJobActivityResourcesResult:
    """
    A collection of values returned by getSchedulerJobJobActivityResources.
    """
    def __init__(__self__, filters=None, id=None, job_activity_id=None, resource_collections=None, resource_task_id=None, scheduler_job_id=None, sequence=None, step_name=None, target_name=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if job_activity_id and not isinstance(job_activity_id, str):
            raise TypeError("Expected argument 'job_activity_id' to be a str")
        pulumi.set(__self__, "job_activity_id", job_activity_id)
        if resource_collections and not isinstance(resource_collections, list):
            raise TypeError("Expected argument 'resource_collections' to be a list")
        pulumi.set(__self__, "resource_collections", resource_collections)
        if resource_task_id and not isinstance(resource_task_id, str):
            raise TypeError("Expected argument 'resource_task_id' to be a str")
        pulumi.set(__self__, "resource_task_id", resource_task_id)
        if scheduler_job_id and not isinstance(scheduler_job_id, str):
            raise TypeError("Expected argument 'scheduler_job_id' to be a str")
        pulumi.set(__self__, "scheduler_job_id", scheduler_job_id)
        if sequence and not isinstance(sequence, str):
            raise TypeError("Expected argument 'sequence' to be a str")
        pulumi.set(__self__, "sequence", sequence)
        if step_name and not isinstance(step_name, str):
            raise TypeError("Expected argument 'step_name' to be a str")
        pulumi.set(__self__, "step_name", step_name)
        if target_name and not isinstance(target_name, str):
            raise TypeError("Expected argument 'target_name' to be a str")
        pulumi.set(__self__, "target_name", target_name)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetSchedulerJobJobActivityResourcesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="jobActivityId")
    def job_activity_id(self) -> str:
        return pulumi.get(self, "job_activity_id")

    @property
    @pulumi.getter(name="resourceCollections")
    def resource_collections(self) -> Sequence['outputs.GetSchedulerJobJobActivityResourcesResourceCollectionResult']:
        """
        The list of resource_collection.
        """
        return pulumi.get(self, "resource_collections")

    @property
    @pulumi.getter(name="resourceTaskId")
    def resource_task_id(self) -> Optional[str]:
        return pulumi.get(self, "resource_task_id")

    @property
    @pulumi.getter(name="schedulerJobId")
    def scheduler_job_id(self) -> str:
        return pulumi.get(self, "scheduler_job_id")

    @property
    @pulumi.getter
    def sequence(self) -> Optional[str]:
        """
        The sequence of the Resource.
        """
        return pulumi.get(self, "sequence")

    @property
    @pulumi.getter(name="stepName")
    def step_name(self) -> Optional[str]:
        return pulumi.get(self, "step_name")

    @property
    @pulumi.getter(name="targetName")
    def target_name(self) -> Optional[str]:
        """
        Target Name.
        """
        return pulumi.get(self, "target_name")


class AwaitableGetSchedulerJobJobActivityResourcesResult(GetSchedulerJobJobActivityResourcesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSchedulerJobJobActivityResourcesResult(
            filters=self.filters,
            id=self.id,
            job_activity_id=self.job_activity_id,
            resource_collections=self.resource_collections,
            resource_task_id=self.resource_task_id,
            scheduler_job_id=self.scheduler_job_id,
            sequence=self.sequence,
            step_name=self.step_name,
            target_name=self.target_name)


def get_scheduler_job_job_activity_resources(filters: Optional[Sequence[Union['GetSchedulerJobJobActivityResourcesFilterArgs', 'GetSchedulerJobJobActivityResourcesFilterArgsDict']]] = None,
                                             job_activity_id: Optional[str] = None,
                                             resource_task_id: Optional[str] = None,
                                             scheduler_job_id: Optional[str] = None,
                                             sequence: Optional[str] = None,
                                             step_name: Optional[str] = None,
                                             target_name: Optional[str] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSchedulerJobJobActivityResourcesResult:
    """
    This data source provides the list of Scheduler Job Job Activity Resources in Oracle Cloud Infrastructure Fleet Apps Management service.

    Returns a list of resources for an Activity Execution.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_scheduler_job_job_activity_resources = oci.FleetAppsManagement.get_scheduler_job_job_activity_resources(job_activity_id=test_job_activity["id"],
        scheduler_job_id=test_job["id"],
        resource_task_id=test_resource_task["id"],
        sequence=scheduler_job_job_activity_resource_sequence,
        step_name=scheduler_job_job_activity_resource_step_name,
        target_name=test_target["name"])
    ```


    :param str job_activity_id: unique jobActivity identifier
    :param str resource_task_id: Task Id
    :param str scheduler_job_id: unique SchedulerJob identifier
    :param str sequence: Task Order Sequence
    :param str step_name: Unique step name
    :param str target_name: Unique target name
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['jobActivityId'] = job_activity_id
    __args__['resourceTaskId'] = resource_task_id
    __args__['schedulerJobId'] = scheduler_job_id
    __args__['sequence'] = sequence
    __args__['stepName'] = step_name
    __args__['targetName'] = target_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:FleetAppsManagement/getSchedulerJobJobActivityResources:getSchedulerJobJobActivityResources', __args__, opts=opts, typ=GetSchedulerJobJobActivityResourcesResult).value

    return AwaitableGetSchedulerJobJobActivityResourcesResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        job_activity_id=pulumi.get(__ret__, 'job_activity_id'),
        resource_collections=pulumi.get(__ret__, 'resource_collections'),
        resource_task_id=pulumi.get(__ret__, 'resource_task_id'),
        scheduler_job_id=pulumi.get(__ret__, 'scheduler_job_id'),
        sequence=pulumi.get(__ret__, 'sequence'),
        step_name=pulumi.get(__ret__, 'step_name'),
        target_name=pulumi.get(__ret__, 'target_name'))
def get_scheduler_job_job_activity_resources_output(filters: Optional[pulumi.Input[Optional[Sequence[Union['GetSchedulerJobJobActivityResourcesFilterArgs', 'GetSchedulerJobJobActivityResourcesFilterArgsDict']]]]] = None,
                                                    job_activity_id: Optional[pulumi.Input[str]] = None,
                                                    resource_task_id: Optional[pulumi.Input[Optional[str]]] = None,
                                                    scheduler_job_id: Optional[pulumi.Input[str]] = None,
                                                    sequence: Optional[pulumi.Input[Optional[str]]] = None,
                                                    step_name: Optional[pulumi.Input[Optional[str]]] = None,
                                                    target_name: Optional[pulumi.Input[Optional[str]]] = None,
                                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSchedulerJobJobActivityResourcesResult]:
    """
    This data source provides the list of Scheduler Job Job Activity Resources in Oracle Cloud Infrastructure Fleet Apps Management service.

    Returns a list of resources for an Activity Execution.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_scheduler_job_job_activity_resources = oci.FleetAppsManagement.get_scheduler_job_job_activity_resources(job_activity_id=test_job_activity["id"],
        scheduler_job_id=test_job["id"],
        resource_task_id=test_resource_task["id"],
        sequence=scheduler_job_job_activity_resource_sequence,
        step_name=scheduler_job_job_activity_resource_step_name,
        target_name=test_target["name"])
    ```


    :param str job_activity_id: unique jobActivity identifier
    :param str resource_task_id: Task Id
    :param str scheduler_job_id: unique SchedulerJob identifier
    :param str sequence: Task Order Sequence
    :param str step_name: Unique step name
    :param str target_name: Unique target name
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['jobActivityId'] = job_activity_id
    __args__['resourceTaskId'] = resource_task_id
    __args__['schedulerJobId'] = scheduler_job_id
    __args__['sequence'] = sequence
    __args__['stepName'] = step_name
    __args__['targetName'] = target_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:FleetAppsManagement/getSchedulerJobJobActivityResources:getSchedulerJobJobActivityResources', __args__, opts=opts, typ=GetSchedulerJobJobActivityResourcesResult)
    return __ret__.apply(lambda __response__: GetSchedulerJobJobActivityResourcesResult(
        filters=pulumi.get(__response__, 'filters'),
        id=pulumi.get(__response__, 'id'),
        job_activity_id=pulumi.get(__response__, 'job_activity_id'),
        resource_collections=pulumi.get(__response__, 'resource_collections'),
        resource_task_id=pulumi.get(__response__, 'resource_task_id'),
        scheduler_job_id=pulumi.get(__response__, 'scheduler_job_id'),
        sequence=pulumi.get(__response__, 'sequence'),
        step_name=pulumi.get(__response__, 'step_name'),
        target_name=pulumi.get(__response__, 'target_name')))
