# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetGenericArtifactsContentResult',
    'AwaitableGetGenericArtifactsContentResult',
    'get_generic_artifacts_content',
    'get_generic_artifacts_content_output',
]

@pulumi.output_type
class GetGenericArtifactsContentResult:
    """
    A collection of values returned by getGenericArtifactsContent.
    """
    def __init__(__self__, artifact_id=None, id=None):
        if artifact_id and not isinstance(artifact_id, str):
            raise TypeError("Expected argument 'artifact_id' to be a str")
        pulumi.set(__self__, "artifact_id", artifact_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="artifactId")
    def artifact_id(self) -> str:
        return pulumi.get(self, "artifact_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetGenericArtifactsContentResult(GetGenericArtifactsContentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGenericArtifactsContentResult(
            artifact_id=self.artifact_id,
            id=self.id)


def get_generic_artifacts_content(artifact_id: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGenericArtifactsContentResult:
    """
    This data source provides details about a specific Generic Artifacts Content resource in Oracle Cloud Infrastructure Generic Artifacts Content service.

    Gets the specified artifact's content.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_generic_artifacts_content = oci.GenericArtifactsContent.get_generic_artifacts_content(artifact_id=oci_generic_artifacts_content_artifact["test_artifact"]["id"])
    ```


    :param str artifact_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the artifact.  Example: `ocid1.genericartifact.oc1..exampleuniqueID`
    """
    __args__ = dict()
    __args__['artifactId'] = artifact_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:GenericArtifactsContent/getGenericArtifactsContent:getGenericArtifactsContent', __args__, opts=opts, typ=GetGenericArtifactsContentResult).value

    return AwaitableGetGenericArtifactsContentResult(
        artifact_id=pulumi.get(__ret__, 'artifact_id'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_generic_artifacts_content)
def get_generic_artifacts_content_output(artifact_id: Optional[pulumi.Input[str]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGenericArtifactsContentResult]:
    """
    This data source provides details about a specific Generic Artifacts Content resource in Oracle Cloud Infrastructure Generic Artifacts Content service.

    Gets the specified artifact's content.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_generic_artifacts_content = oci.GenericArtifactsContent.get_generic_artifacts_content(artifact_id=oci_generic_artifacts_content_artifact["test_artifact"]["id"])
    ```


    :param str artifact_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the artifact.  Example: `ocid1.genericartifact.oc1..exampleuniqueID`
    """
    ...
