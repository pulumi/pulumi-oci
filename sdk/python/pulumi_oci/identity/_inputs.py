# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'AuthenticationPolicyNetworkPolicyArgs',
    'AuthenticationPolicyPasswordPolicyArgs',
    'DomainReplicaRegionArgs',
    'DomainsAccountRecoverySettingIdcsCreatedByArgs',
    'DomainsAccountRecoverySettingIdcsLastModifiedByArgs',
    'DomainsAccountRecoverySettingMetaArgs',
    'DomainsAccountRecoverySettingTagArgs',
    'DomainsApiKeyIdcsCreatedByArgs',
    'DomainsApiKeyIdcsLastModifiedByArgs',
    'DomainsApiKeyMetaArgs',
    'DomainsApiKeyTagArgs',
    'DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs',
    'DomainsApiKeyUserArgs',
    'DomainsAppAccountArgs',
    'DomainsAppAdminRoleArgs',
    'DomainsAppAliasAppArgs',
    'DomainsAppAllowedScopeArgs',
    'DomainsAppAllowedTagArgs',
    'DomainsAppAppSignonPolicyArgs',
    'DomainsAppAppsNetworkPerimeterArgs',
    'DomainsAppAsOpcServiceArgs',
    'DomainsAppAttrRenderingMetadataArgs',
    'DomainsAppBasedOnTemplateArgs',
    'DomainsAppCertificateArgs',
    'DomainsAppCloudControlPropertyArgs',
    'DomainsAppEditableAttributeArgs',
    'DomainsAppGrantArgs',
    'DomainsAppGrantedAppRoleArgs',
    'DomainsAppIdcsCreatedByArgs',
    'DomainsAppIdcsLastModifiedByArgs',
    'DomainsAppIdentityProviderArgs',
    'DomainsAppIdpPolicyArgs',
    'DomainsAppMetaArgs',
    'DomainsAppProtectableSecondaryAudienceArgs',
    'DomainsAppRadiusPolicyArgs',
    'DomainsAppRoleAppArgs',
    'DomainsAppRoleIdcsCreatedByArgs',
    'DomainsAppRoleIdcsLastModifiedByArgs',
    'DomainsAppRoleMemberArgs',
    'DomainsAppRoleMetaArgs',
    'DomainsAppRoleTagArgs',
    'DomainsAppSamlServiceProviderArgs',
    'DomainsAppScopeArgs',
    'DomainsAppServiceParamArgs',
    'DomainsAppSignonPolicyArgs',
    'DomainsAppTagArgs',
    'DomainsAppTermsOfUseArgs',
    'DomainsAppTrustPolicyArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicyArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResourceArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicyArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatchArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionkerberosRealmAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationPropertyArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfigurationArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundleArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationPropertyArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundleArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridgeArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClassArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredentialArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionmulticloudServiceAppAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturnArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionrequestableAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttributeArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttributeArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttributeArgs',
    'DomainsAppUrnietfparamsscimschemasoracleidcsextensionwebTierPolicyAppArgs',
    'DomainsAppUserRoleArgs',
    'DomainsAuthTokenIdcsCreatedByArgs',
    'DomainsAuthTokenIdcsLastModifiedByArgs',
    'DomainsAuthTokenMetaArgs',
    'DomainsAuthTokenTagArgs',
    'DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs',
    'DomainsAuthTokenUserArgs',
    'DomainsAuthenticationFactorSettingBypassCodeSettingsArgs',
    'DomainsAuthenticationFactorSettingClientAppSettingsArgs',
    'DomainsAuthenticationFactorSettingCompliancePolicyArgs',
    'DomainsAuthenticationFactorSettingEmailSettingsArgs',
    'DomainsAuthenticationFactorSettingEndpointRestrictionsArgs',
    'DomainsAuthenticationFactorSettingIdcsCreatedByArgs',
    'DomainsAuthenticationFactorSettingIdcsLastModifiedByArgs',
    'DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs',
    'DomainsAuthenticationFactorSettingMetaArgs',
    'DomainsAuthenticationFactorSettingNotificationSettingsArgs',
    'DomainsAuthenticationFactorSettingTagArgs',
    'DomainsAuthenticationFactorSettingThirdPartyFactorArgs',
    'DomainsAuthenticationFactorSettingTotpSettingsArgs',
    'DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs',
    'DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsArgs',
    'DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettingsArgs',
    'DomainsCustomerSecretKeyIdcsCreatedByArgs',
    'DomainsCustomerSecretKeyIdcsLastModifiedByArgs',
    'DomainsCustomerSecretKeyMetaArgs',
    'DomainsCustomerSecretKeyTagArgs',
    'DomainsCustomerSecretKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs',
    'DomainsCustomerSecretKeyUserArgs',
    'DomainsDynamicResourceGroupDynamicGroupAppRoleArgs',
    'DomainsDynamicResourceGroupGrantArgs',
    'DomainsDynamicResourceGroupIdcsCreatedByArgs',
    'DomainsDynamicResourceGroupIdcsLastModifiedByArgs',
    'DomainsDynamicResourceGroupMetaArgs',
    'DomainsDynamicResourceGroupTagArgs',
    'DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs',
    'DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs',
    'DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs',
    'DomainsGrantAppArgs',
    'DomainsGrantAppEntitlementCollectionArgs',
    'DomainsGrantEntitlementArgs',
    'DomainsGrantGranteeArgs',
    'DomainsGrantGrantorArgs',
    'DomainsGrantIdcsCreatedByArgs',
    'DomainsGrantIdcsLastModifiedByArgs',
    'DomainsGrantMetaArgs',
    'DomainsGrantTagArgs',
    'DomainsGroupIdcsCreatedByArgs',
    'DomainsGroupIdcsLastModifiedByArgs',
    'DomainsGroupMemberArgs',
    'DomainsGroupMetaArgs',
    'DomainsGroupTagArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRoleArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrantArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwnerArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicyArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromAppArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupArgs',
    'DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupArgs',
    'DomainsIdentityProviderCorrelationPolicyArgs',
    'DomainsIdentityProviderIdcsCreatedByArgs',
    'DomainsIdentityProviderIdcsLastModifiedByArgs',
    'DomainsIdentityProviderJitUserProvAssignedGroupArgs',
    'DomainsIdentityProviderJitUserProvAttributesArgs',
    'DomainsIdentityProviderJitUserProvGroupMappingArgs',
    'DomainsIdentityProviderMetaArgs',
    'DomainsIdentityProviderTagArgs',
    'DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs',
    'DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderArgs',
    'DomainsIdentitySettingIdcsCreatedByArgs',
    'DomainsIdentitySettingIdcsLastModifiedByArgs',
    'DomainsIdentitySettingMetaArgs',
    'DomainsIdentitySettingMyProfileArgs',
    'DomainsIdentitySettingPosixGidArgs',
    'DomainsIdentitySettingPosixUidArgs',
    'DomainsIdentitySettingTagArgs',
    'DomainsIdentitySettingTokenArgs',
    'DomainsKmsiSettingIdcsCreatedByArgs',
    'DomainsKmsiSettingIdcsLastModifiedByArgs',
    'DomainsKmsiSettingMetaArgs',
    'DomainsKmsiSettingTagArgs',
    'DomainsMyApiKeyIdcsCreatedByArgs',
    'DomainsMyApiKeyIdcsLastModifiedByArgs',
    'DomainsMyApiKeyMetaArgs',
    'DomainsMyApiKeyTagArgs',
    'DomainsMyApiKeyUserArgs',
    'DomainsMyAuthTokenIdcsCreatedByArgs',
    'DomainsMyAuthTokenIdcsLastModifiedByArgs',
    'DomainsMyAuthTokenMetaArgs',
    'DomainsMyAuthTokenTagArgs',
    'DomainsMyAuthTokenUserArgs',
    'DomainsMyCustomerSecretKeyIdcsCreatedByArgs',
    'DomainsMyCustomerSecretKeyIdcsLastModifiedByArgs',
    'DomainsMyCustomerSecretKeyMetaArgs',
    'DomainsMyCustomerSecretKeyTagArgs',
    'DomainsMyCustomerSecretKeyUserArgs',
    'DomainsMyOauth2clientCredentialIdcsCreatedByArgs',
    'DomainsMyOauth2clientCredentialIdcsLastModifiedByArgs',
    'DomainsMyOauth2clientCredentialMetaArgs',
    'DomainsMyOauth2clientCredentialScopeArgs',
    'DomainsMyOauth2clientCredentialTagArgs',
    'DomainsMyOauth2clientCredentialUserArgs',
    'DomainsMyRequestIdcsCreatedByArgs',
    'DomainsMyRequestIdcsLastModifiedByArgs',
    'DomainsMyRequestMetaArgs',
    'DomainsMyRequestRequestingArgs',
    'DomainsMyRequestRequestorArgs',
    'DomainsMyRequestTagArgs',
    'DomainsMySmtpCredentialIdcsCreatedByArgs',
    'DomainsMySmtpCredentialIdcsLastModifiedByArgs',
    'DomainsMySmtpCredentialMetaArgs',
    'DomainsMySmtpCredentialTagArgs',
    'DomainsMySmtpCredentialUserArgs',
    'DomainsMySupportAccountIdcsCreatedByArgs',
    'DomainsMySupportAccountIdcsLastModifiedByArgs',
    'DomainsMySupportAccountMetaArgs',
    'DomainsMySupportAccountTagArgs',
    'DomainsMySupportAccountUserArgs',
    'DomainsMyUserDbCredentialIdcsCreatedByArgs',
    'DomainsMyUserDbCredentialIdcsLastModifiedByArgs',
    'DomainsMyUserDbCredentialMetaArgs',
    'DomainsMyUserDbCredentialTagArgs',
    'DomainsMyUserDbCredentialUserArgs',
    'DomainsOauth2clientCredentialIdcsCreatedByArgs',
    'DomainsOauth2clientCredentialIdcsLastModifiedByArgs',
    'DomainsOauth2clientCredentialMetaArgs',
    'DomainsOauth2clientCredentialScopeArgs',
    'DomainsOauth2clientCredentialTagArgs',
    'DomainsOauth2clientCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs',
    'DomainsOauth2clientCredentialUserArgs',
    'DomainsPasswordPolicyConfiguredPasswordPolicyRuleArgs',
    'DomainsPasswordPolicyGroupArgs',
    'DomainsPasswordPolicyIdcsCreatedByArgs',
    'DomainsPasswordPolicyIdcsLastModifiedByArgs',
    'DomainsPasswordPolicyMetaArgs',
    'DomainsPasswordPolicyTagArgs',
    'DomainsSecurityQuestionIdcsCreatedByArgs',
    'DomainsSecurityQuestionIdcsLastModifiedByArgs',
    'DomainsSecurityQuestionMetaArgs',
    'DomainsSecurityQuestionQuestionTextArgs',
    'DomainsSecurityQuestionSettingIdcsCreatedByArgs',
    'DomainsSecurityQuestionSettingIdcsLastModifiedByArgs',
    'DomainsSecurityQuestionSettingMetaArgs',
    'DomainsSecurityQuestionSettingTagArgs',
    'DomainsSecurityQuestionTagArgs',
    'DomainsSmtpCredentialIdcsCreatedByArgs',
    'DomainsSmtpCredentialIdcsLastModifiedByArgs',
    'DomainsSmtpCredentialMetaArgs',
    'DomainsSmtpCredentialTagArgs',
    'DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs',
    'DomainsSmtpCredentialUserArgs',
    'DomainsUserAddressArgs',
    'DomainsUserDbCredentialIdcsCreatedByArgs',
    'DomainsUserDbCredentialIdcsLastModifiedByArgs',
    'DomainsUserDbCredentialMetaArgs',
    'DomainsUserDbCredentialTagArgs',
    'DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs',
    'DomainsUserDbCredentialUserArgs',
    'DomainsUserEmailArgs',
    'DomainsUserEntitlementArgs',
    'DomainsUserGroupArgs',
    'DomainsUserIdcsCreatedByArgs',
    'DomainsUserIdcsLastModifiedByArgs',
    'DomainsUserImArgs',
    'DomainsUserMetaArgs',
    'DomainsUserNameArgs',
    'DomainsUserPhoneNumberArgs',
    'DomainsUserPhotoArgs',
    'DomainsUserRoleArgs',
    'DomainsUserTagArgs',
    'DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs',
    'DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodeArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicyArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs',
    'DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs',
    'DomainsUserX509certificateArgs',
    'NetworkSourceVirtualSourceListArgs',
    'TagValidatorArgs',
    'UserCapabilityArgs',
    'GetAllowedDomainLicenseTypesFilterArgs',
    'GetApiKeysFilterArgs',
    'GetAuthTokensFilterArgs',
    'GetAvailabilityDomainsFilterArgs',
    'GetCompartmentsFilterArgs',
    'GetCostTrackingTagsFilterArgs',
    'GetCustomerSecretKeysFilterArgs',
    'GetDbCredentialsFilterArgs',
    'GetDomainsFilterArgs',
    'GetDynamicGroupsFilterArgs',
    'GetFaultDomainsFilterArgs',
    'GetGroupsFilterArgs',
    'GetIamWorkRequestErrorsFilterArgs',
    'GetIamWorkRequestLogsFilterArgs',
    'GetIamWorkRequestsFilterArgs',
    'GetIdentityProviderGroupsFilterArgs',
    'GetIdentityProvidersFilterArgs',
    'GetIdpGroupMappingsFilterArgs',
    'GetNetworkSourcesFilterArgs',
    'GetPoliciesFilterArgs',
    'GetRegionSubscriptionsFilterArgs',
    'GetRegionsFilterArgs',
    'GetSmtpCredentialsFilterArgs',
    'GetTagDefaultsFilterArgs',
    'GetTagNamespacesFilterArgs',
    'GetTagStandardTagNamespaceTemplatesFilterArgs',
    'GetTagsFilterArgs',
    'GetUserGroupMembershipsFilterArgs',
    'GetUsersFilterArgs',
]

@pulumi.input_type
class AuthenticationPolicyNetworkPolicyArgs:
    def __init__(__self__, *,
                 network_source_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input[str]]] network_source_ids: (Updatable) Network Source ids
        """
        AuthenticationPolicyNetworkPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            network_source_ids=network_source_ids,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             network_source_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'networkSourceIds' in kwargs:
            network_source_ids = kwargs['networkSourceIds']

        if network_source_ids is not None:
            _setter("network_source_ids", network_source_ids)

    @property
    @pulumi.getter(name="networkSourceIds")
    def network_source_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) Network Source ids
        """
        return pulumi.get(self, "network_source_ids")

    @network_source_ids.setter
    def network_source_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "network_source_ids", value)


@pulumi.input_type
class AuthenticationPolicyPasswordPolicyArgs:
    def __init__(__self__, *,
                 is_lowercase_characters_required: Optional[pulumi.Input[bool]] = None,
                 is_numeric_characters_required: Optional[pulumi.Input[bool]] = None,
                 is_special_characters_required: Optional[pulumi.Input[bool]] = None,
                 is_uppercase_characters_required: Optional[pulumi.Input[bool]] = None,
                 is_username_containment_allowed: Optional[pulumi.Input[bool]] = None,
                 minimum_password_length: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[bool] is_lowercase_characters_required: (Updatable) At least one lower case character required.
        :param pulumi.Input[bool] is_numeric_characters_required: (Updatable) At least one numeric character required.
        :param pulumi.Input[bool] is_special_characters_required: (Updatable) At least one special character required.
        :param pulumi.Input[bool] is_uppercase_characters_required: (Updatable) At least one uppercase character required.
        :param pulumi.Input[bool] is_username_containment_allowed: (Updatable) User name is allowed to be part of the password.
        :param pulumi.Input[int] minimum_password_length: (Updatable) Minimum password length required.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        AuthenticationPolicyPasswordPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            is_lowercase_characters_required=is_lowercase_characters_required,
            is_numeric_characters_required=is_numeric_characters_required,
            is_special_characters_required=is_special_characters_required,
            is_uppercase_characters_required=is_uppercase_characters_required,
            is_username_containment_allowed=is_username_containment_allowed,
            minimum_password_length=minimum_password_length,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             is_lowercase_characters_required: Optional[pulumi.Input[bool]] = None,
             is_numeric_characters_required: Optional[pulumi.Input[bool]] = None,
             is_special_characters_required: Optional[pulumi.Input[bool]] = None,
             is_uppercase_characters_required: Optional[pulumi.Input[bool]] = None,
             is_username_containment_allowed: Optional[pulumi.Input[bool]] = None,
             minimum_password_length: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'isLowercaseCharactersRequired' in kwargs:
            is_lowercase_characters_required = kwargs['isLowercaseCharactersRequired']
        if 'isNumericCharactersRequired' in kwargs:
            is_numeric_characters_required = kwargs['isNumericCharactersRequired']
        if 'isSpecialCharactersRequired' in kwargs:
            is_special_characters_required = kwargs['isSpecialCharactersRequired']
        if 'isUppercaseCharactersRequired' in kwargs:
            is_uppercase_characters_required = kwargs['isUppercaseCharactersRequired']
        if 'isUsernameContainmentAllowed' in kwargs:
            is_username_containment_allowed = kwargs['isUsernameContainmentAllowed']
        if 'minimumPasswordLength' in kwargs:
            minimum_password_length = kwargs['minimumPasswordLength']

        if is_lowercase_characters_required is not None:
            _setter("is_lowercase_characters_required", is_lowercase_characters_required)
        if is_numeric_characters_required is not None:
            _setter("is_numeric_characters_required", is_numeric_characters_required)
        if is_special_characters_required is not None:
            _setter("is_special_characters_required", is_special_characters_required)
        if is_uppercase_characters_required is not None:
            _setter("is_uppercase_characters_required", is_uppercase_characters_required)
        if is_username_containment_allowed is not None:
            _setter("is_username_containment_allowed", is_username_containment_allowed)
        if minimum_password_length is not None:
            _setter("minimum_password_length", minimum_password_length)

    @property
    @pulumi.getter(name="isLowercaseCharactersRequired")
    def is_lowercase_characters_required(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) At least one lower case character required.
        """
        return pulumi.get(self, "is_lowercase_characters_required")

    @is_lowercase_characters_required.setter
    def is_lowercase_characters_required(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_lowercase_characters_required", value)

    @property
    @pulumi.getter(name="isNumericCharactersRequired")
    def is_numeric_characters_required(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) At least one numeric character required.
        """
        return pulumi.get(self, "is_numeric_characters_required")

    @is_numeric_characters_required.setter
    def is_numeric_characters_required(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_numeric_characters_required", value)

    @property
    @pulumi.getter(name="isSpecialCharactersRequired")
    def is_special_characters_required(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) At least one special character required.
        """
        return pulumi.get(self, "is_special_characters_required")

    @is_special_characters_required.setter
    def is_special_characters_required(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_special_characters_required", value)

    @property
    @pulumi.getter(name="isUppercaseCharactersRequired")
    def is_uppercase_characters_required(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) At least one uppercase character required.
        """
        return pulumi.get(self, "is_uppercase_characters_required")

    @is_uppercase_characters_required.setter
    def is_uppercase_characters_required(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_uppercase_characters_required", value)

    @property
    @pulumi.getter(name="isUsernameContainmentAllowed")
    def is_username_containment_allowed(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) User name is allowed to be part of the password.
        """
        return pulumi.get(self, "is_username_containment_allowed")

    @is_username_containment_allowed.setter
    def is_username_containment_allowed(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_username_containment_allowed", value)

    @property
    @pulumi.getter(name="minimumPasswordLength")
    def minimum_password_length(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Minimum password length required.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "minimum_password_length")

    @minimum_password_length.setter
    def minimum_password_length(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "minimum_password_length", value)


@pulumi.input_type
class DomainReplicaRegionArgs:
    def __init__(__self__, *,
                 region: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 url: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] region: A REPLICATION_ENABLED region, e.g. us-ashburn-1. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.
        :param pulumi.Input[str] state: The current state.
        :param pulumi.Input[str] url: Region agnostic domain URL.
        """
        DomainReplicaRegionArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            region=region,
            state=state,
            url=url,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             region: Optional[pulumi.Input[str]] = None,
             state: Optional[pulumi.Input[str]] = None,
             url: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if region is not None:
            _setter("region", region)
        if state is not None:
            _setter("state", state)
        if url is not None:
            _setter("url", url)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        A REPLICATION_ENABLED region, e.g. us-ashburn-1. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        """
        The current state.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[str]]:
        """
        Region agnostic domain URL.
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url", value)


@pulumi.input_type
class DomainsAccountRecoverySettingIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAccountRecoverySettingIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAccountRecoverySettingIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAccountRecoverySettingIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAccountRecoverySettingMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAccountRecoverySettingMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsAccountRecoverySettingTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAccountRecoverySettingTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsApiKeyIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsApiKeyIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsApiKeyIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsApiKeyIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsApiKeyMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsApiKeyMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsApiKeyTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsApiKeyTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs:
    def __init__(__self__, *,
                 allow_self_change: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] allow_self_change: If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).
               
               **Added In:** 2205182039
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: writeOnly
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        """
        DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            allow_self_change=allow_self_change,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             allow_self_change: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'allowSelfChange' in kwargs:
            allow_self_change = kwargs['allowSelfChange']

        if allow_self_change is not None:
            _setter("allow_self_change", allow_self_change)

    @property
    @pulumi.getter(name="allowSelfChange")
    def allow_self_change(self) -> Optional[pulumi.Input[bool]]:
        """
        If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).

        **Added In:** 2205182039

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: writeOnly
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_self_change")

    @allow_self_change.setter
    def allow_self_change(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_self_change", value)


@pulumi.input_type
class DomainsApiKeyUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The username.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsApiKeyUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The username.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAppAccountArgs:
    def __init__(__self__, *,
                 active: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 owner_id: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[bool] active: (Updatable) If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] owner_id: (Updatable) Owner identifier
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAppAccountArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            active=active,
            name=name,
            owner_id=owner_id,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             active: Optional[pulumi.Input[bool]] = None,
             name: Optional[pulumi.Input[str]] = None,
             owner_id: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'ownerId' in kwargs:
            owner_id = kwargs['ownerId']

        if active is not None:
            _setter("active", active)
        if name is not None:
            _setter("name", name)
        if owner_id is not None:
            _setter("owner_id", owner_id)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def active(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "active")

    @active.setter
    def active(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "active", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="ownerId")
    def owner_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Owner identifier

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "owner_id")

    @owner_id.setter
    def owner_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "owner_id", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAppAdminRoleArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] description: (Updatable) The description of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppAdminRoleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            description=description,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             description: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if description is not None:
            _setter("description", description)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The description of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppAliasAppArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] description: (Updatable) The description of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppAliasAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            description=description,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             description: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if description is not None:
            _setter("description", description)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The description of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppAllowedScopeArgs:
    def __init__(__self__, *,
                 fqs: pulumi.Input[str],
                 id_of_defining_app: Optional[pulumi.Input[str]] = None,
                 read_only: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] fqs: (Updatable) The fully qualified value of this scope within this App. A fully qualified scope combines the 'value' of each scope with the value of 'audience'. Each value of 'fqs' must be unique across the system. Used only when this App acts as an OAuth Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: server
        :param pulumi.Input[str] id_of_defining_app: (Updatable) The ID of the App that defines this scope.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] read_only: (Updatable) If true, indicates that this value must be protected.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        """
        DomainsAppAllowedScopeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            fqs=fqs,
            id_of_defining_app=id_of_defining_app,
            read_only=read_only,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             fqs: pulumi.Input[str],
             id_of_defining_app: Optional[pulumi.Input[str]] = None,
             read_only: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'idOfDefiningApp' in kwargs:
            id_of_defining_app = kwargs['idOfDefiningApp']
        if 'readOnly' in kwargs:
            read_only = kwargs['readOnly']

        _setter("fqs", fqs)
        if id_of_defining_app is not None:
            _setter("id_of_defining_app", id_of_defining_app)
        if read_only is not None:
            _setter("read_only", read_only)

    @property
    @pulumi.getter
    def fqs(self) -> pulumi.Input[str]:
        """
        (Updatable) The fully qualified value of this scope within this App. A fully qualified scope combines the 'value' of each scope with the value of 'audience'. Each value of 'fqs' must be unique across the system. Used only when this App acts as an OAuth Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: server
        """
        return pulumi.get(self, "fqs")

    @fqs.setter
    def fqs(self, value: pulumi.Input[str]):
        pulumi.set(self, "fqs", value)

    @property
    @pulumi.getter(name="idOfDefiningApp")
    def id_of_defining_app(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The ID of the App that defines this scope.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "id_of_defining_app")

    @id_of_defining_app.setter
    def id_of_defining_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "id_of_defining_app", value)

    @property
    @pulumi.getter(name="readOnly")
    def read_only(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that this value must be protected.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "read_only")

    @read_only.setter
    def read_only(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "read_only", value)


@pulumi.input_type
class DomainsAppAllowedTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str],
                 read_only: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[bool] read_only: (Updatable) If true, indicates that this value must be protected.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        """
        DomainsAppAllowedTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
            read_only=read_only,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             read_only: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'readOnly' in kwargs:
            read_only = kwargs['readOnly']

        _setter("key", key)
        _setter("value", value)
        if read_only is not None:
            _setter("read_only", read_only)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="readOnly")
    def read_only(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that this value must be protected.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "read_only")

    @read_only.setter
    def read_only(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "read_only", value)


@pulumi.input_type
class DomainsAppAppSignonPolicyArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppAppSignonPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppAppsNetworkPerimeterArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppAppsNetworkPerimeterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppAsOpcServiceArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppAsOpcServiceArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppAttrRenderingMetadataArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 datatype: Optional[pulumi.Input[str]] = None,
                 helptext: Optional[pulumi.Input[str]] = None,
                 label: Optional[pulumi.Input[str]] = None,
                 max_length: Optional[pulumi.Input[int]] = None,
                 max_size: Optional[pulumi.Input[int]] = None,
                 min_length: Optional[pulumi.Input[int]] = None,
                 min_size: Optional[pulumi.Input[int]] = None,
                 order: Optional[pulumi.Input[int]] = None,
                 read_only: Optional[pulumi.Input[bool]] = None,
                 regexp: Optional[pulumi.Input[str]] = None,
                 required: Optional[pulumi.Input[bool]] = None,
                 section: Optional[pulumi.Input[str]] = None,
                 visible: Optional[pulumi.Input[bool]] = None,
                 widget: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] datatype: (Updatable) Data type of the attribute.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] helptext: (Updatable) Help text for the attribute. It can contain HTML tags.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] label: (Updatable) Label for the attribute to be shown in the UI.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] max_length: (Updatable) Maximum length of the attribute.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_size: (Updatable) Maximum size of the attribute.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] min_length: (Updatable) Minimum length of the attribute.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] min_size: (Updatable) Minimum size of the attribute..
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] order: (Updatable) Display sequence of the bundle configuration property.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[bool] read_only: (Updatable) If true, indicates that this value must be protected.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] regexp: (Updatable) Regular expression of the attribute for validation.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] required: (Updatable) If true, this flatfile bundle configuration property is required to connect to the target connected managed app. This attribute maps to \\"isRequired\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] section: (Updatable) UI widget to use for the attribute.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] visible: (Updatable) Indicates whether the attribute is to be shown on the application creation UI.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] widget: (Updatable) UI widget to use for the attribute.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppAttrRenderingMetadataArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            datatype=datatype,
            helptext=helptext,
            label=label,
            max_length=max_length,
            max_size=max_size,
            min_length=min_length,
            min_size=min_size,
            order=order,
            read_only=read_only,
            regexp=regexp,
            required=required,
            section=section,
            visible=visible,
            widget=widget,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: pulumi.Input[str],
             datatype: Optional[pulumi.Input[str]] = None,
             helptext: Optional[pulumi.Input[str]] = None,
             label: Optional[pulumi.Input[str]] = None,
             max_length: Optional[pulumi.Input[int]] = None,
             max_size: Optional[pulumi.Input[int]] = None,
             min_length: Optional[pulumi.Input[int]] = None,
             min_size: Optional[pulumi.Input[int]] = None,
             order: Optional[pulumi.Input[int]] = None,
             read_only: Optional[pulumi.Input[bool]] = None,
             regexp: Optional[pulumi.Input[str]] = None,
             required: Optional[pulumi.Input[bool]] = None,
             section: Optional[pulumi.Input[str]] = None,
             visible: Optional[pulumi.Input[bool]] = None,
             widget: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'maxLength' in kwargs:
            max_length = kwargs['maxLength']
        if 'maxSize' in kwargs:
            max_size = kwargs['maxSize']
        if 'minLength' in kwargs:
            min_length = kwargs['minLength']
        if 'minSize' in kwargs:
            min_size = kwargs['minSize']
        if 'readOnly' in kwargs:
            read_only = kwargs['readOnly']

        _setter("name", name)
        if datatype is not None:
            _setter("datatype", datatype)
        if helptext is not None:
            _setter("helptext", helptext)
        if label is not None:
            _setter("label", label)
        if max_length is not None:
            _setter("max_length", max_length)
        if max_size is not None:
            _setter("max_size", max_size)
        if min_length is not None:
            _setter("min_length", min_length)
        if min_size is not None:
            _setter("min_size", min_size)
        if order is not None:
            _setter("order", order)
        if read_only is not None:
            _setter("read_only", read_only)
        if regexp is not None:
            _setter("regexp", regexp)
        if required is not None:
            _setter("required", required)
        if section is not None:
            _setter("section", section)
        if visible is not None:
            _setter("visible", visible)
        if widget is not None:
            _setter("widget", widget)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def datatype(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Data type of the attribute.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "datatype")

    @datatype.setter
    def datatype(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "datatype", value)

    @property
    @pulumi.getter
    def helptext(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Help text for the attribute. It can contain HTML tags.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "helptext")

    @helptext.setter
    def helptext(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "helptext", value)

    @property
    @pulumi.getter
    def label(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Label for the attribute to be shown in the UI.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "label")

    @label.setter
    def label(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "label", value)

    @property
    @pulumi.getter(name="maxLength")
    def max_length(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Maximum length of the attribute.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_length")

    @max_length.setter
    def max_length(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_length", value)

    @property
    @pulumi.getter(name="maxSize")
    def max_size(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Maximum size of the attribute.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_size")

    @max_size.setter
    def max_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_size", value)

    @property
    @pulumi.getter(name="minLength")
    def min_length(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Minimum length of the attribute.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "min_length")

    @min_length.setter
    def min_length(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_length", value)

    @property
    @pulumi.getter(name="minSize")
    def min_size(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Minimum size of the attribute..

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "min_size")

    @min_size.setter
    def min_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_size", value)

    @property
    @pulumi.getter
    def order(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Display sequence of the bundle configuration property.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "order")

    @order.setter
    def order(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "order", value)

    @property
    @pulumi.getter(name="readOnly")
    def read_only(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that this value must be protected.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "read_only")

    @read_only.setter
    def read_only(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "read_only", value)

    @property
    @pulumi.getter
    def regexp(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Regular expression of the attribute for validation.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "regexp")

    @regexp.setter
    def regexp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "regexp", value)

    @property
    @pulumi.getter
    def required(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, this flatfile bundle configuration property is required to connect to the target connected managed app. This attribute maps to \\"isRequired\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "required")

    @required.setter
    def required(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "required", value)

    @property
    @pulumi.getter
    def section(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) UI widget to use for the attribute.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "section")

    @section.setter
    def section(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "section", value)

    @property
    @pulumi.getter
    def visible(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether the attribute is to be shown on the application creation UI.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "visible")

    @visible.setter
    def visible(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "visible", value)

    @property
    @pulumi.getter
    def widget(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) UI widget to use for the attribute.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "widget")

    @widget.setter
    def widget(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "widget", value)


@pulumi.input_type
class DomainsAppBasedOnTemplateArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 last_modified: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 well_known_id: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] well_known_id: (Updatable) Unique well-known identifier used to reference connector bundle.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppBasedOnTemplateArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            last_modified=last_modified,
            ref=ref,
            well_known_id=well_known_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             last_modified: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             well_known_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'wellKnownId' in kwargs:
            well_known_id = kwargs['wellKnownId']

        _setter("value", value)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if ref is not None:
            _setter("ref", ref)
        if well_known_id is not None:
            _setter("well_known_id", well_known_id)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter(name="wellKnownId")
    def well_known_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique well-known identifier used to reference connector bundle.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "well_known_id")

    @well_known_id.setter
    def well_known_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "well_known_id", value)


@pulumi.input_type
class DomainsAppCertificateArgs:
    def __init__(__self__, *,
                 cert_alias: pulumi.Input[str],
                 kid: Optional[pulumi.Input[str]] = None,
                 sha1thumbprint: Optional[pulumi.Input[str]] = None,
                 x509base64certificate: Optional[pulumi.Input[str]] = None,
                 x5t: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] cert_alias: (Updatable) Certificate alias
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] kid: (Updatable) Certificate kid
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] sha1thumbprint: (Updatable) sha1Thumbprint
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] x509base64certificate: (Updatable) Base-64-encoded certificate.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: binary
               * uniqueness: none
        :param pulumi.Input[str] x5t: (Updatable) Certificate x5t
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppCertificateArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            cert_alias=cert_alias,
            kid=kid,
            sha1thumbprint=sha1thumbprint,
            x509base64certificate=x509base64certificate,
            x5t=x5t,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             cert_alias: pulumi.Input[str],
             kid: Optional[pulumi.Input[str]] = None,
             sha1thumbprint: Optional[pulumi.Input[str]] = None,
             x509base64certificate: Optional[pulumi.Input[str]] = None,
             x5t: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'certAlias' in kwargs:
            cert_alias = kwargs['certAlias']

        _setter("cert_alias", cert_alias)
        if kid is not None:
            _setter("kid", kid)
        if sha1thumbprint is not None:
            _setter("sha1thumbprint", sha1thumbprint)
        if x509base64certificate is not None:
            _setter("x509base64certificate", x509base64certificate)
        if x5t is not None:
            _setter("x5t", x5t)

    @property
    @pulumi.getter(name="certAlias")
    def cert_alias(self) -> pulumi.Input[str]:
        """
        (Updatable) Certificate alias

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "cert_alias")

    @cert_alias.setter
    def cert_alias(self, value: pulumi.Input[str]):
        pulumi.set(self, "cert_alias", value)

    @property
    @pulumi.getter
    def kid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Certificate kid

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "kid")

    @kid.setter
    def kid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "kid", value)

    @property
    @pulumi.getter
    def sha1thumbprint(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) sha1Thumbprint

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "sha1thumbprint")

    @sha1thumbprint.setter
    def sha1thumbprint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sha1thumbprint", value)

    @property
    @pulumi.getter
    def x509base64certificate(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Base-64-encoded certificate.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: binary
        * uniqueness: none
        """
        return pulumi.get(self, "x509base64certificate")

    @x509base64certificate.setter
    def x509base64certificate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "x509base64certificate", value)

    @property
    @pulumi.getter
    def x5t(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Certificate x5t

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "x5t")

    @x5t.setter
    def x5t(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "x5t", value)


@pulumi.input_type
class DomainsAppCloudControlPropertyArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 values: pulumi.Input[Sequence[pulumi.Input[str]]]):
        """
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] values: (Updatable) The value(s) of the property.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: true
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppCloudControlPropertyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: pulumi.Input[str],
             values: pulumi.Input[Sequence[pulumi.Input[str]]],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        (Updatable) The value(s) of the property.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: true
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "values", value)


@pulumi.input_type
class DomainsAppEditableAttributeArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str]):
        """
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppEditableAttributeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class DomainsAppGrantArgs:
    def __init__(__self__, *,
                 grant_mechanism: Optional[pulumi.Input[str]] = None,
                 grantee_id: Optional[pulumi.Input[str]] = None,
                 grantee_type: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] grant_mechanism: (Updatable) Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted. A customer or the UI should use only grantMechanism values that start with 'ADMINISTRATOR':
               * 'ADMINISTRATOR_TO_USER' is for a direct grant to a specific User.
               * 'ADMINISTRATOR_TO_GROUP' is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.
               * 'ADMINISTRATOR_TO_APP' is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] grantee_id: (Updatable) Grantee identifier
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] grantee_type: (Updatable) Grantee resource type. Allowed values are User and Group.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAppGrantArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            grant_mechanism=grant_mechanism,
            grantee_id=grantee_id,
            grantee_type=grantee_type,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             grant_mechanism: Optional[pulumi.Input[str]] = None,
             grantee_id: Optional[pulumi.Input[str]] = None,
             grantee_type: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'grantMechanism' in kwargs:
            grant_mechanism = kwargs['grantMechanism']
        if 'granteeId' in kwargs:
            grantee_id = kwargs['granteeId']
        if 'granteeType' in kwargs:
            grantee_type = kwargs['granteeType']

        if grant_mechanism is not None:
            _setter("grant_mechanism", grant_mechanism)
        if grantee_id is not None:
            _setter("grantee_id", grantee_id)
        if grantee_type is not None:
            _setter("grantee_type", grantee_type)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter(name="grantMechanism")
    def grant_mechanism(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted. A customer or the UI should use only grantMechanism values that start with 'ADMINISTRATOR':
        * 'ADMINISTRATOR_TO_USER' is for a direct grant to a specific User.
        * 'ADMINISTRATOR_TO_GROUP' is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.
        * 'ADMINISTRATOR_TO_APP' is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "grant_mechanism")

    @grant_mechanism.setter
    def grant_mechanism(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grant_mechanism", value)

    @property
    @pulumi.getter(name="granteeId")
    def grantee_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Grantee identifier

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "grantee_id")

    @grantee_id.setter
    def grantee_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grantee_id", value)

    @property
    @pulumi.getter(name="granteeType")
    def grantee_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Grantee resource type. Allowed values are User and Group.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "grantee_type")

    @grantee_type.setter
    def grantee_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grantee_type", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAppGrantedAppRoleArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 admin_role: Optional[pulumi.Input[bool]] = None,
                 app_id: Optional[pulumi.Input[str]] = None,
                 app_name: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 legacy_group_name: Optional[pulumi.Input[str]] = None,
                 read_only: Optional[pulumi.Input[bool]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[bool] admin_role: (Updatable) If true, then this granted AppRole confers administrative privileges within the App that defines it. Otherwise, the granted AppRole confers only functional privileges.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] app_id: (Updatable) The id of the App that defines this AppRole, which is granted to this App. The App that defines the AppRole acts as the producer; the App to which the AppRole is granted acts as a consumer.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] app_name: (Updatable) The name of the App that defines this AppRole, which is granted to this App. The App that defines the AppRole acts as the producer; the App to which the AppRole is granted acts as a consumer.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] legacy_group_name: (Updatable) The name of the legacy group associated with this AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] read_only: (Updatable) If true, indicates that this value must be protected.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsDefaultValue: AccountObjectClass
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppGrantedAppRoleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            admin_role=admin_role,
            app_id=app_id,
            app_name=app_name,
            display=display,
            legacy_group_name=legacy_group_name,
            read_only=read_only,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             admin_role: Optional[pulumi.Input[bool]] = None,
             app_id: Optional[pulumi.Input[str]] = None,
             app_name: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             legacy_group_name: Optional[pulumi.Input[str]] = None,
             read_only: Optional[pulumi.Input[bool]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'adminRole' in kwargs:
            admin_role = kwargs['adminRole']
        if 'appId' in kwargs:
            app_id = kwargs['appId']
        if 'appName' in kwargs:
            app_name = kwargs['appName']
        if 'legacyGroupName' in kwargs:
            legacy_group_name = kwargs['legacyGroupName']
        if 'readOnly' in kwargs:
            read_only = kwargs['readOnly']

        _setter("value", value)
        if admin_role is not None:
            _setter("admin_role", admin_role)
        if app_id is not None:
            _setter("app_id", app_id)
        if app_name is not None:
            _setter("app_name", app_name)
        if display is not None:
            _setter("display", display)
        if legacy_group_name is not None:
            _setter("legacy_group_name", legacy_group_name)
        if read_only is not None:
            _setter("read_only", read_only)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="adminRole")
    def admin_role(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, then this granted AppRole confers administrative privileges within the App that defines it. Otherwise, the granted AppRole confers only functional privileges.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "admin_role")

    @admin_role.setter
    def admin_role(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "admin_role", value)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The id of the App that defines this AppRole, which is granted to this App. The App that defines the AppRole acts as the producer; the App to which the AppRole is granted acts as a consumer.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter(name="appName")
    def app_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The name of the App that defines this AppRole, which is granted to this App. The App that defines the AppRole acts as the producer; the App to which the AppRole is granted acts as a consumer.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_name")

    @app_name.setter
    def app_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_name", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter(name="legacyGroupName")
    def legacy_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The name of the legacy group associated with this AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "legacy_group_name")

    @legacy_group_name.setter
    def legacy_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "legacy_group_name", value)

    @property
    @pulumi.getter(name="readOnly")
    def read_only(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that this value must be protected.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "read_only")

    @read_only.setter
    def read_only(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "read_only", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * caseExact: true
        * idcsDefaultValue: AccountObjectClass
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAppIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsDefaultValue: AccountObjectClass
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * caseExact: true
        * idcsDefaultValue: AccountObjectClass
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAppIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsDefaultValue: AccountObjectClass
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * caseExact: true
        * idcsDefaultValue: AccountObjectClass
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAppIdentityProviderArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppIdentityProviderArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppIdpPolicyArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppIdpPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Object class resource type
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Object class resource type

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsAppProtectableSecondaryAudienceArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 read_only: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[bool] read_only: (Updatable) If true, indicates that this value must be protected.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        """
        DomainsAppProtectableSecondaryAudienceArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            read_only=read_only,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             read_only: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'readOnly' in kwargs:
            read_only = kwargs['readOnly']

        _setter("value", value)
        if read_only is not None:
            _setter("read_only", read_only)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="readOnly")
    def read_only(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that this value must be protected.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "read_only")

    @read_only.setter
    def read_only(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "read_only", value)


@pulumi.input_type
class DomainsAppRadiusPolicyArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppRadiusPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppRoleAppArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 service_instance_identifier: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: Member display name
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) Application name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI corresponding to the member Resource of this Group
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] service_instance_identifier: (Updatable) The serviceInstanceIdentifier of the App that defines this AppRole. This value will match the opcServiceInstanceGUID of any service-instance that the App represents.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppRoleAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            name=name,
            ref=ref,
            service_instance_identifier=service_instance_identifier,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             service_instance_identifier: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'serviceInstanceIdentifier' in kwargs:
            service_instance_identifier = kwargs['serviceInstanceIdentifier']

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ref is not None:
            _setter("ref", ref)
        if service_instance_identifier is not None:
            _setter("service_instance_identifier", service_instance_identifier)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        Member display name

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Application name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI corresponding to the member Resource of this Group

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter(name="serviceInstanceIdentifier")
    def service_instance_identifier(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The serviceInstanceIdentifier of the App that defines this AppRole. This value will match the opcServiceInstanceGUID of any service-instance that the App represents.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "service_instance_identifier")

    @service_instance_identifier.setter
    def service_instance_identifier(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_instance_identifier", value)


@pulumi.input_type
class DomainsAppRoleIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: Member display name
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI corresponding to the member Resource of this Group
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: Indicates the type of Resource--for example, User, Group or DynamicResourceGroup
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsCsvAttributeName: Member Type
               * idcsDefaultValue: User
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppRoleIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        Member display name

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI corresponding to the member Resource of this Group

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Indicates the type of Resource--for example, User, Group or DynamicResourceGroup

        **SCIM++ Properties:**
        * caseExact: true
        * idcsCsvAttributeName: Member Type
        * idcsDefaultValue: User
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAppRoleIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: Member display name
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI corresponding to the member Resource of this Group
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: Indicates the type of Resource--for example, User, Group or DynamicResourceGroup
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsCsvAttributeName: Member Type
               * idcsDefaultValue: User
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppRoleIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        Member display name

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI corresponding to the member Resource of this Group

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Indicates the type of Resource--for example, User, Group or DynamicResourceGroup

        **SCIM++ Properties:**
        * caseExact: true
        * idcsCsvAttributeName: Member Type
        * idcsDefaultValue: User
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAppRoleMemberArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: Indicates the type of Resource--for example, User, Group or DynamicResourceGroup
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsCsvAttributeName: Member Type
               * idcsDefaultValue: User
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: Member display name
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI corresponding to the member Resource of this Group
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppRoleMemberArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        Indicates the type of Resource--for example, User, Group or DynamicResourceGroup

        **SCIM++ Properties:**
        * caseExact: true
        * idcsCsvAttributeName: Member Type
        * idcsDefaultValue: User
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        Member display name

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI corresponding to the member Resource of this Group

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppRoleMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppRoleMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsAppRoleTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppRoleTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAppSamlServiceProviderArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppSamlServiceProviderArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppScopeArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 fqs: Optional[pulumi.Input[str]] = None,
                 read_only: Optional[pulumi.Input[bool]] = None,
                 requires_consent: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] description: (Updatable) The description of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display_name: (Updatable) Display name of the flatfile bundle configuration property. This attribute maps to \\"displayName\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] fqs: (Updatable) The fully qualified value of this scope within this App. A fully qualified scope combines the 'value' of each scope with the value of 'audience'. Each value of 'fqs' must be unique across the system. Used only when this App acts as an OAuth Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: server
        :param pulumi.Input[bool] read_only: (Updatable) If true, indicates that this value must be protected.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] requires_consent: (Updatable) If true, indicates that a user must provide consent to access this scope. Note: Used only when this App acts as an OAuth Resource.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsAppScopeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            description=description,
            display_name=display_name,
            fqs=fqs,
            read_only=read_only,
            requires_consent=requires_consent,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             description: Optional[pulumi.Input[str]] = None,
             display_name: Optional[pulumi.Input[str]] = None,
             fqs: Optional[pulumi.Input[str]] = None,
             read_only: Optional[pulumi.Input[bool]] = None,
             requires_consent: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'displayName' in kwargs:
            display_name = kwargs['displayName']
        if 'readOnly' in kwargs:
            read_only = kwargs['readOnly']
        if 'requiresConsent' in kwargs:
            requires_consent = kwargs['requiresConsent']

        _setter("value", value)
        if description is not None:
            _setter("description", description)
        if display_name is not None:
            _setter("display_name", display_name)
        if fqs is not None:
            _setter("fqs", fqs)
        if read_only is not None:
            _setter("read_only", read_only)
        if requires_consent is not None:
            _setter("requires_consent", requires_consent)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The description of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display name of the flatfile bundle configuration property. This attribute maps to \\"displayName\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter
    def fqs(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The fully qualified value of this scope within this App. A fully qualified scope combines the 'value' of each scope with the value of 'audience'. Each value of 'fqs' must be unique across the system. Used only when this App acts as an OAuth Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: server
        """
        return pulumi.get(self, "fqs")

    @fqs.setter
    def fqs(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fqs", value)

    @property
    @pulumi.getter(name="readOnly")
    def read_only(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that this value must be protected.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "read_only")

    @read_only.setter
    def read_only(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "read_only", value)

    @property
    @pulumi.getter(name="requiresConsent")
    def requires_consent(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that a user must provide consent to access this scope. Note: Used only when this App acts as an OAuth Resource.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "requires_consent")

    @requires_consent.setter
    def requires_consent(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "requires_consent", value)


@pulumi.input_type
class DomainsAppServiceParamArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAppServiceParamArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: pulumi.Input[str],
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAppSignonPolicyArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppSignonPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAppTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAppTermsOfUseArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 name: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppTermsOfUseArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            name=name,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             name: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if name is not None:
            _setter("name", name)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppTrustPolicyArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppTrustPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs:
    def __init__(__self__, *,
                 defined_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]] = None,
                 freeform_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]] = None,
                 tag_slug: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]] defined_tags: (Updatable) Oracle Cloud Infrastructure Defined Tags
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [namespace, key, value]
               * type: complex
               * idcsSearchable: true
               * required: false
               * mutability: readWrite
               * multiValued: true
               * returned: default
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]] freeform_tags: (Updatable) Oracle Cloud Infrastructure Freeform Tags
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [key, value]
               * idcsSearchable: true
               * type: complex
               * required: false
               * mutability: readWrite
               * returned: default
               * multiValued: true
        :param pulumi.Input[str] tag_slug: (Updatable) Oracle Cloud Infrastructure Tag slug
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * type: binary
               * mutability: readOnly
               * returned: request
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            defined_tags=defined_tags,
            freeform_tags=freeform_tags,
            tag_slug=tag_slug,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             defined_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]] = None,
             freeform_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]] = None,
             tag_slug: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'definedTags' in kwargs:
            defined_tags = kwargs['definedTags']
        if 'freeformTags' in kwargs:
            freeform_tags = kwargs['freeformTags']
        if 'tagSlug' in kwargs:
            tag_slug = kwargs['tagSlug']

        if defined_tags is not None:
            _setter("defined_tags", defined_tags)
        if freeform_tags is not None:
            _setter("freeform_tags", freeform_tags)
        if tag_slug is not None:
            _setter("tag_slug", tag_slug)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]]:
        """
        (Updatable) Oracle Cloud Infrastructure Defined Tags

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsCompositeKey: [namespace, key, value]
        * type: complex
        * idcsSearchable: true
        * required: false
        * mutability: readWrite
        * multiValued: true
        * returned: default
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]]:
        """
        (Updatable) Oracle Cloud Infrastructure Freeform Tags

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsCompositeKey: [key, value]
        * idcsSearchable: true
        * type: complex
        * required: false
        * mutability: readWrite
        * returned: default
        * multiValued: true
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="tagSlug")
    def tag_slug(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag slug

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * type: binary
        * mutability: readOnly
        * returned: request
        """
        return pulumi.get(self, "tag_slug")

    @tag_slug.setter
    def tag_slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tag_slug", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 namespace: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] namespace: (Updatable) Oracle Cloud Infrastructure Tag namespace
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            namespace=namespace,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             namespace: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("namespace", namespace)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def namespace(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag namespace

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "namespace")

    @namespace.setter
    def namespace(self, value: pulumi.Input[str]):
        pulumi.set(self, "namespace", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppArgs:
    def __init__(__self__, *,
                 domain_app: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainAppArgs']] = None,
                 domain_name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainAppArgs'] domain_app: (Updatable) Description:
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] domain_name: (Updatable) The name of the Enterprise Domain that contains any number of DBInstances. If specified, the value must be unique.  A non-null value indicates that App represents a DBDomain. A value of null indicates that the App represents an DB-instance.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: server
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            domain_app=domain_app,
            domain_name=domain_name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             domain_app: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainAppArgs']] = None,
             domain_name: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'domainApp' in kwargs:
            domain_app = kwargs['domainApp']
        if 'domainName' in kwargs:
            domain_name = kwargs['domainName']

        if domain_app is not None:
            _setter("domain_app", domain_app)
        if domain_name is not None:
            _setter("domain_name", domain_name)

    @property
    @pulumi.getter(name="domainApp")
    def domain_app(self) -> Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainAppArgs']]:
        """
        (Updatable) Description:

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "domain_app")

    @domain_app.setter
    def domain_app(self, value: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainAppArgs']]):
        pulumi.set(self, "domain_app", value)

    @property
    @pulumi.getter(name="domainName")
    def domain_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The name of the Enterprise Domain that contains any number of DBInstances. If specified, the value must be unique.  A non-null value indicates that App represents a DBDomain. A value of null indicates that the App represents an DB-instance.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: server
        """
        return pulumi.get(self, "domain_name")

    @domain_name.setter
    def domain_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "domain_name", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainAppArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppArgs:
    def __init__(__self__, *,
                 allow_authz_decision_ttl: Optional[pulumi.Input[int]] = None,
                 allow_authz_policy: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicyArgs']] = None,
                 app_resources: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResourceArgs']]]] = None,
                 deny_authz_decision_ttl: Optional[pulumi.Input[int]] = None,
                 deny_authz_policy: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicyArgs']] = None):
        """
        :param pulumi.Input[int] allow_authz_decision_ttl: (Updatable) Allow Authz policy decision expiry time in seconds.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsMaxValue: 3600
               * idcsMinValue: 0
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicyArgs'] allow_authz_policy: (Updatable) Allow Authz Policy.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResourceArgs']]] app_resources: (Updatable) A list of AppResources of this App.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
        :param pulumi.Input[int] deny_authz_decision_ttl: (Updatable) Deny Authz policy decision expiry time in seconds.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsMaxValue: 3600
               * idcsMinValue: 0
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicyArgs'] deny_authz_policy: (Updatable) Deny Authz Policy.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            allow_authz_decision_ttl=allow_authz_decision_ttl,
            allow_authz_policy=allow_authz_policy,
            app_resources=app_resources,
            deny_authz_decision_ttl=deny_authz_decision_ttl,
            deny_authz_policy=deny_authz_policy,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             allow_authz_decision_ttl: Optional[pulumi.Input[int]] = None,
             allow_authz_policy: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicyArgs']] = None,
             app_resources: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResourceArgs']]]] = None,
             deny_authz_decision_ttl: Optional[pulumi.Input[int]] = None,
             deny_authz_policy: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicyArgs']] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'allowAuthzDecisionTtl' in kwargs:
            allow_authz_decision_ttl = kwargs['allowAuthzDecisionTtl']
        if 'allowAuthzPolicy' in kwargs:
            allow_authz_policy = kwargs['allowAuthzPolicy']
        if 'appResources' in kwargs:
            app_resources = kwargs['appResources']
        if 'denyAuthzDecisionTtl' in kwargs:
            deny_authz_decision_ttl = kwargs['denyAuthzDecisionTtl']
        if 'denyAuthzPolicy' in kwargs:
            deny_authz_policy = kwargs['denyAuthzPolicy']

        if allow_authz_decision_ttl is not None:
            _setter("allow_authz_decision_ttl", allow_authz_decision_ttl)
        if allow_authz_policy is not None:
            _setter("allow_authz_policy", allow_authz_policy)
        if app_resources is not None:
            _setter("app_resources", app_resources)
        if deny_authz_decision_ttl is not None:
            _setter("deny_authz_decision_ttl", deny_authz_decision_ttl)
        if deny_authz_policy is not None:
            _setter("deny_authz_policy", deny_authz_policy)

    @property
    @pulumi.getter(name="allowAuthzDecisionTtl")
    def allow_authz_decision_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Allow Authz policy decision expiry time in seconds.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsMaxValue: 3600
        * idcsMinValue: 0
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "allow_authz_decision_ttl")

    @allow_authz_decision_ttl.setter
    def allow_authz_decision_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "allow_authz_decision_ttl", value)

    @property
    @pulumi.getter(name="allowAuthzPolicy")
    def allow_authz_policy(self) -> Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicyArgs']]:
        """
        (Updatable) Allow Authz Policy.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        """
        return pulumi.get(self, "allow_authz_policy")

    @allow_authz_policy.setter
    def allow_authz_policy(self, value: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicyArgs']]):
        pulumi.set(self, "allow_authz_policy", value)

    @property
    @pulumi.getter(name="appResources")
    def app_resources(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResourceArgs']]]]:
        """
        (Updatable) A list of AppResources of this App.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * caseExact: true
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        """
        return pulumi.get(self, "app_resources")

    @app_resources.setter
    def app_resources(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResourceArgs']]]]):
        pulumi.set(self, "app_resources", value)

    @property
    @pulumi.getter(name="denyAuthzDecisionTtl")
    def deny_authz_decision_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Deny Authz policy decision expiry time in seconds.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsMaxValue: 3600
        * idcsMinValue: 0
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "deny_authz_decision_ttl")

    @deny_authz_decision_ttl.setter
    def deny_authz_decision_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "deny_authz_decision_ttl", value)

    @property
    @pulumi.getter(name="denyAuthzPolicy")
    def deny_authz_policy(self) -> Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicyArgs']]:
        """
        (Updatable) Deny Authz Policy.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        """
        return pulumi.get(self, "deny_authz_policy")

    @deny_authz_policy.setter
    def deny_authz_policy(self, value: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicyArgs']]):
        pulumi.set(self, "deny_authz_policy", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicyArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResourceArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResourceArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicyArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppArgs:
    def __init__(__self__, *,
                 configuration: Optional[pulumi.Input[str]] = None,
                 form_cred_method: Optional[pulumi.Input[str]] = None,
                 form_credential_sharing_group_id: Optional[pulumi.Input[str]] = None,
                 form_fill_url_matches: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatchArgs']]]] = None,
                 form_type: Optional[pulumi.Input[str]] = None,
                 reveal_password_on_form: Optional[pulumi.Input[bool]] = None,
                 sync_from_template: Optional[pulumi.Input[bool]] = None,
                 user_name_form_expression: Optional[pulumi.Input[str]] = None,
                 user_name_form_template: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] configuration: (Updatable) FormFill Application Configuration CLOB which has to be maintained in Form-Fill APP for legacy code to do Form-Fill injection
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] form_cred_method: (Updatable) Indicates how FormFill obtains the username and password of the account that FormFill will use to sign into the target App.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] form_credential_sharing_group_id: (Updatable) Credential Sharing Group to which this form-fill application belongs.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatchArgs']]] form_fill_url_matches: (Updatable) A list of application-formURLs that FormFill should match against any formUrl that the user-specifies when signing in to the target service.  Each item in the list also indicates how FormFill should interpret that formUrl.
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [formUrl]
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] form_type: (Updatable) Type of the FormFill application like WebApplication, MainFrameApplication, WindowsApplication. Initially, we will support only WebApplication.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] reveal_password_on_form: (Updatable) If true, indicates that system is allowed to show the password in plain-text for this account after re-authentication.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] sync_from_template: (Updatable) If true, indicates that each of the Form-Fill-related attributes that can be inherited from the template actually will be inherited from the template. If false, indicates that the AppTemplate disabled inheritance for these Form-Fill-related attributes.
               
               **Added In:** 17.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] user_name_form_expression: (Updatable) Indicates the custom expression, which can combine concat and substring operations with literals and with any attribute of the Oracle Identity Cloud Service User
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] user_name_form_template: (Updatable) Format for generating a username.  This value can be Username or Email Address; any other value will be treated as a custom expression.  A custom expression may combine 'concat' and 'substring' operations with literals and with any attribute of the Oracle Identity Cloud Service user.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsPii: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            configuration=configuration,
            form_cred_method=form_cred_method,
            form_credential_sharing_group_id=form_credential_sharing_group_id,
            form_fill_url_matches=form_fill_url_matches,
            form_type=form_type,
            reveal_password_on_form=reveal_password_on_form,
            sync_from_template=sync_from_template,
            user_name_form_expression=user_name_form_expression,
            user_name_form_template=user_name_form_template,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             configuration: Optional[pulumi.Input[str]] = None,
             form_cred_method: Optional[pulumi.Input[str]] = None,
             form_credential_sharing_group_id: Optional[pulumi.Input[str]] = None,
             form_fill_url_matches: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatchArgs']]]] = None,
             form_type: Optional[pulumi.Input[str]] = None,
             reveal_password_on_form: Optional[pulumi.Input[bool]] = None,
             sync_from_template: Optional[pulumi.Input[bool]] = None,
             user_name_form_expression: Optional[pulumi.Input[str]] = None,
             user_name_form_template: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'formCredMethod' in kwargs:
            form_cred_method = kwargs['formCredMethod']
        if 'formCredentialSharingGroupId' in kwargs:
            form_credential_sharing_group_id = kwargs['formCredentialSharingGroupId']
        if 'formFillUrlMatches' in kwargs:
            form_fill_url_matches = kwargs['formFillUrlMatches']
        if 'formType' in kwargs:
            form_type = kwargs['formType']
        if 'revealPasswordOnForm' in kwargs:
            reveal_password_on_form = kwargs['revealPasswordOnForm']
        if 'syncFromTemplate' in kwargs:
            sync_from_template = kwargs['syncFromTemplate']
        if 'userNameFormExpression' in kwargs:
            user_name_form_expression = kwargs['userNameFormExpression']
        if 'userNameFormTemplate' in kwargs:
            user_name_form_template = kwargs['userNameFormTemplate']

        if configuration is not None:
            _setter("configuration", configuration)
        if form_cred_method is not None:
            _setter("form_cred_method", form_cred_method)
        if form_credential_sharing_group_id is not None:
            _setter("form_credential_sharing_group_id", form_credential_sharing_group_id)
        if form_fill_url_matches is not None:
            _setter("form_fill_url_matches", form_fill_url_matches)
        if form_type is not None:
            _setter("form_type", form_type)
        if reveal_password_on_form is not None:
            _setter("reveal_password_on_form", reveal_password_on_form)
        if sync_from_template is not None:
            _setter("sync_from_template", sync_from_template)
        if user_name_form_expression is not None:
            _setter("user_name_form_expression", user_name_form_expression)
        if user_name_form_template is not None:
            _setter("user_name_form_template", user_name_form_template)

    @property
    @pulumi.getter
    def configuration(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) FormFill Application Configuration CLOB which has to be maintained in Form-Fill APP for legacy code to do Form-Fill injection

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "configuration")

    @configuration.setter
    def configuration(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "configuration", value)

    @property
    @pulumi.getter(name="formCredMethod")
    def form_cred_method(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates how FormFill obtains the username and password of the account that FormFill will use to sign into the target App.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_cred_method")

    @form_cred_method.setter
    def form_cred_method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "form_cred_method", value)

    @property
    @pulumi.getter(name="formCredentialSharingGroupId")
    def form_credential_sharing_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Credential Sharing Group to which this form-fill application belongs.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_credential_sharing_group_id")

    @form_credential_sharing_group_id.setter
    def form_credential_sharing_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "form_credential_sharing_group_id", value)

    @property
    @pulumi.getter(name="formFillUrlMatches")
    def form_fill_url_matches(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatchArgs']]]]:
        """
        (Updatable) A list of application-formURLs that FormFill should match against any formUrl that the user-specifies when signing in to the target service.  Each item in the list also indicates how FormFill should interpret that formUrl.

        **SCIM++ Properties:**
        * idcsCompositeKey: [formUrl]
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "form_fill_url_matches")

    @form_fill_url_matches.setter
    def form_fill_url_matches(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatchArgs']]]]):
        pulumi.set(self, "form_fill_url_matches", value)

    @property
    @pulumi.getter(name="formType")
    def form_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Type of the FormFill application like WebApplication, MainFrameApplication, WindowsApplication. Initially, we will support only WebApplication.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_type")

    @form_type.setter
    def form_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "form_type", value)

    @property
    @pulumi.getter(name="revealPasswordOnForm")
    def reveal_password_on_form(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that system is allowed to show the password in plain-text for this account after re-authentication.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "reveal_password_on_form")

    @reveal_password_on_form.setter
    def reveal_password_on_form(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "reveal_password_on_form", value)

    @property
    @pulumi.getter(name="syncFromTemplate")
    def sync_from_template(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that each of the Form-Fill-related attributes that can be inherited from the template actually will be inherited from the template. If false, indicates that the AppTemplate disabled inheritance for these Form-Fill-related attributes.

        **Added In:** 17.4.2

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "sync_from_template")

    @sync_from_template.setter
    def sync_from_template(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sync_from_template", value)

    @property
    @pulumi.getter(name="userNameFormExpression")
    def user_name_form_expression(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates the custom expression, which can combine concat and substring operations with literals and with any attribute of the Oracle Identity Cloud Service User

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_name_form_expression")

    @user_name_form_expression.setter
    def user_name_form_expression(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_name_form_expression", value)

    @property
    @pulumi.getter(name="userNameFormTemplate")
    def user_name_form_template(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Format for generating a username.  This value can be Username or Email Address; any other value will be treated as a custom expression.  A custom expression may combine 'concat' and 'substring' operations with literals and with any attribute of the Oracle Identity Cloud Service user.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsPii: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_name_form_template")

    @user_name_form_template.setter
    def user_name_form_template(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_name_form_template", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatchArgs:
    def __init__(__self__, *,
                 form_url: pulumi.Input[str],
                 form_url_match_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] form_url: (Updatable) An application formUrl that FormFill will match against any formUrl that a User enters in trying to access the target-service which this App represents.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] form_url_match_type: (Updatable) Indicates how to interpret the value of 'formUrl' when matching against a user-specified formUrl.  The system currently supports only 'Exact', which indicates that the value of 'formUrl' should be treated as a literal value.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatchArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            form_url=form_url,
            form_url_match_type=form_url_match_type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             form_url: pulumi.Input[str],
             form_url_match_type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'formUrl' in kwargs:
            form_url = kwargs['formUrl']
        if 'formUrlMatchType' in kwargs:
            form_url_match_type = kwargs['formUrlMatchType']

        _setter("form_url", form_url)
        if form_url_match_type is not None:
            _setter("form_url_match_type", form_url_match_type)

    @property
    @pulumi.getter(name="formUrl")
    def form_url(self) -> pulumi.Input[str]:
        """
        (Updatable) An application formUrl that FormFill will match against any formUrl that a User enters in trying to access the target-service which this App represents.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_url")

    @form_url.setter
    def form_url(self, value: pulumi.Input[str]):
        pulumi.set(self, "form_url", value)

    @property
    @pulumi.getter(name="formUrlMatchType")
    def form_url_match_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates how to interpret the value of 'formUrl' when matching against a user-specified formUrl.  The system currently supports only 'Exact', which indicates that the value of 'formUrl' should be treated as a literal value.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_url_match_type")

    @form_url_match_type.setter
    def form_url_match_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "form_url_match_type", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateArgs:
    def __init__(__self__, *,
                 configuration: Optional[pulumi.Input[str]] = None,
                 form_cred_method: Optional[pulumi.Input[str]] = None,
                 form_credential_sharing_group_id: Optional[pulumi.Input[str]] = None,
                 form_fill_url_matches: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs']]]] = None,
                 form_type: Optional[pulumi.Input[str]] = None,
                 reveal_password_on_form: Optional[pulumi.Input[bool]] = None,
                 sync_from_template: Optional[pulumi.Input[bool]] = None,
                 user_name_form_expression: Optional[pulumi.Input[str]] = None,
                 user_name_form_template: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] configuration: (Updatable) FormFill Application Configuration CLOB which has to be maintained in Form-Fill APP for legacy code to do Form-Fill injection
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] form_cred_method: (Updatable) Indicates how FormFill obtains the username and password of the account that FormFill will use to sign into the target App.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] form_credential_sharing_group_id: (Updatable) Credential Sharing Group to which this form-fill application belongs.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs']]] form_fill_url_matches: (Updatable) A list of application-formURLs that FormFill should match against any formUrl that the user-specifies when signing in to the target service.  Each item in the list also indicates how FormFill should interpret that formUrl.
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [formUrl]
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] form_type: (Updatable) Type of the FormFill application like WebApplication, MainFrameApplication, WindowsApplication. Initially, we will support only WebApplication.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] reveal_password_on_form: (Updatable) If true, indicates that system is allowed to show the password in plain-text for this account after re-authentication.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] sync_from_template: (Updatable) If true, indicates that each of the Form-Fill-related attributes that can be inherited from the template actually will be inherited from the template. If false, indicates that the AppTemplate disabled inheritance for these Form-Fill-related attributes.
               
               **Added In:** 17.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] user_name_form_expression: (Updatable) Indicates the custom expression, which can combine concat and substring operations with literals and with any attribute of the Oracle Identity Cloud Service User
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] user_name_form_template: (Updatable) Format for generating a username.  This value can be Username or Email Address; any other value will be treated as a custom expression.  A custom expression may combine 'concat' and 'substring' operations with literals and with any attribute of the Oracle Identity Cloud Service user.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsPii: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            configuration=configuration,
            form_cred_method=form_cred_method,
            form_credential_sharing_group_id=form_credential_sharing_group_id,
            form_fill_url_matches=form_fill_url_matches,
            form_type=form_type,
            reveal_password_on_form=reveal_password_on_form,
            sync_from_template=sync_from_template,
            user_name_form_expression=user_name_form_expression,
            user_name_form_template=user_name_form_template,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             configuration: Optional[pulumi.Input[str]] = None,
             form_cred_method: Optional[pulumi.Input[str]] = None,
             form_credential_sharing_group_id: Optional[pulumi.Input[str]] = None,
             form_fill_url_matches: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs']]]] = None,
             form_type: Optional[pulumi.Input[str]] = None,
             reveal_password_on_form: Optional[pulumi.Input[bool]] = None,
             sync_from_template: Optional[pulumi.Input[bool]] = None,
             user_name_form_expression: Optional[pulumi.Input[str]] = None,
             user_name_form_template: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'formCredMethod' in kwargs:
            form_cred_method = kwargs['formCredMethod']
        if 'formCredentialSharingGroupId' in kwargs:
            form_credential_sharing_group_id = kwargs['formCredentialSharingGroupId']
        if 'formFillUrlMatches' in kwargs:
            form_fill_url_matches = kwargs['formFillUrlMatches']
        if 'formType' in kwargs:
            form_type = kwargs['formType']
        if 'revealPasswordOnForm' in kwargs:
            reveal_password_on_form = kwargs['revealPasswordOnForm']
        if 'syncFromTemplate' in kwargs:
            sync_from_template = kwargs['syncFromTemplate']
        if 'userNameFormExpression' in kwargs:
            user_name_form_expression = kwargs['userNameFormExpression']
        if 'userNameFormTemplate' in kwargs:
            user_name_form_template = kwargs['userNameFormTemplate']

        if configuration is not None:
            _setter("configuration", configuration)
        if form_cred_method is not None:
            _setter("form_cred_method", form_cred_method)
        if form_credential_sharing_group_id is not None:
            _setter("form_credential_sharing_group_id", form_credential_sharing_group_id)
        if form_fill_url_matches is not None:
            _setter("form_fill_url_matches", form_fill_url_matches)
        if form_type is not None:
            _setter("form_type", form_type)
        if reveal_password_on_form is not None:
            _setter("reveal_password_on_form", reveal_password_on_form)
        if sync_from_template is not None:
            _setter("sync_from_template", sync_from_template)
        if user_name_form_expression is not None:
            _setter("user_name_form_expression", user_name_form_expression)
        if user_name_form_template is not None:
            _setter("user_name_form_template", user_name_form_template)

    @property
    @pulumi.getter
    def configuration(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) FormFill Application Configuration CLOB which has to be maintained in Form-Fill APP for legacy code to do Form-Fill injection

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "configuration")

    @configuration.setter
    def configuration(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "configuration", value)

    @property
    @pulumi.getter(name="formCredMethod")
    def form_cred_method(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates how FormFill obtains the username and password of the account that FormFill will use to sign into the target App.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_cred_method")

    @form_cred_method.setter
    def form_cred_method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "form_cred_method", value)

    @property
    @pulumi.getter(name="formCredentialSharingGroupId")
    def form_credential_sharing_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Credential Sharing Group to which this form-fill application belongs.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_credential_sharing_group_id")

    @form_credential_sharing_group_id.setter
    def form_credential_sharing_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "form_credential_sharing_group_id", value)

    @property
    @pulumi.getter(name="formFillUrlMatches")
    def form_fill_url_matches(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs']]]]:
        """
        (Updatable) A list of application-formURLs that FormFill should match against any formUrl that the user-specifies when signing in to the target service.  Each item in the list also indicates how FormFill should interpret that formUrl.

        **SCIM++ Properties:**
        * idcsCompositeKey: [formUrl]
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "form_fill_url_matches")

    @form_fill_url_matches.setter
    def form_fill_url_matches(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs']]]]):
        pulumi.set(self, "form_fill_url_matches", value)

    @property
    @pulumi.getter(name="formType")
    def form_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Type of the FormFill application like WebApplication, MainFrameApplication, WindowsApplication. Initially, we will support only WebApplication.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_type")

    @form_type.setter
    def form_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "form_type", value)

    @property
    @pulumi.getter(name="revealPasswordOnForm")
    def reveal_password_on_form(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that system is allowed to show the password in plain-text for this account after re-authentication.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "reveal_password_on_form")

    @reveal_password_on_form.setter
    def reveal_password_on_form(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "reveal_password_on_form", value)

    @property
    @pulumi.getter(name="syncFromTemplate")
    def sync_from_template(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that each of the Form-Fill-related attributes that can be inherited from the template actually will be inherited from the template. If false, indicates that the AppTemplate disabled inheritance for these Form-Fill-related attributes.

        **Added In:** 17.4.2

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "sync_from_template")

    @sync_from_template.setter
    def sync_from_template(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sync_from_template", value)

    @property
    @pulumi.getter(name="userNameFormExpression")
    def user_name_form_expression(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates the custom expression, which can combine concat and substring operations with literals and with any attribute of the Oracle Identity Cloud Service User

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_name_form_expression")

    @user_name_form_expression.setter
    def user_name_form_expression(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_name_form_expression", value)

    @property
    @pulumi.getter(name="userNameFormTemplate")
    def user_name_form_template(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Format for generating a username.  This value can be Username or Email Address; any other value will be treated as a custom expression.  A custom expression may combine 'concat' and 'substring' operations with literals and with any attribute of the Oracle Identity Cloud Service user.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsPii: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_name_form_template")

    @user_name_form_template.setter
    def user_name_form_template(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_name_form_template", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs:
    def __init__(__self__, *,
                 form_url: pulumi.Input[str],
                 form_url_match_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] form_url: (Updatable) An application formUrl that FormFill will match against any formUrl that a User enters in trying to access the target-service which this App represents.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] form_url_match_type: (Updatable) Indicates how to interpret the value of 'formUrl' when matching against a user-specified formUrl.  The system currently supports only 'Exact', which indicates that the value of 'formUrl' should be treated as a literal value.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            form_url=form_url,
            form_url_match_type=form_url_match_type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             form_url: pulumi.Input[str],
             form_url_match_type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'formUrl' in kwargs:
            form_url = kwargs['formUrl']
        if 'formUrlMatchType' in kwargs:
            form_url_match_type = kwargs['formUrlMatchType']

        _setter("form_url", form_url)
        if form_url_match_type is not None:
            _setter("form_url_match_type", form_url_match_type)

    @property
    @pulumi.getter(name="formUrl")
    def form_url(self) -> pulumi.Input[str]:
        """
        (Updatable) An application formUrl that FormFill will match against any formUrl that a User enters in trying to access the target-service which this App represents.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_url")

    @form_url.setter
    def form_url(self, value: pulumi.Input[str]):
        pulumi.set(self, "form_url", value)

    @property
    @pulumi.getter(name="formUrlMatchType")
    def form_url_match_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates how to interpret the value of 'formUrl' when matching against a user-specified formUrl.  The system currently supports only 'Exact', which indicates that the value of 'formUrl' should be treated as a literal value.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "form_url_match_type")

    @form_url_match_type.setter
    def form_url_match_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "form_url_match_type", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionkerberosRealmAppArgs:
    def __init__(__self__, *,
                 default_encryption_salt_type: Optional[pulumi.Input[str]] = None,
                 master_key: Optional[pulumi.Input[str]] = None,
                 max_renewable_age: Optional[pulumi.Input[int]] = None,
                 max_ticket_life: Optional[pulumi.Input[int]] = None,
                 realm_name: Optional[pulumi.Input[str]] = None,
                 supported_encryption_salt_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ticket_flags: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[str] default_encryption_salt_type: (Updatable) The type of salt that the system will use to encrypt Kerberos-specific artifacts of this App unless another type of salt is specified.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] master_key: (Updatable) The primary key that the system should use to encrypt artifacts that are specific to this Kerberos realm -- for example, to encrypt the Principal Key in each KerberosRealmUser.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * idcsSensitive: none
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] max_renewable_age: (Updatable) Max Renewable Age in seconds
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_ticket_life: (Updatable) Max Ticket Life in seconds
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] realm_name: (Updatable) The name of the Kerberos Realm that this App uses for authentication.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] supported_encryption_salt_types: (Updatable) The types of salt that are available for the system to use when encrypting Kerberos-specific artifacts for this App.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] ticket_flags: (Updatable) Ticket Flags
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: integer
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionkerberosRealmAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            default_encryption_salt_type=default_encryption_salt_type,
            master_key=master_key,
            max_renewable_age=max_renewable_age,
            max_ticket_life=max_ticket_life,
            realm_name=realm_name,
            supported_encryption_salt_types=supported_encryption_salt_types,
            ticket_flags=ticket_flags,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             default_encryption_salt_type: Optional[pulumi.Input[str]] = None,
             master_key: Optional[pulumi.Input[str]] = None,
             max_renewable_age: Optional[pulumi.Input[int]] = None,
             max_ticket_life: Optional[pulumi.Input[int]] = None,
             realm_name: Optional[pulumi.Input[str]] = None,
             supported_encryption_salt_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             ticket_flags: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'defaultEncryptionSaltType' in kwargs:
            default_encryption_salt_type = kwargs['defaultEncryptionSaltType']
        if 'masterKey' in kwargs:
            master_key = kwargs['masterKey']
        if 'maxRenewableAge' in kwargs:
            max_renewable_age = kwargs['maxRenewableAge']
        if 'maxTicketLife' in kwargs:
            max_ticket_life = kwargs['maxTicketLife']
        if 'realmName' in kwargs:
            realm_name = kwargs['realmName']
        if 'supportedEncryptionSaltTypes' in kwargs:
            supported_encryption_salt_types = kwargs['supportedEncryptionSaltTypes']
        if 'ticketFlags' in kwargs:
            ticket_flags = kwargs['ticketFlags']

        if default_encryption_salt_type is not None:
            _setter("default_encryption_salt_type", default_encryption_salt_type)
        if master_key is not None:
            _setter("master_key", master_key)
        if max_renewable_age is not None:
            _setter("max_renewable_age", max_renewable_age)
        if max_ticket_life is not None:
            _setter("max_ticket_life", max_ticket_life)
        if realm_name is not None:
            _setter("realm_name", realm_name)
        if supported_encryption_salt_types is not None:
            _setter("supported_encryption_salt_types", supported_encryption_salt_types)
        if ticket_flags is not None:
            _setter("ticket_flags", ticket_flags)

    @property
    @pulumi.getter(name="defaultEncryptionSaltType")
    def default_encryption_salt_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of salt that the system will use to encrypt Kerberos-specific artifacts of this App unless another type of salt is specified.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "default_encryption_salt_type")

    @default_encryption_salt_type.setter
    def default_encryption_salt_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "default_encryption_salt_type", value)

    @property
    @pulumi.getter(name="masterKey")
    def master_key(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The primary key that the system should use to encrypt artifacts that are specific to this Kerberos realm -- for example, to encrypt the Principal Key in each KerberosRealmUser.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * idcsSensitive: none
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "master_key")

    @master_key.setter
    def master_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "master_key", value)

    @property
    @pulumi.getter(name="maxRenewableAge")
    def max_renewable_age(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Max Renewable Age in seconds

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_renewable_age")

    @max_renewable_age.setter
    def max_renewable_age(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_renewable_age", value)

    @property
    @pulumi.getter(name="maxTicketLife")
    def max_ticket_life(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Max Ticket Life in seconds

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_ticket_life")

    @max_ticket_life.setter
    def max_ticket_life(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_ticket_life", value)

    @property
    @pulumi.getter(name="realmName")
    def realm_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The name of the Kerberos Realm that this App uses for authentication.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "realm_name")

    @realm_name.setter
    def realm_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "realm_name", value)

    @property
    @pulumi.getter(name="supportedEncryptionSaltTypes")
    def supported_encryption_salt_types(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) The types of salt that are available for the system to use when encrypting Kerberos-specific artifacts for this App.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "supported_encryption_salt_types")

    @supported_encryption_salt_types.setter
    def supported_encryption_salt_types(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "supported_encryption_salt_types", value)

    @property
    @pulumi.getter(name="ticketFlags")
    def ticket_flags(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Ticket Flags

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "ticket_flags")

    @ticket_flags.setter
    def ticket_flags(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ticket_flags", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppArgs:
    def __init__(__self__, *,
                 account_form_visible: Optional[pulumi.Input[bool]] = None,
                 admin_consent_granted: Optional[pulumi.Input[bool]] = None,
                 bundle_configuration_properties: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationPropertyArgs']]]] = None,
                 bundle_pool_configuration: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfigurationArgs']] = None,
                 can_be_authoritative: Optional[pulumi.Input[bool]] = None,
                 connected: Optional[pulumi.Input[bool]] = None,
                 connector_bundles: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundleArgs']]]] = None,
                 enable_auth_sync_new_user_notification: Optional[pulumi.Input[bool]] = None,
                 enable_sync: Optional[pulumi.Input[bool]] = None,
                 enable_sync_summary_report_notification: Optional[pulumi.Input[bool]] = None,
                 flat_file_bundle_configuration_properties: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationPropertyArgs']]]] = None,
                 flat_file_connector_bundle: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundleArgs']] = None,
                 identity_bridges: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridgeArgs']]]] = None,
                 is_authoritative: Optional[pulumi.Input[bool]] = None,
                 is_directory: Optional[pulumi.Input[bool]] = None,
                 is_on_premise_app: Optional[pulumi.Input[bool]] = None,
                 is_schema_customization_supported: Optional[pulumi.Input[bool]] = None,
                 is_schema_discovery_supported: Optional[pulumi.Input[bool]] = None,
                 is_three_legged_oauth_enabled: Optional[pulumi.Input[bool]] = None,
                 is_two_legged_oauth_enabled: Optional[pulumi.Input[bool]] = None,
                 object_classes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClassArgs']]]] = None,
                 sync_config_last_modified: Optional[pulumi.Input[str]] = None,
                 three_legged_oauth_credential: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredentialArgs']] = None,
                 three_legged_oauth_provider_name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[bool] account_form_visible: (Updatable) If true, then the account form will be displayed in the Oracle Identity Cloud Service UI to interactively create or update an account for this App. If a value is not specified for this attribute, a default value of \\"false\\" will be assumed as the value for this attribute.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] admin_consent_granted: (Updatable) If true, admin has granted consent to perform managed app run-time operations.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationPropertyArgs']]] bundle_configuration_properties: (Updatable) ConnectorBundle configuration properties
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [name]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfigurationArgs'] bundle_pool_configuration: (Updatable) Configurable options maintaining a pool of ICF connector instances. Values for sub attributes can be set only if the ConnectorBundle referenced in the App has connectorPoolingSupported set to true
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[bool] can_be_authoritative: (Updatable) If true, the managed app can be authoritative.
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] connected: (Updatable) If true, the accounts of the application are managed through an ICF connector bundle
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundleArgs']]] connector_bundles: (Updatable) ConnectorBundle
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[bool] enable_auth_sync_new_user_notification: (Updatable) If true, send activation email to new users created from authoritative sync.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] enable_sync: (Updatable) If true, sync run-time operations are enabled for this App.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] enable_sync_summary_report_notification: (Updatable) If true, send sync summary as notification upon job completion.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationPropertyArgs']]] flat_file_bundle_configuration_properties: (Updatable) Flat file connector bundle configuration properties
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [name]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundleArgs'] flat_file_connector_bundle: (Updatable) Flat file connector bundle to sync from a flat file.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridgeArgs']]] identity_bridges: (Updatable) IdentityBridges associated with this App
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[bool] is_authoritative: (Updatable) If true, sync from the managed app will be performed as authoritative sync.
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_directory: (Updatable) If true, the managed app is a directory.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_on_premise_app: (Updatable) If true, the managed app is an On-Premise app.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_schema_customization_supported: (Updatable) If true, the managed app supports schema customization.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_schema_discovery_supported: (Updatable) If true, the managed app supports schema discovery.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_three_legged_oauth_enabled: (Updatable) If true, the managed app requires 3-legged OAuth for authorization.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_two_legged_oauth_enabled: (Updatable) If true, indicates that Oracle Identity Cloud Service can use two-legged OAuth to connect to this ManagedApp.
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClassArgs']]] object_classes: (Updatable) Object classes
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] sync_config_last_modified: (Updatable) The most recent DateTime that the configuration of this App was updated. AppServices updates this timestamp whenever AppServices updates an App's configuration with respect to synchronization.
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredentialArgs'] three_legged_oauth_credential: (Updatable) The value of this attribute persists any OAuth access token that the system uses to connect to this ManagedApp. The system obtains this access token using an OAuth protocol flow that could be two-legged or three-legged. A two-legged flow involves only the requester and the server. A three-legged flow also requires the consent of a user -- in this case the consent of an administrator.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
        :param pulumi.Input[str] three_legged_oauth_provider_name: (Updatable) Three legged OAuth provider name in Oracle Identity Cloud Service.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            account_form_visible=account_form_visible,
            admin_consent_granted=admin_consent_granted,
            bundle_configuration_properties=bundle_configuration_properties,
            bundle_pool_configuration=bundle_pool_configuration,
            can_be_authoritative=can_be_authoritative,
            connected=connected,
            connector_bundles=connector_bundles,
            enable_auth_sync_new_user_notification=enable_auth_sync_new_user_notification,
            enable_sync=enable_sync,
            enable_sync_summary_report_notification=enable_sync_summary_report_notification,
            flat_file_bundle_configuration_properties=flat_file_bundle_configuration_properties,
            flat_file_connector_bundle=flat_file_connector_bundle,
            identity_bridges=identity_bridges,
            is_authoritative=is_authoritative,
            is_directory=is_directory,
            is_on_premise_app=is_on_premise_app,
            is_schema_customization_supported=is_schema_customization_supported,
            is_schema_discovery_supported=is_schema_discovery_supported,
            is_three_legged_oauth_enabled=is_three_legged_oauth_enabled,
            is_two_legged_oauth_enabled=is_two_legged_oauth_enabled,
            object_classes=object_classes,
            sync_config_last_modified=sync_config_last_modified,
            three_legged_oauth_credential=three_legged_oauth_credential,
            three_legged_oauth_provider_name=three_legged_oauth_provider_name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             account_form_visible: Optional[pulumi.Input[bool]] = None,
             admin_consent_granted: Optional[pulumi.Input[bool]] = None,
             bundle_configuration_properties: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationPropertyArgs']]]] = None,
             bundle_pool_configuration: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfigurationArgs']] = None,
             can_be_authoritative: Optional[pulumi.Input[bool]] = None,
             connected: Optional[pulumi.Input[bool]] = None,
             connector_bundles: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundleArgs']]]] = None,
             enable_auth_sync_new_user_notification: Optional[pulumi.Input[bool]] = None,
             enable_sync: Optional[pulumi.Input[bool]] = None,
             enable_sync_summary_report_notification: Optional[pulumi.Input[bool]] = None,
             flat_file_bundle_configuration_properties: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationPropertyArgs']]]] = None,
             flat_file_connector_bundle: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundleArgs']] = None,
             identity_bridges: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridgeArgs']]]] = None,
             is_authoritative: Optional[pulumi.Input[bool]] = None,
             is_directory: Optional[pulumi.Input[bool]] = None,
             is_on_premise_app: Optional[pulumi.Input[bool]] = None,
             is_schema_customization_supported: Optional[pulumi.Input[bool]] = None,
             is_schema_discovery_supported: Optional[pulumi.Input[bool]] = None,
             is_three_legged_oauth_enabled: Optional[pulumi.Input[bool]] = None,
             is_two_legged_oauth_enabled: Optional[pulumi.Input[bool]] = None,
             object_classes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClassArgs']]]] = None,
             sync_config_last_modified: Optional[pulumi.Input[str]] = None,
             three_legged_oauth_credential: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredentialArgs']] = None,
             three_legged_oauth_provider_name: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'accountFormVisible' in kwargs:
            account_form_visible = kwargs['accountFormVisible']
        if 'adminConsentGranted' in kwargs:
            admin_consent_granted = kwargs['adminConsentGranted']
        if 'bundleConfigurationProperties' in kwargs:
            bundle_configuration_properties = kwargs['bundleConfigurationProperties']
        if 'bundlePoolConfiguration' in kwargs:
            bundle_pool_configuration = kwargs['bundlePoolConfiguration']
        if 'canBeAuthoritative' in kwargs:
            can_be_authoritative = kwargs['canBeAuthoritative']
        if 'connectorBundles' in kwargs:
            connector_bundles = kwargs['connectorBundles']
        if 'enableAuthSyncNewUserNotification' in kwargs:
            enable_auth_sync_new_user_notification = kwargs['enableAuthSyncNewUserNotification']
        if 'enableSync' in kwargs:
            enable_sync = kwargs['enableSync']
        if 'enableSyncSummaryReportNotification' in kwargs:
            enable_sync_summary_report_notification = kwargs['enableSyncSummaryReportNotification']
        if 'flatFileBundleConfigurationProperties' in kwargs:
            flat_file_bundle_configuration_properties = kwargs['flatFileBundleConfigurationProperties']
        if 'flatFileConnectorBundle' in kwargs:
            flat_file_connector_bundle = kwargs['flatFileConnectorBundle']
        if 'identityBridges' in kwargs:
            identity_bridges = kwargs['identityBridges']
        if 'isAuthoritative' in kwargs:
            is_authoritative = kwargs['isAuthoritative']
        if 'isDirectory' in kwargs:
            is_directory = kwargs['isDirectory']
        if 'isOnPremiseApp' in kwargs:
            is_on_premise_app = kwargs['isOnPremiseApp']
        if 'isSchemaCustomizationSupported' in kwargs:
            is_schema_customization_supported = kwargs['isSchemaCustomizationSupported']
        if 'isSchemaDiscoverySupported' in kwargs:
            is_schema_discovery_supported = kwargs['isSchemaDiscoverySupported']
        if 'isThreeLeggedOauthEnabled' in kwargs:
            is_three_legged_oauth_enabled = kwargs['isThreeLeggedOauthEnabled']
        if 'isTwoLeggedOauthEnabled' in kwargs:
            is_two_legged_oauth_enabled = kwargs['isTwoLeggedOauthEnabled']
        if 'objectClasses' in kwargs:
            object_classes = kwargs['objectClasses']
        if 'syncConfigLastModified' in kwargs:
            sync_config_last_modified = kwargs['syncConfigLastModified']
        if 'threeLeggedOauthCredential' in kwargs:
            three_legged_oauth_credential = kwargs['threeLeggedOauthCredential']
        if 'threeLeggedOauthProviderName' in kwargs:
            three_legged_oauth_provider_name = kwargs['threeLeggedOauthProviderName']

        if account_form_visible is not None:
            _setter("account_form_visible", account_form_visible)
        if admin_consent_granted is not None:
            _setter("admin_consent_granted", admin_consent_granted)
        if bundle_configuration_properties is not None:
            _setter("bundle_configuration_properties", bundle_configuration_properties)
        if bundle_pool_configuration is not None:
            _setter("bundle_pool_configuration", bundle_pool_configuration)
        if can_be_authoritative is not None:
            _setter("can_be_authoritative", can_be_authoritative)
        if connected is not None:
            _setter("connected", connected)
        if connector_bundles is not None:
            _setter("connector_bundles", connector_bundles)
        if enable_auth_sync_new_user_notification is not None:
            _setter("enable_auth_sync_new_user_notification", enable_auth_sync_new_user_notification)
        if enable_sync is not None:
            _setter("enable_sync", enable_sync)
        if enable_sync_summary_report_notification is not None:
            _setter("enable_sync_summary_report_notification", enable_sync_summary_report_notification)
        if flat_file_bundle_configuration_properties is not None:
            _setter("flat_file_bundle_configuration_properties", flat_file_bundle_configuration_properties)
        if flat_file_connector_bundle is not None:
            _setter("flat_file_connector_bundle", flat_file_connector_bundle)
        if identity_bridges is not None:
            _setter("identity_bridges", identity_bridges)
        if is_authoritative is not None:
            _setter("is_authoritative", is_authoritative)
        if is_directory is not None:
            _setter("is_directory", is_directory)
        if is_on_premise_app is not None:
            _setter("is_on_premise_app", is_on_premise_app)
        if is_schema_customization_supported is not None:
            _setter("is_schema_customization_supported", is_schema_customization_supported)
        if is_schema_discovery_supported is not None:
            _setter("is_schema_discovery_supported", is_schema_discovery_supported)
        if is_three_legged_oauth_enabled is not None:
            _setter("is_three_legged_oauth_enabled", is_three_legged_oauth_enabled)
        if is_two_legged_oauth_enabled is not None:
            _setter("is_two_legged_oauth_enabled", is_two_legged_oauth_enabled)
        if object_classes is not None:
            _setter("object_classes", object_classes)
        if sync_config_last_modified is not None:
            _setter("sync_config_last_modified", sync_config_last_modified)
        if three_legged_oauth_credential is not None:
            _setter("three_legged_oauth_credential", three_legged_oauth_credential)
        if three_legged_oauth_provider_name is not None:
            _setter("three_legged_oauth_provider_name", three_legged_oauth_provider_name)

    @property
    @pulumi.getter(name="accountFormVisible")
    def account_form_visible(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, then the account form will be displayed in the Oracle Identity Cloud Service UI to interactively create or update an account for this App. If a value is not specified for this attribute, a default value of \\"false\\" will be assumed as the value for this attribute.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "account_form_visible")

    @account_form_visible.setter
    def account_form_visible(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "account_form_visible", value)

    @property
    @pulumi.getter(name="adminConsentGranted")
    def admin_consent_granted(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, admin has granted consent to perform managed app run-time operations.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "admin_consent_granted")

    @admin_consent_granted.setter
    def admin_consent_granted(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "admin_consent_granted", value)

    @property
    @pulumi.getter(name="bundleConfigurationProperties")
    def bundle_configuration_properties(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationPropertyArgs']]]]:
        """
        (Updatable) ConnectorBundle configuration properties

        **SCIM++ Properties:**
        * idcsCompositeKey: [name]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "bundle_configuration_properties")

    @bundle_configuration_properties.setter
    def bundle_configuration_properties(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationPropertyArgs']]]]):
        pulumi.set(self, "bundle_configuration_properties", value)

    @property
    @pulumi.getter(name="bundlePoolConfiguration")
    def bundle_pool_configuration(self) -> Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfigurationArgs']]:
        """
        (Updatable) Configurable options maintaining a pool of ICF connector instances. Values for sub attributes can be set only if the ConnectorBundle referenced in the App has connectorPoolingSupported set to true

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "bundle_pool_configuration")

    @bundle_pool_configuration.setter
    def bundle_pool_configuration(self, value: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfigurationArgs']]):
        pulumi.set(self, "bundle_pool_configuration", value)

    @property
    @pulumi.getter(name="canBeAuthoritative")
    def can_be_authoritative(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, the managed app can be authoritative.

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "can_be_authoritative")

    @can_be_authoritative.setter
    def can_be_authoritative(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_be_authoritative", value)

    @property
    @pulumi.getter
    def connected(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, the accounts of the application are managed through an ICF connector bundle

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "connected")

    @connected.setter
    def connected(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "connected", value)

    @property
    @pulumi.getter(name="connectorBundles")
    def connector_bundles(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundleArgs']]]]:
        """
        (Updatable) ConnectorBundle

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "connector_bundles")

    @connector_bundles.setter
    def connector_bundles(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundleArgs']]]]):
        pulumi.set(self, "connector_bundles", value)

    @property
    @pulumi.getter(name="enableAuthSyncNewUserNotification")
    def enable_auth_sync_new_user_notification(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, send activation email to new users created from authoritative sync.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "enable_auth_sync_new_user_notification")

    @enable_auth_sync_new_user_notification.setter
    def enable_auth_sync_new_user_notification(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_auth_sync_new_user_notification", value)

    @property
    @pulumi.getter(name="enableSync")
    def enable_sync(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, sync run-time operations are enabled for this App.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "enable_sync")

    @enable_sync.setter
    def enable_sync(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_sync", value)

    @property
    @pulumi.getter(name="enableSyncSummaryReportNotification")
    def enable_sync_summary_report_notification(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, send sync summary as notification upon job completion.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "enable_sync_summary_report_notification")

    @enable_sync_summary_report_notification.setter
    def enable_sync_summary_report_notification(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_sync_summary_report_notification", value)

    @property
    @pulumi.getter(name="flatFileBundleConfigurationProperties")
    def flat_file_bundle_configuration_properties(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationPropertyArgs']]]]:
        """
        (Updatable) Flat file connector bundle configuration properties

        **SCIM++ Properties:**
        * idcsCompositeKey: [name]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "flat_file_bundle_configuration_properties")

    @flat_file_bundle_configuration_properties.setter
    def flat_file_bundle_configuration_properties(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationPropertyArgs']]]]):
        pulumi.set(self, "flat_file_bundle_configuration_properties", value)

    @property
    @pulumi.getter(name="flatFileConnectorBundle")
    def flat_file_connector_bundle(self) -> Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundleArgs']]:
        """
        (Updatable) Flat file connector bundle to sync from a flat file.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "flat_file_connector_bundle")

    @flat_file_connector_bundle.setter
    def flat_file_connector_bundle(self, value: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundleArgs']]):
        pulumi.set(self, "flat_file_connector_bundle", value)

    @property
    @pulumi.getter(name="identityBridges")
    def identity_bridges(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridgeArgs']]]]:
        """
        (Updatable) IdentityBridges associated with this App

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "identity_bridges")

    @identity_bridges.setter
    def identity_bridges(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridgeArgs']]]]):
        pulumi.set(self, "identity_bridges", value)

    @property
    @pulumi.getter(name="isAuthoritative")
    def is_authoritative(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, sync from the managed app will be performed as authoritative sync.

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_authoritative")

    @is_authoritative.setter
    def is_authoritative(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_authoritative", value)

    @property
    @pulumi.getter(name="isDirectory")
    def is_directory(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, the managed app is a directory.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_directory")

    @is_directory.setter
    def is_directory(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_directory", value)

    @property
    @pulumi.getter(name="isOnPremiseApp")
    def is_on_premise_app(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, the managed app is an On-Premise app.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_on_premise_app")

    @is_on_premise_app.setter
    def is_on_premise_app(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_on_premise_app", value)

    @property
    @pulumi.getter(name="isSchemaCustomizationSupported")
    def is_schema_customization_supported(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, the managed app supports schema customization.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_schema_customization_supported")

    @is_schema_customization_supported.setter
    def is_schema_customization_supported(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_schema_customization_supported", value)

    @property
    @pulumi.getter(name="isSchemaDiscoverySupported")
    def is_schema_discovery_supported(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, the managed app supports schema discovery.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_schema_discovery_supported")

    @is_schema_discovery_supported.setter
    def is_schema_discovery_supported(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_schema_discovery_supported", value)

    @property
    @pulumi.getter(name="isThreeLeggedOauthEnabled")
    def is_three_legged_oauth_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, the managed app requires 3-legged OAuth for authorization.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_three_legged_oauth_enabled")

    @is_three_legged_oauth_enabled.setter
    def is_three_legged_oauth_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_three_legged_oauth_enabled", value)

    @property
    @pulumi.getter(name="isTwoLeggedOauthEnabled")
    def is_two_legged_oauth_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that Oracle Identity Cloud Service can use two-legged OAuth to connect to this ManagedApp.

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_two_legged_oauth_enabled")

    @is_two_legged_oauth_enabled.setter
    def is_two_legged_oauth_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_two_legged_oauth_enabled", value)

    @property
    @pulumi.getter(name="objectClasses")
    def object_classes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClassArgs']]]]:
        """
        (Updatable) Object classes

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "object_classes")

    @object_classes.setter
    def object_classes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClassArgs']]]]):
        pulumi.set(self, "object_classes", value)

    @property
    @pulumi.getter(name="syncConfigLastModified")
    def sync_config_last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the configuration of this App was updated. AppServices updates this timestamp whenever AppServices updates an App's configuration with respect to synchronization.

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "sync_config_last_modified")

    @sync_config_last_modified.setter
    def sync_config_last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sync_config_last_modified", value)

    @property
    @pulumi.getter(name="threeLeggedOauthCredential")
    def three_legged_oauth_credential(self) -> Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredentialArgs']]:
        """
        (Updatable) The value of this attribute persists any OAuth access token that the system uses to connect to this ManagedApp. The system obtains this access token using an OAuth protocol flow that could be two-legged or three-legged. A two-legged flow involves only the requester and the server. A three-legged flow also requires the consent of a user -- in this case the consent of an administrator.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        """
        return pulumi.get(self, "three_legged_oauth_credential")

    @three_legged_oauth_credential.setter
    def three_legged_oauth_credential(self, value: Optional[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredentialArgs']]):
        pulumi.set(self, "three_legged_oauth_credential", value)

    @property
    @pulumi.getter(name="threeLeggedOauthProviderName")
    def three_legged_oauth_provider_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Three legged OAuth provider name in Oracle Identity Cloud Service.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        """
        return pulumi.get(self, "three_legged_oauth_provider_name")

    @three_legged_oauth_provider_name.setter
    def three_legged_oauth_provider_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "three_legged_oauth_provider_name", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationPropertyArgs:
    def __init__(__self__, *,
                 icf_type: pulumi.Input[str],
                 name: pulumi.Input[str],
                 required: pulumi.Input[bool],
                 confidential: Optional[pulumi.Input[bool]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 help_message: Optional[pulumi.Input[str]] = None,
                 order: Optional[pulumi.Input[int]] = None,
                 values: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        :param pulumi.Input[str] icf_type: (Updatable) ICF data type of flatfile the bundle configuration property. This attribute maps to \\"type\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] required: (Updatable) If true, this flatfile bundle configuration property is required to connect to the target connected managed app. This attribute maps to \\"isRequired\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] confidential: (Updatable) If true, this flatfile bundle configuration property value is confidential and will be encrypted in Oracle Identity Cloud Service. This attribute maps to \\"isConfidential\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] display_name: (Updatable) Display name of the flatfile bundle configuration property. This attribute maps to \\"displayName\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] help_message: (Updatable) Help message of the flatfile bundle configuration property. This attribute maps to \\"helpMessage\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] order: (Updatable) Display sequence of the bundle configuration property.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] values: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationPropertyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            icf_type=icf_type,
            name=name,
            required=required,
            confidential=confidential,
            display_name=display_name,
            help_message=help_message,
            order=order,
            values=values,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             icf_type: pulumi.Input[str],
             name: pulumi.Input[str],
             required: pulumi.Input[bool],
             confidential: Optional[pulumi.Input[bool]] = None,
             display_name: Optional[pulumi.Input[str]] = None,
             help_message: Optional[pulumi.Input[str]] = None,
             order: Optional[pulumi.Input[int]] = None,
             values: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'icfType' in kwargs:
            icf_type = kwargs['icfType']
        if 'displayName' in kwargs:
            display_name = kwargs['displayName']
        if 'helpMessage' in kwargs:
            help_message = kwargs['helpMessage']

        _setter("icf_type", icf_type)
        _setter("name", name)
        _setter("required", required)
        if confidential is not None:
            _setter("confidential", confidential)
        if display_name is not None:
            _setter("display_name", display_name)
        if help_message is not None:
            _setter("help_message", help_message)
        if order is not None:
            _setter("order", order)
        if values is not None:
            _setter("values", values)

    @property
    @pulumi.getter(name="icfType")
    def icf_type(self) -> pulumi.Input[str]:
        """
        (Updatable) ICF data type of flatfile the bundle configuration property. This attribute maps to \\"type\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "icf_type")

    @icf_type.setter
    def icf_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "icf_type", value)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def required(self) -> pulumi.Input[bool]:
        """
        (Updatable) If true, this flatfile bundle configuration property is required to connect to the target connected managed app. This attribute maps to \\"isRequired\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "required")

    @required.setter
    def required(self, value: pulumi.Input[bool]):
        pulumi.set(self, "required", value)

    @property
    @pulumi.getter
    def confidential(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, this flatfile bundle configuration property value is confidential and will be encrypted in Oracle Identity Cloud Service. This attribute maps to \\"isConfidential\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "confidential")

    @confidential.setter
    def confidential(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "confidential", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display name of the flatfile bundle configuration property. This attribute maps to \\"displayName\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="helpMessage")
    def help_message(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Help message of the flatfile bundle configuration property. This attribute maps to \\"helpMessage\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "help_message")

    @help_message.setter
    def help_message(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "help_message", value)

    @property
    @pulumi.getter
    def order(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Display sequence of the bundle configuration property.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "order")

    @order.setter
    def order(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "order", value)

    @property
    @pulumi.getter
    def values(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "values", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfigurationArgs:
    def __init__(__self__, *,
                 max_idle: Optional[pulumi.Input[int]] = None,
                 max_objects: Optional[pulumi.Input[int]] = None,
                 max_wait: Optional[pulumi.Input[int]] = None,
                 min_evictable_idle_time_millis: Optional[pulumi.Input[int]] = None,
                 min_idle: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[int] max_idle: (Updatable) Maximum number of connector instances in the pool that are idle and active.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_objects: (Updatable) Maximum number of connector instances in the pool that are idle and active.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_wait: (Updatable) Maximum time (in milliseconds) to wait for a free connector instance to become available before failing.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] min_evictable_idle_time_millis: (Updatable) Minimum time (in milliseconds) to wait before evicting an idle conenctor instance from the pool.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] min_idle: (Updatable) Minimum number of idle connector instances in the pool.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfigurationArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            max_idle=max_idle,
            max_objects=max_objects,
            max_wait=max_wait,
            min_evictable_idle_time_millis=min_evictable_idle_time_millis,
            min_idle=min_idle,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             max_idle: Optional[pulumi.Input[int]] = None,
             max_objects: Optional[pulumi.Input[int]] = None,
             max_wait: Optional[pulumi.Input[int]] = None,
             min_evictable_idle_time_millis: Optional[pulumi.Input[int]] = None,
             min_idle: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'maxIdle' in kwargs:
            max_idle = kwargs['maxIdle']
        if 'maxObjects' in kwargs:
            max_objects = kwargs['maxObjects']
        if 'maxWait' in kwargs:
            max_wait = kwargs['maxWait']
        if 'minEvictableIdleTimeMillis' in kwargs:
            min_evictable_idle_time_millis = kwargs['minEvictableIdleTimeMillis']
        if 'minIdle' in kwargs:
            min_idle = kwargs['minIdle']

        if max_idle is not None:
            _setter("max_idle", max_idle)
        if max_objects is not None:
            _setter("max_objects", max_objects)
        if max_wait is not None:
            _setter("max_wait", max_wait)
        if min_evictable_idle_time_millis is not None:
            _setter("min_evictable_idle_time_millis", min_evictable_idle_time_millis)
        if min_idle is not None:
            _setter("min_idle", min_idle)

    @property
    @pulumi.getter(name="maxIdle")
    def max_idle(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Maximum number of connector instances in the pool that are idle and active.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_idle")

    @max_idle.setter
    def max_idle(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_idle", value)

    @property
    @pulumi.getter(name="maxObjects")
    def max_objects(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Maximum number of connector instances in the pool that are idle and active.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_objects")

    @max_objects.setter
    def max_objects(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_objects", value)

    @property
    @pulumi.getter(name="maxWait")
    def max_wait(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Maximum time (in milliseconds) to wait for a free connector instance to become available before failing.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_wait")

    @max_wait.setter
    def max_wait(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_wait", value)

    @property
    @pulumi.getter(name="minEvictableIdleTimeMillis")
    def min_evictable_idle_time_millis(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Minimum time (in milliseconds) to wait before evicting an idle conenctor instance from the pool.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "min_evictable_idle_time_millis")

    @min_evictable_idle_time_millis.setter
    def min_evictable_idle_time_millis(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_evictable_idle_time_millis", value)

    @property
    @pulumi.getter(name="minIdle")
    def min_idle(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Minimum number of idle connector instances in the pool.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "min_idle")

    @min_idle.setter
    def min_idle(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_idle", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundleArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 well_known_id: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsDefaultValue: AccountObjectClass
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] well_known_id: (Updatable) Unique well-known identifier used to reference connector bundle.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            ref=ref,
            well_known_id=well_known_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             well_known_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'wellKnownId' in kwargs:
            well_known_id = kwargs['wellKnownId']

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)
        if well_known_id is not None:
            _setter("well_known_id", well_known_id)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * caseExact: true
        * idcsDefaultValue: AccountObjectClass
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter(name="wellKnownId")
    def well_known_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique well-known identifier used to reference connector bundle.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "well_known_id")

    @well_known_id.setter
    def well_known_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "well_known_id", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationPropertyArgs:
    def __init__(__self__, *,
                 icf_type: pulumi.Input[str],
                 name: pulumi.Input[str],
                 required: pulumi.Input[bool],
                 confidential: Optional[pulumi.Input[bool]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 help_message: Optional[pulumi.Input[str]] = None,
                 order: Optional[pulumi.Input[int]] = None,
                 values: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        :param pulumi.Input[str] icf_type: (Updatable) ICF data type of flatfile the bundle configuration property. This attribute maps to \\"type\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] required: (Updatable) If true, this flatfile bundle configuration property is required to connect to the target connected managed app. This attribute maps to \\"isRequired\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] confidential: (Updatable) If true, this flatfile bundle configuration property value is confidential and will be encrypted in Oracle Identity Cloud Service. This attribute maps to \\"isConfidential\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] display_name: (Updatable) Display name of the flatfile bundle configuration property. This attribute maps to \\"displayName\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] help_message: (Updatable) Help message of the flatfile bundle configuration property. This attribute maps to \\"helpMessage\\" attribute in \\"ConfigurationProperty\\" in ICF.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] order: (Updatable) Display sequence of the bundle configuration property.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] values: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationPropertyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            icf_type=icf_type,
            name=name,
            required=required,
            confidential=confidential,
            display_name=display_name,
            help_message=help_message,
            order=order,
            values=values,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             icf_type: pulumi.Input[str],
             name: pulumi.Input[str],
             required: pulumi.Input[bool],
             confidential: Optional[pulumi.Input[bool]] = None,
             display_name: Optional[pulumi.Input[str]] = None,
             help_message: Optional[pulumi.Input[str]] = None,
             order: Optional[pulumi.Input[int]] = None,
             values: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'icfType' in kwargs:
            icf_type = kwargs['icfType']
        if 'displayName' in kwargs:
            display_name = kwargs['displayName']
        if 'helpMessage' in kwargs:
            help_message = kwargs['helpMessage']

        _setter("icf_type", icf_type)
        _setter("name", name)
        _setter("required", required)
        if confidential is not None:
            _setter("confidential", confidential)
        if display_name is not None:
            _setter("display_name", display_name)
        if help_message is not None:
            _setter("help_message", help_message)
        if order is not None:
            _setter("order", order)
        if values is not None:
            _setter("values", values)

    @property
    @pulumi.getter(name="icfType")
    def icf_type(self) -> pulumi.Input[str]:
        """
        (Updatable) ICF data type of flatfile the bundle configuration property. This attribute maps to \\"type\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "icf_type")

    @icf_type.setter
    def icf_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "icf_type", value)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def required(self) -> pulumi.Input[bool]:
        """
        (Updatable) If true, this flatfile bundle configuration property is required to connect to the target connected managed app. This attribute maps to \\"isRequired\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "required")

    @required.setter
    def required(self, value: pulumi.Input[bool]):
        pulumi.set(self, "required", value)

    @property
    @pulumi.getter
    def confidential(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, this flatfile bundle configuration property value is confidential and will be encrypted in Oracle Identity Cloud Service. This attribute maps to \\"isConfidential\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "confidential")

    @confidential.setter
    def confidential(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "confidential", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display name of the flatfile bundle configuration property. This attribute maps to \\"displayName\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="helpMessage")
    def help_message(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Help message of the flatfile bundle configuration property. This attribute maps to \\"helpMessage\\" attribute in \\"ConfigurationProperty\\" in ICF.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "help_message")

    @help_message.setter
    def help_message(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "help_message", value)

    @property
    @pulumi.getter
    def order(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Display sequence of the bundle configuration property.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "order")

    @order.setter
    def order(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "order", value)

    @property
    @pulumi.getter
    def values(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "values", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundleArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 well_known_id: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] well_known_id: (Updatable) Unique well-known identifier used to reference connector bundle.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
            well_known_id=well_known_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             well_known_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'wellKnownId' in kwargs:
            well_known_id = kwargs['wellKnownId']

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)
        if well_known_id is not None:
            _setter("well_known_id", well_known_id)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter(name="wellKnownId")
    def well_known_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique well-known identifier used to reference connector bundle.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "well_known_id")

    @well_known_id.setter
    def well_known_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "well_known_id", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridgeArgs:
    def __init__(__self__, *,
                 name: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridgeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if name is not None:
            _setter("name", name)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClassArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 is_account_object_class: Optional[pulumi.Input[bool]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsDefaultValue: AccountObjectClass
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] is_account_object_class: (Updatable) If true, the object class represents an account. The isAccountObjectClass attribute value 'true' MUST appear no more than once.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Object class resource type
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClassArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            is_account_object_class=is_account_object_class,
            ref=ref,
            resource_type=resource_type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             is_account_object_class: Optional[pulumi.Input[bool]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'isAccountObjectClass' in kwargs:
            is_account_object_class = kwargs['isAccountObjectClass']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if is_account_object_class is not None:
            _setter("is_account_object_class", is_account_object_class)
        if ref is not None:
            _setter("ref", ref)
        if resource_type is not None:
            _setter("resource_type", resource_type)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * caseExact: true
        * idcsDefaultValue: AccountObjectClass
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter(name="isAccountObjectClass")
    def is_account_object_class(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, the object class represents an account. The isAccountObjectClass attribute value 'true' MUST appear no more than once.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_account_object_class")

    @is_account_object_class.setter
    def is_account_object_class(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_account_object_class", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Object class resource type

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredentialArgs:
    def __init__(__self__, *,
                 access_token: Optional[pulumi.Input[str]] = None,
                 access_token_expiry: Optional[pulumi.Input[str]] = None,
                 refresh_token: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] access_token: (Updatable) Access Token
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * idcsSensitive: encrypt
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] access_token_expiry: (Updatable) Access token expiry
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] refresh_token: (Updatable) Refresh Token
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * idcsSensitive: encrypt
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredentialArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            access_token=access_token,
            access_token_expiry=access_token_expiry,
            refresh_token=refresh_token,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             access_token: Optional[pulumi.Input[str]] = None,
             access_token_expiry: Optional[pulumi.Input[str]] = None,
             refresh_token: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'accessToken' in kwargs:
            access_token = kwargs['accessToken']
        if 'accessTokenExpiry' in kwargs:
            access_token_expiry = kwargs['accessTokenExpiry']
        if 'refreshToken' in kwargs:
            refresh_token = kwargs['refreshToken']

        if access_token is not None:
            _setter("access_token", access_token)
        if access_token_expiry is not None:
            _setter("access_token_expiry", access_token_expiry)
        if refresh_token is not None:
            _setter("refresh_token", refresh_token)

    @property
    @pulumi.getter(name="accessToken")
    def access_token(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Access Token

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * idcsSensitive: encrypt
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "access_token")

    @access_token.setter
    def access_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "access_token", value)

    @property
    @pulumi.getter(name="accessTokenExpiry")
    def access_token_expiry(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Access token expiry

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "access_token_expiry")

    @access_token_expiry.setter
    def access_token_expiry(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "access_token_expiry", value)

    @property
    @pulumi.getter(name="refreshToken")
    def refresh_token(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Refresh Token

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * idcsSensitive: encrypt
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "refresh_token")

    @refresh_token.setter
    def refresh_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "refresh_token", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionmulticloudServiceAppAppArgs:
    def __init__(__self__, *,
                 multicloud_service_type: pulumi.Input[str],
                 multicloud_platform_url: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] multicloud_service_type: (Updatable) Specifies the service type for which the application is configured for multicloud integration. For applicable external service types, app will invoke multicloud service for runtime operations
               
               **Added In:** 2301202328
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] multicloud_platform_url: (Updatable) The multicloud platform service URL which the application will invoke for runtime operations such as AWSCredentials api invocation
               
               **Added In:** 2301202328
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionmulticloudServiceAppAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            multicloud_service_type=multicloud_service_type,
            multicloud_platform_url=multicloud_platform_url,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             multicloud_service_type: pulumi.Input[str],
             multicloud_platform_url: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'multicloudServiceType' in kwargs:
            multicloud_service_type = kwargs['multicloudServiceType']
        if 'multicloudPlatformUrl' in kwargs:
            multicloud_platform_url = kwargs['multicloudPlatformUrl']

        _setter("multicloud_service_type", multicloud_service_type)
        if multicloud_platform_url is not None:
            _setter("multicloud_platform_url", multicloud_platform_url)

    @property
    @pulumi.getter(name="multicloudServiceType")
    def multicloud_service_type(self) -> pulumi.Input[str]:
        """
        (Updatable) Specifies the service type for which the application is configured for multicloud integration. For applicable external service types, app will invoke multicloud service for runtime operations

        **Added In:** 2301202328

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "multicloud_service_type")

    @multicloud_service_type.setter
    def multicloud_service_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "multicloud_service_type", value)

    @property
    @pulumi.getter(name="multicloudPlatformUrl")
    def multicloud_platform_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The multicloud platform service URL which the application will invoke for runtime operations such as AWSCredentials api invocation

        **Added In:** 2301202328

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "multicloud_platform_url")

    @multicloud_platform_url.setter
    def multicloud_platform_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "multicloud_platform_url", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceAppArgs:
    def __init__(__self__, *,
                 current_federation_mode: Optional[pulumi.Input[str]] = None,
                 current_synchronization_mode: Optional[pulumi.Input[str]] = None,
                 enabling_next_fed_sync_modes: Optional[pulumi.Input[bool]] = None,
                 next_federation_mode: Optional[pulumi.Input[str]] = None,
                 next_synchronization_mode: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 service_instance_identifier: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] current_federation_mode: (Updatable) Current Federation Mode
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
        :param pulumi.Input[str] current_synchronization_mode: (Updatable) Current Synchronization Mode
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
        :param pulumi.Input[bool] enabling_next_fed_sync_modes: (Updatable) If true, indicates that enablement is in progress started but not completed
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
        :param pulumi.Input[str] next_federation_mode: (Updatable) Next Federation Mode
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
        :param pulumi.Input[str] next_synchronization_mode: (Updatable) Next Synchronization Mode
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
        :param pulumi.Input[str] region: (Updatable) This value identifies the OPC region in which the service is running.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] service_instance_identifier: (Updatable) This value specifies the unique identifier assigned to an instance of an Oracle Public Cloud service app.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: server
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            current_federation_mode=current_federation_mode,
            current_synchronization_mode=current_synchronization_mode,
            enabling_next_fed_sync_modes=enabling_next_fed_sync_modes,
            next_federation_mode=next_federation_mode,
            next_synchronization_mode=next_synchronization_mode,
            region=region,
            service_instance_identifier=service_instance_identifier,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             current_federation_mode: Optional[pulumi.Input[str]] = None,
             current_synchronization_mode: Optional[pulumi.Input[str]] = None,
             enabling_next_fed_sync_modes: Optional[pulumi.Input[bool]] = None,
             next_federation_mode: Optional[pulumi.Input[str]] = None,
             next_synchronization_mode: Optional[pulumi.Input[str]] = None,
             region: Optional[pulumi.Input[str]] = None,
             service_instance_identifier: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'currentFederationMode' in kwargs:
            current_federation_mode = kwargs['currentFederationMode']
        if 'currentSynchronizationMode' in kwargs:
            current_synchronization_mode = kwargs['currentSynchronizationMode']
        if 'enablingNextFedSyncModes' in kwargs:
            enabling_next_fed_sync_modes = kwargs['enablingNextFedSyncModes']
        if 'nextFederationMode' in kwargs:
            next_federation_mode = kwargs['nextFederationMode']
        if 'nextSynchronizationMode' in kwargs:
            next_synchronization_mode = kwargs['nextSynchronizationMode']
        if 'serviceInstanceIdentifier' in kwargs:
            service_instance_identifier = kwargs['serviceInstanceIdentifier']

        if current_federation_mode is not None:
            _setter("current_federation_mode", current_federation_mode)
        if current_synchronization_mode is not None:
            _setter("current_synchronization_mode", current_synchronization_mode)
        if enabling_next_fed_sync_modes is not None:
            _setter("enabling_next_fed_sync_modes", enabling_next_fed_sync_modes)
        if next_federation_mode is not None:
            _setter("next_federation_mode", next_federation_mode)
        if next_synchronization_mode is not None:
            _setter("next_synchronization_mode", next_synchronization_mode)
        if region is not None:
            _setter("region", region)
        if service_instance_identifier is not None:
            _setter("service_instance_identifier", service_instance_identifier)

    @property
    @pulumi.getter(name="currentFederationMode")
    def current_federation_mode(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Current Federation Mode

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        """
        return pulumi.get(self, "current_federation_mode")

    @current_federation_mode.setter
    def current_federation_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "current_federation_mode", value)

    @property
    @pulumi.getter(name="currentSynchronizationMode")
    def current_synchronization_mode(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Current Synchronization Mode

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        """
        return pulumi.get(self, "current_synchronization_mode")

    @current_synchronization_mode.setter
    def current_synchronization_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "current_synchronization_mode", value)

    @property
    @pulumi.getter(name="enablingNextFedSyncModes")
    def enabling_next_fed_sync_modes(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that enablement is in progress started but not completed

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        """
        return pulumi.get(self, "enabling_next_fed_sync_modes")

    @enabling_next_fed_sync_modes.setter
    def enabling_next_fed_sync_modes(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enabling_next_fed_sync_modes", value)

    @property
    @pulumi.getter(name="nextFederationMode")
    def next_federation_mode(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Next Federation Mode

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        """
        return pulumi.get(self, "next_federation_mode")

    @next_federation_mode.setter
    def next_federation_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "next_federation_mode", value)

    @property
    @pulumi.getter(name="nextSynchronizationMode")
    def next_synchronization_mode(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Next Synchronization Mode

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        """
        return pulumi.get(self, "next_synchronization_mode")

    @next_synchronization_mode.setter
    def next_synchronization_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "next_synchronization_mode", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This value identifies the OPC region in which the service is running.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="serviceInstanceIdentifier")
    def service_instance_identifier(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This value specifies the unique identifier assigned to an instance of an Oracle Public Cloud service app.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: server
        """
        return pulumi.get(self, "service_instance_identifier")

    @service_instance_identifier.setter
    def service_instance_identifier(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_instance_identifier", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppArgs:
    def __init__(__self__, *,
                 client_ip: pulumi.Input[str],
                 include_group_in_response: pulumi.Input[bool],
                 port: pulumi.Input[str],
                 secret_key: pulumi.Input[str],
                 capture_client_ip: Optional[pulumi.Input[bool]] = None,
                 country_code_response_attribute_id: Optional[pulumi.Input[str]] = None,
                 end_user_ip_attribute: Optional[pulumi.Input[str]] = None,
                 group_membership_radius_attribute: Optional[pulumi.Input[str]] = None,
                 group_membership_to_returns: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturnArgs']]]] = None,
                 group_name_format: Optional[pulumi.Input[str]] = None,
                 password_and_otp_together: Optional[pulumi.Input[bool]] = None,
                 radius_vendor_specific_id: Optional[pulumi.Input[str]] = None,
                 response_format: Optional[pulumi.Input[str]] = None,
                 response_format_delimiter: Optional[pulumi.Input[str]] = None,
                 type_of_radius_app: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] client_ip: (Updatable) This is the IP address of the RADIUS Client like Oracle Database server. It can be only IP address and not hostname.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
        :param pulumi.Input[bool] include_group_in_response: (Updatable) Indicates to include groups in RADIUS response
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
        :param pulumi.Input[str] port: (Updatable) This is the port of RADIUS Proxy which RADIUS client will connect to.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
        :param pulumi.Input[str] secret_key: (Updatable) Secret key used to secure communication between RADIUS Proxy and RADIUS client
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
        :param pulumi.Input[bool] capture_client_ip: (Updatable) If true, capture the client IP address from the RADIUS request packet. IP Address is used for auditing, policy-evaluation and country-code calculation.
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
        :param pulumi.Input[str] country_code_response_attribute_id: (Updatable) Vendor-specific identifier of the attribute in the RADIUS response that will contain the end-user's country code. This is an integer-value in the range 1 to 255
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
        :param pulumi.Input[str] end_user_ip_attribute: (Updatable) The name of the attribute that contains the Internet Protocol address of the end-user.
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
        :param pulumi.Input[str] group_membership_radius_attribute: (Updatable) RADIUS attribute that RADIUS-enabled system uses to pass the group membership
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturnArgs']]] group_membership_to_returns: (Updatable) In a successful authentication response, Oracle Identity Cloud Service will pass user's group information restricted to groups persisted in this attribute, in the specified RADIUS attribute.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] group_name_format: (Updatable) Configure the groupNameFormat based on vendor in order to pass it to RADIUS infra
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
        :param pulumi.Input[bool] password_and_otp_together: (Updatable) Indicates if password and OTP are passed in the same sign-in request or not.
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
        :param pulumi.Input[str] radius_vendor_specific_id: (Updatable) ID used to identify a particular vendor.
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
        :param pulumi.Input[str] response_format: (Updatable) Configure the responseFormat based on vendor in order to pass it to RADIUS infra
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
        :param pulumi.Input[str] response_format_delimiter: (Updatable) The delimiter used if group membership responseFormat is a delimited list instead of repeating attributes
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
        :param pulumi.Input[str] type_of_radius_app: (Updatable) Value consists of type of RADIUS App. Type can be Oracle Database, VPN etc
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            client_ip=client_ip,
            include_group_in_response=include_group_in_response,
            port=port,
            secret_key=secret_key,
            capture_client_ip=capture_client_ip,
            country_code_response_attribute_id=country_code_response_attribute_id,
            end_user_ip_attribute=end_user_ip_attribute,
            group_membership_radius_attribute=group_membership_radius_attribute,
            group_membership_to_returns=group_membership_to_returns,
            group_name_format=group_name_format,
            password_and_otp_together=password_and_otp_together,
            radius_vendor_specific_id=radius_vendor_specific_id,
            response_format=response_format,
            response_format_delimiter=response_format_delimiter,
            type_of_radius_app=type_of_radius_app,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             client_ip: pulumi.Input[str],
             include_group_in_response: pulumi.Input[bool],
             port: pulumi.Input[str],
             secret_key: pulumi.Input[str],
             capture_client_ip: Optional[pulumi.Input[bool]] = None,
             country_code_response_attribute_id: Optional[pulumi.Input[str]] = None,
             end_user_ip_attribute: Optional[pulumi.Input[str]] = None,
             group_membership_radius_attribute: Optional[pulumi.Input[str]] = None,
             group_membership_to_returns: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturnArgs']]]] = None,
             group_name_format: Optional[pulumi.Input[str]] = None,
             password_and_otp_together: Optional[pulumi.Input[bool]] = None,
             radius_vendor_specific_id: Optional[pulumi.Input[str]] = None,
             response_format: Optional[pulumi.Input[str]] = None,
             response_format_delimiter: Optional[pulumi.Input[str]] = None,
             type_of_radius_app: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'clientIp' in kwargs:
            client_ip = kwargs['clientIp']
        if 'includeGroupInResponse' in kwargs:
            include_group_in_response = kwargs['includeGroupInResponse']
        if 'secretKey' in kwargs:
            secret_key = kwargs['secretKey']
        if 'captureClientIp' in kwargs:
            capture_client_ip = kwargs['captureClientIp']
        if 'countryCodeResponseAttributeId' in kwargs:
            country_code_response_attribute_id = kwargs['countryCodeResponseAttributeId']
        if 'endUserIpAttribute' in kwargs:
            end_user_ip_attribute = kwargs['endUserIpAttribute']
        if 'groupMembershipRadiusAttribute' in kwargs:
            group_membership_radius_attribute = kwargs['groupMembershipRadiusAttribute']
        if 'groupMembershipToReturns' in kwargs:
            group_membership_to_returns = kwargs['groupMembershipToReturns']
        if 'groupNameFormat' in kwargs:
            group_name_format = kwargs['groupNameFormat']
        if 'passwordAndOtpTogether' in kwargs:
            password_and_otp_together = kwargs['passwordAndOtpTogether']
        if 'radiusVendorSpecificId' in kwargs:
            radius_vendor_specific_id = kwargs['radiusVendorSpecificId']
        if 'responseFormat' in kwargs:
            response_format = kwargs['responseFormat']
        if 'responseFormatDelimiter' in kwargs:
            response_format_delimiter = kwargs['responseFormatDelimiter']
        if 'typeOfRadiusApp' in kwargs:
            type_of_radius_app = kwargs['typeOfRadiusApp']

        _setter("client_ip", client_ip)
        _setter("include_group_in_response", include_group_in_response)
        _setter("port", port)
        _setter("secret_key", secret_key)
        if capture_client_ip is not None:
            _setter("capture_client_ip", capture_client_ip)
        if country_code_response_attribute_id is not None:
            _setter("country_code_response_attribute_id", country_code_response_attribute_id)
        if end_user_ip_attribute is not None:
            _setter("end_user_ip_attribute", end_user_ip_attribute)
        if group_membership_radius_attribute is not None:
            _setter("group_membership_radius_attribute", group_membership_radius_attribute)
        if group_membership_to_returns is not None:
            _setter("group_membership_to_returns", group_membership_to_returns)
        if group_name_format is not None:
            _setter("group_name_format", group_name_format)
        if password_and_otp_together is not None:
            _setter("password_and_otp_together", password_and_otp_together)
        if radius_vendor_specific_id is not None:
            _setter("radius_vendor_specific_id", radius_vendor_specific_id)
        if response_format is not None:
            _setter("response_format", response_format)
        if response_format_delimiter is not None:
            _setter("response_format_delimiter", response_format_delimiter)
        if type_of_radius_app is not None:
            _setter("type_of_radius_app", type_of_radius_app)

    @property
    @pulumi.getter(name="clientIp")
    def client_ip(self) -> pulumi.Input[str]:
        """
        (Updatable) This is the IP address of the RADIUS Client like Oracle Database server. It can be only IP address and not hostname.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        """
        return pulumi.get(self, "client_ip")

    @client_ip.setter
    def client_ip(self, value: pulumi.Input[str]):
        pulumi.set(self, "client_ip", value)

    @property
    @pulumi.getter(name="includeGroupInResponse")
    def include_group_in_response(self) -> pulumi.Input[bool]:
        """
        (Updatable) Indicates to include groups in RADIUS response

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        """
        return pulumi.get(self, "include_group_in_response")

    @include_group_in_response.setter
    def include_group_in_response(self, value: pulumi.Input[bool]):
        pulumi.set(self, "include_group_in_response", value)

    @property
    @pulumi.getter
    def port(self) -> pulumi.Input[str]:
        """
        (Updatable) This is the port of RADIUS Proxy which RADIUS client will connect to.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: pulumi.Input[str]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter(name="secretKey")
    def secret_key(self) -> pulumi.Input[str]:
        """
        (Updatable) Secret key used to secure communication between RADIUS Proxy and RADIUS client

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        """
        return pulumi.get(self, "secret_key")

    @secret_key.setter
    def secret_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "secret_key", value)

    @property
    @pulumi.getter(name="captureClientIp")
    def capture_client_ip(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, capture the client IP address from the RADIUS request packet. IP Address is used for auditing, policy-evaluation and country-code calculation.

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        """
        return pulumi.get(self, "capture_client_ip")

    @capture_client_ip.setter
    def capture_client_ip(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "capture_client_ip", value)

    @property
    @pulumi.getter(name="countryCodeResponseAttributeId")
    def country_code_response_attribute_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Vendor-specific identifier of the attribute in the RADIUS response that will contain the end-user's country code. This is an integer-value in the range 1 to 255

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        """
        return pulumi.get(self, "country_code_response_attribute_id")

    @country_code_response_attribute_id.setter
    def country_code_response_attribute_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "country_code_response_attribute_id", value)

    @property
    @pulumi.getter(name="endUserIpAttribute")
    def end_user_ip_attribute(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The name of the attribute that contains the Internet Protocol address of the end-user.

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        """
        return pulumi.get(self, "end_user_ip_attribute")

    @end_user_ip_attribute.setter
    def end_user_ip_attribute(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_user_ip_attribute", value)

    @property
    @pulumi.getter(name="groupMembershipRadiusAttribute")
    def group_membership_radius_attribute(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) RADIUS attribute that RADIUS-enabled system uses to pass the group membership

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        """
        return pulumi.get(self, "group_membership_radius_attribute")

    @group_membership_radius_attribute.setter
    def group_membership_radius_attribute(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_membership_radius_attribute", value)

    @property
    @pulumi.getter(name="groupMembershipToReturns")
    def group_membership_to_returns(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturnArgs']]]]:
        """
        (Updatable) In a successful authentication response, Oracle Identity Cloud Service will pass user's group information restricted to groups persisted in this attribute, in the specified RADIUS attribute.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "group_membership_to_returns")

    @group_membership_to_returns.setter
    def group_membership_to_returns(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturnArgs']]]]):
        pulumi.set(self, "group_membership_to_returns", value)

    @property
    @pulumi.getter(name="groupNameFormat")
    def group_name_format(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Configure the groupNameFormat based on vendor in order to pass it to RADIUS infra

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        """
        return pulumi.get(self, "group_name_format")

    @group_name_format.setter
    def group_name_format(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_name_format", value)

    @property
    @pulumi.getter(name="passwordAndOtpTogether")
    def password_and_otp_together(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates if password and OTP are passed in the same sign-in request or not.

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        """
        return pulumi.get(self, "password_and_otp_together")

    @password_and_otp_together.setter
    def password_and_otp_together(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "password_and_otp_together", value)

    @property
    @pulumi.getter(name="radiusVendorSpecificId")
    def radius_vendor_specific_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) ID used to identify a particular vendor.

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        """
        return pulumi.get(self, "radius_vendor_specific_id")

    @radius_vendor_specific_id.setter
    def radius_vendor_specific_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "radius_vendor_specific_id", value)

    @property
    @pulumi.getter(name="responseFormat")
    def response_format(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Configure the responseFormat based on vendor in order to pass it to RADIUS infra

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        """
        return pulumi.get(self, "response_format")

    @response_format.setter
    def response_format(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "response_format", value)

    @property
    @pulumi.getter(name="responseFormatDelimiter")
    def response_format_delimiter(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The delimiter used if group membership responseFormat is a delimited list instead of repeating attributes

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        """
        return pulumi.get(self, "response_format_delimiter")

    @response_format_delimiter.setter
    def response_format_delimiter(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "response_format_delimiter", value)

    @property
    @pulumi.getter(name="typeOfRadiusApp")
    def type_of_radius_app(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Value consists of type of RADIUS App. Type can be Oracle Database, VPN etc

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        """
        return pulumi.get(self, "type_of_radius_app")

    @type_of_radius_app.setter
    def type_of_radius_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type_of_radius_app", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturnArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturnArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionrequestableAppArgs:
    def __init__(__self__, *,
                 requestable: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] requestable: (Updatable) Flag controlling whether resource can be request by user through self service console.
               
               **Added In:** 17.3.4
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionrequestableAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            requestable=requestable,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             requestable: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if requestable is not None:
            _setter("requestable", requestable)

    @property
    @pulumi.getter
    def requestable(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Flag controlling whether resource can be request by user through self service console.

        **Added In:** 17.3.4

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "requestable")

    @requestable.setter
    def requestable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "requestable", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppArgs:
    def __init__(__self__, *,
                 assertion_consumer_url: Optional[pulumi.Input[str]] = None,
                 encrypt_assertion: Optional[pulumi.Input[bool]] = None,
                 encryption_algorithm: Optional[pulumi.Input[str]] = None,
                 encryption_certificate: Optional[pulumi.Input[str]] = None,
                 federation_protocol: Optional[pulumi.Input[str]] = None,
                 group_assertion_attributes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttributeArgs']]]] = None,
                 hok_acs_url: Optional[pulumi.Input[str]] = None,
                 hok_required: Optional[pulumi.Input[bool]] = None,
                 include_signing_cert_in_signature: Optional[pulumi.Input[bool]] = None,
                 key_encryption_algorithm: Optional[pulumi.Input[str]] = None,
                 last_notification_sent_time: Optional[pulumi.Input[str]] = None,
                 logout_binding: Optional[pulumi.Input[str]] = None,
                 logout_enabled: Optional[pulumi.Input[bool]] = None,
                 logout_request_url: Optional[pulumi.Input[str]] = None,
                 logout_response_url: Optional[pulumi.Input[str]] = None,
                 metadata: Optional[pulumi.Input[str]] = None,
                 name_id_format: Optional[pulumi.Input[str]] = None,
                 name_id_userstore_attribute: Optional[pulumi.Input[str]] = None,
                 outbound_assertion_attributes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttributeArgs']]]] = None,
                 partner_provider_id: Optional[pulumi.Input[str]] = None,
                 partner_provider_pattern: Optional[pulumi.Input[str]] = None,
                 sign_response_or_assertion: Optional[pulumi.Input[str]] = None,
                 signature_hash_algorithm: Optional[pulumi.Input[str]] = None,
                 signing_certificate: Optional[pulumi.Input[str]] = None,
                 succinct_id: Optional[pulumi.Input[str]] = None,
                 tenant_provider_id: Optional[pulumi.Input[str]] = None,
                 user_assertion_attributes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttributeArgs']]]] = None):
        """
        :param pulumi.Input[str] assertion_consumer_url: (Updatable) The attribute represents the URL to which the SAML Assertions will be sent by the SAML IdP.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] encrypt_assertion: (Updatable) If true, indicates that the system must encrypt the Security Assertion Markup Language (SAML) assertion.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] encryption_algorithm: (Updatable) This attribute indicates the encryption algorithm used to encrypt the SAML assertion.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] encryption_certificate: (Updatable) This attribute represents the encryption certificate that an App uses to encrypt the Security Assertion Markup Language (SAML) assertion.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] federation_protocol: (Updatable) Specifies the preferred federation protocol (SAML2.0 or WS-Fed1.1).
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsDefaultValue: SAML2.0
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttributeArgs']]] group_assertion_attributes: (Updatable) Each value of this attribute describes an attribute of Group that will be sent in a Security Assertion Markup Language (SAML) assertion.
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCompositeKey: [name]
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] hok_acs_url: (Updatable) Hok Assertion Consumer Service Url
               
               **Added In:** 2101262133
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] hok_required: (Updatable) If enabled, then the SAML Service supports Hok for this App.
               
               **Added In:** 2101262133
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] include_signing_cert_in_signature: (Updatable) If true, then the signing certificate is included in the signature.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] key_encryption_algorithm: (Updatable) This attribute indicates the key encryption algorithm.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] last_notification_sent_time: (Updatable) Records the notification timestamp for the SP whose signing certificate is about to expire.
               
               **Added In:** 2302092332
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] logout_binding: (Updatable) This attribute represents the HTTP binding that would be used while logout.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] logout_enabled: (Updatable) If true, then the SAML Service supports logout for this App.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] logout_request_url: (Updatable) The URL to which the partner sends the logout request.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] logout_response_url: (Updatable) The URL to which the partner sends the logout response.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] metadata: (Updatable) This attribute represents the metadata of a Security Provider in the Security Assertion Markup Language protocol.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name_id_format: (Updatable) This can be any string, but there are a set of standard nameIdFormats. If a nameIdFormat other than the standard list is chosen, it will be considered a custom nameidformat. The standard nameidformats include: saml-x509, saml-emailaddress, saml-windowsnamequalifier, saml-kerberos, saml-persistent, saml-transient, saml-unspecified, saml-none, and saml-persistent-opaque.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name_id_userstore_attribute: (Updatable) **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none This property specifies which user attribute is used as the NameID value in the SAML assertion. This attribute can be constructed by using attributes from the Oracle Identity Cloud Service Core Users schema.
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttributeArgs']]] outbound_assertion_attributes: (Updatable) Use to construct the outgoing SAML attributes
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] partner_provider_id: (Updatable) The ID of the Provider. This value corresponds to the entityID from the Service Provider metadata.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] partner_provider_pattern: (Updatable) The pattern of the Provider. This value corresponds to the entityID from the Service Provider metadata.
               
               **Added In:** 2202230830
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] sign_response_or_assertion: (Updatable) Indicates which part of the response should be signed.  A value of \\"Assertion\\" indicates that the Assertion should be signed.  A value of \\"Response\\" indicates that the SSO Response should be signed. A value of \\"AssertionAndResponse\\" indicates that both the Assertion and the SSO Response should be signed.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] signature_hash_algorithm: (Updatable) This attribute represents the algorithm used to hash the signature.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] signing_certificate: (Updatable) This attribute represents the signing certificate that an App uses to verify the signed authentication request.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] succinct_id: (Updatable) This attribute represents the Succinct ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: server
        :param pulumi.Input[str] tenant_provider_id: (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this SP.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttributeArgs']]] user_assertion_attributes: (Updatable) Each value of this attribute describes an attribute of User that will be sent in a Security Assertion Markup Language (SAML) assertion.
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCompositeKey: [name]
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            assertion_consumer_url=assertion_consumer_url,
            encrypt_assertion=encrypt_assertion,
            encryption_algorithm=encryption_algorithm,
            encryption_certificate=encryption_certificate,
            federation_protocol=federation_protocol,
            group_assertion_attributes=group_assertion_attributes,
            hok_acs_url=hok_acs_url,
            hok_required=hok_required,
            include_signing_cert_in_signature=include_signing_cert_in_signature,
            key_encryption_algorithm=key_encryption_algorithm,
            last_notification_sent_time=last_notification_sent_time,
            logout_binding=logout_binding,
            logout_enabled=logout_enabled,
            logout_request_url=logout_request_url,
            logout_response_url=logout_response_url,
            metadata=metadata,
            name_id_format=name_id_format,
            name_id_userstore_attribute=name_id_userstore_attribute,
            outbound_assertion_attributes=outbound_assertion_attributes,
            partner_provider_id=partner_provider_id,
            partner_provider_pattern=partner_provider_pattern,
            sign_response_or_assertion=sign_response_or_assertion,
            signature_hash_algorithm=signature_hash_algorithm,
            signing_certificate=signing_certificate,
            succinct_id=succinct_id,
            tenant_provider_id=tenant_provider_id,
            user_assertion_attributes=user_assertion_attributes,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             assertion_consumer_url: Optional[pulumi.Input[str]] = None,
             encrypt_assertion: Optional[pulumi.Input[bool]] = None,
             encryption_algorithm: Optional[pulumi.Input[str]] = None,
             encryption_certificate: Optional[pulumi.Input[str]] = None,
             federation_protocol: Optional[pulumi.Input[str]] = None,
             group_assertion_attributes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttributeArgs']]]] = None,
             hok_acs_url: Optional[pulumi.Input[str]] = None,
             hok_required: Optional[pulumi.Input[bool]] = None,
             include_signing_cert_in_signature: Optional[pulumi.Input[bool]] = None,
             key_encryption_algorithm: Optional[pulumi.Input[str]] = None,
             last_notification_sent_time: Optional[pulumi.Input[str]] = None,
             logout_binding: Optional[pulumi.Input[str]] = None,
             logout_enabled: Optional[pulumi.Input[bool]] = None,
             logout_request_url: Optional[pulumi.Input[str]] = None,
             logout_response_url: Optional[pulumi.Input[str]] = None,
             metadata: Optional[pulumi.Input[str]] = None,
             name_id_format: Optional[pulumi.Input[str]] = None,
             name_id_userstore_attribute: Optional[pulumi.Input[str]] = None,
             outbound_assertion_attributes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttributeArgs']]]] = None,
             partner_provider_id: Optional[pulumi.Input[str]] = None,
             partner_provider_pattern: Optional[pulumi.Input[str]] = None,
             sign_response_or_assertion: Optional[pulumi.Input[str]] = None,
             signature_hash_algorithm: Optional[pulumi.Input[str]] = None,
             signing_certificate: Optional[pulumi.Input[str]] = None,
             succinct_id: Optional[pulumi.Input[str]] = None,
             tenant_provider_id: Optional[pulumi.Input[str]] = None,
             user_assertion_attributes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttributeArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'assertionConsumerUrl' in kwargs:
            assertion_consumer_url = kwargs['assertionConsumerUrl']
        if 'encryptAssertion' in kwargs:
            encrypt_assertion = kwargs['encryptAssertion']
        if 'encryptionAlgorithm' in kwargs:
            encryption_algorithm = kwargs['encryptionAlgorithm']
        if 'encryptionCertificate' in kwargs:
            encryption_certificate = kwargs['encryptionCertificate']
        if 'federationProtocol' in kwargs:
            federation_protocol = kwargs['federationProtocol']
        if 'groupAssertionAttributes' in kwargs:
            group_assertion_attributes = kwargs['groupAssertionAttributes']
        if 'hokAcsUrl' in kwargs:
            hok_acs_url = kwargs['hokAcsUrl']
        if 'hokRequired' in kwargs:
            hok_required = kwargs['hokRequired']
        if 'includeSigningCertInSignature' in kwargs:
            include_signing_cert_in_signature = kwargs['includeSigningCertInSignature']
        if 'keyEncryptionAlgorithm' in kwargs:
            key_encryption_algorithm = kwargs['keyEncryptionAlgorithm']
        if 'lastNotificationSentTime' in kwargs:
            last_notification_sent_time = kwargs['lastNotificationSentTime']
        if 'logoutBinding' in kwargs:
            logout_binding = kwargs['logoutBinding']
        if 'logoutEnabled' in kwargs:
            logout_enabled = kwargs['logoutEnabled']
        if 'logoutRequestUrl' in kwargs:
            logout_request_url = kwargs['logoutRequestUrl']
        if 'logoutResponseUrl' in kwargs:
            logout_response_url = kwargs['logoutResponseUrl']
        if 'nameIdFormat' in kwargs:
            name_id_format = kwargs['nameIdFormat']
        if 'nameIdUserstoreAttribute' in kwargs:
            name_id_userstore_attribute = kwargs['nameIdUserstoreAttribute']
        if 'outboundAssertionAttributes' in kwargs:
            outbound_assertion_attributes = kwargs['outboundAssertionAttributes']
        if 'partnerProviderId' in kwargs:
            partner_provider_id = kwargs['partnerProviderId']
        if 'partnerProviderPattern' in kwargs:
            partner_provider_pattern = kwargs['partnerProviderPattern']
        if 'signResponseOrAssertion' in kwargs:
            sign_response_or_assertion = kwargs['signResponseOrAssertion']
        if 'signatureHashAlgorithm' in kwargs:
            signature_hash_algorithm = kwargs['signatureHashAlgorithm']
        if 'signingCertificate' in kwargs:
            signing_certificate = kwargs['signingCertificate']
        if 'succinctId' in kwargs:
            succinct_id = kwargs['succinctId']
        if 'tenantProviderId' in kwargs:
            tenant_provider_id = kwargs['tenantProviderId']
        if 'userAssertionAttributes' in kwargs:
            user_assertion_attributes = kwargs['userAssertionAttributes']

        if assertion_consumer_url is not None:
            _setter("assertion_consumer_url", assertion_consumer_url)
        if encrypt_assertion is not None:
            _setter("encrypt_assertion", encrypt_assertion)
        if encryption_algorithm is not None:
            _setter("encryption_algorithm", encryption_algorithm)
        if encryption_certificate is not None:
            _setter("encryption_certificate", encryption_certificate)
        if federation_protocol is not None:
            _setter("federation_protocol", federation_protocol)
        if group_assertion_attributes is not None:
            _setter("group_assertion_attributes", group_assertion_attributes)
        if hok_acs_url is not None:
            _setter("hok_acs_url", hok_acs_url)
        if hok_required is not None:
            _setter("hok_required", hok_required)
        if include_signing_cert_in_signature is not None:
            _setter("include_signing_cert_in_signature", include_signing_cert_in_signature)
        if key_encryption_algorithm is not None:
            _setter("key_encryption_algorithm", key_encryption_algorithm)
        if last_notification_sent_time is not None:
            _setter("last_notification_sent_time", last_notification_sent_time)
        if logout_binding is not None:
            _setter("logout_binding", logout_binding)
        if logout_enabled is not None:
            _setter("logout_enabled", logout_enabled)
        if logout_request_url is not None:
            _setter("logout_request_url", logout_request_url)
        if logout_response_url is not None:
            _setter("logout_response_url", logout_response_url)
        if metadata is not None:
            _setter("metadata", metadata)
        if name_id_format is not None:
            _setter("name_id_format", name_id_format)
        if name_id_userstore_attribute is not None:
            _setter("name_id_userstore_attribute", name_id_userstore_attribute)
        if outbound_assertion_attributes is not None:
            _setter("outbound_assertion_attributes", outbound_assertion_attributes)
        if partner_provider_id is not None:
            _setter("partner_provider_id", partner_provider_id)
        if partner_provider_pattern is not None:
            _setter("partner_provider_pattern", partner_provider_pattern)
        if sign_response_or_assertion is not None:
            _setter("sign_response_or_assertion", sign_response_or_assertion)
        if signature_hash_algorithm is not None:
            _setter("signature_hash_algorithm", signature_hash_algorithm)
        if signing_certificate is not None:
            _setter("signing_certificate", signing_certificate)
        if succinct_id is not None:
            _setter("succinct_id", succinct_id)
        if tenant_provider_id is not None:
            _setter("tenant_provider_id", tenant_provider_id)
        if user_assertion_attributes is not None:
            _setter("user_assertion_attributes", user_assertion_attributes)

    @property
    @pulumi.getter(name="assertionConsumerUrl")
    def assertion_consumer_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The attribute represents the URL to which the SAML Assertions will be sent by the SAML IdP.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "assertion_consumer_url")

    @assertion_consumer_url.setter
    def assertion_consumer_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "assertion_consumer_url", value)

    @property
    @pulumi.getter(name="encryptAssertion")
    def encrypt_assertion(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that the system must encrypt the Security Assertion Markup Language (SAML) assertion.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "encrypt_assertion")

    @encrypt_assertion.setter
    def encrypt_assertion(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encrypt_assertion", value)

    @property
    @pulumi.getter(name="encryptionAlgorithm")
    def encryption_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This attribute indicates the encryption algorithm used to encrypt the SAML assertion.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "encryption_algorithm")

    @encryption_algorithm.setter
    def encryption_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "encryption_algorithm", value)

    @property
    @pulumi.getter(name="encryptionCertificate")
    def encryption_certificate(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This attribute represents the encryption certificate that an App uses to encrypt the Security Assertion Markup Language (SAML) assertion.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "encryption_certificate")

    @encryption_certificate.setter
    def encryption_certificate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "encryption_certificate", value)

    @property
    @pulumi.getter(name="federationProtocol")
    def federation_protocol(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Specifies the preferred federation protocol (SAML2.0 or WS-Fed1.1).

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: true
        * idcsDefaultValue: SAML2.0
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "federation_protocol")

    @federation_protocol.setter
    def federation_protocol(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "federation_protocol", value)

    @property
    @pulumi.getter(name="groupAssertionAttributes")
    def group_assertion_attributes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttributeArgs']]]]:
        """
        (Updatable) Each value of this attribute describes an attribute of Group that will be sent in a Security Assertion Markup Language (SAML) assertion.

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCompositeKey: [name]
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "group_assertion_attributes")

    @group_assertion_attributes.setter
    def group_assertion_attributes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttributeArgs']]]]):
        pulumi.set(self, "group_assertion_attributes", value)

    @property
    @pulumi.getter(name="hokAcsUrl")
    def hok_acs_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Hok Assertion Consumer Service Url

        **Added In:** 2101262133

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "hok_acs_url")

    @hok_acs_url.setter
    def hok_acs_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hok_acs_url", value)

    @property
    @pulumi.getter(name="hokRequired")
    def hok_required(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If enabled, then the SAML Service supports Hok for this App.

        **Added In:** 2101262133

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "hok_required")

    @hok_required.setter
    def hok_required(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "hok_required", value)

    @property
    @pulumi.getter(name="includeSigningCertInSignature")
    def include_signing_cert_in_signature(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, then the signing certificate is included in the signature.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "include_signing_cert_in_signature")

    @include_signing_cert_in_signature.setter
    def include_signing_cert_in_signature(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "include_signing_cert_in_signature", value)

    @property
    @pulumi.getter(name="keyEncryptionAlgorithm")
    def key_encryption_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This attribute indicates the key encryption algorithm.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key_encryption_algorithm")

    @key_encryption_algorithm.setter
    def key_encryption_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "key_encryption_algorithm", value)

    @property
    @pulumi.getter(name="lastNotificationSentTime")
    def last_notification_sent_time(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Records the notification timestamp for the SP whose signing certificate is about to expire.

        **Added In:** 2302092332

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_notification_sent_time")

    @last_notification_sent_time.setter
    def last_notification_sent_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_notification_sent_time", value)

    @property
    @pulumi.getter(name="logoutBinding")
    def logout_binding(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This attribute represents the HTTP binding that would be used while logout.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "logout_binding")

    @logout_binding.setter
    def logout_binding(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "logout_binding", value)

    @property
    @pulumi.getter(name="logoutEnabled")
    def logout_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, then the SAML Service supports logout for this App.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "logout_enabled")

    @logout_enabled.setter
    def logout_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "logout_enabled", value)

    @property
    @pulumi.getter(name="logoutRequestUrl")
    def logout_request_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URL to which the partner sends the logout request.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "logout_request_url")

    @logout_request_url.setter
    def logout_request_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "logout_request_url", value)

    @property
    @pulumi.getter(name="logoutResponseUrl")
    def logout_response_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URL to which the partner sends the logout response.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "logout_response_url")

    @logout_response_url.setter
    def logout_response_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "logout_response_url", value)

    @property
    @pulumi.getter
    def metadata(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This attribute represents the metadata of a Security Provider in the Security Assertion Markup Language protocol.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "metadata")

    @metadata.setter
    def metadata(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "metadata", value)

    @property
    @pulumi.getter(name="nameIdFormat")
    def name_id_format(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This can be any string, but there are a set of standard nameIdFormats. If a nameIdFormat other than the standard list is chosen, it will be considered a custom nameidformat. The standard nameidformats include: saml-x509, saml-emailaddress, saml-windowsnamequalifier, saml-kerberos, saml-persistent, saml-transient, saml-unspecified, saml-none, and saml-persistent-opaque.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name_id_format")

    @name_id_format.setter
    def name_id_format(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name_id_format", value)

    @property
    @pulumi.getter(name="nameIdUserstoreAttribute")
    def name_id_userstore_attribute(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none This property specifies which user attribute is used as the NameID value in the SAML assertion. This attribute can be constructed by using attributes from the Oracle Identity Cloud Service Core Users schema.
        """
        return pulumi.get(self, "name_id_userstore_attribute")

    @name_id_userstore_attribute.setter
    def name_id_userstore_attribute(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name_id_userstore_attribute", value)

    @property
    @pulumi.getter(name="outboundAssertionAttributes")
    def outbound_assertion_attributes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttributeArgs']]]]:
        """
        (Updatable) Use to construct the outgoing SAML attributes

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "outbound_assertion_attributes")

    @outbound_assertion_attributes.setter
    def outbound_assertion_attributes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttributeArgs']]]]):
        pulumi.set(self, "outbound_assertion_attributes", value)

    @property
    @pulumi.getter(name="partnerProviderId")
    def partner_provider_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The ID of the Provider. This value corresponds to the entityID from the Service Provider metadata.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "partner_provider_id")

    @partner_provider_id.setter
    def partner_provider_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "partner_provider_id", value)

    @property
    @pulumi.getter(name="partnerProviderPattern")
    def partner_provider_pattern(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The pattern of the Provider. This value corresponds to the entityID from the Service Provider metadata.

        **Added In:** 2202230830

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "partner_provider_pattern")

    @partner_provider_pattern.setter
    def partner_provider_pattern(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "partner_provider_pattern", value)

    @property
    @pulumi.getter(name="signResponseOrAssertion")
    def sign_response_or_assertion(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates which part of the response should be signed.  A value of \\"Assertion\\" indicates that the Assertion should be signed.  A value of \\"Response\\" indicates that the SSO Response should be signed. A value of \\"AssertionAndResponse\\" indicates that both the Assertion and the SSO Response should be signed.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "sign_response_or_assertion")

    @sign_response_or_assertion.setter
    def sign_response_or_assertion(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sign_response_or_assertion", value)

    @property
    @pulumi.getter(name="signatureHashAlgorithm")
    def signature_hash_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This attribute represents the algorithm used to hash the signature.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "signature_hash_algorithm")

    @signature_hash_algorithm.setter
    def signature_hash_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signature_hash_algorithm", value)

    @property
    @pulumi.getter(name="signingCertificate")
    def signing_certificate(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This attribute represents the signing certificate that an App uses to verify the signed authentication request.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "signing_certificate")

    @signing_certificate.setter
    def signing_certificate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signing_certificate", value)

    @property
    @pulumi.getter(name="succinctId")
    def succinct_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This attribute represents the Succinct ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: server
        """
        return pulumi.get(self, "succinct_id")

    @succinct_id.setter
    def succinct_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "succinct_id", value)

    @property
    @pulumi.getter(name="tenantProviderId")
    def tenant_provider_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this SP.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "tenant_provider_id")

    @tenant_provider_id.setter
    def tenant_provider_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_provider_id", value)

    @property
    @pulumi.getter(name="userAssertionAttributes")
    def user_assertion_attributes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttributeArgs']]]]:
        """
        (Updatable) Each value of this attribute describes an attribute of User that will be sent in a Security Assertion Markup Language (SAML) assertion.

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCompositeKey: [name]
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "user_assertion_attributes")

    @user_assertion_attributes.setter
    def user_assertion_attributes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttributeArgs']]]]):
        pulumi.set(self, "user_assertion_attributes", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttributeArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 condition: Optional[pulumi.Input[str]] = None,
                 format: Optional[pulumi.Input[str]] = None,
                 group_name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] condition: (Updatable) Indicates the filter types that are supported for the Group assertion attributes.
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] format: (Updatable) Indicates the format of the assertion attribute.
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] group_name: (Updatable) Indicates the group name that are supported for the group assertion attributes.
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttributeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            condition=condition,
            format=format,
            group_name=group_name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: pulumi.Input[str],
             condition: Optional[pulumi.Input[str]] = None,
             format: Optional[pulumi.Input[str]] = None,
             group_name: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'groupName' in kwargs:
            group_name = kwargs['groupName']

        _setter("name", name)
        if condition is not None:
            _setter("condition", condition)
        if format is not None:
            _setter("format", format)
        if group_name is not None:
            _setter("group_name", group_name)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def condition(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates the filter types that are supported for the Group assertion attributes.

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "condition")

    @condition.setter
    def condition(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "condition", value)

    @property
    @pulumi.getter
    def format(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates the format of the assertion attribute.

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "format")

    @format.setter
    def format(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "format", value)

    @property
    @pulumi.getter(name="groupName")
    def group_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates the group name that are supported for the group assertion attributes.

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "group_name")

    @group_name.setter
    def group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_name", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttributeArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 direction: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] direction: (Updatable) Mapped Attribute Direction
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttributeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            direction=direction,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             direction: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if direction is not None:
            _setter("direction", direction)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def direction(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Mapped Attribute Direction

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "direction")

    @direction.setter
    def direction(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "direction", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttributeArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 user_store_attribute_name: pulumi.Input[str],
                 format: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] name: (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] user_store_attribute_name: (Updatable) This attribute specifies which user attribute should be used to create the value of the SAML assertion attribute. The userstore attribute can be constructed by using attributes from the Oracle Identity Cloud Service Core Users schema. <br><b>Note</b>: Attributes from extensions to the Core User schema are not supported in v1.0.
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] format: (Updatable) Indicates the format of the assertion attribute.
               
               **Deprecated Since: 18.2.2**
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * idcsValuePersistedInOtherAttribute: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttributeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            user_store_attribute_name=user_store_attribute_name,
            format=format,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: pulumi.Input[str],
             user_store_attribute_name: pulumi.Input[str],
             format: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'userStoreAttributeName' in kwargs:
            user_store_attribute_name = kwargs['userStoreAttributeName']

        _setter("name", name)
        _setter("user_store_attribute_name", user_store_attribute_name)
        if format is not None:
            _setter("format", format)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="userStoreAttributeName")
    def user_store_attribute_name(self) -> pulumi.Input[str]:
        """
        (Updatable) This attribute specifies which user attribute should be used to create the value of the SAML assertion attribute. The userstore attribute can be constructed by using attributes from the Oracle Identity Cloud Service Core Users schema. <br><b>Note</b>: Attributes from extensions to the Core User schema are not supported in v1.0.

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_store_attribute_name")

    @user_store_attribute_name.setter
    def user_store_attribute_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "user_store_attribute_name", value)

    @property
    @pulumi.getter
    def format(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Indicates the format of the assertion attribute.

        **Deprecated Since: 18.2.2**

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * idcsValuePersistedInOtherAttribute: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "format")

    @format.setter
    def format(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "format", value)


@pulumi.input_type
class DomainsAppUrnietfparamsscimschemasoracleidcsextensionwebTierPolicyAppArgs:
    def __init__(__self__, *,
                 resource_ref: Optional[pulumi.Input[bool]] = None,
                 web_tier_policy_az_control: Optional[pulumi.Input[str]] = None,
                 web_tier_policy_json: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[bool] resource_ref: (Updatable) If this Attribute is true, resource ref id and resource ref name attributes will we included in wtp json response.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] web_tier_policy_az_control: (Updatable) Webtier policy AZ Control
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] web_tier_policy_json: (Updatable) Store the web tier policy for an application as a string in Javascript Object Notification (JSON) format.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        """
        DomainsAppUrnietfparamsscimschemasoracleidcsextensionwebTierPolicyAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            resource_ref=resource_ref,
            web_tier_policy_az_control=web_tier_policy_az_control,
            web_tier_policy_json=web_tier_policy_json,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             resource_ref: Optional[pulumi.Input[bool]] = None,
             web_tier_policy_az_control: Optional[pulumi.Input[str]] = None,
             web_tier_policy_json: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'resourceRef' in kwargs:
            resource_ref = kwargs['resourceRef']
        if 'webTierPolicyAzControl' in kwargs:
            web_tier_policy_az_control = kwargs['webTierPolicyAzControl']
        if 'webTierPolicyJson' in kwargs:
            web_tier_policy_json = kwargs['webTierPolicyJson']

        if resource_ref is not None:
            _setter("resource_ref", resource_ref)
        if web_tier_policy_az_control is not None:
            _setter("web_tier_policy_az_control", web_tier_policy_az_control)
        if web_tier_policy_json is not None:
            _setter("web_tier_policy_json", web_tier_policy_json)

    @property
    @pulumi.getter(name="resourceRef")
    def resource_ref(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If this Attribute is true, resource ref id and resource ref name attributes will we included in wtp json response.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "resource_ref")

    @resource_ref.setter
    def resource_ref(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "resource_ref", value)

    @property
    @pulumi.getter(name="webTierPolicyAzControl")
    def web_tier_policy_az_control(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Webtier policy AZ Control

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "web_tier_policy_az_control")

    @web_tier_policy_az_control.setter
    def web_tier_policy_az_control(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "web_tier_policy_az_control", value)

    @property
    @pulumi.getter(name="webTierPolicyJson")
    def web_tier_policy_json(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Store the web tier policy for an application as a string in Javascript Object Notification (JSON) format.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "web_tier_policy_json")

    @web_tier_policy_json.setter
    def web_tier_policy_json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "web_tier_policy_json", value)


@pulumi.input_type
class DomainsAppUserRoleArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) ID of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] description: (Updatable) The description of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) Display-name of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) URI of the AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsAppUserRoleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            description=description,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             description: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if description is not None:
            _setter("description", description)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) ID of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The description of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Display-name of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) URI of the AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsAuthTokenIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAuthTokenIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAuthTokenIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAuthTokenIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAuthTokenMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAuthTokenMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsAuthTokenTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAuthTokenTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs:
    def __init__(__self__, *,
                 allow_self_change: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] allow_self_change: If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).
               
               **Added In:** 2205182039
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: writeOnly
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        """
        DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            allow_self_change=allow_self_change,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             allow_self_change: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'allowSelfChange' in kwargs:
            allow_self_change = kwargs['allowSelfChange']

        if allow_self_change is not None:
            _setter("allow_self_change", allow_self_change)

    @property
    @pulumi.getter(name="allowSelfChange")
    def allow_self_change(self) -> Optional[pulumi.Input[bool]]:
        """
        If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).

        **Added In:** 2205182039

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: writeOnly
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_self_change")

    @allow_self_change.setter
    def allow_self_change(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_self_change", value)


@pulumi.input_type
class DomainsAuthTokenUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The username.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsAuthTokenUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The username.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingBypassCodeSettingsArgs:
    def __init__(__self__, *,
                 help_desk_code_expiry_in_mins: pulumi.Input[int],
                 help_desk_generation_enabled: pulumi.Input[bool],
                 help_desk_max_usage: pulumi.Input[int],
                 length: pulumi.Input[int],
                 max_active: pulumi.Input[int],
                 self_service_generation_enabled: pulumi.Input[bool]):
        """
        :param pulumi.Input[int] help_desk_code_expiry_in_mins: (Updatable) Expiry (in minutes) of any bypass code that is generated by the help desk
               
               **SCIM++ Properties:**
               * idcsMaxValue: 9999999
               * idcsMinValue: 1
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[bool] help_desk_generation_enabled: (Updatable) If true, indicates that help desk bypass code generation is enabled
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[int] help_desk_max_usage: (Updatable) The maximum number of times that any bypass code that is generated by the help desk can be used
               
               **SCIM++ Properties:**
               * idcsMaxValue: 999
               * idcsMinValue: 1
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] length: (Updatable) Exact length of the bypass code to be generated
               
               **SCIM++ Properties:**
               * idcsMaxValue: 20
               * idcsMinValue: 8
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_active: (Updatable) The maximum number of bypass codes that can be issued to any user
               
               **SCIM++ Properties:**
               * idcsMaxValue: 6
               * idcsMinValue: 1
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[bool] self_service_generation_enabled: (Updatable) If true, indicates that self-service bypass code generation is enabled
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingBypassCodeSettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            help_desk_code_expiry_in_mins=help_desk_code_expiry_in_mins,
            help_desk_generation_enabled=help_desk_generation_enabled,
            help_desk_max_usage=help_desk_max_usage,
            length=length,
            max_active=max_active,
            self_service_generation_enabled=self_service_generation_enabled,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             help_desk_code_expiry_in_mins: pulumi.Input[int],
             help_desk_generation_enabled: pulumi.Input[bool],
             help_desk_max_usage: pulumi.Input[int],
             length: pulumi.Input[int],
             max_active: pulumi.Input[int],
             self_service_generation_enabled: pulumi.Input[bool],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'helpDeskCodeExpiryInMins' in kwargs:
            help_desk_code_expiry_in_mins = kwargs['helpDeskCodeExpiryInMins']
        if 'helpDeskGenerationEnabled' in kwargs:
            help_desk_generation_enabled = kwargs['helpDeskGenerationEnabled']
        if 'helpDeskMaxUsage' in kwargs:
            help_desk_max_usage = kwargs['helpDeskMaxUsage']
        if 'maxActive' in kwargs:
            max_active = kwargs['maxActive']
        if 'selfServiceGenerationEnabled' in kwargs:
            self_service_generation_enabled = kwargs['selfServiceGenerationEnabled']

        _setter("help_desk_code_expiry_in_mins", help_desk_code_expiry_in_mins)
        _setter("help_desk_generation_enabled", help_desk_generation_enabled)
        _setter("help_desk_max_usage", help_desk_max_usage)
        _setter("length", length)
        _setter("max_active", max_active)
        _setter("self_service_generation_enabled", self_service_generation_enabled)

    @property
    @pulumi.getter(name="helpDeskCodeExpiryInMins")
    def help_desk_code_expiry_in_mins(self) -> pulumi.Input[int]:
        """
        (Updatable) Expiry (in minutes) of any bypass code that is generated by the help desk

        **SCIM++ Properties:**
        * idcsMaxValue: 9999999
        * idcsMinValue: 1
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "help_desk_code_expiry_in_mins")

    @help_desk_code_expiry_in_mins.setter
    def help_desk_code_expiry_in_mins(self, value: pulumi.Input[int]):
        pulumi.set(self, "help_desk_code_expiry_in_mins", value)

    @property
    @pulumi.getter(name="helpDeskGenerationEnabled")
    def help_desk_generation_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) If true, indicates that help desk bypass code generation is enabled

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "help_desk_generation_enabled")

    @help_desk_generation_enabled.setter
    def help_desk_generation_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "help_desk_generation_enabled", value)

    @property
    @pulumi.getter(name="helpDeskMaxUsage")
    def help_desk_max_usage(self) -> pulumi.Input[int]:
        """
        (Updatable) The maximum number of times that any bypass code that is generated by the help desk can be used

        **SCIM++ Properties:**
        * idcsMaxValue: 999
        * idcsMinValue: 1
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "help_desk_max_usage")

    @help_desk_max_usage.setter
    def help_desk_max_usage(self, value: pulumi.Input[int]):
        pulumi.set(self, "help_desk_max_usage", value)

    @property
    @pulumi.getter
    def length(self) -> pulumi.Input[int]:
        """
        (Updatable) Exact length of the bypass code to be generated

        **SCIM++ Properties:**
        * idcsMaxValue: 20
        * idcsMinValue: 8
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "length")

    @length.setter
    def length(self, value: pulumi.Input[int]):
        pulumi.set(self, "length", value)

    @property
    @pulumi.getter(name="maxActive")
    def max_active(self) -> pulumi.Input[int]:
        """
        (Updatable) The maximum number of bypass codes that can be issued to any user

        **SCIM++ Properties:**
        * idcsMaxValue: 6
        * idcsMinValue: 1
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_active")

    @max_active.setter
    def max_active(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_active", value)

    @property
    @pulumi.getter(name="selfServiceGenerationEnabled")
    def self_service_generation_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) If true, indicates that self-service bypass code generation is enabled

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "self_service_generation_enabled")

    @self_service_generation_enabled.setter
    def self_service_generation_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "self_service_generation_enabled", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingClientAppSettingsArgs:
    def __init__(__self__, *,
                 device_protection_policy: pulumi.Input[str],
                 initial_lockout_period_in_secs: pulumi.Input[int],
                 key_pair_length: pulumi.Input[int],
                 lockout_escalation_pattern: pulumi.Input[str],
                 max_failures_before_lockout: pulumi.Input[int],
                 max_failures_before_warning: pulumi.Input[int],
                 max_lockout_interval_in_secs: pulumi.Input[int],
                 min_pin_length: pulumi.Input[int],
                 policy_update_freq_in_days: pulumi.Input[int],
                 request_signing_algo: pulumi.Input[str],
                 shared_secret_encoding: pulumi.Input[str],
                 unlock_app_for_each_request_enabled: pulumi.Input[bool],
                 unlock_app_interval_in_secs: pulumi.Input[int],
                 unlock_on_app_foreground_enabled: pulumi.Input[bool],
                 unlock_on_app_start_enabled: pulumi.Input[bool]):
        """
        :param pulumi.Input[str] device_protection_policy: (Updatable) Indicates what protection policy that the system applies on a device. By default, the value is NONE, which indicates that the system applies no protection policy. A value of APP_PIN indicates that the system requires a Personal Identification Number (PIN). A value of DEVICE_BIOMETRIC_OR_APP_PIN indicates that either a PIN or a biometric authentication factor is required.
               
               **SCIM++ Properties:**
               * idcsCanonicalValueSourceFilter: attrName eq "deviceProtectionPolicy" and attrValues.value eq "$(deviceProtectionPolicy)"
               * idcsCanonicalValueSourceResourceType: AllowedValue
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] initial_lockout_period_in_secs: (Updatable) The period of time in seconds that the system will lock a user out of the service after that user exceeds the maximum number of login failures
               
               **SCIM++ Properties:**
               * idcsMaxValue: 86400
               * idcsMinValue: 30
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] key_pair_length: (Updatable) The size of the key that the system uses to generate the public-private key pair
               
               **SCIM++ Properties:**
               * idcsMaxValue: 4000
               * idcsMinValue: 32
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] lockout_escalation_pattern: (Updatable) The pattern of escalation that the system follows, in locking a particular user out of the service.
               
               **SCIM++ Properties:**
               * idcsCanonicalValueSourceFilter: attrName eq "lockoutEscalationPattern" and attrValues.value eq "$(lockoutEscalationPattern)"
               * idcsCanonicalValueSourceResourceType: AllowedValue
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] max_failures_before_lockout: (Updatable) The maximum number of times that a particular user can fail to login before the system locks that user out of the service
               
               **SCIM++ Properties:**
               * idcsMaxValue: 10
               * idcsMinValue: 5
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_failures_before_warning: (Updatable) The maximum number of login failures that the system will allow before raising a warning and sending an alert via email
               
               **SCIM++ Properties:**
               * idcsMaxValue: 10
               * idcsMinValue: 0
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_lockout_interval_in_secs: (Updatable) The maximum period of time that the system will lock a particular user out of the service regardless of what the configured pattern of escalation would otherwise dictate
               
               **SCIM++ Properties:**
               * idcsMaxValue: 86400
               * idcsMinValue: 30
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] min_pin_length: (Updatable) Minimum length of the Personal Identification Number (PIN)
               
               **SCIM++ Properties:**
               * idcsMaxValue: 10
               * idcsMinValue: 6
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] policy_update_freq_in_days: (Updatable) The period of time in days after which a client should refresh its policy by re-reading that policy from the server
               
               **SCIM++ Properties:**
               * idcsMaxValue: 999
               * idcsMinValue: 1
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] request_signing_algo: (Updatable) Indicates which algorithm the system will use to sign requests
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] shared_secret_encoding: (Updatable) Indicates the type of encoding that the system should use to generate a shared secret
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] unlock_app_for_each_request_enabled: (Updatable) If true, indicates that the system should require the user to unlock the client app for each request. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[int] unlock_app_interval_in_secs: (Updatable) Specifies the period of time in seconds after which the client App should require the user to unlock the App. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor. A value of zero means that it is disabled.
               
               **SCIM++ Properties:**
               * idcsMaxValue: 9999999
               * idcsMinValue: 0
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[bool] unlock_on_app_foreground_enabled: (Updatable) If true, indicates that the system should require the user to unlock the client App, when the client App comes to the foreground in the display of the device. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] unlock_on_app_start_enabled: (Updatable) If true, indicates that the system should require the user to unlock the client App whenever the App is started. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingClientAppSettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            device_protection_policy=device_protection_policy,
            initial_lockout_period_in_secs=initial_lockout_period_in_secs,
            key_pair_length=key_pair_length,
            lockout_escalation_pattern=lockout_escalation_pattern,
            max_failures_before_lockout=max_failures_before_lockout,
            max_failures_before_warning=max_failures_before_warning,
            max_lockout_interval_in_secs=max_lockout_interval_in_secs,
            min_pin_length=min_pin_length,
            policy_update_freq_in_days=policy_update_freq_in_days,
            request_signing_algo=request_signing_algo,
            shared_secret_encoding=shared_secret_encoding,
            unlock_app_for_each_request_enabled=unlock_app_for_each_request_enabled,
            unlock_app_interval_in_secs=unlock_app_interval_in_secs,
            unlock_on_app_foreground_enabled=unlock_on_app_foreground_enabled,
            unlock_on_app_start_enabled=unlock_on_app_start_enabled,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             device_protection_policy: pulumi.Input[str],
             initial_lockout_period_in_secs: pulumi.Input[int],
             key_pair_length: pulumi.Input[int],
             lockout_escalation_pattern: pulumi.Input[str],
             max_failures_before_lockout: pulumi.Input[int],
             max_failures_before_warning: pulumi.Input[int],
             max_lockout_interval_in_secs: pulumi.Input[int],
             min_pin_length: pulumi.Input[int],
             policy_update_freq_in_days: pulumi.Input[int],
             request_signing_algo: pulumi.Input[str],
             shared_secret_encoding: pulumi.Input[str],
             unlock_app_for_each_request_enabled: pulumi.Input[bool],
             unlock_app_interval_in_secs: pulumi.Input[int],
             unlock_on_app_foreground_enabled: pulumi.Input[bool],
             unlock_on_app_start_enabled: pulumi.Input[bool],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'deviceProtectionPolicy' in kwargs:
            device_protection_policy = kwargs['deviceProtectionPolicy']
        if 'initialLockoutPeriodInSecs' in kwargs:
            initial_lockout_period_in_secs = kwargs['initialLockoutPeriodInSecs']
        if 'keyPairLength' in kwargs:
            key_pair_length = kwargs['keyPairLength']
        if 'lockoutEscalationPattern' in kwargs:
            lockout_escalation_pattern = kwargs['lockoutEscalationPattern']
        if 'maxFailuresBeforeLockout' in kwargs:
            max_failures_before_lockout = kwargs['maxFailuresBeforeLockout']
        if 'maxFailuresBeforeWarning' in kwargs:
            max_failures_before_warning = kwargs['maxFailuresBeforeWarning']
        if 'maxLockoutIntervalInSecs' in kwargs:
            max_lockout_interval_in_secs = kwargs['maxLockoutIntervalInSecs']
        if 'minPinLength' in kwargs:
            min_pin_length = kwargs['minPinLength']
        if 'policyUpdateFreqInDays' in kwargs:
            policy_update_freq_in_days = kwargs['policyUpdateFreqInDays']
        if 'requestSigningAlgo' in kwargs:
            request_signing_algo = kwargs['requestSigningAlgo']
        if 'sharedSecretEncoding' in kwargs:
            shared_secret_encoding = kwargs['sharedSecretEncoding']
        if 'unlockAppForEachRequestEnabled' in kwargs:
            unlock_app_for_each_request_enabled = kwargs['unlockAppForEachRequestEnabled']
        if 'unlockAppIntervalInSecs' in kwargs:
            unlock_app_interval_in_secs = kwargs['unlockAppIntervalInSecs']
        if 'unlockOnAppForegroundEnabled' in kwargs:
            unlock_on_app_foreground_enabled = kwargs['unlockOnAppForegroundEnabled']
        if 'unlockOnAppStartEnabled' in kwargs:
            unlock_on_app_start_enabled = kwargs['unlockOnAppStartEnabled']

        _setter("device_protection_policy", device_protection_policy)
        _setter("initial_lockout_period_in_secs", initial_lockout_period_in_secs)
        _setter("key_pair_length", key_pair_length)
        _setter("lockout_escalation_pattern", lockout_escalation_pattern)
        _setter("max_failures_before_lockout", max_failures_before_lockout)
        _setter("max_failures_before_warning", max_failures_before_warning)
        _setter("max_lockout_interval_in_secs", max_lockout_interval_in_secs)
        _setter("min_pin_length", min_pin_length)
        _setter("policy_update_freq_in_days", policy_update_freq_in_days)
        _setter("request_signing_algo", request_signing_algo)
        _setter("shared_secret_encoding", shared_secret_encoding)
        _setter("unlock_app_for_each_request_enabled", unlock_app_for_each_request_enabled)
        _setter("unlock_app_interval_in_secs", unlock_app_interval_in_secs)
        _setter("unlock_on_app_foreground_enabled", unlock_on_app_foreground_enabled)
        _setter("unlock_on_app_start_enabled", unlock_on_app_start_enabled)

    @property
    @pulumi.getter(name="deviceProtectionPolicy")
    def device_protection_policy(self) -> pulumi.Input[str]:
        """
        (Updatable) Indicates what protection policy that the system applies on a device. By default, the value is NONE, which indicates that the system applies no protection policy. A value of APP_PIN indicates that the system requires a Personal Identification Number (PIN). A value of DEVICE_BIOMETRIC_OR_APP_PIN indicates that either a PIN or a biometric authentication factor is required.

        **SCIM++ Properties:**
        * idcsCanonicalValueSourceFilter: attrName eq "deviceProtectionPolicy" and attrValues.value eq "$(deviceProtectionPolicy)"
        * idcsCanonicalValueSourceResourceType: AllowedValue
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "device_protection_policy")

    @device_protection_policy.setter
    def device_protection_policy(self, value: pulumi.Input[str]):
        pulumi.set(self, "device_protection_policy", value)

    @property
    @pulumi.getter(name="initialLockoutPeriodInSecs")
    def initial_lockout_period_in_secs(self) -> pulumi.Input[int]:
        """
        (Updatable) The period of time in seconds that the system will lock a user out of the service after that user exceeds the maximum number of login failures

        **SCIM++ Properties:**
        * idcsMaxValue: 86400
        * idcsMinValue: 30
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "initial_lockout_period_in_secs")

    @initial_lockout_period_in_secs.setter
    def initial_lockout_period_in_secs(self, value: pulumi.Input[int]):
        pulumi.set(self, "initial_lockout_period_in_secs", value)

    @property
    @pulumi.getter(name="keyPairLength")
    def key_pair_length(self) -> pulumi.Input[int]:
        """
        (Updatable) The size of the key that the system uses to generate the public-private key pair

        **SCIM++ Properties:**
        * idcsMaxValue: 4000
        * idcsMinValue: 32
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "key_pair_length")

    @key_pair_length.setter
    def key_pair_length(self, value: pulumi.Input[int]):
        pulumi.set(self, "key_pair_length", value)

    @property
    @pulumi.getter(name="lockoutEscalationPattern")
    def lockout_escalation_pattern(self) -> pulumi.Input[str]:
        """
        (Updatable) The pattern of escalation that the system follows, in locking a particular user out of the service.

        **SCIM++ Properties:**
        * idcsCanonicalValueSourceFilter: attrName eq "lockoutEscalationPattern" and attrValues.value eq "$(lockoutEscalationPattern)"
        * idcsCanonicalValueSourceResourceType: AllowedValue
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "lockout_escalation_pattern")

    @lockout_escalation_pattern.setter
    def lockout_escalation_pattern(self, value: pulumi.Input[str]):
        pulumi.set(self, "lockout_escalation_pattern", value)

    @property
    @pulumi.getter(name="maxFailuresBeforeLockout")
    def max_failures_before_lockout(self) -> pulumi.Input[int]:
        """
        (Updatable) The maximum number of times that a particular user can fail to login before the system locks that user out of the service

        **SCIM++ Properties:**
        * idcsMaxValue: 10
        * idcsMinValue: 5
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_failures_before_lockout")

    @max_failures_before_lockout.setter
    def max_failures_before_lockout(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_failures_before_lockout", value)

    @property
    @pulumi.getter(name="maxFailuresBeforeWarning")
    def max_failures_before_warning(self) -> pulumi.Input[int]:
        """
        (Updatable) The maximum number of login failures that the system will allow before raising a warning and sending an alert via email

        **SCIM++ Properties:**
        * idcsMaxValue: 10
        * idcsMinValue: 0
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_failures_before_warning")

    @max_failures_before_warning.setter
    def max_failures_before_warning(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_failures_before_warning", value)

    @property
    @pulumi.getter(name="maxLockoutIntervalInSecs")
    def max_lockout_interval_in_secs(self) -> pulumi.Input[int]:
        """
        (Updatable) The maximum period of time that the system will lock a particular user out of the service regardless of what the configured pattern of escalation would otherwise dictate

        **SCIM++ Properties:**
        * idcsMaxValue: 86400
        * idcsMinValue: 30
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_lockout_interval_in_secs")

    @max_lockout_interval_in_secs.setter
    def max_lockout_interval_in_secs(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_lockout_interval_in_secs", value)

    @property
    @pulumi.getter(name="minPinLength")
    def min_pin_length(self) -> pulumi.Input[int]:
        """
        (Updatable) Minimum length of the Personal Identification Number (PIN)

        **SCIM++ Properties:**
        * idcsMaxValue: 10
        * idcsMinValue: 6
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "min_pin_length")

    @min_pin_length.setter
    def min_pin_length(self, value: pulumi.Input[int]):
        pulumi.set(self, "min_pin_length", value)

    @property
    @pulumi.getter(name="policyUpdateFreqInDays")
    def policy_update_freq_in_days(self) -> pulumi.Input[int]:
        """
        (Updatable) The period of time in days after which a client should refresh its policy by re-reading that policy from the server

        **SCIM++ Properties:**
        * idcsMaxValue: 999
        * idcsMinValue: 1
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "policy_update_freq_in_days")

    @policy_update_freq_in_days.setter
    def policy_update_freq_in_days(self, value: pulumi.Input[int]):
        pulumi.set(self, "policy_update_freq_in_days", value)

    @property
    @pulumi.getter(name="requestSigningAlgo")
    def request_signing_algo(self) -> pulumi.Input[str]:
        """
        (Updatable) Indicates which algorithm the system will use to sign requests

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "request_signing_algo")

    @request_signing_algo.setter
    def request_signing_algo(self, value: pulumi.Input[str]):
        pulumi.set(self, "request_signing_algo", value)

    @property
    @pulumi.getter(name="sharedSecretEncoding")
    def shared_secret_encoding(self) -> pulumi.Input[str]:
        """
        (Updatable) Indicates the type of encoding that the system should use to generate a shared secret

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "shared_secret_encoding")

    @shared_secret_encoding.setter
    def shared_secret_encoding(self, value: pulumi.Input[str]):
        pulumi.set(self, "shared_secret_encoding", value)

    @property
    @pulumi.getter(name="unlockAppForEachRequestEnabled")
    def unlock_app_for_each_request_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) If true, indicates that the system should require the user to unlock the client app for each request. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "unlock_app_for_each_request_enabled")

    @unlock_app_for_each_request_enabled.setter
    def unlock_app_for_each_request_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "unlock_app_for_each_request_enabled", value)

    @property
    @pulumi.getter(name="unlockAppIntervalInSecs")
    def unlock_app_interval_in_secs(self) -> pulumi.Input[int]:
        """
        (Updatable) Specifies the period of time in seconds after which the client App should require the user to unlock the App. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor. A value of zero means that it is disabled.

        **SCIM++ Properties:**
        * idcsMaxValue: 9999999
        * idcsMinValue: 0
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "unlock_app_interval_in_secs")

    @unlock_app_interval_in_secs.setter
    def unlock_app_interval_in_secs(self, value: pulumi.Input[int]):
        pulumi.set(self, "unlock_app_interval_in_secs", value)

    @property
    @pulumi.getter(name="unlockOnAppForegroundEnabled")
    def unlock_on_app_foreground_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) If true, indicates that the system should require the user to unlock the client App, when the client App comes to the foreground in the display of the device. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "unlock_on_app_foreground_enabled")

    @unlock_on_app_foreground_enabled.setter
    def unlock_on_app_foreground_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "unlock_on_app_foreground_enabled", value)

    @property
    @pulumi.getter(name="unlockOnAppStartEnabled")
    def unlock_on_app_start_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) If true, indicates that the system should require the user to unlock the client App whenever the App is started. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "unlock_on_app_start_enabled")

    @unlock_on_app_start_enabled.setter
    def unlock_on_app_start_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "unlock_on_app_start_enabled", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingCompliancePolicyArgs:
    def __init__(__self__, *,
                 action: pulumi.Input[str],
                 name: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] action: (Updatable) The action to be taken if the value of the attribute is not as expected
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The name of the attribute being evaluated
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingCompliancePolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            action=action,
            name=name,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             action: pulumi.Input[str],
             name: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("action", action)
        _setter("name", name)
        _setter("value", value)

    @property
    @pulumi.getter
    def action(self) -> pulumi.Input[str]:
        """
        (Updatable) The action to be taken if the value of the attribute is not as expected

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: pulumi.Input[str]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        (Updatable) The name of the attribute being evaluated

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingEmailSettingsArgs:
    def __init__(__self__, *,
                 email_link_enabled: pulumi.Input[bool],
                 email_link_custom_url: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[bool] email_link_enabled: (Updatable) Specifies whether Email link is enabled or not.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] email_link_custom_url: (Updatable) Custom redirect Url which will be used in email link
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingEmailSettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            email_link_enabled=email_link_enabled,
            email_link_custom_url=email_link_custom_url,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             email_link_enabled: pulumi.Input[bool],
             email_link_custom_url: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'emailLinkEnabled' in kwargs:
            email_link_enabled = kwargs['emailLinkEnabled']
        if 'emailLinkCustomUrl' in kwargs:
            email_link_custom_url = kwargs['emailLinkCustomUrl']

        _setter("email_link_enabled", email_link_enabled)
        if email_link_custom_url is not None:
            _setter("email_link_custom_url", email_link_custom_url)

    @property
    @pulumi.getter(name="emailLinkEnabled")
    def email_link_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) Specifies whether Email link is enabled or not.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "email_link_enabled")

    @email_link_enabled.setter
    def email_link_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "email_link_enabled", value)

    @property
    @pulumi.getter(name="emailLinkCustomUrl")
    def email_link_custom_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Custom redirect Url which will be used in email link

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "email_link_custom_url")

    @email_link_custom_url.setter
    def email_link_custom_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email_link_custom_url", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingEndpointRestrictionsArgs:
    def __init__(__self__, *,
                 max_endpoint_trust_duration_in_days: pulumi.Input[int],
                 max_enrolled_devices: pulumi.Input[int],
                 max_incorrect_attempts: pulumi.Input[int],
                 max_trusted_endpoints: pulumi.Input[int],
                 trusted_endpoints_enabled: pulumi.Input[bool]):
        """
        :param pulumi.Input[int] max_endpoint_trust_duration_in_days: (Updatable) Maximum number of days until an endpoint can be trusted
               
               **SCIM++ Properties:**
               * idcsMaxValue: 180
               * idcsMinValue: 1
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_enrolled_devices: (Updatable) Maximum number of enrolled devices per user
               
               **SCIM++ Properties:**
               * idcsMaxValue: 20
               * idcsMinValue: 1
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_incorrect_attempts: (Updatable) An integer that represents the maximum number of failed MFA logins before an account is locked
               
               **SCIM++ Properties:**
               * idcsMaxValue: 20
               * idcsMinValue: 5
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_trusted_endpoints: (Updatable) Max number of trusted endpoints per user
               
               **SCIM++ Properties:**
               * idcsMaxValue: 20
               * idcsMinValue: 1
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[bool] trusted_endpoints_enabled: (Updatable) Specify if trusted endpoints are enabled
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingEndpointRestrictionsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            max_endpoint_trust_duration_in_days=max_endpoint_trust_duration_in_days,
            max_enrolled_devices=max_enrolled_devices,
            max_incorrect_attempts=max_incorrect_attempts,
            max_trusted_endpoints=max_trusted_endpoints,
            trusted_endpoints_enabled=trusted_endpoints_enabled,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             max_endpoint_trust_duration_in_days: pulumi.Input[int],
             max_enrolled_devices: pulumi.Input[int],
             max_incorrect_attempts: pulumi.Input[int],
             max_trusted_endpoints: pulumi.Input[int],
             trusted_endpoints_enabled: pulumi.Input[bool],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'maxEndpointTrustDurationInDays' in kwargs:
            max_endpoint_trust_duration_in_days = kwargs['maxEndpointTrustDurationInDays']
        if 'maxEnrolledDevices' in kwargs:
            max_enrolled_devices = kwargs['maxEnrolledDevices']
        if 'maxIncorrectAttempts' in kwargs:
            max_incorrect_attempts = kwargs['maxIncorrectAttempts']
        if 'maxTrustedEndpoints' in kwargs:
            max_trusted_endpoints = kwargs['maxTrustedEndpoints']
        if 'trustedEndpointsEnabled' in kwargs:
            trusted_endpoints_enabled = kwargs['trustedEndpointsEnabled']

        _setter("max_endpoint_trust_duration_in_days", max_endpoint_trust_duration_in_days)
        _setter("max_enrolled_devices", max_enrolled_devices)
        _setter("max_incorrect_attempts", max_incorrect_attempts)
        _setter("max_trusted_endpoints", max_trusted_endpoints)
        _setter("trusted_endpoints_enabled", trusted_endpoints_enabled)

    @property
    @pulumi.getter(name="maxEndpointTrustDurationInDays")
    def max_endpoint_trust_duration_in_days(self) -> pulumi.Input[int]:
        """
        (Updatable) Maximum number of days until an endpoint can be trusted

        **SCIM++ Properties:**
        * idcsMaxValue: 180
        * idcsMinValue: 1
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_endpoint_trust_duration_in_days")

    @max_endpoint_trust_duration_in_days.setter
    def max_endpoint_trust_duration_in_days(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_endpoint_trust_duration_in_days", value)

    @property
    @pulumi.getter(name="maxEnrolledDevices")
    def max_enrolled_devices(self) -> pulumi.Input[int]:
        """
        (Updatable) Maximum number of enrolled devices per user

        **SCIM++ Properties:**
        * idcsMaxValue: 20
        * idcsMinValue: 1
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_enrolled_devices")

    @max_enrolled_devices.setter
    def max_enrolled_devices(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_enrolled_devices", value)

    @property
    @pulumi.getter(name="maxIncorrectAttempts")
    def max_incorrect_attempts(self) -> pulumi.Input[int]:
        """
        (Updatable) An integer that represents the maximum number of failed MFA logins before an account is locked

        **SCIM++ Properties:**
        * idcsMaxValue: 20
        * idcsMinValue: 5
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_incorrect_attempts")

    @max_incorrect_attempts.setter
    def max_incorrect_attempts(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_incorrect_attempts", value)

    @property
    @pulumi.getter(name="maxTrustedEndpoints")
    def max_trusted_endpoints(self) -> pulumi.Input[int]:
        """
        (Updatable) Max number of trusted endpoints per user

        **SCIM++ Properties:**
        * idcsMaxValue: 20
        * idcsMinValue: 1
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_trusted_endpoints")

    @max_trusted_endpoints.setter
    def max_trusted_endpoints(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_trusted_endpoints", value)

    @property
    @pulumi.getter(name="trustedEndpointsEnabled")
    def trusted_endpoints_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) Specify if trusted endpoints are enabled

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "trusted_endpoints_enabled")

    @trusted_endpoints_enabled.setter
    def trusted_endpoints_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "trusted_endpoints_enabled", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs:
    def __init__(__self__, *,
                 mobile_number_enabled: Optional[pulumi.Input[bool]] = None,
                 mobile_number_update_enabled: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] mobile_number_enabled: (Updatable) If true, indicates that Multi-Factor Authentication should use the mobile number in the identity store
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] mobile_number_update_enabled: (Updatable) If true, indicates that the user can update the mobile number in the user's Multi-Factor Authentication profile
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            mobile_number_enabled=mobile_number_enabled,
            mobile_number_update_enabled=mobile_number_update_enabled,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             mobile_number_enabled: Optional[pulumi.Input[bool]] = None,
             mobile_number_update_enabled: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'mobileNumberEnabled' in kwargs:
            mobile_number_enabled = kwargs['mobileNumberEnabled']
        if 'mobileNumberUpdateEnabled' in kwargs:
            mobile_number_update_enabled = kwargs['mobileNumberUpdateEnabled']

        if mobile_number_enabled is not None:
            _setter("mobile_number_enabled", mobile_number_enabled)
        if mobile_number_update_enabled is not None:
            _setter("mobile_number_update_enabled", mobile_number_update_enabled)

    @property
    @pulumi.getter(name="mobileNumberEnabled")
    def mobile_number_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that Multi-Factor Authentication should use the mobile number in the identity store

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "mobile_number_enabled")

    @mobile_number_enabled.setter
    def mobile_number_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "mobile_number_enabled", value)

    @property
    @pulumi.getter(name="mobileNumberUpdateEnabled")
    def mobile_number_update_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates that the user can update the mobile number in the user's Multi-Factor Authentication profile

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "mobile_number_update_enabled")

    @mobile_number_update_enabled.setter
    def mobile_number_update_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "mobile_number_update_enabled", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingNotificationSettingsArgs:
    def __init__(__self__, *,
                 pull_enabled: pulumi.Input[bool]):
        """
        :param pulumi.Input[bool] pull_enabled: (Updatable) If true, indicates that the Mobile App Pull Notification channel is enabled for authentication
               
               **Added In:** 17.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingNotificationSettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            pull_enabled=pull_enabled,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             pull_enabled: pulumi.Input[bool],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'pullEnabled' in kwargs:
            pull_enabled = kwargs['pullEnabled']

        _setter("pull_enabled", pull_enabled)

    @property
    @pulumi.getter(name="pullEnabled")
    def pull_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) If true, indicates that the Mobile App Pull Notification channel is enabled for authentication

        **Added In:** 17.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "pull_enabled")

    @pull_enabled.setter
    def pull_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "pull_enabled", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingThirdPartyFactorArgs:
    def __init__(__self__, *,
                 duo_security: pulumi.Input[bool]):
        """
        :param pulumi.Input[bool] duo_security: (Updatable) To enable Duo Security factor
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingThirdPartyFactorArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            duo_security=duo_security,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             duo_security: pulumi.Input[bool],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'duoSecurity' in kwargs:
            duo_security = kwargs['duoSecurity']

        _setter("duo_security", duo_security)

    @property
    @pulumi.getter(name="duoSecurity")
    def duo_security(self) -> pulumi.Input[bool]:
        """
        (Updatable) To enable Duo Security factor

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "duo_security")

    @duo_security.setter
    def duo_security(self, value: pulumi.Input[bool]):
        pulumi.set(self, "duo_security", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingTotpSettingsArgs:
    def __init__(__self__, *,
                 email_otp_validity_duration_in_mins: pulumi.Input[int],
                 email_passcode_length: pulumi.Input[int],
                 hashing_algorithm: pulumi.Input[str],
                 jwt_validity_duration_in_secs: pulumi.Input[int],
                 key_refresh_interval_in_days: pulumi.Input[int],
                 passcode_length: pulumi.Input[int],
                 sms_otp_validity_duration_in_mins: pulumi.Input[int],
                 sms_passcode_length: pulumi.Input[int],
                 time_step_in_secs: pulumi.Input[int],
                 time_step_tolerance: pulumi.Input[int]):
        """
        :param pulumi.Input[int] email_otp_validity_duration_in_mins: (Updatable) The period of time (in minutes) that a one-time passcode remains valid that the system sends by email.
               
               **Added In:** 18.1.2
               
               **SCIM++ Properties:**
               * idcsMaxValue: 60
               * idcsMinValue: 2
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] email_passcode_length: (Updatable) Exact length of the email one-time passcode.
               
               **Added In:** 18.1.2
               
               **SCIM++ Properties:**
               * idcsMaxValue: 10
               * idcsMinValue: 4
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] hashing_algorithm: (Updatable) The hashing algorithm to be used to calculate a One-Time Passcode. By default, the system uses SHA1.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] jwt_validity_duration_in_secs: (Updatable) The period of time (in seconds) that a JSON Web Token (JWT) is valid
               
               **SCIM++ Properties:**
               * idcsMaxValue: 99999
               * idcsMinValue: 30
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] key_refresh_interval_in_days: (Updatable) The duration of time (in days) after which the shared secret has to be refreshed
               
               **SCIM++ Properties:**
               * idcsMaxValue: 999
               * idcsMinValue: 30
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] passcode_length: (Updatable) Exact length of the One-Time Passcode that the system should generate
               
               **SCIM++ Properties:**
               * idcsMaxValue: 10
               * idcsMinValue: 4
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] sms_otp_validity_duration_in_mins: (Updatable) The period of time (in minutes) for which a One-Time Passcode that the system sends by Short Message Service (SMS) or by voice remains valid
               
               **SCIM++ Properties:**
               * idcsMaxValue: 60
               * idcsMinValue: 2
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] sms_passcode_length: (Updatable) Exact length of the Short Message Service (SMS) One-Time Passcode
               
               **SCIM++ Properties:**
               * idcsMaxValue: 10
               * idcsMinValue: 4
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] time_step_in_secs: (Updatable) Time (in secs) to be used as the time step
               
               **SCIM++ Properties:**
               * idcsMaxValue: 300
               * idcsMinValue: 30
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] time_step_tolerance: (Updatable) The tolerance/step-size that the system should use when validating a One-Time Passcode
               
               **SCIM++ Properties:**
               * idcsMaxValue: 3
               * idcsMinValue: 2
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingTotpSettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            email_otp_validity_duration_in_mins=email_otp_validity_duration_in_mins,
            email_passcode_length=email_passcode_length,
            hashing_algorithm=hashing_algorithm,
            jwt_validity_duration_in_secs=jwt_validity_duration_in_secs,
            key_refresh_interval_in_days=key_refresh_interval_in_days,
            passcode_length=passcode_length,
            sms_otp_validity_duration_in_mins=sms_otp_validity_duration_in_mins,
            sms_passcode_length=sms_passcode_length,
            time_step_in_secs=time_step_in_secs,
            time_step_tolerance=time_step_tolerance,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             email_otp_validity_duration_in_mins: pulumi.Input[int],
             email_passcode_length: pulumi.Input[int],
             hashing_algorithm: pulumi.Input[str],
             jwt_validity_duration_in_secs: pulumi.Input[int],
             key_refresh_interval_in_days: pulumi.Input[int],
             passcode_length: pulumi.Input[int],
             sms_otp_validity_duration_in_mins: pulumi.Input[int],
             sms_passcode_length: pulumi.Input[int],
             time_step_in_secs: pulumi.Input[int],
             time_step_tolerance: pulumi.Input[int],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'emailOtpValidityDurationInMins' in kwargs:
            email_otp_validity_duration_in_mins = kwargs['emailOtpValidityDurationInMins']
        if 'emailPasscodeLength' in kwargs:
            email_passcode_length = kwargs['emailPasscodeLength']
        if 'hashingAlgorithm' in kwargs:
            hashing_algorithm = kwargs['hashingAlgorithm']
        if 'jwtValidityDurationInSecs' in kwargs:
            jwt_validity_duration_in_secs = kwargs['jwtValidityDurationInSecs']
        if 'keyRefreshIntervalInDays' in kwargs:
            key_refresh_interval_in_days = kwargs['keyRefreshIntervalInDays']
        if 'passcodeLength' in kwargs:
            passcode_length = kwargs['passcodeLength']
        if 'smsOtpValidityDurationInMins' in kwargs:
            sms_otp_validity_duration_in_mins = kwargs['smsOtpValidityDurationInMins']
        if 'smsPasscodeLength' in kwargs:
            sms_passcode_length = kwargs['smsPasscodeLength']
        if 'timeStepInSecs' in kwargs:
            time_step_in_secs = kwargs['timeStepInSecs']
        if 'timeStepTolerance' in kwargs:
            time_step_tolerance = kwargs['timeStepTolerance']

        _setter("email_otp_validity_duration_in_mins", email_otp_validity_duration_in_mins)
        _setter("email_passcode_length", email_passcode_length)
        _setter("hashing_algorithm", hashing_algorithm)
        _setter("jwt_validity_duration_in_secs", jwt_validity_duration_in_secs)
        _setter("key_refresh_interval_in_days", key_refresh_interval_in_days)
        _setter("passcode_length", passcode_length)
        _setter("sms_otp_validity_duration_in_mins", sms_otp_validity_duration_in_mins)
        _setter("sms_passcode_length", sms_passcode_length)
        _setter("time_step_in_secs", time_step_in_secs)
        _setter("time_step_tolerance", time_step_tolerance)

    @property
    @pulumi.getter(name="emailOtpValidityDurationInMins")
    def email_otp_validity_duration_in_mins(self) -> pulumi.Input[int]:
        """
        (Updatable) The period of time (in minutes) that a one-time passcode remains valid that the system sends by email.

        **Added In:** 18.1.2

        **SCIM++ Properties:**
        * idcsMaxValue: 60
        * idcsMinValue: 2
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "email_otp_validity_duration_in_mins")

    @email_otp_validity_duration_in_mins.setter
    def email_otp_validity_duration_in_mins(self, value: pulumi.Input[int]):
        pulumi.set(self, "email_otp_validity_duration_in_mins", value)

    @property
    @pulumi.getter(name="emailPasscodeLength")
    def email_passcode_length(self) -> pulumi.Input[int]:
        """
        (Updatable) Exact length of the email one-time passcode.

        **Added In:** 18.1.2

        **SCIM++ Properties:**
        * idcsMaxValue: 10
        * idcsMinValue: 4
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "email_passcode_length")

    @email_passcode_length.setter
    def email_passcode_length(self, value: pulumi.Input[int]):
        pulumi.set(self, "email_passcode_length", value)

    @property
    @pulumi.getter(name="hashingAlgorithm")
    def hashing_algorithm(self) -> pulumi.Input[str]:
        """
        (Updatable) The hashing algorithm to be used to calculate a One-Time Passcode. By default, the system uses SHA1.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "hashing_algorithm")

    @hashing_algorithm.setter
    def hashing_algorithm(self, value: pulumi.Input[str]):
        pulumi.set(self, "hashing_algorithm", value)

    @property
    @pulumi.getter(name="jwtValidityDurationInSecs")
    def jwt_validity_duration_in_secs(self) -> pulumi.Input[int]:
        """
        (Updatable) The period of time (in seconds) that a JSON Web Token (JWT) is valid

        **SCIM++ Properties:**
        * idcsMaxValue: 99999
        * idcsMinValue: 30
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "jwt_validity_duration_in_secs")

    @jwt_validity_duration_in_secs.setter
    def jwt_validity_duration_in_secs(self, value: pulumi.Input[int]):
        pulumi.set(self, "jwt_validity_duration_in_secs", value)

    @property
    @pulumi.getter(name="keyRefreshIntervalInDays")
    def key_refresh_interval_in_days(self) -> pulumi.Input[int]:
        """
        (Updatable) The duration of time (in days) after which the shared secret has to be refreshed

        **SCIM++ Properties:**
        * idcsMaxValue: 999
        * idcsMinValue: 30
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "key_refresh_interval_in_days")

    @key_refresh_interval_in_days.setter
    def key_refresh_interval_in_days(self, value: pulumi.Input[int]):
        pulumi.set(self, "key_refresh_interval_in_days", value)

    @property
    @pulumi.getter(name="passcodeLength")
    def passcode_length(self) -> pulumi.Input[int]:
        """
        (Updatable) Exact length of the One-Time Passcode that the system should generate

        **SCIM++ Properties:**
        * idcsMaxValue: 10
        * idcsMinValue: 4
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "passcode_length")

    @passcode_length.setter
    def passcode_length(self, value: pulumi.Input[int]):
        pulumi.set(self, "passcode_length", value)

    @property
    @pulumi.getter(name="smsOtpValidityDurationInMins")
    def sms_otp_validity_duration_in_mins(self) -> pulumi.Input[int]:
        """
        (Updatable) The period of time (in minutes) for which a One-Time Passcode that the system sends by Short Message Service (SMS) or by voice remains valid

        **SCIM++ Properties:**
        * idcsMaxValue: 60
        * idcsMinValue: 2
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "sms_otp_validity_duration_in_mins")

    @sms_otp_validity_duration_in_mins.setter
    def sms_otp_validity_duration_in_mins(self, value: pulumi.Input[int]):
        pulumi.set(self, "sms_otp_validity_duration_in_mins", value)

    @property
    @pulumi.getter(name="smsPasscodeLength")
    def sms_passcode_length(self) -> pulumi.Input[int]:
        """
        (Updatable) Exact length of the Short Message Service (SMS) One-Time Passcode

        **SCIM++ Properties:**
        * idcsMaxValue: 10
        * idcsMinValue: 4
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "sms_passcode_length")

    @sms_passcode_length.setter
    def sms_passcode_length(self, value: pulumi.Input[int]):
        pulumi.set(self, "sms_passcode_length", value)

    @property
    @pulumi.getter(name="timeStepInSecs")
    def time_step_in_secs(self) -> pulumi.Input[int]:
        """
        (Updatable) Time (in secs) to be used as the time step

        **SCIM++ Properties:**
        * idcsMaxValue: 300
        * idcsMinValue: 30
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "time_step_in_secs")

    @time_step_in_secs.setter
    def time_step_in_secs(self, value: pulumi.Input[int]):
        pulumi.set(self, "time_step_in_secs", value)

    @property
    @pulumi.getter(name="timeStepTolerance")
    def time_step_tolerance(self) -> pulumi.Input[int]:
        """
        (Updatable) The tolerance/step-size that the system should use when validating a One-Time Passcode

        **SCIM++ Properties:**
        * idcsMaxValue: 3
        * idcsMinValue: 2
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "time_step_tolerance")

    @time_step_tolerance.setter
    def time_step_tolerance(self, value: pulumi.Input[int]):
        pulumi.set(self, "time_step_tolerance", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs:
    def __init__(__self__, *,
                 attestation: pulumi.Input[str],
                 authenticator_selection_attachment: pulumi.Input[str],
                 authenticator_selection_require_resident_key: pulumi.Input[bool],
                 authenticator_selection_resident_key: pulumi.Input[str],
                 authenticator_selection_user_verification: pulumi.Input[str],
                 exclude_credentials: pulumi.Input[bool],
                 public_key_types: pulumi.Input[Sequence[pulumi.Input[str]]],
                 timeout: pulumi.Input[int],
                 domain_validation_level: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[str] attestation: (Updatable) Attribute used to define the type of attestation required.
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] authenticator_selection_attachment: (Updatable) Attribute used to define authenticator selection attachment.
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] authenticator_selection_require_resident_key: (Updatable) Flag used to indicate authenticator selection is required or not
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] authenticator_selection_resident_key: (Updatable) Attribute used to define authenticator selection resident key requirement.
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] authenticator_selection_user_verification: (Updatable) Attribute used to define authenticator selection verification.
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] exclude_credentials: (Updatable) Flag used to indicate whether we need to restrict creation of multiple credentials in same authenticator
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] public_key_types: (Updatable) List of server supported public key algorithms
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: true
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] timeout: (Updatable) Timeout for the fido authentication to complete
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * idcsMaxValue: 600000
               * idcsMinValue: 10000
               * required: true
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] domain_validation_level: (Updatable) Number of domain levels Oracle Identity Cloud Service should use for origin comparision
               
               **Added In:** 2109020413
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * idcsMaxValue: 2
               * idcsMinValue: 0
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            attestation=attestation,
            authenticator_selection_attachment=authenticator_selection_attachment,
            authenticator_selection_require_resident_key=authenticator_selection_require_resident_key,
            authenticator_selection_resident_key=authenticator_selection_resident_key,
            authenticator_selection_user_verification=authenticator_selection_user_verification,
            exclude_credentials=exclude_credentials,
            public_key_types=public_key_types,
            timeout=timeout,
            domain_validation_level=domain_validation_level,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             attestation: pulumi.Input[str],
             authenticator_selection_attachment: pulumi.Input[str],
             authenticator_selection_require_resident_key: pulumi.Input[bool],
             authenticator_selection_resident_key: pulumi.Input[str],
             authenticator_selection_user_verification: pulumi.Input[str],
             exclude_credentials: pulumi.Input[bool],
             public_key_types: pulumi.Input[Sequence[pulumi.Input[str]]],
             timeout: pulumi.Input[int],
             domain_validation_level: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'authenticatorSelectionAttachment' in kwargs:
            authenticator_selection_attachment = kwargs['authenticatorSelectionAttachment']
        if 'authenticatorSelectionRequireResidentKey' in kwargs:
            authenticator_selection_require_resident_key = kwargs['authenticatorSelectionRequireResidentKey']
        if 'authenticatorSelectionResidentKey' in kwargs:
            authenticator_selection_resident_key = kwargs['authenticatorSelectionResidentKey']
        if 'authenticatorSelectionUserVerification' in kwargs:
            authenticator_selection_user_verification = kwargs['authenticatorSelectionUserVerification']
        if 'excludeCredentials' in kwargs:
            exclude_credentials = kwargs['excludeCredentials']
        if 'publicKeyTypes' in kwargs:
            public_key_types = kwargs['publicKeyTypes']
        if 'domainValidationLevel' in kwargs:
            domain_validation_level = kwargs['domainValidationLevel']

        _setter("attestation", attestation)
        _setter("authenticator_selection_attachment", authenticator_selection_attachment)
        _setter("authenticator_selection_require_resident_key", authenticator_selection_require_resident_key)
        _setter("authenticator_selection_resident_key", authenticator_selection_resident_key)
        _setter("authenticator_selection_user_verification", authenticator_selection_user_verification)
        _setter("exclude_credentials", exclude_credentials)
        _setter("public_key_types", public_key_types)
        _setter("timeout", timeout)
        if domain_validation_level is not None:
            _setter("domain_validation_level", domain_validation_level)

    @property
    @pulumi.getter
    def attestation(self) -> pulumi.Input[str]:
        """
        (Updatable) Attribute used to define the type of attestation required.

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "attestation")

    @attestation.setter
    def attestation(self, value: pulumi.Input[str]):
        pulumi.set(self, "attestation", value)

    @property
    @pulumi.getter(name="authenticatorSelectionAttachment")
    def authenticator_selection_attachment(self) -> pulumi.Input[str]:
        """
        (Updatable) Attribute used to define authenticator selection attachment.

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "authenticator_selection_attachment")

    @authenticator_selection_attachment.setter
    def authenticator_selection_attachment(self, value: pulumi.Input[str]):
        pulumi.set(self, "authenticator_selection_attachment", value)

    @property
    @pulumi.getter(name="authenticatorSelectionRequireResidentKey")
    def authenticator_selection_require_resident_key(self) -> pulumi.Input[bool]:
        """
        (Updatable) Flag used to indicate authenticator selection is required or not

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "authenticator_selection_require_resident_key")

    @authenticator_selection_require_resident_key.setter
    def authenticator_selection_require_resident_key(self, value: pulumi.Input[bool]):
        pulumi.set(self, "authenticator_selection_require_resident_key", value)

    @property
    @pulumi.getter(name="authenticatorSelectionResidentKey")
    def authenticator_selection_resident_key(self) -> pulumi.Input[str]:
        """
        (Updatable) Attribute used to define authenticator selection resident key requirement.

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "authenticator_selection_resident_key")

    @authenticator_selection_resident_key.setter
    def authenticator_selection_resident_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "authenticator_selection_resident_key", value)

    @property
    @pulumi.getter(name="authenticatorSelectionUserVerification")
    def authenticator_selection_user_verification(self) -> pulumi.Input[str]:
        """
        (Updatable) Attribute used to define authenticator selection verification.

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "authenticator_selection_user_verification")

    @authenticator_selection_user_verification.setter
    def authenticator_selection_user_verification(self, value: pulumi.Input[str]):
        pulumi.set(self, "authenticator_selection_user_verification", value)

    @property
    @pulumi.getter(name="excludeCredentials")
    def exclude_credentials(self) -> pulumi.Input[bool]:
        """
        (Updatable) Flag used to indicate whether we need to restrict creation of multiple credentials in same authenticator

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "exclude_credentials")

    @exclude_credentials.setter
    def exclude_credentials(self, value: pulumi.Input[bool]):
        pulumi.set(self, "exclude_credentials", value)

    @property
    @pulumi.getter(name="publicKeyTypes")
    def public_key_types(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        (Updatable) List of server supported public key algorithms

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: true
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "public_key_types")

    @public_key_types.setter
    def public_key_types(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "public_key_types", value)

    @property
    @pulumi.getter
    def timeout(self) -> pulumi.Input[int]:
        """
        (Updatable) Timeout for the fido authentication to complete

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * idcsMaxValue: 600000
        * idcsMinValue: 10000
        * required: true
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "timeout")

    @timeout.setter
    def timeout(self, value: pulumi.Input[int]):
        pulumi.set(self, "timeout", value)

    @property
    @pulumi.getter(name="domainValidationLevel")
    def domain_validation_level(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Number of domain levels Oracle Identity Cloud Service should use for origin comparision

        **Added In:** 2109020413

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * idcsMaxValue: 2
        * idcsMinValue: 0
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "domain_validation_level")

    @domain_validation_level.setter
    def domain_validation_level(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "domain_validation_level", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsArgs:
    def __init__(__self__, *,
                 duo_security_settings: Optional[pulumi.Input['DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettingsArgs']] = None):
        """
        :param pulumi.Input['DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettingsArgs'] duo_security_settings: (Updatable) Settings related to Duo Security
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            duo_security_settings=duo_security_settings,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             duo_security_settings: Optional[pulumi.Input['DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettingsArgs']] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'duoSecuritySettings' in kwargs:
            duo_security_settings = kwargs['duoSecuritySettings']

        if duo_security_settings is not None:
            _setter("duo_security_settings", duo_security_settings)

    @property
    @pulumi.getter(name="duoSecuritySettings")
    def duo_security_settings(self) -> Optional[pulumi.Input['DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettingsArgs']]:
        """
        (Updatable) Settings related to Duo Security

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "duo_security_settings")

    @duo_security_settings.setter
    def duo_security_settings(self, value: Optional[pulumi.Input['DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettingsArgs']]):
        pulumi.set(self, "duo_security_settings", value)


@pulumi.input_type
class DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettingsArgs:
    def __init__(__self__, *,
                 api_hostname: pulumi.Input[str],
                 integration_key: pulumi.Input[str],
                 secret_key: pulumi.Input[str],
                 user_mapping_attribute: pulumi.Input[str],
                 attestation_key: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] api_hostname: (Updatable) Hostname to access the Duo security account
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] integration_key: (Updatable) Integration key from Duo Security authenticator
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] secret_key: (Updatable) Secret key from Duo Security authenticator
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] user_mapping_attribute: (Updatable) User attribute mapping value
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] attestation_key: (Updatable) Attestation key to attest the request and response between Duo Security
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: never
               * type: string
               * uniqueness: none
        """
        DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettingsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            api_hostname=api_hostname,
            integration_key=integration_key,
            secret_key=secret_key,
            user_mapping_attribute=user_mapping_attribute,
            attestation_key=attestation_key,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             api_hostname: pulumi.Input[str],
             integration_key: pulumi.Input[str],
             secret_key: pulumi.Input[str],
             user_mapping_attribute: pulumi.Input[str],
             attestation_key: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'apiHostname' in kwargs:
            api_hostname = kwargs['apiHostname']
        if 'integrationKey' in kwargs:
            integration_key = kwargs['integrationKey']
        if 'secretKey' in kwargs:
            secret_key = kwargs['secretKey']
        if 'userMappingAttribute' in kwargs:
            user_mapping_attribute = kwargs['userMappingAttribute']
        if 'attestationKey' in kwargs:
            attestation_key = kwargs['attestationKey']

        _setter("api_hostname", api_hostname)
        _setter("integration_key", integration_key)
        _setter("secret_key", secret_key)
        _setter("user_mapping_attribute", user_mapping_attribute)
        if attestation_key is not None:
            _setter("attestation_key", attestation_key)

    @property
    @pulumi.getter(name="apiHostname")
    def api_hostname(self) -> pulumi.Input[str]:
        """
        (Updatable) Hostname to access the Duo security account

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "api_hostname")

    @api_hostname.setter
    def api_hostname(self, value: pulumi.Input[str]):
        pulumi.set(self, "api_hostname", value)

    @property
    @pulumi.getter(name="integrationKey")
    def integration_key(self) -> pulumi.Input[str]:
        """
        (Updatable) Integration key from Duo Security authenticator

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "integration_key")

    @integration_key.setter
    def integration_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "integration_key", value)

    @property
    @pulumi.getter(name="secretKey")
    def secret_key(self) -> pulumi.Input[str]:
        """
        (Updatable) Secret key from Duo Security authenticator

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "secret_key")

    @secret_key.setter
    def secret_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "secret_key", value)

    @property
    @pulumi.getter(name="userMappingAttribute")
    def user_mapping_attribute(self) -> pulumi.Input[str]:
        """
        (Updatable) User attribute mapping value

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_mapping_attribute")

    @user_mapping_attribute.setter
    def user_mapping_attribute(self, value: pulumi.Input[str]):
        pulumi.set(self, "user_mapping_attribute", value)

    @property
    @pulumi.getter(name="attestationKey")
    def attestation_key(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Attestation key to attest the request and response between Duo Security

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: never
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "attestation_key")

    @attestation_key.setter
    def attestation_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "attestation_key", value)


@pulumi.input_type
class DomainsCustomerSecretKeyIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsCustomerSecretKeyIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsCustomerSecretKeyIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsCustomerSecretKeyIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsCustomerSecretKeyMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsCustomerSecretKeyMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsCustomerSecretKeyTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsCustomerSecretKeyTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsCustomerSecretKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs:
    def __init__(__self__, *,
                 allow_self_change: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] allow_self_change: If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).
               
               **Added In:** 2205182039
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: writeOnly
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        """
        DomainsCustomerSecretKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            allow_self_change=allow_self_change,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             allow_self_change: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'allowSelfChange' in kwargs:
            allow_self_change = kwargs['allowSelfChange']

        if allow_self_change is not None:
            _setter("allow_self_change", allow_self_change)

    @property
    @pulumi.getter(name="allowSelfChange")
    def allow_self_change(self) -> Optional[pulumi.Input[bool]]:
        """
        If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).

        **Added In:** 2205182039

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: writeOnly
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_self_change")

    @allow_self_change.setter
    def allow_self_change(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_self_change", value)


@pulumi.input_type
class DomainsCustomerSecretKeyUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The user's name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsCustomerSecretKeyUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsDynamicResourceGroupDynamicGroupAppRoleArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 admin_role: Optional[pulumi.Input[bool]] = None,
                 app_id: Optional[pulumi.Input[str]] = None,
                 app_name: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 legacy_group_name: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Oracle Cloud Infrastructure Tag value
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * required: true
               * mutability: readWrite
               * returned: default
               * type: string
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[bool] admin_role: (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] app_id: (Updatable) App identifier
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsAddedSinceVersion: 3
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] app_name: (Updatable) Name of parent App. READ-ONLY.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] legacy_group_name: (Updatable) The name of the legacy group associated with this AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsDynamicResourceGroupDynamicGroupAppRoleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            admin_role=admin_role,
            app_id=app_id,
            app_name=app_name,
            display=display,
            legacy_group_name=legacy_group_name,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             admin_role: Optional[pulumi.Input[bool]] = None,
             app_id: Optional[pulumi.Input[str]] = None,
             app_name: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             legacy_group_name: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'adminRole' in kwargs:
            admin_role = kwargs['adminRole']
        if 'appId' in kwargs:
            app_id = kwargs['appId']
        if 'appName' in kwargs:
            app_name = kwargs['appName']
        if 'legacyGroupName' in kwargs:
            legacy_group_name = kwargs['legacyGroupName']

        _setter("value", value)
        if admin_role is not None:
            _setter("admin_role", admin_role)
        if app_id is not None:
            _setter("app_id", app_id)
        if app_name is not None:
            _setter("app_name", app_name)
        if display is not None:
            _setter("display", display)
        if legacy_group_name is not None:
            _setter("legacy_group_name", legacy_group_name)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag value

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * required: true
        * mutability: readWrite
        * returned: default
        * type: string
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="adminRole")
    def admin_role(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "admin_role")

    @admin_role.setter
    def admin_role(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "admin_role", value)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App identifier

        **SCIM++ Properties:**
        * caseExact: true
        * idcsAddedSinceVersion: 3
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter(name="appName")
    def app_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of parent App. READ-ONLY.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_name")

    @app_name.setter
    def app_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_name", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter(name="legacyGroupName")
    def legacy_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The name of the legacy group associated with this AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "legacy_group_name")

    @legacy_group_name.setter
    def legacy_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "legacy_group_name", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsDynamicResourceGroupGrantArgs:
    def __init__(__self__, *,
                 app_id: Optional[pulumi.Input[str]] = None,
                 grant_mechanism: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] app_id: (Updatable) App identifier
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsAddedSinceVersion: 3
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] grant_mechanism: (Updatable) Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted. A customer or the UI should use only grantMechanism values that start with 'ADMINISTRATOR':
               * 'ADMINISTRATOR_TO_USER' is for a direct grant to a specific User.
               * 'ADMINISTRATOR_TO_GROUP' is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.
               * 'ADMINISTRATOR_TO_APP' is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsAddedSinceVersion: 3
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Oracle Cloud Infrastructure Tag value
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * required: true
               * mutability: readWrite
               * returned: default
               * type: string
               * idcsSearchable: true
               * uniqueness: none
        """
        DomainsDynamicResourceGroupGrantArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            app_id=app_id,
            grant_mechanism=grant_mechanism,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             app_id: Optional[pulumi.Input[str]] = None,
             grant_mechanism: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'appId' in kwargs:
            app_id = kwargs['appId']
        if 'grantMechanism' in kwargs:
            grant_mechanism = kwargs['grantMechanism']

        if app_id is not None:
            _setter("app_id", app_id)
        if grant_mechanism is not None:
            _setter("grant_mechanism", grant_mechanism)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App identifier

        **SCIM++ Properties:**
        * caseExact: true
        * idcsAddedSinceVersion: 3
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter(name="grantMechanism")
    def grant_mechanism(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted. A customer or the UI should use only grantMechanism values that start with 'ADMINISTRATOR':
        * 'ADMINISTRATOR_TO_USER' is for a direct grant to a specific User.
        * 'ADMINISTRATOR_TO_GROUP' is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.
        * 'ADMINISTRATOR_TO_APP' is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsAddedSinceVersion: 3
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "grant_mechanism")

    @grant_mechanism.setter
    def grant_mechanism(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grant_mechanism", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag value

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * required: true
        * mutability: readWrite
        * returned: default
        * type: string
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsDynamicResourceGroupIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Oracle Cloud Infrastructure Tag value
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * required: true
               * mutability: readWrite
               * returned: default
               * type: string
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsDynamicResourceGroupIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag value

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * required: true
        * mutability: readWrite
        * returned: default
        * type: string
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsDynamicResourceGroupIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Oracle Cloud Infrastructure Tag value
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * required: true
               * mutability: readWrite
               * returned: default
               * type: string
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsDynamicResourceGroupIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag value

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * required: true
        * mutability: readWrite
        * returned: default
        * type: string
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsDynamicResourceGroupMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsDynamicResourceGroupMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsDynamicResourceGroupTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Oracle Cloud Infrastructure Tag value
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * required: true
               * mutability: readWrite
               * returned: default
               * type: string
               * idcsSearchable: true
               * uniqueness: none
        """
        DomainsDynamicResourceGroupTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag value

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * required: true
        * mutability: readWrite
        * returned: default
        * type: string
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs:
    def __init__(__self__, *,
                 defined_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]] = None,
                 freeform_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]] = None,
                 tag_slug: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]] defined_tags: (Updatable) Oracle Cloud Infrastructure Defined Tags
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [namespace, key, value]
               * type: complex
               * idcsSearchable: true
               * required: false
               * mutability: readWrite
               * multiValued: true
               * returned: default
        :param pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]] freeform_tags: (Updatable) Oracle Cloud Infrastructure Freeform Tags
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [key, value]
               * idcsSearchable: true
               * type: complex
               * required: false
               * mutability: readWrite
               * returned: default
               * multiValued: true
        :param pulumi.Input[str] tag_slug: (Updatable) Oracle Cloud Infrastructure Tag slug
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * type: binary
               * mutability: readOnly
               * returned: request
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            defined_tags=defined_tags,
            freeform_tags=freeform_tags,
            tag_slug=tag_slug,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             defined_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]] = None,
             freeform_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]] = None,
             tag_slug: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'definedTags' in kwargs:
            defined_tags = kwargs['definedTags']
        if 'freeformTags' in kwargs:
            freeform_tags = kwargs['freeformTags']
        if 'tagSlug' in kwargs:
            tag_slug = kwargs['tagSlug']

        if defined_tags is not None:
            _setter("defined_tags", defined_tags)
        if freeform_tags is not None:
            _setter("freeform_tags", freeform_tags)
        if tag_slug is not None:
            _setter("tag_slug", tag_slug)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]]:
        """
        (Updatable) Oracle Cloud Infrastructure Defined Tags

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsCompositeKey: [namespace, key, value]
        * type: complex
        * idcsSearchable: true
        * required: false
        * mutability: readWrite
        * multiValued: true
        * returned: default
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]]:
        """
        (Updatable) Oracle Cloud Infrastructure Freeform Tags

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsCompositeKey: [key, value]
        * idcsSearchable: true
        * type: complex
        * required: false
        * mutability: readWrite
        * returned: default
        * multiValued: true
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="tagSlug")
    def tag_slug(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag slug

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * type: binary
        * mutability: readOnly
        * returned: request


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "tag_slug")

    @tag_slug.setter
    def tag_slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tag_slug", value)


@pulumi.input_type
class DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 namespace: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] namespace: (Updatable) Oracle Cloud Infrastructure Tag namespace
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Oracle Cloud Infrastructure Tag value
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * required: true
               * mutability: readWrite
               * returned: default
               * type: string
               * idcsSearchable: true
               * uniqueness: none
        """
        DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            namespace=namespace,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             namespace: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("namespace", namespace)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def namespace(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag namespace

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "namespace")

    @namespace.setter
    def namespace(self, value: pulumi.Input[str]):
        pulumi.set(self, "namespace", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag value

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * required: true
        * mutability: readWrite
        * returned: default
        * type: string
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Oracle Cloud Infrastructure Tag value
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * required: true
               * mutability: readWrite
               * returned: default
               * type: string
               * idcsSearchable: true
               * uniqueness: none
        """
        DomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag value

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * required: true
        * mutability: readWrite
        * returned: default
        * type: string
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsGrantAppArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsGrantAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsGrantAppEntitlementCollectionArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsGrantAppEntitlementCollectionArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsGrantEntitlementArgs:
    def __init__(__self__, *,
                 attribute_name: pulumi.Input[str],
                 attribute_value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] attribute_name: The name of the attribute whose value (specified by attributeValue) confers privilege within the service-instance (specified by app).
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] attribute_value: The value of the attribute (specified by attributeName) that confers privilege within the service-instance (specified by app).  If attributeName is 'appRoles', then attributeValue is the ID of the AppRole.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsCsvAttributeName: Display Name
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGrantEntitlementArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            attribute_name=attribute_name,
            attribute_value=attribute_value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             attribute_name: pulumi.Input[str],
             attribute_value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'attributeName' in kwargs:
            attribute_name = kwargs['attributeName']
        if 'attributeValue' in kwargs:
            attribute_value = kwargs['attributeValue']

        _setter("attribute_name", attribute_name)
        _setter("attribute_value", attribute_value)

    @property
    @pulumi.getter(name="attributeName")
    def attribute_name(self) -> pulumi.Input[str]:
        """
        The name of the attribute whose value (specified by attributeValue) confers privilege within the service-instance (specified by app).

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "attribute_name")

    @attribute_name.setter
    def attribute_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "attribute_name", value)

    @property
    @pulumi.getter(name="attributeValue")
    def attribute_value(self) -> pulumi.Input[str]:
        """
        The value of the attribute (specified by attributeName) that confers privilege within the service-instance (specified by app).  If attributeName is 'appRoles', then attributeValue is the ID of the AppRole.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsCsvAttributeName: Display Name
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "attribute_value")

    @attribute_value.setter
    def attribute_value(self, value: pulumi.Input[str]):
        pulumi.set(self, "attribute_value", value)


@pulumi.input_type
class DomainsGrantGranteeArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsGrantGranteeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsGrantGrantorArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGrantGrantorArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            ref=ref,
            type=type,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsGrantIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGrantIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsGrantIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGrantIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsGrantMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGrantMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsGrantTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGrantTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsGroupIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) App Display Name
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) App URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of the entity that created this Group.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsDefaultValue: App
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App Display Name

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of the entity that created this Group.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsDefaultValue: App
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsGroupIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) App Display Name
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) App URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of the entity that created this Group.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsDefaultValue: App
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App Display Name

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of the entity that created this Group.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsDefaultValue: App
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsGroupMemberArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 date_added: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 membership_ocid: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) The type of the entity that created this Group.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsDefaultValue: App
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] date_added: (Updatable) The date and time that the member was added to the group.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readOnly
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) App Display Name
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] membership_ocid: (Updatable) The membership OCID.
               
               **Added In:** 2102181953
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) PasswordPolicy Name
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) App URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsGroupMemberArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            date_added=date_added,
            display=display,
            membership_ocid=membership_ocid,
            name=name,
            ocid=ocid,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             date_added: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             membership_ocid: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'dateAdded' in kwargs:
            date_added = kwargs['dateAdded']
        if 'membershipOcid' in kwargs:
            membership_ocid = kwargs['membershipOcid']

        _setter("type", type)
        _setter("value", value)
        if date_added is not None:
            _setter("date_added", date_added)
        if display is not None:
            _setter("display", display)
        if membership_ocid is not None:
            _setter("membership_ocid", membership_ocid)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) The type of the entity that created this Group.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsDefaultValue: App
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="dateAdded")
    def date_added(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The date and time that the member was added to the group.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readOnly
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "date_added")

    @date_added.setter
    def date_added(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "date_added", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App Display Name

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter(name="membershipOcid")
    def membership_ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The membership OCID.

        **Added In:** 2102181953

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "membership_ocid")

    @membership_ocid.setter
    def membership_ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "membership_ocid", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) PasswordPolicy Name

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsGroupMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsGroupTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs:
    def __init__(__self__, *,
                 defined_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]] = None,
                 freeform_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]] = None,
                 tag_slug: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]] defined_tags: (Updatable) Oracle Cloud Infrastructure Defined Tags
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [namespace, key, value]
               * type: complex
               * idcsSearchable: true
               * required: false
               * mutability: readWrite
               * multiValued: true
               * returned: default
        :param pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]] freeform_tags: (Updatable) Oracle Cloud Infrastructure Freeform Tags
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [key, value]
               * idcsSearchable: true
               * type: complex
               * required: false
               * mutability: readWrite
               * returned: default
               * multiValued: true
        :param pulumi.Input[str] tag_slug: (Updatable) Oracle Cloud Infrastructure Tag slug
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * type: binary
               * mutability: readOnly
               * returned: request
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            defined_tags=defined_tags,
            freeform_tags=freeform_tags,
            tag_slug=tag_slug,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             defined_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]] = None,
             freeform_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]] = None,
             tag_slug: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'definedTags' in kwargs:
            defined_tags = kwargs['definedTags']
        if 'freeformTags' in kwargs:
            freeform_tags = kwargs['freeformTags']
        if 'tagSlug' in kwargs:
            tag_slug = kwargs['tagSlug']

        if defined_tags is not None:
            _setter("defined_tags", defined_tags)
        if freeform_tags is not None:
            _setter("freeform_tags", freeform_tags)
        if tag_slug is not None:
            _setter("tag_slug", tag_slug)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]]:
        """
        (Updatable) Oracle Cloud Infrastructure Defined Tags

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsCompositeKey: [namespace, key, value]
        * type: complex
        * idcsSearchable: true
        * required: false
        * mutability: readWrite
        * multiValued: true
        * returned: default
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]]:
        """
        (Updatable) Oracle Cloud Infrastructure Freeform Tags

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsCompositeKey: [key, value]
        * idcsSearchable: true
        * type: complex
        * required: false
        * mutability: readWrite
        * returned: default
        * multiValued: true
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="tagSlug")
    def tag_slug(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag slug

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * type: binary
        * mutability: readOnly
        * returned: request
        """
        return pulumi.get(self, "tag_slug")

    @tag_slug.setter
    def tag_slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tag_slug", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 namespace: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] namespace: (Updatable) Oracle Cloud Infrastructure Tag namespace
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            namespace=namespace,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             namespace: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("namespace", namespace)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def namespace(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag namespace

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "namespace")

    @namespace.setter
    def namespace(self, value: pulumi.Input[str]):
        pulumi.set(self, "namespace", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Oracle Cloud Infrastructure Tag key
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag key

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs:
    def __init__(__self__, *,
                 domain_level_schema: Optional[pulumi.Input[str]] = None,
                 domain_level_schema_names: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs']]]] = None,
                 instance_level_schema: Optional[pulumi.Input[str]] = None,
                 instance_level_schema_names: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs']]]] = None):
        """
        :param pulumi.Input[str] domain_level_schema: (Updatable) DBCS Domain-level schema-name.  This attribute refers implicitly to a value of 'domainLevelSchemaNames' for a particular DB Domain.
               
               **Added In:** 18.2.4
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * idcsSensitive: none
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs']]] domain_level_schema_names: (Updatable) DBCS Domain-level schema-names. Each value is specific to a DB Domain.
               
               **Added In:** 18.2.4
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [domainName, schemaName]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
        :param pulumi.Input[str] instance_level_schema: (Updatable) DBCS instance-level schema-name. This attribute refers implicitly to a value of 'instanceLevelSchemaNames' for a particular DB Instance.
               
               **Added In:** 18.2.4
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * idcsSensitive: none
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs']]] instance_level_schema_names: (Updatable) DBCS instance-level schema-names. Each schema-name is specific to a DB Instance.
               
               **Added In:** 18.2.4
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [dbInstanceId, schemaName]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            domain_level_schema=domain_level_schema,
            domain_level_schema_names=domain_level_schema_names,
            instance_level_schema=instance_level_schema,
            instance_level_schema_names=instance_level_schema_names,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             domain_level_schema: Optional[pulumi.Input[str]] = None,
             domain_level_schema_names: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs']]]] = None,
             instance_level_schema: Optional[pulumi.Input[str]] = None,
             instance_level_schema_names: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'domainLevelSchema' in kwargs:
            domain_level_schema = kwargs['domainLevelSchema']
        if 'domainLevelSchemaNames' in kwargs:
            domain_level_schema_names = kwargs['domainLevelSchemaNames']
        if 'instanceLevelSchema' in kwargs:
            instance_level_schema = kwargs['instanceLevelSchema']
        if 'instanceLevelSchemaNames' in kwargs:
            instance_level_schema_names = kwargs['instanceLevelSchemaNames']

        if domain_level_schema is not None:
            _setter("domain_level_schema", domain_level_schema)
        if domain_level_schema_names is not None:
            _setter("domain_level_schema_names", domain_level_schema_names)
        if instance_level_schema is not None:
            _setter("instance_level_schema", instance_level_schema)
        if instance_level_schema_names is not None:
            _setter("instance_level_schema_names", instance_level_schema_names)

    @property
    @pulumi.getter(name="domainLevelSchema")
    def domain_level_schema(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) DBCS Domain-level schema-name.  This attribute refers implicitly to a value of 'domainLevelSchemaNames' for a particular DB Domain.

        **Added In:** 18.2.4

        **SCIM++ Properties:**
        * idcsSearchable: false
        * idcsSensitive: none
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "domain_level_schema")

    @domain_level_schema.setter
    def domain_level_schema(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "domain_level_schema", value)

    @property
    @pulumi.getter(name="domainLevelSchemaNames")
    def domain_level_schema_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs']]]]:
        """
        (Updatable) DBCS Domain-level schema-names. Each value is specific to a DB Domain.

        **Added In:** 18.2.4

        **SCIM++ Properties:**
        * idcsCompositeKey: [domainName, schemaName]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        """
        return pulumi.get(self, "domain_level_schema_names")

    @domain_level_schema_names.setter
    def domain_level_schema_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs']]]]):
        pulumi.set(self, "domain_level_schema_names", value)

    @property
    @pulumi.getter(name="instanceLevelSchema")
    def instance_level_schema(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) DBCS instance-level schema-name. This attribute refers implicitly to a value of 'instanceLevelSchemaNames' for a particular DB Instance.

        **Added In:** 18.2.4

        **SCIM++ Properties:**
        * idcsSearchable: false
        * idcsSensitive: none
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "instance_level_schema")

    @instance_level_schema.setter
    def instance_level_schema(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_level_schema", value)

    @property
    @pulumi.getter(name="instanceLevelSchemaNames")
    def instance_level_schema_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs']]]]:
        """
        (Updatable) DBCS instance-level schema-names. Each schema-name is specific to a DB Instance.

        **Added In:** 18.2.4

        **SCIM++ Properties:**
        * idcsCompositeKey: [dbInstanceId, schemaName]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        """
        return pulumi.get(self, "instance_level_schema_names")

    @instance_level_schema_names.setter
    def instance_level_schema_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs']]]]):
        pulumi.set(self, "instance_level_schema_names", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs:
    def __init__(__self__, *,
                 domain_name: pulumi.Input[str],
                 schema_name: pulumi.Input[str]):
        """
        :param pulumi.Input[str] domain_name: (Updatable) DBCS Domain Name
               
               **Added In:** 18.2.4
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] schema_name: (Updatable) The DBCS schema-name granted to this Group for the DB instance that 'dbInstanceId' specifies.
               
               **Added In:** 18.2.4
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            domain_name=domain_name,
            schema_name=schema_name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             domain_name: pulumi.Input[str],
             schema_name: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'domainName' in kwargs:
            domain_name = kwargs['domainName']
        if 'schemaName' in kwargs:
            schema_name = kwargs['schemaName']

        _setter("domain_name", domain_name)
        _setter("schema_name", schema_name)

    @property
    @pulumi.getter(name="domainName")
    def domain_name(self) -> pulumi.Input[str]:
        """
        (Updatable) DBCS Domain Name

        **Added In:** 18.2.4

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "domain_name")

    @domain_name.setter
    def domain_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "domain_name", value)

    @property
    @pulumi.getter(name="schemaName")
    def schema_name(self) -> pulumi.Input[str]:
        """
        (Updatable) The DBCS schema-name granted to this Group for the DB instance that 'dbInstanceId' specifies.

        **Added In:** 18.2.4

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "schema_name")

    @schema_name.setter
    def schema_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "schema_name", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs:
    def __init__(__self__, *,
                 db_instance_id: pulumi.Input[str],
                 schema_name: pulumi.Input[str]):
        """
        :param pulumi.Input[str] db_instance_id: (Updatable) App Id of DBCS App instance
               
               **Added In:** 18.2.4
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] schema_name: (Updatable) The DBCS schema-name granted to this Group for the DB instance that 'dbInstanceId' specifies.
               
               **Added In:** 18.2.4
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            db_instance_id=db_instance_id,
            schema_name=schema_name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             db_instance_id: pulumi.Input[str],
             schema_name: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'dbInstanceId' in kwargs:
            db_instance_id = kwargs['dbInstanceId']
        if 'schemaName' in kwargs:
            schema_name = kwargs['schemaName']

        _setter("db_instance_id", db_instance_id)
        _setter("schema_name", schema_name)

    @property
    @pulumi.getter(name="dbInstanceId")
    def db_instance_id(self) -> pulumi.Input[str]:
        """
        (Updatable) App Id of DBCS App instance

        **Added In:** 18.2.4

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "db_instance_id")

    @db_instance_id.setter
    def db_instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "db_instance_id", value)

    @property
    @pulumi.getter(name="schemaName")
    def schema_name(self) -> pulumi.Input[str]:
        """
        (Updatable) The DBCS schema-name granted to this Group for the DB instance that 'dbInstanceId' specifies.

        **Added In:** 18.2.4

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "schema_name")

    @schema_name.setter
    def schema_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "schema_name", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupArgs:
    def __init__(__self__, *,
                 membership_rule: Optional[pulumi.Input[str]] = None,
                 membership_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] membership_rule: (Updatable) Membership rule
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] membership_type: (Updatable) Membership type
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            membership_rule=membership_rule,
            membership_type=membership_type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             membership_rule: Optional[pulumi.Input[str]] = None,
             membership_type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'membershipRule' in kwargs:
            membership_rule = kwargs['membershipRule']
        if 'membershipType' in kwargs:
            membership_type = kwargs['membershipType']

        if membership_rule is not None:
            _setter("membership_rule", membership_rule)
        if membership_type is not None:
            _setter("membership_type", membership_type)

    @property
    @pulumi.getter(name="membershipRule")
    def membership_rule(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Membership rule

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "membership_rule")

    @membership_rule.setter
    def membership_rule(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "membership_rule", value)

    @property
    @pulumi.getter(name="membershipType")
    def membership_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Membership type

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "membership_type")

    @membership_type.setter
    def membership_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "membership_type", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupArgs:
    def __init__(__self__, *,
                 app_roles: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRoleArgs']]]] = None,
                 creation_mechanism: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 grants: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrantArgs']]]] = None,
                 owners: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwnerArgs']]]] = None,
                 password_policies: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicyArgs']]]] = None,
                 synced_from_apps: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromAppArgs']]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRoleArgs']]] app_roles: (Updatable) A list of appRoles that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] creation_mechanism: (Updatable) Source from which this group got created.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeNameMappings: [[defaultValue:import]]
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] description: (Updatable) Group description
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: Description
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Description]]
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrantArgs']]] grants: (Updatable) Grants assigned to group
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwnerArgs']]] owners: (Updatable) Group owners
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCompositeKey: [value, type]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicyArgs']]] password_policies: (Updatable) Password Policy associated with this Group.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromAppArgs']]] synced_from_apps: (Updatable) The entity that created this Group.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            app_roles=app_roles,
            creation_mechanism=creation_mechanism,
            description=description,
            grants=grants,
            owners=owners,
            password_policies=password_policies,
            synced_from_apps=synced_from_apps,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             app_roles: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRoleArgs']]]] = None,
             creation_mechanism: Optional[pulumi.Input[str]] = None,
             description: Optional[pulumi.Input[str]] = None,
             grants: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrantArgs']]]] = None,
             owners: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwnerArgs']]]] = None,
             password_policies: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicyArgs']]]] = None,
             synced_from_apps: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromAppArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'appRoles' in kwargs:
            app_roles = kwargs['appRoles']
        if 'creationMechanism' in kwargs:
            creation_mechanism = kwargs['creationMechanism']
        if 'passwordPolicies' in kwargs:
            password_policies = kwargs['passwordPolicies']
        if 'syncedFromApps' in kwargs:
            synced_from_apps = kwargs['syncedFromApps']

        if app_roles is not None:
            _setter("app_roles", app_roles)
        if creation_mechanism is not None:
            _setter("creation_mechanism", creation_mechanism)
        if description is not None:
            _setter("description", description)
        if grants is not None:
            _setter("grants", grants)
        if owners is not None:
            _setter("owners", owners)
        if password_policies is not None:
            _setter("password_policies", password_policies)
        if synced_from_apps is not None:
            _setter("synced_from_apps", synced_from_apps)

    @property
    @pulumi.getter(name="appRoles")
    def app_roles(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRoleArgs']]]]:
        """
        (Updatable) A list of appRoles that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "app_roles")

    @app_roles.setter
    def app_roles(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRoleArgs']]]]):
        pulumi.set(self, "app_roles", value)

    @property
    @pulumi.getter(name="creationMechanism")
    def creation_mechanism(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Source from which this group got created.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeNameMappings: [[defaultValue:import]]
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "creation_mechanism")

    @creation_mechanism.setter
    def creation_mechanism(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "creation_mechanism", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Group description

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: Description
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Description]]
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def grants(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrantArgs']]]]:
        """
        (Updatable) Grants assigned to group

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "grants")

    @grants.setter
    def grants(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrantArgs']]]]):
        pulumi.set(self, "grants", value)

    @property
    @pulumi.getter
    def owners(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwnerArgs']]]]:
        """
        (Updatable) Group owners

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCompositeKey: [value, type]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "owners")

    @owners.setter
    def owners(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwnerArgs']]]]):
        pulumi.set(self, "owners", value)

    @property
    @pulumi.getter(name="passwordPolicies")
    def password_policies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicyArgs']]]]:
        """
        (Updatable) Password Policy associated with this Group.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "password_policies")

    @password_policies.setter
    def password_policies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicyArgs']]]]):
        pulumi.set(self, "password_policies", value)

    @property
    @pulumi.getter(name="syncedFromApps")
    def synced_from_apps(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromAppArgs']]]]:
        """
        (Updatable) The entity that created this Group.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "synced_from_apps")

    @synced_from_apps.setter
    def synced_from_apps(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromAppArgs']]]]):
        pulumi.set(self, "synced_from_apps", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRoleArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 admin_role: Optional[pulumi.Input[bool]] = None,
                 app_id: Optional[pulumi.Input[str]] = None,
                 app_name: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 legacy_group_name: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] admin_role: (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] app_id: (Updatable) App identifier
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] app_name: (Updatable) Name of parent App. READ-ONLY.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) App Display Name
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] legacy_group_name: (Updatable) The name of the legacy group associated with this AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) App URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of the entity that created this Group.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsDefaultValue: App
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRoleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            admin_role=admin_role,
            app_id=app_id,
            app_name=app_name,
            display=display,
            legacy_group_name=legacy_group_name,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             admin_role: Optional[pulumi.Input[bool]] = None,
             app_id: Optional[pulumi.Input[str]] = None,
             app_name: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             legacy_group_name: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'adminRole' in kwargs:
            admin_role = kwargs['adminRole']
        if 'appId' in kwargs:
            app_id = kwargs['appId']
        if 'appName' in kwargs:
            app_name = kwargs['appName']
        if 'legacyGroupName' in kwargs:
            legacy_group_name = kwargs['legacyGroupName']

        _setter("value", value)
        if admin_role is not None:
            _setter("admin_role", admin_role)
        if app_id is not None:
            _setter("app_id", app_id)
        if app_name is not None:
            _setter("app_name", app_name)
        if display is not None:
            _setter("display", display)
        if legacy_group_name is not None:
            _setter("legacy_group_name", legacy_group_name)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="adminRole")
    def admin_role(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "admin_role")

    @admin_role.setter
    def admin_role(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "admin_role", value)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App identifier

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter(name="appName")
    def app_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of parent App. READ-ONLY.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_name")

    @app_name.setter
    def app_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_name", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App Display Name

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter(name="legacyGroupName")
    def legacy_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The name of the legacy group associated with this AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "legacy_group_name")

    @legacy_group_name.setter
    def legacy_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "legacy_group_name", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of the entity that created this Group.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsDefaultValue: App
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrantArgs:
    def __init__(__self__, *,
                 app_id: Optional[pulumi.Input[str]] = None,
                 grant_mechanism: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] app_id: (Updatable) App identifier
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] grant_mechanism: (Updatable) Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted. A customer or the UI should use only grantMechanism values that start with 'ADMINISTRATOR':
               * 'ADMINISTRATOR_TO_USER' is for a direct grant to a specific User.
               * 'ADMINISTRATOR_TO_GROUP' is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.
               * 'ADMINISTRATOR_TO_APP' is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) App URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrantArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            app_id=app_id,
            grant_mechanism=grant_mechanism,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             app_id: Optional[pulumi.Input[str]] = None,
             grant_mechanism: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'appId' in kwargs:
            app_id = kwargs['appId']
        if 'grantMechanism' in kwargs:
            grant_mechanism = kwargs['grantMechanism']

        if app_id is not None:
            _setter("app_id", app_id)
        if grant_mechanism is not None:
            _setter("grant_mechanism", grant_mechanism)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App identifier

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter(name="grantMechanism")
    def grant_mechanism(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted. A customer or the UI should use only grantMechanism values that start with 'ADMINISTRATOR':
        * 'ADMINISTRATOR_TO_USER' is for a direct grant to a specific User.
        * 'ADMINISTRATOR_TO_GROUP' is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.
        * 'ADMINISTRATOR_TO_APP' is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "grant_mechanism")

    @grant_mechanism.setter
    def grant_mechanism(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grant_mechanism", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwnerArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) The type of the entity that created this Group.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsDefaultValue: App
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) App Display Name
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) App URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwnerArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) The type of the entity that created this Group.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsDefaultValue: App
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App Display Name

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicyArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 name: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) PasswordPolicy Name
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] priority: (Updatable) PasswordPolicy priority
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) App URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            name=name,
            priority=priority,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             name: Optional[pulumi.Input[str]] = None,
             priority: Optional[pulumi.Input[int]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if name is not None:
            _setter("name", name)
        if priority is not None:
            _setter("priority", priority)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) PasswordPolicy Name

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) PasswordPolicy priority

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromAppArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) The type of the entity that created this Group.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsDefaultValue: App
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The ID of the App.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) App Display Name
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) App URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) The type of the entity that created this Group.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsDefaultValue: App
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The ID of the App.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App Display Name

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) App URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupArgs:
    def __init__(__self__, *,
                 gid_number: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[int] gid_number: (Updatable) Integer uniquely identifying a group in a POSIX administrative domain
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: integer
               * uniqueness: server
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            gid_number=gid_number,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             gid_number: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'gidNumber' in kwargs:
            gid_number = kwargs['gidNumber']

        if gid_number is not None:
            _setter("gid_number", gid_number)

    @property
    @pulumi.getter(name="gidNumber")
    def gid_number(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Integer uniquely identifying a group in a POSIX administrative domain

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: integer
        * uniqueness: server
        """
        return pulumi.get(self, "gid_number")

    @gid_number.setter
    def gid_number(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "gid_number", value)


@pulumi.input_type
class DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupArgs:
    def __init__(__self__, *,
                 requestable: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] requestable: (Updatable) Flag controlling whether group membership can be request by user through self service console.
               
               **Added In:** 17.3.4
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Requestable, mapsTo:requestable]]
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            requestable=requestable,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             requestable: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if requestable is not None:
            _setter("requestable", requestable)

    @property
    @pulumi.getter
    def requestable(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Flag controlling whether group membership can be request by user through self service console.

        **Added In:** 17.3.4

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Requestable, mapsTo:requestable]]
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "requestable")

    @requestable.setter
    def requestable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "requestable", value)


@pulumi.input_type
class DomainsIdentityProviderCorrelationPolicyArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) Identity Provider Type
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes. READ-ONLY.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) Group URI
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: reference
        """
        DomainsIdentityProviderCorrelationPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) Identity Provider Type

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes. READ-ONLY.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Group URI

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: reference
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsIdentityProviderIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes. READ-ONLY.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) Group URI
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: reference
        :param pulumi.Input[str] type: (Updatable) Identity Provider Type
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        """
        DomainsIdentityProviderIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes. READ-ONLY.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Group URI

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: reference
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Identity Provider Type

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsIdentityProviderIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes. READ-ONLY.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) Group URI
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: reference
        :param pulumi.Input[str] type: (Updatable) Identity Provider Type
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        """
        DomainsIdentityProviderIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes. READ-ONLY.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Group URI

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: reference
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Identity Provider Type

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsIdentityProviderJitUserProvAssignedGroupArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes. READ-ONLY.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) Group URI
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: reference
        """
        DomainsIdentityProviderJitUserProvAssignedGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes. READ-ONLY.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Group URI

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: reference
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsIdentityProviderJitUserProvAttributesArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) Group URI
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: reference
        """
        DomainsIdentityProviderJitUserProvAttributesArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Group URI

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: reference
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsIdentityProviderJitUserProvGroupMappingArgs:
    def __init__(__self__, *,
                 idp_group: pulumi.Input[str],
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] idp_group: (Updatable) IDP Group Name
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * type: string
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) Group URI
               
               **Added In:** 2205120021
               
               **SCIM++ Properties:**
               * multiValued: false
               * mutability: readOnly
               * required: true
               * returned: default
               * type: reference
        """
        DomainsIdentityProviderJitUserProvGroupMappingArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            idp_group=idp_group,
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             idp_group: pulumi.Input[str],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'idpGroup' in kwargs:
            idp_group = kwargs['idpGroup']

        _setter("idp_group", idp_group)
        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter(name="idpGroup")
    def idp_group(self) -> pulumi.Input[str]:
        """
        (Updatable) IDP Group Name

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * type: string
        """
        return pulumi.get(self, "idp_group")

    @idp_group.setter
    def idp_group(self, value: pulumi.Input[str]):
        pulumi.set(self, "idp_group", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Group URI

        **Added In:** 2205120021

        **SCIM++ Properties:**
        * multiValued: false
        * mutability: readOnly
        * required: true
        * returned: default
        * type: reference
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsIdentityProviderMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsIdentityProviderMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsIdentityProviderTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsIdentityProviderTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs:
    def __init__(__self__, *,
                 account_linking_enabled: pulumi.Input[bool],
                 consumer_key: pulumi.Input[str],
                 consumer_secret: pulumi.Input[str],
                 registration_enabled: pulumi.Input[bool],
                 service_provider_name: pulumi.Input[str],
                 access_token_url: Optional[pulumi.Input[str]] = None,
                 admin_scopes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 authz_url: Optional[pulumi.Input[str]] = None,
                 client_credential_in_payload: Optional[pulumi.Input[bool]] = None,
                 clock_skew_in_seconds: Optional[pulumi.Input[int]] = None,
                 discovery_url: Optional[pulumi.Input[str]] = None,
                 id_attribute: Optional[pulumi.Input[str]] = None,
                 profile_url: Optional[pulumi.Input[str]] = None,
                 redirect_url: Optional[pulumi.Input[str]] = None,
                 scopes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 status: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[bool] account_linking_enabled: (Updatable) Whether account linking is enabled
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] consumer_key: (Updatable) Social IDP Client Application Client ID
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] consumer_secret: (Updatable) Social IDP Client Application Client Secret
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * idcsSensitive: encrypt
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] registration_enabled: (Updatable) Whether registration is enabled
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] service_provider_name: (Updatable) Service Provider Name
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] access_token_url: (Updatable) Social IDP Access token URL
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] admin_scopes: (Updatable) Admin scope to request
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] authz_url: (Updatable) Social IDP Authorization URL
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] client_credential_in_payload: (Updatable) Whether the client credential is contained in payload
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[int] clock_skew_in_seconds: (Updatable) Social IDP allowed clock skew time
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] discovery_url: (Updatable) Discovery URL
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] id_attribute: (Updatable) Id attribute used for account linking
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] profile_url: (Updatable) Social IDP User profile URL
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] redirect_url: (Updatable) redirect URL for social idp
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] scopes: (Updatable) Scope to request
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] status: (Updatable) Status
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            account_linking_enabled=account_linking_enabled,
            consumer_key=consumer_key,
            consumer_secret=consumer_secret,
            registration_enabled=registration_enabled,
            service_provider_name=service_provider_name,
            access_token_url=access_token_url,
            admin_scopes=admin_scopes,
            authz_url=authz_url,
            client_credential_in_payload=client_credential_in_payload,
            clock_skew_in_seconds=clock_skew_in_seconds,
            discovery_url=discovery_url,
            id_attribute=id_attribute,
            profile_url=profile_url,
            redirect_url=redirect_url,
            scopes=scopes,
            status=status,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             account_linking_enabled: pulumi.Input[bool],
             consumer_key: pulumi.Input[str],
             consumer_secret: pulumi.Input[str],
             registration_enabled: pulumi.Input[bool],
             service_provider_name: pulumi.Input[str],
             access_token_url: Optional[pulumi.Input[str]] = None,
             admin_scopes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             authz_url: Optional[pulumi.Input[str]] = None,
             client_credential_in_payload: Optional[pulumi.Input[bool]] = None,
             clock_skew_in_seconds: Optional[pulumi.Input[int]] = None,
             discovery_url: Optional[pulumi.Input[str]] = None,
             id_attribute: Optional[pulumi.Input[str]] = None,
             profile_url: Optional[pulumi.Input[str]] = None,
             redirect_url: Optional[pulumi.Input[str]] = None,
             scopes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             status: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'accountLinkingEnabled' in kwargs:
            account_linking_enabled = kwargs['accountLinkingEnabled']
        if 'consumerKey' in kwargs:
            consumer_key = kwargs['consumerKey']
        if 'consumerSecret' in kwargs:
            consumer_secret = kwargs['consumerSecret']
        if 'registrationEnabled' in kwargs:
            registration_enabled = kwargs['registrationEnabled']
        if 'serviceProviderName' in kwargs:
            service_provider_name = kwargs['serviceProviderName']
        if 'accessTokenUrl' in kwargs:
            access_token_url = kwargs['accessTokenUrl']
        if 'adminScopes' in kwargs:
            admin_scopes = kwargs['adminScopes']
        if 'authzUrl' in kwargs:
            authz_url = kwargs['authzUrl']
        if 'clientCredentialInPayload' in kwargs:
            client_credential_in_payload = kwargs['clientCredentialInPayload']
        if 'clockSkewInSeconds' in kwargs:
            clock_skew_in_seconds = kwargs['clockSkewInSeconds']
        if 'discoveryUrl' in kwargs:
            discovery_url = kwargs['discoveryUrl']
        if 'idAttribute' in kwargs:
            id_attribute = kwargs['idAttribute']
        if 'profileUrl' in kwargs:
            profile_url = kwargs['profileUrl']
        if 'redirectUrl' in kwargs:
            redirect_url = kwargs['redirectUrl']

        _setter("account_linking_enabled", account_linking_enabled)
        _setter("consumer_key", consumer_key)
        _setter("consumer_secret", consumer_secret)
        _setter("registration_enabled", registration_enabled)
        _setter("service_provider_name", service_provider_name)
        if access_token_url is not None:
            _setter("access_token_url", access_token_url)
        if admin_scopes is not None:
            _setter("admin_scopes", admin_scopes)
        if authz_url is not None:
            _setter("authz_url", authz_url)
        if client_credential_in_payload is not None:
            _setter("client_credential_in_payload", client_credential_in_payload)
        if clock_skew_in_seconds is not None:
            _setter("clock_skew_in_seconds", clock_skew_in_seconds)
        if discovery_url is not None:
            _setter("discovery_url", discovery_url)
        if id_attribute is not None:
            _setter("id_attribute", id_attribute)
        if profile_url is not None:
            _setter("profile_url", profile_url)
        if redirect_url is not None:
            _setter("redirect_url", redirect_url)
        if scopes is not None:
            _setter("scopes", scopes)
        if status is not None:
            _setter("status", status)

    @property
    @pulumi.getter(name="accountLinkingEnabled")
    def account_linking_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) Whether account linking is enabled

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "account_linking_enabled")

    @account_linking_enabled.setter
    def account_linking_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "account_linking_enabled", value)

    @property
    @pulumi.getter(name="consumerKey")
    def consumer_key(self) -> pulumi.Input[str]:
        """
        (Updatable) Social IDP Client Application Client ID

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "consumer_key")

    @consumer_key.setter
    def consumer_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "consumer_key", value)

    @property
    @pulumi.getter(name="consumerSecret")
    def consumer_secret(self) -> pulumi.Input[str]:
        """
        (Updatable) Social IDP Client Application Client Secret

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * idcsSensitive: encrypt
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "consumer_secret")

    @consumer_secret.setter
    def consumer_secret(self, value: pulumi.Input[str]):
        pulumi.set(self, "consumer_secret", value)

    @property
    @pulumi.getter(name="registrationEnabled")
    def registration_enabled(self) -> pulumi.Input[bool]:
        """
        (Updatable) Whether registration is enabled

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "registration_enabled")

    @registration_enabled.setter
    def registration_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "registration_enabled", value)

    @property
    @pulumi.getter(name="serviceProviderName")
    def service_provider_name(self) -> pulumi.Input[str]:
        """
        (Updatable) Service Provider Name

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "service_provider_name")

    @service_provider_name.setter
    def service_provider_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "service_provider_name", value)

    @property
    @pulumi.getter(name="accessTokenUrl")
    def access_token_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Social IDP Access token URL

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "access_token_url")

    @access_token_url.setter
    def access_token_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "access_token_url", value)

    @property
    @pulumi.getter(name="adminScopes")
    def admin_scopes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) Admin scope to request

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "admin_scopes")

    @admin_scopes.setter
    def admin_scopes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "admin_scopes", value)

    @property
    @pulumi.getter(name="authzUrl")
    def authz_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Social IDP Authorization URL

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "authz_url")

    @authz_url.setter
    def authz_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authz_url", value)

    @property
    @pulumi.getter(name="clientCredentialInPayload")
    def client_credential_in_payload(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Whether the client credential is contained in payload

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "client_credential_in_payload")

    @client_credential_in_payload.setter
    def client_credential_in_payload(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "client_credential_in_payload", value)

    @property
    @pulumi.getter(name="clockSkewInSeconds")
    def clock_skew_in_seconds(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Social IDP allowed clock skew time

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "clock_skew_in_seconds")

    @clock_skew_in_seconds.setter
    def clock_skew_in_seconds(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "clock_skew_in_seconds", value)

    @property
    @pulumi.getter(name="discoveryUrl")
    def discovery_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Discovery URL

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "discovery_url")

    @discovery_url.setter
    def discovery_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "discovery_url", value)

    @property
    @pulumi.getter(name="idAttribute")
    def id_attribute(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Id attribute used for account linking

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "id_attribute")

    @id_attribute.setter
    def id_attribute(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "id_attribute", value)

    @property
    @pulumi.getter(name="profileUrl")
    def profile_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Social IDP User profile URL

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "profile_url")

    @profile_url.setter
    def profile_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_url", value)

    @property
    @pulumi.getter(name="redirectUrl")
    def redirect_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) redirect URL for social idp

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "redirect_url")

    @redirect_url.setter
    def redirect_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "redirect_url", value)

    @property
    @pulumi.getter
    def scopes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) Scope to request

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "scopes")

    @scopes.setter
    def scopes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "scopes", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Status

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)


@pulumi.input_type
class DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderArgs:
    def __init__(__self__, *,
                 cert_match_attribute: pulumi.Input[str],
                 signing_certificate_chains: pulumi.Input[Sequence[pulumi.Input[str]]],
                 user_match_attribute: pulumi.Input[str],
                 crl_check_on_ocsp_failure_enabled: Optional[pulumi.Input[bool]] = None,
                 crl_enabled: Optional[pulumi.Input[bool]] = None,
                 crl_location: Optional[pulumi.Input[str]] = None,
                 crl_reload_duration: Optional[pulumi.Input[int]] = None,
                 eku_validation_enabled: Optional[pulumi.Input[bool]] = None,
                 eku_values: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ocsp_allow_unknown_response_status: Optional[pulumi.Input[bool]] = None,
                 ocsp_enable_signed_response: Optional[pulumi.Input[bool]] = None,
                 ocsp_enabled: Optional[pulumi.Input[bool]] = None,
                 ocsp_responder_url: Optional[pulumi.Input[str]] = None,
                 ocsp_revalidate_time: Optional[pulumi.Input[int]] = None,
                 ocsp_server_name: Optional[pulumi.Input[str]] = None,
                 ocsp_trust_cert_chains: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 other_cert_match_attribute: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] cert_match_attribute: (Updatable) X509 Certificate Matching Attribute
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] signing_certificate_chains: (Updatable) Certificate alias list to create a chain for the incoming client certificate
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: true
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] user_match_attribute: (Updatable) This property specifies the userstore attribute value that must match the incoming certificate attribute.
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] crl_check_on_ocsp_failure_enabled: (Updatable) Fallback on CRL Validation if OCSP fails.
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] crl_enabled: (Updatable) Set to true to enable CRL Validation
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] crl_location: (Updatable) CRL Location URL
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] crl_reload_duration: (Updatable) Fetch the CRL contents every X minutes
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[bool] eku_validation_enabled: (Updatable) Set to true to enable EKU Validation
               
               **Added In:** 2304270343
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] eku_values: (Updatable) List of EKU which needs to be validated
               
               **Added In:** 2304270343
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] ocsp_allow_unknown_response_status: (Updatable) Allow access if OCSP response is UNKNOWN or OCSP Responder does not respond within the timeout duration
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] ocsp_enable_signed_response: (Updatable) Describes if the OCSP response is signed
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] ocsp_enabled: (Updatable) Set to true to enable OCSP Validation
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] ocsp_responder_url: (Updatable) This property specifies OCSP Responder URL.
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] ocsp_revalidate_time: (Updatable) Revalidate OCSP status for user after X hours
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * idcsMaxValue: 24
               * idcsMinValue: 0
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] ocsp_server_name: (Updatable) This property specifies the OCSP Server alias name
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ocsp_trust_cert_chains: (Updatable) OCSP Trusted Certificate Chain
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] other_cert_match_attribute: (Updatable) Check for specific conditions of other certificate attributes
               
               **Added In:** 2010242156
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            cert_match_attribute=cert_match_attribute,
            signing_certificate_chains=signing_certificate_chains,
            user_match_attribute=user_match_attribute,
            crl_check_on_ocsp_failure_enabled=crl_check_on_ocsp_failure_enabled,
            crl_enabled=crl_enabled,
            crl_location=crl_location,
            crl_reload_duration=crl_reload_duration,
            eku_validation_enabled=eku_validation_enabled,
            eku_values=eku_values,
            ocsp_allow_unknown_response_status=ocsp_allow_unknown_response_status,
            ocsp_enable_signed_response=ocsp_enable_signed_response,
            ocsp_enabled=ocsp_enabled,
            ocsp_responder_url=ocsp_responder_url,
            ocsp_revalidate_time=ocsp_revalidate_time,
            ocsp_server_name=ocsp_server_name,
            ocsp_trust_cert_chains=ocsp_trust_cert_chains,
            other_cert_match_attribute=other_cert_match_attribute,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             cert_match_attribute: pulumi.Input[str],
             signing_certificate_chains: pulumi.Input[Sequence[pulumi.Input[str]]],
             user_match_attribute: pulumi.Input[str],
             crl_check_on_ocsp_failure_enabled: Optional[pulumi.Input[bool]] = None,
             crl_enabled: Optional[pulumi.Input[bool]] = None,
             crl_location: Optional[pulumi.Input[str]] = None,
             crl_reload_duration: Optional[pulumi.Input[int]] = None,
             eku_validation_enabled: Optional[pulumi.Input[bool]] = None,
             eku_values: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             ocsp_allow_unknown_response_status: Optional[pulumi.Input[bool]] = None,
             ocsp_enable_signed_response: Optional[pulumi.Input[bool]] = None,
             ocsp_enabled: Optional[pulumi.Input[bool]] = None,
             ocsp_responder_url: Optional[pulumi.Input[str]] = None,
             ocsp_revalidate_time: Optional[pulumi.Input[int]] = None,
             ocsp_server_name: Optional[pulumi.Input[str]] = None,
             ocsp_trust_cert_chains: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             other_cert_match_attribute: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'certMatchAttribute' in kwargs:
            cert_match_attribute = kwargs['certMatchAttribute']
        if 'signingCertificateChains' in kwargs:
            signing_certificate_chains = kwargs['signingCertificateChains']
        if 'userMatchAttribute' in kwargs:
            user_match_attribute = kwargs['userMatchAttribute']
        if 'crlCheckOnOcspFailureEnabled' in kwargs:
            crl_check_on_ocsp_failure_enabled = kwargs['crlCheckOnOcspFailureEnabled']
        if 'crlEnabled' in kwargs:
            crl_enabled = kwargs['crlEnabled']
        if 'crlLocation' in kwargs:
            crl_location = kwargs['crlLocation']
        if 'crlReloadDuration' in kwargs:
            crl_reload_duration = kwargs['crlReloadDuration']
        if 'ekuValidationEnabled' in kwargs:
            eku_validation_enabled = kwargs['ekuValidationEnabled']
        if 'ekuValues' in kwargs:
            eku_values = kwargs['ekuValues']
        if 'ocspAllowUnknownResponseStatus' in kwargs:
            ocsp_allow_unknown_response_status = kwargs['ocspAllowUnknownResponseStatus']
        if 'ocspEnableSignedResponse' in kwargs:
            ocsp_enable_signed_response = kwargs['ocspEnableSignedResponse']
        if 'ocspEnabled' in kwargs:
            ocsp_enabled = kwargs['ocspEnabled']
        if 'ocspResponderUrl' in kwargs:
            ocsp_responder_url = kwargs['ocspResponderUrl']
        if 'ocspRevalidateTime' in kwargs:
            ocsp_revalidate_time = kwargs['ocspRevalidateTime']
        if 'ocspServerName' in kwargs:
            ocsp_server_name = kwargs['ocspServerName']
        if 'ocspTrustCertChains' in kwargs:
            ocsp_trust_cert_chains = kwargs['ocspTrustCertChains']
        if 'otherCertMatchAttribute' in kwargs:
            other_cert_match_attribute = kwargs['otherCertMatchAttribute']

        _setter("cert_match_attribute", cert_match_attribute)
        _setter("signing_certificate_chains", signing_certificate_chains)
        _setter("user_match_attribute", user_match_attribute)
        if crl_check_on_ocsp_failure_enabled is not None:
            _setter("crl_check_on_ocsp_failure_enabled", crl_check_on_ocsp_failure_enabled)
        if crl_enabled is not None:
            _setter("crl_enabled", crl_enabled)
        if crl_location is not None:
            _setter("crl_location", crl_location)
        if crl_reload_duration is not None:
            _setter("crl_reload_duration", crl_reload_duration)
        if eku_validation_enabled is not None:
            _setter("eku_validation_enabled", eku_validation_enabled)
        if eku_values is not None:
            _setter("eku_values", eku_values)
        if ocsp_allow_unknown_response_status is not None:
            _setter("ocsp_allow_unknown_response_status", ocsp_allow_unknown_response_status)
        if ocsp_enable_signed_response is not None:
            _setter("ocsp_enable_signed_response", ocsp_enable_signed_response)
        if ocsp_enabled is not None:
            _setter("ocsp_enabled", ocsp_enabled)
        if ocsp_responder_url is not None:
            _setter("ocsp_responder_url", ocsp_responder_url)
        if ocsp_revalidate_time is not None:
            _setter("ocsp_revalidate_time", ocsp_revalidate_time)
        if ocsp_server_name is not None:
            _setter("ocsp_server_name", ocsp_server_name)
        if ocsp_trust_cert_chains is not None:
            _setter("ocsp_trust_cert_chains", ocsp_trust_cert_chains)
        if other_cert_match_attribute is not None:
            _setter("other_cert_match_attribute", other_cert_match_attribute)

    @property
    @pulumi.getter(name="certMatchAttribute")
    def cert_match_attribute(self) -> pulumi.Input[str]:
        """
        (Updatable) X509 Certificate Matching Attribute

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "cert_match_attribute")

    @cert_match_attribute.setter
    def cert_match_attribute(self, value: pulumi.Input[str]):
        pulumi.set(self, "cert_match_attribute", value)

    @property
    @pulumi.getter(name="signingCertificateChains")
    def signing_certificate_chains(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        (Updatable) Certificate alias list to create a chain for the incoming client certificate

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: true
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "signing_certificate_chains")

    @signing_certificate_chains.setter
    def signing_certificate_chains(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "signing_certificate_chains", value)

    @property
    @pulumi.getter(name="userMatchAttribute")
    def user_match_attribute(self) -> pulumi.Input[str]:
        """
        (Updatable) This property specifies the userstore attribute value that must match the incoming certificate attribute.

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_match_attribute")

    @user_match_attribute.setter
    def user_match_attribute(self, value: pulumi.Input[str]):
        pulumi.set(self, "user_match_attribute", value)

    @property
    @pulumi.getter(name="crlCheckOnOcspFailureEnabled")
    def crl_check_on_ocsp_failure_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Fallback on CRL Validation if OCSP fails.

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "crl_check_on_ocsp_failure_enabled")

    @crl_check_on_ocsp_failure_enabled.setter
    def crl_check_on_ocsp_failure_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "crl_check_on_ocsp_failure_enabled", value)

    @property
    @pulumi.getter(name="crlEnabled")
    def crl_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Set to true to enable CRL Validation

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "crl_enabled")

    @crl_enabled.setter
    def crl_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "crl_enabled", value)

    @property
    @pulumi.getter(name="crlLocation")
    def crl_location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) CRL Location URL

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "crl_location")

    @crl_location.setter
    def crl_location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "crl_location", value)

    @property
    @pulumi.getter(name="crlReloadDuration")
    def crl_reload_duration(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Fetch the CRL contents every X minutes

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "crl_reload_duration")

    @crl_reload_duration.setter
    def crl_reload_duration(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "crl_reload_duration", value)

    @property
    @pulumi.getter(name="ekuValidationEnabled")
    def eku_validation_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Set to true to enable EKU Validation

        **Added In:** 2304270343

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "eku_validation_enabled")

    @eku_validation_enabled.setter
    def eku_validation_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "eku_validation_enabled", value)

    @property
    @pulumi.getter(name="ekuValues")
    def eku_values(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) List of EKU which needs to be validated

        **Added In:** 2304270343

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "eku_values")

    @eku_values.setter
    def eku_values(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "eku_values", value)

    @property
    @pulumi.getter(name="ocspAllowUnknownResponseStatus")
    def ocsp_allow_unknown_response_status(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Allow access if OCSP response is UNKNOWN or OCSP Responder does not respond within the timeout duration

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "ocsp_allow_unknown_response_status")

    @ocsp_allow_unknown_response_status.setter
    def ocsp_allow_unknown_response_status(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ocsp_allow_unknown_response_status", value)

    @property
    @pulumi.getter(name="ocspEnableSignedResponse")
    def ocsp_enable_signed_response(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Describes if the OCSP response is signed

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "ocsp_enable_signed_response")

    @ocsp_enable_signed_response.setter
    def ocsp_enable_signed_response(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ocsp_enable_signed_response", value)

    @property
    @pulumi.getter(name="ocspEnabled")
    def ocsp_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Set to true to enable OCSP Validation

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "ocsp_enabled")

    @ocsp_enabled.setter
    def ocsp_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ocsp_enabled", value)

    @property
    @pulumi.getter(name="ocspResponderUrl")
    def ocsp_responder_url(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This property specifies OCSP Responder URL.

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocsp_responder_url")

    @ocsp_responder_url.setter
    def ocsp_responder_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocsp_responder_url", value)

    @property
    @pulumi.getter(name="ocspRevalidateTime")
    def ocsp_revalidate_time(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Revalidate OCSP status for user after X hours

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * idcsMaxValue: 24
        * idcsMinValue: 0
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "ocsp_revalidate_time")

    @ocsp_revalidate_time.setter
    def ocsp_revalidate_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ocsp_revalidate_time", value)

    @property
    @pulumi.getter(name="ocspServerName")
    def ocsp_server_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) This property specifies the OCSP Server alias name

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocsp_server_name")

    @ocsp_server_name.setter
    def ocsp_server_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocsp_server_name", value)

    @property
    @pulumi.getter(name="ocspTrustCertChains")
    def ocsp_trust_cert_chains(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) OCSP Trusted Certificate Chain

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocsp_trust_cert_chains")

    @ocsp_trust_cert_chains.setter
    def ocsp_trust_cert_chains(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ocsp_trust_cert_chains", value)

    @property
    @pulumi.getter(name="otherCertMatchAttribute")
    def other_cert_match_attribute(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Check for specific conditions of other certificate attributes

        **Added In:** 2010242156

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "other_cert_match_attribute")

    @other_cert_match_attribute.setter
    def other_cert_match_attribute(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "other_cert_match_attribute", value)


@pulumi.input_type
class DomainsIdentitySettingIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The token type.
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsIdentitySettingIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The token type.

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsIdentitySettingIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The token type.
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsIdentitySettingIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The token type.

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsIdentitySettingMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsIdentitySettingMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsIdentitySettingMyProfileArgs:
    def __init__(__self__, *,
                 allow_end_users_to_change_their_password: Optional[pulumi.Input[bool]] = None,
                 allow_end_users_to_link_their_support_account: Optional[pulumi.Input[bool]] = None,
                 allow_end_users_to_manage_their_capabilities: Optional[pulumi.Input[bool]] = None,
                 allow_end_users_to_update_their_security_settings: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] allow_end_users_to_change_their_password: (Updatable) Whether to allow users to change their own password.
               
               **Added In:** 2207040824
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] allow_end_users_to_link_their_support_account: (Updatable) Whether to allow users to link or unlink their support accounts.
               
               **Added In:** 2207040824
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] allow_end_users_to_manage_their_capabilities: (Updatable) Whether to allow users to update their capabilities.
               
               **Added In:** 2207040824
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] allow_end_users_to_update_their_security_settings: (Updatable) Whether to allow users to update their security settings.
               
               **Added In:** 2207040824
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsIdentitySettingMyProfileArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            allow_end_users_to_change_their_password=allow_end_users_to_change_their_password,
            allow_end_users_to_link_their_support_account=allow_end_users_to_link_their_support_account,
            allow_end_users_to_manage_their_capabilities=allow_end_users_to_manage_their_capabilities,
            allow_end_users_to_update_their_security_settings=allow_end_users_to_update_their_security_settings,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             allow_end_users_to_change_their_password: Optional[pulumi.Input[bool]] = None,
             allow_end_users_to_link_their_support_account: Optional[pulumi.Input[bool]] = None,
             allow_end_users_to_manage_their_capabilities: Optional[pulumi.Input[bool]] = None,
             allow_end_users_to_update_their_security_settings: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'allowEndUsersToChangeTheirPassword' in kwargs:
            allow_end_users_to_change_their_password = kwargs['allowEndUsersToChangeTheirPassword']
        if 'allowEndUsersToLinkTheirSupportAccount' in kwargs:
            allow_end_users_to_link_their_support_account = kwargs['allowEndUsersToLinkTheirSupportAccount']
        if 'allowEndUsersToManageTheirCapabilities' in kwargs:
            allow_end_users_to_manage_their_capabilities = kwargs['allowEndUsersToManageTheirCapabilities']
        if 'allowEndUsersToUpdateTheirSecuritySettings' in kwargs:
            allow_end_users_to_update_their_security_settings = kwargs['allowEndUsersToUpdateTheirSecuritySettings']

        if allow_end_users_to_change_their_password is not None:
            _setter("allow_end_users_to_change_their_password", allow_end_users_to_change_their_password)
        if allow_end_users_to_link_their_support_account is not None:
            _setter("allow_end_users_to_link_their_support_account", allow_end_users_to_link_their_support_account)
        if allow_end_users_to_manage_their_capabilities is not None:
            _setter("allow_end_users_to_manage_their_capabilities", allow_end_users_to_manage_their_capabilities)
        if allow_end_users_to_update_their_security_settings is not None:
            _setter("allow_end_users_to_update_their_security_settings", allow_end_users_to_update_their_security_settings)

    @property
    @pulumi.getter(name="allowEndUsersToChangeTheirPassword")
    def allow_end_users_to_change_their_password(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Whether to allow users to change their own password.

        **Added In:** 2207040824

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_end_users_to_change_their_password")

    @allow_end_users_to_change_their_password.setter
    def allow_end_users_to_change_their_password(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_end_users_to_change_their_password", value)

    @property
    @pulumi.getter(name="allowEndUsersToLinkTheirSupportAccount")
    def allow_end_users_to_link_their_support_account(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Whether to allow users to link or unlink their support accounts.

        **Added In:** 2207040824

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_end_users_to_link_their_support_account")

    @allow_end_users_to_link_their_support_account.setter
    def allow_end_users_to_link_their_support_account(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_end_users_to_link_their_support_account", value)

    @property
    @pulumi.getter(name="allowEndUsersToManageTheirCapabilities")
    def allow_end_users_to_manage_their_capabilities(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Whether to allow users to update their capabilities.

        **Added In:** 2207040824

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_end_users_to_manage_their_capabilities")

    @allow_end_users_to_manage_their_capabilities.setter
    def allow_end_users_to_manage_their_capabilities(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_end_users_to_manage_their_capabilities", value)

    @property
    @pulumi.getter(name="allowEndUsersToUpdateTheirSecuritySettings")
    def allow_end_users_to_update_their_security_settings(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Whether to allow users to update their security settings.

        **Added In:** 2207040824

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_end_users_to_update_their_security_settings")

    @allow_end_users_to_update_their_security_settings.setter
    def allow_end_users_to_update_their_security_settings(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_end_users_to_update_their_security_settings", value)


@pulumi.input_type
class DomainsIdentitySettingPosixGidArgs:
    def __init__(__self__, *,
                 manual_assignment_ends_at: Optional[pulumi.Input[int]] = None,
                 manual_assignment_starts_from: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[int] manual_assignment_ends_at: (Updatable) The number at which the Posix Uid Manual assignment ends.
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] manual_assignment_starts_from: (Updatable) The number from which the Posix Uid Manual assignment starts.
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        """
        DomainsIdentitySettingPosixGidArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            manual_assignment_ends_at=manual_assignment_ends_at,
            manual_assignment_starts_from=manual_assignment_starts_from,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             manual_assignment_ends_at: Optional[pulumi.Input[int]] = None,
             manual_assignment_starts_from: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'manualAssignmentEndsAt' in kwargs:
            manual_assignment_ends_at = kwargs['manualAssignmentEndsAt']
        if 'manualAssignmentStartsFrom' in kwargs:
            manual_assignment_starts_from = kwargs['manualAssignmentStartsFrom']

        if manual_assignment_ends_at is not None:
            _setter("manual_assignment_ends_at", manual_assignment_ends_at)
        if manual_assignment_starts_from is not None:
            _setter("manual_assignment_starts_from", manual_assignment_starts_from)

    @property
    @pulumi.getter(name="manualAssignmentEndsAt")
    def manual_assignment_ends_at(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The number at which the Posix Uid Manual assignment ends.

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "manual_assignment_ends_at")

    @manual_assignment_ends_at.setter
    def manual_assignment_ends_at(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "manual_assignment_ends_at", value)

    @property
    @pulumi.getter(name="manualAssignmentStartsFrom")
    def manual_assignment_starts_from(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The number from which the Posix Uid Manual assignment starts.

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "manual_assignment_starts_from")

    @manual_assignment_starts_from.setter
    def manual_assignment_starts_from(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "manual_assignment_starts_from", value)


@pulumi.input_type
class DomainsIdentitySettingPosixUidArgs:
    def __init__(__self__, *,
                 manual_assignment_ends_at: Optional[pulumi.Input[int]] = None,
                 manual_assignment_starts_from: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[int] manual_assignment_ends_at: (Updatable) The number at which the Posix Uid Manual assignment ends.
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] manual_assignment_starts_from: (Updatable) The number from which the Posix Uid Manual assignment starts.
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        """
        DomainsIdentitySettingPosixUidArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            manual_assignment_ends_at=manual_assignment_ends_at,
            manual_assignment_starts_from=manual_assignment_starts_from,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             manual_assignment_ends_at: Optional[pulumi.Input[int]] = None,
             manual_assignment_starts_from: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'manualAssignmentEndsAt' in kwargs:
            manual_assignment_ends_at = kwargs['manualAssignmentEndsAt']
        if 'manualAssignmentStartsFrom' in kwargs:
            manual_assignment_starts_from = kwargs['manualAssignmentStartsFrom']

        if manual_assignment_ends_at is not None:
            _setter("manual_assignment_ends_at", manual_assignment_ends_at)
        if manual_assignment_starts_from is not None:
            _setter("manual_assignment_starts_from", manual_assignment_starts_from)

    @property
    @pulumi.getter(name="manualAssignmentEndsAt")
    def manual_assignment_ends_at(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The number at which the Posix Uid Manual assignment ends.

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "manual_assignment_ends_at")

    @manual_assignment_ends_at.setter
    def manual_assignment_ends_at(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "manual_assignment_ends_at", value)

    @property
    @pulumi.getter(name="manualAssignmentStartsFrom")
    def manual_assignment_starts_from(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The number from which the Posix Uid Manual assignment starts.

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "manual_assignment_starts_from")

    @manual_assignment_starts_from.setter
    def manual_assignment_starts_from(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "manual_assignment_starts_from", value)


@pulumi.input_type
class DomainsIdentitySettingTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsIdentitySettingTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsIdentitySettingTokenArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 expires_after: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) The token type.
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] expires_after: (Updatable) Indicates the number of minutes after which the token expires automatically.
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        """
        DomainsIdentitySettingTokenArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            expires_after=expires_after,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             expires_after: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'expiresAfter' in kwargs:
            expires_after = kwargs['expiresAfter']

        _setter("type", type)
        if expires_after is not None:
            _setter("expires_after", expires_after)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) The token type.

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="expiresAfter")
    def expires_after(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Indicates the number of minutes after which the token expires automatically.

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "expires_after")

    @expires_after.setter
    def expires_after(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "expires_after", value)


@pulumi.input_type
class DomainsKmsiSettingIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsKmsiSettingIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsKmsiSettingIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsKmsiSettingIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsKmsiSettingMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsKmsiSettingMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsKmsiSettingTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsKmsiSettingTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyApiKeyIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyApiKeyIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyApiKeyIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyApiKeyIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyApiKeyMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyApiKeyMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsMyApiKeyTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsMyApiKeyTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyApiKeyUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The username.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsMyApiKeyUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The username.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyAuthTokenIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyAuthTokenIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyAuthTokenIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyAuthTokenIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyAuthTokenMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyAuthTokenMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsMyAuthTokenTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsMyAuthTokenTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyAuthTokenUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The username.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsMyAuthTokenUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The username.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyCustomerSecretKeyIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyCustomerSecretKeyIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyCustomerSecretKeyIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyCustomerSecretKeyIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyCustomerSecretKeyMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyCustomerSecretKeyMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsMyCustomerSecretKeyTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsMyCustomerSecretKeyTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyCustomerSecretKeyUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The user's name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsMyCustomerSecretKeyUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyOauth2clientCredentialIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyOauth2clientCredentialIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyOauth2clientCredentialIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyOauth2clientCredentialIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyOauth2clientCredentialMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyOauth2clientCredentialMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsMyOauth2clientCredentialScopeArgs:
    def __init__(__self__, *,
                 audience: pulumi.Input[str],
                 scope: pulumi.Input[str]):
        """
        :param pulumi.Input[str] audience: Audience
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * mutability: readWrite
               * required: true
               * returned: default
        :param pulumi.Input[str] scope: Scope
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsScimCompliant: false
               * type: string
               * mutability: readWrite
               * multiValued: false
               * required: true
               * returned: default
        """
        DomainsMyOauth2clientCredentialScopeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            audience=audience,
            scope=scope,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             audience: pulumi.Input[str],
             scope: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("audience", audience)
        _setter("scope", scope)

    @property
    @pulumi.getter
    def audience(self) -> pulumi.Input[str]:
        """
        Audience

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * mutability: readWrite
        * required: true
        * returned: default
        """
        return pulumi.get(self, "audience")

    @audience.setter
    def audience(self, value: pulumi.Input[str]):
        pulumi.set(self, "audience", value)

    @property
    @pulumi.getter
    def scope(self) -> pulumi.Input[str]:
        """
        Scope

        **SCIM++ Properties:**
        * caseExact: false
        * idcsScimCompliant: false
        * type: string
        * mutability: readWrite
        * multiValued: false
        * required: true
        * returned: default
        """
        return pulumi.get(self, "scope")

    @scope.setter
    def scope(self, value: pulumi.Input[str]):
        pulumi.set(self, "scope", value)


@pulumi.input_type
class DomainsMyOauth2clientCredentialTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsMyOauth2clientCredentialTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyOauth2clientCredentialUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The username.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsMyOauth2clientCredentialUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The username.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyRequestIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: User display name
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) User URI
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: Requestable type. Allowed values are Group and App.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsCsvAttributeName: Requestable Type
               * idcsDefaultValue: Group
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyRequestIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        User display name

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User URI

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Requestable type. Allowed values are Group and App.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsCsvAttributeName: Requestable Type
        * idcsDefaultValue: Group
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyRequestIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: User display name
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) User URI
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: Requestable type. Allowed values are Group and App.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsCsvAttributeName: Requestable Type
               * idcsDefaultValue: Group
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyRequestIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        User display name

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User URI

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Requestable type. Allowed values are Group and App.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsCsvAttributeName: Requestable Type
        * idcsDefaultValue: Group
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyRequestMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyRequestMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsMyRequestRequestingArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: Requestable type. Allowed values are Group and App.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsCsvAttributeName: Requestable Type
               * idcsDefaultValue: Group
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: User display name
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User URI
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsMyRequestRequestingArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        Requestable type. Allowed values are Group and App.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsCsvAttributeName: Requestable Type
        * idcsDefaultValue: Group
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        User display name

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User URI

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsMyRequestRequestorArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: User display name
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User URI
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsMyRequestRequestorArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        User display name

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User URI

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsMyRequestTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyRequestTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMySmtpCredentialIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) User display name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: User's ocid
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMySmtpCredentialIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User display name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        User's ocid

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMySmtpCredentialIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) User display name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: User's ocid
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMySmtpCredentialIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User display name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        User's ocid

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMySmtpCredentialMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMySmtpCredentialMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsMySmtpCredentialTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        """
        DomainsMySmtpCredentialTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMySmtpCredentialUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) User display name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) User name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: User's ocid
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        """
        DomainsMySmtpCredentialUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User display name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        User's ocid

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMySupportAccountIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) User display name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: User's ocid
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this Support Account
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMySupportAccountIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User display name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        User's ocid

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this Support Account

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMySupportAccountIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) User display name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: User's ocid
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this Support Account
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMySupportAccountIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User display name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        User's ocid

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this Support Account

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMySupportAccountMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMySupportAccountMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsMySupportAccountTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        """
        DomainsMySupportAccountTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMySupportAccountUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) User display name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) User name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: User's ocid
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this Support Account
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        """
        DomainsMySupportAccountUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User display name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        User's ocid

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this Support Account

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyUserDbCredentialIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's identifier.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyUserDbCredentialIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's identifier.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyUserDbCredentialIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's identifier.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyUserDbCredentialIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's identifier.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsMyUserDbCredentialMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsMyUserDbCredentialMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsMyUserDbCredentialTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's identifier.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsMyUserDbCredentialTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's identifier.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsMyUserDbCredentialUserArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's identifier.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The username.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsMyUserDbCredentialUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's identifier.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The username.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsOauth2clientCredentialIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsOauth2clientCredentialIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsOauth2clientCredentialIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsOauth2clientCredentialIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsOauth2clientCredentialMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsOauth2clientCredentialMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsOauth2clientCredentialScopeArgs:
    def __init__(__self__, *,
                 audience: pulumi.Input[str],
                 scope: pulumi.Input[str]):
        """
        :param pulumi.Input[str] audience: Audience
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * mutability: readWrite
               * required: true
               * returned: default
        :param pulumi.Input[str] scope: Scope
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsScimCompliant: false
               * type: string
               * mutability: readWrite
               * multiValued: false
               * required: true
               * returned: default
        """
        DomainsOauth2clientCredentialScopeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            audience=audience,
            scope=scope,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             audience: pulumi.Input[str],
             scope: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("audience", audience)
        _setter("scope", scope)

    @property
    @pulumi.getter
    def audience(self) -> pulumi.Input[str]:
        """
        Audience

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * mutability: readWrite
        * required: true
        * returned: default
        """
        return pulumi.get(self, "audience")

    @audience.setter
    def audience(self, value: pulumi.Input[str]):
        pulumi.set(self, "audience", value)

    @property
    @pulumi.getter
    def scope(self) -> pulumi.Input[str]:
        """
        Scope

        **SCIM++ Properties:**
        * caseExact: false
        * idcsScimCompliant: false
        * type: string
        * mutability: readWrite
        * multiValued: false
        * required: true
        * returned: default
        """
        return pulumi.get(self, "scope")

    @scope.setter
    def scope(self, value: pulumi.Input[str]):
        pulumi.set(self, "scope", value)


@pulumi.input_type
class DomainsOauth2clientCredentialTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsOauth2clientCredentialTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsOauth2clientCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs:
    def __init__(__self__, *,
                 allow_self_change: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] allow_self_change: If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).
               
               **Added In:** 2205182039
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: writeOnly
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        """
        DomainsOauth2clientCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            allow_self_change=allow_self_change,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             allow_self_change: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'allowSelfChange' in kwargs:
            allow_self_change = kwargs['allowSelfChange']

        if allow_self_change is not None:
            _setter("allow_self_change", allow_self_change)

    @property
    @pulumi.getter(name="allowSelfChange")
    def allow_self_change(self) -> Optional[pulumi.Input[bool]]:
        """
        If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).

        **Added In:** 2205182039

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: writeOnly
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_self_change")

    @allow_self_change.setter
    def allow_self_change(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_self_change", value)


@pulumi.input_type
class DomainsOauth2clientCredentialUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) The user's display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The username.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: The user's ID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsOauth2clientCredentialUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The username.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        The user's ID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsPasswordPolicyConfiguredPasswordPolicyRuleArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsPasswordPolicyConfiguredPasswordPolicyRuleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsPasswordPolicyGroupArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsPasswordPolicyGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsPasswordPolicyIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsPasswordPolicyIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsPasswordPolicyIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsPasswordPolicyIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsPasswordPolicyMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsPasswordPolicyMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsPasswordPolicyTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsPasswordPolicyTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsSecurityQuestionIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: This indicates if the question is a Custom Question added by the Security Admin.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsSecurityQuestionIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        This indicates if the question is a Custom Question added by the Security Admin.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsSecurityQuestionIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: This indicates if the question is a Custom Question added by the Security Admin.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsSecurityQuestionIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        This indicates if the question is a Custom Question added by the Security Admin.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsSecurityQuestionMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsSecurityQuestionMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsSecurityQuestionQuestionTextArgs:
    def __init__(__self__, *,
                 locale: pulumi.Input[str],
                 value: pulumi.Input[str],
                 default: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] locale: The locale
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCanonicalValueSourceFilter: attrName eq "locales" and attrValues.value eq "$(locale)"
               * idcsCanonicalValueSourceResourceType: AllowedValue
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] default: If true, specifies that the localized attribute instance value is the default and will be returned if no localized value found for requesting user's preferred locale. One and only one instance should have this attribute set to true.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsSecurityQuestionQuestionTextArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            locale=locale,
            value=value,
            default=default,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             locale: pulumi.Input[str],
             value: pulumi.Input[str],
             default: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("locale", locale)
        _setter("value", value)
        if default is not None:
            _setter("default", default)

    @property
    @pulumi.getter
    def locale(self) -> pulumi.Input[str]:
        """
        The locale

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCanonicalValueSourceFilter: attrName eq "locales" and attrValues.value eq "$(locale)"
        * idcsCanonicalValueSourceResourceType: AllowedValue
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "locale")

    @locale.setter
    def locale(self, value: pulumi.Input[str]):
        pulumi.set(self, "locale", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def default(self) -> Optional[pulumi.Input[bool]]:
        """
        If true, specifies that the localized attribute instance value is the default and will be returned if no localized value found for requesting user's preferred locale. One and only one instance should have this attribute set to true.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "default")

    @default.setter
    def default(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "default", value)


@pulumi.input_type
class DomainsSecurityQuestionSettingIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsSecurityQuestionSettingIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsSecurityQuestionSettingIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) The displayName of the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: string
               * uniqueness: global
        :param pulumi.Input[str] ref: (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsSecurityQuestionSettingIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: string
        * uniqueness: global
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the SCIM resource that represents the User or App who modified this Resource

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsSecurityQuestionSettingMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsSecurityQuestionSettingMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsSecurityQuestionSettingTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsSecurityQuestionSettingTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsSecurityQuestionTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: Value of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsSecurityQuestionTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Value of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsSmtpCredentialIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) User display name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: User's ocid
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsSmtpCredentialIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User display name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        User's ocid

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsSmtpCredentialIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) User display name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: User's ocid
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsSmtpCredentialIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User display name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        User's ocid

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsSmtpCredentialMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsSmtpCredentialMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsSmtpCredentialTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        """
        DomainsSmtpCredentialTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs:
    def __init__(__self__, *,
                 allow_self_change: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] allow_self_change: If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).
               
               **Added In:** 2205182039
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: writeOnly
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        """
        DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            allow_self_change=allow_self_change,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             allow_self_change: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'allowSelfChange' in kwargs:
            allow_self_change = kwargs['allowSelfChange']

        if allow_self_change is not None:
            _setter("allow_self_change", allow_self_change)

    @property
    @pulumi.getter(name="allowSelfChange")
    def allow_self_change(self) -> Optional[pulumi.Input[bool]]:
        """
        If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).

        **Added In:** 2205182039

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: writeOnly
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_self_change")

    @allow_self_change.setter
    def allow_self_change(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_self_change", value)


@pulumi.input_type
class DomainsSmtpCredentialUserArgs:
    def __init__(__self__, *,
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display: (Updatable) User display name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) User name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: User's ocid
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: User's id
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        """
        DomainsSmtpCredentialUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User display name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        User's ocid

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        User's id

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserAddressArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 country: Optional[pulumi.Input[str]] = None,
                 formatted: Optional[pulumi.Input[str]] = None,
                 locality: Optional[pulumi.Input[str]] = None,
                 postal_code: Optional[pulumi.Input[str]] = None,
                 primary: Optional[pulumi.Input[bool]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 street_address: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] country: (Updatable) The country name component.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCanonicalValueSourceFilter: attrName eq "countries" and attrValues.value eq "upper($(country))"
               * idcsCanonicalValueSourceResourceType: AllowedValue
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] formatted: (Updatable) Full name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] locality: (Updatable) The city or locality component.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] postal_code: (Updatable) The zipcode or postal code component.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] primary: (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] region: (Updatable) The state or region component.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] street_address: (Updatable) The full street address component, which may include house number, street name, PO BOX, and multi-line extended street address information. This attribute MAY contain newlines.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserAddressArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            country=country,
            formatted=formatted,
            locality=locality,
            postal_code=postal_code,
            primary=primary,
            region=region,
            street_address=street_address,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             country: Optional[pulumi.Input[str]] = None,
             formatted: Optional[pulumi.Input[str]] = None,
             locality: Optional[pulumi.Input[str]] = None,
             postal_code: Optional[pulumi.Input[str]] = None,
             primary: Optional[pulumi.Input[bool]] = None,
             region: Optional[pulumi.Input[str]] = None,
             street_address: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'postalCode' in kwargs:
            postal_code = kwargs['postalCode']
        if 'streetAddress' in kwargs:
            street_address = kwargs['streetAddress']

        _setter("type", type)
        if country is not None:
            _setter("country", country)
        if formatted is not None:
            _setter("formatted", formatted)
        if locality is not None:
            _setter("locality", locality)
        if postal_code is not None:
            _setter("postal_code", postal_code)
        if primary is not None:
            _setter("primary", primary)
        if region is not None:
            _setter("region", region)
        if street_address is not None:
            _setter("street_address", street_address)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def country(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The country name component.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCanonicalValueSourceFilter: attrName eq "countries" and attrValues.value eq "upper($(country))"
        * idcsCanonicalValueSourceResourceType: AllowedValue
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "country")

    @country.setter
    def country(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "country", value)

    @property
    @pulumi.getter
    def formatted(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Full name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "formatted")

    @formatted.setter
    def formatted(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "formatted", value)

    @property
    @pulumi.getter
    def locality(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The city or locality component.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "locality")

    @locality.setter
    def locality(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "locality", value)

    @property
    @pulumi.getter(name="postalCode")
    def postal_code(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The zipcode or postal code component.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "postal_code")

    @postal_code.setter
    def postal_code(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "postal_code", value)

    @property
    @pulumi.getter
    def primary(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "primary")

    @primary.setter
    def primary(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "primary", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The state or region component.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="streetAddress")
    def street_address(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The full street address component, which may include house number, street name, PO BOX, and multi-line extended street address information. This attribute MAY contain newlines.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "street_address")

    @street_address.setter
    def street_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "street_address", value)


@pulumi.input_type
class DomainsUserDbCredentialIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's identifier.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserDbCredentialIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's identifier.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsUserDbCredentialIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's identifier.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: The type of resource, User or App, that modified this Resource
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserDbCredentialIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's identifier.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource, User or App, that modified this Resource

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsUserDbCredentialMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserDbCredentialMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsUserDbCredentialTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Key or name of the tag.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: The user's identifier.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserDbCredentialTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Key or name of the tag.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's identifier.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs:
    def __init__(__self__, *,
                 allow_self_change: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] allow_self_change: If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).
               
               **Added In:** 2205182039
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: writeOnly
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        """
        DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            allow_self_change=allow_self_change,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             allow_self_change: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'allowSelfChange' in kwargs:
            allow_self_change = kwargs['allowSelfChange']

        if allow_self_change is not None:
            _setter("allow_self_change", allow_self_change)

    @property
    @pulumi.getter(name="allowSelfChange")
    def allow_self_change(self) -> Optional[pulumi.Input[bool]]:
        """
        If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).

        **Added In:** 2205182039

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: writeOnly
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_self_change")

    @allow_self_change.setter
    def allow_self_change(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_self_change", value)


@pulumi.input_type
class DomainsUserDbCredentialUserArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: The user's identifier.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) The user display name.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) The username.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: The user's OCID.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) The URI that corresponds to the user linked to this credential.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserDbCredentialUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            name=name,
            ocid=ocid,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if name is not None:
            _setter("name", name)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The user's identifier.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: always
        * type: string
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user display name.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The username.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        The user's OCID.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI that corresponds to the user linked to this credential.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserEmailArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 pending_verification_data: Optional[pulumi.Input[str]] = None,
                 primary: Optional[pulumi.Input[bool]] = None,
                 secondary: Optional[pulumi.Input[bool]] = None,
                 verified: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] pending_verification_data: (Updatable) Pending e-mail address verification
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] primary: (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] secondary: (Updatable) A Boolean value that indicates whether the email address is the secondary email address. The secondary attribute value 'true' MUST appear no more than once.
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] verified: (Updatable) A Boolean value that indicates if the phone number is verified.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsUserEmailArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            pending_verification_data=pending_verification_data,
            primary=primary,
            secondary=secondary,
            verified=verified,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             pending_verification_data: Optional[pulumi.Input[str]] = None,
             primary: Optional[pulumi.Input[bool]] = None,
             secondary: Optional[pulumi.Input[bool]] = None,
             verified: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'pendingVerificationData' in kwargs:
            pending_verification_data = kwargs['pendingVerificationData']

        _setter("type", type)
        _setter("value", value)
        if pending_verification_data is not None:
            _setter("pending_verification_data", pending_verification_data)
        if primary is not None:
            _setter("primary", primary)
        if secondary is not None:
            _setter("secondary", secondary)
        if verified is not None:
            _setter("verified", verified)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="pendingVerificationData")
    def pending_verification_data(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Pending e-mail address verification

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "pending_verification_data")

    @pending_verification_data.setter
    def pending_verification_data(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pending_verification_data", value)

    @property
    @pulumi.getter
    def primary(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "primary")

    @primary.setter
    def primary(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "primary", value)

    @property
    @pulumi.getter
    def secondary(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value that indicates whether the email address is the secondary email address. The secondary attribute value 'true' MUST appear no more than once.

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "secondary")

    @secondary.setter
    def secondary(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "secondary", value)

    @property
    @pulumi.getter
    def verified(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value that indicates if the phone number is verified.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "verified")

    @verified.setter
    def verified(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "verified", value)


@pulumi.input_type
class DomainsUserEntitlementArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 primary: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] primary: (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsUserEntitlementArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            primary=primary,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             primary: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if primary is not None:
            _setter("primary", primary)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def primary(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "primary")

    @primary.setter
    def primary(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "primary", value)


@pulumi.input_type
class DomainsUserGroupArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 date_added: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 external_id: Optional[pulumi.Input[str]] = None,
                 membership_ocid: Optional[pulumi.Input[str]] = None,
                 non_unique_display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] date_added: (Updatable) Date when the member is Added to the group
               
               **Added In:** 2105200541
               
               **SCIM++ Properties:**
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] external_id: (Updatable) An identifier for the Resource as defined by the Service Consumer. READ-ONLY.
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] membership_ocid: (Updatable) The membership OCID.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] non_unique_display: (Updatable) A human readable name for Group as defined by the Service Consumer. READ-ONLY.
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            date_added=date_added,
            display=display,
            external_id=external_id,
            membership_ocid=membership_ocid,
            non_unique_display=non_unique_display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             date_added: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             external_id: Optional[pulumi.Input[str]] = None,
             membership_ocid: Optional[pulumi.Input[str]] = None,
             non_unique_display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'dateAdded' in kwargs:
            date_added = kwargs['dateAdded']
        if 'externalId' in kwargs:
            external_id = kwargs['externalId']
        if 'membershipOcid' in kwargs:
            membership_ocid = kwargs['membershipOcid']
        if 'nonUniqueDisplay' in kwargs:
            non_unique_display = kwargs['nonUniqueDisplay']

        _setter("value", value)
        if date_added is not None:
            _setter("date_added", date_added)
        if display is not None:
            _setter("display", display)
        if external_id is not None:
            _setter("external_id", external_id)
        if membership_ocid is not None:
            _setter("membership_ocid", membership_ocid)
        if non_unique_display is not None:
            _setter("non_unique_display", non_unique_display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="dateAdded")
    def date_added(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Date when the member is Added to the group

        **Added In:** 2105200541

        **SCIM++ Properties:**
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "date_added")

    @date_added.setter
    def date_added(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "date_added", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter(name="externalId")
    def external_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) An identifier for the Resource as defined by the Service Consumer. READ-ONLY.

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "external_id")

    @external_id.setter
    def external_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "external_id", value)

    @property
    @pulumi.getter(name="membershipOcid")
    def membership_ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The membership OCID.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "membership_ocid")

    @membership_ocid.setter
    def membership_ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "membership_ocid", value)

    @property
    @pulumi.getter(name="nonUniqueDisplay")
    def non_unique_display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name for Group as defined by the Service Consumer. READ-ONLY.

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "non_unique_display")

    @non_unique_display.setter
    def non_unique_display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "non_unique_display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsUserIdcsCreatedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserIdcsCreatedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsUserIdcsLastModifiedByArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserIdcsLastModifiedByArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsUserImArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 primary: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] primary: (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsUserImArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            primary=primary,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             primary: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if primary is not None:
            _setter("primary", primary)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def primary(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "primary")

    @primary.setter
    def primary(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "primary", value)


@pulumi.input_type
class DomainsUserMetaArgs:
    def __init__(__self__, *,
                 created: Optional[pulumi.Input[str]] = None,
                 last_modified: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] created: (Updatable) The DateTime the Resource was added to the Service Provider
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_modified: (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] location: (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] resource_type: (Updatable) Name of the resource type of the resource--for example, Users or Groups
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] version: (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserMetaArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            created=created,
            last_modified=last_modified,
            location=location,
            resource_type=resource_type,
            version=version,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             created: Optional[pulumi.Input[str]] = None,
             last_modified: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             resource_type: Optional[pulumi.Input[str]] = None,
             version: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastModified' in kwargs:
            last_modified = kwargs['lastModified']
        if 'resourceType' in kwargs:
            resource_type = kwargs['resourceType']

        if created is not None:
            _setter("created", created)
        if last_modified is not None:
            _setter("last_modified", last_modified)
        if location is not None:
            _setter("location", location)
        if resource_type is not None:
            _setter("resource_type", resource_type)
        if version is not None:
            _setter("version", version)

    @property
    @pulumi.getter
    def created(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The DateTime the Resource was added to the Service Provider

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "created")

    @created.setter
    def created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created", value)

    @property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The most recent DateTime that the details of this Resource were updated at the Service Provider. If this Resource has never been modified since its initial creation, the value MUST be the same as the value of created. The attribute MUST be a DateTime.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_modified", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The URI of the Resource being returned. This value MUST be the same as the Location HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the resource type of the resource--for example, Users or Groups

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The version of the Resource being returned. This value must be the same as the ETag HTTP response header.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class DomainsUserNameArgs:
    def __init__(__self__, *,
                 family_name: pulumi.Input[str],
                 formatted: Optional[pulumi.Input[str]] = None,
                 given_name: Optional[pulumi.Input[str]] = None,
                 honorific_prefix: Optional[pulumi.Input[str]] = None,
                 honorific_suffix: Optional[pulumi.Input[str]] = None,
                 middle_name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] family_name: (Updatable) Last name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: Last Name
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] formatted: (Updatable) Full name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] given_name: (Updatable) First name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: First Name
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] honorific_prefix: (Updatable) Prefix
               
               **SCIM++ Properties:**
               * idcsCsvAttributeName: Honorific Prefix
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] honorific_suffix: (Updatable) Suffix
               
               **SCIM++ Properties:**
               * idcsCsvAttributeName: Honorific Suffix
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] middle_name: (Updatable) Middle name
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: Middle Name
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserNameArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            family_name=family_name,
            formatted=formatted,
            given_name=given_name,
            honorific_prefix=honorific_prefix,
            honorific_suffix=honorific_suffix,
            middle_name=middle_name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             family_name: pulumi.Input[str],
             formatted: Optional[pulumi.Input[str]] = None,
             given_name: Optional[pulumi.Input[str]] = None,
             honorific_prefix: Optional[pulumi.Input[str]] = None,
             honorific_suffix: Optional[pulumi.Input[str]] = None,
             middle_name: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'familyName' in kwargs:
            family_name = kwargs['familyName']
        if 'givenName' in kwargs:
            given_name = kwargs['givenName']
        if 'honorificPrefix' in kwargs:
            honorific_prefix = kwargs['honorificPrefix']
        if 'honorificSuffix' in kwargs:
            honorific_suffix = kwargs['honorificSuffix']
        if 'middleName' in kwargs:
            middle_name = kwargs['middleName']

        _setter("family_name", family_name)
        if formatted is not None:
            _setter("formatted", formatted)
        if given_name is not None:
            _setter("given_name", given_name)
        if honorific_prefix is not None:
            _setter("honorific_prefix", honorific_prefix)
        if honorific_suffix is not None:
            _setter("honorific_suffix", honorific_suffix)
        if middle_name is not None:
            _setter("middle_name", middle_name)

    @property
    @pulumi.getter(name="familyName")
    def family_name(self) -> pulumi.Input[str]:
        """
        (Updatable) Last name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: Last Name
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "family_name")

    @family_name.setter
    def family_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "family_name", value)

    @property
    @pulumi.getter
    def formatted(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Full name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "formatted")

    @formatted.setter
    def formatted(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "formatted", value)

    @property
    @pulumi.getter(name="givenName")
    def given_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) First name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: First Name
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "given_name")

    @given_name.setter
    def given_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "given_name", value)

    @property
    @pulumi.getter(name="honorificPrefix")
    def honorific_prefix(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Prefix

        **SCIM++ Properties:**
        * idcsCsvAttributeName: Honorific Prefix
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "honorific_prefix")

    @honorific_prefix.setter
    def honorific_prefix(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "honorific_prefix", value)

    @property
    @pulumi.getter(name="honorificSuffix")
    def honorific_suffix(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Suffix

        **SCIM++ Properties:**
        * idcsCsvAttributeName: Honorific Suffix
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "honorific_suffix")

    @honorific_suffix.setter
    def honorific_suffix(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "honorific_suffix", value)

    @property
    @pulumi.getter(name="middleName")
    def middle_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Middle name

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: Middle Name
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "middle_name")

    @middle_name.setter
    def middle_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "middle_name", value)


@pulumi.input_type
class DomainsUserPhoneNumberArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 primary: Optional[pulumi.Input[bool]] = None,
                 verified: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] primary: (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] verified: (Updatable) A Boolean value that indicates if the phone number is verified.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsUserPhoneNumberArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            primary=primary,
            verified=verified,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             primary: Optional[pulumi.Input[bool]] = None,
             verified: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if primary is not None:
            _setter("primary", primary)
        if verified is not None:
            _setter("verified", verified)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def primary(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "primary")

    @primary.setter
    def primary(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "primary", value)

    @property
    @pulumi.getter
    def verified(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value that indicates if the phone number is verified.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "verified")

    @verified.setter
    def verified(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "verified", value)


@pulumi.input_type
class DomainsUserPhotoArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 primary: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] primary: (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsUserPhotoArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            primary=primary,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             primary: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if primary is not None:
            _setter("primary", primary)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def primary(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "primary")

    @primary.setter
    def primary(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "primary", value)


@pulumi.input_type
class DomainsUserRoleArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 primary: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] primary: (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsUserRoleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            primary=primary,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             primary: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if primary is not None:
            _setter("primary", primary)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def primary(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "primary")

    @primary.setter
    def primary(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "primary", value)


@pulumi.input_type
class DomainsUserTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) The user's API key value.
               
               **Added In:** 2106240046
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) The user's API key value.

        **Added In:** 2106240046

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs:
    def __init__(__self__, *,
                 cost_center: Optional[pulumi.Input[str]] = None,
                 department: Optional[pulumi.Input[str]] = None,
                 division: Optional[pulumi.Input[str]] = None,
                 employee_number: Optional[pulumi.Input[str]] = None,
                 manager: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs']] = None,
                 organization: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] cost_center: (Updatable) Identifies the name of a cost center.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: Cost Center
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Cost Center]]
               * idcsPii: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] department: (Updatable) Identifies the name of a department.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: Department
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Department]]
               * idcsPii: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] division: (Updatable) Identifies the name of a division.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: Division
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Division]]
               * idcsPii: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] employee_number: (Updatable) Numeric or alphanumeric identifier assigned to  a person, typically based on order of hire or association with an organization.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: Employee Number
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Employee Number]]
               * idcsPii: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input['DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs'] manager: (Updatable) The User's manager. A complex type that optionally allows Service Providers to represent organizational hierarchy by referencing the 'id' attribute of another User.
               
               **SCIM++ Properties:**
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Manager, deprecatedColumnHeaderName:Manager Name, mapsTo:manager.value]]
               * idcsPii: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] organization: (Updatable) Identifies the name of an organization.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: Organization
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Organization Name, deprecatedColumnHeaderName:Organization]]
               * idcsPii: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            cost_center=cost_center,
            department=department,
            division=division,
            employee_number=employee_number,
            manager=manager,
            organization=organization,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             cost_center: Optional[pulumi.Input[str]] = None,
             department: Optional[pulumi.Input[str]] = None,
             division: Optional[pulumi.Input[str]] = None,
             employee_number: Optional[pulumi.Input[str]] = None,
             manager: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs']] = None,
             organization: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'costCenter' in kwargs:
            cost_center = kwargs['costCenter']
        if 'employeeNumber' in kwargs:
            employee_number = kwargs['employeeNumber']

        if cost_center is not None:
            _setter("cost_center", cost_center)
        if department is not None:
            _setter("department", department)
        if division is not None:
            _setter("division", division)
        if employee_number is not None:
            _setter("employee_number", employee_number)
        if manager is not None:
            _setter("manager", manager)
        if organization is not None:
            _setter("organization", organization)

    @property
    @pulumi.getter(name="costCenter")
    def cost_center(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Identifies the name of a cost center.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: Cost Center
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Cost Center]]
        * idcsPii: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "cost_center")

    @cost_center.setter
    def cost_center(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cost_center", value)

    @property
    @pulumi.getter
    def department(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Identifies the name of a department.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: Department
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Department]]
        * idcsPii: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "department")

    @department.setter
    def department(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "department", value)

    @property
    @pulumi.getter
    def division(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Identifies the name of a division.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: Division
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Division]]
        * idcsPii: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "division")

    @division.setter
    def division(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "division", value)

    @property
    @pulumi.getter(name="employeeNumber")
    def employee_number(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Numeric or alphanumeric identifier assigned to  a person, typically based on order of hire or association with an organization.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: Employee Number
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Employee Number]]
        * idcsPii: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "employee_number")

    @employee_number.setter
    def employee_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "employee_number", value)

    @property
    @pulumi.getter
    def manager(self) -> Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs']]:
        """
        (Updatable) The User's manager. A complex type that optionally allows Service Providers to represent organizational hierarchy by referencing the 'id' attribute of another User.

        **SCIM++ Properties:**
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Manager, deprecatedColumnHeaderName:Manager Name, mapsTo:manager.value]]
        * idcsPii: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "manager")

    @manager.setter
    def manager(self, value: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs']]):
        pulumi.set(self, "manager", value)

    @property
    @pulumi.getter
    def organization(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Identifies the name of an organization.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: Organization
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Organization Name, deprecatedColumnHeaderName:Organization]]
        * idcsPii: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "organization")

    @organization.setter
    def organization(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "organization", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs:
    def __init__(__self__, *,
                 display_name: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] display_name: (Updatable) The displayName of the User's manager. OPTIONAL and READ-ONLY.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            display_name=display_name,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             display_name: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'displayName' in kwargs:
            display_name = kwargs['displayName']

        if display_name is not None:
            _setter("display_name", display_name)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The displayName of the User's manager. OPTIONAL and READ-ONLY.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs:
    def __init__(__self__, *,
                 defined_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]] = None,
                 freeform_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]] = None,
                 tag_slug: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]] defined_tags: (Updatable) Oracle Cloud Infrastructure Defined Tags
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [namespace, key, value]
               * type: complex
               * idcsSearchable: true
               * required: false
               * mutability: readWrite
               * multiValued: true
               * returned: default
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]] freeform_tags: (Updatable) Oracle Cloud Infrastructure Freeform Tags
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [key, value]
               * idcsSearchable: true
               * type: complex
               * required: false
               * mutability: readWrite
               * returned: default
               * multiValued: true
        :param pulumi.Input[str] tag_slug: (Updatable) Oracle Cloud Infrastructure Tag slug
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * type: binary
               * mutability: readOnly
               * returned: request
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            defined_tags=defined_tags,
            freeform_tags=freeform_tags,
            tag_slug=tag_slug,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             defined_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]] = None,
             freeform_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]] = None,
             tag_slug: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'definedTags' in kwargs:
            defined_tags = kwargs['definedTags']
        if 'freeformTags' in kwargs:
            freeform_tags = kwargs['freeformTags']
        if 'tagSlug' in kwargs:
            tag_slug = kwargs['tagSlug']

        if defined_tags is not None:
            _setter("defined_tags", defined_tags)
        if freeform_tags is not None:
            _setter("freeform_tags", freeform_tags)
        if tag_slug is not None:
            _setter("tag_slug", tag_slug)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]]:
        """
        (Updatable) Oracle Cloud Infrastructure Defined Tags

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsCompositeKey: [namespace, key, value]
        * type: complex
        * idcsSearchable: true
        * required: false
        * mutability: readWrite
        * multiValued: true
        * returned: default
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs']]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]]:
        """
        (Updatable) Oracle Cloud Infrastructure Freeform Tags

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsCompositeKey: [key, value]
        * idcsSearchable: true
        * type: complex
        * required: false
        * mutability: readWrite
        * returned: default
        * multiValued: true
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs']]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="tagSlug")
    def tag_slug(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag slug

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * type: binary
        * mutability: readOnly
        * returned: request
        """
        return pulumi.get(self, "tag_slug")

    @tag_slug.setter
    def tag_slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tag_slug", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 namespace: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) The user's API key value.
               
               **Added In:** 2106240046
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] namespace: (Updatable) Oracle Cloud Infrastructure Tag namespace
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * caseExact: false
               * type: string
               * required: true
               * mutability: readWrite
               * returned: default
               * idcsSearchable: true
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            namespace=namespace,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             namespace: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("namespace", namespace)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) The user's API key value.

        **Added In:** 2106240046

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def namespace(self) -> pulumi.Input[str]:
        """
        (Updatable) Oracle Cloud Infrastructure Tag namespace

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * caseExact: false
        * type: string
        * required: true
        * mutability: readWrite
        * returned: default
        * idcsSearchable: true
        * uniqueness: none
        """
        return pulumi.get(self, "namespace")

    @namespace.setter
    def namespace(self, value: pulumi.Input[str]):
        pulumi.set(self, "namespace", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: (Updatable) The user's API key value.
               
               **Added In:** 2106240046
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        (Updatable) The user's API key value.

        **Added In:** 2106240046

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserArgs:
    def __init__(__self__, *,
                 risk_level: Optional[pulumi.Input[str]] = None,
                 risk_scores: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs']]]] = None):
        """
        :param pulumi.Input[str] risk_level: (Updatable) Risk Level
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs']]] risk_scores: (Updatable) The risk score pertaining to the user.
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCompositeKey: [value]
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            risk_level=risk_level,
            risk_scores=risk_scores,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             risk_level: Optional[pulumi.Input[str]] = None,
             risk_scores: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'riskLevel' in kwargs:
            risk_level = kwargs['riskLevel']
        if 'riskScores' in kwargs:
            risk_scores = kwargs['riskScores']

        if risk_level is not None:
            _setter("risk_level", risk_level)
        if risk_scores is not None:
            _setter("risk_scores", risk_scores)

    @property
    @pulumi.getter(name="riskLevel")
    def risk_level(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Risk Level

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "risk_level")

    @risk_level.setter
    def risk_level(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "risk_level", value)

    @property
    @pulumi.getter(name="riskScores")
    def risk_scores(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs']]]]:
        """
        (Updatable) The risk score pertaining to the user.

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCompositeKey: [value]
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "risk_scores")

    @risk_scores.setter
    def risk_scores(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs']]]]):
        pulumi.set(self, "risk_scores", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs:
    def __init__(__self__, *,
                 last_update_timestamp: pulumi.Input[str],
                 risk_level: pulumi.Input[str],
                 score: pulumi.Input[int],
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None,
                 source: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] last_update_timestamp: (Updatable) Last update timestamp for the risk score
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: always
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] risk_level: (Updatable) Risk Level
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] score: (Updatable) Risk Score value
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: always
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] source: (Updatable) Risk Provider Profile Source
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] status: (Updatable) A supplemental status indicating the reason why a user is disabled
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            last_update_timestamp=last_update_timestamp,
            risk_level=risk_level,
            score=score,
            value=value,
            ref=ref,
            source=source,
            status=status,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             last_update_timestamp: pulumi.Input[str],
             risk_level: pulumi.Input[str],
             score: pulumi.Input[int],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             source: Optional[pulumi.Input[str]] = None,
             status: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastUpdateTimestamp' in kwargs:
            last_update_timestamp = kwargs['lastUpdateTimestamp']
        if 'riskLevel' in kwargs:
            risk_level = kwargs['riskLevel']

        _setter("last_update_timestamp", last_update_timestamp)
        _setter("risk_level", risk_level)
        _setter("score", score)
        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)
        if source is not None:
            _setter("source", source)
        if status is not None:
            _setter("status", status)

    @property
    @pulumi.getter(name="lastUpdateTimestamp")
    def last_update_timestamp(self) -> pulumi.Input[str]:
        """
        (Updatable) Last update timestamp for the risk score

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: always
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_update_timestamp")

    @last_update_timestamp.setter
    def last_update_timestamp(self, value: pulumi.Input[str]):
        pulumi.set(self, "last_update_timestamp", value)

    @property
    @pulumi.getter(name="riskLevel")
    def risk_level(self) -> pulumi.Input[str]:
        """
        (Updatable) Risk Level

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "risk_level")

    @risk_level.setter
    def risk_level(self, value: pulumi.Input[str]):
        pulumi.set(self, "risk_level", value)

    @property
    @pulumi.getter
    def score(self) -> pulumi.Input[int]:
        """
        (Updatable) Risk Score value

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: always
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "score")

    @score.setter
    def score(self, value: pulumi.Input[int]):
        pulumi.set(self, "score", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def source(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Risk Provider Profile Source

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "source")

    @source.setter
    def source(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A supplemental status indicating the reason why a user is disabled

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserArgs:
    def __init__(__self__, *,
                 can_use_api_keys: Optional[pulumi.Input[bool]] = None,
                 can_use_auth_tokens: Optional[pulumi.Input[bool]] = None,
                 can_use_console: Optional[pulumi.Input[bool]] = None,
                 can_use_console_password: Optional[pulumi.Input[bool]] = None,
                 can_use_customer_secret_keys: Optional[pulumi.Input[bool]] = None,
                 can_use_db_credentials: Optional[pulumi.Input[bool]] = None,
                 can_use_oauth2client_credentials: Optional[pulumi.Input[bool]] = None,
                 can_use_smtp_credentials: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] can_use_api_keys: (Updatable) Indicates whether a user can use API keys.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] can_use_auth_tokens: (Updatable) Indicates whether a user can use Auth tokens.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] can_use_console: (Updatable) Specifies whether user can access the Console.
               
               **Added In:** 2206280902
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] can_use_console_password: (Updatable) Indicates whether a user can use Console passwords.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] can_use_customer_secret_keys: (Updatable) Indicates whether a user can use customer secret keys.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] can_use_db_credentials: (Updatable) Indicates whether a user can use database credentials.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] can_use_oauth2client_credentials: (Updatable) Indicates whether a user can use OAuth2 client credentials.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] can_use_smtp_credentials: (Updatable) Indicates whether a user can use SMTP credentials.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            can_use_api_keys=can_use_api_keys,
            can_use_auth_tokens=can_use_auth_tokens,
            can_use_console=can_use_console,
            can_use_console_password=can_use_console_password,
            can_use_customer_secret_keys=can_use_customer_secret_keys,
            can_use_db_credentials=can_use_db_credentials,
            can_use_oauth2client_credentials=can_use_oauth2client_credentials,
            can_use_smtp_credentials=can_use_smtp_credentials,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             can_use_api_keys: Optional[pulumi.Input[bool]] = None,
             can_use_auth_tokens: Optional[pulumi.Input[bool]] = None,
             can_use_console: Optional[pulumi.Input[bool]] = None,
             can_use_console_password: Optional[pulumi.Input[bool]] = None,
             can_use_customer_secret_keys: Optional[pulumi.Input[bool]] = None,
             can_use_db_credentials: Optional[pulumi.Input[bool]] = None,
             can_use_oauth2client_credentials: Optional[pulumi.Input[bool]] = None,
             can_use_smtp_credentials: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'canUseApiKeys' in kwargs:
            can_use_api_keys = kwargs['canUseApiKeys']
        if 'canUseAuthTokens' in kwargs:
            can_use_auth_tokens = kwargs['canUseAuthTokens']
        if 'canUseConsole' in kwargs:
            can_use_console = kwargs['canUseConsole']
        if 'canUseConsolePassword' in kwargs:
            can_use_console_password = kwargs['canUseConsolePassword']
        if 'canUseCustomerSecretKeys' in kwargs:
            can_use_customer_secret_keys = kwargs['canUseCustomerSecretKeys']
        if 'canUseDbCredentials' in kwargs:
            can_use_db_credentials = kwargs['canUseDbCredentials']
        if 'canUseOauth2clientCredentials' in kwargs:
            can_use_oauth2client_credentials = kwargs['canUseOauth2clientCredentials']
        if 'canUseSmtpCredentials' in kwargs:
            can_use_smtp_credentials = kwargs['canUseSmtpCredentials']

        if can_use_api_keys is not None:
            _setter("can_use_api_keys", can_use_api_keys)
        if can_use_auth_tokens is not None:
            _setter("can_use_auth_tokens", can_use_auth_tokens)
        if can_use_console is not None:
            _setter("can_use_console", can_use_console)
        if can_use_console_password is not None:
            _setter("can_use_console_password", can_use_console_password)
        if can_use_customer_secret_keys is not None:
            _setter("can_use_customer_secret_keys", can_use_customer_secret_keys)
        if can_use_db_credentials is not None:
            _setter("can_use_db_credentials", can_use_db_credentials)
        if can_use_oauth2client_credentials is not None:
            _setter("can_use_oauth2client_credentials", can_use_oauth2client_credentials)
        if can_use_smtp_credentials is not None:
            _setter("can_use_smtp_credentials", can_use_smtp_credentials)

    @property
    @pulumi.getter(name="canUseApiKeys")
    def can_use_api_keys(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether a user can use API keys.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "can_use_api_keys")

    @can_use_api_keys.setter
    def can_use_api_keys(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_api_keys", value)

    @property
    @pulumi.getter(name="canUseAuthTokens")
    def can_use_auth_tokens(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether a user can use Auth tokens.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "can_use_auth_tokens")

    @can_use_auth_tokens.setter
    def can_use_auth_tokens(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_auth_tokens", value)

    @property
    @pulumi.getter(name="canUseConsole")
    def can_use_console(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Specifies whether user can access the Console.

        **Added In:** 2206280902

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "can_use_console")

    @can_use_console.setter
    def can_use_console(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_console", value)

    @property
    @pulumi.getter(name="canUseConsolePassword")
    def can_use_console_password(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether a user can use Console passwords.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "can_use_console_password")

    @can_use_console_password.setter
    def can_use_console_password(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_console_password", value)

    @property
    @pulumi.getter(name="canUseCustomerSecretKeys")
    def can_use_customer_secret_keys(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether a user can use customer secret keys.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "can_use_customer_secret_keys")

    @can_use_customer_secret_keys.setter
    def can_use_customer_secret_keys(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_customer_secret_keys", value)

    @property
    @pulumi.getter(name="canUseDbCredentials")
    def can_use_db_credentials(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether a user can use database credentials.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "can_use_db_credentials")

    @can_use_db_credentials.setter
    def can_use_db_credentials(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_db_credentials", value)

    @property
    @pulumi.getter(name="canUseOauth2clientCredentials")
    def can_use_oauth2client_credentials(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether a user can use OAuth2 client credentials.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "can_use_oauth2client_credentials")

    @can_use_oauth2client_credentials.setter
    def can_use_oauth2client_credentials(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_oauth2client_credentials", value)

    @property
    @pulumi.getter(name="canUseSmtpCredentials")
    def can_use_smtp_credentials(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether a user can use SMTP credentials.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "can_use_smtp_credentials")

    @can_use_smtp_credentials.setter
    def can_use_smtp_credentials(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_smtp_credentials", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs:
    def __init__(__self__, *,
                 db_login_attempts: Optional[pulumi.Input[int]] = None,
                 db_user_name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[int] db_login_attempts: (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.
               
               **Added In:** 2102181953
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] db_user_name: (Updatable) The database username.
               
               **Added In:** 2102181953
               
               **SCIM++ Properties:**
               * multiValued: false
               * mutability: readWrite
               * required: false
               * type: string
               * returned: request
               * caseExact: false
               * uniqueness: none
               * idcsSearchable: true
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            db_login_attempts=db_login_attempts,
            db_user_name=db_user_name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             db_login_attempts: Optional[pulumi.Input[int]] = None,
             db_user_name: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'dbLoginAttempts' in kwargs:
            db_login_attempts = kwargs['dbLoginAttempts']
        if 'dbUserName' in kwargs:
            db_user_name = kwargs['dbUserName']

        if db_login_attempts is not None:
            _setter("db_login_attempts", db_login_attempts)
        if db_user_name is not None:
            _setter("db_user_name", db_user_name)

    @property
    @pulumi.getter(name="dbLoginAttempts")
    def db_login_attempts(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.

        **Added In:** 2102181953

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "db_login_attempts")

    @db_login_attempts.setter
    def db_login_attempts(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "db_login_attempts", value)

    @property
    @pulumi.getter(name="dbUserName")
    def db_user_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The database username.

        **Added In:** 2102181953

        **SCIM++ Properties:**
        * multiValued: false
        * mutability: readWrite
        * required: false
        * type: string
        * returned: request
        * caseExact: false
        * uniqueness: none
        * idcsSearchable: true
        """
        return pulumi.get(self, "db_user_name")

    @db_user_name.setter
    def db_user_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_user_name", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs:
    def __init__(__self__, *,
                 db_global_roles: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 domain_level_schema: Optional[pulumi.Input[str]] = None,
                 instance_level_schema: Optional[pulumi.Input[str]] = None,
                 is_db_user: Optional[pulumi.Input[bool]] = None,
                 password_verifiers: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs']]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input[str]]] db_global_roles: (Updatable) DB global roles to which the user is granted access.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * idcsSensitive: none
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] domain_level_schema: (Updatable) DB domain level schema to which the user is granted access.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * idcsSensitive: none
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] instance_level_schema: (Updatable) DB instance level schema to which the user is granted access.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * idcsSensitive: none
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] is_db_user: (Updatable) If true, indicates this is a database user.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs']]] password_verifiers: (Updatable) Password Verifiers for DB User.
               
               **Added In:** 18.2.2
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [type]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            db_global_roles=db_global_roles,
            domain_level_schema=domain_level_schema,
            instance_level_schema=instance_level_schema,
            is_db_user=is_db_user,
            password_verifiers=password_verifiers,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             db_global_roles: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             domain_level_schema: Optional[pulumi.Input[str]] = None,
             instance_level_schema: Optional[pulumi.Input[str]] = None,
             is_db_user: Optional[pulumi.Input[bool]] = None,
             password_verifiers: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'dbGlobalRoles' in kwargs:
            db_global_roles = kwargs['dbGlobalRoles']
        if 'domainLevelSchema' in kwargs:
            domain_level_schema = kwargs['domainLevelSchema']
        if 'instanceLevelSchema' in kwargs:
            instance_level_schema = kwargs['instanceLevelSchema']
        if 'isDbUser' in kwargs:
            is_db_user = kwargs['isDbUser']
        if 'passwordVerifiers' in kwargs:
            password_verifiers = kwargs['passwordVerifiers']

        if db_global_roles is not None:
            _setter("db_global_roles", db_global_roles)
        if domain_level_schema is not None:
            _setter("domain_level_schema", domain_level_schema)
        if instance_level_schema is not None:
            _setter("instance_level_schema", instance_level_schema)
        if is_db_user is not None:
            _setter("is_db_user", is_db_user)
        if password_verifiers is not None:
            _setter("password_verifiers", password_verifiers)

    @property
    @pulumi.getter(name="dbGlobalRoles")
    def db_global_roles(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) DB global roles to which the user is granted access.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * idcsSensitive: none
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "db_global_roles")

    @db_global_roles.setter
    def db_global_roles(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "db_global_roles", value)

    @property
    @pulumi.getter(name="domainLevelSchema")
    def domain_level_schema(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) DB domain level schema to which the user is granted access.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * idcsSensitive: none
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "domain_level_schema")

    @domain_level_schema.setter
    def domain_level_schema(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "domain_level_schema", value)

    @property
    @pulumi.getter(name="instanceLevelSchema")
    def instance_level_schema(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) DB instance level schema to which the user is granted access.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * idcsSensitive: none
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "instance_level_schema")

    @instance_level_schema.setter
    def instance_level_schema(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_level_schema", value)

    @property
    @pulumi.getter(name="isDbUser")
    def is_db_user(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, indicates this is a database user.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_db_user")

    @is_db_user.setter
    def is_db_user(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_db_user", value)

    @property
    @pulumi.getter(name="passwordVerifiers")
    def password_verifiers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs']]]]:
        """
        (Updatable) Password Verifiers for DB User.

        **Added In:** 18.2.2

        **SCIM++ Properties:**
        * idcsCompositeKey: [type]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "password_verifiers")

    @password_verifiers.setter
    def password_verifiers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs']]]]):
        pulumi.set(self, "password_verifiers", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserArgs:
    def __init__(__self__, *,
                 realm_users: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUserArgs']]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUserArgs']]] realm_users: (Updatable) A list of kerberos realm users for an Oracle Identity Cloud Service User
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            realm_users=realm_users,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             realm_users: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUserArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'realmUsers' in kwargs:
            realm_users = kwargs['realmUsers']

        if realm_users is not None:
            _setter("realm_users", realm_users)

    @property
    @pulumi.getter(name="realmUsers")
    def realm_users(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUserArgs']]]]:
        """
        (Updatable) A list of kerberos realm users for an Oracle Identity Cloud Service User

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "realm_users")

    @realm_users.setter
    def realm_users(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUserArgs']]]]):
        pulumi.set(self, "realm_users", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUserArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 principal_name: Optional[pulumi.Input[str]] = None,
                 realm_name: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] principal_name: (Updatable) Principal Name of the KerberosRealmUser associated with the Oracle Identity Cloud Service User.
               
               **SCIM++ Properties:**
               * idcsPii: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] realm_name: (Updatable) Realm Name for the KerberosRealmUser associated with the Oracle Identity Cloud Service User.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            principal_name=principal_name,
            realm_name=realm_name,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             principal_name: Optional[pulumi.Input[str]] = None,
             realm_name: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'principalName' in kwargs:
            principal_name = kwargs['principalName']
        if 'realmName' in kwargs:
            realm_name = kwargs['realmName']

        _setter("value", value)
        if principal_name is not None:
            _setter("principal_name", principal_name)
        if realm_name is not None:
            _setter("realm_name", realm_name)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="principalName")
    def principal_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Principal Name of the KerberosRealmUser associated with the Oracle Identity Cloud Service User.

        **SCIM++ Properties:**
        * idcsPii: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "principal_name")

    @principal_name.setter
    def principal_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "principal_name", value)

    @property
    @pulumi.getter(name="realmName")
    def realm_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Realm Name for the KerberosRealmUser associated with the Oracle Identity Cloud Service User.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "realm_name")

    @realm_name.setter
    def realm_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "realm_name", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserArgs:
    def __init__(__self__, *,
                 bypass_codes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodeArgs']]]] = None,
                 devices: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs']]]] = None,
                 login_attempts: Optional[pulumi.Input[int]] = None,
                 mfa_enabled_on: Optional[pulumi.Input[str]] = None,
                 mfa_ignored_apps: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 mfa_status: Optional[pulumi.Input[str]] = None,
                 preferred_authentication_factor: Optional[pulumi.Input[str]] = None,
                 preferred_authentication_method: Optional[pulumi.Input[str]] = None,
                 preferred_device: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs']] = None,
                 preferred_third_party_vendor: Optional[pulumi.Input[str]] = None,
                 trusted_user_agents: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentArgs']]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodeArgs']]] bypass_codes: (Updatable) A list of bypass codes that belongs to the user.
               
               **Added In:** 18.3.6
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs']]] devices: (Updatable) A list of devices enrolled by the user.
               
               **Added In:** 18.3.6
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[int] login_attempts: (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * idcsAllowUpdatesInReadOnlyMode: true
               * multiValued: false
               * mutability: readOnly
               * idcsRequiresWriteForAccessFlows: true
               * idcsRequiresImmediateReadAfterWriteForAccessFlows: true
               * required: false
               * returned: request
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] mfa_enabled_on: (Updatable) The date when the user enrolled in multi factor authentication. This will be set to null, when the user resets their factors.
               
               **Added In:** 18.3.6
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input[str]]] mfa_ignored_apps: (Updatable) User MFA Ignored Apps Identifiers
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] mfa_status: (Updatable) The user opted for MFA.
               
               **Added In:** 18.3.6
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] preferred_authentication_factor: (Updatable) The preferred authentication factor type.
               
               **Added In:** 18.3.6
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] preferred_authentication_method: (Updatable) The preferred authentication method.
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs'] preferred_device: (Updatable) The user's preferred device.
               
               **Added In:** 18.3.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] preferred_third_party_vendor: (Updatable) The preferred third-party vendor name.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentArgs']]] trusted_user_agents: (Updatable) A list of trusted User Agents owned by this user. Multi-Factored Authentication uses Trusted User Agents to authenticate users.  A User Agent is software application that a user uses to issue requests. For example, a User Agent could be a particular browser (possibly one of several executing on a desktop or laptop) or a particular mobile application (again, oneof several executing on a particular mobile device). A User Agent is trusted once the Multi-Factor Authentication has verified it in some way.
               
               **Added In:** 18.3.6
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            bypass_codes=bypass_codes,
            devices=devices,
            login_attempts=login_attempts,
            mfa_enabled_on=mfa_enabled_on,
            mfa_ignored_apps=mfa_ignored_apps,
            mfa_status=mfa_status,
            preferred_authentication_factor=preferred_authentication_factor,
            preferred_authentication_method=preferred_authentication_method,
            preferred_device=preferred_device,
            preferred_third_party_vendor=preferred_third_party_vendor,
            trusted_user_agents=trusted_user_agents,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             bypass_codes: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodeArgs']]]] = None,
             devices: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs']]]] = None,
             login_attempts: Optional[pulumi.Input[int]] = None,
             mfa_enabled_on: Optional[pulumi.Input[str]] = None,
             mfa_ignored_apps: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             mfa_status: Optional[pulumi.Input[str]] = None,
             preferred_authentication_factor: Optional[pulumi.Input[str]] = None,
             preferred_authentication_method: Optional[pulumi.Input[str]] = None,
             preferred_device: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs']] = None,
             preferred_third_party_vendor: Optional[pulumi.Input[str]] = None,
             trusted_user_agents: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'bypassCodes' in kwargs:
            bypass_codes = kwargs['bypassCodes']
        if 'loginAttempts' in kwargs:
            login_attempts = kwargs['loginAttempts']
        if 'mfaEnabledOn' in kwargs:
            mfa_enabled_on = kwargs['mfaEnabledOn']
        if 'mfaIgnoredApps' in kwargs:
            mfa_ignored_apps = kwargs['mfaIgnoredApps']
        if 'mfaStatus' in kwargs:
            mfa_status = kwargs['mfaStatus']
        if 'preferredAuthenticationFactor' in kwargs:
            preferred_authentication_factor = kwargs['preferredAuthenticationFactor']
        if 'preferredAuthenticationMethod' in kwargs:
            preferred_authentication_method = kwargs['preferredAuthenticationMethod']
        if 'preferredDevice' in kwargs:
            preferred_device = kwargs['preferredDevice']
        if 'preferredThirdPartyVendor' in kwargs:
            preferred_third_party_vendor = kwargs['preferredThirdPartyVendor']
        if 'trustedUserAgents' in kwargs:
            trusted_user_agents = kwargs['trustedUserAgents']

        if bypass_codes is not None:
            _setter("bypass_codes", bypass_codes)
        if devices is not None:
            _setter("devices", devices)
        if login_attempts is not None:
            _setter("login_attempts", login_attempts)
        if mfa_enabled_on is not None:
            _setter("mfa_enabled_on", mfa_enabled_on)
        if mfa_ignored_apps is not None:
            _setter("mfa_ignored_apps", mfa_ignored_apps)
        if mfa_status is not None:
            _setter("mfa_status", mfa_status)
        if preferred_authentication_factor is not None:
            _setter("preferred_authentication_factor", preferred_authentication_factor)
        if preferred_authentication_method is not None:
            _setter("preferred_authentication_method", preferred_authentication_method)
        if preferred_device is not None:
            _setter("preferred_device", preferred_device)
        if preferred_third_party_vendor is not None:
            _setter("preferred_third_party_vendor", preferred_third_party_vendor)
        if trusted_user_agents is not None:
            _setter("trusted_user_agents", trusted_user_agents)

    @property
    @pulumi.getter(name="bypassCodes")
    def bypass_codes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodeArgs']]]]:
        """
        (Updatable) A list of bypass codes that belongs to the user.

        **Added In:** 18.3.6

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "bypass_codes")

    @bypass_codes.setter
    def bypass_codes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodeArgs']]]]):
        pulumi.set(self, "bypass_codes", value)

    @property
    @pulumi.getter
    def devices(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs']]]]:
        """
        (Updatable) A list of devices enrolled by the user.

        **Added In:** 18.3.6

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "devices")

    @devices.setter
    def devices(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs']]]]):
        pulumi.set(self, "devices", value)

    @property
    @pulumi.getter(name="loginAttempts")
    def login_attempts(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * idcsAllowUpdatesInReadOnlyMode: true
        * multiValued: false
        * mutability: readOnly
        * idcsRequiresWriteForAccessFlows: true
        * idcsRequiresImmediateReadAfterWriteForAccessFlows: true
        * required: false
        * returned: request
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "login_attempts")

    @login_attempts.setter
    def login_attempts(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "login_attempts", value)

    @property
    @pulumi.getter(name="mfaEnabledOn")
    def mfa_enabled_on(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The date when the user enrolled in multi factor authentication. This will be set to null, when the user resets their factors.

        **Added In:** 18.3.6

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "mfa_enabled_on")

    @mfa_enabled_on.setter
    def mfa_enabled_on(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mfa_enabled_on", value)

    @property
    @pulumi.getter(name="mfaIgnoredApps")
    def mfa_ignored_apps(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        (Updatable) User MFA Ignored Apps Identifiers

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "mfa_ignored_apps")

    @mfa_ignored_apps.setter
    def mfa_ignored_apps(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "mfa_ignored_apps", value)

    @property
    @pulumi.getter(name="mfaStatus")
    def mfa_status(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user opted for MFA.

        **Added In:** 18.3.6

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "mfa_status")

    @mfa_status.setter
    def mfa_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mfa_status", value)

    @property
    @pulumi.getter(name="preferredAuthenticationFactor")
    def preferred_authentication_factor(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The preferred authentication factor type.

        **Added In:** 18.3.6

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "preferred_authentication_factor")

    @preferred_authentication_factor.setter
    def preferred_authentication_factor(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "preferred_authentication_factor", value)

    @property
    @pulumi.getter(name="preferredAuthenticationMethod")
    def preferred_authentication_method(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The preferred authentication method.

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "preferred_authentication_method")

    @preferred_authentication_method.setter
    def preferred_authentication_method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "preferred_authentication_method", value)

    @property
    @pulumi.getter(name="preferredDevice")
    def preferred_device(self) -> Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs']]:
        """
        (Updatable) The user's preferred device.

        **Added In:** 18.3.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "preferred_device")

    @preferred_device.setter
    def preferred_device(self, value: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs']]):
        pulumi.set(self, "preferred_device", value)

    @property
    @pulumi.getter(name="preferredThirdPartyVendor")
    def preferred_third_party_vendor(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The preferred third-party vendor name.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "preferred_third_party_vendor")

    @preferred_third_party_vendor.setter
    def preferred_third_party_vendor(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "preferred_third_party_vendor", value)

    @property
    @pulumi.getter(name="trustedUserAgents")
    def trusted_user_agents(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentArgs']]]]:
        """
        (Updatable) A list of trusted User Agents owned by this user. Multi-Factored Authentication uses Trusted User Agents to authenticate users.  A User Agent is software application that a user uses to issue requests. For example, a User Agent could be a particular browser (possibly one of several executing on a desktop or laptop) or a particular mobile application (again, oneof several executing on a particular mobile device). A User Agent is trusted once the Multi-Factor Authentication has verified it in some way.

        **Added In:** 18.3.6

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "trusted_user_agents")

    @trusted_user_agents.setter
    def trusted_user_agents(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentArgs']]]]):
        pulumi.set(self, "trusted_user_agents", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodeArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodeArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 authentication_method: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 factor_status: Optional[pulumi.Input[str]] = None,
                 factor_type: Optional[pulumi.Input[str]] = None,
                 last_sync_time: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 third_party_vendor_name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] authentication_method: (Updatable) The authentication method.
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] factor_status: (Updatable) The device authentication factor status.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] factor_type: (Updatable) Authentication Factor Type
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] last_sync_time: (Updatable) The last sync time for device.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] status: (Updatable) A supplemental status indicating the reason why a user is disabled
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] third_party_vendor_name: (Updatable) The third-party factor vendor name.
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            authentication_method=authentication_method,
            display=display,
            factor_status=factor_status,
            factor_type=factor_type,
            last_sync_time=last_sync_time,
            ref=ref,
            status=status,
            third_party_vendor_name=third_party_vendor_name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             authentication_method: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             factor_status: Optional[pulumi.Input[str]] = None,
             factor_type: Optional[pulumi.Input[str]] = None,
             last_sync_time: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             status: Optional[pulumi.Input[str]] = None,
             third_party_vendor_name: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'authenticationMethod' in kwargs:
            authentication_method = kwargs['authenticationMethod']
        if 'factorStatus' in kwargs:
            factor_status = kwargs['factorStatus']
        if 'factorType' in kwargs:
            factor_type = kwargs['factorType']
        if 'lastSyncTime' in kwargs:
            last_sync_time = kwargs['lastSyncTime']
        if 'thirdPartyVendorName' in kwargs:
            third_party_vendor_name = kwargs['thirdPartyVendorName']

        _setter("value", value)
        if authentication_method is not None:
            _setter("authentication_method", authentication_method)
        if display is not None:
            _setter("display", display)
        if factor_status is not None:
            _setter("factor_status", factor_status)
        if factor_type is not None:
            _setter("factor_type", factor_type)
        if last_sync_time is not None:
            _setter("last_sync_time", last_sync_time)
        if ref is not None:
            _setter("ref", ref)
        if status is not None:
            _setter("status", status)
        if third_party_vendor_name is not None:
            _setter("third_party_vendor_name", third_party_vendor_name)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="authenticationMethod")
    def authentication_method(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The authentication method.

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "authentication_method")

    @authentication_method.setter
    def authentication_method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_method", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter(name="factorStatus")
    def factor_status(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The device authentication factor status.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "factor_status")

    @factor_status.setter
    def factor_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "factor_status", value)

    @property
    @pulumi.getter(name="factorType")
    def factor_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Authentication Factor Type

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "factor_type")

    @factor_type.setter
    def factor_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "factor_type", value)

    @property
    @pulumi.getter(name="lastSyncTime")
    def last_sync_time(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The last sync time for device.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_sync_time")

    @last_sync_time.setter
    def last_sync_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_sync_time", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A supplemental status indicating the reason why a user is disabled

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="thirdPartyVendorName")
    def third_party_vendor_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The third-party factor vendor name.

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "third_party_vendor_name")

    @third_party_vendor_name.setter
    def third_party_vendor_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "third_party_vendor_name", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArgs:
    def __init__(__self__, *,
                 applicable_password_policy: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicyArgs']] = None,
                 cant_change: Optional[pulumi.Input[bool]] = None,
                 cant_expire: Optional[pulumi.Input[bool]] = None,
                 expired: Optional[pulumi.Input[bool]] = None,
                 last_failed_validation_date: Optional[pulumi.Input[str]] = None,
                 last_successful_set_date: Optional[pulumi.Input[str]] = None,
                 last_successful_validation_date: Optional[pulumi.Input[str]] = None,
                 must_change: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicyArgs'] applicable_password_policy: (Updatable) Applicable Password Policy
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[bool] cant_change: (Updatable) Indicates that the current password MAY NOT be changed and all other password expiry settings SHALL be ignored
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] cant_expire: (Updatable) Indicates that the password expiry policy will not be applied for the current Resource
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] expired: (Updatable) Indicates whether the user password is expired. If this value is false, password expiry is still evaluated during user login.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] last_failed_validation_date: (Updatable) A DateTime that specifies the date and time when last failed password validation was set
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_successful_set_date: (Updatable) A DateTime that specifies the date and time when the current password was set
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_successful_validation_date: (Updatable) A DateTime that specifies the date and time when last successful password validation was set
               
               **Added In:** 2011192329
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[bool] must_change: (Updatable) Indicates that the subject password value MUST change on next login. If not changed, typically the account is locked. The value may be set indirectly when the subject's current password expires or directly set by an administrator.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            applicable_password_policy=applicable_password_policy,
            cant_change=cant_change,
            cant_expire=cant_expire,
            expired=expired,
            last_failed_validation_date=last_failed_validation_date,
            last_successful_set_date=last_successful_set_date,
            last_successful_validation_date=last_successful_validation_date,
            must_change=must_change,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             applicable_password_policy: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicyArgs']] = None,
             cant_change: Optional[pulumi.Input[bool]] = None,
             cant_expire: Optional[pulumi.Input[bool]] = None,
             expired: Optional[pulumi.Input[bool]] = None,
             last_failed_validation_date: Optional[pulumi.Input[str]] = None,
             last_successful_set_date: Optional[pulumi.Input[str]] = None,
             last_successful_validation_date: Optional[pulumi.Input[str]] = None,
             must_change: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'applicablePasswordPolicy' in kwargs:
            applicable_password_policy = kwargs['applicablePasswordPolicy']
        if 'cantChange' in kwargs:
            cant_change = kwargs['cantChange']
        if 'cantExpire' in kwargs:
            cant_expire = kwargs['cantExpire']
        if 'lastFailedValidationDate' in kwargs:
            last_failed_validation_date = kwargs['lastFailedValidationDate']
        if 'lastSuccessfulSetDate' in kwargs:
            last_successful_set_date = kwargs['lastSuccessfulSetDate']
        if 'lastSuccessfulValidationDate' in kwargs:
            last_successful_validation_date = kwargs['lastSuccessfulValidationDate']
        if 'mustChange' in kwargs:
            must_change = kwargs['mustChange']

        if applicable_password_policy is not None:
            _setter("applicable_password_policy", applicable_password_policy)
        if cant_change is not None:
            _setter("cant_change", cant_change)
        if cant_expire is not None:
            _setter("cant_expire", cant_expire)
        if expired is not None:
            _setter("expired", expired)
        if last_failed_validation_date is not None:
            _setter("last_failed_validation_date", last_failed_validation_date)
        if last_successful_set_date is not None:
            _setter("last_successful_set_date", last_successful_set_date)
        if last_successful_validation_date is not None:
            _setter("last_successful_validation_date", last_successful_validation_date)
        if must_change is not None:
            _setter("must_change", must_change)

    @property
    @pulumi.getter(name="applicablePasswordPolicy")
    def applicable_password_policy(self) -> Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicyArgs']]:
        """
        (Updatable) Applicable Password Policy

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "applicable_password_policy")

    @applicable_password_policy.setter
    def applicable_password_policy(self, value: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicyArgs']]):
        pulumi.set(self, "applicable_password_policy", value)

    @property
    @pulumi.getter(name="cantChange")
    def cant_change(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates that the current password MAY NOT be changed and all other password expiry settings SHALL be ignored

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "cant_change")

    @cant_change.setter
    def cant_change(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cant_change", value)

    @property
    @pulumi.getter(name="cantExpire")
    def cant_expire(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates that the password expiry policy will not be applied for the current Resource

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "cant_expire")

    @cant_expire.setter
    def cant_expire(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cant_expire", value)

    @property
    @pulumi.getter
    def expired(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether the user password is expired. If this value is false, password expiry is still evaluated during user login.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "expired")

    @expired.setter
    def expired(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "expired", value)

    @property
    @pulumi.getter(name="lastFailedValidationDate")
    def last_failed_validation_date(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A DateTime that specifies the date and time when last failed password validation was set

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_failed_validation_date")

    @last_failed_validation_date.setter
    def last_failed_validation_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_failed_validation_date", value)

    @property
    @pulumi.getter(name="lastSuccessfulSetDate")
    def last_successful_set_date(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A DateTime that specifies the date and time when the current password was set

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_successful_set_date")

    @last_successful_set_date.setter
    def last_successful_set_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_successful_set_date", value)

    @property
    @pulumi.getter(name="lastSuccessfulValidationDate")
    def last_successful_validation_date(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A DateTime that specifies the date and time when last successful password validation was set

        **Added In:** 2011192329

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_successful_validation_date")

    @last_successful_validation_date.setter
    def last_successful_validation_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_successful_validation_date", value)

    @property
    @pulumi.getter(name="mustChange")
    def must_change(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates that the subject password value MUST change on next login. If not changed, typically the account is locked. The value may be set indirectly when the subject's current password expires or directly set by an administrator.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "must_change")

    @must_change.setter
    def must_change(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "must_change", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicyArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] priority: (Updatable) PasswordPolicy priority
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            priority=priority,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             priority: Optional[pulumi.Input[int]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if priority is not None:
            _setter("priority", priority)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) PasswordPolicy priority

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserArgs:
    def __init__(__self__, *,
                 factor_identifier: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs']] = None,
                 factor_method: Optional[pulumi.Input[str]] = None,
                 factor_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs'] factor_identifier: (Updatable) Factor Identifier ID
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] factor_method: (Updatable) Authentication Factor Method
               
               **Added In:** 2009232244
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] factor_type: (Updatable) Authentication Factor Type
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            factor_identifier=factor_identifier,
            factor_method=factor_method,
            factor_type=factor_type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             factor_identifier: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs']] = None,
             factor_method: Optional[pulumi.Input[str]] = None,
             factor_type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'factorIdentifier' in kwargs:
            factor_identifier = kwargs['factorIdentifier']
        if 'factorMethod' in kwargs:
            factor_method = kwargs['factorMethod']
        if 'factorType' in kwargs:
            factor_type = kwargs['factorType']

        if factor_identifier is not None:
            _setter("factor_identifier", factor_identifier)
        if factor_method is not None:
            _setter("factor_method", factor_method)
        if factor_type is not None:
            _setter("factor_type", factor_type)

    @property
    @pulumi.getter(name="factorIdentifier")
    def factor_identifier(self) -> Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs']]:
        """
        (Updatable) Factor Identifier ID

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "factor_identifier")

    @factor_identifier.setter
    def factor_identifier(self, value: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs']]):
        pulumi.set(self, "factor_identifier", value)

    @property
    @pulumi.getter(name="factorMethod")
    def factor_method(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Authentication Factor Method

        **Added In:** 2009232244

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "factor_method")

    @factor_method.setter
    def factor_method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "factor_method", value)

    @property
    @pulumi.getter(name="factorType")
    def factor_type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Authentication Factor Type

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "factor_type")

    @factor_type.setter
    def factor_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "factor_type", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserArgs:
    def __init__(__self__, *,
                 gecos: Optional[pulumi.Input[str]] = None,
                 gid_number: Optional[pulumi.Input[int]] = None,
                 home_directory: Optional[pulumi.Input[str]] = None,
                 login_shell: Optional[pulumi.Input[str]] = None,
                 uid_number: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[str] gecos: (Updatable) General information about the POSIX account such as their real name and phone number
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] gid_number: (Updatable) Primary Group identifier of the POSIX user
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] home_directory: (Updatable) The absolute path to the home directory of the POSIX account
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] login_shell: (Updatable) The path to the login shell of the POSIX account
               
               **SCIM++ Properties:**
               * caseExact: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[int] uid_number: (Updatable) Integer uniquely identifying a user in a POSIX administrative domain
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: integer
               * uniqueness: server
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            gecos=gecos,
            gid_number=gid_number,
            home_directory=home_directory,
            login_shell=login_shell,
            uid_number=uid_number,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             gecos: Optional[pulumi.Input[str]] = None,
             gid_number: Optional[pulumi.Input[int]] = None,
             home_directory: Optional[pulumi.Input[str]] = None,
             login_shell: Optional[pulumi.Input[str]] = None,
             uid_number: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'gidNumber' in kwargs:
            gid_number = kwargs['gidNumber']
        if 'homeDirectory' in kwargs:
            home_directory = kwargs['homeDirectory']
        if 'loginShell' in kwargs:
            login_shell = kwargs['loginShell']
        if 'uidNumber' in kwargs:
            uid_number = kwargs['uidNumber']

        if gecos is not None:
            _setter("gecos", gecos)
        if gid_number is not None:
            _setter("gid_number", gid_number)
        if home_directory is not None:
            _setter("home_directory", home_directory)
        if login_shell is not None:
            _setter("login_shell", login_shell)
        if uid_number is not None:
            _setter("uid_number", uid_number)

    @property
    @pulumi.getter
    def gecos(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) General information about the POSIX account such as their real name and phone number

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "gecos")

    @gecos.setter
    def gecos(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gecos", value)

    @property
    @pulumi.getter(name="gidNumber")
    def gid_number(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Primary Group identifier of the POSIX user

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "gid_number")

    @gid_number.setter
    def gid_number(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "gid_number", value)

    @property
    @pulumi.getter(name="homeDirectory")
    def home_directory(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The absolute path to the home directory of the POSIX account

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "home_directory")

    @home_directory.setter
    def home_directory(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "home_directory", value)

    @property
    @pulumi.getter(name="loginShell")
    def login_shell(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The path to the login shell of the POSIX account

        **SCIM++ Properties:**
        * caseExact: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "login_shell")

    @login_shell.setter
    def login_shell(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "login_shell", value)

    @property
    @pulumi.getter(name="uidNumber")
    def uid_number(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Integer uniquely identifying a user in a POSIX administrative domain

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: integer
        * uniqueness: server
        """
        return pulumi.get(self, "uid_number")

    @uid_number.setter
    def uid_number(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "uid_number", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserArgs:
    def __init__(__self__, *,
                 sec_questions: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionArgs']]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionArgs']]] sec_questions: (Updatable) The schema used to mnage security question and answers provided by a user for account recovery and/or MFA. While setting up security questions, a user can also provide a hint for the answer.
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            sec_questions=sec_questions,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             sec_questions: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'secQuestions' in kwargs:
            sec_questions = kwargs['secQuestions']

        if sec_questions is not None:
            _setter("sec_questions", sec_questions)

    @property
    @pulumi.getter(name="secQuestions")
    def sec_questions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionArgs']]]]:
        """
        (Updatable) The schema used to mnage security question and answers provided by a user for account recovery and/or MFA. While setting up security questions, a user can also provide a hint for the answer.

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "sec_questions")

    @sec_questions.setter
    def sec_questions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionArgs']]]]):
        pulumi.set(self, "sec_questions", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionArgs:
    def __init__(__self__, *,
                 answer: pulumi.Input[str],
                 value: pulumi.Input[str],
                 hint_text: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] answer: (Updatable) The answer provided by a user for a security question.
               
               **SCIM++ Properties:**
               * idcsCsvAttributeName: Answer
               * idcsSearchable: false
               * idcsSensitive: hash
               * multiValued: false
               * mutability: writeOnly
               * required: true
               * returned: never
               * type: string
               * uniqueness: none
               * idcsPii: true
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] hint_text: (Updatable) The hint for an answer that's given by user when setting up a security question.
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            answer=answer,
            value=value,
            hint_text=hint_text,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             answer: pulumi.Input[str],
             value: pulumi.Input[str],
             hint_text: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'hintText' in kwargs:
            hint_text = kwargs['hintText']

        _setter("answer", answer)
        _setter("value", value)
        if hint_text is not None:
            _setter("hint_text", hint_text)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def answer(self) -> pulumi.Input[str]:
        """
        (Updatable) The answer provided by a user for a security question.

        **SCIM++ Properties:**
        * idcsCsvAttributeName: Answer
        * idcsSearchable: false
        * idcsSensitive: hash
        * multiValued: false
        * mutability: writeOnly
        * required: true
        * returned: never
        * type: string
        * uniqueness: none
        * idcsPii: true
        """
        return pulumi.get(self, "answer")

    @answer.setter
    def answer(self, value: pulumi.Input[str]):
        pulumi.set(self, "answer", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="hintText")
    def hint_text(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The hint for an answer that's given by user when setting up a security question.

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "hint_text")

    @hint_text.setter
    def hint_text(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hint_text", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs:
    def __init__(__self__, *,
                 allow_self_change: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] allow_self_change: (Updatable) If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).
               
               **Added In:** 2205182039
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: writeOnly
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            allow_self_change=allow_self_change,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             allow_self_change: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'allowSelfChange' in kwargs:
            allow_self_change = kwargs['allowSelfChange']

        if allow_self_change is not None:
            _setter("allow_self_change", allow_self_change)

    @property
    @pulumi.getter(name="allowSelfChange")
    def allow_self_change(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, allows requesting user to update themselves. If false, requesting user can't update themself (default).

        **Added In:** 2205182039

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: writeOnly
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "allow_self_change")

    @allow_self_change.setter
    def allow_self_change(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_self_change", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs:
    def __init__(__self__, *,
                 self_registration_profile: pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs'],
                 consent_granted: Optional[pulumi.Input[bool]] = None,
                 user_token: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs'] self_registration_profile: (Updatable) Self registration profile used when user is self registered.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: true
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[bool] consent_granted: (Updatable) A boolean value that indicates whether the consent is granted.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] user_token: (Updatable) User token returned if userFlowControlledByExternalClient is true
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            self_registration_profile=self_registration_profile,
            consent_granted=consent_granted,
            user_token=user_token,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             self_registration_profile: pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs'],
             consent_granted: Optional[pulumi.Input[bool]] = None,
             user_token: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'selfRegistrationProfile' in kwargs:
            self_registration_profile = kwargs['selfRegistrationProfile']
        if 'consentGranted' in kwargs:
            consent_granted = kwargs['consentGranted']
        if 'userToken' in kwargs:
            user_token = kwargs['userToken']

        _setter("self_registration_profile", self_registration_profile)
        if consent_granted is not None:
            _setter("consent_granted", consent_granted)
        if user_token is not None:
            _setter("user_token", user_token)

    @property
    @pulumi.getter(name="selfRegistrationProfile")
    def self_registration_profile(self) -> pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs']:
        """
        (Updatable) Self registration profile used when user is self registered.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: true
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "self_registration_profile")

    @self_registration_profile.setter
    def self_registration_profile(self, value: pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs']):
        pulumi.set(self, "self_registration_profile", value)

    @property
    @pulumi.getter(name="consentGranted")
    def consent_granted(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A boolean value that indicates whether the consent is granted.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "consent_granted")

    @consent_granted.setter
    def consent_granted(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "consent_granted", value)

    @property
    @pulumi.getter(name="userToken")
    def user_token(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User token returned if userFlowControlledByExternalClient is true

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "user_token")

    @user_token.setter
    def user_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_token", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserArgs:
    def __init__(__self__, *,
                 sff_auth_keys: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] sff_auth_keys: (Updatable) SFF auth keys clob
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            sff_auth_keys=sff_auth_keys,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             sff_auth_keys: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'sffAuthKeys' in kwargs:
            sff_auth_keys = kwargs['sffAuthKeys']

        if sff_auth_keys is not None:
            _setter("sff_auth_keys", sff_auth_keys)

    @property
    @pulumi.getter(name="sffAuthKeys")
    def sff_auth_keys(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) SFF auth keys clob

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "sff_auth_keys")

    @sff_auth_keys.setter
    def sff_auth_keys(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sff_auth_keys", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserArgs:
    def __init__(__self__, *,
                 social_accounts: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountArgs']]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountArgs']]] social_accounts: (Updatable) Description:
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * idcsPii: true
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            social_accounts=social_accounts,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             social_accounts: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'socialAccounts' in kwargs:
            social_accounts = kwargs['socialAccounts']

        if social_accounts is not None:
            _setter("social_accounts", social_accounts)

    @property
    @pulumi.getter(name="socialAccounts")
    def social_accounts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountArgs']]]]:
        """
        (Updatable) Description:

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * idcsPii: true
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "social_accounts")

    @social_accounts.setter
    def social_accounts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountArgs']]]]):
        pulumi.set(self, "social_accounts", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs:
    def __init__(__self__, *,
                 terms_of_use_consents: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs']]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs']]] terms_of_use_consents: (Updatable) Description:
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readWrite
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            terms_of_use_consents=terms_of_use_consents,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             terms_of_use_consents: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'termsOfUseConsents' in kwargs:
            terms_of_use_consents = kwargs['termsOfUseConsents']

        if terms_of_use_consents is not None:
            _setter("terms_of_use_consents", terms_of_use_consents)

    @property
    @pulumi.getter(name="termsOfUseConsents")
    def terms_of_use_consents(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs']]]]:
        """
        (Updatable) Description:

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readWrite
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "terms_of_use_consents")

    @terms_of_use_consents.setter
    def terms_of_use_consents(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs']]]]):
        pulumi.set(self, "terms_of_use_consents", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArgs:
    def __init__(__self__, *,
                 api_keys: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs']]]] = None,
                 auth_tokens: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs']]]] = None,
                 customer_secret_keys: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs']]]] = None,
                 db_credentials: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs']]]] = None,
                 o_auth2client_credentials: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs']]]] = None,
                 smtp_credentials: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs']]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs']]] api_keys: (Updatable) A list of API keys corresponding to user.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs']]] auth_tokens: (Updatable) A list of Auth tokens corresponding to user.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs']]] customer_secret_keys: (Updatable) A list of customer secret keys corresponding to user.
               
               **Added In:** 2102181953
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs']]] db_credentials: (Updatable) A list of database credentials corresponding to user.
               
               **Added In:** 2102181953
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs']]] o_auth2client_credentials: (Updatable) A list of OAuth2 client credentials corresponding to a user.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs']]] smtp_credentials: (Updatable) A list of SMTP credentials corresponding to user.
               
               **Added In:** 2012271618
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            api_keys=api_keys,
            auth_tokens=auth_tokens,
            customer_secret_keys=customer_secret_keys,
            db_credentials=db_credentials,
            o_auth2client_credentials=o_auth2client_credentials,
            smtp_credentials=smtp_credentials,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             api_keys: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs']]]] = None,
             auth_tokens: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs']]]] = None,
             customer_secret_keys: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs']]]] = None,
             db_credentials: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs']]]] = None,
             o_auth2client_credentials: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs']]]] = None,
             smtp_credentials: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'apiKeys' in kwargs:
            api_keys = kwargs['apiKeys']
        if 'authTokens' in kwargs:
            auth_tokens = kwargs['authTokens']
        if 'customerSecretKeys' in kwargs:
            customer_secret_keys = kwargs['customerSecretKeys']
        if 'dbCredentials' in kwargs:
            db_credentials = kwargs['dbCredentials']
        if 'oAuth2clientCredentials' in kwargs:
            o_auth2client_credentials = kwargs['oAuth2clientCredentials']
        if 'smtpCredentials' in kwargs:
            smtp_credentials = kwargs['smtpCredentials']

        if api_keys is not None:
            _setter("api_keys", api_keys)
        if auth_tokens is not None:
            _setter("auth_tokens", auth_tokens)
        if customer_secret_keys is not None:
            _setter("customer_secret_keys", customer_secret_keys)
        if db_credentials is not None:
            _setter("db_credentials", db_credentials)
        if o_auth2client_credentials is not None:
            _setter("o_auth2client_credentials", o_auth2client_credentials)
        if smtp_credentials is not None:
            _setter("smtp_credentials", smtp_credentials)

    @property
    @pulumi.getter(name="apiKeys")
    def api_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs']]]]:
        """
        (Updatable) A list of API keys corresponding to user.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "api_keys")

    @api_keys.setter
    def api_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs']]]]):
        pulumi.set(self, "api_keys", value)

    @property
    @pulumi.getter(name="authTokens")
    def auth_tokens(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs']]]]:
        """
        (Updatable) A list of Auth tokens corresponding to user.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "auth_tokens")

    @auth_tokens.setter
    def auth_tokens(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs']]]]):
        pulumi.set(self, "auth_tokens", value)

    @property
    @pulumi.getter(name="customerSecretKeys")
    def customer_secret_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs']]]]:
        """
        (Updatable) A list of customer secret keys corresponding to user.

        **Added In:** 2102181953

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "customer_secret_keys")

    @customer_secret_keys.setter
    def customer_secret_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs']]]]):
        pulumi.set(self, "customer_secret_keys", value)

    @property
    @pulumi.getter(name="dbCredentials")
    def db_credentials(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs']]]]:
        """
        (Updatable) A list of database credentials corresponding to user.

        **Added In:** 2102181953

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "db_credentials")

    @db_credentials.setter
    def db_credentials(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs']]]]):
        pulumi.set(self, "db_credentials", value)

    @property
    @pulumi.getter(name="oAuth2clientCredentials")
    def o_auth2client_credentials(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs']]]]:
        """
        (Updatable) A list of OAuth2 client credentials corresponding to a user.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "o_auth2client_credentials")

    @o_auth2client_credentials.setter
    def o_auth2client_credentials(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs']]]]):
        pulumi.set(self, "o_auth2client_credentials", value)

    @property
    @pulumi.getter(name="smtpCredentials")
    def smtp_credentials(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs']]]]:
        """
        (Updatable) A list of SMTP credentials corresponding to user.

        **Added In:** 2012271618

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "smtp_credentials")

    @smtp_credentials.setter
    def smtp_credentials(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs']]]]):
        pulumi.set(self, "smtp_credentials", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs:
    def __init__(__self__, *,
                 key: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] key: (Updatable) The user's API key value.
               
               **Added In:** 2106240046
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if key is not None:
            _setter("key", key)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The user's API key value.

        **Added In:** 2106240046

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs:
    def __init__(__self__, *,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs:
    def __init__(__self__, *,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs:
    def __init__(__self__, *,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs:
    def __init__(__self__, *,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs:
    def __init__(__self__, *,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            ocid=ocid,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserArgs:
    def __init__(__self__, *,
                 last_failed_login_date: Optional[pulumi.Input[str]] = None,
                 last_successful_login_date: Optional[pulumi.Input[str]] = None,
                 locked: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs']] = None,
                 login_attempts: Optional[pulumi.Input[int]] = None,
                 max_concurrent_sessions: Optional[pulumi.Input[int]] = None,
                 previous_successful_login_date: Optional[pulumi.Input[str]] = None,
                 recovery_attempts: Optional[pulumi.Input[int]] = None,
                 recovery_enroll_attempts: Optional[pulumi.Input[int]] = None,
                 recovery_locked: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs']] = None):
        """
        :param pulumi.Input[str] last_failed_login_date: (Updatable) The last failed login date.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * idcsAllowUpdatesInReadOnlyMode: true
               * multiValued: false
               * mutability: readOnly
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: request
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[str] last_successful_login_date: (Updatable) The last successful login date.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * idcsAllowUpdatesInReadOnlyMode: true
               * multiValued: false
               * mutability: readOnly
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: request
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs'] locked: (Updatable) A complex attribute that indicates an account is locked (blocking any new sessions).
               
               **SCIM++ Properties:**
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Locked, mapsTo:locked.on], [columnHeaderName:Locked Reason, mapsTo:locked.reason], [columnHeaderName:Locked Date, mapsTo:locked.lockDate]]
               * idcsSearchable: false
               * idcsAllowUpdatesInReadOnlyMode: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[int] login_attempts: (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * idcsAllowUpdatesInReadOnlyMode: true
               * multiValued: false
               * mutability: readOnly
               * idcsRequiresWriteForAccessFlows: true
               * idcsRequiresImmediateReadAfterWriteForAccessFlows: true
               * required: false
               * returned: request
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] max_concurrent_sessions: (Updatable) The maximum number of concurrent sessions for a user.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsMaxValue: 999
               * idcsMinValue: 1
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] previous_successful_login_date: (Updatable) The previous successful login date.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: request
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[int] recovery_attempts: (Updatable) The number of failed recovery attempts. The value is reset to 0 after a successful login.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: request
               * type: integer
               * uniqueness: none
        :param pulumi.Input[int] recovery_enroll_attempts: (Updatable) The number of failed account recovery enrollment attempts.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: integer
               * uniqueness: none
        :param pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs'] recovery_locked: (Updatable) A complex attribute that indicates a password recovery is locked (blocking any new sessions).
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            last_failed_login_date=last_failed_login_date,
            last_successful_login_date=last_successful_login_date,
            locked=locked,
            login_attempts=login_attempts,
            max_concurrent_sessions=max_concurrent_sessions,
            previous_successful_login_date=previous_successful_login_date,
            recovery_attempts=recovery_attempts,
            recovery_enroll_attempts=recovery_enroll_attempts,
            recovery_locked=recovery_locked,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             last_failed_login_date: Optional[pulumi.Input[str]] = None,
             last_successful_login_date: Optional[pulumi.Input[str]] = None,
             locked: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs']] = None,
             login_attempts: Optional[pulumi.Input[int]] = None,
             max_concurrent_sessions: Optional[pulumi.Input[int]] = None,
             previous_successful_login_date: Optional[pulumi.Input[str]] = None,
             recovery_attempts: Optional[pulumi.Input[int]] = None,
             recovery_enroll_attempts: Optional[pulumi.Input[int]] = None,
             recovery_locked: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs']] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lastFailedLoginDate' in kwargs:
            last_failed_login_date = kwargs['lastFailedLoginDate']
        if 'lastSuccessfulLoginDate' in kwargs:
            last_successful_login_date = kwargs['lastSuccessfulLoginDate']
        if 'loginAttempts' in kwargs:
            login_attempts = kwargs['loginAttempts']
        if 'maxConcurrentSessions' in kwargs:
            max_concurrent_sessions = kwargs['maxConcurrentSessions']
        if 'previousSuccessfulLoginDate' in kwargs:
            previous_successful_login_date = kwargs['previousSuccessfulLoginDate']
        if 'recoveryAttempts' in kwargs:
            recovery_attempts = kwargs['recoveryAttempts']
        if 'recoveryEnrollAttempts' in kwargs:
            recovery_enroll_attempts = kwargs['recoveryEnrollAttempts']
        if 'recoveryLocked' in kwargs:
            recovery_locked = kwargs['recoveryLocked']

        if last_failed_login_date is not None:
            _setter("last_failed_login_date", last_failed_login_date)
        if last_successful_login_date is not None:
            _setter("last_successful_login_date", last_successful_login_date)
        if locked is not None:
            _setter("locked", locked)
        if login_attempts is not None:
            _setter("login_attempts", login_attempts)
        if max_concurrent_sessions is not None:
            _setter("max_concurrent_sessions", max_concurrent_sessions)
        if previous_successful_login_date is not None:
            _setter("previous_successful_login_date", previous_successful_login_date)
        if recovery_attempts is not None:
            _setter("recovery_attempts", recovery_attempts)
        if recovery_enroll_attempts is not None:
            _setter("recovery_enroll_attempts", recovery_enroll_attempts)
        if recovery_locked is not None:
            _setter("recovery_locked", recovery_locked)

    @property
    @pulumi.getter(name="lastFailedLoginDate")
    def last_failed_login_date(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The last failed login date.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * idcsAllowUpdatesInReadOnlyMode: true
        * multiValued: false
        * mutability: readOnly
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: request
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_failed_login_date")

    @last_failed_login_date.setter
    def last_failed_login_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_failed_login_date", value)

    @property
    @pulumi.getter(name="lastSuccessfulLoginDate")
    def last_successful_login_date(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The last successful login date.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * idcsAllowUpdatesInReadOnlyMode: true
        * multiValued: false
        * mutability: readOnly
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: request
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "last_successful_login_date")

    @last_successful_login_date.setter
    def last_successful_login_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_successful_login_date", value)

    @property
    @pulumi.getter
    def locked(self) -> Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs']]:
        """
        (Updatable) A complex attribute that indicates an account is locked (blocking any new sessions).

        **SCIM++ Properties:**
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Locked, mapsTo:locked.on], [columnHeaderName:Locked Reason, mapsTo:locked.reason], [columnHeaderName:Locked Date, mapsTo:locked.lockDate]]
        * idcsSearchable: false
        * idcsAllowUpdatesInReadOnlyMode: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "locked")

    @locked.setter
    def locked(self, value: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs']]):
        pulumi.set(self, "locked", value)

    @property
    @pulumi.getter(name="loginAttempts")
    def login_attempts(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * idcsAllowUpdatesInReadOnlyMode: true
        * multiValued: false
        * mutability: readOnly
        * idcsRequiresWriteForAccessFlows: true
        * idcsRequiresImmediateReadAfterWriteForAccessFlows: true
        * required: false
        * returned: request
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "login_attempts")

    @login_attempts.setter
    def login_attempts(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "login_attempts", value)

    @property
    @pulumi.getter(name="maxConcurrentSessions")
    def max_concurrent_sessions(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The maximum number of concurrent sessions for a user.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsMaxValue: 999
        * idcsMinValue: 1
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "max_concurrent_sessions")

    @max_concurrent_sessions.setter
    def max_concurrent_sessions(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_concurrent_sessions", value)

    @property
    @pulumi.getter(name="previousSuccessfulLoginDate")
    def previous_successful_login_date(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The previous successful login date.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: request
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "previous_successful_login_date")

    @previous_successful_login_date.setter
    def previous_successful_login_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "previous_successful_login_date", value)

    @property
    @pulumi.getter(name="recoveryAttempts")
    def recovery_attempts(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The number of failed recovery attempts. The value is reset to 0 after a successful login.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: request
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "recovery_attempts")

    @recovery_attempts.setter
    def recovery_attempts(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "recovery_attempts", value)

    @property
    @pulumi.getter(name="recoveryEnrollAttempts")
    def recovery_enroll_attempts(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The number of failed account recovery enrollment attempts.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "recovery_enroll_attempts")

    @recovery_enroll_attempts.setter
    def recovery_enroll_attempts(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "recovery_enroll_attempts", value)

    @property
    @pulumi.getter(name="recoveryLocked")
    def recovery_locked(self) -> Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs']]:
        """
        (Updatable) A complex attribute that indicates a password recovery is locked (blocking any new sessions).

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "recovery_locked")

    @recovery_locked.setter
    def recovery_locked(self, value: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs']]):
        pulumi.set(self, "recovery_locked", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs:
    def __init__(__self__, *,
                 expired: Optional[pulumi.Input[bool]] = None,
                 lock_date: Optional[pulumi.Input[str]] = None,
                 on: Optional[pulumi.Input[bool]] = None,
                 reason: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[bool] expired: (Updatable) Indicates whether the user password is expired. If this value is false, password expiry is still evaluated during user login.
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] lock_date: (Updatable) The date and time that the current resource was locked.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[bool] on: (Updatable) Indicates that the recovery is locked.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[int] reason: (Updatable) Indicates the reason for locking the account. Valid values are: 0 - failed password login attempts, 1 - admin lock, 2 - failed reset password attempts, 3 - failed MFA login attempts, 4 - failed MFA login attempts for federated user, 5 - failed Database login attempts
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * idcsRequiresWriteForAccessFlows: true
               * idcsRequiresImmediateReadAfterWriteForAccessFlows: true
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            expired=expired,
            lock_date=lock_date,
            on=on,
            reason=reason,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             expired: Optional[pulumi.Input[bool]] = None,
             lock_date: Optional[pulumi.Input[str]] = None,
             on: Optional[pulumi.Input[bool]] = None,
             reason: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lockDate' in kwargs:
            lock_date = kwargs['lockDate']

        if expired is not None:
            _setter("expired", expired)
        if lock_date is not None:
            _setter("lock_date", lock_date)
        if on is not None:
            _setter("on", on)
        if reason is not None:
            _setter("reason", reason)

    @property
    @pulumi.getter
    def expired(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates whether the user password is expired. If this value is false, password expiry is still evaluated during user login.

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "expired")

    @expired.setter
    def expired(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "expired", value)

    @property
    @pulumi.getter(name="lockDate")
    def lock_date(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The date and time that the current resource was locked.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "lock_date")

    @lock_date.setter
    def lock_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "lock_date", value)

    @property
    @pulumi.getter
    def on(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates that the recovery is locked.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "on")

    @on.setter
    def on(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "on", value)

    @property
    @pulumi.getter
    def reason(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Indicates the reason for locking the account. Valid values are: 0 - failed password login attempts, 1 - admin lock, 2 - failed reset password attempts, 3 - failed MFA login attempts, 4 - failed MFA login attempts for federated user, 5 - failed Database login attempts

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * idcsRequiresWriteForAccessFlows: true
        * idcsRequiresImmediateReadAfterWriteForAccessFlows: true
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "reason")

    @reason.setter
    def reason(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "reason", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs:
    def __init__(__self__, *,
                 lock_date: Optional[pulumi.Input[str]] = None,
                 on: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[str] lock_date: (Updatable) The date and time that the current resource was locked.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: default
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[bool] on: (Updatable) Indicates that the recovery is locked.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            lock_date=lock_date,
            on=on,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             lock_date: Optional[pulumi.Input[str]] = None,
             on: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'lockDate' in kwargs:
            lock_date = kwargs['lockDate']

        if lock_date is not None:
            _setter("lock_date", lock_date)
        if on is not None:
            _setter("on", on)

    @property
    @pulumi.getter(name="lockDate")
    def lock_date(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The date and time that the current resource was locked.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: default
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "lock_date")

    @lock_date.setter
    def lock_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "lock_date", value)

    @property
    @pulumi.getter
    def on(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Indicates that the recovery is locked.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "on")

    @on.setter
    def on(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "on", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs:
    def __init__(__self__, *,
                 account_recovery_required: Optional[pulumi.Input[bool]] = None,
                 accounts: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs']]]] = None,
                 app_roles: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs']]]] = None,
                 applicable_authentication_target_apps: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs']]]] = None,
                 bypass_notification: Optional[pulumi.Input[bool]] = None,
                 creation_mechanism: Optional[pulumi.Input[str]] = None,
                 delegated_authentication_target_app: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs']] = None,
                 do_not_show_getting_started: Optional[pulumi.Input[bool]] = None,
                 grants: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs']]]] = None,
                 group_membership_last_modified: Optional[pulumi.Input[str]] = None,
                 idcs_app_roles_limited_to_groups: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs']]]] = None,
                 is_account_recovery_enrolled: Optional[pulumi.Input[bool]] = None,
                 is_authentication_delegated: Optional[pulumi.Input[bool]] = None,
                 is_federated_user: Optional[pulumi.Input[bool]] = None,
                 is_group_membership_normalized: Optional[pulumi.Input[bool]] = None,
                 is_group_membership_synced_to_users_groups: Optional[pulumi.Input[bool]] = None,
                 notification_email_template_id: Optional[pulumi.Input[str]] = None,
                 preferred_ui_landing_page: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 support_accounts: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs']]]] = None,
                 synced_from_app: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs']] = None,
                 user_flow_controlled_by_external_client: Optional[pulumi.Input[bool]] = None,
                 user_provider: Optional[pulumi.Input[str]] = None,
                 user_tokens: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs']]]] = None):
        """
        :param pulumi.Input[bool] account_recovery_required: (Updatable) Boolean value to prompt user to setup account recovery during login.
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs']]] accounts: (Updatable) Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
               
               **SCIM++ Properties:**
               * idcsPii: true
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs']]] app_roles: (Updatable) A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs']]] applicable_authentication_target_apps: (Updatable) The app against which the user will authenticate. The value is not persisted but rather calculated. If the user's delegatedAuthenticationTargetApp is set, that value is returned. Otherwise, the app returned by evaluating the user's applicable Delegated Authentication Policy is returned.
               
               **Added In:** 18.1.6
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[bool] bypass_notification: (Updatable) A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeNameMappings: [[columnHeaderName:ByPass Notification]]
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] creation_mechanism: (Updatable) User creation mechanism
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeNameMappings: [[defaultValue:import]]
               * idcsSearchable: true
               * multiValued: false
               * mutability: immutable
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs'] delegated_authentication_target_app: (Updatable) If set, indicates the user's preferred authentication target app. If not set and the user's \\"syncedFromApp\\" is set and is enabled for delegated authentication, it is used. Otherwise, the user authenticates locally to Oracle Identity Cloud Service.
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[bool] do_not_show_getting_started: (Updatable) A Boolean value indicating whether or not to hide the getting started page
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs']]] grants: (Updatable) Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input[str] group_membership_last_modified: (Updatable) Specifies date time when a User's group membership was last modified.
               
               **Added In:** 2304270343
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: dateTime
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs']]] idcs_app_roles_limited_to_groups: (Updatable) Description:
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value, idcsAppRoleId]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
        :param pulumi.Input[bool] is_account_recovery_enrolled: (Updatable) A Boolean value indicating whether or not a user is enrolled for account recovery
               
               **Added In:** 19.1.4
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_authentication_delegated: (Updatable) A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_federated_user: (Updatable) A Boolean value indicating whether or not the user is federated.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsCsvAttributeName: Federated
               * idcsCsvAttributeNameMappings: [[columnHeaderName:Federated]]
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * idcsRequiresWriteForAccessFlows: true
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_group_membership_normalized: (Updatable) A Boolean value indicating whether or not group membership is normalized for this user.
               
               **Deprecated Since: 19.3.3**
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[bool] is_group_membership_synced_to_users_groups: (Updatable) A Boolean value Indicates whether this User's group membership has been sync'ed from Group.members to UsersGroups.
               
               **Added In:** 19.3.3
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] notification_email_template_id: (Updatable) Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: writeOnly
               * required: false
               * returned: never
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] preferred_ui_landing_page: (Updatable) User's preferred landing page following login, logout and reset password.
               
               **Added In:** 2302092332
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] status: (Updatable) A supplemental status indicating the reason why a user is disabled
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: request
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs']]] support_accounts: (Updatable) A list of Support Accounts corresponding to user.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: true
               * mutability: readOnly
               * required: false
               * returned: request
               * type: complex
               * uniqueness: none
        :param pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs'] synced_from_app: (Updatable) Managed App or an Identity Source from where the user is synced. If enabled, this Managed App or Identity Source can be used for performing delegated authentication.
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * idcsCompositeKey: [value]
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        :param pulumi.Input[bool] user_flow_controlled_by_external_client: (Updatable) A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: immutable
               * required: false
               * returned: never
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] user_provider: (Updatable) User Support Account Provider
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs']]] user_tokens: (Updatable) User token returned if userFlowControlledByExternalClient is true
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * caseExact: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: complex
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            account_recovery_required=account_recovery_required,
            accounts=accounts,
            app_roles=app_roles,
            applicable_authentication_target_apps=applicable_authentication_target_apps,
            bypass_notification=bypass_notification,
            creation_mechanism=creation_mechanism,
            delegated_authentication_target_app=delegated_authentication_target_app,
            do_not_show_getting_started=do_not_show_getting_started,
            grants=grants,
            group_membership_last_modified=group_membership_last_modified,
            idcs_app_roles_limited_to_groups=idcs_app_roles_limited_to_groups,
            is_account_recovery_enrolled=is_account_recovery_enrolled,
            is_authentication_delegated=is_authentication_delegated,
            is_federated_user=is_federated_user,
            is_group_membership_normalized=is_group_membership_normalized,
            is_group_membership_synced_to_users_groups=is_group_membership_synced_to_users_groups,
            notification_email_template_id=notification_email_template_id,
            preferred_ui_landing_page=preferred_ui_landing_page,
            status=status,
            support_accounts=support_accounts,
            synced_from_app=synced_from_app,
            user_flow_controlled_by_external_client=user_flow_controlled_by_external_client,
            user_provider=user_provider,
            user_tokens=user_tokens,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             account_recovery_required: Optional[pulumi.Input[bool]] = None,
             accounts: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs']]]] = None,
             app_roles: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs']]]] = None,
             applicable_authentication_target_apps: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs']]]] = None,
             bypass_notification: Optional[pulumi.Input[bool]] = None,
             creation_mechanism: Optional[pulumi.Input[str]] = None,
             delegated_authentication_target_app: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs']] = None,
             do_not_show_getting_started: Optional[pulumi.Input[bool]] = None,
             grants: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs']]]] = None,
             group_membership_last_modified: Optional[pulumi.Input[str]] = None,
             idcs_app_roles_limited_to_groups: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs']]]] = None,
             is_account_recovery_enrolled: Optional[pulumi.Input[bool]] = None,
             is_authentication_delegated: Optional[pulumi.Input[bool]] = None,
             is_federated_user: Optional[pulumi.Input[bool]] = None,
             is_group_membership_normalized: Optional[pulumi.Input[bool]] = None,
             is_group_membership_synced_to_users_groups: Optional[pulumi.Input[bool]] = None,
             notification_email_template_id: Optional[pulumi.Input[str]] = None,
             preferred_ui_landing_page: Optional[pulumi.Input[str]] = None,
             status: Optional[pulumi.Input[str]] = None,
             support_accounts: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs']]]] = None,
             synced_from_app: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs']] = None,
             user_flow_controlled_by_external_client: Optional[pulumi.Input[bool]] = None,
             user_provider: Optional[pulumi.Input[str]] = None,
             user_tokens: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs']]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'accountRecoveryRequired' in kwargs:
            account_recovery_required = kwargs['accountRecoveryRequired']
        if 'appRoles' in kwargs:
            app_roles = kwargs['appRoles']
        if 'applicableAuthenticationTargetApps' in kwargs:
            applicable_authentication_target_apps = kwargs['applicableAuthenticationTargetApps']
        if 'bypassNotification' in kwargs:
            bypass_notification = kwargs['bypassNotification']
        if 'creationMechanism' in kwargs:
            creation_mechanism = kwargs['creationMechanism']
        if 'delegatedAuthenticationTargetApp' in kwargs:
            delegated_authentication_target_app = kwargs['delegatedAuthenticationTargetApp']
        if 'doNotShowGettingStarted' in kwargs:
            do_not_show_getting_started = kwargs['doNotShowGettingStarted']
        if 'groupMembershipLastModified' in kwargs:
            group_membership_last_modified = kwargs['groupMembershipLastModified']
        if 'idcsAppRolesLimitedToGroups' in kwargs:
            idcs_app_roles_limited_to_groups = kwargs['idcsAppRolesLimitedToGroups']
        if 'isAccountRecoveryEnrolled' in kwargs:
            is_account_recovery_enrolled = kwargs['isAccountRecoveryEnrolled']
        if 'isAuthenticationDelegated' in kwargs:
            is_authentication_delegated = kwargs['isAuthenticationDelegated']
        if 'isFederatedUser' in kwargs:
            is_federated_user = kwargs['isFederatedUser']
        if 'isGroupMembershipNormalized' in kwargs:
            is_group_membership_normalized = kwargs['isGroupMembershipNormalized']
        if 'isGroupMembershipSyncedToUsersGroups' in kwargs:
            is_group_membership_synced_to_users_groups = kwargs['isGroupMembershipSyncedToUsersGroups']
        if 'notificationEmailTemplateId' in kwargs:
            notification_email_template_id = kwargs['notificationEmailTemplateId']
        if 'preferredUiLandingPage' in kwargs:
            preferred_ui_landing_page = kwargs['preferredUiLandingPage']
        if 'supportAccounts' in kwargs:
            support_accounts = kwargs['supportAccounts']
        if 'syncedFromApp' in kwargs:
            synced_from_app = kwargs['syncedFromApp']
        if 'userFlowControlledByExternalClient' in kwargs:
            user_flow_controlled_by_external_client = kwargs['userFlowControlledByExternalClient']
        if 'userProvider' in kwargs:
            user_provider = kwargs['userProvider']
        if 'userTokens' in kwargs:
            user_tokens = kwargs['userTokens']

        if account_recovery_required is not None:
            _setter("account_recovery_required", account_recovery_required)
        if accounts is not None:
            _setter("accounts", accounts)
        if app_roles is not None:
            _setter("app_roles", app_roles)
        if applicable_authentication_target_apps is not None:
            _setter("applicable_authentication_target_apps", applicable_authentication_target_apps)
        if bypass_notification is not None:
            _setter("bypass_notification", bypass_notification)
        if creation_mechanism is not None:
            _setter("creation_mechanism", creation_mechanism)
        if delegated_authentication_target_app is not None:
            _setter("delegated_authentication_target_app", delegated_authentication_target_app)
        if do_not_show_getting_started is not None:
            _setter("do_not_show_getting_started", do_not_show_getting_started)
        if grants is not None:
            _setter("grants", grants)
        if group_membership_last_modified is not None:
            _setter("group_membership_last_modified", group_membership_last_modified)
        if idcs_app_roles_limited_to_groups is not None:
            _setter("idcs_app_roles_limited_to_groups", idcs_app_roles_limited_to_groups)
        if is_account_recovery_enrolled is not None:
            _setter("is_account_recovery_enrolled", is_account_recovery_enrolled)
        if is_authentication_delegated is not None:
            _setter("is_authentication_delegated", is_authentication_delegated)
        if is_federated_user is not None:
            _setter("is_federated_user", is_federated_user)
        if is_group_membership_normalized is not None:
            _setter("is_group_membership_normalized", is_group_membership_normalized)
        if is_group_membership_synced_to_users_groups is not None:
            _setter("is_group_membership_synced_to_users_groups", is_group_membership_synced_to_users_groups)
        if notification_email_template_id is not None:
            _setter("notification_email_template_id", notification_email_template_id)
        if preferred_ui_landing_page is not None:
            _setter("preferred_ui_landing_page", preferred_ui_landing_page)
        if status is not None:
            _setter("status", status)
        if support_accounts is not None:
            _setter("support_accounts", support_accounts)
        if synced_from_app is not None:
            _setter("synced_from_app", synced_from_app)
        if user_flow_controlled_by_external_client is not None:
            _setter("user_flow_controlled_by_external_client", user_flow_controlled_by_external_client)
        if user_provider is not None:
            _setter("user_provider", user_provider)
        if user_tokens is not None:
            _setter("user_tokens", user_tokens)

    @property
    @pulumi.getter(name="accountRecoveryRequired")
    def account_recovery_required(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Boolean value to prompt user to setup account recovery during login.

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "account_recovery_required")

    @account_recovery_required.setter
    def account_recovery_required(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "account_recovery_required", value)

    @property
    @pulumi.getter
    def accounts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs']]]]:
        """
        (Updatable) Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.

        **SCIM++ Properties:**
        * idcsPii: true
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "accounts")

    @accounts.setter
    def accounts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs']]]]):
        pulumi.set(self, "accounts", value)

    @property
    @pulumi.getter(name="appRoles")
    def app_roles(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs']]]]:
        """
        (Updatable) A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "app_roles")

    @app_roles.setter
    def app_roles(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs']]]]):
        pulumi.set(self, "app_roles", value)

    @property
    @pulumi.getter(name="applicableAuthenticationTargetApps")
    def applicable_authentication_target_apps(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs']]]]:
        """
        (Updatable) The app against which the user will authenticate. The value is not persisted but rather calculated. If the user's delegatedAuthenticationTargetApp is set, that value is returned. Otherwise, the app returned by evaluating the user's applicable Delegated Authentication Policy is returned.

        **Added In:** 18.1.6

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "applicable_authentication_target_apps")

    @applicable_authentication_target_apps.setter
    def applicable_authentication_target_apps(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs']]]]):
        pulumi.set(self, "applicable_authentication_target_apps", value)

    @property
    @pulumi.getter(name="bypassNotification")
    def bypass_notification(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeNameMappings: [[columnHeaderName:ByPass Notification]]
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "bypass_notification")

    @bypass_notification.setter
    def bypass_notification(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "bypass_notification", value)

    @property
    @pulumi.getter(name="creationMechanism")
    def creation_mechanism(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User creation mechanism

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeNameMappings: [[defaultValue:import]]
        * idcsSearchable: true
        * multiValued: false
        * mutability: immutable
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "creation_mechanism")

    @creation_mechanism.setter
    def creation_mechanism(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "creation_mechanism", value)

    @property
    @pulumi.getter(name="delegatedAuthenticationTargetApp")
    def delegated_authentication_target_app(self) -> Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs']]:
        """
        (Updatable) If set, indicates the user's preferred authentication target app. If not set and the user's \\"syncedFromApp\\" is set and is enabled for delegated authentication, it is used. Otherwise, the user authenticates locally to Oracle Identity Cloud Service.

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "delegated_authentication_target_app")

    @delegated_authentication_target_app.setter
    def delegated_authentication_target_app(self, value: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs']]):
        pulumi.set(self, "delegated_authentication_target_app", value)

    @property
    @pulumi.getter(name="doNotShowGettingStarted")
    def do_not_show_getting_started(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating whether or not to hide the getting started page

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "do_not_show_getting_started")

    @do_not_show_getting_started.setter
    def do_not_show_getting_started(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "do_not_show_getting_started", value)

    @property
    @pulumi.getter
    def grants(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs']]]]:
        """
        (Updatable) Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "grants")

    @grants.setter
    def grants(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs']]]]):
        pulumi.set(self, "grants", value)

    @property
    @pulumi.getter(name="groupMembershipLastModified")
    def group_membership_last_modified(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Specifies date time when a User's group membership was last modified.

        **Added In:** 2304270343

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: dateTime
        * uniqueness: none
        """
        return pulumi.get(self, "group_membership_last_modified")

    @group_membership_last_modified.setter
    def group_membership_last_modified(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_membership_last_modified", value)

    @property
    @pulumi.getter(name="idcsAppRolesLimitedToGroups")
    def idcs_app_roles_limited_to_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs']]]]:
        """
        (Updatable) Description:

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsCompositeKey: [value, idcsAppRoleId]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        """
        return pulumi.get(self, "idcs_app_roles_limited_to_groups")

    @idcs_app_roles_limited_to_groups.setter
    def idcs_app_roles_limited_to_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs']]]]):
        pulumi.set(self, "idcs_app_roles_limited_to_groups", value)

    @property
    @pulumi.getter(name="isAccountRecoveryEnrolled")
    def is_account_recovery_enrolled(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating whether or not a user is enrolled for account recovery

        **Added In:** 19.1.4

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_account_recovery_enrolled")

    @is_account_recovery_enrolled.setter
    def is_account_recovery_enrolled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_account_recovery_enrolled", value)

    @property
    @pulumi.getter(name="isAuthenticationDelegated")
    def is_authentication_delegated(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_authentication_delegated")

    @is_authentication_delegated.setter
    def is_authentication_delegated(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_authentication_delegated", value)

    @property
    @pulumi.getter(name="isFederatedUser")
    def is_federated_user(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating whether or not the user is federated.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsCsvAttributeName: Federated
        * idcsCsvAttributeNameMappings: [[columnHeaderName:Federated]]
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * idcsRequiresWriteForAccessFlows: true
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_federated_user")

    @is_federated_user.setter
    def is_federated_user(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_federated_user", value)

    @property
    @pulumi.getter(name="isGroupMembershipNormalized")
    def is_group_membership_normalized(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating whether or not group membership is normalized for this user.

        **Deprecated Since: 19.3.3**

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_group_membership_normalized")

    @is_group_membership_normalized.setter
    def is_group_membership_normalized(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_group_membership_normalized", value)

    @property
    @pulumi.getter(name="isGroupMembershipSyncedToUsersGroups")
    def is_group_membership_synced_to_users_groups(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value Indicates whether this User's group membership has been sync'ed from Group.members to UsersGroups.

        **Added In:** 19.3.3

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "is_group_membership_synced_to_users_groups")

    @is_group_membership_synced_to_users_groups.setter
    def is_group_membership_synced_to_users_groups(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_group_membership_synced_to_users_groups", value)

    @property
    @pulumi.getter(name="notificationEmailTemplateId")
    def notification_email_template_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: writeOnly
        * required: false
        * returned: never
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "notification_email_template_id")

    @notification_email_template_id.setter
    def notification_email_template_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "notification_email_template_id", value)

    @property
    @pulumi.getter(name="preferredUiLandingPage")
    def preferred_ui_landing_page(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User's preferred landing page following login, logout and reset password.

        **Added In:** 2302092332

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "preferred_ui_landing_page")

    @preferred_ui_landing_page.setter
    def preferred_ui_landing_page(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "preferred_ui_landing_page", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A supplemental status indicating the reason why a user is disabled

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: request
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="supportAccounts")
    def support_accounts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs']]]]:
        """
        (Updatable) A list of Support Accounts corresponding to user.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: true
        * mutability: readOnly
        * required: false
        * returned: request
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "support_accounts")

    @support_accounts.setter
    def support_accounts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs']]]]):
        pulumi.set(self, "support_accounts", value)

    @property
    @pulumi.getter(name="syncedFromApp")
    def synced_from_app(self) -> Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs']]:
        """
        (Updatable) Managed App or an Identity Source from where the user is synced. If enabled, this Managed App or Identity Source can be used for performing delegated authentication.

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * idcsCompositeKey: [value]
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "synced_from_app")

    @synced_from_app.setter
    def synced_from_app(self, value: Optional[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs']]):
        pulumi.set(self, "synced_from_app", value)

    @property
    @pulumi.getter(name="userFlowControlledByExternalClient")
    def user_flow_controlled_by_external_client(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: immutable
        * required: false
        * returned: never
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "user_flow_controlled_by_external_client")

    @user_flow_controlled_by_external_client.setter
    def user_flow_controlled_by_external_client(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "user_flow_controlled_by_external_client", value)

    @property
    @pulumi.getter(name="userProvider")
    def user_provider(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Support Account Provider

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_provider")

    @user_provider.setter
    def user_provider(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_provider", value)

    @property
    @pulumi.getter(name="userTokens")
    def user_tokens(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs']]]]:
        """
        (Updatable) User token returned if userFlowControlledByExternalClient is true

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * caseExact: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: complex
        * uniqueness: none
        """
        return pulumi.get(self, "user_tokens")

    @user_tokens.setter
    def user_tokens(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs']]]]):
        pulumi.set(self, "user_tokens", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs:
    def __init__(__self__, *,
                 active: Optional[pulumi.Input[bool]] = None,
                 app_id: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[bool] active: (Updatable) Status of the account
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] app_id: (Updatable) The ID of the App in this Grant.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] name: (Updatable) Name of the account assigned to the User.
               
               **Added In:** 17.4.6
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            active=active,
            app_id=app_id,
            name=name,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             active: Optional[pulumi.Input[bool]] = None,
             app_id: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'appId' in kwargs:
            app_id = kwargs['appId']

        if active is not None:
            _setter("active", active)
        if app_id is not None:
            _setter("app_id", app_id)
        if name is not None:
            _setter("name", name)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def active(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) Status of the account

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "active")

    @active.setter
    def active(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "active", value)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The ID of the App in this Grant.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the account assigned to the User.

        **Added In:** 17.4.6

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 admin_role: Optional[pulumi.Input[bool]] = None,
                 app_id: Optional[pulumi.Input[str]] = None,
                 app_name: Optional[pulumi.Input[str]] = None,
                 display: Optional[pulumi.Input[str]] = None,
                 legacy_group_name: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[bool] admin_role: (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] app_id: (Updatable) The ID of the App in this Grant.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] app_name: (Updatable) The name (Client ID) of the App that defines this AppRole.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] legacy_group_name: (Updatable) The name (if any) under which this AppRole should appear in this User's group-memberships for reasons of backward compatibility. Oracle Identity Cloud Service distinguishes between Groups and AppRoles, but some services still expect AppRoles appear as if they were service-instance-specific Groups.
               
               **SCIM++ Properties:**
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            admin_role=admin_role,
            app_id=app_id,
            app_name=app_name,
            display=display,
            legacy_group_name=legacy_group_name,
            ref=ref,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             admin_role: Optional[pulumi.Input[bool]] = None,
             app_id: Optional[pulumi.Input[str]] = None,
             app_name: Optional[pulumi.Input[str]] = None,
             display: Optional[pulumi.Input[str]] = None,
             legacy_group_name: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'adminRole' in kwargs:
            admin_role = kwargs['adminRole']
        if 'appId' in kwargs:
            app_id = kwargs['appId']
        if 'appName' in kwargs:
            app_name = kwargs['appName']
        if 'legacyGroupName' in kwargs:
            legacy_group_name = kwargs['legacyGroupName']

        _setter("value", value)
        if admin_role is not None:
            _setter("admin_role", admin_role)
        if app_id is not None:
            _setter("app_id", app_id)
        if app_name is not None:
            _setter("app_name", app_name)
        if display is not None:
            _setter("display", display)
        if legacy_group_name is not None:
            _setter("legacy_group_name", legacy_group_name)
        if ref is not None:
            _setter("ref", ref)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter(name="adminRole")
    def admin_role(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "admin_role")

    @admin_role.setter
    def admin_role(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "admin_role", value)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The ID of the App in this Grant.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter(name="appName")
    def app_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The name (Client ID) of the App that defines this AppRole.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_name")

    @app_name.setter
    def app_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_name", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter(name="legacyGroupName")
    def legacy_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The name (if any) under which this AppRole should appear in this User's group-memberships for reasons of backward compatibility. Oracle Identity Cloud Service distinguishes between Groups and AppRoles, but some services still expect AppRoles appear as if they were service-instance-specific Groups.

        **SCIM++ Properties:**
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "legacy_group_name")

    @legacy_group_name.setter
    def legacy_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "legacy_group_name", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 target_request_timeout: Optional[pulumi.Input[int]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[int] target_request_timeout: (Updatable) Timeout interval for Synchronization TargetAction in milliseconds
               
               **Added In:** 18.2.6
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: integer
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            display=display,
            ref=ref,
            target_request_timeout=target_request_timeout,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             target_request_timeout: Optional[pulumi.Input[int]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'targetRequestTimeout' in kwargs:
            target_request_timeout = kwargs['targetRequestTimeout']

        _setter("type", type)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)
        if target_request_timeout is not None:
            _setter("target_request_timeout", target_request_timeout)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter(name="targetRequestTimeout")
    def target_request_timeout(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) Timeout interval for Synchronization TargetAction in milliseconds

        **Added In:** 18.2.6

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: integer
        * uniqueness: none
        """
        return pulumi.get(self, "target_request_timeout")

    @target_request_timeout.setter
    def target_request_timeout(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "target_request_timeout", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs:
    def __init__(__self__, *,
                 app_id: Optional[pulumi.Input[str]] = None,
                 grant_mechanism: Optional[pulumi.Input[str]] = None,
                 grantor_id: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] app_id: (Updatable) The ID of the App in this Grant.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] grant_mechanism: (Updatable) Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted. A customer or the UI should use only grantMechanism values that start with 'ADMINISTRATOR':
               * 'ADMINISTRATOR_TO_USER' is for a direct grant to a specific User.
               * 'ADMINISTRATOR_TO_GROUP' is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.
               * 'ADMINISTRATOR_TO_APP' is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] grantor_id: (Updatable) Grantor identifier
               
               **Added In:** 20.1.3
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            app_id=app_id,
            grant_mechanism=grant_mechanism,
            grantor_id=grantor_id,
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             app_id: Optional[pulumi.Input[str]] = None,
             grant_mechanism: Optional[pulumi.Input[str]] = None,
             grantor_id: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'appId' in kwargs:
            app_id = kwargs['appId']
        if 'grantMechanism' in kwargs:
            grant_mechanism = kwargs['grantMechanism']
        if 'grantorId' in kwargs:
            grantor_id = kwargs['grantorId']

        if app_id is not None:
            _setter("app_id", app_id)
        if grant_mechanism is not None:
            _setter("grant_mechanism", grant_mechanism)
        if grantor_id is not None:
            _setter("grantor_id", grantor_id)
        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The ID of the App in this Grant.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter(name="grantMechanism")
    def grant_mechanism(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted. A customer or the UI should use only grantMechanism values that start with 'ADMINISTRATOR':
        * 'ADMINISTRATOR_TO_USER' is for a direct grant to a specific User.
        * 'ADMINISTRATOR_TO_GROUP' is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.
        * 'ADMINISTRATOR_TO_APP' is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "grant_mechanism")

    @grant_mechanism.setter
    def grant_mechanism(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grant_mechanism", value)

    @property
    @pulumi.getter(name="grantorId")
    def grantor_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Grantor identifier

        **Added In:** 20.1.3

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "grantor_id")

    @grantor_id.setter
    def grantor_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grantor_id", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs:
    def __init__(__self__, *,
                 idcs_app_role_id: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] idcs_app_role_id: (Updatable) The id of the Oracle Identity Cloud Service AppRole grant limited to one or more Groups.
               
               **Added In:** 19.2.1
               
               **SCIM++ Properties:**
               * idcsCsvAttributeName: IDCS AppRole Name
               * idcsSearchable: true
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            idcs_app_role_id=idcs_app_role_id,
            value=value,
            display=display,
            ocid=ocid,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             idcs_app_role_id: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'idcsAppRoleId' in kwargs:
            idcs_app_role_id = kwargs['idcsAppRoleId']

        _setter("idcs_app_role_id", idcs_app_role_id)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter(name="idcsAppRoleId")
    def idcs_app_role_id(self) -> pulumi.Input[str]:
        """
        (Updatable) The id of the Oracle Identity Cloud Service AppRole grant limited to one or more Groups.

        **Added In:** 19.2.1

        **SCIM++ Properties:**
        * idcsCsvAttributeName: IDCS AppRole Name
        * idcsSearchable: true
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "idcs_app_role_id")

    @idcs_app_role_id.setter
    def idcs_app_role_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "idcs_app_role_id", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs:
    def __init__(__self__, *,
                 ocid: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None,
                 user_id: Optional[pulumi.Input[str]] = None,
                 user_provider: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] ocid: (Updatable) The OCID of the user's support account.
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: true
               * idcsSearchable: true
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] user_id: (Updatable) User Support User Id
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] user_provider: (Updatable) User Support Account Provider
               
               **Added In:** 2103141444
               
               **SCIM++ Properties:**
               * caseExact: false
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: always
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            ocid=ocid,
            ref=ref,
            user_id=user_id,
            user_provider=user_provider,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             ocid: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             user_id: Optional[pulumi.Input[str]] = None,
             user_provider: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'userId' in kwargs:
            user_id = kwargs['userId']
        if 'userProvider' in kwargs:
            user_provider = kwargs['userProvider']

        if ocid is not None:
            _setter("ocid", ocid)
        if ref is not None:
            _setter("ref", ref)
        if user_id is not None:
            _setter("user_id", user_id)
        if user_provider is not None:
            _setter("user_provider", user_provider)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def ocid(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The OCID of the user's support account.

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: true
        * idcsSearchable: true
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "ocid")

    @ocid.setter
    def ocid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ocid", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Support User Id

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_id")

    @user_id.setter
    def user_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_id", value)

    @property
    @pulumi.getter(name="userProvider")
    def user_provider(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Support Account Provider

        **Added In:** 2103141444

        **SCIM++ Properties:**
        * caseExact: false
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: always
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "user_provider")

    @user_provider.setter
    def user_provider(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_provider", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            type=type,
            value=value,
            display=display,
            ref=ref,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             type: pulumi.Input[str],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             ref: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("type", type)
        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if ref is not None:
            _setter("ref", ref)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


@pulumi.input_type
class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs:
    def __init__(__self__, *,
                 ref: Optional[pulumi.Input[str]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] ref: (Updatable) User Token URI
               
               **Added In:** 18.4.2
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readOnly
               * required: false
               * returned: default
               * type: reference
               * uniqueness: none
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            ref=ref,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             ref: Optional[pulumi.Input[str]] = None,
             value: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        if ref is not None:
            _setter("ref", ref)
        if value is not None:
            _setter("value", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) User Token URI

        **Added In:** 18.4.2

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readOnly
        * required: false
        * returned: default
        * type: reference
        * uniqueness: none
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DomainsUserX509certificateArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 display: Optional[pulumi.Input[str]] = None,
                 primary: Optional[pulumi.Input[bool]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: (Updatable) The value of a X509 certificate.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: true
               * returned: default
               * type: binary
               * uniqueness: none
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param pulumi.Input[str] display: (Updatable) A human readable name, primarily used for display purposes.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        :param pulumi.Input[bool] primary: (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: boolean
               * uniqueness: none
        :param pulumi.Input[str] type: (Updatable) A label indicating the attribute's function.
               
               **SCIM++ Properties:**
               * idcsSearchable: false
               * multiValued: false
               * mutability: readWrite
               * required: false
               * returned: default
               * type: string
               * uniqueness: none
        """
        DomainsUserX509certificateArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            value=value,
            display=display,
            primary=primary,
            type=type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             value: pulumi.Input[str],
             display: Optional[pulumi.Input[str]] = None,
             primary: Optional[pulumi.Input[bool]] = None,
             type: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("value", value)
        if display is not None:
            _setter("display", display)
        if primary is not None:
            _setter("primary", primary)
        if type is not None:
            _setter("type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        (Updatable) The value of a X509 certificate.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: true
        * returned: default
        * type: binary
        * uniqueness: none


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def display(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A human readable name, primarily used for display purposes.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "display")

    @display.setter
    def display(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display", value)

    @property
    @pulumi.getter
    def primary(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: boolean
        * uniqueness: none
        """
        return pulumi.get(self, "primary")

    @primary.setter
    def primary(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "primary", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) A label indicating the attribute's function.

        **SCIM++ Properties:**
        * idcsSearchable: false
        * multiValued: false
        * mutability: readWrite
        * required: false
        * returned: default
        * type: string
        * uniqueness: none
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class NetworkSourceVirtualSourceListArgs:
    def __init__(__self__, *,
                 ip_ranges: pulumi.Input[Sequence[pulumi.Input[str]]],
                 vcn_id: pulumi.Input[str]):
        NetworkSourceVirtualSourceListArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            ip_ranges=ip_ranges,
            vcn_id=vcn_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             ip_ranges: pulumi.Input[Sequence[pulumi.Input[str]]],
             vcn_id: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'ipRanges' in kwargs:
            ip_ranges = kwargs['ipRanges']
        if 'vcnId' in kwargs:
            vcn_id = kwargs['vcnId']

        _setter("ip_ranges", ip_ranges)
        _setter("vcn_id", vcn_id)

    @property
    @pulumi.getter(name="ipRanges")
    def ip_ranges(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        return pulumi.get(self, "ip_ranges")

    @ip_ranges.setter
    def ip_ranges(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "ip_ranges", value)

    @property
    @pulumi.getter(name="vcnId")
    def vcn_id(self) -> pulumi.Input[str]:
        return pulumi.get(self, "vcn_id")

    @vcn_id.setter
    def vcn_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "vcn_id", value)


@pulumi.input_type
class TagValidatorArgs:
    def __init__(__self__, *,
                 validator_type: pulumi.Input[str],
                 values: pulumi.Input[Sequence[pulumi.Input[str]]]):
        """
        :param pulumi.Input[str] validator_type: (Updatable) Specifies the type of validation: a static value (no validation) or a list.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] values: (Updatable) The list of allowed values for a definedTag value.
        """
        TagValidatorArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            validator_type=validator_type,
            values=values,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             validator_type: pulumi.Input[str],
             values: pulumi.Input[Sequence[pulumi.Input[str]]],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'validatorType' in kwargs:
            validator_type = kwargs['validatorType']

        _setter("validator_type", validator_type)
        _setter("values", values)

    @property
    @pulumi.getter(name="validatorType")
    def validator_type(self) -> pulumi.Input[str]:
        """
        (Updatable) Specifies the type of validation: a static value (no validation) or a list.
        """
        return pulumi.get(self, "validator_type")

    @validator_type.setter
    def validator_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "validator_type", value)

    @property
    @pulumi.getter
    def values(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        (Updatable) The list of allowed values for a definedTag value.
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "values", value)


@pulumi.input_type
class UserCapabilityArgs:
    def __init__(__self__, *,
                 can_use_api_keys: Optional[pulumi.Input[bool]] = None,
                 can_use_auth_tokens: Optional[pulumi.Input[bool]] = None,
                 can_use_console_password: Optional[pulumi.Input[bool]] = None,
                 can_use_customer_secret_keys: Optional[pulumi.Input[bool]] = None,
                 can_use_db_credentials: Optional[pulumi.Input[bool]] = None,
                 can_use_oauth2client_credentials: Optional[pulumi.Input[bool]] = None,
                 can_use_smtp_credentials: Optional[pulumi.Input[bool]] = None):
        """
        :param pulumi.Input[bool] can_use_api_keys: Indicates if the user can use API keys.
        :param pulumi.Input[bool] can_use_auth_tokens: Indicates if the user can use SWIFT passwords / auth tokens.
        :param pulumi.Input[bool] can_use_console_password: Indicates if the user can log in to the console.
        :param pulumi.Input[bool] can_use_customer_secret_keys: Indicates if the user can use SigV4 symmetric keys.
        :param pulumi.Input[bool] can_use_db_credentials: Indicates if the user can use DB passwords.
        :param pulumi.Input[bool] can_use_oauth2client_credentials: Indicates if the user can use OAuth2 credentials and tokens.
        :param pulumi.Input[bool] can_use_smtp_credentials: Indicates if the user can use SMTP passwords.
        """
        UserCapabilityArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            can_use_api_keys=can_use_api_keys,
            can_use_auth_tokens=can_use_auth_tokens,
            can_use_console_password=can_use_console_password,
            can_use_customer_secret_keys=can_use_customer_secret_keys,
            can_use_db_credentials=can_use_db_credentials,
            can_use_oauth2client_credentials=can_use_oauth2client_credentials,
            can_use_smtp_credentials=can_use_smtp_credentials,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             can_use_api_keys: Optional[pulumi.Input[bool]] = None,
             can_use_auth_tokens: Optional[pulumi.Input[bool]] = None,
             can_use_console_password: Optional[pulumi.Input[bool]] = None,
             can_use_customer_secret_keys: Optional[pulumi.Input[bool]] = None,
             can_use_db_credentials: Optional[pulumi.Input[bool]] = None,
             can_use_oauth2client_credentials: Optional[pulumi.Input[bool]] = None,
             can_use_smtp_credentials: Optional[pulumi.Input[bool]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'canUseApiKeys' in kwargs:
            can_use_api_keys = kwargs['canUseApiKeys']
        if 'canUseAuthTokens' in kwargs:
            can_use_auth_tokens = kwargs['canUseAuthTokens']
        if 'canUseConsolePassword' in kwargs:
            can_use_console_password = kwargs['canUseConsolePassword']
        if 'canUseCustomerSecretKeys' in kwargs:
            can_use_customer_secret_keys = kwargs['canUseCustomerSecretKeys']
        if 'canUseDbCredentials' in kwargs:
            can_use_db_credentials = kwargs['canUseDbCredentials']
        if 'canUseOauth2clientCredentials' in kwargs:
            can_use_oauth2client_credentials = kwargs['canUseOauth2clientCredentials']
        if 'canUseSmtpCredentials' in kwargs:
            can_use_smtp_credentials = kwargs['canUseSmtpCredentials']

        if can_use_api_keys is not None:
            _setter("can_use_api_keys", can_use_api_keys)
        if can_use_auth_tokens is not None:
            _setter("can_use_auth_tokens", can_use_auth_tokens)
        if can_use_console_password is not None:
            _setter("can_use_console_password", can_use_console_password)
        if can_use_customer_secret_keys is not None:
            _setter("can_use_customer_secret_keys", can_use_customer_secret_keys)
        if can_use_db_credentials is not None:
            _setter("can_use_db_credentials", can_use_db_credentials)
        if can_use_oauth2client_credentials is not None:
            _setter("can_use_oauth2client_credentials", can_use_oauth2client_credentials)
        if can_use_smtp_credentials is not None:
            _setter("can_use_smtp_credentials", can_use_smtp_credentials)

    @property
    @pulumi.getter(name="canUseApiKeys")
    def can_use_api_keys(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates if the user can use API keys.
        """
        return pulumi.get(self, "can_use_api_keys")

    @can_use_api_keys.setter
    def can_use_api_keys(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_api_keys", value)

    @property
    @pulumi.getter(name="canUseAuthTokens")
    def can_use_auth_tokens(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates if the user can use SWIFT passwords / auth tokens.
        """
        return pulumi.get(self, "can_use_auth_tokens")

    @can_use_auth_tokens.setter
    def can_use_auth_tokens(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_auth_tokens", value)

    @property
    @pulumi.getter(name="canUseConsolePassword")
    def can_use_console_password(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates if the user can log in to the console.
        """
        return pulumi.get(self, "can_use_console_password")

    @can_use_console_password.setter
    def can_use_console_password(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_console_password", value)

    @property
    @pulumi.getter(name="canUseCustomerSecretKeys")
    def can_use_customer_secret_keys(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates if the user can use SigV4 symmetric keys.
        """
        return pulumi.get(self, "can_use_customer_secret_keys")

    @can_use_customer_secret_keys.setter
    def can_use_customer_secret_keys(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_customer_secret_keys", value)

    @property
    @pulumi.getter(name="canUseDbCredentials")
    def can_use_db_credentials(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates if the user can use DB passwords.
        """
        return pulumi.get(self, "can_use_db_credentials")

    @can_use_db_credentials.setter
    def can_use_db_credentials(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_db_credentials", value)

    @property
    @pulumi.getter(name="canUseOauth2clientCredentials")
    def can_use_oauth2client_credentials(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates if the user can use OAuth2 credentials and tokens.
        """
        return pulumi.get(self, "can_use_oauth2client_credentials")

    @can_use_oauth2client_credentials.setter
    def can_use_oauth2client_credentials(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_oauth2client_credentials", value)

    @property
    @pulumi.getter(name="canUseSmtpCredentials")
    def can_use_smtp_credentials(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates if the user can use SMTP passwords.
        """
        return pulumi.get(self, "can_use_smtp_credentials")

    @can_use_smtp_credentials.setter
    def can_use_smtp_credentials(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "can_use_smtp_credentials", value)


@pulumi.input_type
class GetAllowedDomainLicenseTypesFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: The license type name.  Example: "Oracle Apps Premium"
        """
        GetAllowedDomainLicenseTypesFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The license type name.  Example: "Oracle Apps Premium"
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetApiKeysFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetApiKeysFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetAuthTokensFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetAuthTokensFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetAvailabilityDomainsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: The name of the Availability Domain.
        """
        GetAvailabilityDomainsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the Availability Domain.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetCompartmentsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetCompartmentsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetCostTrackingTagsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
        :param Sequence[str] values: The list of allowed values for a definedTag value.
        """
        GetCostTrackingTagsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        The list of allowed values for a definedTag value.
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetCustomerSecretKeysFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetCustomerSecretKeysFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetDbCredentialsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetDbCredentialsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetDomainsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetDomainsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetDynamicGroupsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetDynamicGroupsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetFaultDomainsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: The name of the Fault Domain.
        """
        GetFaultDomainsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the Fault Domain.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetGroupsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetGroupsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetIamWorkRequestErrorsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetIamWorkRequestErrorsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetIamWorkRequestLogsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetIamWorkRequestLogsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetIamWorkRequestsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetIamWorkRequestsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetIdentityProviderGroupsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetIdentityProviderGroupsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetIdentityProvidersFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetIdentityProvidersFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetIdpGroupMappingsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetIdpGroupMappingsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetNetworkSourcesFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetNetworkSourcesFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetPoliciesFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetPoliciesFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetRegionSubscriptionsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetRegionSubscriptionsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetRegionsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: The name of the region. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
        """
        GetRegionsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the region. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetSmtpCredentialsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetSmtpCredentialsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetTagDefaultsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetTagDefaultsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetTagNamespacesFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: The name of the tag namespace. It must be unique across all tag namespaces in the tenancy and cannot be changed.
        """
        GetTagNamespacesFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the tag namespace. It must be unique across all tag namespaces in the tenancy and cannot be changed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetTagStandardTagNamespaceTemplatesFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetTagStandardTagNamespaceTemplatesFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetTagsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
        :param Sequence[str] values: The list of allowed values for a definedTag value.
        """
        GetTagsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        The list of allowed values for a definedTag value.
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetUserGroupMembershipsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        GetUserGroupMembershipsFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


@pulumi.input_type
class GetUsersFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: A filter to only return resources that match the given name exactly.
        """
        GetUsersFilterArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            values=values,
            regex=regex,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             values: Sequence[str],
             regex: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        _setter("values", values)
        if regex is not None:
            _setter("regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A filter to only return resources that match the given name exactly.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")

    @regex.setter
    def regex(self, value: Optional[bool]):
        pulumi.set(self, "regex", value)


