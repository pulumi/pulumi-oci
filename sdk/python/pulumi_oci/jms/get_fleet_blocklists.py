# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetFleetBlocklistsResult',
    'AwaitableGetFleetBlocklistsResult',
    'get_fleet_blocklists',
    'get_fleet_blocklists_output',
]

@pulumi.output_type
class GetFleetBlocklistsResult:
    """
    A collection of values returned by getFleetBlocklists.
    """
    def __init__(__self__, filters=None, fleet_id=None, id=None, items=None, managed_instance_id=None, operation=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if fleet_id and not isinstance(fleet_id, str):
            raise TypeError("Expected argument 'fleet_id' to be a str")
        pulumi.set(__self__, "fleet_id", fleet_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if managed_instance_id and not isinstance(managed_instance_id, str):
            raise TypeError("Expected argument 'managed_instance_id' to be a str")
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        if operation and not isinstance(operation, str):
            raise TypeError("Expected argument 'operation' to be a str")
        pulumi.set(__self__, "operation", operation)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetFleetBlocklistsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet.
        """
        return pulumi.get(self, "fleet_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetBlocklistsItemResult']:
        """
        The blocklist
        """
        return pulumi.get(self, "items")

    @property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> Optional[str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @property
    @pulumi.getter
    def operation(self) -> Optional[str]:
        """
        The operation type
        """
        return pulumi.get(self, "operation")


class AwaitableGetFleetBlocklistsResult(GetFleetBlocklistsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFleetBlocklistsResult(
            filters=self.filters,
            fleet_id=self.fleet_id,
            id=self.id,
            items=self.items,
            managed_instance_id=self.managed_instance_id,
            operation=self.operation)


def get_fleet_blocklists(filters: Optional[Sequence[pulumi.InputType['GetFleetBlocklistsFilterArgs']]] = None,
                         fleet_id: Optional[str] = None,
                         managed_instance_id: Optional[str] = None,
                         operation: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFleetBlocklistsResult:
    """
    This data source provides the list of Fleet Blocklists in Oracle Cloud Infrastructure Jms service.

    Returns a list of blocklist entities contained by a fleet.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_fleet_blocklists = oci.Jms.get_fleet_blocklists(fleet_id=oci_jms_fleet["test_fleet"]["id"],
        managed_instance_id=oci_osmanagement_managed_instance["test_managed_instance"]["id"],
        operation=var["fleet_blocklist_operation"])
    ```


    :param str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
    :param str managed_instance_id: The Fleet-unique identifier of the related managed instance.
    :param str operation: The operation type.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['fleetId'] = fleet_id
    __args__['managedInstanceId'] = managed_instance_id
    __args__['operation'] = operation
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Jms/getFleetBlocklists:getFleetBlocklists', __args__, opts=opts, typ=GetFleetBlocklistsResult).value

    return AwaitableGetFleetBlocklistsResult(
        filters=pulumi.get(__ret__, 'filters'),
        fleet_id=pulumi.get(__ret__, 'fleet_id'),
        id=pulumi.get(__ret__, 'id'),
        items=pulumi.get(__ret__, 'items'),
        managed_instance_id=pulumi.get(__ret__, 'managed_instance_id'),
        operation=pulumi.get(__ret__, 'operation'))


@_utilities.lift_output_func(get_fleet_blocklists)
def get_fleet_blocklists_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetFleetBlocklistsFilterArgs']]]]] = None,
                                fleet_id: Optional[pulumi.Input[str]] = None,
                                managed_instance_id: Optional[pulumi.Input[Optional[str]]] = None,
                                operation: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFleetBlocklistsResult]:
    """
    This data source provides the list of Fleet Blocklists in Oracle Cloud Infrastructure Jms service.

    Returns a list of blocklist entities contained by a fleet.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_fleet_blocklists = oci.Jms.get_fleet_blocklists(fleet_id=oci_jms_fleet["test_fleet"]["id"],
        managed_instance_id=oci_osmanagement_managed_instance["test_managed_instance"]["id"],
        operation=var["fleet_blocklist_operation"])
    ```


    :param str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
    :param str managed_instance_id: The Fleet-unique identifier of the related managed instance.
    :param str operation: The operation type.
    """
    ...
