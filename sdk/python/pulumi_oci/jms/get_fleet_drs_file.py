# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetFleetDrsFileResult',
    'AwaitableGetFleetDrsFileResult',
    'get_fleet_drs_file',
    'get_fleet_drs_file_output',
]

@pulumi.output_type
class GetFleetDrsFileResult:
    """
    A collection of values returned by getFleetDrsFile.
    """
    def __init__(__self__, bucket=None, checksum_type=None, checksum_value=None, drs_file_key=None, drs_file_name=None, fleet_id=None, id=None, is_default=None, namespace=None):
        if bucket and not isinstance(bucket, str):
            raise TypeError("Expected argument 'bucket' to be a str")
        pulumi.set(__self__, "bucket", bucket)
        if checksum_type and not isinstance(checksum_type, str):
            raise TypeError("Expected argument 'checksum_type' to be a str")
        pulumi.set(__self__, "checksum_type", checksum_type)
        if checksum_value and not isinstance(checksum_value, str):
            raise TypeError("Expected argument 'checksum_value' to be a str")
        pulumi.set(__self__, "checksum_value", checksum_value)
        if drs_file_key and not isinstance(drs_file_key, str):
            raise TypeError("Expected argument 'drs_file_key' to be a str")
        pulumi.set(__self__, "drs_file_key", drs_file_key)
        if drs_file_name and not isinstance(drs_file_name, str):
            raise TypeError("Expected argument 'drs_file_name' to be a str")
        pulumi.set(__self__, "drs_file_name", drs_file_name)
        if fleet_id and not isinstance(fleet_id, str):
            raise TypeError("Expected argument 'fleet_id' to be a str")
        pulumi.set(__self__, "fleet_id", fleet_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if is_default and not isinstance(is_default, bool):
            raise TypeError("Expected argument 'is_default' to be a bool")
        pulumi.set(__self__, "is_default", is_default)
        if namespace and not isinstance(namespace, str):
            raise TypeError("Expected argument 'namespace' to be a str")
        pulumi.set(__self__, "namespace", namespace)

    @property
    @pulumi.getter
    def bucket(self) -> str:
        """
        The Object Storage bucket name where the DRS file is located.
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter(name="checksumType")
    def checksum_type(self) -> str:
        """
        The checksum type for the DRS file in Object Storage.
        """
        return pulumi.get(self, "checksum_type")

    @property
    @pulumi.getter(name="checksumValue")
    def checksum_value(self) -> str:
        """
        The checksum value for the DRS file in Object Storage.
        """
        return pulumi.get(self, "checksum_value")

    @property
    @pulumi.getter(name="drsFileKey")
    def drs_file_key(self) -> str:
        """
        The unique identifier of the DRS file in Object Storage.
        """
        return pulumi.get(self, "drs_file_key")

    @property
    @pulumi.getter(name="drsFileName")
    def drs_file_name(self) -> str:
        """
        The name of the DRS file in Object Store.
        """
        return pulumi.get(self, "drs_file_name")

    @property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> str:
        return pulumi.get(self, "fleet_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isDefault")
    def is_default(self) -> bool:
        """
        To check if the DRS file is the detfault ones.
        """
        return pulumi.get(self, "is_default")

    @property
    @pulumi.getter
    def namespace(self) -> str:
        """
        The namespace for Object Storage.
        """
        return pulumi.get(self, "namespace")


class AwaitableGetFleetDrsFileResult(GetFleetDrsFileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFleetDrsFileResult(
            bucket=self.bucket,
            checksum_type=self.checksum_type,
            checksum_value=self.checksum_value,
            drs_file_key=self.drs_file_key,
            drs_file_name=self.drs_file_name,
            fleet_id=self.fleet_id,
            id=self.id,
            is_default=self.is_default,
            namespace=self.namespace)


def get_fleet_drs_file(drs_file_key: Optional[str] = None,
                       fleet_id: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFleetDrsFileResult:
    """
    This data source provides details about a specific Fleet Drs File resource in Oracle Cloud Infrastructure Jms service.

    Get the detail about the created DRS file in the Fleet.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_fleet_drs_file = oci.Jms.get_fleet_drs_file(drs_file_key=var["fleet_drs_file_drs_file_key"],
        fleet_id=oci_jms_fleet["test_fleet"]["id"])
    ```


    :param str drs_file_key: The unique identifier of the DRS File in Object Storage.
    :param str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
    """
    __args__ = dict()
    __args__['drsFileKey'] = drs_file_key
    __args__['fleetId'] = fleet_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Jms/getFleetDrsFile:getFleetDrsFile', __args__, opts=opts, typ=GetFleetDrsFileResult).value

    return AwaitableGetFleetDrsFileResult(
        bucket=pulumi.get(__ret__, 'bucket'),
        checksum_type=pulumi.get(__ret__, 'checksum_type'),
        checksum_value=pulumi.get(__ret__, 'checksum_value'),
        drs_file_key=pulumi.get(__ret__, 'drs_file_key'),
        drs_file_name=pulumi.get(__ret__, 'drs_file_name'),
        fleet_id=pulumi.get(__ret__, 'fleet_id'),
        id=pulumi.get(__ret__, 'id'),
        is_default=pulumi.get(__ret__, 'is_default'),
        namespace=pulumi.get(__ret__, 'namespace'))


@_utilities.lift_output_func(get_fleet_drs_file)
def get_fleet_drs_file_output(drs_file_key: Optional[pulumi.Input[str]] = None,
                              fleet_id: Optional[pulumi.Input[str]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFleetDrsFileResult]:
    """
    This data source provides details about a specific Fleet Drs File resource in Oracle Cloud Infrastructure Jms service.

    Get the detail about the created DRS file in the Fleet.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_fleet_drs_file = oci.Jms.get_fleet_drs_file(drs_file_key=var["fleet_drs_file_drs_file_key"],
        fleet_id=oci_jms_fleet["test_fleet"]["id"])
    ```


    :param str drs_file_key: The unique identifier of the DRS File in Object Storage.
    :param str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
    """
    ...
