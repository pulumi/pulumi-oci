# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetFleetErrorsResult',
    'AwaitableGetFleetErrorsResult',
    'get_fleet_errors',
    'get_fleet_errors_output',
]

@pulumi.output_type
class GetFleetErrorsResult:
    """
    A collection of values returned by getFleetErrors.
    """
    def __init__(__self__, compartment_id=None, compartment_id_in_subtree=None, filters=None, fleet_error_collections=None, fleet_id=None, id=None, time_first_seen_greater_than_or_equal_to=None, time_first_seen_less_than_or_equal_to=None, time_last_seen_greater_than_or_equal_to=None, time_last_seen_less_than_or_equal_to=None):
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if compartment_id_in_subtree and not isinstance(compartment_id_in_subtree, bool):
            raise TypeError("Expected argument 'compartment_id_in_subtree' to be a bool")
        pulumi.set(__self__, "compartment_id_in_subtree", compartment_id_in_subtree)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if fleet_error_collections and not isinstance(fleet_error_collections, list):
            raise TypeError("Expected argument 'fleet_error_collections' to be a list")
        pulumi.set(__self__, "fleet_error_collections", fleet_error_collections)
        if fleet_id and not isinstance(fleet_id, str):
            raise TypeError("Expected argument 'fleet_id' to be a str")
        pulumi.set(__self__, "fleet_id", fleet_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if time_first_seen_greater_than_or_equal_to and not isinstance(time_first_seen_greater_than_or_equal_to, str):
            raise TypeError("Expected argument 'time_first_seen_greater_than_or_equal_to' to be a str")
        pulumi.set(__self__, "time_first_seen_greater_than_or_equal_to", time_first_seen_greater_than_or_equal_to)
        if time_first_seen_less_than_or_equal_to and not isinstance(time_first_seen_less_than_or_equal_to, str):
            raise TypeError("Expected argument 'time_first_seen_less_than_or_equal_to' to be a str")
        pulumi.set(__self__, "time_first_seen_less_than_or_equal_to", time_first_seen_less_than_or_equal_to)
        if time_last_seen_greater_than_or_equal_to and not isinstance(time_last_seen_greater_than_or_equal_to, str):
            raise TypeError("Expected argument 'time_last_seen_greater_than_or_equal_to' to be a str")
        pulumi.set(__self__, "time_last_seen_greater_than_or_equal_to", time_last_seen_greater_than_or_equal_to)
        if time_last_seen_less_than_or_equal_to and not isinstance(time_last_seen_less_than_or_equal_to, str):
            raise TypeError("Expected argument 'time_last_seen_less_than_or_equal_to' to be a str")
        pulumi.set(__self__, "time_last_seen_less_than_or_equal_to", time_last_seen_less_than_or_equal_to)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[str]:
        """
        The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="compartmentIdInSubtree")
    def compartment_id_in_subtree(self) -> Optional[bool]:
        return pulumi.get(self, "compartment_id_in_subtree")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetFleetErrorsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter(name="fleetErrorCollections")
    def fleet_error_collections(self) -> Sequence['outputs.GetFleetErrorsFleetErrorCollectionResult']:
        """
        The list of fleet_error_collection.
        """
        return pulumi.get(self, "fleet_error_collections")

    @property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> Optional[str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="timeFirstSeenGreaterThanOrEqualTo")
    def time_first_seen_greater_than_or_equal_to(self) -> Optional[str]:
        return pulumi.get(self, "time_first_seen_greater_than_or_equal_to")

    @property
    @pulumi.getter(name="timeFirstSeenLessThanOrEqualTo")
    def time_first_seen_less_than_or_equal_to(self) -> Optional[str]:
        return pulumi.get(self, "time_first_seen_less_than_or_equal_to")

    @property
    @pulumi.getter(name="timeLastSeenGreaterThanOrEqualTo")
    def time_last_seen_greater_than_or_equal_to(self) -> Optional[str]:
        return pulumi.get(self, "time_last_seen_greater_than_or_equal_to")

    @property
    @pulumi.getter(name="timeLastSeenLessThanOrEqualTo")
    def time_last_seen_less_than_or_equal_to(self) -> Optional[str]:
        return pulumi.get(self, "time_last_seen_less_than_or_equal_to")


class AwaitableGetFleetErrorsResult(GetFleetErrorsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFleetErrorsResult(
            compartment_id=self.compartment_id,
            compartment_id_in_subtree=self.compartment_id_in_subtree,
            filters=self.filters,
            fleet_error_collections=self.fleet_error_collections,
            fleet_id=self.fleet_id,
            id=self.id,
            time_first_seen_greater_than_or_equal_to=self.time_first_seen_greater_than_or_equal_to,
            time_first_seen_less_than_or_equal_to=self.time_first_seen_less_than_or_equal_to,
            time_last_seen_greater_than_or_equal_to=self.time_last_seen_greater_than_or_equal_to,
            time_last_seen_less_than_or_equal_to=self.time_last_seen_less_than_or_equal_to)


def get_fleet_errors(compartment_id: Optional[str] = None,
                     compartment_id_in_subtree: Optional[bool] = None,
                     filters: Optional[Sequence[Union['GetFleetErrorsFilterArgs', 'GetFleetErrorsFilterArgsDict']]] = None,
                     fleet_id: Optional[str] = None,
                     time_first_seen_greater_than_or_equal_to: Optional[str] = None,
                     time_first_seen_less_than_or_equal_to: Optional[str] = None,
                     time_last_seen_greater_than_or_equal_to: Optional[str] = None,
                     time_last_seen_less_than_or_equal_to: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFleetErrorsResult:
    """
    This data source provides the list of Fleet Errors in Oracle Cloud Infrastructure Jms service.

    Returns a list of fleet errors that describe all detected errors.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_fleet_errors = oci.Jms.get_fleet_errors(compartment_id=compartment_id,
        compartment_id_in_subtree=fleet_error_compartment_id_in_subtree,
        fleet_id=test_fleet["id"],
        time_first_seen_greater_than_or_equal_to=fleet_error_time_first_seen_greater_than_or_equal_to,
        time_first_seen_less_than_or_equal_to=fleet_error_time_first_seen_less_than_or_equal_to,
        time_last_seen_greater_than_or_equal_to=fleet_error_time_last_seen_greater_than_or_equal_to,
        time_last_seen_less_than_or_equal_to=fleet_error_time_last_seen_less_than_or_equal_to)
    ```


    :param str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    :param bool compartment_id_in_subtree: Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
    :param str fleet_id: The ID of the Fleet.
    :param str time_first_seen_greater_than_or_equal_to: If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
    :param str time_first_seen_less_than_or_equal_to: If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
    :param str time_last_seen_greater_than_or_equal_to: If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
    :param str time_last_seen_less_than_or_equal_to: If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['compartmentIdInSubtree'] = compartment_id_in_subtree
    __args__['filters'] = filters
    __args__['fleetId'] = fleet_id
    __args__['timeFirstSeenGreaterThanOrEqualTo'] = time_first_seen_greater_than_or_equal_to
    __args__['timeFirstSeenLessThanOrEqualTo'] = time_first_seen_less_than_or_equal_to
    __args__['timeLastSeenGreaterThanOrEqualTo'] = time_last_seen_greater_than_or_equal_to
    __args__['timeLastSeenLessThanOrEqualTo'] = time_last_seen_less_than_or_equal_to
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Jms/getFleetErrors:getFleetErrors', __args__, opts=opts, typ=GetFleetErrorsResult).value

    return AwaitableGetFleetErrorsResult(
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        compartment_id_in_subtree=pulumi.get(__ret__, 'compartment_id_in_subtree'),
        filters=pulumi.get(__ret__, 'filters'),
        fleet_error_collections=pulumi.get(__ret__, 'fleet_error_collections'),
        fleet_id=pulumi.get(__ret__, 'fleet_id'),
        id=pulumi.get(__ret__, 'id'),
        time_first_seen_greater_than_or_equal_to=pulumi.get(__ret__, 'time_first_seen_greater_than_or_equal_to'),
        time_first_seen_less_than_or_equal_to=pulumi.get(__ret__, 'time_first_seen_less_than_or_equal_to'),
        time_last_seen_greater_than_or_equal_to=pulumi.get(__ret__, 'time_last_seen_greater_than_or_equal_to'),
        time_last_seen_less_than_or_equal_to=pulumi.get(__ret__, 'time_last_seen_less_than_or_equal_to'))
def get_fleet_errors_output(compartment_id: Optional[pulumi.Input[Optional[str]]] = None,
                            compartment_id_in_subtree: Optional[pulumi.Input[Optional[bool]]] = None,
                            filters: Optional[pulumi.Input[Optional[Sequence[Union['GetFleetErrorsFilterArgs', 'GetFleetErrorsFilterArgsDict']]]]] = None,
                            fleet_id: Optional[pulumi.Input[Optional[str]]] = None,
                            time_first_seen_greater_than_or_equal_to: Optional[pulumi.Input[Optional[str]]] = None,
                            time_first_seen_less_than_or_equal_to: Optional[pulumi.Input[Optional[str]]] = None,
                            time_last_seen_greater_than_or_equal_to: Optional[pulumi.Input[Optional[str]]] = None,
                            time_last_seen_less_than_or_equal_to: Optional[pulumi.Input[Optional[str]]] = None,
                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetFleetErrorsResult]:
    """
    This data source provides the list of Fleet Errors in Oracle Cloud Infrastructure Jms service.

    Returns a list of fleet errors that describe all detected errors.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_fleet_errors = oci.Jms.get_fleet_errors(compartment_id=compartment_id,
        compartment_id_in_subtree=fleet_error_compartment_id_in_subtree,
        fleet_id=test_fleet["id"],
        time_first_seen_greater_than_or_equal_to=fleet_error_time_first_seen_greater_than_or_equal_to,
        time_first_seen_less_than_or_equal_to=fleet_error_time_first_seen_less_than_or_equal_to,
        time_last_seen_greater_than_or_equal_to=fleet_error_time_last_seen_greater_than_or_equal_to,
        time_last_seen_less_than_or_equal_to=fleet_error_time_last_seen_less_than_or_equal_to)
    ```


    :param str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
    :param bool compartment_id_in_subtree: Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
    :param str fleet_id: The ID of the Fleet.
    :param str time_first_seen_greater_than_or_equal_to: If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
    :param str time_first_seen_less_than_or_equal_to: If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
    :param str time_last_seen_greater_than_or_equal_to: If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
    :param str time_last_seen_less_than_or_equal_to: If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['compartmentIdInSubtree'] = compartment_id_in_subtree
    __args__['filters'] = filters
    __args__['fleetId'] = fleet_id
    __args__['timeFirstSeenGreaterThanOrEqualTo'] = time_first_seen_greater_than_or_equal_to
    __args__['timeFirstSeenLessThanOrEqualTo'] = time_first_seen_less_than_or_equal_to
    __args__['timeLastSeenGreaterThanOrEqualTo'] = time_last_seen_greater_than_or_equal_to
    __args__['timeLastSeenLessThanOrEqualTo'] = time_last_seen_less_than_or_equal_to
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:Jms/getFleetErrors:getFleetErrors', __args__, opts=opts, typ=GetFleetErrorsResult)
    return __ret__.apply(lambda __response__: GetFleetErrorsResult(
        compartment_id=pulumi.get(__response__, 'compartment_id'),
        compartment_id_in_subtree=pulumi.get(__response__, 'compartment_id_in_subtree'),
        filters=pulumi.get(__response__, 'filters'),
        fleet_error_collections=pulumi.get(__response__, 'fleet_error_collections'),
        fleet_id=pulumi.get(__response__, 'fleet_id'),
        id=pulumi.get(__response__, 'id'),
        time_first_seen_greater_than_or_equal_to=pulumi.get(__response__, 'time_first_seen_greater_than_or_equal_to'),
        time_first_seen_less_than_or_equal_to=pulumi.get(__response__, 'time_first_seen_less_than_or_equal_to'),
        time_last_seen_greater_than_or_equal_to=pulumi.get(__response__, 'time_last_seen_greater_than_or_equal_to'),
        time_last_seen_less_than_or_equal_to=pulumi.get(__response__, 'time_last_seen_less_than_or_equal_to')))
