# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'FleetAdvancedFeatureConfigurationAdvancedUsageTracking',
    'FleetAdvancedFeatureConfigurationCryptoEventAnalysis',
    'FleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLog',
    'FleetAdvancedFeatureConfigurationJavaMigrationAnalysis',
    'FleetAdvancedFeatureConfigurationJfrRecording',
    'FleetAdvancedFeatureConfigurationLcm',
    'FleetAdvancedFeatureConfigurationLcmPostInstallationActions',
    'FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettings',
    'FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpath',
    'FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJar',
    'FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTl',
    'FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxies',
    'FleetAdvancedFeatureConfigurationPerformanceTuningAnalysis',
    'FleetInventoryLog',
    'FleetOperationLog',
    'JavaDownloadsJavaDownloadReportCreatedBy',
    'JavaDownloadsJavaDownloadTokenCreatedBy',
    'JavaDownloadsJavaDownloadTokenLastUpdatedBy',
    'JavaDownloadsJavaLicenseAcceptanceRecordCreatedBy',
    'JavaDownloadsJavaLicenseAcceptanceRecordLastUpdatedBy',
    'TaskScheduleTaskDetails',
    'TaskScheduleTaskDetailsAddInstallationSiteTaskRequest',
    'TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite',
    'TaskScheduleTaskDetailsCryptoTaskRequest',
    'TaskScheduleTaskDetailsCryptoTaskRequestTarget',
    'TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequest',
    'TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTarget',
    'TaskScheduleTaskDetailsJavaMigrationTaskRequest',
    'TaskScheduleTaskDetailsJavaMigrationTaskRequestTarget',
    'TaskScheduleTaskDetailsJfrTaskRequest',
    'TaskScheduleTaskDetailsJfrTaskRequestTarget',
    'TaskScheduleTaskDetailsPerformanceTuningTaskRequest',
    'TaskScheduleTaskDetailsPerformanceTuningTaskRequestTarget',
    'TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest',
    'TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSite',
    'TaskScheduleTaskDetailsScanJavaServerTaskRequest',
    'TaskScheduleTaskDetailsScanLibraryTaskRequest',
    'GetAgentInstallersAgentInstallerCollectionResult',
    'GetAgentInstallersAgentInstallerCollectionItemResult',
    'GetAgentInstallersFilterResult',
    'GetAnnouncementsAnnouncementCollectionResult',
    'GetAnnouncementsAnnouncementCollectionItemResult',
    'GetAnnouncementsFilterResult',
    'GetFleetAdvancedFeatureConfigurationAdvancedUsageTrackingResult',
    'GetFleetAdvancedFeatureConfigurationCryptoEventAnalysisResult',
    'GetFleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLogResult',
    'GetFleetAdvancedFeatureConfigurationJavaMigrationAnalysisResult',
    'GetFleetAdvancedFeatureConfigurationJfrRecordingResult',
    'GetFleetAdvancedFeatureConfigurationLcmResult',
    'GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionResult',
    'GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingResult',
    'GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingCertpathResult',
    'GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingJarResult',
    'GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingTlResult',
    'GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxyResult',
    'GetFleetAdvancedFeatureConfigurationPerformanceTuningAnalysisResult',
    'GetFleetBlocklistsFilterResult',
    'GetFleetBlocklistsItemResult',
    'GetFleetBlocklistsItemTargetResult',
    'GetFleetContainersContainerCollectionResult',
    'GetFleetContainersContainerCollectionItemResult',
    'GetFleetContainersFilterResult',
    'GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionResult',
    'GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionItemResult',
    'GetFleetCryptoAnalysisResultsFilterResult',
    'GetFleetDiagnosesFilterResult',
    'GetFleetDiagnosesFleetDiagnosisCollectionResult',
    'GetFleetDiagnosesFleetDiagnosisCollectionItemResult',
    'GetFleetDrsFilesDrsFileCollectionResult',
    'GetFleetDrsFilesDrsFileCollectionItemResult',
    'GetFleetDrsFilesFilterResult',
    'GetFleetErrorAnalyticsFilterResult',
    'GetFleetErrorAnalyticsFleetErrorAggregationCollectionResult',
    'GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemResult',
    'GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemFleetErrorAggregationResult',
    'GetFleetErrorsFilterResult',
    'GetFleetErrorsFleetErrorCollectionResult',
    'GetFleetErrorsFleetErrorCollectionItemResult',
    'GetFleetErrorsFleetErrorCollectionItemErrorResult',
    'GetFleetExportSettingExportDataFilterResult',
    'GetFleetInventoryLogResult',
    'GetFleetJavaMigrationAnalysisResultsFilterResult',
    'GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionResult',
    'GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItemResult',
    'GetFleetLibraryApplicationsFilterResult',
    'GetFleetLibraryApplicationsLibraryApplicationUsageCollectionResult',
    'GetFleetLibraryApplicationsLibraryApplicationUsageCollectionItemResult',
    'GetFleetLibraryManagedInstancesFilterResult',
    'GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionResult',
    'GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItemResult',
    'GetFleetOperationLogResult',
    'GetFleetPerformanceTuningAnalysisResultsFilterResult',
    'GetFleetPerformanceTuningAnalysisResultsPerformanceTuningAnalysisResultCollectionResult',
    'GetFleetPerformanceTuningAnalysisResultsPerformanceTuningAnalysisResultCollectionItemResult',
    'GetFleetUncorrelatedPackageApplicationsFilterResult',
    'GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionResult',
    'GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItemResult',
    'GetFleetUncorrelatedPackageManagedInstancesFilterResult',
    'GetFleetUncorrelatedPackageManagedInstancesUncorrelatedPackageManagedInstanceUsageCollectionResult',
    'GetFleetUncorrelatedPackageManagedInstancesUncorrelatedPackageManagedInstanceUsageCollectionItemResult',
    'GetFleetUncorrelatedPackagesFilterResult',
    'GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionResult',
    'GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItemResult',
    'GetFleetsFilterResult',
    'GetFleetsFleetCollectionResult',
    'GetFleetsFleetCollectionItemResult',
    'GetFleetsFleetCollectionItemInventoryLogResult',
    'GetFleetsFleetCollectionItemOperationLogResult',
    'GetInstallationSiteItemResult',
    'GetInstallationSiteItemBlocklistResult',
    'GetInstallationSiteItemJreResult',
    'GetInstallationSiteItemOperatingSystemResult',
    'GetInstallationSitesFilterResult',
    'GetInstallationSitesInstallationSiteCollectionResult',
    'GetInstallationSitesInstallationSiteCollectionItemResult',
    'GetInstallationSitesInstallationSiteCollectionItemBlocklistResult',
    'GetInstallationSitesInstallationSiteCollectionItemJreResult',
    'GetInstallationSitesInstallationSiteCollectionItemOperatingSystemResult',
    'GetJavaDownloadsJavaDownloadRecordsFilterResult',
    'GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionResult',
    'GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItemResult',
    'GetJavaDownloadsJavaDownloadReportCreatedByResult',
    'GetJavaDownloadsJavaDownloadReportsFilterResult',
    'GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionResult',
    'GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionItemResult',
    'GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionItemCreatedByResult',
    'GetJavaDownloadsJavaDownloadTokenCreatedByResult',
    'GetJavaDownloadsJavaDownloadTokenLastUpdatedByResult',
    'GetJavaDownloadsJavaDownloadTokensFilterResult',
    'GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionResult',
    'GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemResult',
    'GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemCreatedByResult',
    'GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemLastUpdatedByResult',
    'GetJavaDownloadsJavaLicenseAcceptanceRecordCreatedByResult',
    'GetJavaDownloadsJavaLicenseAcceptanceRecordLastUpdatedByResult',
    'GetJavaDownloadsJavaLicenseAcceptanceRecordsFilterResult',
    'GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionResult',
    'GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemResult',
    'GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemCreatedByResult',
    'GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemLastUpdatedByResult',
    'GetJavaDownloadsJavaLicensesFilterResult',
    'GetJavaDownloadsJavaLicensesJavaLicenseCollectionResult',
    'GetJavaDownloadsJavaLicensesJavaLicenseCollectionItemResult',
    'GetJavaFamiliesFilterResult',
    'GetJavaFamiliesJavaFamilyCollectionResult',
    'GetJavaFamiliesJavaFamilyCollectionItemResult',
    'GetJavaFamiliesJavaFamilyCollectionItemLatestReleaseArtifactResult',
    'GetJavaFamilyLatestReleaseArtifactResult',
    'GetJavaReleaseArtifactResult',
    'GetJavaReleaseFamilyDetailResult',
    'GetJavaReleaseFamilyDetailLatestReleaseArtifactResult',
    'GetJavaReleaseLicenseDetailResult',
    'GetJavaReleaseMosPatchResult',
    'GetJavaReleasesFilterResult',
    'GetJavaReleasesJavaReleaseCollectionResult',
    'GetJavaReleasesJavaReleaseCollectionItemResult',
    'GetJavaReleasesJavaReleaseCollectionItemArtifactResult',
    'GetJavaReleasesJavaReleaseCollectionItemFamilyDetailResult',
    'GetJavaReleasesJavaReleaseCollectionItemFamilyDetailLatestReleaseArtifactResult',
    'GetJavaReleasesJavaReleaseCollectionItemLicenseDetailResult',
    'GetJavaReleasesJavaReleaseCollectionItemMosPatchResult',
    'GetJmsPluginsFilterResult',
    'GetJmsPluginsJmsPluginCollectionResult',
    'GetJmsPluginsJmsPluginCollectionItemResult',
    'GetListJreUsageItemResult',
    'GetListJreUsageItemOperatingSystemResult',
    'GetPluginErrorAnalyticsFilterResult',
    'GetPluginErrorAnalyticsPluginErrorAggregationCollectionResult',
    'GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemResult',
    'GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregationResult',
    'GetPluginErrorsFilterResult',
    'GetPluginErrorsPluginErrorCollectionResult',
    'GetPluginErrorsPluginErrorCollectionItemResult',
    'GetPluginErrorsPluginErrorCollectionItemErrorResult',
    'GetTaskScheduleTaskDetailResult',
    'GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestResult',
    'GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSiteResult',
    'GetTaskScheduleTaskDetailCryptoTaskRequestResult',
    'GetTaskScheduleTaskDetailCryptoTaskRequestTargetResult',
    'GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestResult',
    'GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestTargetResult',
    'GetTaskScheduleTaskDetailJavaMigrationTaskRequestResult',
    'GetTaskScheduleTaskDetailJavaMigrationTaskRequestTargetResult',
    'GetTaskScheduleTaskDetailJfrTaskRequestResult',
    'GetTaskScheduleTaskDetailJfrTaskRequestTargetResult',
    'GetTaskScheduleTaskDetailPerformanceTuningTaskRequestResult',
    'GetTaskScheduleTaskDetailPerformanceTuningTaskRequestTargetResult',
    'GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestResult',
    'GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteResult',
    'GetTaskScheduleTaskDetailScanJavaServerTaskRequestResult',
    'GetTaskScheduleTaskDetailScanLibraryTaskRequestResult',
    'GetTaskSchedulesFilterResult',
    'GetTaskSchedulesTaskScheduleCollectionResult',
    'GetTaskSchedulesTaskScheduleCollectionItemResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestInstallationSiteResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestTargetResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestTargetResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTargetResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestTargetResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestTargetResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanJavaServerTaskRequestResult',
    'GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanLibraryTaskRequestResult',
    'GetUtilsJavaMigrationAnalysiCreatedByResult',
    'GetUtilsJavaMigrationAnalysisFilterResult',
    'GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionResult',
    'GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionItemResult',
    'GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionItemCreatedByResult',
    'GetUtilsPerformanceTuningAnalysiCreatedByResult',
    'GetUtilsPerformanceTuningAnalysisFilterResult',
    'GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionResult',
    'GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionItemResult',
    'GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionItemCreatedByResult',
]

@pulumi.output_type
class FleetAdvancedFeatureConfigurationAdvancedUsageTracking(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isEnabled":
            suggest = "is_enabled"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationAdvancedUsageTracking. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationAdvancedUsageTracking.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationAdvancedUsageTracking.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_enabled: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool is_enabled: (Updatable) AdvancedUsageTracking flag to store enabled or disabled status.
        """
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[_builtins.bool]:
        """
        (Updatable) AdvancedUsageTracking flag to store enabled or disabled status.
        """
        return pulumi.get(self, "is_enabled")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationCryptoEventAnalysis(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isEnabled":
            suggest = "is_enabled"
        elif key == "summarizedEventsLog":
            suggest = "summarized_events_log"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationCryptoEventAnalysis. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationCryptoEventAnalysis.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationCryptoEventAnalysis.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_enabled: Optional[_builtins.bool] = None,
                 summarized_events_log: Optional['outputs.FleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLog'] = None):
        """
        :param _builtins.bool is_enabled: (Updatable) CryptoEventAnalysis flag to store enabled or disabled status.
        :param 'FleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLogArgs' summarized_events_log: (Updatable) Summarized events log for advanced feature.
        """
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)
        if summarized_events_log is not None:
            pulumi.set(__self__, "summarized_events_log", summarized_events_log)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[_builtins.bool]:
        """
        (Updatable) CryptoEventAnalysis flag to store enabled or disabled status.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="summarizedEventsLog")
    def summarized_events_log(self) -> Optional['outputs.FleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLog']:
        """
        (Updatable) Summarized events log for advanced feature.
        """
        return pulumi.get(self, "summarized_events_log")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLog(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "logGroupId":
            suggest = "log_group_id"
        elif key == "logId":
            suggest = "log_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLog. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLog.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLog.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 log_group_id: _builtins.str,
                 log_id: _builtins.str):
        """
        :param _builtins.str log_group_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param _builtins.str log_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @_builtins.property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> _builtins.str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @_builtins.property
    @pulumi.getter(name="logId")
    def log_id(self) -> _builtins.str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationJavaMigrationAnalysis(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isEnabled":
            suggest = "is_enabled"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationJavaMigrationAnalysis. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationJavaMigrationAnalysis.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationJavaMigrationAnalysis.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_enabled: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool is_enabled: (Updatable) JavaMigrationAnalysis flag to store enabled or disabled status.
        """
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[_builtins.bool]:
        """
        (Updatable) JavaMigrationAnalysis flag to store enabled or disabled status.
        """
        return pulumi.get(self, "is_enabled")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationJfrRecording(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isEnabled":
            suggest = "is_enabled"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationJfrRecording. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationJfrRecording.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationJfrRecording.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_enabled: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool is_enabled: (Updatable) JfrRecording flag to store enabled or disabled status.
        """
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[_builtins.bool]:
        """
        (Updatable) JfrRecording flag to store enabled or disabled status.
        """
        return pulumi.get(self, "is_enabled")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationLcm(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isEnabled":
            suggest = "is_enabled"
        elif key == "postInstallationActions":
            suggest = "post_installation_actions"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationLcm. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationLcm.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationLcm.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_enabled: Optional[_builtins.bool] = None,
                 post_installation_actions: Optional['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActions'] = None):
        """
        :param _builtins.bool is_enabled: (Updatable) Lifecycle management flag to store enabled or disabled status.
        :param 'FleetAdvancedFeatureConfigurationLcmPostInstallationActionsArgs' post_installation_actions: (Updatable) List of available post actions you can execute after the successful Java installation.
        """
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)
        if post_installation_actions is not None:
            pulumi.set(__self__, "post_installation_actions", post_installation_actions)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[_builtins.bool]:
        """
        (Updatable) Lifecycle management flag to store enabled or disabled status.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="postInstallationActions")
    def post_installation_actions(self) -> Optional['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActions']:
        """
        (Updatable) List of available post actions you can execute after the successful Java installation.
        """
        return pulumi.get(self, "post_installation_actions")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationLcmPostInstallationActions(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "addLoggingHandler":
            suggest = "add_logging_handler"
        elif key == "disabledTlsVersions":
            suggest = "disabled_tls_versions"
        elif key == "globalLoggingLevel":
            suggest = "global_logging_level"
        elif key == "minimumKeySizeSettings":
            suggest = "minimum_key_size_settings"
        elif key == "shouldReplaceCertificatesOperatingSystem":
            suggest = "should_replace_certificates_operating_system"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationLcmPostInstallationActions. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActions.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActions.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 add_logging_handler: Optional[_builtins.bool] = None,
                 disabled_tls_versions: Optional[Sequence[_builtins.str]] = None,
                 global_logging_level: Optional[_builtins.str] = None,
                 minimum_key_size_settings: Optional['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettings'] = None,
                 proxies: Optional['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxies'] = None,
                 should_replace_certificates_operating_system: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool add_logging_handler: (Updatable) Sets FileHandler and ConsoleHandler as handlers in logging.properties file.
        :param Sequence[_builtins.str] disabled_tls_versions: (Updatable) The following post JRE installation actions are supported by the field:
               * Disable TLS 1.0 , TLS 1.1
        :param _builtins.str global_logging_level: (Updatable) Sets the logging level in logging.properties file.
        :param 'FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs' minimum_key_size_settings: (Updatable) test
        :param 'FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs' proxies: (Updatable) List of proxy properties to be configured in net.properties file.
        :param _builtins.bool should_replace_certificates_operating_system: (Updatable) Restores JDK root certificates with the certificates that are available in the operating system. The following action is supported by the field:
               * Replace JDK root certificates with a list provided by the operating system.
        """
        if add_logging_handler is not None:
            pulumi.set(__self__, "add_logging_handler", add_logging_handler)
        if disabled_tls_versions is not None:
            pulumi.set(__self__, "disabled_tls_versions", disabled_tls_versions)
        if global_logging_level is not None:
            pulumi.set(__self__, "global_logging_level", global_logging_level)
        if minimum_key_size_settings is not None:
            pulumi.set(__self__, "minimum_key_size_settings", minimum_key_size_settings)
        if proxies is not None:
            pulumi.set(__self__, "proxies", proxies)
        if should_replace_certificates_operating_system is not None:
            pulumi.set(__self__, "should_replace_certificates_operating_system", should_replace_certificates_operating_system)

    @_builtins.property
    @pulumi.getter(name="addLoggingHandler")
    def add_logging_handler(self) -> Optional[_builtins.bool]:
        """
        (Updatable) Sets FileHandler and ConsoleHandler as handlers in logging.properties file.
        """
        return pulumi.get(self, "add_logging_handler")

    @_builtins.property
    @pulumi.getter(name="disabledTlsVersions")
    def disabled_tls_versions(self) -> Optional[Sequence[_builtins.str]]:
        """
        (Updatable) The following post JRE installation actions are supported by the field:
        * Disable TLS 1.0 , TLS 1.1
        """
        return pulumi.get(self, "disabled_tls_versions")

    @_builtins.property
    @pulumi.getter(name="globalLoggingLevel")
    def global_logging_level(self) -> Optional[_builtins.str]:
        """
        (Updatable) Sets the logging level in logging.properties file.
        """
        return pulumi.get(self, "global_logging_level")

    @_builtins.property
    @pulumi.getter(name="minimumKeySizeSettings")
    def minimum_key_size_settings(self) -> Optional['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettings']:
        """
        (Updatable) test
        """
        return pulumi.get(self, "minimum_key_size_settings")

    @_builtins.property
    @pulumi.getter
    def proxies(self) -> Optional['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxies']:
        """
        (Updatable) List of proxy properties to be configured in net.properties file.
        """
        return pulumi.get(self, "proxies")

    @_builtins.property
    @pulumi.getter(name="shouldReplaceCertificatesOperatingSystem")
    def should_replace_certificates_operating_system(self) -> Optional[_builtins.bool]:
        """
        (Updatable) Restores JDK root certificates with the certificates that are available in the operating system. The following action is supported by the field:
        * Replace JDK root certificates with a list provided by the operating system.
        """
        return pulumi.get(self, "should_replace_certificates_operating_system")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettings(dict):
    def __init__(__self__, *,
                 certpaths: Optional[Sequence['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpath']] = None,
                 jars: Optional[Sequence['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJar']] = None,
                 tls: Optional[Sequence['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTl']] = None):
        """
        :param Sequence['FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpathArgs'] certpaths: (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.certpath.disabledAlgorithms will be updated with the following supported actions:
               * Changing minimum key length for RSA signed jars
               * Changing minimum key length for EC
               * Changing minimum key length for DSA
        :param Sequence['FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJarArgs'] jars: (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.jar.disabledAlgorithms will be updated with the following supported actions:
               * Changing minimum key length for RSA signed jars
               * Changing minimum key length for EC
               * Changing minimum key length for DSA
        :param Sequence['FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTlArgs'] tls: (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.tls.disabledAlgorithms will be updated with the following supported actions:
               * Changing minimum key length for Diffie-Hellman
        """
        if certpaths is not None:
            pulumi.set(__self__, "certpaths", certpaths)
        if jars is not None:
            pulumi.set(__self__, "jars", jars)
        if tls is not None:
            pulumi.set(__self__, "tls", tls)

    @_builtins.property
    @pulumi.getter
    def certpaths(self) -> Optional[Sequence['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpath']]:
        """
        (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.certpath.disabledAlgorithms will be updated with the following supported actions:
        * Changing minimum key length for RSA signed jars
        * Changing minimum key length for EC
        * Changing minimum key length for DSA
        """
        return pulumi.get(self, "certpaths")

    @_builtins.property
    @pulumi.getter
    def jars(self) -> Optional[Sequence['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJar']]:
        """
        (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.jar.disabledAlgorithms will be updated with the following supported actions:
        * Changing minimum key length for RSA signed jars
        * Changing minimum key length for EC
        * Changing minimum key length for DSA
        """
        return pulumi.get(self, "jars")

    @_builtins.property
    @pulumi.getter
    def tls(self) -> Optional[Sequence['outputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTl']]:
        """
        (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.tls.disabledAlgorithms will be updated with the following supported actions:
        * Changing minimum key length for Diffie-Hellman
        """
        return pulumi.get(self, "tls")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpath(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "keySize":
            suggest = "key_size"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpath. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpath.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpath.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 key_size: Optional[_builtins.int] = None,
                 name: Optional[_builtins.str] = None):
        """
        :param _builtins.int key_size: (Updatable) Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        :param _builtins.str name: (Updatable) The algorithm name.
        """
        if key_size is not None:
            pulumi.set(__self__, "key_size", key_size)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="keySize")
    def key_size(self) -> Optional[_builtins.int]:
        """
        (Updatable) Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        """
        return pulumi.get(self, "key_size")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        (Updatable) The algorithm name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJar(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "keySize":
            suggest = "key_size"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJar. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJar.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJar.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 key_size: Optional[_builtins.int] = None,
                 name: Optional[_builtins.str] = None):
        """
        :param _builtins.int key_size: (Updatable) Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        :param _builtins.str name: (Updatable) The algorithm name.
        """
        if key_size is not None:
            pulumi.set(__self__, "key_size", key_size)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="keySize")
    def key_size(self) -> Optional[_builtins.int]:
        """
        (Updatable) Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        """
        return pulumi.get(self, "key_size")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        (Updatable) The algorithm name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTl(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "keySize":
            suggest = "key_size"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTl. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTl.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTl.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 key_size: Optional[_builtins.int] = None,
                 name: Optional[_builtins.str] = None):
        """
        :param _builtins.int key_size: (Updatable) Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        :param _builtins.str name: (Updatable) The algorithm name.
        """
        if key_size is not None:
            pulumi.set(__self__, "key_size", key_size)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="keySize")
    def key_size(self) -> Optional[_builtins.int]:
        """
        (Updatable) Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        """
        return pulumi.get(self, "key_size")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        (Updatable) The algorithm name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxies(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "ftpProxyHost":
            suggest = "ftp_proxy_host"
        elif key == "ftpProxyPort":
            suggest = "ftp_proxy_port"
        elif key == "httpProxyHost":
            suggest = "http_proxy_host"
        elif key == "httpProxyPort":
            suggest = "http_proxy_port"
        elif key == "httpsProxyHost":
            suggest = "https_proxy_host"
        elif key == "httpsProxyPort":
            suggest = "https_proxy_port"
        elif key == "socksProxyHost":
            suggest = "socks_proxy_host"
        elif key == "socksProxyPort":
            suggest = "socks_proxy_port"
        elif key == "useSystemProxies":
            suggest = "use_system_proxies"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxies. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxies.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxies.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ftp_proxy_host: Optional[_builtins.str] = None,
                 ftp_proxy_port: Optional[_builtins.int] = None,
                 http_proxy_host: Optional[_builtins.str] = None,
                 http_proxy_port: Optional[_builtins.int] = None,
                 https_proxy_host: Optional[_builtins.str] = None,
                 https_proxy_port: Optional[_builtins.int] = None,
                 socks_proxy_host: Optional[_builtins.str] = None,
                 socks_proxy_port: Optional[_builtins.int] = None,
                 use_system_proxies: Optional[_builtins.bool] = None):
        """
        :param _builtins.str ftp_proxy_host: (Updatable) Ftp host to be set in net.properties file.
        :param _builtins.int ftp_proxy_port: (Updatable) Ftp port number to be set in net.properties file.
        :param _builtins.str http_proxy_host: (Updatable) Http host to be set in net.properties file.
        :param _builtins.int http_proxy_port: (Updatable) Http port number to be set in net.properties file.
        :param _builtins.str https_proxy_host: (Updatable) Https host to be set in net.properties file.
        :param _builtins.int https_proxy_port: (Updatable) Https port number to be set in net.properties file.
        :param _builtins.str socks_proxy_host: (Updatable) Socks host to be set in net.properties file.
        :param _builtins.int socks_proxy_port: (Updatable) Socks port number to be set in net.properties file.
        :param _builtins.bool use_system_proxies: (Updatable) Sets "java.net.useSystemProxies=true" in net.properties when they exist.
        """
        if ftp_proxy_host is not None:
            pulumi.set(__self__, "ftp_proxy_host", ftp_proxy_host)
        if ftp_proxy_port is not None:
            pulumi.set(__self__, "ftp_proxy_port", ftp_proxy_port)
        if http_proxy_host is not None:
            pulumi.set(__self__, "http_proxy_host", http_proxy_host)
        if http_proxy_port is not None:
            pulumi.set(__self__, "http_proxy_port", http_proxy_port)
        if https_proxy_host is not None:
            pulumi.set(__self__, "https_proxy_host", https_proxy_host)
        if https_proxy_port is not None:
            pulumi.set(__self__, "https_proxy_port", https_proxy_port)
        if socks_proxy_host is not None:
            pulumi.set(__self__, "socks_proxy_host", socks_proxy_host)
        if socks_proxy_port is not None:
            pulumi.set(__self__, "socks_proxy_port", socks_proxy_port)
        if use_system_proxies is not None:
            pulumi.set(__self__, "use_system_proxies", use_system_proxies)

    @_builtins.property
    @pulumi.getter(name="ftpProxyHost")
    def ftp_proxy_host(self) -> Optional[_builtins.str]:
        """
        (Updatable) Ftp host to be set in net.properties file.
        """
        return pulumi.get(self, "ftp_proxy_host")

    @_builtins.property
    @pulumi.getter(name="ftpProxyPort")
    def ftp_proxy_port(self) -> Optional[_builtins.int]:
        """
        (Updatable) Ftp port number to be set in net.properties file.
        """
        return pulumi.get(self, "ftp_proxy_port")

    @_builtins.property
    @pulumi.getter(name="httpProxyHost")
    def http_proxy_host(self) -> Optional[_builtins.str]:
        """
        (Updatable) Http host to be set in net.properties file.
        """
        return pulumi.get(self, "http_proxy_host")

    @_builtins.property
    @pulumi.getter(name="httpProxyPort")
    def http_proxy_port(self) -> Optional[_builtins.int]:
        """
        (Updatable) Http port number to be set in net.properties file.
        """
        return pulumi.get(self, "http_proxy_port")

    @_builtins.property
    @pulumi.getter(name="httpsProxyHost")
    def https_proxy_host(self) -> Optional[_builtins.str]:
        """
        (Updatable) Https host to be set in net.properties file.
        """
        return pulumi.get(self, "https_proxy_host")

    @_builtins.property
    @pulumi.getter(name="httpsProxyPort")
    def https_proxy_port(self) -> Optional[_builtins.int]:
        """
        (Updatable) Https port number to be set in net.properties file.
        """
        return pulumi.get(self, "https_proxy_port")

    @_builtins.property
    @pulumi.getter(name="socksProxyHost")
    def socks_proxy_host(self) -> Optional[_builtins.str]:
        """
        (Updatable) Socks host to be set in net.properties file.
        """
        return pulumi.get(self, "socks_proxy_host")

    @_builtins.property
    @pulumi.getter(name="socksProxyPort")
    def socks_proxy_port(self) -> Optional[_builtins.int]:
        """
        (Updatable) Socks port number to be set in net.properties file.
        """
        return pulumi.get(self, "socks_proxy_port")

    @_builtins.property
    @pulumi.getter(name="useSystemProxies")
    def use_system_proxies(self) -> Optional[_builtins.bool]:
        """
        (Updatable) Sets "java.net.useSystemProxies=true" in net.properties when they exist.
        """
        return pulumi.get(self, "use_system_proxies")


@pulumi.output_type
class FleetAdvancedFeatureConfigurationPerformanceTuningAnalysis(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isEnabled":
            suggest = "is_enabled"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetAdvancedFeatureConfigurationPerformanceTuningAnalysis. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetAdvancedFeatureConfigurationPerformanceTuningAnalysis.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetAdvancedFeatureConfigurationPerformanceTuningAnalysis.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_enabled: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool is_enabled: (Updatable) PerformanceTuningAnalysis flag to store enabled or disabled status
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[_builtins.bool]:
        """
        (Updatable) PerformanceTuningAnalysis flag to store enabled or disabled status


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "is_enabled")


@pulumi.output_type
class FleetInventoryLog(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "logGroupId":
            suggest = "log_group_id"
        elif key == "logId":
            suggest = "log_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetInventoryLog. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetInventoryLog.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetInventoryLog.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 log_group_id: _builtins.str,
                 log_id: _builtins.str):
        """
        :param _builtins.str log_group_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param _builtins.str log_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @_builtins.property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> _builtins.str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @_builtins.property
    @pulumi.getter(name="logId")
    def log_id(self) -> _builtins.str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class FleetOperationLog(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "logGroupId":
            suggest = "log_group_id"
        elif key == "logId":
            suggest = "log_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetOperationLog. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetOperationLog.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetOperationLog.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 log_group_id: _builtins.str,
                 log_id: _builtins.str):
        """
        :param _builtins.str log_group_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param _builtins.str log_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @_builtins.property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> _builtins.str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @_builtins.property
    @pulumi.getter(name="logId")
    def log_id(self) -> _builtins.str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class JavaDownloadsJavaDownloadReportCreatedBy(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in JavaDownloadsJavaDownloadReportCreatedBy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        JavaDownloadsJavaDownloadReportCreatedBy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        JavaDownloadsJavaDownloadReportCreatedBy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: Optional[_builtins.str] = None,
                 email: Optional[_builtins.str] = None,
                 id: Optional[_builtins.str] = None):
        """
        :param _builtins.str display_name: Display name for the Java download report.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java download report.
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if id is not None:
            pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[_builtins.str]:
        """
        Display name for the Java download report.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> Optional[_builtins.str]:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java download report.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class JavaDownloadsJavaDownloadTokenCreatedBy(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in JavaDownloadsJavaDownloadTokenCreatedBy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        JavaDownloadsJavaDownloadTokenCreatedBy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        JavaDownloadsJavaDownloadTokenCreatedBy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: Optional[_builtins.str] = None,
                 email: Optional[_builtins.str] = None,
                 id: Optional[_builtins.str] = None):
        """
        :param _builtins.str display_name: (Updatable) User provided display name of the JavaDownloadToken.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if id is not None:
            pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[_builtins.str]:
        """
        (Updatable) User provided display name of the JavaDownloadToken.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> Optional[_builtins.str]:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class JavaDownloadsJavaDownloadTokenLastUpdatedBy(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in JavaDownloadsJavaDownloadTokenLastUpdatedBy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        JavaDownloadsJavaDownloadTokenLastUpdatedBy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        JavaDownloadsJavaDownloadTokenLastUpdatedBy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: Optional[_builtins.str] = None,
                 email: Optional[_builtins.str] = None,
                 id: Optional[_builtins.str] = None):
        """
        :param _builtins.str display_name: (Updatable) User provided display name of the JavaDownloadToken.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if id is not None:
            pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[_builtins.str]:
        """
        (Updatable) User provided display name of the JavaDownloadToken.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> Optional[_builtins.str]:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class JavaDownloadsJavaLicenseAcceptanceRecordCreatedBy(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in JavaDownloadsJavaLicenseAcceptanceRecordCreatedBy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        JavaDownloadsJavaLicenseAcceptanceRecordCreatedBy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        JavaDownloadsJavaLicenseAcceptanceRecordCreatedBy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: Optional[_builtins.str] = None,
                 email: Optional[_builtins.str] = None,
                 id: Optional[_builtins.str] = None):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if id is not None:
            pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[_builtins.str]:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> Optional[_builtins.str]:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class JavaDownloadsJavaLicenseAcceptanceRecordLastUpdatedBy(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "displayName":
            suggest = "display_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in JavaDownloadsJavaLicenseAcceptanceRecordLastUpdatedBy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        JavaDownloadsJavaLicenseAcceptanceRecordLastUpdatedBy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        JavaDownloadsJavaLicenseAcceptanceRecordLastUpdatedBy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 display_name: Optional[_builtins.str] = None,
                 email: Optional[_builtins.str] = None,
                 id: Optional[_builtins.str] = None):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if id is not None:
            pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[_builtins.str]:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> Optional[_builtins.str]:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class TaskScheduleTaskDetails(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "taskType":
            suggest = "task_type"
        elif key == "addInstallationSiteTaskRequest":
            suggest = "add_installation_site_task_request"
        elif key == "cryptoTaskRequest":
            suggest = "crypto_task_request"
        elif key == "deployedApplicationMigrationTaskRequest":
            suggest = "deployed_application_migration_task_request"
        elif key == "javaMigrationTaskRequest":
            suggest = "java_migration_task_request"
        elif key == "jfrTaskRequest":
            suggest = "jfr_task_request"
        elif key == "performanceTuningTaskRequest":
            suggest = "performance_tuning_task_request"
        elif key == "removeInstallationSiteTaskRequest":
            suggest = "remove_installation_site_task_request"
        elif key == "scanJavaServerTaskRequest":
            suggest = "scan_java_server_task_request"
        elif key == "scanLibraryTaskRequest":
            suggest = "scan_library_task_request"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetails. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetails.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetails.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 task_type: _builtins.str,
                 add_installation_site_task_request: Optional['outputs.TaskScheduleTaskDetailsAddInstallationSiteTaskRequest'] = None,
                 crypto_task_request: Optional['outputs.TaskScheduleTaskDetailsCryptoTaskRequest'] = None,
                 deployed_application_migration_task_request: Optional['outputs.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequest'] = None,
                 java_migration_task_request: Optional['outputs.TaskScheduleTaskDetailsJavaMigrationTaskRequest'] = None,
                 jfr_task_request: Optional['outputs.TaskScheduleTaskDetailsJfrTaskRequest'] = None,
                 performance_tuning_task_request: Optional['outputs.TaskScheduleTaskDetailsPerformanceTuningTaskRequest'] = None,
                 remove_installation_site_task_request: Optional['outputs.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest'] = None,
                 scan_java_server_task_request: Optional['outputs.TaskScheduleTaskDetailsScanJavaServerTaskRequest'] = None,
                 scan_library_task_request: Optional['outputs.TaskScheduleTaskDetailsScanLibraryTaskRequest'] = None):
        """
        :param _builtins.str task_type: (Updatable) Type of task.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        :param 'TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs' add_installation_site_task_request: (Updatable) The list of Java installation sites to add.
        :param 'TaskScheduleTaskDetailsCryptoTaskRequestArgs' crypto_task_request: (Updatable) Details of the request to start a JFR crypto event analysis. When the targets aren't specified, then all managed instances currently in the fleet are selected.
        :param 'TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs' deployed_application_migration_task_request: (Updatable) Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
        :param 'TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs' java_migration_task_request: (Updatable) Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
        :param 'TaskScheduleTaskDetailsJfrTaskRequestArgs' jfr_task_request: (Updatable) Details of the request to start JFR recordings. When the targets aren't specified, then all managed instances currently in the Fleet are selected.
        :param 'TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs' performance_tuning_task_request: (Updatable) Details of the request to start a JFR performance tuning analysis.
        :param 'TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs' remove_installation_site_task_request: (Updatable) The list of Java installation sites to remove.
        :param 'TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs' scan_java_server_task_request: (Updatable) The list of managed instances to scan.
        :param 'TaskScheduleTaskDetailsScanLibraryTaskRequestArgs' scan_library_task_request: (Updatable) The list of managed instances to scan.
        """
        pulumi.set(__self__, "task_type", task_type)
        if add_installation_site_task_request is not None:
            pulumi.set(__self__, "add_installation_site_task_request", add_installation_site_task_request)
        if crypto_task_request is not None:
            pulumi.set(__self__, "crypto_task_request", crypto_task_request)
        if deployed_application_migration_task_request is not None:
            pulumi.set(__self__, "deployed_application_migration_task_request", deployed_application_migration_task_request)
        if java_migration_task_request is not None:
            pulumi.set(__self__, "java_migration_task_request", java_migration_task_request)
        if jfr_task_request is not None:
            pulumi.set(__self__, "jfr_task_request", jfr_task_request)
        if performance_tuning_task_request is not None:
            pulumi.set(__self__, "performance_tuning_task_request", performance_tuning_task_request)
        if remove_installation_site_task_request is not None:
            pulumi.set(__self__, "remove_installation_site_task_request", remove_installation_site_task_request)
        if scan_java_server_task_request is not None:
            pulumi.set(__self__, "scan_java_server_task_request", scan_java_server_task_request)
        if scan_library_task_request is not None:
            pulumi.set(__self__, "scan_library_task_request", scan_library_task_request)

    @_builtins.property
    @pulumi.getter(name="taskType")
    def task_type(self) -> _builtins.str:
        """
        (Updatable) Type of task.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "task_type")

    @_builtins.property
    @pulumi.getter(name="addInstallationSiteTaskRequest")
    def add_installation_site_task_request(self) -> Optional['outputs.TaskScheduleTaskDetailsAddInstallationSiteTaskRequest']:
        """
        (Updatable) The list of Java installation sites to add.
        """
        return pulumi.get(self, "add_installation_site_task_request")

    @_builtins.property
    @pulumi.getter(name="cryptoTaskRequest")
    def crypto_task_request(self) -> Optional['outputs.TaskScheduleTaskDetailsCryptoTaskRequest']:
        """
        (Updatable) Details of the request to start a JFR crypto event analysis. When the targets aren't specified, then all managed instances currently in the fleet are selected.
        """
        return pulumi.get(self, "crypto_task_request")

    @_builtins.property
    @pulumi.getter(name="deployedApplicationMigrationTaskRequest")
    def deployed_application_migration_task_request(self) -> Optional['outputs.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequest']:
        """
        (Updatable) Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
        """
        return pulumi.get(self, "deployed_application_migration_task_request")

    @_builtins.property
    @pulumi.getter(name="javaMigrationTaskRequest")
    def java_migration_task_request(self) -> Optional['outputs.TaskScheduleTaskDetailsJavaMigrationTaskRequest']:
        """
        (Updatable) Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
        """
        return pulumi.get(self, "java_migration_task_request")

    @_builtins.property
    @pulumi.getter(name="jfrTaskRequest")
    def jfr_task_request(self) -> Optional['outputs.TaskScheduleTaskDetailsJfrTaskRequest']:
        """
        (Updatable) Details of the request to start JFR recordings. When the targets aren't specified, then all managed instances currently in the Fleet are selected.
        """
        return pulumi.get(self, "jfr_task_request")

    @_builtins.property
    @pulumi.getter(name="performanceTuningTaskRequest")
    def performance_tuning_task_request(self) -> Optional['outputs.TaskScheduleTaskDetailsPerformanceTuningTaskRequest']:
        """
        (Updatable) Details of the request to start a JFR performance tuning analysis.
        """
        return pulumi.get(self, "performance_tuning_task_request")

    @_builtins.property
    @pulumi.getter(name="removeInstallationSiteTaskRequest")
    def remove_installation_site_task_request(self) -> Optional['outputs.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest']:
        """
        (Updatable) The list of Java installation sites to remove.
        """
        return pulumi.get(self, "remove_installation_site_task_request")

    @_builtins.property
    @pulumi.getter(name="scanJavaServerTaskRequest")
    def scan_java_server_task_request(self) -> Optional['outputs.TaskScheduleTaskDetailsScanJavaServerTaskRequest']:
        """
        (Updatable) The list of managed instances to scan.
        """
        return pulumi.get(self, "scan_java_server_task_request")

    @_builtins.property
    @pulumi.getter(name="scanLibraryTaskRequest")
    def scan_library_task_request(self) -> Optional['outputs.TaskScheduleTaskDetailsScanLibraryTaskRequest']:
        """
        (Updatable) The list of managed instances to scan.
        """
        return pulumi.get(self, "scan_library_task_request")


@pulumi.output_type
class TaskScheduleTaskDetailsAddInstallationSiteTaskRequest(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "installationSites":
            suggest = "installation_sites"
        elif key == "postInstallationActions":
            suggest = "post_installation_actions"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsAddInstallationSiteTaskRequest. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsAddInstallationSiteTaskRequest.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsAddInstallationSiteTaskRequest.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 installation_sites: Optional[Sequence['outputs.TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite']] = None,
                 post_installation_actions: Optional[Sequence[_builtins.str]] = None):
        """
        :param Sequence['TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs'] installation_sites: (Updatable) The list of installation sites to add.
        :param Sequence[_builtins.str] post_installation_actions: (Updatable) Optional list of post java installation actions
        """
        if installation_sites is not None:
            pulumi.set(__self__, "installation_sites", installation_sites)
        if post_installation_actions is not None:
            pulumi.set(__self__, "post_installation_actions", post_installation_actions)

    @_builtins.property
    @pulumi.getter(name="installationSites")
    def installation_sites(self) -> Optional[Sequence['outputs.TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite']]:
        """
        (Updatable) The list of installation sites to add.
        """
        return pulumi.get(self, "installation_sites")

    @_builtins.property
    @pulumi.getter(name="postInstallationActions")
    def post_installation_actions(self) -> Optional[Sequence[_builtins.str]]:
        """
        (Updatable) Optional list of post java installation actions
        """
        return pulumi.get(self, "post_installation_actions")


@pulumi.output_type
class TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "artifactContentType":
            suggest = "artifact_content_type"
        elif key == "forceInstall":
            suggest = "force_install"
        elif key == "headlessMode":
            suggest = "headless_mode"
        elif key == "installationPath":
            suggest = "installation_path"
        elif key == "managedInstanceId":
            suggest = "managed_instance_id"
        elif key == "releaseVersion":
            suggest = "release_version"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 artifact_content_type: Optional[_builtins.str] = None,
                 force_install: Optional[_builtins.bool] = None,
                 headless_mode: Optional[_builtins.bool] = None,
                 installation_path: Optional[_builtins.str] = None,
                 managed_instance_id: Optional[_builtins.str] = None,
                 release_version: Optional[_builtins.str] = None):
        """
        :param _builtins.str artifact_content_type: (Updatable) Artifact content type for the Java version.
        :param _builtins.bool force_install: (Updatable) Forces the installation request even if a more recent release is already present in the host.
        :param _builtins.bool headless_mode: (Updatable) Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
        :param _builtins.str installation_path: (Updatable) Custom path to install new Java installation site.
        :param _builtins.str managed_instance_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        :param _builtins.str release_version: (Updatable) The release version of the Java Runtime.
        """
        if artifact_content_type is not None:
            pulumi.set(__self__, "artifact_content_type", artifact_content_type)
        if force_install is not None:
            pulumi.set(__self__, "force_install", force_install)
        if headless_mode is not None:
            pulumi.set(__self__, "headless_mode", headless_mode)
        if installation_path is not None:
            pulumi.set(__self__, "installation_path", installation_path)
        if managed_instance_id is not None:
            pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        if release_version is not None:
            pulumi.set(__self__, "release_version", release_version)

    @_builtins.property
    @pulumi.getter(name="artifactContentType")
    def artifact_content_type(self) -> Optional[_builtins.str]:
        """
        (Updatable) Artifact content type for the Java version.
        """
        return pulumi.get(self, "artifact_content_type")

    @_builtins.property
    @pulumi.getter(name="forceInstall")
    def force_install(self) -> Optional[_builtins.bool]:
        """
        (Updatable) Forces the installation request even if a more recent release is already present in the host.
        """
        return pulumi.get(self, "force_install")

    @_builtins.property
    @pulumi.getter(name="headlessMode")
    def headless_mode(self) -> Optional[_builtins.bool]:
        """
        (Updatable) Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
        """
        return pulumi.get(self, "headless_mode")

    @_builtins.property
    @pulumi.getter(name="installationPath")
    def installation_path(self) -> Optional[_builtins.str]:
        """
        (Updatable) Custom path to install new Java installation site.
        """
        return pulumi.get(self, "installation_path")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> Optional[_builtins.str]:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="releaseVersion")
    def release_version(self) -> Optional[_builtins.str]:
        """
        (Updatable) The release version of the Java Runtime.
        """
        return pulumi.get(self, "release_version")


@pulumi.output_type
class TaskScheduleTaskDetailsCryptoTaskRequest(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "recordingDurationInMinutes":
            suggest = "recording_duration_in_minutes"
        elif key == "waitingPeriodInMinutes":
            suggest = "waiting_period_in_minutes"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsCryptoTaskRequest. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsCryptoTaskRequest.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsCryptoTaskRequest.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 recording_duration_in_minutes: Optional[_builtins.int] = None,
                 targets: Optional[Sequence['outputs.TaskScheduleTaskDetailsCryptoTaskRequestTarget']] = None,
                 waiting_period_in_minutes: Optional[_builtins.int] = None):
        """
        :param _builtins.int recording_duration_in_minutes: (Updatable) Duration of the JFR recording in minutes.
        :param Sequence['TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs'] targets: (Updatable) The attachment targets to start JFR.
        :param _builtins.int waiting_period_in_minutes: (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        if recording_duration_in_minutes is not None:
            pulumi.set(__self__, "recording_duration_in_minutes", recording_duration_in_minutes)
        if targets is not None:
            pulumi.set(__self__, "targets", targets)
        if waiting_period_in_minutes is not None:
            pulumi.set(__self__, "waiting_period_in_minutes", waiting_period_in_minutes)

    @_builtins.property
    @pulumi.getter(name="recordingDurationInMinutes")
    def recording_duration_in_minutes(self) -> Optional[_builtins.int]:
        """
        (Updatable) Duration of the JFR recording in minutes.
        """
        return pulumi.get(self, "recording_duration_in_minutes")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[Sequence['outputs.TaskScheduleTaskDetailsCryptoTaskRequestTarget']]:
        """
        (Updatable) The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter(name="waitingPeriodInMinutes")
    def waiting_period_in_minutes(self) -> Optional[_builtins.int]:
        """
        (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        return pulumi.get(self, "waiting_period_in_minutes")


@pulumi.output_type
class TaskScheduleTaskDetailsCryptoTaskRequestTarget(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "applicationInstallationKey":
            suggest = "application_installation_key"
        elif key == "applicationKey":
            suggest = "application_key"
        elif key == "containerKey":
            suggest = "container_key"
        elif key == "jreKey":
            suggest = "jre_key"
        elif key == "managedInstanceId":
            suggest = "managed_instance_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsCryptoTaskRequestTarget. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsCryptoTaskRequestTarget.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsCryptoTaskRequestTarget.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 application_installation_key: Optional[_builtins.str] = None,
                 application_key: Optional[_builtins.str] = None,
                 container_key: Optional[_builtins.str] = None,
                 jre_key: Optional[_builtins.str] = None,
                 managed_instance_id: Optional[_builtins.str] = None):
        """
        :param _builtins.str application_installation_key: (Updatable) Unique key that identifies the application installation for JFR data collection.
        :param _builtins.str application_key: (Updatable) Unique key that identifies the application for JFR data collection.
        :param _builtins.str container_key: (Updatable) Unique key that identifies the container for JFR data collection.
        :param _builtins.str jre_key: (Updatable) Unique key that identify the JVM for JFR data collection.
        :param _builtins.str managed_instance_id: (Updatable) OCID of the Managed Instance to collect JFR data.
        """
        if application_installation_key is not None:
            pulumi.set(__self__, "application_installation_key", application_installation_key)
        if application_key is not None:
            pulumi.set(__self__, "application_key", application_key)
        if container_key is not None:
            pulumi.set(__self__, "container_key", container_key)
        if jre_key is not None:
            pulumi.set(__self__, "jre_key", jre_key)
        if managed_instance_id is not None:
            pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identifies the application for JFR data collection.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identifies the container for JFR data collection.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identify the JVM for JFR data collection.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> Optional[_builtins.str]:
        """
        (Updatable) OCID of the Managed Instance to collect JFR data.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequest(dict):
    def __init__(__self__, *,
                 targets: Optional[Sequence['outputs.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTarget']] = None):
        """
        :param Sequence['TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetArgs'] targets: (Updatable) An array of migration analyses requests.
        """
        if targets is not None:
            pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[Sequence['outputs.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTarget']]:
        """
        (Updatable) An array of migration analyses requests.
        """
        return pulumi.get(self, "targets")


@pulumi.output_type
class TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTarget(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "deployedApplicationInstallationKey":
            suggest = "deployed_application_installation_key"
        elif key == "excludePackagePrefixes":
            suggest = "exclude_package_prefixes"
        elif key == "includePackagePrefixes":
            suggest = "include_package_prefixes"
        elif key == "managedInstanceId":
            suggest = "managed_instance_id"
        elif key == "sourceJdkVersion":
            suggest = "source_jdk_version"
        elif key == "targetJdkVersion":
            suggest = "target_jdk_version"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTarget. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTarget.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTarget.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 deployed_application_installation_key: Optional[_builtins.str] = None,
                 exclude_package_prefixes: Optional[Sequence[_builtins.str]] = None,
                 include_package_prefixes: Optional[Sequence[_builtins.str]] = None,
                 managed_instance_id: Optional[_builtins.str] = None,
                 source_jdk_version: Optional[_builtins.str] = None,
                 target_jdk_version: Optional[_builtins.str] = None):
        """
        :param _builtins.str deployed_application_installation_key: (Updatable) The unique key that identifies the deployed application's installation path that is to be used for the Java migration analyses.
        :param Sequence[_builtins.str] exclude_package_prefixes: (Updatable) Excludes the packages that starts with the prefix from the migration analyses result. Either this or includePackagePrefixes can be specified.
        :param Sequence[_builtins.str] include_package_prefixes: (Updatable) Includes the packages that starts with the prefix from the migration analyses result. Either this or excludePackagePrefixes can be specified.
        :param _builtins.str managed_instance_id: (Updatable) The OCID of the managed instance that hosts the application for which the Java migration analyses was performed.
        :param _builtins.str source_jdk_version: (Updatable) The JDK version the application is currently running on.
        :param _builtins.str target_jdk_version: (Updatable) The JDK version against which the migration analyses was performed to identify effort required to move from source JDK.
        """
        if deployed_application_installation_key is not None:
            pulumi.set(__self__, "deployed_application_installation_key", deployed_application_installation_key)
        if exclude_package_prefixes is not None:
            pulumi.set(__self__, "exclude_package_prefixes", exclude_package_prefixes)
        if include_package_prefixes is not None:
            pulumi.set(__self__, "include_package_prefixes", include_package_prefixes)
        if managed_instance_id is not None:
            pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        if source_jdk_version is not None:
            pulumi.set(__self__, "source_jdk_version", source_jdk_version)
        if target_jdk_version is not None:
            pulumi.set(__self__, "target_jdk_version", target_jdk_version)

    @_builtins.property
    @pulumi.getter(name="deployedApplicationInstallationKey")
    def deployed_application_installation_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) The unique key that identifies the deployed application's installation path that is to be used for the Java migration analyses.
        """
        return pulumi.get(self, "deployed_application_installation_key")

    @_builtins.property
    @pulumi.getter(name="excludePackagePrefixes")
    def exclude_package_prefixes(self) -> Optional[Sequence[_builtins.str]]:
        """
        (Updatable) Excludes the packages that starts with the prefix from the migration analyses result. Either this or includePackagePrefixes can be specified.
        """
        return pulumi.get(self, "exclude_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="includePackagePrefixes")
    def include_package_prefixes(self) -> Optional[Sequence[_builtins.str]]:
        """
        (Updatable) Includes the packages that starts with the prefix from the migration analyses result. Either this or excludePackagePrefixes can be specified.
        """
        return pulumi.get(self, "include_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> Optional[_builtins.str]:
        """
        (Updatable) The OCID of the managed instance that hosts the application for which the Java migration analyses was performed.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="sourceJdkVersion")
    def source_jdk_version(self) -> Optional[_builtins.str]:
        """
        (Updatable) The JDK version the application is currently running on.
        """
        return pulumi.get(self, "source_jdk_version")

    @_builtins.property
    @pulumi.getter(name="targetJdkVersion")
    def target_jdk_version(self) -> Optional[_builtins.str]:
        """
        (Updatable) The JDK version against which the migration analyses was performed to identify effort required to move from source JDK.
        """
        return pulumi.get(self, "target_jdk_version")


@pulumi.output_type
class TaskScheduleTaskDetailsJavaMigrationTaskRequest(dict):
    def __init__(__self__, *,
                 targets: Optional[Sequence['outputs.TaskScheduleTaskDetailsJavaMigrationTaskRequestTarget']] = None):
        """
        :param Sequence['TaskScheduleTaskDetailsJavaMigrationTaskRequestTargetArgs'] targets: (Updatable) An array of migration analysis requests.
        """
        if targets is not None:
            pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[Sequence['outputs.TaskScheduleTaskDetailsJavaMigrationTaskRequestTarget']]:
        """
        (Updatable) An array of migration analysis requests.
        """
        return pulumi.get(self, "targets")


@pulumi.output_type
class TaskScheduleTaskDetailsJavaMigrationTaskRequestTarget(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "applicationInstallationKey":
            suggest = "application_installation_key"
        elif key == "excludePackagePrefixes":
            suggest = "exclude_package_prefixes"
        elif key == "includePackagePrefixes":
            suggest = "include_package_prefixes"
        elif key == "managedInstanceId":
            suggest = "managed_instance_id"
        elif key == "sourceJdkVersion":
            suggest = "source_jdk_version"
        elif key == "targetJdkVersion":
            suggest = "target_jdk_version"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsJavaMigrationTaskRequestTarget. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsJavaMigrationTaskRequestTarget.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsJavaMigrationTaskRequestTarget.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 application_installation_key: Optional[_builtins.str] = None,
                 exclude_package_prefixes: Optional[Sequence[_builtins.str]] = None,
                 include_package_prefixes: Optional[Sequence[_builtins.str]] = None,
                 managed_instance_id: Optional[_builtins.str] = None,
                 source_jdk_version: Optional[_builtins.str] = None,
                 target_jdk_version: Optional[_builtins.str] = None):
        """
        :param _builtins.str application_installation_key: (Updatable) The unique key that identifies the application's installation path that is to be used for the Java migration analysis.
        :param Sequence[_builtins.str] exclude_package_prefixes: (Updatable) Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        :param Sequence[_builtins.str] include_package_prefixes: (Updatable) includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        :param _builtins.str managed_instance_id: (Updatable) The OCID of the managed instance that hosts the application for which the Java migration analysis was performed.
        :param _builtins.str source_jdk_version: (Updatable) The JDK version the application is currently running on.
        :param _builtins.str target_jdk_version: (Updatable) The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        if application_installation_key is not None:
            pulumi.set(__self__, "application_installation_key", application_installation_key)
        if exclude_package_prefixes is not None:
            pulumi.set(__self__, "exclude_package_prefixes", exclude_package_prefixes)
        if include_package_prefixes is not None:
            pulumi.set(__self__, "include_package_prefixes", include_package_prefixes)
        if managed_instance_id is not None:
            pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        if source_jdk_version is not None:
            pulumi.set(__self__, "source_jdk_version", source_jdk_version)
        if target_jdk_version is not None:
            pulumi.set(__self__, "target_jdk_version", target_jdk_version)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) The unique key that identifies the application's installation path that is to be used for the Java migration analysis.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="excludePackagePrefixes")
    def exclude_package_prefixes(self) -> Optional[Sequence[_builtins.str]]:
        """
        (Updatable) Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        """
        return pulumi.get(self, "exclude_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="includePackagePrefixes")
    def include_package_prefixes(self) -> Optional[Sequence[_builtins.str]]:
        """
        (Updatable) includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        """
        return pulumi.get(self, "include_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> Optional[_builtins.str]:
        """
        (Updatable) The OCID of the managed instance that hosts the application for which the Java migration analysis was performed.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="sourceJdkVersion")
    def source_jdk_version(self) -> Optional[_builtins.str]:
        """
        (Updatable) The JDK version the application is currently running on.
        """
        return pulumi.get(self, "source_jdk_version")

    @_builtins.property
    @pulumi.getter(name="targetJdkVersion")
    def target_jdk_version(self) -> Optional[_builtins.str]:
        """
        (Updatable) The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        return pulumi.get(self, "target_jdk_version")


@pulumi.output_type
class TaskScheduleTaskDetailsJfrTaskRequest(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "jfcProfileName":
            suggest = "jfc_profile_name"
        elif key == "jfcV1":
            suggest = "jfc_v1"
        elif key == "jfcV2":
            suggest = "jfc_v2"
        elif key == "recordingDurationInMinutes":
            suggest = "recording_duration_in_minutes"
        elif key == "recordingSizeInMb":
            suggest = "recording_size_in_mb"
        elif key == "waitingPeriodInMinutes":
            suggest = "waiting_period_in_minutes"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsJfrTaskRequest. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsJfrTaskRequest.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsJfrTaskRequest.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 jfc_profile_name: Optional[_builtins.str] = None,
                 jfc_v1: Optional[_builtins.str] = None,
                 jfc_v2: Optional[_builtins.str] = None,
                 recording_duration_in_minutes: Optional[_builtins.int] = None,
                 recording_size_in_mb: Optional[_builtins.int] = None,
                 targets: Optional[Sequence['outputs.TaskScheduleTaskDetailsJfrTaskRequestTarget']] = None,
                 waiting_period_in_minutes: Optional[_builtins.int] = None):
        """
        :param _builtins.str jfc_profile_name: (Updatable) The profile used for JFR events selection. If the name isn't recognized, the settings from jfcV1 or jfcV2 will be used depending on the JVM version. Both jfcV2 and jfcV1 should be provided to ensure JFR collection on different JVM versions.
        :param _builtins.str jfc_v1: (Updatable) The BASE64 encoded string of JFR settings XML with schema used by JDK 8.
        :param _builtins.str jfc_v2: (Updatable) The BASE64 encoded string of JFR settings XML with [schema used by JDK 9 and after](https://raw.githubusercontent.com/openjdk/jdk/master/src/jdk.jfr/share/classes/jdk/jfr/internal/jfc/jfc.xsd).
        :param _builtins.int recording_duration_in_minutes: (Updatable) Duration of the JFR recording in minutes.
        :param _builtins.int recording_size_in_mb: (Updatable) The maximum size limit for the JFR file collected.
        :param Sequence['TaskScheduleTaskDetailsJfrTaskRequestTargetArgs'] targets: (Updatable) The attachment targets to start JFR.
        :param _builtins.int waiting_period_in_minutes: (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        if jfc_profile_name is not None:
            pulumi.set(__self__, "jfc_profile_name", jfc_profile_name)
        if jfc_v1 is not None:
            pulumi.set(__self__, "jfc_v1", jfc_v1)
        if jfc_v2 is not None:
            pulumi.set(__self__, "jfc_v2", jfc_v2)
        if recording_duration_in_minutes is not None:
            pulumi.set(__self__, "recording_duration_in_minutes", recording_duration_in_minutes)
        if recording_size_in_mb is not None:
            pulumi.set(__self__, "recording_size_in_mb", recording_size_in_mb)
        if targets is not None:
            pulumi.set(__self__, "targets", targets)
        if waiting_period_in_minutes is not None:
            pulumi.set(__self__, "waiting_period_in_minutes", waiting_period_in_minutes)

    @_builtins.property
    @pulumi.getter(name="jfcProfileName")
    def jfc_profile_name(self) -> Optional[_builtins.str]:
        """
        (Updatable) The profile used for JFR events selection. If the name isn't recognized, the settings from jfcV1 or jfcV2 will be used depending on the JVM version. Both jfcV2 and jfcV1 should be provided to ensure JFR collection on different JVM versions.
        """
        return pulumi.get(self, "jfc_profile_name")

    @_builtins.property
    @pulumi.getter(name="jfcV1")
    def jfc_v1(self) -> Optional[_builtins.str]:
        """
        (Updatable) The BASE64 encoded string of JFR settings XML with schema used by JDK 8.
        """
        return pulumi.get(self, "jfc_v1")

    @_builtins.property
    @pulumi.getter(name="jfcV2")
    def jfc_v2(self) -> Optional[_builtins.str]:
        """
        (Updatable) The BASE64 encoded string of JFR settings XML with [schema used by JDK 9 and after](https://raw.githubusercontent.com/openjdk/jdk/master/src/jdk.jfr/share/classes/jdk/jfr/internal/jfc/jfc.xsd).
        """
        return pulumi.get(self, "jfc_v2")

    @_builtins.property
    @pulumi.getter(name="recordingDurationInMinutes")
    def recording_duration_in_minutes(self) -> Optional[_builtins.int]:
        """
        (Updatable) Duration of the JFR recording in minutes.
        """
        return pulumi.get(self, "recording_duration_in_minutes")

    @_builtins.property
    @pulumi.getter(name="recordingSizeInMb")
    def recording_size_in_mb(self) -> Optional[_builtins.int]:
        """
        (Updatable) The maximum size limit for the JFR file collected.
        """
        return pulumi.get(self, "recording_size_in_mb")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[Sequence['outputs.TaskScheduleTaskDetailsJfrTaskRequestTarget']]:
        """
        (Updatable) The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter(name="waitingPeriodInMinutes")
    def waiting_period_in_minutes(self) -> Optional[_builtins.int]:
        """
        (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        return pulumi.get(self, "waiting_period_in_minutes")


@pulumi.output_type
class TaskScheduleTaskDetailsJfrTaskRequestTarget(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "applicationInstallationKey":
            suggest = "application_installation_key"
        elif key == "applicationKey":
            suggest = "application_key"
        elif key == "containerKey":
            suggest = "container_key"
        elif key == "jreKey":
            suggest = "jre_key"
        elif key == "managedInstanceId":
            suggest = "managed_instance_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsJfrTaskRequestTarget. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsJfrTaskRequestTarget.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsJfrTaskRequestTarget.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 application_installation_key: Optional[_builtins.str] = None,
                 application_key: Optional[_builtins.str] = None,
                 container_key: Optional[_builtins.str] = None,
                 jre_key: Optional[_builtins.str] = None,
                 managed_instance_id: Optional[_builtins.str] = None):
        """
        :param _builtins.str application_installation_key: (Updatable) Unique key that identifies the application installation for JFR data collection.
        :param _builtins.str application_key: (Updatable) Unique key that identifies the application for JFR data collection.
        :param _builtins.str container_key: (Updatable) Unique key that identifies the container for JFR data collection.
        :param _builtins.str jre_key: (Updatable) Unique key that identify the JVM for JFR data collection.
        :param _builtins.str managed_instance_id: (Updatable) OCID of the Managed Instance to collect JFR data.
        """
        if application_installation_key is not None:
            pulumi.set(__self__, "application_installation_key", application_installation_key)
        if application_key is not None:
            pulumi.set(__self__, "application_key", application_key)
        if container_key is not None:
            pulumi.set(__self__, "container_key", container_key)
        if jre_key is not None:
            pulumi.set(__self__, "jre_key", jre_key)
        if managed_instance_id is not None:
            pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identifies the application for JFR data collection.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identifies the container for JFR data collection.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identify the JVM for JFR data collection.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> Optional[_builtins.str]:
        """
        (Updatable) OCID of the Managed Instance to collect JFR data.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class TaskScheduleTaskDetailsPerformanceTuningTaskRequest(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "recordingDurationInMinutes":
            suggest = "recording_duration_in_minutes"
        elif key == "waitingPeriodInMinutes":
            suggest = "waiting_period_in_minutes"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsPerformanceTuningTaskRequest. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsPerformanceTuningTaskRequest.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsPerformanceTuningTaskRequest.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 recording_duration_in_minutes: Optional[_builtins.int] = None,
                 targets: Optional[Sequence['outputs.TaskScheduleTaskDetailsPerformanceTuningTaskRequestTarget']] = None,
                 waiting_period_in_minutes: Optional[_builtins.int] = None):
        """
        :param _builtins.int recording_duration_in_minutes: (Updatable) Duration of the JFR recording in minutes.
        :param Sequence['TaskScheduleTaskDetailsPerformanceTuningTaskRequestTargetArgs'] targets: (Updatable) The attachment targets to start JFR.
        :param _builtins.int waiting_period_in_minutes: (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        if recording_duration_in_minutes is not None:
            pulumi.set(__self__, "recording_duration_in_minutes", recording_duration_in_minutes)
        if targets is not None:
            pulumi.set(__self__, "targets", targets)
        if waiting_period_in_minutes is not None:
            pulumi.set(__self__, "waiting_period_in_minutes", waiting_period_in_minutes)

    @_builtins.property
    @pulumi.getter(name="recordingDurationInMinutes")
    def recording_duration_in_minutes(self) -> Optional[_builtins.int]:
        """
        (Updatable) Duration of the JFR recording in minutes.
        """
        return pulumi.get(self, "recording_duration_in_minutes")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[Sequence['outputs.TaskScheduleTaskDetailsPerformanceTuningTaskRequestTarget']]:
        """
        (Updatable) The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter(name="waitingPeriodInMinutes")
    def waiting_period_in_minutes(self) -> Optional[_builtins.int]:
        """
        (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        return pulumi.get(self, "waiting_period_in_minutes")


@pulumi.output_type
class TaskScheduleTaskDetailsPerformanceTuningTaskRequestTarget(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "applicationInstallationKey":
            suggest = "application_installation_key"
        elif key == "applicationKey":
            suggest = "application_key"
        elif key == "containerKey":
            suggest = "container_key"
        elif key == "jreKey":
            suggest = "jre_key"
        elif key == "managedInstanceId":
            suggest = "managed_instance_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsPerformanceTuningTaskRequestTarget. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsPerformanceTuningTaskRequestTarget.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsPerformanceTuningTaskRequestTarget.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 application_installation_key: Optional[_builtins.str] = None,
                 application_key: Optional[_builtins.str] = None,
                 container_key: Optional[_builtins.str] = None,
                 jre_key: Optional[_builtins.str] = None,
                 managed_instance_id: Optional[_builtins.str] = None):
        """
        :param _builtins.str application_installation_key: (Updatable) Unique key that identifies the application installation for JFR data collection.
        :param _builtins.str application_key: (Updatable) Unique key that identifies the application for JFR data collection.
        :param _builtins.str container_key: (Updatable) Unique key that identifies the container for JFR data collection.
        :param _builtins.str jre_key: (Updatable) Unique key that identify the JVM for JFR data collection.
        :param _builtins.str managed_instance_id: (Updatable) OCID of the Managed Instance to collect JFR data.
        """
        if application_installation_key is not None:
            pulumi.set(__self__, "application_installation_key", application_installation_key)
        if application_key is not None:
            pulumi.set(__self__, "application_key", application_key)
        if container_key is not None:
            pulumi.set(__self__, "container_key", container_key)
        if jre_key is not None:
            pulumi.set(__self__, "jre_key", jre_key)
        if managed_instance_id is not None:
            pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identifies the application for JFR data collection.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identifies the container for JFR data collection.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) Unique key that identify the JVM for JFR data collection.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> Optional[_builtins.str]:
        """
        (Updatable) OCID of the Managed Instance to collect JFR data.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "installationSites":
            suggest = "installation_sites"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 installation_sites: Optional[Sequence['outputs.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSite']] = None):
        """
        :param Sequence['TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSiteArgs'] installation_sites: (Updatable) The list of installation sites to remove.
        """
        if installation_sites is not None:
            pulumi.set(__self__, "installation_sites", installation_sites)

    @_builtins.property
    @pulumi.getter(name="installationSites")
    def installation_sites(self) -> Optional[Sequence['outputs.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSite']]:
        """
        (Updatable) The list of installation sites to remove.
        """
        return pulumi.get(self, "installation_sites")


@pulumi.output_type
class TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSite(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "installationKey":
            suggest = "installation_key"
        elif key == "managedInstanceId":
            suggest = "managed_instance_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSite. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSite.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSite.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 installation_key: Optional[_builtins.str] = None,
                 managed_instance_id: Optional[_builtins.str] = None):
        """
        :param _builtins.str installation_key: (Updatable) The unique identifier for the installation of a Java Runtime at a specific path on a specific operating system.
        :param _builtins.str managed_instance_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        if installation_key is not None:
            pulumi.set(__self__, "installation_key", installation_key)
        if managed_instance_id is not None:
            pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="installationKey")
    def installation_key(self) -> Optional[_builtins.str]:
        """
        (Updatable) The unique identifier for the installation of a Java Runtime at a specific path on a specific operating system.
        """
        return pulumi.get(self, "installation_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> Optional[_builtins.str]:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class TaskScheduleTaskDetailsScanJavaServerTaskRequest(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "managedInstanceIds":
            suggest = "managed_instance_ids"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsScanJavaServerTaskRequest. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsScanJavaServerTaskRequest.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsScanJavaServerTaskRequest.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 managed_instance_ids: Optional[Sequence[_builtins.str]] = None):
        """
        :param Sequence[_builtins.str] managed_instance_ids: (Updatable) The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        if managed_instance_ids is not None:
            pulumi.set(__self__, "managed_instance_ids", managed_instance_ids)

    @_builtins.property
    @pulumi.getter(name="managedInstanceIds")
    def managed_instance_ids(self) -> Optional[Sequence[_builtins.str]]:
        """
        (Updatable) The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        return pulumi.get(self, "managed_instance_ids")


@pulumi.output_type
class TaskScheduleTaskDetailsScanLibraryTaskRequest(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dynamicScanDurationInMinutes":
            suggest = "dynamic_scan_duration_in_minutes"
        elif key == "isDynamicScan":
            suggest = "is_dynamic_scan"
        elif key == "managedInstanceIds":
            suggest = "managed_instance_ids"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TaskScheduleTaskDetailsScanLibraryTaskRequest. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TaskScheduleTaskDetailsScanLibraryTaskRequest.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TaskScheduleTaskDetailsScanLibraryTaskRequest.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 dynamic_scan_duration_in_minutes: Optional[_builtins.int] = None,
                 is_dynamic_scan: Optional[_builtins.bool] = None,
                 managed_instance_ids: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.int dynamic_scan_duration_in_minutes: (Updatable) The duration of the dynamic scan in minutes.
        :param _builtins.bool is_dynamic_scan: (Updatable) Indicates whether the scan is dynamic or static.
        :param Sequence[_builtins.str] managed_instance_ids: (Updatable) The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        if dynamic_scan_duration_in_minutes is not None:
            pulumi.set(__self__, "dynamic_scan_duration_in_minutes", dynamic_scan_duration_in_minutes)
        if is_dynamic_scan is not None:
            pulumi.set(__self__, "is_dynamic_scan", is_dynamic_scan)
        if managed_instance_ids is not None:
            pulumi.set(__self__, "managed_instance_ids", managed_instance_ids)

    @_builtins.property
    @pulumi.getter(name="dynamicScanDurationInMinutes")
    def dynamic_scan_duration_in_minutes(self) -> Optional[_builtins.int]:
        """
        (Updatable) The duration of the dynamic scan in minutes.
        """
        return pulumi.get(self, "dynamic_scan_duration_in_minutes")

    @_builtins.property
    @pulumi.getter(name="isDynamicScan")
    def is_dynamic_scan(self) -> Optional[_builtins.bool]:
        """
        (Updatable) Indicates whether the scan is dynamic or static.
        """
        return pulumi.get(self, "is_dynamic_scan")

    @_builtins.property
    @pulumi.getter(name="managedInstanceIds")
    def managed_instance_ids(self) -> Optional[Sequence[_builtins.str]]:
        """
        (Updatable) The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        return pulumi.get(self, "managed_instance_ids")


@pulumi.output_type
class GetAgentInstallersAgentInstallerCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetAgentInstallersAgentInstallerCollectionItemResult']):
        """
        :param Sequence['GetAgentInstallersAgentInstallerCollectionItemArgs'] items: A list of the agent installer summaries.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetAgentInstallersAgentInstallerCollectionItemResult']:
        """
        A list of the agent installer summaries.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetAgentInstallersAgentInstallerCollectionItemResult(dict):
    def __init__(__self__, *,
                 agent_installer_description: _builtins.str,
                 agent_installer_id: _builtins.str,
                 agent_installer_version: _builtins.str,
                 agent_version: _builtins.str,
                 approximate_file_size_in_bytes: _builtins.str,
                 java_version: _builtins.str,
                 os_family: _builtins.str,
                 package_type: _builtins.str,
                 platform_architecture: _builtins.str,
                 sha256: _builtins.str):
        """
        :param _builtins.str agent_installer_description: Description of the agent installer artifact. The description typically includes the OS, architecture, and agent installer type.
        :param _builtins.str agent_installer_id: Unique identifier for the agent installer.
        :param _builtins.str agent_installer_version: Agent installer version.
        :param _builtins.str agent_version: Agent image version.
        :param _builtins.str approximate_file_size_in_bytes: Approximate compressed file size in bytes.
        :param _builtins.str java_version: Java version.
        :param _builtins.str os_family: The OS family for the agent installer.
        :param _builtins.str package_type: The package type (typically the file extension) of the agent software included in the installer.
        :param _builtins.str platform_architecture: The platform architecture for the agent installer.
        :param _builtins.str sha256: SHA256 checksum of the agent installer.
        """
        pulumi.set(__self__, "agent_installer_description", agent_installer_description)
        pulumi.set(__self__, "agent_installer_id", agent_installer_id)
        pulumi.set(__self__, "agent_installer_version", agent_installer_version)
        pulumi.set(__self__, "agent_version", agent_version)
        pulumi.set(__self__, "approximate_file_size_in_bytes", approximate_file_size_in_bytes)
        pulumi.set(__self__, "java_version", java_version)
        pulumi.set(__self__, "os_family", os_family)
        pulumi.set(__self__, "package_type", package_type)
        pulumi.set(__self__, "platform_architecture", platform_architecture)
        pulumi.set(__self__, "sha256", sha256)

    @_builtins.property
    @pulumi.getter(name="agentInstallerDescription")
    def agent_installer_description(self) -> _builtins.str:
        """
        Description of the agent installer artifact. The description typically includes the OS, architecture, and agent installer type.
        """
        return pulumi.get(self, "agent_installer_description")

    @_builtins.property
    @pulumi.getter(name="agentInstallerId")
    def agent_installer_id(self) -> _builtins.str:
        """
        Unique identifier for the agent installer.
        """
        return pulumi.get(self, "agent_installer_id")

    @_builtins.property
    @pulumi.getter(name="agentInstallerVersion")
    def agent_installer_version(self) -> _builtins.str:
        """
        Agent installer version.
        """
        return pulumi.get(self, "agent_installer_version")

    @_builtins.property
    @pulumi.getter(name="agentVersion")
    def agent_version(self) -> _builtins.str:
        """
        Agent image version.
        """
        return pulumi.get(self, "agent_version")

    @_builtins.property
    @pulumi.getter(name="approximateFileSizeInBytes")
    def approximate_file_size_in_bytes(self) -> _builtins.str:
        """
        Approximate compressed file size in bytes.
        """
        return pulumi.get(self, "approximate_file_size_in_bytes")

    @_builtins.property
    @pulumi.getter(name="javaVersion")
    def java_version(self) -> _builtins.str:
        """
        Java version.
        """
        return pulumi.get(self, "java_version")

    @_builtins.property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> _builtins.str:
        """
        The OS family for the agent installer.
        """
        return pulumi.get(self, "os_family")

    @_builtins.property
    @pulumi.getter(name="packageType")
    def package_type(self) -> _builtins.str:
        """
        The package type (typically the file extension) of the agent software included in the installer.
        """
        return pulumi.get(self, "package_type")

    @_builtins.property
    @pulumi.getter(name="platformArchitecture")
    def platform_architecture(self) -> _builtins.str:
        """
        The platform architecture for the agent installer.
        """
        return pulumi.get(self, "platform_architecture")

    @_builtins.property
    @pulumi.getter
    def sha256(self) -> _builtins.str:
        """
        SHA256 checksum of the agent installer.
        """
        return pulumi.get(self, "sha256")


@pulumi.output_type
class GetAgentInstallersFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetAnnouncementsAnnouncementCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetAnnouncementsAnnouncementCollectionItemResult']):
        """
        :param Sequence['GetAnnouncementsAnnouncementCollectionItemArgs'] items: List of AnnouncementSummary items
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetAnnouncementsAnnouncementCollectionItemResult']:
        """
        List of AnnouncementSummary items
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetAnnouncementsAnnouncementCollectionItemResult(dict):
    def __init__(__self__, *,
                 key: _builtins.int,
                 summary: _builtins.str,
                 time_released: _builtins.str,
                 url: _builtins.str):
        """
        :param _builtins.int key: Unique id of the announcement
        :param _builtins.str summary: Summary text of the announcement
        :param _builtins.str time_released: Date time on which the announcement was released
        :param _builtins.str url: URL to the announcement web page
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "summary", summary)
        pulumi.set(__self__, "time_released", time_released)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.int:
        """
        Unique id of the announcement
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter
    def summary(self) -> _builtins.str:
        """
        Summary text of the announcement
        """
        return pulumi.get(self, "summary")

    @_builtins.property
    @pulumi.getter(name="timeReleased")
    def time_released(self) -> _builtins.str:
        """
        Date time on which the announcement was released
        """
        return pulumi.get(self, "time_released")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        URL to the announcement web page
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetAnnouncementsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationAdvancedUsageTrackingResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.bool):
        """
        :param _builtins.bool is_enabled: PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        pulumi.set(__self__, "is_enabled", is_enabled)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.bool:
        """
        PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        return pulumi.get(self, "is_enabled")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationCryptoEventAnalysisResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.bool,
                 summarized_events_logs: Sequence['outputs.GetFleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLogResult']):
        """
        :param _builtins.bool is_enabled: PerformanceTuningAnalysis flag to store enabled or disabled status
        :param Sequence['GetFleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLogArgs'] summarized_events_logs: Summarized events log for advanced feature.
        """
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "summarized_events_logs", summarized_events_logs)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.bool:
        """
        PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="summarizedEventsLogs")
    def summarized_events_logs(self) -> Sequence['outputs.GetFleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLogResult']:
        """
        Summarized events log for advanced feature.
        """
        return pulumi.get(self, "summarized_events_logs")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLogResult(dict):
    def __init__(__self__, *,
                 log_group_id: _builtins.str,
                 log_id: _builtins.str):
        """
        :param _builtins.str log_group_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param _builtins.str log_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @_builtins.property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @_builtins.property
    @pulumi.getter(name="logId")
    def log_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationJavaMigrationAnalysisResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.bool):
        """
        :param _builtins.bool is_enabled: PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        pulumi.set(__self__, "is_enabled", is_enabled)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.bool:
        """
        PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        return pulumi.get(self, "is_enabled")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationJfrRecordingResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.bool):
        """
        :param _builtins.bool is_enabled: PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        pulumi.set(__self__, "is_enabled", is_enabled)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.bool:
        """
        PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        return pulumi.get(self, "is_enabled")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationLcmResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.bool,
                 post_installation_actions: Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionResult']):
        """
        :param _builtins.bool is_enabled: PerformanceTuningAnalysis flag to store enabled or disabled status
        :param Sequence['GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionArgs'] post_installation_actions: List of available post actions you can execute after the successful Java installation.
        """
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "post_installation_actions", post_installation_actions)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.bool:
        """
        PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="postInstallationActions")
    def post_installation_actions(self) -> Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionResult']:
        """
        List of available post actions you can execute after the successful Java installation.
        """
        return pulumi.get(self, "post_installation_actions")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionResult(dict):
    def __init__(__self__, *,
                 add_logging_handler: _builtins.bool,
                 disabled_tls_versions: Sequence[_builtins.str],
                 global_logging_level: _builtins.str,
                 minimum_key_size_settings: Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingResult'],
                 proxies: Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxyResult'],
                 should_replace_certificates_operating_system: _builtins.bool):
        """
        :param _builtins.bool add_logging_handler: Sets FileHandler and ConsoleHandler as handlers in logging.properties file.
        :param Sequence[_builtins.str] disabled_tls_versions: The following post JRE installation actions are supported by the field:
               * Disable TLS 1.0 , TLS 1.1
        :param _builtins.str global_logging_level: Sets the logging level in logging.properties file.
        :param Sequence['GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingArgs'] minimum_key_size_settings: test
        :param Sequence['GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxyArgs'] proxies: List of proxy properties to be configured in net.properties file.
        :param _builtins.bool should_replace_certificates_operating_system: Restores JDK root certificates with the certificates that are available in the operating system. The following action is supported by the field:
               * Replace JDK root certificates with a list provided by the operating system.
        """
        pulumi.set(__self__, "add_logging_handler", add_logging_handler)
        pulumi.set(__self__, "disabled_tls_versions", disabled_tls_versions)
        pulumi.set(__self__, "global_logging_level", global_logging_level)
        pulumi.set(__self__, "minimum_key_size_settings", minimum_key_size_settings)
        pulumi.set(__self__, "proxies", proxies)
        pulumi.set(__self__, "should_replace_certificates_operating_system", should_replace_certificates_operating_system)

    @_builtins.property
    @pulumi.getter(name="addLoggingHandler")
    def add_logging_handler(self) -> _builtins.bool:
        """
        Sets FileHandler and ConsoleHandler as handlers in logging.properties file.
        """
        return pulumi.get(self, "add_logging_handler")

    @_builtins.property
    @pulumi.getter(name="disabledTlsVersions")
    def disabled_tls_versions(self) -> Sequence[_builtins.str]:
        """
        The following post JRE installation actions are supported by the field:
        * Disable TLS 1.0 , TLS 1.1
        """
        return pulumi.get(self, "disabled_tls_versions")

    @_builtins.property
    @pulumi.getter(name="globalLoggingLevel")
    def global_logging_level(self) -> _builtins.str:
        """
        Sets the logging level in logging.properties file.
        """
        return pulumi.get(self, "global_logging_level")

    @_builtins.property
    @pulumi.getter(name="minimumKeySizeSettings")
    def minimum_key_size_settings(self) -> Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingResult']:
        """
        test
        """
        return pulumi.get(self, "minimum_key_size_settings")

    @_builtins.property
    @pulumi.getter
    def proxies(self) -> Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxyResult']:
        """
        List of proxy properties to be configured in net.properties file.
        """
        return pulumi.get(self, "proxies")

    @_builtins.property
    @pulumi.getter(name="shouldReplaceCertificatesOperatingSystem")
    def should_replace_certificates_operating_system(self) -> _builtins.bool:
        """
        Restores JDK root certificates with the certificates that are available in the operating system. The following action is supported by the field:
        * Replace JDK root certificates with a list provided by the operating system.
        """
        return pulumi.get(self, "should_replace_certificates_operating_system")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingResult(dict):
    def __init__(__self__, *,
                 certpaths: Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingCertpathResult'],
                 jars: Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingJarResult'],
                 tls: Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingTlResult']):
        """
        :param Sequence['GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingCertpathArgs'] certpaths: Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.certpath.disabledAlgorithms will be updated with the following supported actions:
               * Changing minimum key length for RSA signed jars
               * Changing minimum key length for EC
               * Changing minimum key length for DSA
        :param Sequence['GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingJarArgs'] jars: Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.jar.disabledAlgorithms will be updated with the following supported actions:
               * Changing minimum key length for RSA signed jars
               * Changing minimum key length for EC
               * Changing minimum key length for DSA
        :param Sequence['GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingTlArgs'] tls: Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.tls.disabledAlgorithms will be updated with the following supported actions:
               * Changing minimum key length for Diffie-Hellman
        """
        pulumi.set(__self__, "certpaths", certpaths)
        pulumi.set(__self__, "jars", jars)
        pulumi.set(__self__, "tls", tls)

    @_builtins.property
    @pulumi.getter
    def certpaths(self) -> Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingCertpathResult']:
        """
        Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.certpath.disabledAlgorithms will be updated with the following supported actions:
        * Changing minimum key length for RSA signed jars
        * Changing minimum key length for EC
        * Changing minimum key length for DSA
        """
        return pulumi.get(self, "certpaths")

    @_builtins.property
    @pulumi.getter
    def jars(self) -> Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingJarResult']:
        """
        Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.jar.disabledAlgorithms will be updated with the following supported actions:
        * Changing minimum key length for RSA signed jars
        * Changing minimum key length for EC
        * Changing minimum key length for DSA
        """
        return pulumi.get(self, "jars")

    @_builtins.property
    @pulumi.getter
    def tls(self) -> Sequence['outputs.GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingTlResult']:
        """
        Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.tls.disabledAlgorithms will be updated with the following supported actions:
        * Changing minimum key length for Diffie-Hellman
        """
        return pulumi.get(self, "tls")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingCertpathResult(dict):
    def __init__(__self__, *,
                 key_size: _builtins.int,
                 name: _builtins.str):
        """
        :param _builtins.int key_size: Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        :param _builtins.str name: The algorithm name.
        """
        pulumi.set(__self__, "key_size", key_size)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="keySize")
    def key_size(self) -> _builtins.int:
        """
        Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        """
        return pulumi.get(self, "key_size")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The algorithm name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingJarResult(dict):
    def __init__(__self__, *,
                 key_size: _builtins.int,
                 name: _builtins.str):
        """
        :param _builtins.int key_size: Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        :param _builtins.str name: The algorithm name.
        """
        pulumi.set(__self__, "key_size", key_size)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="keySize")
    def key_size(self) -> _builtins.int:
        """
        Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        """
        return pulumi.get(self, "key_size")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The algorithm name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionMinimumKeySizeSettingTlResult(dict):
    def __init__(__self__, *,
                 key_size: _builtins.int,
                 name: _builtins.str):
        """
        :param _builtins.int key_size: Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        :param _builtins.str name: The algorithm name.
        """
        pulumi.set(__self__, "key_size", key_size)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="keySize")
    def key_size(self) -> _builtins.int:
        """
        Key size for the encryption algorithm. Allowed values: 256 for EC, 2048 for DH/DSA/RSA
        """
        return pulumi.get(self, "key_size")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The algorithm name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxyResult(dict):
    def __init__(__self__, *,
                 ftp_proxy_host: _builtins.str,
                 ftp_proxy_port: _builtins.int,
                 http_proxy_host: _builtins.str,
                 http_proxy_port: _builtins.int,
                 https_proxy_host: _builtins.str,
                 https_proxy_port: _builtins.int,
                 socks_proxy_host: _builtins.str,
                 socks_proxy_port: _builtins.int,
                 use_system_proxies: _builtins.bool):
        """
        :param _builtins.str ftp_proxy_host: Ftp host to be set in net.properties file.
        :param _builtins.int ftp_proxy_port: Ftp port number to be set in net.properties file.
        :param _builtins.str http_proxy_host: Http host to be set in net.properties file.
        :param _builtins.int http_proxy_port: Http port number to be set in net.properties file.
        :param _builtins.str https_proxy_host: Https host to be set in net.properties file.
        :param _builtins.int https_proxy_port: Https port number to be set in net.properties file.
        :param _builtins.str socks_proxy_host: Socks host to be set in net.properties file.
        :param _builtins.int socks_proxy_port: Socks port number to be set in net.properties file.
        :param _builtins.bool use_system_proxies: Sets "java.net.useSystemProxies=true" in net.properties when they exist.
        """
        pulumi.set(__self__, "ftp_proxy_host", ftp_proxy_host)
        pulumi.set(__self__, "ftp_proxy_port", ftp_proxy_port)
        pulumi.set(__self__, "http_proxy_host", http_proxy_host)
        pulumi.set(__self__, "http_proxy_port", http_proxy_port)
        pulumi.set(__self__, "https_proxy_host", https_proxy_host)
        pulumi.set(__self__, "https_proxy_port", https_proxy_port)
        pulumi.set(__self__, "socks_proxy_host", socks_proxy_host)
        pulumi.set(__self__, "socks_proxy_port", socks_proxy_port)
        pulumi.set(__self__, "use_system_proxies", use_system_proxies)

    @_builtins.property
    @pulumi.getter(name="ftpProxyHost")
    def ftp_proxy_host(self) -> _builtins.str:
        """
        Ftp host to be set in net.properties file.
        """
        return pulumi.get(self, "ftp_proxy_host")

    @_builtins.property
    @pulumi.getter(name="ftpProxyPort")
    def ftp_proxy_port(self) -> _builtins.int:
        """
        Ftp port number to be set in net.properties file.
        """
        return pulumi.get(self, "ftp_proxy_port")

    @_builtins.property
    @pulumi.getter(name="httpProxyHost")
    def http_proxy_host(self) -> _builtins.str:
        """
        Http host to be set in net.properties file.
        """
        return pulumi.get(self, "http_proxy_host")

    @_builtins.property
    @pulumi.getter(name="httpProxyPort")
    def http_proxy_port(self) -> _builtins.int:
        """
        Http port number to be set in net.properties file.
        """
        return pulumi.get(self, "http_proxy_port")

    @_builtins.property
    @pulumi.getter(name="httpsProxyHost")
    def https_proxy_host(self) -> _builtins.str:
        """
        Https host to be set in net.properties file.
        """
        return pulumi.get(self, "https_proxy_host")

    @_builtins.property
    @pulumi.getter(name="httpsProxyPort")
    def https_proxy_port(self) -> _builtins.int:
        """
        Https port number to be set in net.properties file.
        """
        return pulumi.get(self, "https_proxy_port")

    @_builtins.property
    @pulumi.getter(name="socksProxyHost")
    def socks_proxy_host(self) -> _builtins.str:
        """
        Socks host to be set in net.properties file.
        """
        return pulumi.get(self, "socks_proxy_host")

    @_builtins.property
    @pulumi.getter(name="socksProxyPort")
    def socks_proxy_port(self) -> _builtins.int:
        """
        Socks port number to be set in net.properties file.
        """
        return pulumi.get(self, "socks_proxy_port")

    @_builtins.property
    @pulumi.getter(name="useSystemProxies")
    def use_system_proxies(self) -> _builtins.bool:
        """
        Sets "java.net.useSystemProxies=true" in net.properties when they exist.
        """
        return pulumi.get(self, "use_system_proxies")


@pulumi.output_type
class GetFleetAdvancedFeatureConfigurationPerformanceTuningAnalysisResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.bool):
        """
        :param _builtins.bool is_enabled: PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        pulumi.set(__self__, "is_enabled", is_enabled)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.bool:
        """
        PerformanceTuningAnalysis flag to store enabled or disabled status
        """
        return pulumi.get(self, "is_enabled")


@pulumi.output_type
class GetFleetBlocklistsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetBlocklistsItemResult(dict):
    def __init__(__self__, *,
                 key: _builtins.str,
                 operation: _builtins.str,
                 reason: _builtins.str,
                 targets: Sequence['outputs.GetFleetBlocklistsItemTargetResult']):
        """
        :param _builtins.str key: The unique identifier of this blocklist record.
        :param _builtins.str operation: The operation type.
        :param _builtins.str reason: The reason why the operation is blocklisted.
        :param Sequence['GetFleetBlocklistsItemTargetArgs'] targets: A resource to blocklist for certain operation.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "operation", operation)
        pulumi.set(__self__, "reason", reason)
        pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        The unique identifier of this blocklist record.
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter
    def operation(self) -> _builtins.str:
        """
        The operation type.
        """
        return pulumi.get(self, "operation")

    @_builtins.property
    @pulumi.getter
    def reason(self) -> _builtins.str:
        """
        The reason why the operation is blocklisted.
        """
        return pulumi.get(self, "reason")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetFleetBlocklistsItemTargetResult']:
        """
        A resource to blocklist for certain operation.
        """
        return pulumi.get(self, "targets")


@pulumi.output_type
class GetFleetBlocklistsItemTargetResult(dict):
    def __init__(__self__, *,
                 fleet_id: _builtins.str,
                 installation_key: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        :param _builtins.str installation_key: The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        """
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "installation_key", installation_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @_builtins.property
    @pulumi.getter(name="installationKey")
    def installation_key(self) -> _builtins.str:
        """
        The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        """
        return pulumi.get(self, "installation_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetFleetContainersContainerCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetContainersContainerCollectionItemResult']):
        """
        :param Sequence['GetFleetContainersContainerCollectionItemArgs'] items: A list of the container summaries.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetContainersContainerCollectionItemResult']:
        """
        A list of the container summaries.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetContainersContainerCollectionItemResult(dict):
    def __init__(__self__, *,
                 application_key: _builtins.str,
                 application_name: _builtins.str,
                 container_key: _builtins.str,
                 display_name: _builtins.str,
                 image_name: _builtins.str,
                 java_version: _builtins.str,
                 jre_key: _builtins.str,
                 jre_security_status: _builtins.str,
                 managed_instance_id: _builtins.str,
                 namespace: _builtins.str,
                 node_name: _builtins.str,
                 pod_name: _builtins.str,
                 time_started: _builtins.str):
        """
        :param _builtins.str application_key: Unique key that identifies the application running in the container.
        :param _builtins.str application_name: The name of the application.
        :param _builtins.str container_key: Unique identifier for the container.
        :param _builtins.str display_name: The display name.
        :param _builtins.str image_name: The container image name.
        :param _builtins.str java_version: The Java runtime used to run the application in the container.
        :param _builtins.str jre_key: Unique key that identifies the Java runtime used to run the application in the container.
        :param _builtins.str jre_security_status: The security status of the Java Runtime.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the managed instance.
        :param _builtins.str namespace: The namespace of the container.
        :param _builtins.str node_name: The name of the node associated with the pod running this container.
        :param _builtins.str pod_name: The name of the pod running this container.
        :param _builtins.str time_started: The start time of the container.
        """
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "application_name", application_name)
        pulumi.set(__self__, "container_key", container_key)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "image_name", image_name)
        pulumi.set(__self__, "java_version", java_version)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "jre_security_status", jre_security_status)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "node_name", node_name)
        pulumi.set(__self__, "pod_name", pod_name)
        pulumi.set(__self__, "time_started", time_started)

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        Unique key that identifies the application running in the container.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="applicationName")
    def application_name(self) -> _builtins.str:
        """
        The name of the application.
        """
        return pulumi.get(self, "application_name")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> _builtins.str:
        """
        Unique identifier for the container.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The display name.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="imageName")
    def image_name(self) -> _builtins.str:
        """
        The container image name.
        """
        return pulumi.get(self, "image_name")

    @_builtins.property
    @pulumi.getter(name="javaVersion")
    def java_version(self) -> _builtins.str:
        """
        The Java runtime used to run the application in the container.
        """
        return pulumi.get(self, "java_version")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> _builtins.str:
        """
        Unique key that identifies the Java runtime used to run the application in the container.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="jreSecurityStatus")
    def jre_security_status(self) -> _builtins.str:
        """
        The security status of the Java Runtime.
        """
        return pulumi.get(self, "jre_security_status")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> _builtins.str:
        """
        The namespace of the container.
        """
        return pulumi.get(self, "namespace")

    @_builtins.property
    @pulumi.getter(name="nodeName")
    def node_name(self) -> _builtins.str:
        """
        The name of the node associated with the pod running this container.
        """
        return pulumi.get(self, "node_name")

    @_builtins.property
    @pulumi.getter(name="podName")
    def pod_name(self) -> _builtins.str:
        """
        The name of the pod running this container.
        """
        return pulumi.get(self, "pod_name")

    @_builtins.property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> _builtins.str:
        """
        The start time of the container.
        """
        return pulumi.get(self, "time_started")


@pulumi.output_type
class GetFleetContainersFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionItemResult(dict):
    def __init__(__self__, *,
                 aggregation_mode: _builtins.str,
                 bucket: _builtins.str,
                 crypto_roadmap_version: _builtins.str,
                 finding_count: _builtins.int,
                 fleet_id: _builtins.str,
                 host_name: _builtins.str,
                 id: _builtins.str,
                 managed_instance_id: _builtins.str,
                 namespace: _builtins.str,
                 non_compliant_finding_count: _builtins.int,
                 object: _builtins.str,
                 summarized_event_count: _builtins.int,
                 time_created: _builtins.str,
                 time_finished: _builtins.str,
                 time_first_event: _builtins.str,
                 time_last_event: _builtins.str,
                 time_started: _builtins.str,
                 total_event_count: _builtins.int,
                 work_request_id: _builtins.str):
        """
        :param _builtins.str aggregation_mode: The aggregation mode of the crypto event analysis result.
        :param _builtins.str bucket: The Object Storage bucket name of this analysis result.
        :param _builtins.str crypto_roadmap_version: The Crypto Roadmap version used to perform the analysis.
        :param _builtins.int finding_count: FindingCount of CryptoAnalysis Report.
        :param _builtins.str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        :param _builtins.str host_name: The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        :param _builtins.str id: The OCID to identify this analysis results.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param _builtins.str namespace: The Object Storage namespace of this analysis result.
        :param _builtins.int non_compliant_finding_count: Non Compliant Finding Count of CryptoAnalysis Report.
        :param _builtins.str object: The Object Storage object name of this analysis result.
        :param _builtins.int summarized_event_count: Total number of summarized events. Summarized events are deduplicated events of interest.
        :param _builtins.str time_created: The time the result is compiled.
        :param _builtins.str time_finished: The time the JFR recording has finished.
        :param _builtins.str time_first_event: Time of the first event in the analysis.
        :param _builtins.str time_last_event: Time of the last event in the analysis.
        :param _builtins.str time_started: The time the JFR recording has started.
        :param _builtins.int total_event_count: Total number of events in the analysis.
        :param _builtins.str work_request_id: The OCID of the work request to start the analysis.
        """
        pulumi.set(__self__, "aggregation_mode", aggregation_mode)
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "crypto_roadmap_version", crypto_roadmap_version)
        pulumi.set(__self__, "finding_count", finding_count)
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "non_compliant_finding_count", non_compliant_finding_count)
        pulumi.set(__self__, "object", object)
        pulumi.set(__self__, "summarized_event_count", summarized_event_count)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_finished", time_finished)
        pulumi.set(__self__, "time_first_event", time_first_event)
        pulumi.set(__self__, "time_last_event", time_last_event)
        pulumi.set(__self__, "time_started", time_started)
        pulumi.set(__self__, "total_event_count", total_event_count)
        pulumi.set(__self__, "work_request_id", work_request_id)

    @_builtins.property
    @pulumi.getter(name="aggregationMode")
    def aggregation_mode(self) -> _builtins.str:
        """
        The aggregation mode of the crypto event analysis result.
        """
        return pulumi.get(self, "aggregation_mode")

    @_builtins.property
    @pulumi.getter
    def bucket(self) -> _builtins.str:
        """
        The Object Storage bucket name of this analysis result.
        """
        return pulumi.get(self, "bucket")

    @_builtins.property
    @pulumi.getter(name="cryptoRoadmapVersion")
    def crypto_roadmap_version(self) -> _builtins.str:
        """
        The Crypto Roadmap version used to perform the analysis.
        """
        return pulumi.get(self, "crypto_roadmap_version")

    @_builtins.property
    @pulumi.getter(name="findingCount")
    def finding_count(self) -> _builtins.int:
        """
        FindingCount of CryptoAnalysis Report.
        """
        return pulumi.get(self, "finding_count")

    @_builtins.property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The OCID to identify this analysis results.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> _builtins.str:
        """
        The Object Storage namespace of this analysis result.
        """
        return pulumi.get(self, "namespace")

    @_builtins.property
    @pulumi.getter(name="nonCompliantFindingCount")
    def non_compliant_finding_count(self) -> _builtins.int:
        """
        Non Compliant Finding Count of CryptoAnalysis Report.
        """
        return pulumi.get(self, "non_compliant_finding_count")

    @_builtins.property
    @pulumi.getter
    def object(self) -> _builtins.str:
        """
        The Object Storage object name of this analysis result.
        """
        return pulumi.get(self, "object")

    @_builtins.property
    @pulumi.getter(name="summarizedEventCount")
    def summarized_event_count(self) -> _builtins.int:
        """
        Total number of summarized events. Summarized events are deduplicated events of interest.
        """
        return pulumi.get(self, "summarized_event_count")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The time the result is compiled.
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeFinished")
    def time_finished(self) -> _builtins.str:
        """
        The time the JFR recording has finished.
        """
        return pulumi.get(self, "time_finished")

    @_builtins.property
    @pulumi.getter(name="timeFirstEvent")
    def time_first_event(self) -> _builtins.str:
        """
        Time of the first event in the analysis.
        """
        return pulumi.get(self, "time_first_event")

    @_builtins.property
    @pulumi.getter(name="timeLastEvent")
    def time_last_event(self) -> _builtins.str:
        """
        Time of the last event in the analysis.
        """
        return pulumi.get(self, "time_last_event")

    @_builtins.property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> _builtins.str:
        """
        The time the JFR recording has started.
        """
        return pulumi.get(self, "time_started")

    @_builtins.property
    @pulumi.getter(name="totalEventCount")
    def total_event_count(self) -> _builtins.int:
        """
        Total number of events in the analysis.
        """
        return pulumi.get(self, "total_event_count")

    @_builtins.property
    @pulumi.getter(name="workRequestId")
    def work_request_id(self) -> _builtins.str:
        """
        The OCID of the work request to start the analysis.
        """
        return pulumi.get(self, "work_request_id")


@pulumi.output_type
class GetFleetCryptoAnalysisResultsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetDiagnosesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetDiagnosesFleetDiagnosisCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetDiagnosesFleetDiagnosisCollectionItemResult']):
        """
        :param Sequence['GetFleetDiagnosesFleetDiagnosisCollectionItemArgs'] items: A list of the fleet resource diagnosis.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetDiagnosesFleetDiagnosisCollectionItemResult']:
        """
        A list of the fleet resource diagnosis.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetDiagnosesFleetDiagnosisCollectionItemResult(dict):
    def __init__(__self__, *,
                 resource_diagnosis: _builtins.str,
                 resource_id: _builtins.str,
                 resource_state: _builtins.str,
                 resource_type: _builtins.str):
        """
        :param _builtins.str resource_diagnosis: The diagnosis message.
        :param _builtins.str resource_id: The OCID of the external resouce needed by the fleet.
        :param _builtins.str resource_state: The state of the resource. The resource state is ACTIVE when it works properly for the fleet. In case it would cause an issue for the fleet function, the state is INACTIVE. When JMS can't locate the resource, the state is NOT_FOUND. OTHER covers other cases, such as a temporarily network issue that prevents JMS from detecting the resource. Check the resourceDiagnosis for details.
        :param _builtins.str resource_type: The type of the resource needed by the fleet. This is the role of a resource in the fleet. Use the OCID to determine the actual Oracle Cloud Infrastructure resource type such as log group or log.
        """
        pulumi.set(__self__, "resource_diagnosis", resource_diagnosis)
        pulumi.set(__self__, "resource_id", resource_id)
        pulumi.set(__self__, "resource_state", resource_state)
        pulumi.set(__self__, "resource_type", resource_type)

    @_builtins.property
    @pulumi.getter(name="resourceDiagnosis")
    def resource_diagnosis(self) -> _builtins.str:
        """
        The diagnosis message.
        """
        return pulumi.get(self, "resource_diagnosis")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> _builtins.str:
        """
        The OCID of the external resouce needed by the fleet.
        """
        return pulumi.get(self, "resource_id")

    @_builtins.property
    @pulumi.getter(name="resourceState")
    def resource_state(self) -> _builtins.str:
        """
        The state of the resource. The resource state is ACTIVE when it works properly for the fleet. In case it would cause an issue for the fleet function, the state is INACTIVE. When JMS can't locate the resource, the state is NOT_FOUND. OTHER covers other cases, such as a temporarily network issue that prevents JMS from detecting the resource. Check the resourceDiagnosis for details.
        """
        return pulumi.get(self, "resource_state")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> _builtins.str:
        """
        The type of the resource needed by the fleet. This is the role of a resource in the fleet. Use the OCID to determine the actual Oracle Cloud Infrastructure resource type such as log group or log.
        """
        return pulumi.get(self, "resource_type")


@pulumi.output_type
class GetFleetDrsFilesDrsFileCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetDrsFilesDrsFileCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetDrsFilesDrsFileCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetDrsFilesDrsFileCollectionItemResult(dict):
    def __init__(__self__, *,
                 bucket: _builtins.str,
                 checksum_type: _builtins.str,
                 checksum_value: _builtins.str,
                 drs_file_key: _builtins.str,
                 drs_file_name: _builtins.str,
                 fleet_id: _builtins.str,
                 is_default: _builtins.bool,
                 namespace: _builtins.str):
        """
        :param _builtins.str bucket: The Object Storage bucket name where the DRS file is located.
        :param _builtins.str checksum_type: The checksum type for the DRS file in Object Storage.
        :param _builtins.str checksum_value: The checksum value for the DRS file in Object Storage.
        :param _builtins.str drs_file_key: The unique identifier of the DRS file in Object Storage.
        :param _builtins.str drs_file_name: The name of the DRS file in Object Store.
        :param _builtins.str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        :param _builtins.bool is_default: To check if the DRS file is the detfault ones.
        :param _builtins.str namespace: The namespace for Object Storage.
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "checksum_type", checksum_type)
        pulumi.set(__self__, "checksum_value", checksum_value)
        pulumi.set(__self__, "drs_file_key", drs_file_key)
        pulumi.set(__self__, "drs_file_name", drs_file_name)
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "is_default", is_default)
        pulumi.set(__self__, "namespace", namespace)

    @_builtins.property
    @pulumi.getter
    def bucket(self) -> _builtins.str:
        """
        The Object Storage bucket name where the DRS file is located.
        """
        return pulumi.get(self, "bucket")

    @_builtins.property
    @pulumi.getter(name="checksumType")
    def checksum_type(self) -> _builtins.str:
        """
        The checksum type for the DRS file in Object Storage.
        """
        return pulumi.get(self, "checksum_type")

    @_builtins.property
    @pulumi.getter(name="checksumValue")
    def checksum_value(self) -> _builtins.str:
        """
        The checksum value for the DRS file in Object Storage.
        """
        return pulumi.get(self, "checksum_value")

    @_builtins.property
    @pulumi.getter(name="drsFileKey")
    def drs_file_key(self) -> _builtins.str:
        """
        The unique identifier of the DRS file in Object Storage.
        """
        return pulumi.get(self, "drs_file_key")

    @_builtins.property
    @pulumi.getter(name="drsFileName")
    def drs_file_name(self) -> _builtins.str:
        """
        The name of the DRS file in Object Store.
        """
        return pulumi.get(self, "drs_file_name")

    @_builtins.property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @_builtins.property
    @pulumi.getter(name="isDefault")
    def is_default(self) -> _builtins.bool:
        """
        To check if the DRS file is the detfault ones.
        """
        return pulumi.get(self, "is_default")

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> _builtins.str:
        """
        The namespace for Object Storage.
        """
        return pulumi.get(self, "namespace")


@pulumi.output_type
class GetFleetDrsFilesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetErrorAnalyticsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetErrorAnalyticsFleetErrorAggregationCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemResult']):
        """
        :param Sequence['GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemArgs'] items: A list of FleetErrorAggregationSummary.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemResult']:
        """
        A list of FleetErrorAggregationSummary.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemResult(dict):
    def __init__(__self__, *,
                 fleet_error_aggregations: Sequence['outputs.GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemFleetErrorAggregationResult'],
                 healthy_fleet_count: _builtins.int):
        """
        :param Sequence['GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemFleetErrorAggregationArgs'] fleet_error_aggregations: List of fleet error aggregations.
        :param _builtins.int healthy_fleet_count: Count of fleets with no problems.
        """
        pulumi.set(__self__, "fleet_error_aggregations", fleet_error_aggregations)
        pulumi.set(__self__, "healthy_fleet_count", healthy_fleet_count)

    @_builtins.property
    @pulumi.getter(name="fleetErrorAggregations")
    def fleet_error_aggregations(self) -> Sequence['outputs.GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemFleetErrorAggregationResult']:
        """
        List of fleet error aggregations.
        """
        return pulumi.get(self, "fleet_error_aggregations")

    @_builtins.property
    @pulumi.getter(name="healthyFleetCount")
    def healthy_fleet_count(self) -> _builtins.int:
        """
        Count of fleets with no problems.
        """
        return pulumi.get(self, "healthy_fleet_count")


@pulumi.output_type
class GetFleetErrorAnalyticsFleetErrorAggregationCollectionItemFleetErrorAggregationResult(dict):
    def __init__(__self__, *,
                 fleet_error_analytic_count: _builtins.int,
                 reason: _builtins.str):
        """
        :param _builtins.int fleet_error_analytic_count: Number of FleetErrors encountered for the specific reason.
        :param _builtins.str reason: Enum that uniquely identifies the fleet error.
        """
        pulumi.set(__self__, "fleet_error_analytic_count", fleet_error_analytic_count)
        pulumi.set(__self__, "reason", reason)

    @_builtins.property
    @pulumi.getter(name="fleetErrorAnalyticCount")
    def fleet_error_analytic_count(self) -> _builtins.int:
        """
        Number of FleetErrors encountered for the specific reason.
        """
        return pulumi.get(self, "fleet_error_analytic_count")

    @_builtins.property
    @pulumi.getter
    def reason(self) -> _builtins.str:
        """
        Enum that uniquely identifies the fleet error.
        """
        return pulumi.get(self, "reason")


@pulumi.output_type
class GetFleetErrorsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetErrorsFleetErrorCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetErrorsFleetErrorCollectionItemResult']):
        """
        :param Sequence['GetFleetErrorsFleetErrorCollectionItemArgs'] items: A list of FleetErrorSummary.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetErrorsFleetErrorCollectionItemResult']:
        """
        A list of FleetErrorSummary.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetErrorsFleetErrorCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: _builtins.str,
                 errors: Sequence['outputs.GetFleetErrorsFleetErrorCollectionItemErrorResult'],
                 fleet_id: _builtins.str,
                 fleet_name: _builtins.str,
                 time_first_seen: _builtins.str,
                 time_last_seen: _builtins.str):
        """
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        :param Sequence['GetFleetErrorsFleetErrorCollectionItemErrorArgs'] errors: List of fleet error details.
        :param _builtins.str fleet_id: The ID of the Fleet.
        :param _builtins.str fleet_name: The display name of the Fleet.
        :param _builtins.str time_first_seen: The timestamp of the first time an error was detected.
        :param _builtins.str time_last_seen: The timestamp of the last time an error was detected.
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "errors", errors)
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "fleet_name", fleet_name)
        pulumi.set(__self__, "time_first_seen", time_first_seen)
        pulumi.set(__self__, "time_last_seen", time_last_seen)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter
    def errors(self) -> Sequence['outputs.GetFleetErrorsFleetErrorCollectionItemErrorResult']:
        """
        List of fleet error details.
        """
        return pulumi.get(self, "errors")

    @_builtins.property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> _builtins.str:
        """
        The ID of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @_builtins.property
    @pulumi.getter(name="fleetName")
    def fleet_name(self) -> _builtins.str:
        """
        The display name of the Fleet.
        """
        return pulumi.get(self, "fleet_name")

    @_builtins.property
    @pulumi.getter(name="timeFirstSeen")
    def time_first_seen(self) -> _builtins.str:
        """
        The timestamp of the first time an error was detected.
        """
        return pulumi.get(self, "time_first_seen")

    @_builtins.property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> _builtins.str:
        """
        The timestamp of the last time an error was detected.
        """
        return pulumi.get(self, "time_last_seen")


@pulumi.output_type
class GetFleetErrorsFleetErrorCollectionItemErrorResult(dict):
    def __init__(__self__, *,
                 details: _builtins.str,
                 reason: _builtins.str,
                 time_last_seen: _builtins.str):
        """
        :param _builtins.str details: Optional string containing additional details.
        :param _builtins.str reason: The fleet error reason.
        :param _builtins.str time_last_seen: The timestamp of the last time an error was detected.
        """
        pulumi.set(__self__, "details", details)
        pulumi.set(__self__, "reason", reason)
        pulumi.set(__self__, "time_last_seen", time_last_seen)

    @_builtins.property
    @pulumi.getter
    def details(self) -> _builtins.str:
        """
        Optional string containing additional details.
        """
        return pulumi.get(self, "details")

    @_builtins.property
    @pulumi.getter
    def reason(self) -> _builtins.str:
        """
        The fleet error reason.
        """
        return pulumi.get(self, "reason")

    @_builtins.property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> _builtins.str:
        """
        The timestamp of the last time an error was detected.
        """
        return pulumi.get(self, "time_last_seen")


@pulumi.output_type
class GetFleetExportSettingExportDataFilterResult(dict):
    def __init__(__self__, *,
                 application_name_contains: Sequence[_builtins.str],
                 application_name_equal_tos: Sequence[_builtins.str],
                 java_major_versions: Sequence[_builtins.str],
                 java_vendors: Sequence[_builtins.str],
                 java_versions: Sequence[_builtins.str],
                 security_statuses: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] application_name_contains: List of application names to filter by partial match
        :param Sequence[_builtins.str] application_name_equal_tos: List of application names to filter by exact match
        :param Sequence[_builtins.str] java_major_versions: List of Java major versions to filter by
        :param Sequence[_builtins.str] java_vendors: List of Java vendors to filter by
        :param Sequence[_builtins.str] java_versions: List of Java versions to filter by
        :param Sequence[_builtins.str] security_statuses: The security statuses of the Java Runtime
        """
        pulumi.set(__self__, "application_name_contains", application_name_contains)
        pulumi.set(__self__, "application_name_equal_tos", application_name_equal_tos)
        pulumi.set(__self__, "java_major_versions", java_major_versions)
        pulumi.set(__self__, "java_vendors", java_vendors)
        pulumi.set(__self__, "java_versions", java_versions)
        pulumi.set(__self__, "security_statuses", security_statuses)

    @_builtins.property
    @pulumi.getter(name="applicationNameContains")
    def application_name_contains(self) -> Sequence[_builtins.str]:
        """
        List of application names to filter by partial match
        """
        return pulumi.get(self, "application_name_contains")

    @_builtins.property
    @pulumi.getter(name="applicationNameEqualTos")
    def application_name_equal_tos(self) -> Sequence[_builtins.str]:
        """
        List of application names to filter by exact match
        """
        return pulumi.get(self, "application_name_equal_tos")

    @_builtins.property
    @pulumi.getter(name="javaMajorVersions")
    def java_major_versions(self) -> Sequence[_builtins.str]:
        """
        List of Java major versions to filter by
        """
        return pulumi.get(self, "java_major_versions")

    @_builtins.property
    @pulumi.getter(name="javaVendors")
    def java_vendors(self) -> Sequence[_builtins.str]:
        """
        List of Java vendors to filter by
        """
        return pulumi.get(self, "java_vendors")

    @_builtins.property
    @pulumi.getter(name="javaVersions")
    def java_versions(self) -> Sequence[_builtins.str]:
        """
        List of Java versions to filter by
        """
        return pulumi.get(self, "java_versions")

    @_builtins.property
    @pulumi.getter(name="securityStatuses")
    def security_statuses(self) -> Sequence[_builtins.str]:
        """
        The security statuses of the Java Runtime
        """
        return pulumi.get(self, "security_statuses")


@pulumi.output_type
class GetFleetInventoryLogResult(dict):
    def __init__(__self__, *,
                 log_group_id: _builtins.str,
                 log_id: _builtins.str):
        """
        :param _builtins.str log_group_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param _builtins.str log_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @_builtins.property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @_builtins.property
    @pulumi.getter(name="logId")
    def log_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetFleetJavaMigrationAnalysisResultsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItemResult(dict):
    def __init__(__self__, *,
                 application_execution_type: _builtins.str,
                 application_key: _builtins.str,
                 application_name: _builtins.str,
                 application_path: _builtins.str,
                 bucket: _builtins.str,
                 fleet_id: _builtins.str,
                 host_name: _builtins.str,
                 id: _builtins.str,
                 managed_instance_id: _builtins.str,
                 metadata: _builtins.str,
                 namespace: _builtins.str,
                 object_lists: Sequence[_builtins.str],
                 object_storage_upload_dir_path: _builtins.str,
                 source_jdk_version: _builtins.str,
                 target_jdk_version: _builtins.str,
                 time_created: _builtins.str,
                 work_request_id: _builtins.str):
        """
        :param _builtins.str application_execution_type: Execution type of the application for an application type, such as WAR and EAR, that is deployed or installed.
        :param _builtins.str application_key: The unique key that identifies the application.
        :param _builtins.str application_name: The name of the application.
        :param _builtins.str application_path: The installation path of the application for which the Java migration analysis was performed.
        :param _builtins.str bucket: The name of the object storage bucket that contains the results of the migration analysis.
        :param _builtins.str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        :param _builtins.str host_name: The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        :param _builtins.str id: The OCID of the migration analysis report.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param _builtins.str metadata: Additional info reserved for future use.
        :param _builtins.str namespace: The object storage namespace that contains the results of the migration analysis.
        :param Sequence[_builtins.str] object_lists: The names of the object storage objects that contain the results of the migration analysis.
        :param _builtins.str object_storage_upload_dir_path: The directory path of the object storage bucket that contains the results of the migration analysis.
        :param _builtins.str source_jdk_version: The source JDK version of the application that's currently running.
        :param _builtins.str target_jdk_version: The target JDK version of the application to be migrated.
        :param _builtins.str time_created: The time the result is compiled.
        :param _builtins.str work_request_id: The OCID of the work request of this analysis.
        """
        pulumi.set(__self__, "application_execution_type", application_execution_type)
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "application_name", application_name)
        pulumi.set(__self__, "application_path", application_path)
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "metadata", metadata)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object_lists", object_lists)
        pulumi.set(__self__, "object_storage_upload_dir_path", object_storage_upload_dir_path)
        pulumi.set(__self__, "source_jdk_version", source_jdk_version)
        pulumi.set(__self__, "target_jdk_version", target_jdk_version)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "work_request_id", work_request_id)

    @_builtins.property
    @pulumi.getter(name="applicationExecutionType")
    def application_execution_type(self) -> _builtins.str:
        """
        Execution type of the application for an application type, such as WAR and EAR, that is deployed or installed.
        """
        return pulumi.get(self, "application_execution_type")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        The unique key that identifies the application.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="applicationName")
    def application_name(self) -> _builtins.str:
        """
        The name of the application.
        """
        return pulumi.get(self, "application_name")

    @_builtins.property
    @pulumi.getter(name="applicationPath")
    def application_path(self) -> _builtins.str:
        """
        The installation path of the application for which the Java migration analysis was performed.
        """
        return pulumi.get(self, "application_path")

    @_builtins.property
    @pulumi.getter
    def bucket(self) -> _builtins.str:
        """
        The name of the object storage bucket that contains the results of the migration analysis.
        """
        return pulumi.get(self, "bucket")

    @_builtins.property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The OCID of the migration analysis report.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter
    def metadata(self) -> _builtins.str:
        """
        Additional info reserved for future use.
        """
        return pulumi.get(self, "metadata")

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> _builtins.str:
        """
        The object storage namespace that contains the results of the migration analysis.
        """
        return pulumi.get(self, "namespace")

    @_builtins.property
    @pulumi.getter(name="objectLists")
    def object_lists(self) -> Sequence[_builtins.str]:
        """
        The names of the object storage objects that contain the results of the migration analysis.
        """
        return pulumi.get(self, "object_lists")

    @_builtins.property
    @pulumi.getter(name="objectStorageUploadDirPath")
    def object_storage_upload_dir_path(self) -> _builtins.str:
        """
        The directory path of the object storage bucket that contains the results of the migration analysis.
        """
        return pulumi.get(self, "object_storage_upload_dir_path")

    @_builtins.property
    @pulumi.getter(name="sourceJdkVersion")
    def source_jdk_version(self) -> _builtins.str:
        """
        The source JDK version of the application that's currently running.
        """
        return pulumi.get(self, "source_jdk_version")

    @_builtins.property
    @pulumi.getter(name="targetJdkVersion")
    def target_jdk_version(self) -> _builtins.str:
        """
        The target JDK version of the application to be migrated.
        """
        return pulumi.get(self, "target_jdk_version")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The time the result is compiled.
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="workRequestId")
    def work_request_id(self) -> _builtins.str:
        """
        The OCID of the work request of this analysis.
        """
        return pulumi.get(self, "work_request_id")


@pulumi.output_type
class GetFleetLibraryApplicationsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetLibraryApplicationsLibraryApplicationUsageCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetLibraryApplicationsLibraryApplicationUsageCollectionItemResult']):
        """
        :param Sequence['GetFleetLibraryApplicationsLibraryApplicationUsageCollectionItemArgs'] items: A list of LibraryApplicationUsageSummaries.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetLibraryApplicationsLibraryApplicationUsageCollectionItemResult']:
        """
        A list of LibraryApplicationUsageSummaries.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetLibraryApplicationsLibraryApplicationUsageCollectionItemResult(dict):
    def __init__(__self__, *,
                 application_key: _builtins.str,
                 application_name: _builtins.str,
                 first_seen_in_classpath: _builtins.str,
                 last_detected_dynamically: _builtins.str,
                 last_seen_in_classpath: _builtins.str,
                 managed_instance_count: _builtins.int):
        """
        :param _builtins.str application_key: The internal identifier of a Java application.
        :param _builtins.str application_name: The name of the application.
        :param _builtins.str first_seen_in_classpath: The timestamp of the first time the specified library was detected in classpath.
        :param _builtins.str last_detected_dynamically: The date and time a library or Java package was _last_ detected in a dynamic library scan.
        :param _builtins.str last_seen_in_classpath: The timestamp of the last time the specified library was detected in classpath.
        :param _builtins.int managed_instance_count: The count of managed instances wherein the specified library was detected.
        """
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "application_name", application_name)
        pulumi.set(__self__, "first_seen_in_classpath", first_seen_in_classpath)
        pulumi.set(__self__, "last_detected_dynamically", last_detected_dynamically)
        pulumi.set(__self__, "last_seen_in_classpath", last_seen_in_classpath)
        pulumi.set(__self__, "managed_instance_count", managed_instance_count)

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        The internal identifier of a Java application.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="applicationName")
    def application_name(self) -> _builtins.str:
        """
        The name of the application.
        """
        return pulumi.get(self, "application_name")

    @_builtins.property
    @pulumi.getter(name="firstSeenInClasspath")
    def first_seen_in_classpath(self) -> _builtins.str:
        """
        The timestamp of the first time the specified library was detected in classpath.
        """
        return pulumi.get(self, "first_seen_in_classpath")

    @_builtins.property
    @pulumi.getter(name="lastDetectedDynamically")
    def last_detected_dynamically(self) -> _builtins.str:
        """
        The date and time a library or Java package was _last_ detected in a dynamic library scan.
        """
        return pulumi.get(self, "last_detected_dynamically")

    @_builtins.property
    @pulumi.getter(name="lastSeenInClasspath")
    def last_seen_in_classpath(self) -> _builtins.str:
        """
        The timestamp of the last time the specified library was detected in classpath.
        """
        return pulumi.get(self, "last_seen_in_classpath")

    @_builtins.property
    @pulumi.getter(name="managedInstanceCount")
    def managed_instance_count(self) -> _builtins.int:
        """
        The count of managed instances wherein the specified library was detected.
        """
        return pulumi.get(self, "managed_instance_count")


@pulumi.output_type
class GetFleetLibraryManagedInstancesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItemResult']):
        """
        :param Sequence['GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItemArgs'] items: A list of LibraryManagedInstanceUsageSummaries.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItemResult']:
        """
        A list of LibraryManagedInstanceUsageSummaries.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItemResult(dict):
    def __init__(__self__, *,
                 application_count: _builtins.int,
                 first_seen_in_classpath: _builtins.str,
                 hostname: _builtins.str,
                 last_detected_dynamically: _builtins.str,
                 last_seen_in_classpath: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.int application_count: The count of applications where the specified library was detected.
        :param _builtins.str first_seen_in_classpath: The timestamp of the first time the specified library was detected in classpath.
        :param _builtins.str hostname: The hostname of the managed instance.
        :param _builtins.str last_detected_dynamically: The date and time a library or Java package was _last_ detected in a dynamic library scan.
        :param _builtins.str last_seen_in_classpath: The timestamp of the last time the specified library was detected in classpath.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the managed instance.
        """
        pulumi.set(__self__, "application_count", application_count)
        pulumi.set(__self__, "first_seen_in_classpath", first_seen_in_classpath)
        pulumi.set(__self__, "hostname", hostname)
        pulumi.set(__self__, "last_detected_dynamically", last_detected_dynamically)
        pulumi.set(__self__, "last_seen_in_classpath", last_seen_in_classpath)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationCount")
    def application_count(self) -> _builtins.int:
        """
        The count of applications where the specified library was detected.
        """
        return pulumi.get(self, "application_count")

    @_builtins.property
    @pulumi.getter(name="firstSeenInClasspath")
    def first_seen_in_classpath(self) -> _builtins.str:
        """
        The timestamp of the first time the specified library was detected in classpath.
        """
        return pulumi.get(self, "first_seen_in_classpath")

    @_builtins.property
    @pulumi.getter
    def hostname(self) -> _builtins.str:
        """
        The hostname of the managed instance.
        """
        return pulumi.get(self, "hostname")

    @_builtins.property
    @pulumi.getter(name="lastDetectedDynamically")
    def last_detected_dynamically(self) -> _builtins.str:
        """
        The date and time a library or Java package was _last_ detected in a dynamic library scan.
        """
        return pulumi.get(self, "last_detected_dynamically")

    @_builtins.property
    @pulumi.getter(name="lastSeenInClasspath")
    def last_seen_in_classpath(self) -> _builtins.str:
        """
        The timestamp of the last time the specified library was detected in classpath.
        """
        return pulumi.get(self, "last_seen_in_classpath")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetFleetOperationLogResult(dict):
    def __init__(__self__, *,
                 log_group_id: _builtins.str,
                 log_id: _builtins.str):
        """
        :param _builtins.str log_group_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param _builtins.str log_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @_builtins.property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @_builtins.property
    @pulumi.getter(name="logId")
    def log_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetFleetPerformanceTuningAnalysisResultsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetPerformanceTuningAnalysisResultsPerformanceTuningAnalysisResultCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetPerformanceTuningAnalysisResultsPerformanceTuningAnalysisResultCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetPerformanceTuningAnalysisResultsPerformanceTuningAnalysisResultCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetPerformanceTuningAnalysisResultsPerformanceTuningAnalysisResultCollectionItemResult(dict):
    def __init__(__self__, *,
                 application_id: _builtins.str,
                 application_installation_id: _builtins.str,
                 application_installation_path: _builtins.str,
                 application_name: _builtins.str,
                 bucket: _builtins.str,
                 fleet_id: _builtins.str,
                 host_name: _builtins.str,
                 id: _builtins.str,
                 managed_instance_id: _builtins.str,
                 namespace: _builtins.str,
                 object: _builtins.str,
                 result: _builtins.str,
                 time_created: _builtins.str,
                 time_finished: _builtins.str,
                 time_started: _builtins.str,
                 warning_count: _builtins.int,
                 work_request_id: _builtins.str):
        """
        :param _builtins.str application_id: The Fleet-unique identifier of the related application.
        :param _builtins.str application_installation_id: The internal identifier of the application installation for which the report has been generated.
        :param _builtins.str application_installation_path: The installation path of the application for which the report has been generated.
        :param _builtins.str application_name: The name of the application.
        :param _builtins.str bucket: The Object Storage bucket name of this analysis result.
        :param _builtins.str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        :param _builtins.str host_name: The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        :param _builtins.str id: The OCID to identify this analysis results.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param _builtins.str namespace: The Object Storage namespace of this analysis result.
        :param _builtins.str object: The Object Storage object name of this analysis result.
        :param _builtins.str result: Result of the analysis based on whether warnings have been found or not.
        :param _builtins.str time_created: The time the result is compiled.
        :param _builtins.str time_finished: The time the JFR recording has finished.
        :param _builtins.str time_started: The time the JFR recording has started.
        :param _builtins.int warning_count: Total number of warnings reported by the analysis.
        :param _builtins.str work_request_id: The OCID of the work request to start the analysis.
        """
        pulumi.set(__self__, "application_id", application_id)
        pulumi.set(__self__, "application_installation_id", application_installation_id)
        pulumi.set(__self__, "application_installation_path", application_installation_path)
        pulumi.set(__self__, "application_name", application_name)
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "object", object)
        pulumi.set(__self__, "result", result)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_finished", time_finished)
        pulumi.set(__self__, "time_started", time_started)
        pulumi.set(__self__, "warning_count", warning_count)
        pulumi.set(__self__, "work_request_id", work_request_id)

    @_builtins.property
    @pulumi.getter(name="applicationId")
    def application_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related application.
        """
        return pulumi.get(self, "application_id")

    @_builtins.property
    @pulumi.getter(name="applicationInstallationId")
    def application_installation_id(self) -> _builtins.str:
        """
        The internal identifier of the application installation for which the report has been generated.
        """
        return pulumi.get(self, "application_installation_id")

    @_builtins.property
    @pulumi.getter(name="applicationInstallationPath")
    def application_installation_path(self) -> _builtins.str:
        """
        The installation path of the application for which the report has been generated.
        """
        return pulumi.get(self, "application_installation_path")

    @_builtins.property
    @pulumi.getter(name="applicationName")
    def application_name(self) -> _builtins.str:
        """
        The name of the application.
        """
        return pulumi.get(self, "application_name")

    @_builtins.property
    @pulumi.getter
    def bucket(self) -> _builtins.str:
        """
        The Object Storage bucket name of this analysis result.
        """
        return pulumi.get(self, "bucket")

    @_builtins.property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The OCID to identify this analysis results.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> _builtins.str:
        """
        The Object Storage namespace of this analysis result.
        """
        return pulumi.get(self, "namespace")

    @_builtins.property
    @pulumi.getter
    def object(self) -> _builtins.str:
        """
        The Object Storage object name of this analysis result.
        """
        return pulumi.get(self, "object")

    @_builtins.property
    @pulumi.getter
    def result(self) -> _builtins.str:
        """
        Result of the analysis based on whether warnings have been found or not.
        """
        return pulumi.get(self, "result")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The time the result is compiled.
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeFinished")
    def time_finished(self) -> _builtins.str:
        """
        The time the JFR recording has finished.
        """
        return pulumi.get(self, "time_finished")

    @_builtins.property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> _builtins.str:
        """
        The time the JFR recording has started.
        """
        return pulumi.get(self, "time_started")

    @_builtins.property
    @pulumi.getter(name="warningCount")
    def warning_count(self) -> _builtins.int:
        """
        Total number of warnings reported by the analysis.
        """
        return pulumi.get(self, "warning_count")

    @_builtins.property
    @pulumi.getter(name="workRequestId")
    def work_request_id(self) -> _builtins.str:
        """
        The OCID of the work request to start the analysis.
        """
        return pulumi.get(self, "work_request_id")


@pulumi.output_type
class GetFleetUncorrelatedPackageApplicationsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItemResult']):
        """
        :param Sequence['GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItemArgs'] items: A list of UncorrelatedPackageApplicationUsageSummaries.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItemResult']:
        """
        A list of UncorrelatedPackageApplicationUsageSummaries.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItemResult(dict):
    def __init__(__self__, *,
                 application_key: _builtins.str,
                 application_name: _builtins.str,
                 last_detected_dynamically: _builtins.str,
                 managed_instance_count: _builtins.int):
        """
        :param _builtins.str application_key: The internal identifier of a Java application.
        :param _builtins.str application_name: The displayed name of the Java application.
        :param _builtins.str last_detected_dynamically: The date and time a library or Java package was _last_ detected in a dynamic library scan.
        :param _builtins.int managed_instance_count: The count of managed instances wherein the specified library was detected.
        """
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "application_name", application_name)
        pulumi.set(__self__, "last_detected_dynamically", last_detected_dynamically)
        pulumi.set(__self__, "managed_instance_count", managed_instance_count)

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        The internal identifier of a Java application.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="applicationName")
    def application_name(self) -> _builtins.str:
        """
        The displayed name of the Java application.
        """
        return pulumi.get(self, "application_name")

    @_builtins.property
    @pulumi.getter(name="lastDetectedDynamically")
    def last_detected_dynamically(self) -> _builtins.str:
        """
        The date and time a library or Java package was _last_ detected in a dynamic library scan.
        """
        return pulumi.get(self, "last_detected_dynamically")

    @_builtins.property
    @pulumi.getter(name="managedInstanceCount")
    def managed_instance_count(self) -> _builtins.int:
        """
        The count of managed instances wherein the specified library was detected.
        """
        return pulumi.get(self, "managed_instance_count")


@pulumi.output_type
class GetFleetUncorrelatedPackageManagedInstancesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetUncorrelatedPackageManagedInstancesUncorrelatedPackageManagedInstanceUsageCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetUncorrelatedPackageManagedInstancesUncorrelatedPackageManagedInstanceUsageCollectionItemResult']):
        """
        :param Sequence['GetFleetUncorrelatedPackageManagedInstancesUncorrelatedPackageManagedInstanceUsageCollectionItemArgs'] items: A list of UncorrelatedPackageManagedInstanceUsageSummaries.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetUncorrelatedPackageManagedInstancesUncorrelatedPackageManagedInstanceUsageCollectionItemResult']:
        """
        A list of UncorrelatedPackageManagedInstanceUsageSummaries.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetUncorrelatedPackageManagedInstancesUncorrelatedPackageManagedInstanceUsageCollectionItemResult(dict):
    def __init__(__self__, *,
                 application_count: _builtins.int,
                 hostname: _builtins.str,
                 last_detected_dynamically: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.int application_count: The count of applications wherein the specified library was detected.
        :param _builtins.str hostname: The hostname of the managed instance.
        :param _builtins.str last_detected_dynamically: The date and time a library or Java package was _last_ detected in a dynamic library scan.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the managed instance.
        """
        pulumi.set(__self__, "application_count", application_count)
        pulumi.set(__self__, "hostname", hostname)
        pulumi.set(__self__, "last_detected_dynamically", last_detected_dynamically)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationCount")
    def application_count(self) -> _builtins.int:
        """
        The count of applications wherein the specified library was detected.
        """
        return pulumi.get(self, "application_count")

    @_builtins.property
    @pulumi.getter
    def hostname(self) -> _builtins.str:
        """
        The hostname of the managed instance.
        """
        return pulumi.get(self, "hostname")

    @_builtins.property
    @pulumi.getter(name="lastDetectedDynamically")
    def last_detected_dynamically(self) -> _builtins.str:
        """
        The date and time a library or Java package was _last_ detected in a dynamic library scan.
        """
        return pulumi.get(self, "last_detected_dynamically")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetFleetUncorrelatedPackagesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItemResult']):
        """
        :param Sequence['GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItemArgs'] items: A list of uncorrelated package summaries.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItemResult']:
        """
        A list of uncorrelated package summaries.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItemResult(dict):
    def __init__(__self__, *,
                 application_count: _builtins.int,
                 last_detected_dynamically: _builtins.str,
                 managed_instance_count: _builtins.int,
                 package_name: _builtins.str):
        """
        :param _builtins.int application_count: The count of applications wherein the specified package was detected.
        :param _builtins.str last_detected_dynamically: The date and time a library or Java package was _last_ detected in a dynamic library scan.
        :param _builtins.int managed_instance_count: The count of managed instances wherein the specified package was detected.
        :param _builtins.str package_name: The unique identifier of a Java package.
        """
        pulumi.set(__self__, "application_count", application_count)
        pulumi.set(__self__, "last_detected_dynamically", last_detected_dynamically)
        pulumi.set(__self__, "managed_instance_count", managed_instance_count)
        pulumi.set(__self__, "package_name", package_name)

    @_builtins.property
    @pulumi.getter(name="applicationCount")
    def application_count(self) -> _builtins.int:
        """
        The count of applications wherein the specified package was detected.
        """
        return pulumi.get(self, "application_count")

    @_builtins.property
    @pulumi.getter(name="lastDetectedDynamically")
    def last_detected_dynamically(self) -> _builtins.str:
        """
        The date and time a library or Java package was _last_ detected in a dynamic library scan.
        """
        return pulumi.get(self, "last_detected_dynamically")

    @_builtins.property
    @pulumi.getter(name="managedInstanceCount")
    def managed_instance_count(self) -> _builtins.int:
        """
        The count of managed instances wherein the specified package was detected.
        """
        return pulumi.get(self, "managed_instance_count")

    @_builtins.property
    @pulumi.getter(name="packageName")
    def package_name(self) -> _builtins.str:
        """
        The unique identifier of a Java package.
        """
        return pulumi.get(self, "package_name")


@pulumi.output_type
class GetFleetsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetsFleetCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetsFleetCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetsFleetCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetsFleetCollectionItemResult(dict):
    def __init__(__self__, *,
                 approximate_application_count: _builtins.int,
                 approximate_installation_count: _builtins.int,
                 approximate_java_server_count: _builtins.int,
                 approximate_jre_count: _builtins.int,
                 approximate_library_count: _builtins.int,
                 approximate_library_vulnerability_count: _builtins.int,
                 approximate_managed_instance_count: _builtins.int,
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 description: _builtins.str,
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 inventory_logs: Sequence['outputs.GetFleetsFleetCollectionItemInventoryLogResult'],
                 is_advanced_features_enabled: _builtins.bool,
                 is_export_setting_enabled: _builtins.bool,
                 operation_logs: Sequence['outputs.GetFleetsFleetCollectionItemOperationLogResult'],
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str):
        """
        :param _builtins.int approximate_application_count: The approximate count of all unique applications in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        :param _builtins.int approximate_installation_count: The approximate count of all unique Java installations in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        :param _builtins.int approximate_java_server_count: The approximate count of all unique Java servers in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        :param _builtins.int approximate_jre_count: The approximate count of all unique Java Runtimes in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        :param _builtins.int approximate_library_count: The approximate count of all unique libraries in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        :param _builtins.int approximate_library_vulnerability_count: The approximate count of all unique library vulnerabilities in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        :param _builtins.int approximate_managed_instance_count: The approximate count of all unique managed instances in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        :param _builtins.str description: The Fleet's description.
        :param _builtins.str display_name: The display name.
        :param Mapping[str, _builtins.str] freeform_tags: Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        :param _builtins.str id: The ID.
        :param Sequence['GetFleetsFleetCollectionItemInventoryLogArgs'] inventory_logs: Custom Log for inventory or operation log.
        :param _builtins.bool is_advanced_features_enabled: Whether or not advanced features are enabled in this Fleet. Deprecated, use `/fleets/{fleetId}/advanceFeatureConfiguration` API instead.
        :param _builtins.bool is_export_setting_enabled: Whether or not export setting is enabled in this Fleet.
        :param Sequence['GetFleetsFleetCollectionItemOperationLogArgs'] operation_logs: Custom Log for inventory or operation log.
        :param _builtins.str state: The state of the lifecycle.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: The creation date and time of the Fleet (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        pulumi.set(__self__, "approximate_application_count", approximate_application_count)
        pulumi.set(__self__, "approximate_installation_count", approximate_installation_count)
        pulumi.set(__self__, "approximate_java_server_count", approximate_java_server_count)
        pulumi.set(__self__, "approximate_jre_count", approximate_jre_count)
        pulumi.set(__self__, "approximate_library_count", approximate_library_count)
        pulumi.set(__self__, "approximate_library_vulnerability_count", approximate_library_vulnerability_count)
        pulumi.set(__self__, "approximate_managed_instance_count", approximate_managed_instance_count)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "inventory_logs", inventory_logs)
        pulumi.set(__self__, "is_advanced_features_enabled", is_advanced_features_enabled)
        pulumi.set(__self__, "is_export_setting_enabled", is_export_setting_enabled)
        pulumi.set(__self__, "operation_logs", operation_logs)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)

    @_builtins.property
    @pulumi.getter(name="approximateApplicationCount")
    def approximate_application_count(self) -> _builtins.int:
        """
        The approximate count of all unique applications in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_application_count")

    @_builtins.property
    @pulumi.getter(name="approximateInstallationCount")
    def approximate_installation_count(self) -> _builtins.int:
        """
        The approximate count of all unique Java installations in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_installation_count")

    @_builtins.property
    @pulumi.getter(name="approximateJavaServerCount")
    def approximate_java_server_count(self) -> _builtins.int:
        """
        The approximate count of all unique Java servers in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_java_server_count")

    @_builtins.property
    @pulumi.getter(name="approximateJreCount")
    def approximate_jre_count(self) -> _builtins.int:
        """
        The approximate count of all unique Java Runtimes in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_jre_count")

    @_builtins.property
    @pulumi.getter(name="approximateLibraryCount")
    def approximate_library_count(self) -> _builtins.int:
        """
        The approximate count of all unique libraries in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_library_count")

    @_builtins.property
    @pulumi.getter(name="approximateLibraryVulnerabilityCount")
    def approximate_library_vulnerability_count(self) -> _builtins.int:
        """
        The approximate count of all unique library vulnerabilities in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_library_vulnerability_count")

    @_builtins.property
    @pulumi.getter(name="approximateManagedInstanceCount")
    def approximate_managed_instance_count(self) -> _builtins.int:
        """
        The approximate count of all unique managed instances in the Fleet in the past seven days. This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_managed_instance_count")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Fleet's description.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The display name.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="inventoryLogs")
    def inventory_logs(self) -> Sequence['outputs.GetFleetsFleetCollectionItemInventoryLogResult']:
        """
        Custom Log for inventory or operation log.
        """
        return pulumi.get(self, "inventory_logs")

    @_builtins.property
    @pulumi.getter(name="isAdvancedFeaturesEnabled")
    def is_advanced_features_enabled(self) -> _builtins.bool:
        """
        Whether or not advanced features are enabled in this Fleet. Deprecated, use `/fleets/{fleetId}/advanceFeatureConfiguration` API instead.
        """
        return pulumi.get(self, "is_advanced_features_enabled")

    @_builtins.property
    @pulumi.getter(name="isExportSettingEnabled")
    def is_export_setting_enabled(self) -> _builtins.bool:
        """
        Whether or not export setting is enabled in this Fleet.
        """
        return pulumi.get(self, "is_export_setting_enabled")

    @_builtins.property
    @pulumi.getter(name="operationLogs")
    def operation_logs(self) -> Sequence['outputs.GetFleetsFleetCollectionItemOperationLogResult']:
        """
        Custom Log for inventory or operation log.
        """
        return pulumi.get(self, "operation_logs")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        The state of the lifecycle.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The creation date and time of the Fleet (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_created")


@pulumi.output_type
class GetFleetsFleetCollectionItemInventoryLogResult(dict):
    def __init__(__self__, *,
                 log_group_id: _builtins.str,
                 log_id: _builtins.str):
        """
        :param _builtins.str log_group_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param _builtins.str log_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @_builtins.property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @_builtins.property
    @pulumi.getter(name="logId")
    def log_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetFleetsFleetCollectionItemOperationLogResult(dict):
    def __init__(__self__, *,
                 log_group_id: _builtins.str,
                 log_id: _builtins.str):
        """
        :param _builtins.str log_group_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param _builtins.str log_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @_builtins.property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @_builtins.property
    @pulumi.getter(name="logId")
    def log_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetInstallationSiteItemResult(dict):
    def __init__(__self__, *,
                 approximate_application_count: _builtins.int,
                 blocklists: Sequence['outputs.GetInstallationSiteItemBlocklistResult'],
                 installation_key: _builtins.str,
                 jres: Sequence['outputs.GetInstallationSiteItemJreResult'],
                 managed_instance_id: _builtins.str,
                 operating_systems: Sequence['outputs.GetInstallationSiteItemOperatingSystemResult'],
                 path: _builtins.str,
                 security_status: _builtins.str,
                 state: _builtins.str,
                 time_last_seen: _builtins.str):
        """
        :param _builtins.int approximate_application_count: The approximate count of applications running on this installation
        :param Sequence['GetInstallationSiteItemBlocklistArgs'] blocklists: The list of operations that are blocklisted.
        :param _builtins.str installation_key: The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        :param Sequence['GetInstallationSiteItemJreArgs'] jres: The essential properties to identify a Java Runtime.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param Sequence['GetInstallationSiteItemOperatingSystemArgs'] operating_systems: Operating System of the platform on which the Java Runtime was reported.
        :param _builtins.str path: The file system path of the installation.
        :param _builtins.str security_status: The security status of the Java Runtime.
        :param _builtins.str state: The lifecycle state of the installation site.
        :param _builtins.str time_last_seen: The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        pulumi.set(__self__, "approximate_application_count", approximate_application_count)
        pulumi.set(__self__, "blocklists", blocklists)
        pulumi.set(__self__, "installation_key", installation_key)
        pulumi.set(__self__, "jres", jres)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "operating_systems", operating_systems)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "security_status", security_status)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "time_last_seen", time_last_seen)

    @_builtins.property
    @pulumi.getter(name="approximateApplicationCount")
    def approximate_application_count(self) -> _builtins.int:
        """
        The approximate count of applications running on this installation
        """
        return pulumi.get(self, "approximate_application_count")

    @_builtins.property
    @pulumi.getter
    def blocklists(self) -> Sequence['outputs.GetInstallationSiteItemBlocklistResult']:
        """
        The list of operations that are blocklisted.
        """
        return pulumi.get(self, "blocklists")

    @_builtins.property
    @pulumi.getter(name="installationKey")
    def installation_key(self) -> _builtins.str:
        """
        The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        """
        return pulumi.get(self, "installation_key")

    @_builtins.property
    @pulumi.getter
    def jres(self) -> Sequence['outputs.GetInstallationSiteItemJreResult']:
        """
        The essential properties to identify a Java Runtime.
        """
        return pulumi.get(self, "jres")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="operatingSystems")
    def operating_systems(self) -> Sequence['outputs.GetInstallationSiteItemOperatingSystemResult']:
        """
        Operating System of the platform on which the Java Runtime was reported.
        """
        return pulumi.get(self, "operating_systems")

    @_builtins.property
    @pulumi.getter
    def path(self) -> _builtins.str:
        """
        The file system path of the installation.
        """
        return pulumi.get(self, "path")

    @_builtins.property
    @pulumi.getter(name="securityStatus")
    def security_status(self) -> _builtins.str:
        """
        The security status of the Java Runtime.
        """
        return pulumi.get(self, "security_status")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        The lifecycle state of the installation site.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> _builtins.str:
        """
        The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        return pulumi.get(self, "time_last_seen")


@pulumi.output_type
class GetInstallationSiteItemBlocklistResult(dict):
    def __init__(__self__, *,
                 operation: _builtins.str,
                 reason: _builtins.str):
        """
        :param _builtins.str operation: The operation type.
        :param _builtins.str reason: The reason why the operation is blocklisted.
        """
        pulumi.set(__self__, "operation", operation)
        pulumi.set(__self__, "reason", reason)

    @_builtins.property
    @pulumi.getter
    def operation(self) -> _builtins.str:
        """
        The operation type.
        """
        return pulumi.get(self, "operation")

    @_builtins.property
    @pulumi.getter
    def reason(self) -> _builtins.str:
        """
        The reason why the operation is blocklisted.
        """
        return pulumi.get(self, "reason")


@pulumi.output_type
class GetInstallationSiteItemJreResult(dict):
    def __init__(__self__, *,
                 distribution: _builtins.str,
                 jre_key: _builtins.str,
                 vendor: _builtins.str,
                 version: _builtins.str):
        """
        :param _builtins.str distribution: The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        :param _builtins.str jre_key: The unique identifier for a Java Runtime.
        :param _builtins.str vendor: The vendor of the Java Runtime.
        :param _builtins.str version: The version of the operating system as provided by the Java system property os.version.
        """
        pulumi.set(__self__, "distribution", distribution)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "vendor", vendor)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def distribution(self) -> _builtins.str:
        """
        The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        """
        return pulumi.get(self, "distribution")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> _builtins.str:
        """
        The unique identifier for a Java Runtime.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter
    def vendor(self) -> _builtins.str:
        """
        The vendor of the Java Runtime.
        """
        return pulumi.get(self, "vendor")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        The version of the operating system as provided by the Java system property os.version.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetInstallationSiteItemOperatingSystemResult(dict):
    def __init__(__self__, *,
                 architecture: _builtins.str,
                 family: _builtins.str,
                 managed_instance_count: _builtins.int,
                 name: _builtins.str,
                 version: _builtins.str):
        """
        :param _builtins.str architecture: The architecture of the operating system as provided by the Java system property os.arch.
        :param _builtins.str family: The operating system type, such as Windows or Linux
        :param _builtins.int managed_instance_count: Number of instances running the operating system
        :param _builtins.str name: The name of the operating system as provided by the Java system property os.name.
        :param _builtins.str version: The version of the operating system as provided by the Java system property os.version.
        """
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "family", family)
        pulumi.set(__self__, "managed_instance_count", managed_instance_count)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        The architecture of the operating system as provided by the Java system property os.arch.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter
    def family(self) -> _builtins.str:
        """
        The operating system type, such as Windows or Linux
        """
        return pulumi.get(self, "family")

    @_builtins.property
    @pulumi.getter(name="managedInstanceCount")
    def managed_instance_count(self) -> _builtins.int:
        """
        Number of instances running the operating system
        """
        return pulumi.get(self, "managed_instance_count")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the operating system as provided by the Java system property os.name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        The version of the operating system as provided by the Java system property os.version.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetInstallationSitesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        """
        :param _builtins.str name: The name of the operating system as provided by the Java system property os.name.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the operating system as provided by the Java system property os.name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemResult']):
        """
        :param Sequence['GetInstallationSitesInstallationSiteCollectionItemArgs'] items: A list of Java installation sites.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemResult']:
        """
        A list of Java installation sites.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionItemResult(dict):
    def __init__(__self__, *,
                 approximate_application_count: _builtins.int,
                 blocklists: Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemBlocklistResult'],
                 installation_key: _builtins.str,
                 jres: Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemJreResult'],
                 managed_instance_id: _builtins.str,
                 operating_systems: Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemOperatingSystemResult'],
                 path: _builtins.str,
                 security_status: _builtins.str,
                 state: _builtins.str,
                 time_last_seen: _builtins.str):
        """
        :param _builtins.int approximate_application_count: The approximate count of applications running on this installation
        :param Sequence['GetInstallationSitesInstallationSiteCollectionItemBlocklistArgs'] blocklists: The list of operations that are blocklisted.
        :param _builtins.str installation_key: The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        :param Sequence['GetInstallationSitesInstallationSiteCollectionItemJreArgs'] jres: The essential properties to identify a Java Runtime.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param Sequence['GetInstallationSitesInstallationSiteCollectionItemOperatingSystemArgs'] operating_systems: Operating System of the platform on which the Java Runtime was reported.
        :param _builtins.str path: The file system path of the installation.
        :param _builtins.str security_status: The security status of the Java Runtime.
        :param _builtins.str state: The lifecycle state of the installation site.
        :param _builtins.str time_last_seen: The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        pulumi.set(__self__, "approximate_application_count", approximate_application_count)
        pulumi.set(__self__, "blocklists", blocklists)
        pulumi.set(__self__, "installation_key", installation_key)
        pulumi.set(__self__, "jres", jres)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "operating_systems", operating_systems)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "security_status", security_status)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "time_last_seen", time_last_seen)

    @_builtins.property
    @pulumi.getter(name="approximateApplicationCount")
    def approximate_application_count(self) -> _builtins.int:
        """
        The approximate count of applications running on this installation
        """
        return pulumi.get(self, "approximate_application_count")

    @_builtins.property
    @pulumi.getter
    def blocklists(self) -> Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemBlocklistResult']:
        """
        The list of operations that are blocklisted.
        """
        return pulumi.get(self, "blocklists")

    @_builtins.property
    @pulumi.getter(name="installationKey")
    def installation_key(self) -> _builtins.str:
        """
        The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        """
        return pulumi.get(self, "installation_key")

    @_builtins.property
    @pulumi.getter
    def jres(self) -> Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemJreResult']:
        """
        The essential properties to identify a Java Runtime.
        """
        return pulumi.get(self, "jres")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="operatingSystems")
    def operating_systems(self) -> Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemOperatingSystemResult']:
        """
        Operating System of the platform on which the Java Runtime was reported.
        """
        return pulumi.get(self, "operating_systems")

    @_builtins.property
    @pulumi.getter
    def path(self) -> _builtins.str:
        """
        The file system path of the installation.
        """
        return pulumi.get(self, "path")

    @_builtins.property
    @pulumi.getter(name="securityStatus")
    def security_status(self) -> _builtins.str:
        """
        The security status of the Java Runtime.
        """
        return pulumi.get(self, "security_status")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        The lifecycle state of the installation site.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> _builtins.str:
        """
        The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        return pulumi.get(self, "time_last_seen")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionItemBlocklistResult(dict):
    def __init__(__self__, *,
                 operation: _builtins.str,
                 reason: _builtins.str):
        """
        :param _builtins.str operation: The operation type.
        :param _builtins.str reason: The reason why the operation is blocklisted.
        """
        pulumi.set(__self__, "operation", operation)
        pulumi.set(__self__, "reason", reason)

    @_builtins.property
    @pulumi.getter
    def operation(self) -> _builtins.str:
        """
        The operation type.
        """
        return pulumi.get(self, "operation")

    @_builtins.property
    @pulumi.getter
    def reason(self) -> _builtins.str:
        """
        The reason why the operation is blocklisted.
        """
        return pulumi.get(self, "reason")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionItemJreResult(dict):
    def __init__(__self__, *,
                 distribution: _builtins.str,
                 jre_key: _builtins.str,
                 vendor: _builtins.str,
                 version: _builtins.str):
        """
        :param _builtins.str distribution: The name of the Operating System distribution, such as Oracle Linux 9, Windows 10, or macOS X.
        :param _builtins.str jre_key: The unique identifier for a Java Runtime.
        :param _builtins.str vendor: The vendor of the Java Runtime.
        :param _builtins.str version: The version of the operating system as provided by the Java system property os.version.
        """
        pulumi.set(__self__, "distribution", distribution)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "vendor", vendor)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def distribution(self) -> _builtins.str:
        """
        The name of the Operating System distribution, such as Oracle Linux 9, Windows 10, or macOS X.
        """
        return pulumi.get(self, "distribution")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> _builtins.str:
        """
        The unique identifier for a Java Runtime.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter
    def vendor(self) -> _builtins.str:
        """
        The vendor of the Java Runtime.
        """
        return pulumi.get(self, "vendor")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        The version of the operating system as provided by the Java system property os.version.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionItemOperatingSystemResult(dict):
    def __init__(__self__, *,
                 architecture: _builtins.str,
                 distribution: _builtins.str,
                 family: _builtins.str,
                 managed_instance_count: _builtins.int,
                 name: _builtins.str,
                 version: _builtins.str):
        """
        :param _builtins.str architecture: The architecture of the operating system as provided by the Java system property os.arch.
        :param _builtins.str distribution: The name of the Operating System distribution, such as Oracle Linux 9, Windows 10, or macOS X.
        :param _builtins.str family: The operating system type, such as Windows, Linux or macOS
        :param _builtins.int managed_instance_count: Number of instances running the operating system.
        :param _builtins.str name: The name of the operating system as provided by the Java system property os.name.
        :param _builtins.str version: The version of the operating system as provided by the Java system property os.version.
        """
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "distribution", distribution)
        pulumi.set(__self__, "family", family)
        pulumi.set(__self__, "managed_instance_count", managed_instance_count)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        The architecture of the operating system as provided by the Java system property os.arch.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter
    def distribution(self) -> _builtins.str:
        """
        The name of the Operating System distribution, such as Oracle Linux 9, Windows 10, or macOS X.
        """
        return pulumi.get(self, "distribution")

    @_builtins.property
    @pulumi.getter
    def family(self) -> _builtins.str:
        """
        The operating system type, such as Windows, Linux or macOS
        """
        return pulumi.get(self, "family")

    @_builtins.property
    @pulumi.getter(name="managedInstanceCount")
    def managed_instance_count(self) -> _builtins.int:
        """
        Number of instances running the operating system.
        """
        return pulumi.get(self, "managed_instance_count")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the operating system as provided by the Java system property os.name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        The version of the operating system as provided by the Java system property os.version.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadRecordsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItemResult']):
        """
        :param Sequence['GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItemArgs'] items: A list of Java download records in a tenancy.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItemResult']:
        """
        A list of Java download records in a tenancy.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItemResult(dict):
    def __init__(__self__, *,
                 architecture: _builtins.str,
                 download_source_id: _builtins.str,
                 download_type: _builtins.str,
                 family_display_name: _builtins.str,
                 family_version: _builtins.str,
                 os_family: _builtins.str,
                 package_type: _builtins.str,
                 package_type_detail: _builtins.str,
                 release_version: _builtins.str,
                 time_downloaded: _builtins.str):
        """
        :param _builtins.str architecture: Target Operating System architecture of the artifact.
        :param _builtins.str download_source_id: Identifier of the source that downloaded the artifact.
        :param _builtins.str download_type: Type of download.
        :param _builtins.str family_display_name: The Java family display name.
        :param _builtins.str family_version: Unique Java family version identifier.
        :param _builtins.str os_family: Target Operating System family of the artifact.
        :param _builtins.str package_type: The package type (typically the file extension) of the artifact.
        :param _builtins.str package_type_detail: Packaging type detail of the artifact.
        :param _builtins.str release_version: Unique Java release version identifier.
        :param _builtins.str time_downloaded: Timestamp of download.
        """
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "download_source_id", download_source_id)
        pulumi.set(__self__, "download_type", download_type)
        pulumi.set(__self__, "family_display_name", family_display_name)
        pulumi.set(__self__, "family_version", family_version)
        pulumi.set(__self__, "os_family", os_family)
        pulumi.set(__self__, "package_type", package_type)
        pulumi.set(__self__, "package_type_detail", package_type_detail)
        pulumi.set(__self__, "release_version", release_version)
        pulumi.set(__self__, "time_downloaded", time_downloaded)

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        Target Operating System architecture of the artifact.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter(name="downloadSourceId")
    def download_source_id(self) -> _builtins.str:
        """
        Identifier of the source that downloaded the artifact.
        """
        return pulumi.get(self, "download_source_id")

    @_builtins.property
    @pulumi.getter(name="downloadType")
    def download_type(self) -> _builtins.str:
        """
        Type of download.
        """
        return pulumi.get(self, "download_type")

    @_builtins.property
    @pulumi.getter(name="familyDisplayName")
    def family_display_name(self) -> _builtins.str:
        """
        The Java family display name.
        """
        return pulumi.get(self, "family_display_name")

    @_builtins.property
    @pulumi.getter(name="familyVersion")
    def family_version(self) -> _builtins.str:
        """
        Unique Java family version identifier.
        """
        return pulumi.get(self, "family_version")

    @_builtins.property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> _builtins.str:
        """
        Target Operating System family of the artifact.
        """
        return pulumi.get(self, "os_family")

    @_builtins.property
    @pulumi.getter(name="packageType")
    def package_type(self) -> _builtins.str:
        """
        The package type (typically the file extension) of the artifact.
        """
        return pulumi.get(self, "package_type")

    @_builtins.property
    @pulumi.getter(name="packageTypeDetail")
    def package_type_detail(self) -> _builtins.str:
        """
        Packaging type detail of the artifact.
        """
        return pulumi.get(self, "package_type_detail")

    @_builtins.property
    @pulumi.getter(name="releaseVersion")
    def release_version(self) -> _builtins.str:
        """
        Unique Java release version identifier.
        """
        return pulumi.get(self, "release_version")

    @_builtins.property
    @pulumi.getter(name="timeDownloaded")
    def time_downloaded(self) -> _builtins.str:
        """
        Timestamp of download.
        """
        return pulumi.get(self, "time_downloaded")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadReportCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: Display name for the Java download report.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java download report.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        Display name for the Java download report.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java download report.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadReportsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionItemResult(dict):
    def __init__(__self__, *,
                 checksum_type: _builtins.str,
                 checksum_value: _builtins.str,
                 compartment_id: _builtins.str,
                 created_bies: Sequence['outputs.GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionItemCreatedByResult'],
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 file_size_in_bytes: _builtins.str,
                 format: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 sort_by: _builtins.str,
                 sort_order: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_end: _builtins.str,
                 time_start: _builtins.str):
        """
        :param _builtins.str checksum_type: The algorithm used for calculating the checksum.
        :param _builtins.str checksum_value: The checksum value of the Java download report file.
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy.
        :param Sequence['GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionItemCreatedByArgs'] created_bies: An authorized principal.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        :param _builtins.str display_name: A filter to return only resources that match the display name.
        :param _builtins.str file_size_in_bytes: Approximate size of the Java download report file in bytes.
        :param _builtins.str format: The file format of the Java download report.
        :param Mapping[str, _builtins.str] freeform_tags: Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java download report.
        :param _builtins.str state: A filter to return only resources their lifecycleState matches the given lifecycleState.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: The time the Java download report was created, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        :param _builtins.str time_end: The end time until when the download records are included (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str time_start: The start time from when the download records are included (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        pulumi.set(__self__, "checksum_type", checksum_type)
        pulumi.set(__self__, "checksum_value", checksum_value)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "created_bies", created_bies)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "file_size_in_bytes", file_size_in_bytes)
        pulumi.set(__self__, "format", format)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "sort_by", sort_by)
        pulumi.set(__self__, "sort_order", sort_order)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_end", time_end)
        pulumi.set(__self__, "time_start", time_start)

    @_builtins.property
    @pulumi.getter(name="checksumType")
    def checksum_type(self) -> _builtins.str:
        """
        The algorithm used for calculating the checksum.
        """
        return pulumi.get(self, "checksum_type")

    @_builtins.property
    @pulumi.getter(name="checksumValue")
    def checksum_value(self) -> _builtins.str:
        """
        The checksum value of the Java download report file.
        """
        return pulumi.get(self, "checksum_value")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="createdBies")
    def created_bies(self) -> Sequence['outputs.GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionItemCreatedByResult']:
        """
        An authorized principal.
        """
        return pulumi.get(self, "created_bies")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the display name.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="fileSizeInBytes")
    def file_size_in_bytes(self) -> _builtins.str:
        """
        Approximate size of the Java download report file in bytes.
        """
        return pulumi.get(self, "file_size_in_bytes")

    @_builtins.property
    @pulumi.getter
    def format(self) -> _builtins.str:
        """
        The file format of the Java download report.
        """
        return pulumi.get(self, "format")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java download report.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="sortBy")
    def sort_by(self) -> _builtins.str:
        return pulumi.get(self, "sort_by")

    @_builtins.property
    @pulumi.getter(name="sortOrder")
    def sort_order(self) -> _builtins.str:
        return pulumi.get(self, "sort_order")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources their lifecycleState matches the given lifecycleState.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The time the Java download report was created, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeEnd")
    def time_end(self) -> _builtins.str:
        """
        The end time until when the download records are included (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_end")

    @_builtins.property
    @pulumi.getter(name="timeStart")
    def time_start(self) -> _builtins.str:
        """
        The start time from when the download records are included (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_start")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadReportsJavaDownloadReportCollectionItemCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: A filter to return only resources that match the display name.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java download report.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the display name.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java download report.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadTokenCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadTokenLastUpdatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadTokensFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: _builtins.str,
                 created_bies: Sequence['outputs.GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemCreatedByResult'],
                 defined_tags: Mapping[str, _builtins.str],
                 description: _builtins.str,
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 is_default: _builtins.bool,
                 java_version: _builtins.str,
                 last_updated_bies: Sequence['outputs.GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemLastUpdatedByResult'],
                 license_types: Sequence[_builtins.str],
                 lifecycle_details: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_expires: _builtins.str,
                 time_last_used: _builtins.str,
                 time_updated: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy.
        :param Sequence['GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemCreatedByArgs'] created_bies: An authorized principal.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        :param _builtins.str description: User provided description of the JavaDownloadToken.
        :param _builtins.str display_name: A filter to return only resources that match the entire display name given.
        :param Mapping[str, _builtins.str] freeform_tags: Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        :param _builtins.str id: Unique JavaDownloadToken identifier.
        :param _builtins.bool is_default: A flag to indicate if the token is default.
        :param _builtins.str java_version: The associated Java version of the JavaDownloadToken.
        :param Sequence['GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemLastUpdatedByArgs'] last_updated_bies: An authorized principal.
        :param Sequence[_builtins.str] license_types: The license type(s) associated with the JavaDownloadToken.
        :param _builtins.str lifecycle_details: Possible lifecycle substates.
        :param _builtins.str state: A filter to return only resources their lifecycleState matches the given lifecycleState.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: The time the JavaDownloadToken was created, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        :param _builtins.str time_expires: The expiry time of the JavaDownloadToken, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        :param _builtins.str time_last_used: The time the JavaDownloadToken was last used for download, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        :param _builtins.str time_updated: The time the JavaDownloadToken was updated, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        :param _builtins.str value: Unique JavaDownloadToken value.
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "created_bies", created_bies)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_default", is_default)
        pulumi.set(__self__, "java_version", java_version)
        pulumi.set(__self__, "last_updated_bies", last_updated_bies)
        pulumi.set(__self__, "license_types", license_types)
        pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_expires", time_expires)
        pulumi.set(__self__, "time_last_used", time_last_used)
        pulumi.set(__self__, "time_updated", time_updated)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="createdBies")
    def created_bies(self) -> Sequence['outputs.GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemCreatedByResult']:
        """
        An authorized principal.
        """
        return pulumi.get(self, "created_bies")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        User provided description of the JavaDownloadToken.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the entire display name given.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Unique JavaDownloadToken identifier.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="isDefault")
    def is_default(self) -> _builtins.bool:
        """
        A flag to indicate if the token is default.
        """
        return pulumi.get(self, "is_default")

    @_builtins.property
    @pulumi.getter(name="javaVersion")
    def java_version(self) -> _builtins.str:
        """
        The associated Java version of the JavaDownloadToken.
        """
        return pulumi.get(self, "java_version")

    @_builtins.property
    @pulumi.getter(name="lastUpdatedBies")
    def last_updated_bies(self) -> Sequence['outputs.GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemLastUpdatedByResult']:
        """
        An authorized principal.
        """
        return pulumi.get(self, "last_updated_bies")

    @_builtins.property
    @pulumi.getter(name="licenseTypes")
    def license_types(self) -> Sequence[_builtins.str]:
        """
        The license type(s) associated with the JavaDownloadToken.
        """
        return pulumi.get(self, "license_types")

    @_builtins.property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> _builtins.str:
        """
        Possible lifecycle substates.
        """
        return pulumi.get(self, "lifecycle_details")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources their lifecycleState matches the given lifecycleState.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The time the JavaDownloadToken was created, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeExpires")
    def time_expires(self) -> _builtins.str:
        """
        The expiry time of the JavaDownloadToken, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        """
        return pulumi.get(self, "time_expires")

    @_builtins.property
    @pulumi.getter(name="timeLastUsed")
    def time_last_used(self) -> _builtins.str:
        """
        The time the JavaDownloadToken was last used for download, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        """
        return pulumi.get(self, "time_last_used")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        The time the JavaDownloadToken was updated, displayed as an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
        """
        return pulumi.get(self, "time_updated")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        Unique JavaDownloadToken value.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: A filter to return only resources that match the entire display name given.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: Unique JavaDownloadToken identifier.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the entire display name given.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Unique JavaDownloadToken identifier.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaDownloadTokensJavaDownloadTokenCollectionItemLastUpdatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: A filter to return only resources that match the entire display name given.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: Unique JavaDownloadToken identifier.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the entire display name given.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Unique JavaDownloadToken identifier.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaLicenseAcceptanceRecordCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaLicenseAcceptanceRecordLastUpdatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaLicenseAcceptanceRecordsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: _builtins.str,
                 created_bies: Sequence['outputs.GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemCreatedByResult'],
                 defined_tags: Mapping[str, _builtins.str],
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 last_updated_bies: Sequence['outputs.GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemLastUpdatedByResult'],
                 license_acceptance_status: _builtins.str,
                 license_type: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_accepted: _builtins.str,
                 time_last_updated: _builtins.str):
        """
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy.
        :param Sequence['GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemCreatedByArgs'] created_bies: An authorized principal.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        :param Mapping[str, _builtins.str] freeform_tags: Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        :param _builtins.str id: Unique Java license acceptance record identifier.
        :param Sequence['GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemLastUpdatedByArgs'] last_updated_bies: An authorized principal.
        :param _builtins.str license_acceptance_status: Status of license acceptance.
        :param _builtins.str license_type: Unique Java license type.
        :param _builtins.str state: The current state of the JavaLicenseAcceptanceRecord.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_accepted: The date and time of license acceptance (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str time_last_updated: The date and time of last update (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "created_bies", created_bies)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_updated_bies", last_updated_bies)
        pulumi.set(__self__, "license_acceptance_status", license_acceptance_status)
        pulumi.set(__self__, "license_type", license_type)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_accepted", time_accepted)
        pulumi.set(__self__, "time_last_updated", time_last_updated)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="createdBies")
    def created_bies(self) -> Sequence['outputs.GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemCreatedByResult']:
        """
        An authorized principal.
        """
        return pulumi.get(self, "created_bies")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Unique Java license acceptance record identifier.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastUpdatedBies")
    def last_updated_bies(self) -> Sequence['outputs.GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemLastUpdatedByResult']:
        """
        An authorized principal.
        """
        return pulumi.get(self, "last_updated_bies")

    @_builtins.property
    @pulumi.getter(name="licenseAcceptanceStatus")
    def license_acceptance_status(self) -> _builtins.str:
        """
        Status of license acceptance.
        """
        return pulumi.get(self, "license_acceptance_status")

    @_builtins.property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> _builtins.str:
        """
        Unique Java license type.
        """
        return pulumi.get(self, "license_type")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        The current state of the JavaLicenseAcceptanceRecord.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeAccepted")
    def time_accepted(self) -> _builtins.str:
        """
        The date and time of license acceptance (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_accepted")

    @_builtins.property
    @pulumi.getter(name="timeLastUpdated")
    def time_last_updated(self) -> _builtins.str:
        """
        The date and time of last update (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_last_updated")


@pulumi.output_type
class GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: Unique Java license acceptance record identifier.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Unique Java license acceptance record identifier.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollectionItemLastUpdatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 email: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str email: The email of the principal.
        :param _builtins.str id: Unique Java license acceptance record identifier.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The email of the principal.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Unique Java license acceptance record identifier.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetJavaDownloadsJavaLicensesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetJavaDownloadsJavaLicensesJavaLicenseCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetJavaDownloadsJavaLicensesJavaLicenseCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetJavaDownloadsJavaLicensesJavaLicenseCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetJavaDownloadsJavaLicensesJavaLicenseCollectionItemResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 license_type: _builtins.str,
                 license_url: _builtins.str):
        """
        :param _builtins.str display_name: A filter to return only resources that match the display name.
        :param _builtins.str license_type: Unique Java license type.
        :param _builtins.str license_url: Publicly accessible license URL containing the detailed terms and conditions.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "license_type", license_type)
        pulumi.set(__self__, "license_url", license_url)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the display name.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> _builtins.str:
        """
        Unique Java license type.
        """
        return pulumi.get(self, "license_type")

    @_builtins.property
    @pulumi.getter(name="licenseUrl")
    def license_url(self) -> _builtins.str:
        """
        Publicly accessible license URL containing the detailed terms and conditions.
        """
        return pulumi.get(self, "license_url")


@pulumi.output_type
class GetJavaFamiliesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetJavaFamiliesJavaFamilyCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetJavaFamiliesJavaFamilyCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetJavaFamiliesJavaFamilyCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetJavaFamiliesJavaFamilyCollectionItemResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 doc_url: _builtins.str,
                 end_of_support_life_date: _builtins.str,
                 family_version: _builtins.str,
                 is_supported_version: _builtins.bool,
                 latest_release_artifacts: Sequence['outputs.GetJavaFamiliesJavaFamilyCollectionItemLatestReleaseArtifactResult'],
                 latest_release_version: _builtins.str,
                 license_types: Sequence[_builtins.str],
                 release_date: _builtins.str,
                 support_type: _builtins.str):
        """
        :param _builtins.str display_name: The display name for the Java family.
        :param _builtins.str doc_url: Link to access the documentation for the release.
        :param _builtins.str end_of_support_life_date: The End of Support Life (EOSL) date of the Java release family (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str family_version: The version identifier for the Java family.
        :param _builtins.bool is_supported_version: Filter the Java Release Family versions by support status.
        :param Sequence['GetJavaFamiliesJavaFamilyCollectionItemLatestReleaseArtifactArgs'] latest_release_artifacts: List of artifacts for the latest Java release version in this family. The script URLs in the response can be used from a command line, or in scripts and dockerfiles to always get the artifacts corresponding to the latest update release version.
        :param _builtins.str latest_release_version: Latest Java release version in the family.
        :param Sequence[_builtins.str] license_types: The license type(s) associated with the Java family.
        :param _builtins.str release_date: The date on which the Java release family was first made available (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str support_type: This indicates the support category for the Java release family.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "doc_url", doc_url)
        pulumi.set(__self__, "end_of_support_life_date", end_of_support_life_date)
        pulumi.set(__self__, "family_version", family_version)
        pulumi.set(__self__, "is_supported_version", is_supported_version)
        pulumi.set(__self__, "latest_release_artifacts", latest_release_artifacts)
        pulumi.set(__self__, "latest_release_version", latest_release_version)
        pulumi.set(__self__, "license_types", license_types)
        pulumi.set(__self__, "release_date", release_date)
        pulumi.set(__self__, "support_type", support_type)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The display name for the Java family.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="docUrl")
    def doc_url(self) -> _builtins.str:
        """
        Link to access the documentation for the release.
        """
        return pulumi.get(self, "doc_url")

    @_builtins.property
    @pulumi.getter(name="endOfSupportLifeDate")
    def end_of_support_life_date(self) -> _builtins.str:
        """
        The End of Support Life (EOSL) date of the Java release family (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "end_of_support_life_date")

    @_builtins.property
    @pulumi.getter(name="familyVersion")
    def family_version(self) -> _builtins.str:
        """
        The version identifier for the Java family.
        """
        return pulumi.get(self, "family_version")

    @_builtins.property
    @pulumi.getter(name="isSupportedVersion")
    def is_supported_version(self) -> _builtins.bool:
        """
        Filter the Java Release Family versions by support status.
        """
        return pulumi.get(self, "is_supported_version")

    @_builtins.property
    @pulumi.getter(name="latestReleaseArtifacts")
    def latest_release_artifacts(self) -> Sequence['outputs.GetJavaFamiliesJavaFamilyCollectionItemLatestReleaseArtifactResult']:
        """
        List of artifacts for the latest Java release version in this family. The script URLs in the response can be used from a command line, or in scripts and dockerfiles to always get the artifacts corresponding to the latest update release version.
        """
        return pulumi.get(self, "latest_release_artifacts")

    @_builtins.property
    @pulumi.getter(name="latestReleaseVersion")
    def latest_release_version(self) -> _builtins.str:
        """
        Latest Java release version in the family.
        """
        return pulumi.get(self, "latest_release_version")

    @_builtins.property
    @pulumi.getter(name="licenseTypes")
    def license_types(self) -> Sequence[_builtins.str]:
        """
        The license type(s) associated with the Java family.
        """
        return pulumi.get(self, "license_types")

    @_builtins.property
    @pulumi.getter(name="releaseDate")
    def release_date(self) -> _builtins.str:
        """
        The date on which the Java release family was first made available (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "release_date")

    @_builtins.property
    @pulumi.getter(name="supportType")
    def support_type(self) -> _builtins.str:
        """
        This indicates the support category for the Java release family.
        """
        return pulumi.get(self, "support_type")


@pulumi.output_type
class GetJavaFamiliesJavaFamilyCollectionItemLatestReleaseArtifactResult(dict):
    def __init__(__self__, *,
                 approximate_file_size_in_bytes: _builtins.str,
                 architecture: _builtins.str,
                 artifact_content_type: _builtins.str,
                 artifact_description: _builtins.str,
                 artifact_file_name: _builtins.str,
                 artifact_id: _builtins.str,
                 download_url: _builtins.str,
                 os_family: _builtins.str,
                 package_type: _builtins.str,
                 package_type_detail: _builtins.str,
                 script_checksum_url: _builtins.str,
                 script_download_url: _builtins.str,
                 sha256: _builtins.str):
        """
        :param _builtins.str approximate_file_size_in_bytes: Approximate compressed file size in bytes.
        :param _builtins.str architecture: The target Operating System architecture for the artifact.
        :param _builtins.str artifact_content_type: Product content type of this artifact.
        :param _builtins.str artifact_description: Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        :param _builtins.str artifact_file_name: The file name of the artifact.
        :param _builtins.str artifact_id: Unique identifier for the artifact.
        :param _builtins.str download_url: The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        :param _builtins.str os_family: The target Operating System family for the artifact.
        :param _builtins.str package_type: The package type(typically the file extension) of the artifact.
        :param _builtins.str package_type_detail: Additional information about the package type.
        :param _builtins.str script_checksum_url: The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        :param _builtins.str script_download_url: The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        :param _builtins.str sha256: SHA256 checksum of the artifact.
        """
        pulumi.set(__self__, "approximate_file_size_in_bytes", approximate_file_size_in_bytes)
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "artifact_content_type", artifact_content_type)
        pulumi.set(__self__, "artifact_description", artifact_description)
        pulumi.set(__self__, "artifact_file_name", artifact_file_name)
        pulumi.set(__self__, "artifact_id", artifact_id)
        pulumi.set(__self__, "download_url", download_url)
        pulumi.set(__self__, "os_family", os_family)
        pulumi.set(__self__, "package_type", package_type)
        pulumi.set(__self__, "package_type_detail", package_type_detail)
        pulumi.set(__self__, "script_checksum_url", script_checksum_url)
        pulumi.set(__self__, "script_download_url", script_download_url)
        pulumi.set(__self__, "sha256", sha256)

    @_builtins.property
    @pulumi.getter(name="approximateFileSizeInBytes")
    def approximate_file_size_in_bytes(self) -> _builtins.str:
        """
        Approximate compressed file size in bytes.
        """
        return pulumi.get(self, "approximate_file_size_in_bytes")

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        The target Operating System architecture for the artifact.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter(name="artifactContentType")
    def artifact_content_type(self) -> _builtins.str:
        """
        Product content type of this artifact.
        """
        return pulumi.get(self, "artifact_content_type")

    @_builtins.property
    @pulumi.getter(name="artifactDescription")
    def artifact_description(self) -> _builtins.str:
        """
        Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        """
        return pulumi.get(self, "artifact_description")

    @_builtins.property
    @pulumi.getter(name="artifactFileName")
    def artifact_file_name(self) -> _builtins.str:
        """
        The file name of the artifact.
        """
        return pulumi.get(self, "artifact_file_name")

    @_builtins.property
    @pulumi.getter(name="artifactId")
    def artifact_id(self) -> _builtins.str:
        """
        Unique identifier for the artifact.
        """
        return pulumi.get(self, "artifact_id")

    @_builtins.property
    @pulumi.getter(name="downloadUrl")
    def download_url(self) -> _builtins.str:
        """
        The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        """
        return pulumi.get(self, "download_url")

    @_builtins.property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> _builtins.str:
        """
        The target Operating System family for the artifact.
        """
        return pulumi.get(self, "os_family")

    @_builtins.property
    @pulumi.getter(name="packageType")
    def package_type(self) -> _builtins.str:
        """
        The package type(typically the file extension) of the artifact.
        """
        return pulumi.get(self, "package_type")

    @_builtins.property
    @pulumi.getter(name="packageTypeDetail")
    def package_type_detail(self) -> _builtins.str:
        """
        Additional information about the package type.
        """
        return pulumi.get(self, "package_type_detail")

    @_builtins.property
    @pulumi.getter(name="scriptChecksumUrl")
    def script_checksum_url(self) -> _builtins.str:
        """
        The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        """
        return pulumi.get(self, "script_checksum_url")

    @_builtins.property
    @pulumi.getter(name="scriptDownloadUrl")
    def script_download_url(self) -> _builtins.str:
        """
        The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        """
        return pulumi.get(self, "script_download_url")

    @_builtins.property
    @pulumi.getter
    def sha256(self) -> _builtins.str:
        """
        SHA256 checksum of the artifact.
        """
        return pulumi.get(self, "sha256")


@pulumi.output_type
class GetJavaFamilyLatestReleaseArtifactResult(dict):
    def __init__(__self__, *,
                 approximate_file_size_in_bytes: _builtins.str,
                 architecture: _builtins.str,
                 artifact_content_type: _builtins.str,
                 artifact_description: _builtins.str,
                 artifact_file_name: _builtins.str,
                 artifact_id: _builtins.str,
                 download_url: _builtins.str,
                 os_family: _builtins.str,
                 package_type: _builtins.str,
                 package_type_detail: _builtins.str,
                 script_checksum_url: _builtins.str,
                 script_download_url: _builtins.str,
                 sha256: _builtins.str):
        """
        :param _builtins.str approximate_file_size_in_bytes: Approximate compressed file size in bytes.
        :param _builtins.str architecture: The target Operating System architecture for the artifact.
        :param _builtins.str artifact_content_type: Product content type of this artifact.
        :param _builtins.str artifact_description: Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        :param _builtins.str artifact_file_name: The file name of the artifact.
        :param _builtins.str artifact_id: Unique identifier for the artifact.
        :param _builtins.str download_url: The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        :param _builtins.str os_family: The target Operating System family for the artifact.
        :param _builtins.str package_type: The package type(typically the file extension) of the artifact.
        :param _builtins.str package_type_detail: Additional information about the package type.
        :param _builtins.str script_checksum_url: The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        :param _builtins.str script_download_url: The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        :param _builtins.str sha256: SHA256 checksum of the artifact.
        """
        pulumi.set(__self__, "approximate_file_size_in_bytes", approximate_file_size_in_bytes)
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "artifact_content_type", artifact_content_type)
        pulumi.set(__self__, "artifact_description", artifact_description)
        pulumi.set(__self__, "artifact_file_name", artifact_file_name)
        pulumi.set(__self__, "artifact_id", artifact_id)
        pulumi.set(__self__, "download_url", download_url)
        pulumi.set(__self__, "os_family", os_family)
        pulumi.set(__self__, "package_type", package_type)
        pulumi.set(__self__, "package_type_detail", package_type_detail)
        pulumi.set(__self__, "script_checksum_url", script_checksum_url)
        pulumi.set(__self__, "script_download_url", script_download_url)
        pulumi.set(__self__, "sha256", sha256)

    @_builtins.property
    @pulumi.getter(name="approximateFileSizeInBytes")
    def approximate_file_size_in_bytes(self) -> _builtins.str:
        """
        Approximate compressed file size in bytes.
        """
        return pulumi.get(self, "approximate_file_size_in_bytes")

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        The target Operating System architecture for the artifact.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter(name="artifactContentType")
    def artifact_content_type(self) -> _builtins.str:
        """
        Product content type of this artifact.
        """
        return pulumi.get(self, "artifact_content_type")

    @_builtins.property
    @pulumi.getter(name="artifactDescription")
    def artifact_description(self) -> _builtins.str:
        """
        Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        """
        return pulumi.get(self, "artifact_description")

    @_builtins.property
    @pulumi.getter(name="artifactFileName")
    def artifact_file_name(self) -> _builtins.str:
        """
        The file name of the artifact.
        """
        return pulumi.get(self, "artifact_file_name")

    @_builtins.property
    @pulumi.getter(name="artifactId")
    def artifact_id(self) -> _builtins.str:
        """
        Unique identifier for the artifact.
        """
        return pulumi.get(self, "artifact_id")

    @_builtins.property
    @pulumi.getter(name="downloadUrl")
    def download_url(self) -> _builtins.str:
        """
        The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        """
        return pulumi.get(self, "download_url")

    @_builtins.property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> _builtins.str:
        """
        The target Operating System family for the artifact.
        """
        return pulumi.get(self, "os_family")

    @_builtins.property
    @pulumi.getter(name="packageType")
    def package_type(self) -> _builtins.str:
        """
        The package type(typically the file extension) of the artifact.
        """
        return pulumi.get(self, "package_type")

    @_builtins.property
    @pulumi.getter(name="packageTypeDetail")
    def package_type_detail(self) -> _builtins.str:
        """
        Additional information about the package type.
        """
        return pulumi.get(self, "package_type_detail")

    @_builtins.property
    @pulumi.getter(name="scriptChecksumUrl")
    def script_checksum_url(self) -> _builtins.str:
        """
        The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        """
        return pulumi.get(self, "script_checksum_url")

    @_builtins.property
    @pulumi.getter(name="scriptDownloadUrl")
    def script_download_url(self) -> _builtins.str:
        """
        The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        """
        return pulumi.get(self, "script_download_url")

    @_builtins.property
    @pulumi.getter
    def sha256(self) -> _builtins.str:
        """
        SHA256 checksum of the artifact.
        """
        return pulumi.get(self, "sha256")


@pulumi.output_type
class GetJavaReleaseArtifactResult(dict):
    def __init__(__self__, *,
                 approximate_file_size_in_bytes: _builtins.str,
                 architecture: _builtins.str,
                 artifact_content_type: _builtins.str,
                 artifact_description: _builtins.str,
                 artifact_file_name: _builtins.str,
                 artifact_id: _builtins.str,
                 download_url: _builtins.str,
                 os_family: _builtins.str,
                 package_type: _builtins.str,
                 package_type_detail: _builtins.str,
                 script_checksum_url: _builtins.str,
                 script_download_url: _builtins.str,
                 sha256: _builtins.str):
        """
        :param _builtins.str approximate_file_size_in_bytes: Approximate compressed file size in bytes.
        :param _builtins.str architecture: The target Operating System architecture for the artifact.
        :param _builtins.str artifact_content_type: Product content type of this artifact.
        :param _builtins.str artifact_description: Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        :param _builtins.str artifact_file_name: The file name of the artifact.
        :param _builtins.str artifact_id: Unique identifier for the artifact.
        :param _builtins.str download_url: The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        :param _builtins.str os_family: The target Operating System family for the artifact.
        :param _builtins.str package_type: The package type(typically the file extension) of the artifact.
        :param _builtins.str package_type_detail: Additional information about the package type.
        :param _builtins.str script_checksum_url: The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        :param _builtins.str script_download_url: The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        :param _builtins.str sha256: SHA256 checksum of the artifact.
        """
        pulumi.set(__self__, "approximate_file_size_in_bytes", approximate_file_size_in_bytes)
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "artifact_content_type", artifact_content_type)
        pulumi.set(__self__, "artifact_description", artifact_description)
        pulumi.set(__self__, "artifact_file_name", artifact_file_name)
        pulumi.set(__self__, "artifact_id", artifact_id)
        pulumi.set(__self__, "download_url", download_url)
        pulumi.set(__self__, "os_family", os_family)
        pulumi.set(__self__, "package_type", package_type)
        pulumi.set(__self__, "package_type_detail", package_type_detail)
        pulumi.set(__self__, "script_checksum_url", script_checksum_url)
        pulumi.set(__self__, "script_download_url", script_download_url)
        pulumi.set(__self__, "sha256", sha256)

    @_builtins.property
    @pulumi.getter(name="approximateFileSizeInBytes")
    def approximate_file_size_in_bytes(self) -> _builtins.str:
        """
        Approximate compressed file size in bytes.
        """
        return pulumi.get(self, "approximate_file_size_in_bytes")

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        The target Operating System architecture for the artifact.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter(name="artifactContentType")
    def artifact_content_type(self) -> _builtins.str:
        """
        Product content type of this artifact.
        """
        return pulumi.get(self, "artifact_content_type")

    @_builtins.property
    @pulumi.getter(name="artifactDescription")
    def artifact_description(self) -> _builtins.str:
        """
        Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        """
        return pulumi.get(self, "artifact_description")

    @_builtins.property
    @pulumi.getter(name="artifactFileName")
    def artifact_file_name(self) -> _builtins.str:
        """
        The file name of the artifact.
        """
        return pulumi.get(self, "artifact_file_name")

    @_builtins.property
    @pulumi.getter(name="artifactId")
    def artifact_id(self) -> _builtins.str:
        """
        Unique identifier for the artifact.
        """
        return pulumi.get(self, "artifact_id")

    @_builtins.property
    @pulumi.getter(name="downloadUrl")
    def download_url(self) -> _builtins.str:
        """
        The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        """
        return pulumi.get(self, "download_url")

    @_builtins.property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> _builtins.str:
        """
        The target Operating System family for the artifact.
        """
        return pulumi.get(self, "os_family")

    @_builtins.property
    @pulumi.getter(name="packageType")
    def package_type(self) -> _builtins.str:
        """
        The package type(typically the file extension) of the artifact.
        """
        return pulumi.get(self, "package_type")

    @_builtins.property
    @pulumi.getter(name="packageTypeDetail")
    def package_type_detail(self) -> _builtins.str:
        """
        Additional information about the package type.
        """
        return pulumi.get(self, "package_type_detail")

    @_builtins.property
    @pulumi.getter(name="scriptChecksumUrl")
    def script_checksum_url(self) -> _builtins.str:
        """
        The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        """
        return pulumi.get(self, "script_checksum_url")

    @_builtins.property
    @pulumi.getter(name="scriptDownloadUrl")
    def script_download_url(self) -> _builtins.str:
        """
        The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        """
        return pulumi.get(self, "script_download_url")

    @_builtins.property
    @pulumi.getter
    def sha256(self) -> _builtins.str:
        """
        SHA256 checksum of the artifact.
        """
        return pulumi.get(self, "sha256")


@pulumi.output_type
class GetJavaReleaseFamilyDetailResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 doc_url: _builtins.str,
                 end_of_support_life_date: _builtins.str,
                 family_version: _builtins.str,
                 is_supported_version: _builtins.bool,
                 latest_release_artifacts: Sequence['outputs.GetJavaReleaseFamilyDetailLatestReleaseArtifactResult'],
                 latest_release_version: _builtins.str,
                 license_types: Sequence[_builtins.str],
                 release_date: _builtins.str,
                 support_type: _builtins.str):
        """
        :param _builtins.str display_name: Commonly used name for the MoS release.
        :param _builtins.str doc_url: Link to access the documentation for the release.
        :param _builtins.str end_of_support_life_date: The End of Support Life (EOSL) date of the Java release family (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str family_version: Java release family identifier.
        :param _builtins.bool is_supported_version: Whether or not this Java release family is under active support. Refer [Java Support Roadmap](https://www.oracle.com/java/technologies/java-se-support-roadmap.html) for more details.
        :param Sequence['GetJavaReleaseFamilyDetailLatestReleaseArtifactArgs'] latest_release_artifacts: List of artifacts for the latest Java release version in this family. The script URLs in the response can be used from a command line, or in scripts and dockerfiles to always get the artifacts corresponding to the latest update release version.
        :param _builtins.str latest_release_version: Latest Java release version in the family.
        :param Sequence[_builtins.str] license_types: The license type(s) associated with the Java family.
        :param _builtins.str release_date: The release date of the Java version (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str support_type: This indicates the support category for the Java release family.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "doc_url", doc_url)
        pulumi.set(__self__, "end_of_support_life_date", end_of_support_life_date)
        pulumi.set(__self__, "family_version", family_version)
        pulumi.set(__self__, "is_supported_version", is_supported_version)
        pulumi.set(__self__, "latest_release_artifacts", latest_release_artifacts)
        pulumi.set(__self__, "latest_release_version", latest_release_version)
        pulumi.set(__self__, "license_types", license_types)
        pulumi.set(__self__, "release_date", release_date)
        pulumi.set(__self__, "support_type", support_type)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        Commonly used name for the MoS release.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="docUrl")
    def doc_url(self) -> _builtins.str:
        """
        Link to access the documentation for the release.
        """
        return pulumi.get(self, "doc_url")

    @_builtins.property
    @pulumi.getter(name="endOfSupportLifeDate")
    def end_of_support_life_date(self) -> _builtins.str:
        """
        The End of Support Life (EOSL) date of the Java release family (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "end_of_support_life_date")

    @_builtins.property
    @pulumi.getter(name="familyVersion")
    def family_version(self) -> _builtins.str:
        """
        Java release family identifier.
        """
        return pulumi.get(self, "family_version")

    @_builtins.property
    @pulumi.getter(name="isSupportedVersion")
    def is_supported_version(self) -> _builtins.bool:
        """
        Whether or not this Java release family is under active support. Refer [Java Support Roadmap](https://www.oracle.com/java/technologies/java-se-support-roadmap.html) for more details.
        """
        return pulumi.get(self, "is_supported_version")

    @_builtins.property
    @pulumi.getter(name="latestReleaseArtifacts")
    def latest_release_artifacts(self) -> Sequence['outputs.GetJavaReleaseFamilyDetailLatestReleaseArtifactResult']:
        """
        List of artifacts for the latest Java release version in this family. The script URLs in the response can be used from a command line, or in scripts and dockerfiles to always get the artifacts corresponding to the latest update release version.
        """
        return pulumi.get(self, "latest_release_artifacts")

    @_builtins.property
    @pulumi.getter(name="latestReleaseVersion")
    def latest_release_version(self) -> _builtins.str:
        """
        Latest Java release version in the family.
        """
        return pulumi.get(self, "latest_release_version")

    @_builtins.property
    @pulumi.getter(name="licenseTypes")
    def license_types(self) -> Sequence[_builtins.str]:
        """
        The license type(s) associated with the Java family.
        """
        return pulumi.get(self, "license_types")

    @_builtins.property
    @pulumi.getter(name="releaseDate")
    def release_date(self) -> _builtins.str:
        """
        The release date of the Java version (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "release_date")

    @_builtins.property
    @pulumi.getter(name="supportType")
    def support_type(self) -> _builtins.str:
        """
        This indicates the support category for the Java release family.
        """
        return pulumi.get(self, "support_type")


@pulumi.output_type
class GetJavaReleaseFamilyDetailLatestReleaseArtifactResult(dict):
    def __init__(__self__, *,
                 approximate_file_size_in_bytes: _builtins.str,
                 architecture: _builtins.str,
                 artifact_content_type: _builtins.str,
                 artifact_description: _builtins.str,
                 artifact_file_name: _builtins.str,
                 artifact_id: _builtins.str,
                 download_url: _builtins.str,
                 os_family: _builtins.str,
                 package_type: _builtins.str,
                 package_type_detail: _builtins.str,
                 script_checksum_url: _builtins.str,
                 script_download_url: _builtins.str,
                 sha256: _builtins.str):
        """
        :param _builtins.str approximate_file_size_in_bytes: Approximate compressed file size in bytes.
        :param _builtins.str architecture: The target Operating System architecture for the artifact.
        :param _builtins.str artifact_content_type: Product content type of this artifact.
        :param _builtins.str artifact_description: Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        :param _builtins.str artifact_file_name: The file name of the artifact.
        :param _builtins.str artifact_id: Unique identifier for the artifact.
        :param _builtins.str download_url: The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        :param _builtins.str os_family: The target Operating System family for the artifact.
        :param _builtins.str package_type: The package type(typically the file extension) of the artifact.
        :param _builtins.str package_type_detail: Additional information about the package type.
        :param _builtins.str script_checksum_url: The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        :param _builtins.str script_download_url: The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        :param _builtins.str sha256: SHA256 checksum of the artifact.
        """
        pulumi.set(__self__, "approximate_file_size_in_bytes", approximate_file_size_in_bytes)
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "artifact_content_type", artifact_content_type)
        pulumi.set(__self__, "artifact_description", artifact_description)
        pulumi.set(__self__, "artifact_file_name", artifact_file_name)
        pulumi.set(__self__, "artifact_id", artifact_id)
        pulumi.set(__self__, "download_url", download_url)
        pulumi.set(__self__, "os_family", os_family)
        pulumi.set(__self__, "package_type", package_type)
        pulumi.set(__self__, "package_type_detail", package_type_detail)
        pulumi.set(__self__, "script_checksum_url", script_checksum_url)
        pulumi.set(__self__, "script_download_url", script_download_url)
        pulumi.set(__self__, "sha256", sha256)

    @_builtins.property
    @pulumi.getter(name="approximateFileSizeInBytes")
    def approximate_file_size_in_bytes(self) -> _builtins.str:
        """
        Approximate compressed file size in bytes.
        """
        return pulumi.get(self, "approximate_file_size_in_bytes")

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        The target Operating System architecture for the artifact.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter(name="artifactContentType")
    def artifact_content_type(self) -> _builtins.str:
        """
        Product content type of this artifact.
        """
        return pulumi.get(self, "artifact_content_type")

    @_builtins.property
    @pulumi.getter(name="artifactDescription")
    def artifact_description(self) -> _builtins.str:
        """
        Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        """
        return pulumi.get(self, "artifact_description")

    @_builtins.property
    @pulumi.getter(name="artifactFileName")
    def artifact_file_name(self) -> _builtins.str:
        """
        The file name of the artifact.
        """
        return pulumi.get(self, "artifact_file_name")

    @_builtins.property
    @pulumi.getter(name="artifactId")
    def artifact_id(self) -> _builtins.str:
        """
        Unique identifier for the artifact.
        """
        return pulumi.get(self, "artifact_id")

    @_builtins.property
    @pulumi.getter(name="downloadUrl")
    def download_url(self) -> _builtins.str:
        """
        The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        """
        return pulumi.get(self, "download_url")

    @_builtins.property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> _builtins.str:
        """
        The target Operating System family for the artifact.
        """
        return pulumi.get(self, "os_family")

    @_builtins.property
    @pulumi.getter(name="packageType")
    def package_type(self) -> _builtins.str:
        """
        The package type(typically the file extension) of the artifact.
        """
        return pulumi.get(self, "package_type")

    @_builtins.property
    @pulumi.getter(name="packageTypeDetail")
    def package_type_detail(self) -> _builtins.str:
        """
        Additional information about the package type.
        """
        return pulumi.get(self, "package_type_detail")

    @_builtins.property
    @pulumi.getter(name="scriptChecksumUrl")
    def script_checksum_url(self) -> _builtins.str:
        """
        The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        """
        return pulumi.get(self, "script_checksum_url")

    @_builtins.property
    @pulumi.getter(name="scriptDownloadUrl")
    def script_download_url(self) -> _builtins.str:
        """
        The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        """
        return pulumi.get(self, "script_download_url")

    @_builtins.property
    @pulumi.getter
    def sha256(self) -> _builtins.str:
        """
        SHA256 checksum of the artifact.
        """
        return pulumi.get(self, "sha256")


@pulumi.output_type
class GetJavaReleaseLicenseDetailResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 license_type: _builtins.str,
                 license_url: _builtins.str):
        """
        :param _builtins.str display_name: Commonly used name for the MoS release.
        :param _builtins.str license_type: License type for the Java version.
        :param _builtins.str license_url: Publicly accessible license URL containing the detailed terms and conditions.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "license_type", license_type)
        pulumi.set(__self__, "license_url", license_url)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        Commonly used name for the MoS release.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> _builtins.str:
        """
        License type for the Java version.
        """
        return pulumi.get(self, "license_type")

    @_builtins.property
    @pulumi.getter(name="licenseUrl")
    def license_url(self) -> _builtins.str:
        """
        Publicly accessible license URL containing the detailed terms and conditions.
        """
        return pulumi.get(self, "license_url")


@pulumi.output_type
class GetJavaReleaseMosPatchResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 patch_url: _builtins.str):
        """
        :param _builtins.str display_name: Commonly used name for the MoS release.
        :param _builtins.str patch_url: MoS URL to access the artifacts for the Java release.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "patch_url", patch_url)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        Commonly used name for the MoS release.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="patchUrl")
    def patch_url(self) -> _builtins.str:
        """
        MoS URL to access the artifacts for the Java release.
        """
        return pulumi.get(self, "patch_url")


@pulumi.output_type
class GetJavaReleasesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetJavaReleasesJavaReleaseCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetJavaReleasesJavaReleaseCollectionItemResult(dict):
    def __init__(__self__, *,
                 artifact_content_types: Sequence[_builtins.str],
                 artifacts: Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemArtifactResult'],
                 days_under_security_baseline: _builtins.int,
                 family_details: Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemFamilyDetailResult'],
                 family_version: _builtins.str,
                 license_details: Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemLicenseDetailResult'],
                 license_type: _builtins.str,
                 mos_patches: Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemMosPatchResult'],
                 parent_release_version: _builtins.str,
                 release_date: _builtins.str,
                 release_notes_url: _builtins.str,
                 release_type: _builtins.str,
                 release_version: _builtins.str,
                 security_status: _builtins.str):
        """
        :param Sequence[_builtins.str] artifact_content_types: Artifact content types for the Java version.
        :param Sequence['GetJavaReleasesJavaReleaseCollectionItemArtifactArgs'] artifacts: List of Java artifacts.
        :param _builtins.int days_under_security_baseline: The number of days since this release has been under the security baseline.
        :param Sequence['GetJavaReleasesJavaReleaseCollectionItemFamilyDetailArgs'] family_details: Metadata associated with a specific Java release family. A Java release family is typically a major version in the Java version identifier.
        :param _builtins.str family_version: The version identifier for the Java family.
        :param Sequence['GetJavaReleasesJavaReleaseCollectionItemLicenseDetailArgs'] license_details: Information about a license type for Java.
        :param _builtins.str license_type: Java license type.
        :param Sequence['GetJavaReleasesJavaReleaseCollectionItemMosPatchArgs'] mos_patches: List of My Oracle Support(MoS) patches available for this release. This information is only available for `BPR` release type.
        :param _builtins.str parent_release_version: Parent Java release version identifier. This is applicable for BPR releases.
        :param _builtins.str release_date: The release date of the Java version (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str release_notes_url: Release notes associated with the Java version.
        :param _builtins.str release_type: Java release type.
        :param _builtins.str release_version: Unique Java release version identifier
        :param _builtins.str security_status: The security status of the Java version.
        """
        pulumi.set(__self__, "artifact_content_types", artifact_content_types)
        pulumi.set(__self__, "artifacts", artifacts)
        pulumi.set(__self__, "days_under_security_baseline", days_under_security_baseline)
        pulumi.set(__self__, "family_details", family_details)
        pulumi.set(__self__, "family_version", family_version)
        pulumi.set(__self__, "license_details", license_details)
        pulumi.set(__self__, "license_type", license_type)
        pulumi.set(__self__, "mos_patches", mos_patches)
        pulumi.set(__self__, "parent_release_version", parent_release_version)
        pulumi.set(__self__, "release_date", release_date)
        pulumi.set(__self__, "release_notes_url", release_notes_url)
        pulumi.set(__self__, "release_type", release_type)
        pulumi.set(__self__, "release_version", release_version)
        pulumi.set(__self__, "security_status", security_status)

    @_builtins.property
    @pulumi.getter(name="artifactContentTypes")
    def artifact_content_types(self) -> Sequence[_builtins.str]:
        """
        Artifact content types for the Java version.
        """
        return pulumi.get(self, "artifact_content_types")

    @_builtins.property
    @pulumi.getter
    def artifacts(self) -> Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemArtifactResult']:
        """
        List of Java artifacts.
        """
        return pulumi.get(self, "artifacts")

    @_builtins.property
    @pulumi.getter(name="daysUnderSecurityBaseline")
    def days_under_security_baseline(self) -> _builtins.int:
        """
        The number of days since this release has been under the security baseline.
        """
        return pulumi.get(self, "days_under_security_baseline")

    @_builtins.property
    @pulumi.getter(name="familyDetails")
    def family_details(self) -> Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemFamilyDetailResult']:
        """
        Metadata associated with a specific Java release family. A Java release family is typically a major version in the Java version identifier.
        """
        return pulumi.get(self, "family_details")

    @_builtins.property
    @pulumi.getter(name="familyVersion")
    def family_version(self) -> _builtins.str:
        """
        The version identifier for the Java family.
        """
        return pulumi.get(self, "family_version")

    @_builtins.property
    @pulumi.getter(name="licenseDetails")
    def license_details(self) -> Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemLicenseDetailResult']:
        """
        Information about a license type for Java.
        """
        return pulumi.get(self, "license_details")

    @_builtins.property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> _builtins.str:
        """
        Java license type.
        """
        return pulumi.get(self, "license_type")

    @_builtins.property
    @pulumi.getter(name="mosPatches")
    def mos_patches(self) -> Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemMosPatchResult']:
        """
        List of My Oracle Support(MoS) patches available for this release. This information is only available for `BPR` release type.
        """
        return pulumi.get(self, "mos_patches")

    @_builtins.property
    @pulumi.getter(name="parentReleaseVersion")
    def parent_release_version(self) -> _builtins.str:
        """
        Parent Java release version identifier. This is applicable for BPR releases.
        """
        return pulumi.get(self, "parent_release_version")

    @_builtins.property
    @pulumi.getter(name="releaseDate")
    def release_date(self) -> _builtins.str:
        """
        The release date of the Java version (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "release_date")

    @_builtins.property
    @pulumi.getter(name="releaseNotesUrl")
    def release_notes_url(self) -> _builtins.str:
        """
        Release notes associated with the Java version.
        """
        return pulumi.get(self, "release_notes_url")

    @_builtins.property
    @pulumi.getter(name="releaseType")
    def release_type(self) -> _builtins.str:
        """
        Java release type.
        """
        return pulumi.get(self, "release_type")

    @_builtins.property
    @pulumi.getter(name="releaseVersion")
    def release_version(self) -> _builtins.str:
        """
        Unique Java release version identifier
        """
        return pulumi.get(self, "release_version")

    @_builtins.property
    @pulumi.getter(name="securityStatus")
    def security_status(self) -> _builtins.str:
        """
        The security status of the Java version.
        """
        return pulumi.get(self, "security_status")


@pulumi.output_type
class GetJavaReleasesJavaReleaseCollectionItemArtifactResult(dict):
    def __init__(__self__, *,
                 approximate_file_size_in_bytes: _builtins.str,
                 architecture: _builtins.str,
                 artifact_content_type: _builtins.str,
                 artifact_description: _builtins.str,
                 artifact_file_name: _builtins.str,
                 artifact_id: _builtins.str,
                 download_url: _builtins.str,
                 os_family: _builtins.str,
                 package_type: _builtins.str,
                 package_type_detail: _builtins.str,
                 script_checksum_url: _builtins.str,
                 script_download_url: _builtins.str,
                 sha256: _builtins.str):
        """
        :param _builtins.str approximate_file_size_in_bytes: Approximate compressed file size in bytes.
        :param _builtins.str architecture: The target Operating System architecture for the artifact.
        :param _builtins.str artifact_content_type: Product content type of this artifact.
        :param _builtins.str artifact_description: Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        :param _builtins.str artifact_file_name: The file name of the artifact.
        :param _builtins.str artifact_id: Unique identifier for the artifact.
        :param _builtins.str download_url: The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        :param _builtins.str os_family: The target Operating System family for the artifact.
        :param _builtins.str package_type: The package type(typically the file extension) of the artifact.
        :param _builtins.str package_type_detail: Additional information about the package type.
        :param _builtins.str script_checksum_url: The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        :param _builtins.str script_download_url: The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        :param _builtins.str sha256: SHA256 checksum of the artifact.
        """
        pulumi.set(__self__, "approximate_file_size_in_bytes", approximate_file_size_in_bytes)
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "artifact_content_type", artifact_content_type)
        pulumi.set(__self__, "artifact_description", artifact_description)
        pulumi.set(__self__, "artifact_file_name", artifact_file_name)
        pulumi.set(__self__, "artifact_id", artifact_id)
        pulumi.set(__self__, "download_url", download_url)
        pulumi.set(__self__, "os_family", os_family)
        pulumi.set(__self__, "package_type", package_type)
        pulumi.set(__self__, "package_type_detail", package_type_detail)
        pulumi.set(__self__, "script_checksum_url", script_checksum_url)
        pulumi.set(__self__, "script_download_url", script_download_url)
        pulumi.set(__self__, "sha256", sha256)

    @_builtins.property
    @pulumi.getter(name="approximateFileSizeInBytes")
    def approximate_file_size_in_bytes(self) -> _builtins.str:
        """
        Approximate compressed file size in bytes.
        """
        return pulumi.get(self, "approximate_file_size_in_bytes")

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        The target Operating System architecture for the artifact.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter(name="artifactContentType")
    def artifact_content_type(self) -> _builtins.str:
        """
        Product content type of this artifact.
        """
        return pulumi.get(self, "artifact_content_type")

    @_builtins.property
    @pulumi.getter(name="artifactDescription")
    def artifact_description(self) -> _builtins.str:
        """
        Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        """
        return pulumi.get(self, "artifact_description")

    @_builtins.property
    @pulumi.getter(name="artifactFileName")
    def artifact_file_name(self) -> _builtins.str:
        """
        The file name of the artifact.
        """
        return pulumi.get(self, "artifact_file_name")

    @_builtins.property
    @pulumi.getter(name="artifactId")
    def artifact_id(self) -> _builtins.str:
        """
        Unique identifier for the artifact.
        """
        return pulumi.get(self, "artifact_id")

    @_builtins.property
    @pulumi.getter(name="downloadUrl")
    def download_url(self) -> _builtins.str:
        """
        The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        """
        return pulumi.get(self, "download_url")

    @_builtins.property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> _builtins.str:
        """
        The target Operating System family for the artifact.
        """
        return pulumi.get(self, "os_family")

    @_builtins.property
    @pulumi.getter(name="packageType")
    def package_type(self) -> _builtins.str:
        """
        The package type(typically the file extension) of the artifact.
        """
        return pulumi.get(self, "package_type")

    @_builtins.property
    @pulumi.getter(name="packageTypeDetail")
    def package_type_detail(self) -> _builtins.str:
        """
        Additional information about the package type.
        """
        return pulumi.get(self, "package_type_detail")

    @_builtins.property
    @pulumi.getter(name="scriptChecksumUrl")
    def script_checksum_url(self) -> _builtins.str:
        """
        The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        """
        return pulumi.get(self, "script_checksum_url")

    @_builtins.property
    @pulumi.getter(name="scriptDownloadUrl")
    def script_download_url(self) -> _builtins.str:
        """
        The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        """
        return pulumi.get(self, "script_download_url")

    @_builtins.property
    @pulumi.getter
    def sha256(self) -> _builtins.str:
        """
        SHA256 checksum of the artifact.
        """
        return pulumi.get(self, "sha256")


@pulumi.output_type
class GetJavaReleasesJavaReleaseCollectionItemFamilyDetailResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 doc_url: _builtins.str,
                 end_of_support_life_date: _builtins.str,
                 family_version: _builtins.str,
                 is_supported_version: _builtins.bool,
                 latest_release_artifacts: Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemFamilyDetailLatestReleaseArtifactResult'],
                 latest_release_version: _builtins.str,
                 license_types: Sequence[_builtins.str],
                 release_date: _builtins.str,
                 support_type: _builtins.str):
        """
        :param _builtins.str display_name: Commonly used name for the MoS release.
        :param _builtins.str doc_url: Link to access the documentation for the release.
        :param _builtins.str end_of_support_life_date: The End of Support Life (EOSL) date of the Java release family (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str family_version: The version identifier for the Java family.
        :param _builtins.bool is_supported_version: Whether or not this Java release family is under active support. Refer [Java Support Roadmap](https://www.oracle.com/java/technologies/java-se-support-roadmap.html) for more details.
        :param Sequence['GetJavaReleasesJavaReleaseCollectionItemFamilyDetailLatestReleaseArtifactArgs'] latest_release_artifacts: List of artifacts for the latest Java release version in this family. The script URLs in the response can be used from a command line, or in scripts and dockerfiles to always get the artifacts corresponding to the latest update release version.
        :param _builtins.str latest_release_version: Latest Java release version in the family.
        :param Sequence[_builtins.str] license_types: The license type(s) associated with the Java family.
        :param _builtins.str release_date: The release date of the Java version (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str support_type: This indicates the support category for the Java release family.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "doc_url", doc_url)
        pulumi.set(__self__, "end_of_support_life_date", end_of_support_life_date)
        pulumi.set(__self__, "family_version", family_version)
        pulumi.set(__self__, "is_supported_version", is_supported_version)
        pulumi.set(__self__, "latest_release_artifacts", latest_release_artifacts)
        pulumi.set(__self__, "latest_release_version", latest_release_version)
        pulumi.set(__self__, "license_types", license_types)
        pulumi.set(__self__, "release_date", release_date)
        pulumi.set(__self__, "support_type", support_type)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        Commonly used name for the MoS release.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="docUrl")
    def doc_url(self) -> _builtins.str:
        """
        Link to access the documentation for the release.
        """
        return pulumi.get(self, "doc_url")

    @_builtins.property
    @pulumi.getter(name="endOfSupportLifeDate")
    def end_of_support_life_date(self) -> _builtins.str:
        """
        The End of Support Life (EOSL) date of the Java release family (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "end_of_support_life_date")

    @_builtins.property
    @pulumi.getter(name="familyVersion")
    def family_version(self) -> _builtins.str:
        """
        The version identifier for the Java family.
        """
        return pulumi.get(self, "family_version")

    @_builtins.property
    @pulumi.getter(name="isSupportedVersion")
    def is_supported_version(self) -> _builtins.bool:
        """
        Whether or not this Java release family is under active support. Refer [Java Support Roadmap](https://www.oracle.com/java/technologies/java-se-support-roadmap.html) for more details.
        """
        return pulumi.get(self, "is_supported_version")

    @_builtins.property
    @pulumi.getter(name="latestReleaseArtifacts")
    def latest_release_artifacts(self) -> Sequence['outputs.GetJavaReleasesJavaReleaseCollectionItemFamilyDetailLatestReleaseArtifactResult']:
        """
        List of artifacts for the latest Java release version in this family. The script URLs in the response can be used from a command line, or in scripts and dockerfiles to always get the artifacts corresponding to the latest update release version.
        """
        return pulumi.get(self, "latest_release_artifacts")

    @_builtins.property
    @pulumi.getter(name="latestReleaseVersion")
    def latest_release_version(self) -> _builtins.str:
        """
        Latest Java release version in the family.
        """
        return pulumi.get(self, "latest_release_version")

    @_builtins.property
    @pulumi.getter(name="licenseTypes")
    def license_types(self) -> Sequence[_builtins.str]:
        """
        The license type(s) associated with the Java family.
        """
        return pulumi.get(self, "license_types")

    @_builtins.property
    @pulumi.getter(name="releaseDate")
    def release_date(self) -> _builtins.str:
        """
        The release date of the Java version (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "release_date")

    @_builtins.property
    @pulumi.getter(name="supportType")
    def support_type(self) -> _builtins.str:
        """
        This indicates the support category for the Java release family.
        """
        return pulumi.get(self, "support_type")


@pulumi.output_type
class GetJavaReleasesJavaReleaseCollectionItemFamilyDetailLatestReleaseArtifactResult(dict):
    def __init__(__self__, *,
                 approximate_file_size_in_bytes: _builtins.str,
                 architecture: _builtins.str,
                 artifact_content_type: _builtins.str,
                 artifact_description: _builtins.str,
                 artifact_file_name: _builtins.str,
                 artifact_id: _builtins.str,
                 download_url: _builtins.str,
                 os_family: _builtins.str,
                 package_type: _builtins.str,
                 package_type_detail: _builtins.str,
                 script_checksum_url: _builtins.str,
                 script_download_url: _builtins.str,
                 sha256: _builtins.str):
        """
        :param _builtins.str approximate_file_size_in_bytes: Approximate compressed file size in bytes.
        :param _builtins.str architecture: The target Operating System architecture for the artifact.
        :param _builtins.str artifact_content_type: Product content type of this artifact.
        :param _builtins.str artifact_description: Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        :param _builtins.str artifact_file_name: The file name of the artifact.
        :param _builtins.str artifact_id: Unique identifier for the artifact.
        :param _builtins.str download_url: The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        :param _builtins.str os_family: The target Operating System family for the artifact.
        :param _builtins.str package_type: The package type(typically the file extension) of the artifact.
        :param _builtins.str package_type_detail: Additional information about the package type.
        :param _builtins.str script_checksum_url: The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        :param _builtins.str script_download_url: The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        :param _builtins.str sha256: SHA256 checksum of the artifact.
        """
        pulumi.set(__self__, "approximate_file_size_in_bytes", approximate_file_size_in_bytes)
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "artifact_content_type", artifact_content_type)
        pulumi.set(__self__, "artifact_description", artifact_description)
        pulumi.set(__self__, "artifact_file_name", artifact_file_name)
        pulumi.set(__self__, "artifact_id", artifact_id)
        pulumi.set(__self__, "download_url", download_url)
        pulumi.set(__self__, "os_family", os_family)
        pulumi.set(__self__, "package_type", package_type)
        pulumi.set(__self__, "package_type_detail", package_type_detail)
        pulumi.set(__self__, "script_checksum_url", script_checksum_url)
        pulumi.set(__self__, "script_download_url", script_download_url)
        pulumi.set(__self__, "sha256", sha256)

    @_builtins.property
    @pulumi.getter(name="approximateFileSizeInBytes")
    def approximate_file_size_in_bytes(self) -> _builtins.str:
        """
        Approximate compressed file size in bytes.
        """
        return pulumi.get(self, "approximate_file_size_in_bytes")

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        The target Operating System architecture for the artifact.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter(name="artifactContentType")
    def artifact_content_type(self) -> _builtins.str:
        """
        Product content type of this artifact.
        """
        return pulumi.get(self, "artifact_content_type")

    @_builtins.property
    @pulumi.getter(name="artifactDescription")
    def artifact_description(self) -> _builtins.str:
        """
        Description of the binary artifact. Typically includes the OS, architecture, and installer type.
        """
        return pulumi.get(self, "artifact_description")

    @_builtins.property
    @pulumi.getter(name="artifactFileName")
    def artifact_file_name(self) -> _builtins.str:
        """
        The file name of the artifact.
        """
        return pulumi.get(self, "artifact_file_name")

    @_builtins.property
    @pulumi.getter(name="artifactId")
    def artifact_id(self) -> _builtins.str:
        """
        Unique identifier for the artifact.
        """
        return pulumi.get(self, "artifact_id")

    @_builtins.property
    @pulumi.getter(name="downloadUrl")
    def download_url(self) -> _builtins.str:
        """
        The endpoint that returns a short-lived artifact download URL in the response payload. This download url can then be used for downloading the artifact. See this [API](https://docs.oracle.com/en-us/iaas/api/#/en/jms-java-download/20230601/DownloadUrl/GenerateArtifactDownloadUrl) for more details.
        """
        return pulumi.get(self, "download_url")

    @_builtins.property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> _builtins.str:
        """
        The target Operating System family for the artifact.
        """
        return pulumi.get(self, "os_family")

    @_builtins.property
    @pulumi.getter(name="packageType")
    def package_type(self) -> _builtins.str:
        """
        The package type(typically the file extension) of the artifact.
        """
        return pulumi.get(self, "package_type")

    @_builtins.property
    @pulumi.getter(name="packageTypeDetail")
    def package_type_detail(self) -> _builtins.str:
        """
        Additional information about the package type.
        """
        return pulumi.get(self, "package_type_detail")

    @_builtins.property
    @pulumi.getter(name="scriptChecksumUrl")
    def script_checksum_url(self) -> _builtins.str:
        """
        The URL for retrieving the checksum for the artifact. Depending on the context, this can point to the checksum of the archive or latest update release version artifact.
        """
        return pulumi.get(self, "script_checksum_url")

    @_builtins.property
    @pulumi.getter(name="scriptDownloadUrl")
    def script_download_url(self) -> _builtins.str:
        """
        The endpoint for downloading this artifact from command line, automatically in scripts and dockerfiles. Depending on the context, this can point to the archive or latest update release version artifact in the specified family.
        """
        return pulumi.get(self, "script_download_url")

    @_builtins.property
    @pulumi.getter
    def sha256(self) -> _builtins.str:
        """
        SHA256 checksum of the artifact.
        """
        return pulumi.get(self, "sha256")


@pulumi.output_type
class GetJavaReleasesJavaReleaseCollectionItemLicenseDetailResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 license_type: _builtins.str,
                 license_url: _builtins.str):
        """
        :param _builtins.str display_name: Commonly used name for the MoS release.
        :param _builtins.str license_type: Java license type.
        :param _builtins.str license_url: Publicly accessible license URL containing the detailed terms and conditions.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "license_type", license_type)
        pulumi.set(__self__, "license_url", license_url)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        Commonly used name for the MoS release.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> _builtins.str:
        """
        Java license type.
        """
        return pulumi.get(self, "license_type")

    @_builtins.property
    @pulumi.getter(name="licenseUrl")
    def license_url(self) -> _builtins.str:
        """
        Publicly accessible license URL containing the detailed terms and conditions.
        """
        return pulumi.get(self, "license_url")


@pulumi.output_type
class GetJavaReleasesJavaReleaseCollectionItemMosPatchResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 patch_url: _builtins.str):
        """
        :param _builtins.str display_name: Commonly used name for the MoS release.
        :param _builtins.str patch_url: MoS URL to access the artifacts for the Java release.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "patch_url", patch_url)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        Commonly used name for the MoS release.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="patchUrl")
    def patch_url(self) -> _builtins.str:
        """
        MoS URL to access the artifacts for the Java release.
        """
        return pulumi.get(self, "patch_url")


@pulumi.output_type
class GetJmsPluginsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetJmsPluginsJmsPluginCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetJmsPluginsJmsPluginCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetJmsPluginsJmsPluginCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetJmsPluginsJmsPluginCollectionItemResult(dict):
    def __init__(__self__, *,
                 agent_id: _builtins.str,
                 agent_type: _builtins.str,
                 availability_status: _builtins.str,
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 fleet_id: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 hostname: _builtins.str,
                 id: _builtins.str,
                 os_architecture: _builtins.str,
                 os_distribution: _builtins.str,
                 os_family: _builtins.str,
                 plugin_version: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_last_seen: _builtins.str,
                 time_registered: _builtins.str):
        """
        :param _builtins.str agent_id: The ManagementAgent (OMA), Oracle Cloud Agent (OCA), or the Oracle Container Management Agent (OCMA) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  that identifies the Agent.
        :param _builtins.str agent_type: Filter JmsPlugin with agent type.
        :param _builtins.str availability_status: Filter JmsPlugin with its availability status.
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        :param _builtins.str fleet_id: The ID of the Fleet.
        :param Mapping[str, _builtins.str] freeform_tags: Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        :param _builtins.str hostname: The hostname of the agent.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
        :param _builtins.str os_architecture: The architecture of the operating system of the plugin.
        :param _builtins.str os_distribution: The distribution of the operating system of the plugin.
        :param _builtins.str os_family: The operating system family for the plugin.
        :param _builtins.str plugin_version: The version of the plugin.
        :param _builtins.str state: Filter JmsPlugin with its lifecycle state.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_last_seen: The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        :param _builtins.str time_registered: The date and time the plugin was registered.
        """
        pulumi.set(__self__, "agent_id", agent_id)
        pulumi.set(__self__, "agent_type", agent_type)
        pulumi.set(__self__, "availability_status", availability_status)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "hostname", hostname)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "os_architecture", os_architecture)
        pulumi.set(__self__, "os_distribution", os_distribution)
        pulumi.set(__self__, "os_family", os_family)
        pulumi.set(__self__, "plugin_version", plugin_version)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_last_seen", time_last_seen)
        pulumi.set(__self__, "time_registered", time_registered)

    @_builtins.property
    @pulumi.getter(name="agentId")
    def agent_id(self) -> _builtins.str:
        """
        The ManagementAgent (OMA), Oracle Cloud Agent (OCA), or the Oracle Container Management Agent (OCMA) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  that identifies the Agent.
        """
        return pulumi.get(self, "agent_id")

    @_builtins.property
    @pulumi.getter(name="agentType")
    def agent_type(self) -> _builtins.str:
        """
        Filter JmsPlugin with agent type.
        """
        return pulumi.get(self, "agent_type")

    @_builtins.property
    @pulumi.getter(name="availabilityStatus")
    def availability_status(self) -> _builtins.str:
        """
        Filter JmsPlugin with its availability status.
        """
        return pulumi.get(self, "availability_status")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> _builtins.str:
        """
        The ID of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def hostname(self) -> _builtins.str:
        """
        The hostname of the agent.
        """
        return pulumi.get(self, "hostname")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="osArchitecture")
    def os_architecture(self) -> _builtins.str:
        """
        The architecture of the operating system of the plugin.
        """
        return pulumi.get(self, "os_architecture")

    @_builtins.property
    @pulumi.getter(name="osDistribution")
    def os_distribution(self) -> _builtins.str:
        """
        The distribution of the operating system of the plugin.
        """
        return pulumi.get(self, "os_distribution")

    @_builtins.property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> _builtins.str:
        """
        The operating system family for the plugin.
        """
        return pulumi.get(self, "os_family")

    @_builtins.property
    @pulumi.getter(name="pluginVersion")
    def plugin_version(self) -> _builtins.str:
        """
        The version of the plugin.
        """
        return pulumi.get(self, "plugin_version")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        Filter JmsPlugin with its lifecycle state.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> _builtins.str:
        """
        The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        return pulumi.get(self, "time_last_seen")

    @_builtins.property
    @pulumi.getter(name="timeRegistered")
    def time_registered(self) -> _builtins.str:
        """
        The date and time the plugin was registered.
        """
        return pulumi.get(self, "time_registered")


@pulumi.output_type
class GetListJreUsageItemResult(dict):
    def __init__(__self__, *,
                 approximate_application_count: _builtins.int,
                 approximate_installation_count: _builtins.int,
                 approximate_managed_instance_count: _builtins.int,
                 approximate_pending_work_request_count: _builtins.int,
                 days_under_security_baseline: _builtins.int,
                 distribution: _builtins.str,
                 end_of_support_life_date: _builtins.str,
                 fleet_id: _builtins.str,
                 id: _builtins.str,
                 managed_instance_id: _builtins.str,
                 operating_systems: Sequence['outputs.GetListJreUsageItemOperatingSystemResult'],
                 release_date: _builtins.str,
                 security_status: _builtins.str,
                 time_end: _builtins.str,
                 time_first_seen: _builtins.str,
                 time_last_seen: _builtins.str,
                 time_start: _builtins.str,
                 vendor: _builtins.str,
                 version: _builtins.str):
        """
        :param _builtins.int approximate_application_count: The approximate count of the applications running on this Java Runtime.
        :param _builtins.int approximate_installation_count: The approximate count of installations that are installations of this Java Runtime.
        :param _builtins.int approximate_managed_instance_count: The approximate count of the managed instances that report this Java Runtime.
        :param _builtins.int approximate_pending_work_request_count: The approximate count of work requests working on this Java Runtime.
        :param _builtins.int days_under_security_baseline: The number of days since this release has been under the security baseline.
        :param _builtins.str distribution: The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        :param _builtins.str end_of_support_life_date: The End of Support Life (EOSL) date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related fleet.
        :param _builtins.str id: The internal identifier of the Java Runtime.
        :param _builtins.str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance. This property value is present only for /listJreUsage.
        :param Sequence['GetListJreUsageItemOperatingSystemArgs'] operating_systems: The operating systems that have this Java Runtime installed.
        :param _builtins.str release_date: The release date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str security_status: The security status of the Java Runtime.
        :param _builtins.str time_end: The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str time_first_seen: The date and time the resource was _first_ reported to JMS. This is potentially _before_ the specified time period provided by the filters. For example, a resource can be first reported to JMS before the start of a specified time period, if it is also reported during the time period.
        :param _builtins.str time_last_seen: The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        :param _builtins.str time_start: The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str vendor: The vendor of the Java Runtime.
        :param _builtins.str version: The version of the Java Runtime.
        """
        pulumi.set(__self__, "approximate_application_count", approximate_application_count)
        pulumi.set(__self__, "approximate_installation_count", approximate_installation_count)
        pulumi.set(__self__, "approximate_managed_instance_count", approximate_managed_instance_count)
        pulumi.set(__self__, "approximate_pending_work_request_count", approximate_pending_work_request_count)
        pulumi.set(__self__, "days_under_security_baseline", days_under_security_baseline)
        pulumi.set(__self__, "distribution", distribution)
        pulumi.set(__self__, "end_of_support_life_date", end_of_support_life_date)
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "operating_systems", operating_systems)
        pulumi.set(__self__, "release_date", release_date)
        pulumi.set(__self__, "security_status", security_status)
        pulumi.set(__self__, "time_end", time_end)
        pulumi.set(__self__, "time_first_seen", time_first_seen)
        pulumi.set(__self__, "time_last_seen", time_last_seen)
        pulumi.set(__self__, "time_start", time_start)
        pulumi.set(__self__, "vendor", vendor)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="approximateApplicationCount")
    def approximate_application_count(self) -> _builtins.int:
        """
        The approximate count of the applications running on this Java Runtime.
        """
        return pulumi.get(self, "approximate_application_count")

    @_builtins.property
    @pulumi.getter(name="approximateInstallationCount")
    def approximate_installation_count(self) -> _builtins.int:
        """
        The approximate count of installations that are installations of this Java Runtime.
        """
        return pulumi.get(self, "approximate_installation_count")

    @_builtins.property
    @pulumi.getter(name="approximateManagedInstanceCount")
    def approximate_managed_instance_count(self) -> _builtins.int:
        """
        The approximate count of the managed instances that report this Java Runtime.
        """
        return pulumi.get(self, "approximate_managed_instance_count")

    @_builtins.property
    @pulumi.getter(name="approximatePendingWorkRequestCount")
    def approximate_pending_work_request_count(self) -> _builtins.int:
        """
        The approximate count of work requests working on this Java Runtime.
        """
        return pulumi.get(self, "approximate_pending_work_request_count")

    @_builtins.property
    @pulumi.getter(name="daysUnderSecurityBaseline")
    def days_under_security_baseline(self) -> _builtins.int:
        """
        The number of days since this release has been under the security baseline.
        """
        return pulumi.get(self, "days_under_security_baseline")

    @_builtins.property
    @pulumi.getter
    def distribution(self) -> _builtins.str:
        """
        The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        """
        return pulumi.get(self, "distribution")

    @_builtins.property
    @pulumi.getter(name="endOfSupportLifeDate")
    def end_of_support_life_date(self) -> _builtins.str:
        """
        The End of Support Life (EOSL) date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "end_of_support_life_date")

    @_builtins.property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related fleet.
        """
        return pulumi.get(self, "fleet_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The internal identifier of the Java Runtime.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance. This property value is present only for /listJreUsage.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="operatingSystems")
    def operating_systems(self) -> Sequence['outputs.GetListJreUsageItemOperatingSystemResult']:
        """
        The operating systems that have this Java Runtime installed.
        """
        return pulumi.get(self, "operating_systems")

    @_builtins.property
    @pulumi.getter(name="releaseDate")
    def release_date(self) -> _builtins.str:
        """
        The release date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "release_date")

    @_builtins.property
    @pulumi.getter(name="securityStatus")
    def security_status(self) -> _builtins.str:
        """
        The security status of the Java Runtime.
        """
        return pulumi.get(self, "security_status")

    @_builtins.property
    @pulumi.getter(name="timeEnd")
    def time_end(self) -> _builtins.str:
        """
        The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_end")

    @_builtins.property
    @pulumi.getter(name="timeFirstSeen")
    def time_first_seen(self) -> _builtins.str:
        """
        The date and time the resource was _first_ reported to JMS. This is potentially _before_ the specified time period provided by the filters. For example, a resource can be first reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        return pulumi.get(self, "time_first_seen")

    @_builtins.property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> _builtins.str:
        """
        The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        return pulumi.get(self, "time_last_seen")

    @_builtins.property
    @pulumi.getter(name="timeStart")
    def time_start(self) -> _builtins.str:
        """
        The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_start")

    @_builtins.property
    @pulumi.getter
    def vendor(self) -> _builtins.str:
        """
        The vendor of the Java Runtime.
        """
        return pulumi.get(self, "vendor")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        The version of the Java Runtime.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetListJreUsageItemOperatingSystemResult(dict):
    def __init__(__self__, *,
                 architecture: _builtins.str,
                 family: _builtins.str,
                 managed_instance_count: _builtins.int,
                 name: _builtins.str,
                 version: _builtins.str):
        """
        :param _builtins.str architecture: The architecture of the operating system as provided by the Java system property os.arch.
        :param _builtins.str family: The operating system type, such as Windows or Linux
        :param _builtins.int managed_instance_count: Number of instances running the operating system
        :param _builtins.str name: The name of the operating system as provided by the Java system property os.name.
        :param _builtins.str version: The version of the Java Runtime.
        """
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "family", family)
        pulumi.set(__self__, "managed_instance_count", managed_instance_count)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def architecture(self) -> _builtins.str:
        """
        The architecture of the operating system as provided by the Java system property os.arch.
        """
        return pulumi.get(self, "architecture")

    @_builtins.property
    @pulumi.getter
    def family(self) -> _builtins.str:
        """
        The operating system type, such as Windows or Linux
        """
        return pulumi.get(self, "family")

    @_builtins.property
    @pulumi.getter(name="managedInstanceCount")
    def managed_instance_count(self) -> _builtins.int:
        """
        Number of instances running the operating system
        """
        return pulumi.get(self, "managed_instance_count")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the operating system as provided by the Java system property os.name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        The version of the Java Runtime.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetPluginErrorAnalyticsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetPluginErrorAnalyticsPluginErrorAggregationCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemResult']):
        """
        :param Sequence['GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemArgs'] items: A list of PluginErrorAggregationSummary.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemResult']:
        """
        A list of PluginErrorAggregationSummary.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemResult(dict):
    def __init__(__self__, *,
                 healthy_plugin_count: _builtins.int,
                 plugin_error_aggregations: Sequence['outputs.GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregationResult']):
        """
        :param _builtins.int healthy_plugin_count: Count of plugins with no problems.
        :param Sequence['GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregationArgs'] plugin_error_aggregations: List of plugin aggregation errors.
        """
        pulumi.set(__self__, "healthy_plugin_count", healthy_plugin_count)
        pulumi.set(__self__, "plugin_error_aggregations", plugin_error_aggregations)

    @_builtins.property
    @pulumi.getter(name="healthyPluginCount")
    def healthy_plugin_count(self) -> _builtins.int:
        """
        Count of plugins with no problems.
        """
        return pulumi.get(self, "healthy_plugin_count")

    @_builtins.property
    @pulumi.getter(name="pluginErrorAggregations")
    def plugin_error_aggregations(self) -> Sequence['outputs.GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregationResult']:
        """
        List of plugin aggregation errors.
        """
        return pulumi.get(self, "plugin_error_aggregations")


@pulumi.output_type
class GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregationResult(dict):
    def __init__(__self__, *,
                 plugin_error_analytic_count: _builtins.int,
                 reason: _builtins.str):
        """
        :param _builtins.int plugin_error_analytic_count: Number of FleetErrors encountered for the specific reason.
        :param _builtins.str reason: Enum that uniquely identifies the plugin error.
        """
        pulumi.set(__self__, "plugin_error_analytic_count", plugin_error_analytic_count)
        pulumi.set(__self__, "reason", reason)

    @_builtins.property
    @pulumi.getter(name="pluginErrorAnalyticCount")
    def plugin_error_analytic_count(self) -> _builtins.int:
        """
        Number of FleetErrors encountered for the specific reason.
        """
        return pulumi.get(self, "plugin_error_analytic_count")

    @_builtins.property
    @pulumi.getter
    def reason(self) -> _builtins.str:
        """
        Enum that uniquely identifies the plugin error.
        """
        return pulumi.get(self, "reason")


@pulumi.output_type
class GetPluginErrorsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetPluginErrorsPluginErrorCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetPluginErrorsPluginErrorCollectionItemResult']):
        """
        :param Sequence['GetPluginErrorsPluginErrorCollectionItemArgs'] items: A list of PluginErrorSummary.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetPluginErrorsPluginErrorCollectionItemResult']:
        """
        A list of PluginErrorSummary.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetPluginErrorsPluginErrorCollectionItemResult(dict):
    def __init__(__self__, *,
                 agent_type: _builtins.str,
                 compartment_id: _builtins.str,
                 errors: Sequence['outputs.GetPluginErrorsPluginErrorCollectionItemErrorResult'],
                 host_name: _builtins.str,
                 managed_instance_id: _builtins.str,
                 time_first_seen: _builtins.str,
                 time_last_seen: _builtins.str):
        """
        :param _builtins.str agent_type: The agent type.
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        :param Sequence['GetPluginErrorsPluginErrorCollectionItemErrorArgs'] errors: List of plugin error details.
        :param _builtins.str host_name: The HostName or Compute Instance name of the Managed Instance running the plugin.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the managed instance.
        :param _builtins.str time_first_seen: The timestamp of the first time an error was detected.
        :param _builtins.str time_last_seen: The timestamp of the last time an error was detected.
        """
        pulumi.set(__self__, "agent_type", agent_type)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "errors", errors)
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "time_first_seen", time_first_seen)
        pulumi.set(__self__, "time_last_seen", time_last_seen)

    @_builtins.property
    @pulumi.getter(name="agentType")
    def agent_type(self) -> _builtins.str:
        """
        The agent type.
        """
        return pulumi.get(self, "agent_type")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter
    def errors(self) -> Sequence['outputs.GetPluginErrorsPluginErrorCollectionItemErrorResult']:
        """
        List of plugin error details.
        """
        return pulumi.get(self, "errors")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        The HostName or Compute Instance name of the Managed Instance running the plugin.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="timeFirstSeen")
    def time_first_seen(self) -> _builtins.str:
        """
        The timestamp of the first time an error was detected.
        """
        return pulumi.get(self, "time_first_seen")

    @_builtins.property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> _builtins.str:
        """
        The timestamp of the last time an error was detected.
        """
        return pulumi.get(self, "time_last_seen")


@pulumi.output_type
class GetPluginErrorsPluginErrorCollectionItemErrorResult(dict):
    def __init__(__self__, *,
                 details: _builtins.str,
                 reason: _builtins.str,
                 time_last_seen: _builtins.str):
        """
        :param _builtins.str details: Optional string containing additional details.
        :param _builtins.str reason: The plugin error reason.
        :param _builtins.str time_last_seen: The timestamp of the last time an error was detected.
        """
        pulumi.set(__self__, "details", details)
        pulumi.set(__self__, "reason", reason)
        pulumi.set(__self__, "time_last_seen", time_last_seen)

    @_builtins.property
    @pulumi.getter
    def details(self) -> _builtins.str:
        """
        Optional string containing additional details.
        """
        return pulumi.get(self, "details")

    @_builtins.property
    @pulumi.getter
    def reason(self) -> _builtins.str:
        """
        The plugin error reason.
        """
        return pulumi.get(self, "reason")

    @_builtins.property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> _builtins.str:
        """
        The timestamp of the last time an error was detected.
        """
        return pulumi.get(self, "time_last_seen")


@pulumi.output_type
class GetTaskScheduleTaskDetailResult(dict):
    def __init__(__self__, *,
                 add_installation_site_task_requests: Sequence['outputs.GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestResult'],
                 crypto_task_requests: Sequence['outputs.GetTaskScheduleTaskDetailCryptoTaskRequestResult'],
                 deployed_application_migration_task_requests: Sequence['outputs.GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestResult'],
                 java_migration_task_requests: Sequence['outputs.GetTaskScheduleTaskDetailJavaMigrationTaskRequestResult'],
                 jfr_task_requests: Sequence['outputs.GetTaskScheduleTaskDetailJfrTaskRequestResult'],
                 performance_tuning_task_requests: Sequence['outputs.GetTaskScheduleTaskDetailPerformanceTuningTaskRequestResult'],
                 remove_installation_site_task_requests: Sequence['outputs.GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestResult'],
                 scan_java_server_task_requests: Sequence['outputs.GetTaskScheduleTaskDetailScanJavaServerTaskRequestResult'],
                 scan_library_task_requests: Sequence['outputs.GetTaskScheduleTaskDetailScanLibraryTaskRequestResult'],
                 task_type: _builtins.str):
        """
        :param Sequence['GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestArgs'] add_installation_site_task_requests: The list of Java installation sites to add.
        :param Sequence['GetTaskScheduleTaskDetailCryptoTaskRequestArgs'] crypto_task_requests: Details of the request to start a JFR crypto event analysis. When the targets aren't specified, then all managed instances currently in the fleet are selected.
        :param Sequence['GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestArgs'] deployed_application_migration_task_requests: Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
        :param Sequence['GetTaskScheduleTaskDetailJavaMigrationTaskRequestArgs'] java_migration_task_requests: Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
        :param Sequence['GetTaskScheduleTaskDetailJfrTaskRequestArgs'] jfr_task_requests: Details of the request to start JFR recordings. When the targets aren't specified, then all managed instances currently in the Fleet are selected.
        :param Sequence['GetTaskScheduleTaskDetailPerformanceTuningTaskRequestArgs'] performance_tuning_task_requests: Details of the request to start a JFR performance tuning analysis.
        :param Sequence['GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestArgs'] remove_installation_site_task_requests: The list of Java installation sites to remove.
        :param Sequence['GetTaskScheduleTaskDetailScanJavaServerTaskRequestArgs'] scan_java_server_task_requests: The list of managed instances to scan.
        :param Sequence['GetTaskScheduleTaskDetailScanLibraryTaskRequestArgs'] scan_library_task_requests: The list of managed instances to scan.
        :param _builtins.str task_type: Type of task.
        """
        pulumi.set(__self__, "add_installation_site_task_requests", add_installation_site_task_requests)
        pulumi.set(__self__, "crypto_task_requests", crypto_task_requests)
        pulumi.set(__self__, "deployed_application_migration_task_requests", deployed_application_migration_task_requests)
        pulumi.set(__self__, "java_migration_task_requests", java_migration_task_requests)
        pulumi.set(__self__, "jfr_task_requests", jfr_task_requests)
        pulumi.set(__self__, "performance_tuning_task_requests", performance_tuning_task_requests)
        pulumi.set(__self__, "remove_installation_site_task_requests", remove_installation_site_task_requests)
        pulumi.set(__self__, "scan_java_server_task_requests", scan_java_server_task_requests)
        pulumi.set(__self__, "scan_library_task_requests", scan_library_task_requests)
        pulumi.set(__self__, "task_type", task_type)

    @_builtins.property
    @pulumi.getter(name="addInstallationSiteTaskRequests")
    def add_installation_site_task_requests(self) -> Sequence['outputs.GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestResult']:
        """
        The list of Java installation sites to add.
        """
        return pulumi.get(self, "add_installation_site_task_requests")

    @_builtins.property
    @pulumi.getter(name="cryptoTaskRequests")
    def crypto_task_requests(self) -> Sequence['outputs.GetTaskScheduleTaskDetailCryptoTaskRequestResult']:
        """
        Details of the request to start a JFR crypto event analysis. When the targets aren't specified, then all managed instances currently in the fleet are selected.
        """
        return pulumi.get(self, "crypto_task_requests")

    @_builtins.property
    @pulumi.getter(name="deployedApplicationMigrationTaskRequests")
    def deployed_application_migration_task_requests(self) -> Sequence['outputs.GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestResult']:
        """
        Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
        """
        return pulumi.get(self, "deployed_application_migration_task_requests")

    @_builtins.property
    @pulumi.getter(name="javaMigrationTaskRequests")
    def java_migration_task_requests(self) -> Sequence['outputs.GetTaskScheduleTaskDetailJavaMigrationTaskRequestResult']:
        """
        Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
        """
        return pulumi.get(self, "java_migration_task_requests")

    @_builtins.property
    @pulumi.getter(name="jfrTaskRequests")
    def jfr_task_requests(self) -> Sequence['outputs.GetTaskScheduleTaskDetailJfrTaskRequestResult']:
        """
        Details of the request to start JFR recordings. When the targets aren't specified, then all managed instances currently in the Fleet are selected.
        """
        return pulumi.get(self, "jfr_task_requests")

    @_builtins.property
    @pulumi.getter(name="performanceTuningTaskRequests")
    def performance_tuning_task_requests(self) -> Sequence['outputs.GetTaskScheduleTaskDetailPerformanceTuningTaskRequestResult']:
        """
        Details of the request to start a JFR performance tuning analysis.
        """
        return pulumi.get(self, "performance_tuning_task_requests")

    @_builtins.property
    @pulumi.getter(name="removeInstallationSiteTaskRequests")
    def remove_installation_site_task_requests(self) -> Sequence['outputs.GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestResult']:
        """
        The list of Java installation sites to remove.
        """
        return pulumi.get(self, "remove_installation_site_task_requests")

    @_builtins.property
    @pulumi.getter(name="scanJavaServerTaskRequests")
    def scan_java_server_task_requests(self) -> Sequence['outputs.GetTaskScheduleTaskDetailScanJavaServerTaskRequestResult']:
        """
        The list of managed instances to scan.
        """
        return pulumi.get(self, "scan_java_server_task_requests")

    @_builtins.property
    @pulumi.getter(name="scanLibraryTaskRequests")
    def scan_library_task_requests(self) -> Sequence['outputs.GetTaskScheduleTaskDetailScanLibraryTaskRequestResult']:
        """
        The list of managed instances to scan.
        """
        return pulumi.get(self, "scan_library_task_requests")

    @_builtins.property
    @pulumi.getter(name="taskType")
    def task_type(self) -> _builtins.str:
        """
        Type of task.
        """
        return pulumi.get(self, "task_type")


@pulumi.output_type
class GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestResult(dict):
    def __init__(__self__, *,
                 installation_sites: Sequence['outputs.GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSiteResult'],
                 post_installation_actions: Sequence[_builtins.str]):
        """
        :param Sequence['GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSiteArgs'] installation_sites: The list of installation sites to remove.
        :param Sequence[_builtins.str] post_installation_actions: Optional list of post java installation actions
        """
        pulumi.set(__self__, "installation_sites", installation_sites)
        pulumi.set(__self__, "post_installation_actions", post_installation_actions)

    @_builtins.property
    @pulumi.getter(name="installationSites")
    def installation_sites(self) -> Sequence['outputs.GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSiteResult']:
        """
        The list of installation sites to remove.
        """
        return pulumi.get(self, "installation_sites")

    @_builtins.property
    @pulumi.getter(name="postInstallationActions")
    def post_installation_actions(self) -> Sequence[_builtins.str]:
        """
        Optional list of post java installation actions
        """
        return pulumi.get(self, "post_installation_actions")


@pulumi.output_type
class GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSiteResult(dict):
    def __init__(__self__, *,
                 artifact_content_type: _builtins.str,
                 force_install: _builtins.bool,
                 headless_mode: _builtins.bool,
                 installation_path: _builtins.str,
                 managed_instance_id: _builtins.str,
                 release_version: _builtins.str):
        """
        :param _builtins.str artifact_content_type: Artifact content type for the Java version.
        :param _builtins.bool force_install: Forces the installation request even if a more recent release is already present in the host.
        :param _builtins.bool headless_mode: Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
        :param _builtins.str installation_path: Custom path to install new Java installation site.
        :param _builtins.str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        :param _builtins.str release_version: The release version of the Java Runtime.
        """
        pulumi.set(__self__, "artifact_content_type", artifact_content_type)
        pulumi.set(__self__, "force_install", force_install)
        pulumi.set(__self__, "headless_mode", headless_mode)
        pulumi.set(__self__, "installation_path", installation_path)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "release_version", release_version)

    @_builtins.property
    @pulumi.getter(name="artifactContentType")
    def artifact_content_type(self) -> _builtins.str:
        """
        Artifact content type for the Java version.
        """
        return pulumi.get(self, "artifact_content_type")

    @_builtins.property
    @pulumi.getter(name="forceInstall")
    def force_install(self) -> _builtins.bool:
        """
        Forces the installation request even if a more recent release is already present in the host.
        """
        return pulumi.get(self, "force_install")

    @_builtins.property
    @pulumi.getter(name="headlessMode")
    def headless_mode(self) -> _builtins.bool:
        """
        Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
        """
        return pulumi.get(self, "headless_mode")

    @_builtins.property
    @pulumi.getter(name="installationPath")
    def installation_path(self) -> _builtins.str:
        """
        Custom path to install new Java installation site.
        """
        return pulumi.get(self, "installation_path")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="releaseVersion")
    def release_version(self) -> _builtins.str:
        """
        The release version of the Java Runtime.
        """
        return pulumi.get(self, "release_version")


@pulumi.output_type
class GetTaskScheduleTaskDetailCryptoTaskRequestResult(dict):
    def __init__(__self__, *,
                 recording_duration_in_minutes: _builtins.int,
                 targets: Sequence['outputs.GetTaskScheduleTaskDetailCryptoTaskRequestTargetResult'],
                 waiting_period_in_minutes: _builtins.int):
        """
        :param _builtins.int recording_duration_in_minutes: Duration of the JFR recording in minutes.
        :param Sequence['GetTaskScheduleTaskDetailCryptoTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        :param _builtins.int waiting_period_in_minutes: Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        pulumi.set(__self__, "recording_duration_in_minutes", recording_duration_in_minutes)
        pulumi.set(__self__, "targets", targets)
        pulumi.set(__self__, "waiting_period_in_minutes", waiting_period_in_minutes)

    @_builtins.property
    @pulumi.getter(name="recordingDurationInMinutes")
    def recording_duration_in_minutes(self) -> _builtins.int:
        """
        Duration of the JFR recording in minutes.
        """
        return pulumi.get(self, "recording_duration_in_minutes")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskScheduleTaskDetailCryptoTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter(name="waitingPeriodInMinutes")
    def waiting_period_in_minutes(self) -> _builtins.int:
        """
        Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        return pulumi.get(self, "waiting_period_in_minutes")


@pulumi.output_type
class GetTaskScheduleTaskDetailCryptoTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 application_installation_key: _builtins.str,
                 application_key: _builtins.str,
                 container_key: _builtins.str,
                 jre_key: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.str application_installation_key: Unique key that identifies the application installation for JFR data collection.
        :param _builtins.str application_key: Unique key that identifies the application for JFR data collection.
        :param _builtins.str container_key: Unique key that identifies the container for JFR data collection.
        :param _builtins.str jre_key: Unique key that identify the JVM for JFR data collection.
        :param _builtins.str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        pulumi.set(__self__, "application_installation_key", application_installation_key)
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "container_key", container_key)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> _builtins.str:
        """
        Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        Unique key that identifies the application for JFR data collection.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> _builtins.str:
        """
        Unique key that identifies the container for JFR data collection.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> _builtins.str:
        """
        Unique key that identify the JVM for JFR data collection.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestResult(dict):
    def __init__(__self__, *,
                 targets: Sequence['outputs.GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestTargetResult']):
        """
        :param Sequence['GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        """
        pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")


@pulumi.output_type
class GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 deployed_application_installation_key: _builtins.str,
                 exclude_package_prefixes: Sequence[_builtins.str],
                 include_package_prefixes: Sequence[_builtins.str],
                 managed_instance_id: _builtins.str,
                 source_jdk_version: _builtins.str,
                 target_jdk_version: _builtins.str):
        """
        :param _builtins.str deployed_application_installation_key: The unique key that identifies the deployed application's installation path that is to be used for the Java migration analyses.
        :param Sequence[_builtins.str] exclude_package_prefixes: Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        :param Sequence[_builtins.str] include_package_prefixes: includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        :param _builtins.str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        :param _builtins.str source_jdk_version: The JDK version the application is currently running on.
        :param _builtins.str target_jdk_version: The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        pulumi.set(__self__, "deployed_application_installation_key", deployed_application_installation_key)
        pulumi.set(__self__, "exclude_package_prefixes", exclude_package_prefixes)
        pulumi.set(__self__, "include_package_prefixes", include_package_prefixes)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "source_jdk_version", source_jdk_version)
        pulumi.set(__self__, "target_jdk_version", target_jdk_version)

    @_builtins.property
    @pulumi.getter(name="deployedApplicationInstallationKey")
    def deployed_application_installation_key(self) -> _builtins.str:
        """
        The unique key that identifies the deployed application's installation path that is to be used for the Java migration analyses.
        """
        return pulumi.get(self, "deployed_application_installation_key")

    @_builtins.property
    @pulumi.getter(name="excludePackagePrefixes")
    def exclude_package_prefixes(self) -> Sequence[_builtins.str]:
        """
        Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        """
        return pulumi.get(self, "exclude_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="includePackagePrefixes")
    def include_package_prefixes(self) -> Sequence[_builtins.str]:
        """
        includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        """
        return pulumi.get(self, "include_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="sourceJdkVersion")
    def source_jdk_version(self) -> _builtins.str:
        """
        The JDK version the application is currently running on.
        """
        return pulumi.get(self, "source_jdk_version")

    @_builtins.property
    @pulumi.getter(name="targetJdkVersion")
    def target_jdk_version(self) -> _builtins.str:
        """
        The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        return pulumi.get(self, "target_jdk_version")


@pulumi.output_type
class GetTaskScheduleTaskDetailJavaMigrationTaskRequestResult(dict):
    def __init__(__self__, *,
                 targets: Sequence['outputs.GetTaskScheduleTaskDetailJavaMigrationTaskRequestTargetResult']):
        """
        :param Sequence['GetTaskScheduleTaskDetailJavaMigrationTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        """
        pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskScheduleTaskDetailJavaMigrationTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")


@pulumi.output_type
class GetTaskScheduleTaskDetailJavaMigrationTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 application_installation_key: _builtins.str,
                 exclude_package_prefixes: Sequence[_builtins.str],
                 include_package_prefixes: Sequence[_builtins.str],
                 managed_instance_id: _builtins.str,
                 source_jdk_version: _builtins.str,
                 target_jdk_version: _builtins.str):
        """
        :param _builtins.str application_installation_key: Unique key that identifies the application installation for JFR data collection.
        :param Sequence[_builtins.str] exclude_package_prefixes: Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        :param Sequence[_builtins.str] include_package_prefixes: includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        :param _builtins.str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        :param _builtins.str source_jdk_version: The JDK version the application is currently running on.
        :param _builtins.str target_jdk_version: The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        pulumi.set(__self__, "application_installation_key", application_installation_key)
        pulumi.set(__self__, "exclude_package_prefixes", exclude_package_prefixes)
        pulumi.set(__self__, "include_package_prefixes", include_package_prefixes)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "source_jdk_version", source_jdk_version)
        pulumi.set(__self__, "target_jdk_version", target_jdk_version)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> _builtins.str:
        """
        Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="excludePackagePrefixes")
    def exclude_package_prefixes(self) -> Sequence[_builtins.str]:
        """
        Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        """
        return pulumi.get(self, "exclude_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="includePackagePrefixes")
    def include_package_prefixes(self) -> Sequence[_builtins.str]:
        """
        includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        """
        return pulumi.get(self, "include_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="sourceJdkVersion")
    def source_jdk_version(self) -> _builtins.str:
        """
        The JDK version the application is currently running on.
        """
        return pulumi.get(self, "source_jdk_version")

    @_builtins.property
    @pulumi.getter(name="targetJdkVersion")
    def target_jdk_version(self) -> _builtins.str:
        """
        The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        return pulumi.get(self, "target_jdk_version")


@pulumi.output_type
class GetTaskScheduleTaskDetailJfrTaskRequestResult(dict):
    def __init__(__self__, *,
                 jfc_profile_name: _builtins.str,
                 jfc_v1: _builtins.str,
                 jfc_v2: _builtins.str,
                 recording_duration_in_minutes: _builtins.int,
                 recording_size_in_mb: _builtins.int,
                 targets: Sequence['outputs.GetTaskScheduleTaskDetailJfrTaskRequestTargetResult'],
                 waiting_period_in_minutes: _builtins.int):
        """
        :param _builtins.str jfc_profile_name: The profile used for JFR events selection. If the name isn't recognized, the settings from jfcV1 or jfcV2 will be used depending on the JVM version. Both jfcV2 and jfcV1 should be provided to ensure JFR collection on different JVM versions.
        :param _builtins.str jfc_v1: The BASE64 encoded string of JFR settings XML with schema used by JDK 8.
        :param _builtins.str jfc_v2: The BASE64 encoded string of JFR settings XML with [schema used by JDK 9 and after](https://raw.githubusercontent.com/openjdk/jdk/master/src/jdk.jfr/share/classes/jdk/jfr/internal/jfc/jfc.xsd).
        :param _builtins.int recording_duration_in_minutes: Duration of the JFR recording in minutes.
        :param _builtins.int recording_size_in_mb: The maximum size limit for the JFR file collected.
        :param Sequence['GetTaskScheduleTaskDetailJfrTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        :param _builtins.int waiting_period_in_minutes: Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        pulumi.set(__self__, "jfc_profile_name", jfc_profile_name)
        pulumi.set(__self__, "jfc_v1", jfc_v1)
        pulumi.set(__self__, "jfc_v2", jfc_v2)
        pulumi.set(__self__, "recording_duration_in_minutes", recording_duration_in_minutes)
        pulumi.set(__self__, "recording_size_in_mb", recording_size_in_mb)
        pulumi.set(__self__, "targets", targets)
        pulumi.set(__self__, "waiting_period_in_minutes", waiting_period_in_minutes)

    @_builtins.property
    @pulumi.getter(name="jfcProfileName")
    def jfc_profile_name(self) -> _builtins.str:
        """
        The profile used for JFR events selection. If the name isn't recognized, the settings from jfcV1 or jfcV2 will be used depending on the JVM version. Both jfcV2 and jfcV1 should be provided to ensure JFR collection on different JVM versions.
        """
        return pulumi.get(self, "jfc_profile_name")

    @_builtins.property
    @pulumi.getter(name="jfcV1")
    def jfc_v1(self) -> _builtins.str:
        """
        The BASE64 encoded string of JFR settings XML with schema used by JDK 8.
        """
        return pulumi.get(self, "jfc_v1")

    @_builtins.property
    @pulumi.getter(name="jfcV2")
    def jfc_v2(self) -> _builtins.str:
        """
        The BASE64 encoded string of JFR settings XML with [schema used by JDK 9 and after](https://raw.githubusercontent.com/openjdk/jdk/master/src/jdk.jfr/share/classes/jdk/jfr/internal/jfc/jfc.xsd).
        """
        return pulumi.get(self, "jfc_v2")

    @_builtins.property
    @pulumi.getter(name="recordingDurationInMinutes")
    def recording_duration_in_minutes(self) -> _builtins.int:
        """
        Duration of the JFR recording in minutes.
        """
        return pulumi.get(self, "recording_duration_in_minutes")

    @_builtins.property
    @pulumi.getter(name="recordingSizeInMb")
    def recording_size_in_mb(self) -> _builtins.int:
        """
        The maximum size limit for the JFR file collected.
        """
        return pulumi.get(self, "recording_size_in_mb")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskScheduleTaskDetailJfrTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter(name="waitingPeriodInMinutes")
    def waiting_period_in_minutes(self) -> _builtins.int:
        """
        Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        return pulumi.get(self, "waiting_period_in_minutes")


@pulumi.output_type
class GetTaskScheduleTaskDetailJfrTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 application_installation_key: _builtins.str,
                 application_key: _builtins.str,
                 container_key: _builtins.str,
                 jre_key: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.str application_installation_key: Unique key that identifies the application installation for JFR data collection.
        :param _builtins.str application_key: Unique key that identifies the application for JFR data collection.
        :param _builtins.str container_key: Unique key that identifies the container for JFR data collection.
        :param _builtins.str jre_key: Unique key that identify the JVM for JFR data collection.
        :param _builtins.str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        pulumi.set(__self__, "application_installation_key", application_installation_key)
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "container_key", container_key)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> _builtins.str:
        """
        Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        Unique key that identifies the application for JFR data collection.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> _builtins.str:
        """
        Unique key that identifies the container for JFR data collection.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> _builtins.str:
        """
        Unique key that identify the JVM for JFR data collection.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetTaskScheduleTaskDetailPerformanceTuningTaskRequestResult(dict):
    def __init__(__self__, *,
                 recording_duration_in_minutes: _builtins.int,
                 targets: Sequence['outputs.GetTaskScheduleTaskDetailPerformanceTuningTaskRequestTargetResult'],
                 waiting_period_in_minutes: _builtins.int):
        """
        :param _builtins.int recording_duration_in_minutes: Duration of the JFR recording in minutes.
        :param Sequence['GetTaskScheduleTaskDetailPerformanceTuningTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        :param _builtins.int waiting_period_in_minutes: Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        pulumi.set(__self__, "recording_duration_in_minutes", recording_duration_in_minutes)
        pulumi.set(__self__, "targets", targets)
        pulumi.set(__self__, "waiting_period_in_minutes", waiting_period_in_minutes)

    @_builtins.property
    @pulumi.getter(name="recordingDurationInMinutes")
    def recording_duration_in_minutes(self) -> _builtins.int:
        """
        Duration of the JFR recording in minutes.
        """
        return pulumi.get(self, "recording_duration_in_minutes")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskScheduleTaskDetailPerformanceTuningTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter(name="waitingPeriodInMinutes")
    def waiting_period_in_minutes(self) -> _builtins.int:
        """
        Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        return pulumi.get(self, "waiting_period_in_minutes")


@pulumi.output_type
class GetTaskScheduleTaskDetailPerformanceTuningTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 application_installation_key: _builtins.str,
                 application_key: _builtins.str,
                 container_key: _builtins.str,
                 jre_key: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.str application_installation_key: Unique key that identifies the application installation for JFR data collection.
        :param _builtins.str application_key: Unique key that identifies the application for JFR data collection.
        :param _builtins.str container_key: Unique key that identifies the container for JFR data collection.
        :param _builtins.str jre_key: Unique key that identify the JVM for JFR data collection.
        :param _builtins.str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        pulumi.set(__self__, "application_installation_key", application_installation_key)
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "container_key", container_key)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> _builtins.str:
        """
        Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        Unique key that identifies the application for JFR data collection.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> _builtins.str:
        """
        Unique key that identifies the container for JFR data collection.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> _builtins.str:
        """
        Unique key that identify the JVM for JFR data collection.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestResult(dict):
    def __init__(__self__, *,
                 installation_sites: Sequence['outputs.GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteResult']):
        """
        :param Sequence['GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteArgs'] installation_sites: The list of installation sites to remove.
        """
        pulumi.set(__self__, "installation_sites", installation_sites)

    @_builtins.property
    @pulumi.getter(name="installationSites")
    def installation_sites(self) -> Sequence['outputs.GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteResult']:
        """
        The list of installation sites to remove.
        """
        return pulumi.get(self, "installation_sites")


@pulumi.output_type
class GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteResult(dict):
    def __init__(__self__, *,
                 installation_key: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.str installation_key: The unique identifier for the installation of a Java Runtime at a specific path on a specific operating system.
        :param _builtins.str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        pulumi.set(__self__, "installation_key", installation_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="installationKey")
    def installation_key(self) -> _builtins.str:
        """
        The unique identifier for the installation of a Java Runtime at a specific path on a specific operating system.
        """
        return pulumi.get(self, "installation_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetTaskScheduleTaskDetailScanJavaServerTaskRequestResult(dict):
    def __init__(__self__, *,
                 managed_instance_ids: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] managed_instance_ids: The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        pulumi.set(__self__, "managed_instance_ids", managed_instance_ids)

    @_builtins.property
    @pulumi.getter(name="managedInstanceIds")
    def managed_instance_ids(self) -> Sequence[_builtins.str]:
        """
        The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        return pulumi.get(self, "managed_instance_ids")


@pulumi.output_type
class GetTaskScheduleTaskDetailScanLibraryTaskRequestResult(dict):
    def __init__(__self__, *,
                 dynamic_scan_duration_in_minutes: _builtins.int,
                 is_dynamic_scan: _builtins.bool,
                 managed_instance_ids: Sequence[_builtins.str]):
        """
        :param _builtins.int dynamic_scan_duration_in_minutes: The duration of the dynamic scan in minutes.
        :param _builtins.bool is_dynamic_scan: Indicates whether the scan is dynamic or static.
        :param Sequence[_builtins.str] managed_instance_ids: The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        pulumi.set(__self__, "dynamic_scan_duration_in_minutes", dynamic_scan_duration_in_minutes)
        pulumi.set(__self__, "is_dynamic_scan", is_dynamic_scan)
        pulumi.set(__self__, "managed_instance_ids", managed_instance_ids)

    @_builtins.property
    @pulumi.getter(name="dynamicScanDurationInMinutes")
    def dynamic_scan_duration_in_minutes(self) -> _builtins.int:
        """
        The duration of the dynamic scan in minutes.
        """
        return pulumi.get(self, "dynamic_scan_duration_in_minutes")

    @_builtins.property
    @pulumi.getter(name="isDynamicScan")
    def is_dynamic_scan(self) -> _builtins.bool:
        """
        Indicates whether the scan is dynamic or static.
        """
        return pulumi.get(self, "is_dynamic_scan")

    @_builtins.property
    @pulumi.getter(name="managedInstanceIds")
    def managed_instance_ids(self) -> Sequence[_builtins.str]:
        """
        The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        return pulumi.get(self, "managed_instance_ids")


@pulumi.output_type
class GetTaskSchedulesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        """
        :param _builtins.str name: The task name.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The task name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemResult(dict):
    def __init__(__self__, *,
                 created_by: _builtins.str,
                 execution_recurrences: _builtins.str,
                 fleet_id: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 state: _builtins.str,
                 task_details: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailResult'],
                 time_created: _builtins.str,
                 time_last_run: _builtins.str,
                 time_last_updated: _builtins.str,
                 time_next_run: _builtins.str):
        """
        :param _builtins.str created_by: Name of the task creator.
        :param _builtins.str execution_recurrences: Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
        :param _builtins.str fleet_id: The ID of the Fleet.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
        :param _builtins.str name: The task name.
        :param _builtins.str state: All possible status of task schedule.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailArgs'] task_details: The minimum details of a task.
        :param _builtins.str time_created: The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str time_last_run: The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str time_last_updated: The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param _builtins.str time_next_run: The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        pulumi.set(__self__, "created_by", created_by)
        pulumi.set(__self__, "execution_recurrences", execution_recurrences)
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "task_details", task_details)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_last_run", time_last_run)
        pulumi.set(__self__, "time_last_updated", time_last_updated)
        pulumi.set(__self__, "time_next_run", time_next_run)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> _builtins.str:
        """
        Name of the task creator.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter(name="executionRecurrences")
    def execution_recurrences(self) -> _builtins.str:
        """
        Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
        """
        return pulumi.get(self, "execution_recurrences")

    @_builtins.property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> _builtins.str:
        """
        The ID of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The task name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        All possible status of task schedule.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="taskDetails")
    def task_details(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailResult']:
        """
        The minimum details of a task.
        """
        return pulumi.get(self, "task_details")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeLastRun")
    def time_last_run(self) -> _builtins.str:
        """
        The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_last_run")

    @_builtins.property
    @pulumi.getter(name="timeLastUpdated")
    def time_last_updated(self) -> _builtins.str:
        """
        The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_last_updated")

    @_builtins.property
    @pulumi.getter(name="timeNextRun")
    def time_next_run(self) -> _builtins.str:
        """
        The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_next_run")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailResult(dict):
    def __init__(__self__, *,
                 add_installation_site_task_requests: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestResult'],
                 crypto_task_requests: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestResult'],
                 deployed_application_migration_task_requests: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestResult'],
                 java_migration_task_requests: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestResult'],
                 jfr_task_requests: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestResult'],
                 performance_tuning_task_requests: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestResult'],
                 remove_installation_site_task_requests: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestResult'],
                 scan_java_server_task_requests: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanJavaServerTaskRequestResult'],
                 scan_library_task_requests: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanLibraryTaskRequestResult'],
                 task_type: _builtins.str):
        """
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestArgs'] add_installation_site_task_requests: The list of Java installation sites to add.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestArgs'] crypto_task_requests: Details of the request to start a JFR crypto event analysis. When the targets aren't specified, then all managed instances currently in the fleet are selected.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestArgs'] deployed_application_migration_task_requests: Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestArgs'] java_migration_task_requests: Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestArgs'] jfr_task_requests: Details of the request to start JFR recordings. When the targets aren't specified, then all managed instances currently in the Fleet are selected.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestArgs'] performance_tuning_task_requests: Details of the request to start a JFR performance tuning analysis.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestArgs'] remove_installation_site_task_requests: The list of Java installation sites to remove.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanJavaServerTaskRequestArgs'] scan_java_server_task_requests: The list of managed instances to scan.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanLibraryTaskRequestArgs'] scan_library_task_requests: The list of managed instances to scan.
        :param _builtins.str task_type: Type of task.
        """
        pulumi.set(__self__, "add_installation_site_task_requests", add_installation_site_task_requests)
        pulumi.set(__self__, "crypto_task_requests", crypto_task_requests)
        pulumi.set(__self__, "deployed_application_migration_task_requests", deployed_application_migration_task_requests)
        pulumi.set(__self__, "java_migration_task_requests", java_migration_task_requests)
        pulumi.set(__self__, "jfr_task_requests", jfr_task_requests)
        pulumi.set(__self__, "performance_tuning_task_requests", performance_tuning_task_requests)
        pulumi.set(__self__, "remove_installation_site_task_requests", remove_installation_site_task_requests)
        pulumi.set(__self__, "scan_java_server_task_requests", scan_java_server_task_requests)
        pulumi.set(__self__, "scan_library_task_requests", scan_library_task_requests)
        pulumi.set(__self__, "task_type", task_type)

    @_builtins.property
    @pulumi.getter(name="addInstallationSiteTaskRequests")
    def add_installation_site_task_requests(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestResult']:
        """
        The list of Java installation sites to add.
        """
        return pulumi.get(self, "add_installation_site_task_requests")

    @_builtins.property
    @pulumi.getter(name="cryptoTaskRequests")
    def crypto_task_requests(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestResult']:
        """
        Details of the request to start a JFR crypto event analysis. When the targets aren't specified, then all managed instances currently in the fleet are selected.
        """
        return pulumi.get(self, "crypto_task_requests")

    @_builtins.property
    @pulumi.getter(name="deployedApplicationMigrationTaskRequests")
    def deployed_application_migration_task_requests(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestResult']:
        """
        Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
        """
        return pulumi.get(self, "deployed_application_migration_task_requests")

    @_builtins.property
    @pulumi.getter(name="javaMigrationTaskRequests")
    def java_migration_task_requests(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestResult']:
        """
        Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
        """
        return pulumi.get(self, "java_migration_task_requests")

    @_builtins.property
    @pulumi.getter(name="jfrTaskRequests")
    def jfr_task_requests(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestResult']:
        """
        Details of the request to start JFR recordings. When the targets aren't specified, then all managed instances currently in the Fleet are selected.
        """
        return pulumi.get(self, "jfr_task_requests")

    @_builtins.property
    @pulumi.getter(name="performanceTuningTaskRequests")
    def performance_tuning_task_requests(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestResult']:
        """
        Details of the request to start a JFR performance tuning analysis.
        """
        return pulumi.get(self, "performance_tuning_task_requests")

    @_builtins.property
    @pulumi.getter(name="removeInstallationSiteTaskRequests")
    def remove_installation_site_task_requests(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestResult']:
        """
        The list of Java installation sites to remove.
        """
        return pulumi.get(self, "remove_installation_site_task_requests")

    @_builtins.property
    @pulumi.getter(name="scanJavaServerTaskRequests")
    def scan_java_server_task_requests(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanJavaServerTaskRequestResult']:
        """
        The list of managed instances to scan.
        """
        return pulumi.get(self, "scan_java_server_task_requests")

    @_builtins.property
    @pulumi.getter(name="scanLibraryTaskRequests")
    def scan_library_task_requests(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanLibraryTaskRequestResult']:
        """
        The list of managed instances to scan.
        """
        return pulumi.get(self, "scan_library_task_requests")

    @_builtins.property
    @pulumi.getter(name="taskType")
    def task_type(self) -> _builtins.str:
        """
        Type of task.
        """
        return pulumi.get(self, "task_type")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestResult(dict):
    def __init__(__self__, *,
                 installation_sites: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestInstallationSiteResult'],
                 post_installation_actions: Sequence[_builtins.str]):
        """
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestInstallationSiteArgs'] installation_sites: The list of installation sites to remove.
        :param Sequence[_builtins.str] post_installation_actions: Optional list of post java installation actions
        """
        pulumi.set(__self__, "installation_sites", installation_sites)
        pulumi.set(__self__, "post_installation_actions", post_installation_actions)

    @_builtins.property
    @pulumi.getter(name="installationSites")
    def installation_sites(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestInstallationSiteResult']:
        """
        The list of installation sites to remove.
        """
        return pulumi.get(self, "installation_sites")

    @_builtins.property
    @pulumi.getter(name="postInstallationActions")
    def post_installation_actions(self) -> Sequence[_builtins.str]:
        """
        Optional list of post java installation actions
        """
        return pulumi.get(self, "post_installation_actions")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailAddInstallationSiteTaskRequestInstallationSiteResult(dict):
    def __init__(__self__, *,
                 artifact_content_type: _builtins.str,
                 force_install: _builtins.bool,
                 headless_mode: _builtins.bool,
                 installation_path: _builtins.str,
                 managed_instance_id: _builtins.str,
                 release_version: _builtins.str):
        """
        :param _builtins.str artifact_content_type: Artifact content type for the Java version.
        :param _builtins.bool force_install: Forces the installation request even if a more recent release is already present in the host.
        :param _builtins.bool headless_mode: Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
        :param _builtins.str installation_path: Custom path to install new Java installation site.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param _builtins.str release_version: The release version of the Java Runtime.
        """
        pulumi.set(__self__, "artifact_content_type", artifact_content_type)
        pulumi.set(__self__, "force_install", force_install)
        pulumi.set(__self__, "headless_mode", headless_mode)
        pulumi.set(__self__, "installation_path", installation_path)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "release_version", release_version)

    @_builtins.property
    @pulumi.getter(name="artifactContentType")
    def artifact_content_type(self) -> _builtins.str:
        """
        Artifact content type for the Java version.
        """
        return pulumi.get(self, "artifact_content_type")

    @_builtins.property
    @pulumi.getter(name="forceInstall")
    def force_install(self) -> _builtins.bool:
        """
        Forces the installation request even if a more recent release is already present in the host.
        """
        return pulumi.get(self, "force_install")

    @_builtins.property
    @pulumi.getter(name="headlessMode")
    def headless_mode(self) -> _builtins.bool:
        """
        Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
        """
        return pulumi.get(self, "headless_mode")

    @_builtins.property
    @pulumi.getter(name="installationPath")
    def installation_path(self) -> _builtins.str:
        """
        Custom path to install new Java installation site.
        """
        return pulumi.get(self, "installation_path")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="releaseVersion")
    def release_version(self) -> _builtins.str:
        """
        The release version of the Java Runtime.
        """
        return pulumi.get(self, "release_version")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestResult(dict):
    def __init__(__self__, *,
                 recording_duration_in_minutes: _builtins.int,
                 targets: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestTargetResult'],
                 waiting_period_in_minutes: _builtins.int):
        """
        :param _builtins.int recording_duration_in_minutes: Duration of the JFR recording in minutes.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        :param _builtins.int waiting_period_in_minutes: Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        pulumi.set(__self__, "recording_duration_in_minutes", recording_duration_in_minutes)
        pulumi.set(__self__, "targets", targets)
        pulumi.set(__self__, "waiting_period_in_minutes", waiting_period_in_minutes)

    @_builtins.property
    @pulumi.getter(name="recordingDurationInMinutes")
    def recording_duration_in_minutes(self) -> _builtins.int:
        """
        Duration of the JFR recording in minutes.
        """
        return pulumi.get(self, "recording_duration_in_minutes")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter(name="waitingPeriodInMinutes")
    def waiting_period_in_minutes(self) -> _builtins.int:
        """
        Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        return pulumi.get(self, "waiting_period_in_minutes")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailCryptoTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 application_installation_key: _builtins.str,
                 application_key: _builtins.str,
                 container_key: _builtins.str,
                 jre_key: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.str application_installation_key: Unique key that identifies the application installation for JFR data collection.
        :param _builtins.str application_key: Unique key that identifies the application for JFR data collection.
        :param _builtins.str container_key: Unique key that identifies the container for JFR data collection.
        :param _builtins.str jre_key: Unique key that identify the JVM for JFR data collection.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        """
        pulumi.set(__self__, "application_installation_key", application_installation_key)
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "container_key", container_key)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> _builtins.str:
        """
        Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        Unique key that identifies the application for JFR data collection.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> _builtins.str:
        """
        Unique key that identifies the container for JFR data collection.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> _builtins.str:
        """
        Unique key that identify the JVM for JFR data collection.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestResult(dict):
    def __init__(__self__, *,
                 targets: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestTargetResult']):
        """
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        """
        pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailDeployedApplicationMigrationTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 deployed_application_installation_key: _builtins.str,
                 exclude_package_prefixes: Sequence[_builtins.str],
                 include_package_prefixes: Sequence[_builtins.str],
                 managed_instance_id: _builtins.str,
                 source_jdk_version: _builtins.str,
                 target_jdk_version: _builtins.str):
        """
        :param _builtins.str deployed_application_installation_key: The unique key that identifies the deployed application's installation path that is to be used for the Java migration analyses.
        :param Sequence[_builtins.str] exclude_package_prefixes: Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        :param Sequence[_builtins.str] include_package_prefixes: includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param _builtins.str source_jdk_version: The JDK version the application is currently running on.
        :param _builtins.str target_jdk_version: The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        pulumi.set(__self__, "deployed_application_installation_key", deployed_application_installation_key)
        pulumi.set(__self__, "exclude_package_prefixes", exclude_package_prefixes)
        pulumi.set(__self__, "include_package_prefixes", include_package_prefixes)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "source_jdk_version", source_jdk_version)
        pulumi.set(__self__, "target_jdk_version", target_jdk_version)

    @_builtins.property
    @pulumi.getter(name="deployedApplicationInstallationKey")
    def deployed_application_installation_key(self) -> _builtins.str:
        """
        The unique key that identifies the deployed application's installation path that is to be used for the Java migration analyses.
        """
        return pulumi.get(self, "deployed_application_installation_key")

    @_builtins.property
    @pulumi.getter(name="excludePackagePrefixes")
    def exclude_package_prefixes(self) -> Sequence[_builtins.str]:
        """
        Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        """
        return pulumi.get(self, "exclude_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="includePackagePrefixes")
    def include_package_prefixes(self) -> Sequence[_builtins.str]:
        """
        includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        """
        return pulumi.get(self, "include_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="sourceJdkVersion")
    def source_jdk_version(self) -> _builtins.str:
        """
        The JDK version the application is currently running on.
        """
        return pulumi.get(self, "source_jdk_version")

    @_builtins.property
    @pulumi.getter(name="targetJdkVersion")
    def target_jdk_version(self) -> _builtins.str:
        """
        The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        return pulumi.get(self, "target_jdk_version")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestResult(dict):
    def __init__(__self__, *,
                 targets: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTargetResult']):
        """
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        """
        pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 application_installation_key: _builtins.str,
                 exclude_package_prefixes: Sequence[_builtins.str],
                 include_package_prefixes: Sequence[_builtins.str],
                 managed_instance_id: _builtins.str,
                 source_jdk_version: _builtins.str,
                 target_jdk_version: _builtins.str):
        """
        :param _builtins.str application_installation_key: Unique key that identifies the application installation for JFR data collection.
        :param Sequence[_builtins.str] exclude_package_prefixes: Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        :param Sequence[_builtins.str] include_package_prefixes: includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param _builtins.str source_jdk_version: The JDK version the application is currently running on.
        :param _builtins.str target_jdk_version: The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        pulumi.set(__self__, "application_installation_key", application_installation_key)
        pulumi.set(__self__, "exclude_package_prefixes", exclude_package_prefixes)
        pulumi.set(__self__, "include_package_prefixes", include_package_prefixes)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "source_jdk_version", source_jdk_version)
        pulumi.set(__self__, "target_jdk_version", target_jdk_version)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> _builtins.str:
        """
        Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="excludePackagePrefixes")
    def exclude_package_prefixes(self) -> Sequence[_builtins.str]:
        """
        Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
        """
        return pulumi.get(self, "exclude_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="includePackagePrefixes")
    def include_package_prefixes(self) -> Sequence[_builtins.str]:
        """
        includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
        """
        return pulumi.get(self, "include_package_prefixes")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="sourceJdkVersion")
    def source_jdk_version(self) -> _builtins.str:
        """
        The JDK version the application is currently running on.
        """
        return pulumi.get(self, "source_jdk_version")

    @_builtins.property
    @pulumi.getter(name="targetJdkVersion")
    def target_jdk_version(self) -> _builtins.str:
        """
        The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
        """
        return pulumi.get(self, "target_jdk_version")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestResult(dict):
    def __init__(__self__, *,
                 jfc_profile_name: _builtins.str,
                 jfc_v1: _builtins.str,
                 jfc_v2: _builtins.str,
                 recording_duration_in_minutes: _builtins.int,
                 recording_size_in_mb: _builtins.int,
                 targets: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestTargetResult'],
                 waiting_period_in_minutes: _builtins.int):
        """
        :param _builtins.str jfc_profile_name: The profile used for JFR events selection. If the name isn't recognized, the settings from jfcV1 or jfcV2 will be used depending on the JVM version. Both jfcV2 and jfcV1 should be provided to ensure JFR collection on different JVM versions.
        :param _builtins.str jfc_v1: The BASE64 encoded string of JFR settings XML with schema used by JDK 8.
        :param _builtins.str jfc_v2: The BASE64 encoded string of JFR settings XML with [schema used by JDK 9 and after](https://raw.githubusercontent.com/openjdk/jdk/master/src/jdk.jfr/share/classes/jdk/jfr/internal/jfc/jfc.xsd).
        :param _builtins.int recording_duration_in_minutes: Duration of the JFR recording in minutes.
        :param _builtins.int recording_size_in_mb: The maximum size limit for the JFR file collected.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        :param _builtins.int waiting_period_in_minutes: Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        pulumi.set(__self__, "jfc_profile_name", jfc_profile_name)
        pulumi.set(__self__, "jfc_v1", jfc_v1)
        pulumi.set(__self__, "jfc_v2", jfc_v2)
        pulumi.set(__self__, "recording_duration_in_minutes", recording_duration_in_minutes)
        pulumi.set(__self__, "recording_size_in_mb", recording_size_in_mb)
        pulumi.set(__self__, "targets", targets)
        pulumi.set(__self__, "waiting_period_in_minutes", waiting_period_in_minutes)

    @_builtins.property
    @pulumi.getter(name="jfcProfileName")
    def jfc_profile_name(self) -> _builtins.str:
        """
        The profile used for JFR events selection. If the name isn't recognized, the settings from jfcV1 or jfcV2 will be used depending on the JVM version. Both jfcV2 and jfcV1 should be provided to ensure JFR collection on different JVM versions.
        """
        return pulumi.get(self, "jfc_profile_name")

    @_builtins.property
    @pulumi.getter(name="jfcV1")
    def jfc_v1(self) -> _builtins.str:
        """
        The BASE64 encoded string of JFR settings XML with schema used by JDK 8.
        """
        return pulumi.get(self, "jfc_v1")

    @_builtins.property
    @pulumi.getter(name="jfcV2")
    def jfc_v2(self) -> _builtins.str:
        """
        The BASE64 encoded string of JFR settings XML with [schema used by JDK 9 and after](https://raw.githubusercontent.com/openjdk/jdk/master/src/jdk.jfr/share/classes/jdk/jfr/internal/jfc/jfc.xsd).
        """
        return pulumi.get(self, "jfc_v2")

    @_builtins.property
    @pulumi.getter(name="recordingDurationInMinutes")
    def recording_duration_in_minutes(self) -> _builtins.int:
        """
        Duration of the JFR recording in minutes.
        """
        return pulumi.get(self, "recording_duration_in_minutes")

    @_builtins.property
    @pulumi.getter(name="recordingSizeInMb")
    def recording_size_in_mb(self) -> _builtins.int:
        """
        The maximum size limit for the JFR file collected.
        """
        return pulumi.get(self, "recording_size_in_mb")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter(name="waitingPeriodInMinutes")
    def waiting_period_in_minutes(self) -> _builtins.int:
        """
        Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        return pulumi.get(self, "waiting_period_in_minutes")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJfrTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 application_installation_key: _builtins.str,
                 application_key: _builtins.str,
                 container_key: _builtins.str,
                 jre_key: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.str application_installation_key: Unique key that identifies the application installation for JFR data collection.
        :param _builtins.str application_key: Unique key that identifies the application for JFR data collection.
        :param _builtins.str container_key: Unique key that identifies the container for JFR data collection.
        :param _builtins.str jre_key: Unique key that identify the JVM for JFR data collection.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        """
        pulumi.set(__self__, "application_installation_key", application_installation_key)
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "container_key", container_key)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> _builtins.str:
        """
        Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        Unique key that identifies the application for JFR data collection.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> _builtins.str:
        """
        Unique key that identifies the container for JFR data collection.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> _builtins.str:
        """
        Unique key that identify the JVM for JFR data collection.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestResult(dict):
    def __init__(__self__, *,
                 recording_duration_in_minutes: _builtins.int,
                 targets: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestTargetResult'],
                 waiting_period_in_minutes: _builtins.int):
        """
        :param _builtins.int recording_duration_in_minutes: Duration of the JFR recording in minutes.
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestTargetArgs'] targets: The attachment targets to start JFR.
        :param _builtins.int waiting_period_in_minutes: Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        pulumi.set(__self__, "recording_duration_in_minutes", recording_duration_in_minutes)
        pulumi.set(__self__, "targets", targets)
        pulumi.set(__self__, "waiting_period_in_minutes", waiting_period_in_minutes)

    @_builtins.property
    @pulumi.getter(name="recordingDurationInMinutes")
    def recording_duration_in_minutes(self) -> _builtins.int:
        """
        Duration of the JFR recording in minutes.
        """
        return pulumi.get(self, "recording_duration_in_minutes")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestTargetResult']:
        """
        The attachment targets to start JFR.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter(name="waitingPeriodInMinutes")
    def waiting_period_in_minutes(self) -> _builtins.int:
        """
        Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
        """
        return pulumi.get(self, "waiting_period_in_minutes")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailPerformanceTuningTaskRequestTargetResult(dict):
    def __init__(__self__, *,
                 application_installation_key: _builtins.str,
                 application_key: _builtins.str,
                 container_key: _builtins.str,
                 jre_key: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.str application_installation_key: Unique key that identifies the application installation for JFR data collection.
        :param _builtins.str application_key: Unique key that identifies the application for JFR data collection.
        :param _builtins.str container_key: Unique key that identifies the container for JFR data collection.
        :param _builtins.str jre_key: Unique key that identify the JVM for JFR data collection.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        """
        pulumi.set(__self__, "application_installation_key", application_installation_key)
        pulumi.set(__self__, "application_key", application_key)
        pulumi.set(__self__, "container_key", container_key)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="applicationInstallationKey")
    def application_installation_key(self) -> _builtins.str:
        """
        Unique key that identifies the application installation for JFR data collection.
        """
        return pulumi.get(self, "application_installation_key")

    @_builtins.property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> _builtins.str:
        """
        Unique key that identifies the application for JFR data collection.
        """
        return pulumi.get(self, "application_key")

    @_builtins.property
    @pulumi.getter(name="containerKey")
    def container_key(self) -> _builtins.str:
        """
        Unique key that identifies the container for JFR data collection.
        """
        return pulumi.get(self, "container_key")

    @_builtins.property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> _builtins.str:
        """
        Unique key that identify the JVM for JFR data collection.
        """
        return pulumi.get(self, "jre_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestResult(dict):
    def __init__(__self__, *,
                 installation_sites: Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteResult']):
        """
        :param Sequence['GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteArgs'] installation_sites: The list of installation sites to remove.
        """
        pulumi.set(__self__, "installation_sites", installation_sites)

    @_builtins.property
    @pulumi.getter(name="installationSites")
    def installation_sites(self) -> Sequence['outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteResult']:
        """
        The list of installation sites to remove.
        """
        return pulumi.get(self, "installation_sites")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSiteResult(dict):
    def __init__(__self__, *,
                 installation_key: _builtins.str,
                 managed_instance_id: _builtins.str):
        """
        :param _builtins.str installation_key: The unique identifier for the installation of a Java Runtime at a specific path on a specific operating system.
        :param _builtins.str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        """
        pulumi.set(__self__, "installation_key", installation_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @_builtins.property
    @pulumi.getter(name="installationKey")
    def installation_key(self) -> _builtins.str:
        """
        The unique identifier for the installation of a Java Runtime at a specific path on a specific operating system.
        """
        return pulumi.get(self, "installation_key")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanJavaServerTaskRequestResult(dict):
    def __init__(__self__, *,
                 managed_instance_ids: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] managed_instance_ids: The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        pulumi.set(__self__, "managed_instance_ids", managed_instance_ids)

    @_builtins.property
    @pulumi.getter(name="managedInstanceIds")
    def managed_instance_ids(self) -> Sequence[_builtins.str]:
        """
        The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        return pulumi.get(self, "managed_instance_ids")


@pulumi.output_type
class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailScanLibraryTaskRequestResult(dict):
    def __init__(__self__, *,
                 dynamic_scan_duration_in_minutes: _builtins.int,
                 is_dynamic_scan: _builtins.bool,
                 managed_instance_ids: Sequence[_builtins.str]):
        """
        :param _builtins.int dynamic_scan_duration_in_minutes: The duration of the dynamic scan in minutes.
        :param _builtins.bool is_dynamic_scan: Indicates whether the scan is dynamic or static.
        :param Sequence[_builtins.str] managed_instance_ids: The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        pulumi.set(__self__, "dynamic_scan_duration_in_minutes", dynamic_scan_duration_in_minutes)
        pulumi.set(__self__, "is_dynamic_scan", is_dynamic_scan)
        pulumi.set(__self__, "managed_instance_ids", managed_instance_ids)

    @_builtins.property
    @pulumi.getter(name="dynamicScanDurationInMinutes")
    def dynamic_scan_duration_in_minutes(self) -> _builtins.int:
        """
        The duration of the dynamic scan in minutes.
        """
        return pulumi.get(self, "dynamic_scan_duration_in_minutes")

    @_builtins.property
    @pulumi.getter(name="isDynamicScan")
    def is_dynamic_scan(self) -> _builtins.bool:
        """
        Indicates whether the scan is dynamic or static.
        """
        return pulumi.get(self, "is_dynamic_scan")

    @_builtins.property
    @pulumi.getter(name="managedInstanceIds")
    def managed_instance_ids(self) -> Sequence[_builtins.str]:
        """
        The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of managed instances to scan.
        """
        return pulumi.get(self, "managed_instance_ids")


@pulumi.output_type
class GetUtilsJavaMigrationAnalysiCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java Migration Analysis.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java Migration Analysis.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetUtilsJavaMigrationAnalysisFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionItemResult(dict):
    def __init__(__self__, *,
                 analysis_project_name: _builtins.str,
                 analysis_result_files: Sequence[_builtins.str],
                 analysis_result_object_storage_path: _builtins.str,
                 bucket: _builtins.str,
                 compartment_id: _builtins.str,
                 created_bies: Sequence['outputs.GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionItemCreatedByResult'],
                 id: _builtins.str,
                 input_applications_object_storage_paths: Sequence[_builtins.str],
                 metadata: _builtins.str,
                 namespace: _builtins.str,
                 target_jdk_version: _builtins.str,
                 time_created: _builtins.str,
                 time_finished: _builtins.str,
                 time_started: _builtins.str,
                 work_request_id: _builtins.str):
        """
        :param _builtins.str analysis_project_name: The project name of the Performance Tuning Analysis to query for.
        :param Sequence[_builtins.str] analysis_result_files: The analysis application file names result in the Object Storage.
        :param _builtins.str analysis_result_object_storage_path: Path to the Object Storage analysis application result.
        :param _builtins.str bucket: Object storage bucket name.
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        :param Sequence['GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionItemCreatedByArgs'] created_bies: An authorized principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java Migration Analysis.
        :param Sequence[_builtins.str] input_applications_object_storage_paths: Object storage paths to the input files applications to be analysed.
        :param _builtins.str metadata: Additional info reserved for future use.
        :param _builtins.str namespace: Object storage namespace.
        :param _builtins.str target_jdk_version: Jdk Version of the Java Migration Analysis target.
        :param _builtins.str time_created: The date and time the Java Migration Analysis was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_finished: The date and time the Java Migration Analysis was finished, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_started: The date and time the Java Migration Analysis was started, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str work_request_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Work Request.
        """
        pulumi.set(__self__, "analysis_project_name", analysis_project_name)
        pulumi.set(__self__, "analysis_result_files", analysis_result_files)
        pulumi.set(__self__, "analysis_result_object_storage_path", analysis_result_object_storage_path)
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "created_bies", created_bies)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "input_applications_object_storage_paths", input_applications_object_storage_paths)
        pulumi.set(__self__, "metadata", metadata)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "target_jdk_version", target_jdk_version)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_finished", time_finished)
        pulumi.set(__self__, "time_started", time_started)
        pulumi.set(__self__, "work_request_id", work_request_id)

    @_builtins.property
    @pulumi.getter(name="analysisProjectName")
    def analysis_project_name(self) -> _builtins.str:
        """
        The project name of the Performance Tuning Analysis to query for.
        """
        return pulumi.get(self, "analysis_project_name")

    @_builtins.property
    @pulumi.getter(name="analysisResultFiles")
    def analysis_result_files(self) -> Sequence[_builtins.str]:
        """
        The analysis application file names result in the Object Storage.
        """
        return pulumi.get(self, "analysis_result_files")

    @_builtins.property
    @pulumi.getter(name="analysisResultObjectStoragePath")
    def analysis_result_object_storage_path(self) -> _builtins.str:
        """
        Path to the Object Storage analysis application result.
        """
        return pulumi.get(self, "analysis_result_object_storage_path")

    @_builtins.property
    @pulumi.getter
    def bucket(self) -> _builtins.str:
        """
        Object storage bucket name.
        """
        return pulumi.get(self, "bucket")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="createdBies")
    def created_bies(self) -> Sequence['outputs.GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionItemCreatedByResult']:
        """
        An authorized principal.
        """
        return pulumi.get(self, "created_bies")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java Migration Analysis.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="inputApplicationsObjectStoragePaths")
    def input_applications_object_storage_paths(self) -> Sequence[_builtins.str]:
        """
        Object storage paths to the input files applications to be analysed.
        """
        return pulumi.get(self, "input_applications_object_storage_paths")

    @_builtins.property
    @pulumi.getter
    def metadata(self) -> _builtins.str:
        """
        Additional info reserved for future use.
        """
        return pulumi.get(self, "metadata")

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> _builtins.str:
        """
        Object storage namespace.
        """
        return pulumi.get(self, "namespace")

    @_builtins.property
    @pulumi.getter(name="targetJdkVersion")
    def target_jdk_version(self) -> _builtins.str:
        """
        Jdk Version of the Java Migration Analysis target.
        """
        return pulumi.get(self, "target_jdk_version")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the Java Migration Analysis was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeFinished")
    def time_finished(self) -> _builtins.str:
        """
        The date and time the Java Migration Analysis was finished, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_finished")

    @_builtins.property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> _builtins.str:
        """
        The date and time the Java Migration Analysis was started, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_started")

    @_builtins.property
    @pulumi.getter(name="workRequestId")
    def work_request_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Work Request.
        """
        return pulumi.get(self, "work_request_id")


@pulumi.output_type
class GetUtilsJavaMigrationAnalysisJavaMigrationAnalysisCollectionItemCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java Migration Analysis.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Java Migration Analysis.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetUtilsPerformanceTuningAnalysiCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Performance Tuning Analysis.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Performance Tuning Analysis.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetUtilsPerformanceTuningAnalysisFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionItemResult(dict):
    def __init__(__self__, *,
                 analysis_project_name: _builtins.str,
                 artifact_object_storage_path: _builtins.str,
                 compartment_id: _builtins.str,
                 created_bies: Sequence['outputs.GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionItemCreatedByResult'],
                 id: _builtins.str,
                 result: _builtins.str,
                 result_object_storage_path: _builtins.str,
                 time_created: _builtins.str,
                 time_finished: _builtins.str,
                 time_started: _builtins.str,
                 warning_count: _builtins.int,
                 work_request_id: _builtins.str):
        """
        :param _builtins.str analysis_project_name: The project name of the Performance Tuning Analysis to query for.
        :param _builtins.str artifact_object_storage_path: Object storage path to the artifact.
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        :param Sequence['GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionItemCreatedByArgs'] created_bies: An authorized principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Performance Tuning Analysis.
        :param _builtins.str result: Possible Performance Tuning Result statuses.
        :param _builtins.str result_object_storage_path: Object storage path to the analysis.
        :param _builtins.str time_created: The date and time the Performance Tuning Analysis was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_finished: The date and time the Performance Tuning Analysis was finished, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_started: The date and time the Performance Tuning Analysis was started, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.int warning_count: Number of warnings in the Performance Tuning Analysis.
        :param _builtins.str work_request_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Work Request.
        """
        pulumi.set(__self__, "analysis_project_name", analysis_project_name)
        pulumi.set(__self__, "artifact_object_storage_path", artifact_object_storage_path)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "created_bies", created_bies)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "result", result)
        pulumi.set(__self__, "result_object_storage_path", result_object_storage_path)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_finished", time_finished)
        pulumi.set(__self__, "time_started", time_started)
        pulumi.set(__self__, "warning_count", warning_count)
        pulumi.set(__self__, "work_request_id", work_request_id)

    @_builtins.property
    @pulumi.getter(name="analysisProjectName")
    def analysis_project_name(self) -> _builtins.str:
        """
        The project name of the Performance Tuning Analysis to query for.
        """
        return pulumi.get(self, "analysis_project_name")

    @_builtins.property
    @pulumi.getter(name="artifactObjectStoragePath")
    def artifact_object_storage_path(self) -> _builtins.str:
        """
        Object storage path to the artifact.
        """
        return pulumi.get(self, "artifact_object_storage_path")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="createdBies")
    def created_bies(self) -> Sequence['outputs.GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionItemCreatedByResult']:
        """
        An authorized principal.
        """
        return pulumi.get(self, "created_bies")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Performance Tuning Analysis.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def result(self) -> _builtins.str:
        """
        Possible Performance Tuning Result statuses.
        """
        return pulumi.get(self, "result")

    @_builtins.property
    @pulumi.getter(name="resultObjectStoragePath")
    def result_object_storage_path(self) -> _builtins.str:
        """
        Object storage path to the analysis.
        """
        return pulumi.get(self, "result_object_storage_path")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the Performance Tuning Analysis was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeFinished")
    def time_finished(self) -> _builtins.str:
        """
        The date and time the Performance Tuning Analysis was finished, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_finished")

    @_builtins.property
    @pulumi.getter(name="timeStarted")
    def time_started(self) -> _builtins.str:
        """
        The date and time the Performance Tuning Analysis was started, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_started")

    @_builtins.property
    @pulumi.getter(name="warningCount")
    def warning_count(self) -> _builtins.int:
        """
        Number of warnings in the Performance Tuning Analysis.
        """
        return pulumi.get(self, "warning_count")

    @_builtins.property
    @pulumi.getter(name="workRequestId")
    def work_request_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Work Request.
        """
        return pulumi.get(self, "work_request_id")


@pulumi.output_type
class GetUtilsPerformanceTuningAnalysisPerformanceTuningAnalysisCollectionItemCreatedByResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str display_name: The name of the principal.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Performance Tuning Analysis.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the principal.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Performance Tuning Analysis.
        """
        return pulumi.get(self, "id")


