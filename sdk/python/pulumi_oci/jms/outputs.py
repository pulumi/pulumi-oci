# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'FleetInventoryLog',
    'FleetOperationLog',
    'GetFleetBlocklistsFilterResult',
    'GetFleetBlocklistsItemResult',
    'GetFleetBlocklistsItemTargetResult',
    'GetFleetInventoryLogResult',
    'GetFleetOperationLogResult',
    'GetFleetsFilterResult',
    'GetFleetsFleetCollectionResult',
    'GetFleetsFleetCollectionItemResult',
    'GetFleetsFleetCollectionItemInventoryLogResult',
    'GetFleetsFleetCollectionItemOperationLogResult',
    'GetInstallationSiteItemResult',
    'GetInstallationSiteItemBlocklistResult',
    'GetInstallationSiteItemJreResult',
    'GetInstallationSiteItemOperatingSystemResult',
    'GetInstallationSitesFilterResult',
    'GetInstallationSitesInstallationSiteCollectionResult',
    'GetInstallationSitesInstallationSiteCollectionItemResult',
    'GetInstallationSitesInstallationSiteCollectionItemItemResult',
    'GetInstallationSitesInstallationSiteCollectionItemItemBlocklistResult',
    'GetInstallationSitesInstallationSiteCollectionItemItemJreResult',
    'GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystemResult',
    'GetListJreUsageItemResult',
    'GetListJreUsageItemOperatingSystemResult',
]

@pulumi.output_type
class FleetInventoryLog(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "logGroupId":
            suggest = "log_group_id"
        elif key == "logId":
            suggest = "log_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetInventoryLog. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetInventoryLog.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetInventoryLog.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 log_group_id: str,
                 log_id: str):
        """
        :param str log_group_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param str log_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @property
    @pulumi.getter(name="logId")
    def log_id(self) -> str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class FleetOperationLog(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "logGroupId":
            suggest = "log_group_id"
        elif key == "logId":
            suggest = "log_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FleetOperationLog. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FleetOperationLog.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FleetOperationLog.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 log_group_id: str,
                 log_id: str):
        """
        :param str log_group_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param str log_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @property
    @pulumi.getter(name="logId")
    def log_id(self) -> str:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetFleetBlocklistsFilterResult(dict):
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetBlocklistsItemResult(dict):
    def __init__(__self__, *,
                 key: str,
                 operation: str,
                 reason: str,
                 targets: Sequence['outputs.GetFleetBlocklistsItemTargetResult']):
        """
        :param str key: The unique identifier of this blocklist record.
        :param str operation: The operation type.
        :param str reason: The reason for why the operation is blocklisted
        :param Sequence['GetFleetBlocklistsItemTargetArgs'] targets: A resource to blocklist for certain operation.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "operation", operation)
        pulumi.set(__self__, "reason", reason)
        pulumi.set(__self__, "targets", targets)

    @property
    @pulumi.getter
    def key(self) -> str:
        """
        The unique identifier of this blocklist record.
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def operation(self) -> str:
        """
        The operation type.
        """
        return pulumi.get(self, "operation")

    @property
    @pulumi.getter
    def reason(self) -> str:
        """
        The reason for why the operation is blocklisted
        """
        return pulumi.get(self, "reason")

    @property
    @pulumi.getter
    def targets(self) -> Sequence['outputs.GetFleetBlocklistsItemTargetResult']:
        """
        A resource to blocklist for certain operation.
        """
        return pulumi.get(self, "targets")


@pulumi.output_type
class GetFleetBlocklistsItemTargetResult(dict):
    def __init__(__self__, *,
                 fleet_id: str,
                 installation_key: str,
                 managed_instance_id: str):
        """
        :param str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        :param str installation_key: The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        :param str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        """
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "installation_key", installation_key)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)

    @property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        """
        return pulumi.get(self, "fleet_id")

    @property
    @pulumi.getter(name="installationKey")
    def installation_key(self) -> str:
        """
        The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        """
        return pulumi.get(self, "installation_key")

    @property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")


@pulumi.output_type
class GetFleetInventoryLogResult(dict):
    def __init__(__self__, *,
                 log_group_id: str,
                 log_id: str):
        """
        :param str log_group_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param str log_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @property
    @pulumi.getter(name="logId")
    def log_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetFleetOperationLogResult(dict):
    def __init__(__self__, *,
                 log_group_id: str,
                 log_id: str):
        """
        :param str log_group_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param str log_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @property
    @pulumi.getter(name="logId")
    def log_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetFleetsFilterResult(dict):
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetFleetsFleetCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetFleetsFleetCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetFleetsFleetCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetFleetsFleetCollectionItemResult(dict):
    def __init__(__self__, *,
                 approximate_application_count: int,
                 approximate_installation_count: int,
                 approximate_jre_count: int,
                 approximate_managed_instance_count: int,
                 compartment_id: str,
                 defined_tags: Mapping[str, Any],
                 description: str,
                 display_name: str,
                 freeform_tags: Mapping[str, Any],
                 id: str,
                 inventory_logs: Sequence['outputs.GetFleetsFleetCollectionItemInventoryLogResult'],
                 operation_logs: Sequence['outputs.GetFleetsFleetCollectionItemOperationLogResult'],
                 state: str,
                 system_tags: Mapping[str, Any],
                 time_created: str):
        """
        :param int approximate_application_count: The approximate count of all unique applications in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
        :param int approximate_installation_count: The approximate count of all unique Java installations in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
        :param int approximate_jre_count: The approximate count of all unique Java Runtimes in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
        :param int approximate_managed_instance_count: The approximate count of all unique managed instances in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
        :param str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        :param Mapping[str, Any] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        :param str description: The Fleet's description.
        :param str display_name: The display name.
        :param Mapping[str, Any] freeform_tags: Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        :param str id: The ID of the Fleet.
        :param Sequence['GetFleetsFleetCollectionItemInventoryLogArgs'] inventory_logs: Custom Log for inventory or operation log.
        :param Sequence['GetFleetsFleetCollectionItemOperationLogArgs'] operation_logs: Custom Log for inventory or operation log.
        :param str state: The state of the lifecycle.
        :param Mapping[str, Any] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param str time_created: The creation date and time of the Fleet (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        pulumi.set(__self__, "approximate_application_count", approximate_application_count)
        pulumi.set(__self__, "approximate_installation_count", approximate_installation_count)
        pulumi.set(__self__, "approximate_jre_count", approximate_jre_count)
        pulumi.set(__self__, "approximate_managed_instance_count", approximate_managed_instance_count)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "inventory_logs", inventory_logs)
        pulumi.set(__self__, "operation_logs", operation_logs)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)

    @property
    @pulumi.getter(name="approximateApplicationCount")
    def approximate_application_count(self) -> int:
        """
        The approximate count of all unique applications in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_application_count")

    @property
    @pulumi.getter(name="approximateInstallationCount")
    def approximate_installation_count(self) -> int:
        """
        The approximate count of all unique Java installations in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_installation_count")

    @property
    @pulumi.getter(name="approximateJreCount")
    def approximate_jre_count(self) -> int:
        """
        The approximate count of all unique Java Runtimes in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_jre_count")

    @property
    @pulumi.getter(name="approximateManagedInstanceCount")
    def approximate_managed_instance_count(self) -> int:
        """
        The approximate count of all unique managed instances in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
        """
        return pulumi.get(self, "approximate_managed_instance_count")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, Any]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        """
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The Fleet's description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> str:
        """
        The display name.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, Any]:
        """
        Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        """
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Fleet.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="inventoryLogs")
    def inventory_logs(self) -> Sequence['outputs.GetFleetsFleetCollectionItemInventoryLogResult']:
        """
        Custom Log for inventory or operation log.
        """
        return pulumi.get(self, "inventory_logs")

    @property
    @pulumi.getter(name="operationLogs")
    def operation_logs(self) -> Sequence['outputs.GetFleetsFleetCollectionItemOperationLogResult']:
        """
        Custom Log for inventory or operation log.
        """
        return pulumi.get(self, "operation_logs")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The state of the lifecycle.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, Any]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> str:
        """
        The creation date and time of the Fleet (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_created")


@pulumi.output_type
class GetFleetsFleetCollectionItemInventoryLogResult(dict):
    def __init__(__self__, *,
                 log_group_id: str,
                 log_id: str):
        """
        :param str log_group_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param str log_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @property
    @pulumi.getter(name="logId")
    def log_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetFleetsFleetCollectionItemOperationLogResult(dict):
    def __init__(__self__, *,
                 log_group_id: str,
                 log_id: str):
        """
        :param str log_group_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        :param str log_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        pulumi.set(__self__, "log_group_id", log_group_id)
        pulumi.set(__self__, "log_id", log_id)

    @property
    @pulumi.getter(name="logGroupId")
    def log_group_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log group.
        """
        return pulumi.get(self, "log_group_id")

    @property
    @pulumi.getter(name="logId")
    def log_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
        """
        return pulumi.get(self, "log_id")


@pulumi.output_type
class GetInstallationSiteItemResult(dict):
    def __init__(__self__, *,
                 approximate_application_count: int,
                 blocklists: Sequence['outputs.GetInstallationSiteItemBlocklistResult'],
                 installation_key: str,
                 jres: Sequence['outputs.GetInstallationSiteItemJreResult'],
                 managed_instance_id: str,
                 operating_systems: Sequence['outputs.GetInstallationSiteItemOperatingSystemResult'],
                 path: str,
                 security_status: str,
                 state: str,
                 time_last_seen: str):
        """
        :param int approximate_application_count: The approximate count of applications running on this installation
        :param Sequence['GetInstallationSiteItemBlocklistArgs'] blocklists: The list of operations that are blocklisted.
        :param str installation_key: The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        :param Sequence['GetInstallationSiteItemJreArgs'] jres: The essential properties to identify a Java Runtime.
        :param str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param Sequence['GetInstallationSiteItemOperatingSystemArgs'] operating_systems: Operating System of the platform on which the Java Runtime was reported.
        :param str path: The file system path of the installation.
        :param str security_status: The security status of the Java Runtime.
        :param str state: The lifecycle state of the installation site.
        :param str time_last_seen: The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        pulumi.set(__self__, "approximate_application_count", approximate_application_count)
        pulumi.set(__self__, "blocklists", blocklists)
        pulumi.set(__self__, "installation_key", installation_key)
        pulumi.set(__self__, "jres", jres)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "operating_systems", operating_systems)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "security_status", security_status)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "time_last_seen", time_last_seen)

    @property
    @pulumi.getter(name="approximateApplicationCount")
    def approximate_application_count(self) -> int:
        """
        The approximate count of applications running on this installation
        """
        return pulumi.get(self, "approximate_application_count")

    @property
    @pulumi.getter
    def blocklists(self) -> Sequence['outputs.GetInstallationSiteItemBlocklistResult']:
        """
        The list of operations that are blocklisted.
        """
        return pulumi.get(self, "blocklists")

    @property
    @pulumi.getter(name="installationKey")
    def installation_key(self) -> str:
        """
        The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        """
        return pulumi.get(self, "installation_key")

    @property
    @pulumi.getter
    def jres(self) -> Sequence['outputs.GetInstallationSiteItemJreResult']:
        """
        The essential properties to identify a Java Runtime.
        """
        return pulumi.get(self, "jres")

    @property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @property
    @pulumi.getter(name="operatingSystems")
    def operating_systems(self) -> Sequence['outputs.GetInstallationSiteItemOperatingSystemResult']:
        """
        Operating System of the platform on which the Java Runtime was reported.
        """
        return pulumi.get(self, "operating_systems")

    @property
    @pulumi.getter
    def path(self) -> str:
        """
        The file system path of the installation.
        """
        return pulumi.get(self, "path")

    @property
    @pulumi.getter(name="securityStatus")
    def security_status(self) -> str:
        """
        The security status of the Java Runtime.
        """
        return pulumi.get(self, "security_status")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The lifecycle state of the installation site.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> str:
        """
        The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        return pulumi.get(self, "time_last_seen")


@pulumi.output_type
class GetInstallationSiteItemBlocklistResult(dict):
    def __init__(__self__, *,
                 operation: str,
                 reason: str):
        """
        :param str operation: The operation type.
        :param str reason: The reason why the operation is blocklisted.
        """
        pulumi.set(__self__, "operation", operation)
        pulumi.set(__self__, "reason", reason)

    @property
    @pulumi.getter
    def operation(self) -> str:
        """
        The operation type.
        """
        return pulumi.get(self, "operation")

    @property
    @pulumi.getter
    def reason(self) -> str:
        """
        The reason why the operation is blocklisted.
        """
        return pulumi.get(self, "reason")


@pulumi.output_type
class GetInstallationSiteItemJreResult(dict):
    def __init__(__self__, *,
                 distribution: str,
                 jre_key: str,
                 vendor: str,
                 version: str):
        """
        :param str distribution: The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        :param str jre_key: The unique identifier for a Java Runtime.
        :param str vendor: The vendor of the Java Runtime.
        :param str version: The version of the operating system as provided by the Java system property os.version.
        """
        pulumi.set(__self__, "distribution", distribution)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "vendor", vendor)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def distribution(self) -> str:
        """
        The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        """
        return pulumi.get(self, "distribution")

    @property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> str:
        """
        The unique identifier for a Java Runtime.
        """
        return pulumi.get(self, "jre_key")

    @property
    @pulumi.getter
    def vendor(self) -> str:
        """
        The vendor of the Java Runtime.
        """
        return pulumi.get(self, "vendor")

    @property
    @pulumi.getter
    def version(self) -> str:
        """
        The version of the operating system as provided by the Java system property os.version.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetInstallationSiteItemOperatingSystemResult(dict):
    def __init__(__self__, *,
                 architecture: str,
                 family: str,
                 name: str,
                 version: str):
        """
        :param str architecture: The architecture of the operating system as provided by the Java system property os.arch.
        :param str family: The operating system type, such as Windows or Linux
        :param str name: The name of the operating system as provided by the Java system property os.name.
        :param str version: The version of the operating system as provided by the Java system property os.version.
        """
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "family", family)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def architecture(self) -> str:
        """
        The architecture of the operating system as provided by the Java system property os.arch.
        """
        return pulumi.get(self, "architecture")

    @property
    @pulumi.getter
    def family(self) -> str:
        """
        The operating system type, such as Windows or Linux
        """
        return pulumi.get(self, "family")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the operating system as provided by the Java system property os.name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def version(self) -> str:
        """
        The version of the operating system as provided by the Java system property os.version.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetInstallationSitesFilterResult(dict):
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        """
        :param str name: The name of the operating system as provided by the Java system property os.name.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the operating system as provided by the Java system property os.name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemResult']):
        """
        :param Sequence['GetInstallationSitesInstallationSiteCollectionItemArgs'] items: A list of Java installation sites.
        """
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemResult']:
        """
        A list of Java installation sites.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionItemResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemItemResult']):
        """
        :param Sequence['GetInstallationSitesInstallationSiteCollectionItemItemArgs'] items: A list of Java installation sites.
        """
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemItemResult']:
        """
        A list of Java installation sites.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionItemItemResult(dict):
    def __init__(__self__, *,
                 approximate_application_count: int,
                 blocklists: Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemItemBlocklistResult'],
                 installation_key: str,
                 jres: Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemItemJreResult'],
                 managed_instance_id: str,
                 operating_systems: Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystemResult'],
                 path: str,
                 security_status: str,
                 state: str,
                 time_last_seen: str):
        """
        :param int approximate_application_count: The approximate count of applications running on this installation
        :param Sequence['GetInstallationSitesInstallationSiteCollectionItemItemBlocklistArgs'] blocklists: The list of operations that are blocklisted.
        :param str installation_key: The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        :param Sequence['GetInstallationSitesInstallationSiteCollectionItemItemJreArgs'] jres: The essential properties to identify a Java Runtime.
        :param str managed_instance_id: The Fleet-unique identifier of the related managed instance.
        :param Sequence['GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystemArgs'] operating_systems: Operating System of the platform on which the Java Runtime was reported.
        :param str path: The file system path of the installation.
        :param str security_status: The security status of the Java Runtime.
        :param str state: The lifecycle state of the installation site.
        :param str time_last_seen: The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        pulumi.set(__self__, "approximate_application_count", approximate_application_count)
        pulumi.set(__self__, "blocklists", blocklists)
        pulumi.set(__self__, "installation_key", installation_key)
        pulumi.set(__self__, "jres", jres)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "operating_systems", operating_systems)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "security_status", security_status)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "time_last_seen", time_last_seen)

    @property
    @pulumi.getter(name="approximateApplicationCount")
    def approximate_application_count(self) -> int:
        """
        The approximate count of applications running on this installation
        """
        return pulumi.get(self, "approximate_application_count")

    @property
    @pulumi.getter
    def blocklists(self) -> Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemItemBlocklistResult']:
        """
        The list of operations that are blocklisted.
        """
        return pulumi.get(self, "blocklists")

    @property
    @pulumi.getter(name="installationKey")
    def installation_key(self) -> str:
        """
        The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
        """
        return pulumi.get(self, "installation_key")

    @property
    @pulumi.getter
    def jres(self) -> Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemItemJreResult']:
        """
        The essential properties to identify a Java Runtime.
        """
        return pulumi.get(self, "jres")

    @property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> str:
        """
        The Fleet-unique identifier of the related managed instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @property
    @pulumi.getter(name="operatingSystems")
    def operating_systems(self) -> Sequence['outputs.GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystemResult']:
        """
        Operating System of the platform on which the Java Runtime was reported.
        """
        return pulumi.get(self, "operating_systems")

    @property
    @pulumi.getter
    def path(self) -> str:
        """
        The file system path of the installation.
        """
        return pulumi.get(self, "path")

    @property
    @pulumi.getter(name="securityStatus")
    def security_status(self) -> str:
        """
        The security status of the Java Runtime.
        """
        return pulumi.get(self, "security_status")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The lifecycle state of the installation site.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> str:
        """
        The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        return pulumi.get(self, "time_last_seen")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionItemItemBlocklistResult(dict):
    def __init__(__self__, *,
                 operation: str,
                 reason: str):
        """
        :param str operation: The operation type.
        :param str reason: The reason why the operation is blocklisted.
        """
        pulumi.set(__self__, "operation", operation)
        pulumi.set(__self__, "reason", reason)

    @property
    @pulumi.getter
    def operation(self) -> str:
        """
        The operation type.
        """
        return pulumi.get(self, "operation")

    @property
    @pulumi.getter
    def reason(self) -> str:
        """
        The reason why the operation is blocklisted.
        """
        return pulumi.get(self, "reason")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionItemItemJreResult(dict):
    def __init__(__self__, *,
                 distribution: str,
                 jre_key: str,
                 vendor: str,
                 version: str):
        """
        :param str distribution: The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        :param str jre_key: The unique identifier for a Java Runtime.
        :param str vendor: The vendor of the Java Runtime.
        :param str version: The version of the operating system as provided by the Java system property os.version.
        """
        pulumi.set(__self__, "distribution", distribution)
        pulumi.set(__self__, "jre_key", jre_key)
        pulumi.set(__self__, "vendor", vendor)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def distribution(self) -> str:
        """
        The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        """
        return pulumi.get(self, "distribution")

    @property
    @pulumi.getter(name="jreKey")
    def jre_key(self) -> str:
        """
        The unique identifier for a Java Runtime.
        """
        return pulumi.get(self, "jre_key")

    @property
    @pulumi.getter
    def vendor(self) -> str:
        """
        The vendor of the Java Runtime.
        """
        return pulumi.get(self, "vendor")

    @property
    @pulumi.getter
    def version(self) -> str:
        """
        The version of the operating system as provided by the Java system property os.version.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystemResult(dict):
    def __init__(__self__, *,
                 architecture: str,
                 family: str,
                 name: str,
                 version: str):
        """
        :param str architecture: The architecture of the operating system as provided by the Java system property os.arch.
        :param str family: The operating system type, such as Windows or Linux
        :param str name: The name of the operating system as provided by the Java system property os.name.
        :param str version: The version of the operating system as provided by the Java system property os.version.
        """
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "family", family)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def architecture(self) -> str:
        """
        The architecture of the operating system as provided by the Java system property os.arch.
        """
        return pulumi.get(self, "architecture")

    @property
    @pulumi.getter
    def family(self) -> str:
        """
        The operating system type, such as Windows or Linux
        """
        return pulumi.get(self, "family")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the operating system as provided by the Java system property os.name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def version(self) -> str:
        """
        The version of the operating system as provided by the Java system property os.version.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetListJreUsageItemResult(dict):
    def __init__(__self__, *,
                 approximate_application_count: int,
                 approximate_installation_count: int,
                 approximate_managed_instance_count: int,
                 approximate_pending_work_request_count: int,
                 distribution: str,
                 end_of_support_life_date: str,
                 fleet_id: str,
                 id: str,
                 managed_instance_id: str,
                 operating_systems: Sequence['outputs.GetListJreUsageItemOperatingSystemResult'],
                 release_date: str,
                 security_status: str,
                 time_end: str,
                 time_first_seen: str,
                 time_last_seen: str,
                 time_start: str,
                 vendor: str,
                 version: str):
        """
        :param int approximate_application_count: The approximate count of the applications running on this Java Runtime.
        :param int approximate_installation_count: The approximate count of installations that are installations of this Java Runtime.
        :param int approximate_managed_instance_count: The approximate count of the managed instances that report this Java Runtime.
        :param int approximate_pending_work_request_count: The approximate count of work requests working on this Java Runtime.
        :param str distribution: The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        :param str end_of_support_life_date: The End of Support Life (EOSL) date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param str fleet_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related fleet.  This property value is present only for /actions/listJreUsage.
        :param str id: The internal identifier of the Java Runtime.
        :param str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance. This property value is present only for /actions/listJreUsage.
        :param Sequence['GetListJreUsageItemOperatingSystemArgs'] operating_systems: The operating systems that have this Java Runtime installed.
        :param str release_date: The release date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param str security_status: The security status of the Java Runtime.
        :param str time_end: The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param str time_first_seen: The date and time the resource was _first_ reported to JMS. This is potentially _before_ the specified time period provided by the filters. For example, a resource can be first reported to JMS before the start of a specified time period, if it is also reported during the time period.
        :param str time_last_seen: The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        :param str time_start: The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        :param str vendor: The vendor of the Java Runtime.
        :param str version: The version of the Java Runtime.
        """
        pulumi.set(__self__, "approximate_application_count", approximate_application_count)
        pulumi.set(__self__, "approximate_installation_count", approximate_installation_count)
        pulumi.set(__self__, "approximate_managed_instance_count", approximate_managed_instance_count)
        pulumi.set(__self__, "approximate_pending_work_request_count", approximate_pending_work_request_count)
        pulumi.set(__self__, "distribution", distribution)
        pulumi.set(__self__, "end_of_support_life_date", end_of_support_life_date)
        pulumi.set(__self__, "fleet_id", fleet_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "operating_systems", operating_systems)
        pulumi.set(__self__, "release_date", release_date)
        pulumi.set(__self__, "security_status", security_status)
        pulumi.set(__self__, "time_end", time_end)
        pulumi.set(__self__, "time_first_seen", time_first_seen)
        pulumi.set(__self__, "time_last_seen", time_last_seen)
        pulumi.set(__self__, "time_start", time_start)
        pulumi.set(__self__, "vendor", vendor)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="approximateApplicationCount")
    def approximate_application_count(self) -> int:
        """
        The approximate count of the applications running on this Java Runtime.
        """
        return pulumi.get(self, "approximate_application_count")

    @property
    @pulumi.getter(name="approximateInstallationCount")
    def approximate_installation_count(self) -> int:
        """
        The approximate count of installations that are installations of this Java Runtime.
        """
        return pulumi.get(self, "approximate_installation_count")

    @property
    @pulumi.getter(name="approximateManagedInstanceCount")
    def approximate_managed_instance_count(self) -> int:
        """
        The approximate count of the managed instances that report this Java Runtime.
        """
        return pulumi.get(self, "approximate_managed_instance_count")

    @property
    @pulumi.getter(name="approximatePendingWorkRequestCount")
    def approximate_pending_work_request_count(self) -> int:
        """
        The approximate count of work requests working on this Java Runtime.
        """
        return pulumi.get(self, "approximate_pending_work_request_count")

    @property
    @pulumi.getter
    def distribution(self) -> str:
        """
        The distribution of a Java Runtime is the name of the lineage of product to which it belongs, for example _Java(TM) SE Runtime Environment_.
        """
        return pulumi.get(self, "distribution")

    @property
    @pulumi.getter(name="endOfSupportLifeDate")
    def end_of_support_life_date(self) -> str:
        """
        The End of Support Life (EOSL) date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "end_of_support_life_date")

    @property
    @pulumi.getter(name="fleetId")
    def fleet_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related fleet.  This property value is present only for /actions/listJreUsage.
        """
        return pulumi.get(self, "fleet_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The internal identifier of the Java Runtime.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance. This property value is present only for /actions/listJreUsage.
        """
        return pulumi.get(self, "managed_instance_id")

    @property
    @pulumi.getter(name="operatingSystems")
    def operating_systems(self) -> Sequence['outputs.GetListJreUsageItemOperatingSystemResult']:
        """
        The operating systems that have this Java Runtime installed.
        """
        return pulumi.get(self, "operating_systems")

    @property
    @pulumi.getter(name="releaseDate")
    def release_date(self) -> str:
        """
        The release date of the Java Runtime (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "release_date")

    @property
    @pulumi.getter(name="securityStatus")
    def security_status(self) -> str:
        """
        The security status of the Java Runtime.
        """
        return pulumi.get(self, "security_status")

    @property
    @pulumi.getter(name="timeEnd")
    def time_end(self) -> str:
        """
        The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_end")

    @property
    @pulumi.getter(name="timeFirstSeen")
    def time_first_seen(self) -> str:
        """
        The date and time the resource was _first_ reported to JMS. This is potentially _before_ the specified time period provided by the filters. For example, a resource can be first reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        return pulumi.get(self, "time_first_seen")

    @property
    @pulumi.getter(name="timeLastSeen")
    def time_last_seen(self) -> str:
        """
        The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
        """
        return pulumi.get(self, "time_last_seen")

    @property
    @pulumi.getter(name="timeStart")
    def time_start(self) -> str:
        """
        The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        """
        return pulumi.get(self, "time_start")

    @property
    @pulumi.getter
    def vendor(self) -> str:
        """
        The vendor of the Java Runtime.
        """
        return pulumi.get(self, "vendor")

    @property
    @pulumi.getter
    def version(self) -> str:
        """
        The version of the Java Runtime.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetListJreUsageItemOperatingSystemResult(dict):
    def __init__(__self__, *,
                 architecture: str,
                 family: str,
                 name: str,
                 version: str):
        """
        :param str architecture: The architecture of the operating system as provided by the Java system property os.arch.
        :param str family: The operating system type, such as Windows or Linux
        :param str name: The name of the operating system as provided by the Java system property os.name.
        :param str version: The version of the Java Runtime.
        """
        pulumi.set(__self__, "architecture", architecture)
        pulumi.set(__self__, "family", family)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def architecture(self) -> str:
        """
        The architecture of the operating system as provided by the Java system property os.arch.
        """
        return pulumi.get(self, "architecture")

    @property
    @pulumi.getter
    def family(self) -> str:
        """
        The operating system type, such as Windows or Linux
        """
        return pulumi.get(self, "family")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the operating system as provided by the Java system property os.name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def version(self) -> str:
        """
        The version of the Java Runtime.
        """
        return pulumi.get(self, "version")


