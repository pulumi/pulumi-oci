# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetSslCipherSuiteResult',
    'AwaitableGetSslCipherSuiteResult',
    'get_ssl_cipher_suite',
    'get_ssl_cipher_suite_output',
]

@pulumi.output_type
class GetSslCipherSuiteResult:
    """
    A collection of values returned by getSslCipherSuite.
    """
    def __init__(__self__, ciphers=None, id=None, load_balancer_id=None, name=None, state=None):
        if ciphers and not isinstance(ciphers, list):
            raise TypeError("Expected argument 'ciphers' to be a list")
        pulumi.set(__self__, "ciphers", ciphers)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if load_balancer_id and not isinstance(load_balancer_id, str):
            raise TypeError("Expected argument 'load_balancer_id' to be a str")
        pulumi.set(__self__, "load_balancer_id", load_balancer_id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)

    @property
    @pulumi.getter
    def ciphers(self) -> Sequence[str]:
        """
        A list of SSL ciphers the load balancer must support for HTTPS or SSL connections.
        """
        return pulumi.get(self, "ciphers")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="loadBalancerId")
    def load_balancer_id(self) -> str:
        return pulumi.get(self, "load_balancer_id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        A friendly name for the SSL cipher suite. It must be unique and it cannot be changed.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def state(self) -> str:
        return pulumi.get(self, "state")


class AwaitableGetSslCipherSuiteResult(GetSslCipherSuiteResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSslCipherSuiteResult(
            ciphers=self.ciphers,
            id=self.id,
            load_balancer_id=self.load_balancer_id,
            name=self.name,
            state=self.state)


def get_ssl_cipher_suite(load_balancer_id: Optional[str] = None,
                         name: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSslCipherSuiteResult:
    """
    This data source provides details about a specific Ssl Cipher Suite resource in Oracle Cloud Infrastructure Load Balancer service.

    Gets the specified SSL cipher suite's configuration information.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_ssl_cipher_suite = oci.LoadBalancer.get_ssl_cipher_suite(load_balancer_id=oci_load_balancer_load_balancer["test_load_balancer"]["id"],
        name=var["ssl_cipher_suite_name"])
    ```


    :param str load_balancer_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated load balancer.
    :param str name: The name of the SSL cipher suite to retrieve.
           
           example: `example_cipher_suite`
    """
    __args__ = dict()
    __args__['loadBalancerId'] = load_balancer_id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:LoadBalancer/getSslCipherSuite:getSslCipherSuite', __args__, opts=opts, typ=GetSslCipherSuiteResult).value

    return AwaitableGetSslCipherSuiteResult(
        ciphers=pulumi.get(__ret__, 'ciphers'),
        id=pulumi.get(__ret__, 'id'),
        load_balancer_id=pulumi.get(__ret__, 'load_balancer_id'),
        name=pulumi.get(__ret__, 'name'),
        state=pulumi.get(__ret__, 'state'))


@_utilities.lift_output_func(get_ssl_cipher_suite)
def get_ssl_cipher_suite_output(load_balancer_id: Optional[pulumi.Input[str]] = None,
                                name: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSslCipherSuiteResult]:
    """
    This data source provides details about a specific Ssl Cipher Suite resource in Oracle Cloud Infrastructure Load Balancer service.

    Gets the specified SSL cipher suite's configuration information.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_ssl_cipher_suite = oci.LoadBalancer.get_ssl_cipher_suite(load_balancer_id=oci_load_balancer_load_balancer["test_load_balancer"]["id"],
        name=var["ssl_cipher_suite_name"])
    ```


    :param str load_balancer_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated load balancer.
    :param str name: The name of the SSL cipher suite to retrieve.
           
           example: `example_cipher_suite`
    """
    ...
