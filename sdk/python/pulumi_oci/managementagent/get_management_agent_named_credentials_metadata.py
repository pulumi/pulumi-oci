# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetManagementAgentNamedCredentialsMetadataResult',
    'AwaitableGetManagementAgentNamedCredentialsMetadataResult',
    'get_management_agent_named_credentials_metadata',
    'get_management_agent_named_credentials_metadata_output',
]

@pulumi.output_type
class GetManagementAgentNamedCredentialsMetadataResult:
    """
    A collection of values returned by getManagementAgentNamedCredentialsMetadata.
    """
    def __init__(__self__, compartment_id=None, id=None, management_agent_id=None, metadatas=None):
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if management_agent_id and not isinstance(management_agent_id, str):
            raise TypeError("Expected argument 'management_agent_id' to be a str")
        pulumi.set(__self__, "management_agent_id", management_agent_id)
        if metadatas and not isinstance(metadatas, list):
            raise TypeError("Expected argument 'metadatas' to be a list")
        pulumi.set(__self__, "metadatas", metadatas)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="managementAgentId")
    def management_agent_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "management_agent_id")

    @_builtins.property
    @pulumi.getter
    def metadatas(self) -> Sequence['outputs.GetManagementAgentNamedCredentialsMetadataMetadataResult']:
        """
        List of supported metadata definitions.
        """
        return pulumi.get(self, "metadatas")


class AwaitableGetManagementAgentNamedCredentialsMetadataResult(GetManagementAgentNamedCredentialsMetadataResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetManagementAgentNamedCredentialsMetadataResult(
            compartment_id=self.compartment_id,
            id=self.id,
            management_agent_id=self.management_agent_id,
            metadatas=self.metadatas)


def get_management_agent_named_credentials_metadata(compartment_id: Optional[_builtins.str] = None,
                                                    management_agent_id: Optional[_builtins.str] = None,
                                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetManagementAgentNamedCredentialsMetadataResult:
    """
    This data source provides details about a specific Management Agent Named Credentials Metadata resource in Oracle Cloud Infrastructure Management Agent service.

    Return the Metadata definition for Named Credentials supported by Management Agent.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_management_agent_named_credentials_metadata = oci.ManagementAgent.get_management_agent_named_credentials_metadata(compartment_id=compartment_id,
        management_agent_id=test_management_agent["id"])
    ```


    :param _builtins.str compartment_id: The OCID of the compartment to which a request will be scoped.
    :param _builtins.str management_agent_id: Filter the named credential metadata which is compatible with the given Management Agent identifier.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['managementAgentId'] = management_agent_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:ManagementAgent/getManagementAgentNamedCredentialsMetadata:getManagementAgentNamedCredentialsMetadata', __args__, opts=opts, typ=GetManagementAgentNamedCredentialsMetadataResult).value

    return AwaitableGetManagementAgentNamedCredentialsMetadataResult(
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        id=pulumi.get(__ret__, 'id'),
        management_agent_id=pulumi.get(__ret__, 'management_agent_id'),
        metadatas=pulumi.get(__ret__, 'metadatas'))
def get_management_agent_named_credentials_metadata_output(compartment_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                           management_agent_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetManagementAgentNamedCredentialsMetadataResult]:
    """
    This data source provides details about a specific Management Agent Named Credentials Metadata resource in Oracle Cloud Infrastructure Management Agent service.

    Return the Metadata definition for Named Credentials supported by Management Agent.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_management_agent_named_credentials_metadata = oci.ManagementAgent.get_management_agent_named_credentials_metadata(compartment_id=compartment_id,
        management_agent_id=test_management_agent["id"])
    ```


    :param _builtins.str compartment_id: The OCID of the compartment to which a request will be scoped.
    :param _builtins.str management_agent_id: Filter the named credential metadata which is compatible with the given Management Agent identifier.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['managementAgentId'] = management_agent_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:ManagementAgent/getManagementAgentNamedCredentialsMetadata:getManagementAgentNamedCredentialsMetadata', __args__, opts=opts, typ=GetManagementAgentNamedCredentialsMetadataResult)
    return __ret__.apply(lambda __response__: GetManagementAgentNamedCredentialsMetadataResult(
        compartment_id=pulumi.get(__response__, 'compartment_id'),
        id=pulumi.get(__response__, 'id'),
        management_agent_id=pulumi.get(__response__, 'management_agent_id'),
        metadatas=pulumi.get(__response__, 'metadatas')))
