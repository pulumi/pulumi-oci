# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetMediaAssetDistributionChannelAttachmentResult',
    'AwaitableGetMediaAssetDistributionChannelAttachmentResult',
    'get_media_asset_distribution_channel_attachment',
    'get_media_asset_distribution_channel_attachment_output',
]

@pulumi.output_type
class GetMediaAssetDistributionChannelAttachmentResult:
    """
    A collection of values returned by getMediaAssetDistributionChannelAttachment.
    """
    def __init__(__self__, display_name=None, distribution_channel_id=None, id=None, media_asset_id=None, media_workflow_job_id=None, metadata_ref=None, state=None, version=None):
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        pulumi.set(__self__, "display_name", display_name)
        if distribution_channel_id and not isinstance(distribution_channel_id, str):
            raise TypeError("Expected argument 'distribution_channel_id' to be a str")
        pulumi.set(__self__, "distribution_channel_id", distribution_channel_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if media_asset_id and not isinstance(media_asset_id, str):
            raise TypeError("Expected argument 'media_asset_id' to be a str")
        pulumi.set(__self__, "media_asset_id", media_asset_id)
        if media_workflow_job_id and not isinstance(media_workflow_job_id, str):
            raise TypeError("Expected argument 'media_workflow_job_id' to be a str")
        pulumi.set(__self__, "media_workflow_job_id", media_workflow_job_id)
        if metadata_ref and not isinstance(metadata_ref, str):
            raise TypeError("Expected argument 'metadata_ref' to be a str")
        pulumi.set(__self__, "metadata_ref", metadata_ref)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if version and not isinstance(version, str):
            raise TypeError("Expected argument 'version' to be a str")
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> str:
        """
        A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="distributionChannelId")
    def distribution_channel_id(self) -> str:
        """
        OCID of associated Distribution Channel.
        """
        return pulumi.get(self, "distribution_channel_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="mediaAssetId")
    def media_asset_id(self) -> str:
        return pulumi.get(self, "media_asset_id")

    @property
    @pulumi.getter(name="mediaWorkflowJobId")
    def media_workflow_job_id(self) -> str:
        """
        The ingest MediaWorkflowJob ID that created this attachment.
        """
        return pulumi.get(self, "media_workflow_job_id")

    @property
    @pulumi.getter(name="metadataRef")
    def metadata_ref(self) -> str:
        """
        The identifier for the metadata.
        """
        return pulumi.get(self, "metadata_ref")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        Lifecycle state of the attachment.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter
    def version(self) -> str:
        """
        Version of the attachment.
        """
        return pulumi.get(self, "version")


class AwaitableGetMediaAssetDistributionChannelAttachmentResult(GetMediaAssetDistributionChannelAttachmentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMediaAssetDistributionChannelAttachmentResult(
            display_name=self.display_name,
            distribution_channel_id=self.distribution_channel_id,
            id=self.id,
            media_asset_id=self.media_asset_id,
            media_workflow_job_id=self.media_workflow_job_id,
            metadata_ref=self.metadata_ref,
            state=self.state,
            version=self.version)


def get_media_asset_distribution_channel_attachment(distribution_channel_id: Optional[str] = None,
                                                    media_asset_id: Optional[str] = None,
                                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMediaAssetDistributionChannelAttachmentResult:
    """
    This data source provides details about a specific Media Asset Distribution Channel Attachment resource in Oracle Cloud Infrastructure Media Services service.

    Gets a MediaAssetDistributionChannelAttachment for a MediaAsset by identifiers.


    :param str distribution_channel_id: Unique DistributionChannel identifier.
    :param str media_asset_id: Unique MediaAsset identifier
    """
    __args__ = dict()
    __args__['distributionChannelId'] = distribution_channel_id
    __args__['mediaAssetId'] = media_asset_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:MediaServices/getMediaAssetDistributionChannelAttachment:getMediaAssetDistributionChannelAttachment', __args__, opts=opts, typ=GetMediaAssetDistributionChannelAttachmentResult).value

    return AwaitableGetMediaAssetDistributionChannelAttachmentResult(
        display_name=pulumi.get(__ret__, 'display_name'),
        distribution_channel_id=pulumi.get(__ret__, 'distribution_channel_id'),
        id=pulumi.get(__ret__, 'id'),
        media_asset_id=pulumi.get(__ret__, 'media_asset_id'),
        media_workflow_job_id=pulumi.get(__ret__, 'media_workflow_job_id'),
        metadata_ref=pulumi.get(__ret__, 'metadata_ref'),
        state=pulumi.get(__ret__, 'state'),
        version=pulumi.get(__ret__, 'version'))


@_utilities.lift_output_func(get_media_asset_distribution_channel_attachment)
def get_media_asset_distribution_channel_attachment_output(distribution_channel_id: Optional[pulumi.Input[str]] = None,
                                                           media_asset_id: Optional[pulumi.Input[str]] = None,
                                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetMediaAssetDistributionChannelAttachmentResult]:
    """
    This data source provides details about a specific Media Asset Distribution Channel Attachment resource in Oracle Cloud Infrastructure Media Services service.

    Gets a MediaAssetDistributionChannelAttachment for a MediaAsset by identifiers.


    :param str distribution_channel_id: Unique DistributionChannel identifier.
    :param str media_asset_id: Unique MediaAsset identifier
    """
    ...
