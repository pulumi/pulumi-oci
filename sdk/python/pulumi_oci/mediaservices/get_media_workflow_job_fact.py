# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetMediaWorkflowJobFactResult',
    'AwaitableGetMediaWorkflowJobFactResult',
    'get_media_workflow_job_fact',
    'get_media_workflow_job_fact_output',
]

@pulumi.output_type
class GetMediaWorkflowJobFactResult:
    """
    A collection of values returned by getMediaWorkflowJobFact.
    """
    def __init__(__self__, detail=None, id=None, key=None, media_workflow_job_id=None, name=None, type=None):
        if detail and not isinstance(detail, str):
            raise TypeError("Expected argument 'detail' to be a str")
        pulumi.set(__self__, "detail", detail)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if key and not isinstance(key, str):
            raise TypeError("Expected argument 'key' to be a str")
        pulumi.set(__self__, "key", key)
        if media_workflow_job_id and not isinstance(media_workflow_job_id, str):
            raise TypeError("Expected argument 'media_workflow_job_id' to be a str")
        pulumi.set(__self__, "media_workflow_job_id", media_workflow_job_id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def detail(self) -> str:
        """
        The body of the detail captured as JSON.
        """
        return pulumi.get(self, "detail")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def key(self) -> str:
        """
        System generated serial number to uniquely identify a detail in order within a MediaWorkflowJob.
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter(name="mediaWorkflowJobId")
    def media_workflow_job_id(self) -> str:
        """
        Reference to the parent job.
        """
        return pulumi.get(self, "media_workflow_job_id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Unique name. It is read-only and generated for the fact.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of information contained in this detail.
        """
        return pulumi.get(self, "type")


class AwaitableGetMediaWorkflowJobFactResult(GetMediaWorkflowJobFactResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMediaWorkflowJobFactResult(
            detail=self.detail,
            id=self.id,
            key=self.key,
            media_workflow_job_id=self.media_workflow_job_id,
            name=self.name,
            type=self.type)


def get_media_workflow_job_fact(key: Optional[str] = None,
                                media_workflow_job_id: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMediaWorkflowJobFactResult:
    """
    This data source provides details about a specific Media Workflow Job Fact resource in Oracle Cloud Infrastructure Media Services service.

    Get the MediaWorkflowJobFact identified by the mediaWorkflowJobId and Fact ID.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_media_workflow_job_fact = oci.MediaServices.get_media_workflow_job_fact(key=var["media_workflow_job_fact_key"],
        media_workflow_job_id=oci_media_services_media_workflow_job["test_media_workflow_job"]["id"])
    ```


    :param str key: Identifier of the MediaWorkflowJobFact within a MediaWorkflowJob.
    :param str media_workflow_job_id: Unique MediaWorkflowJob identifier.
    """
    __args__ = dict()
    __args__['key'] = key
    __args__['mediaWorkflowJobId'] = media_workflow_job_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:MediaServices/getMediaWorkflowJobFact:getMediaWorkflowJobFact', __args__, opts=opts, typ=GetMediaWorkflowJobFactResult).value

    return AwaitableGetMediaWorkflowJobFactResult(
        detail=pulumi.get(__ret__, 'detail'),
        id=pulumi.get(__ret__, 'id'),
        key=pulumi.get(__ret__, 'key'),
        media_workflow_job_id=pulumi.get(__ret__, 'media_workflow_job_id'),
        name=pulumi.get(__ret__, 'name'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_media_workflow_job_fact)
def get_media_workflow_job_fact_output(key: Optional[pulumi.Input[str]] = None,
                                       media_workflow_job_id: Optional[pulumi.Input[str]] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetMediaWorkflowJobFactResult]:
    """
    This data source provides details about a specific Media Workflow Job Fact resource in Oracle Cloud Infrastructure Media Services service.

    Get the MediaWorkflowJobFact identified by the mediaWorkflowJobId and Fact ID.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_media_workflow_job_fact = oci.MediaServices.get_media_workflow_job_fact(key=var["media_workflow_job_fact_key"],
        media_workflow_job_id=oci_media_services_media_workflow_job["test_media_workflow_job"]["id"])
    ```


    :param str key: Identifier of the MediaWorkflowJobFact within a MediaWorkflowJob.
    :param str media_workflow_job_id: Unique MediaWorkflowJob identifier.
    """
    ...
