# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetNetworkFirewallPolicyMappedSecretResult',
    'AwaitableGetNetworkFirewallPolicyMappedSecretResult',
    'get_network_firewall_policy_mapped_secret',
    'get_network_firewall_policy_mapped_secret_output',
]

@pulumi.output_type
class GetNetworkFirewallPolicyMappedSecretResult:
    """
    A collection of values returned by getNetworkFirewallPolicyMappedSecret.
    """
    def __init__(__self__, id=None, name=None, network_firewall_policy_id=None, parent_resource_id=None, source=None, type=None, vault_secret_id=None, version_number=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if network_firewall_policy_id and not isinstance(network_firewall_policy_id, str):
            raise TypeError("Expected argument 'network_firewall_policy_id' to be a str")
        pulumi.set(__self__, "network_firewall_policy_id", network_firewall_policy_id)
        if parent_resource_id and not isinstance(parent_resource_id, str):
            raise TypeError("Expected argument 'parent_resource_id' to be a str")
        pulumi.set(__self__, "parent_resource_id", parent_resource_id)
        if source and not isinstance(source, str):
            raise TypeError("Expected argument 'source' to be a str")
        pulumi.set(__self__, "source", source)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)
        if vault_secret_id and not isinstance(vault_secret_id, str):
            raise TypeError("Expected argument 'vault_secret_id' to be a str")
        pulumi.set(__self__, "vault_secret_id", vault_secret_id)
        if version_number and not isinstance(version_number, int):
            raise TypeError("Expected argument 'version_number' to be a int")
        pulumi.set(__self__, "version_number", version_number)

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the secret.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="networkFirewallPolicyId")
    def network_firewall_policy_id(self) -> str:
        return pulumi.get(self, "network_firewall_policy_id")

    @property
    @pulumi.getter(name="parentResourceId")
    def parent_resource_id(self) -> str:
        """
        OCID of the Network Firewall Policy this Mapped Secret belongs to.
        """
        return pulumi.get(self, "parent_resource_id")

    @property
    @pulumi.getter
    def source(self) -> str:
        """
        Source of the secrets, where the secrets are stored.
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Type of the secrets mapped based on the policy.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="vaultSecretId")
    def vault_secret_id(self) -> str:
        """
        OCID for the Vault Secret to be used.
        """
        return pulumi.get(self, "vault_secret_id")

    @property
    @pulumi.getter(name="versionNumber")
    def version_number(self) -> int:
        """
        Version number of the secret to be used.
        """
        return pulumi.get(self, "version_number")


class AwaitableGetNetworkFirewallPolicyMappedSecretResult(GetNetworkFirewallPolicyMappedSecretResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNetworkFirewallPolicyMappedSecretResult(
            id=self.id,
            name=self.name,
            network_firewall_policy_id=self.network_firewall_policy_id,
            parent_resource_id=self.parent_resource_id,
            source=self.source,
            type=self.type,
            vault_secret_id=self.vault_secret_id,
            version_number=self.version_number)


def get_network_firewall_policy_mapped_secret(name: Optional[str] = None,
                                              network_firewall_policy_id: Optional[str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNetworkFirewallPolicyMappedSecretResult:
    """
    This data source provides details about a specific Network Firewall Policy Mapped Secret resource in Oracle Cloud Infrastructure Network Firewall service.

    Get Mapped Secret by the given name in the context of network firewall policy.


    :param str name: Name of the secret.
    :param str network_firewall_policy_id: Unique Network Firewall Policy identifier
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['networkFirewallPolicyId'] = network_firewall_policy_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:NetworkFirewall/getNetworkFirewallPolicyMappedSecret:getNetworkFirewallPolicyMappedSecret', __args__, opts=opts, typ=GetNetworkFirewallPolicyMappedSecretResult).value

    return AwaitableGetNetworkFirewallPolicyMappedSecretResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        network_firewall_policy_id=pulumi.get(__ret__, 'network_firewall_policy_id'),
        parent_resource_id=pulumi.get(__ret__, 'parent_resource_id'),
        source=pulumi.get(__ret__, 'source'),
        type=pulumi.get(__ret__, 'type'),
        vault_secret_id=pulumi.get(__ret__, 'vault_secret_id'),
        version_number=pulumi.get(__ret__, 'version_number'))


@_utilities.lift_output_func(get_network_firewall_policy_mapped_secret)
def get_network_firewall_policy_mapped_secret_output(name: Optional[pulumi.Input[str]] = None,
                                                     network_firewall_policy_id: Optional[pulumi.Input[str]] = None,
                                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNetworkFirewallPolicyMappedSecretResult]:
    """
    This data source provides details about a specific Network Firewall Policy Mapped Secret resource in Oracle Cloud Infrastructure Network Firewall service.

    Get Mapped Secret by the given name in the context of network firewall policy.


    :param str name: Name of the secret.
    :param str network_firewall_policy_id: Unique Network Firewall Policy identifier
    """
    ...
