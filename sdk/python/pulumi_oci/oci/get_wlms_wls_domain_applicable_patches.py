# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetWlmsWlsDomainApplicablePatchesResult',
    'AwaitableGetWlmsWlsDomainApplicablePatchesResult',
    'get_wlms_wls_domain_applicable_patches',
    'get_wlms_wls_domain_applicable_patches_output',
]

@pulumi.output_type
class GetWlmsWlsDomainApplicablePatchesResult:
    """
    A collection of values returned by getWlmsWlsDomainApplicablePatches.
    """
    def __init__(__self__, applicable_patch_collections=None, filters=None, id=None, wls_domain_id=None):
        if applicable_patch_collections and not isinstance(applicable_patch_collections, list):
            raise TypeError("Expected argument 'applicable_patch_collections' to be a list")
        pulumi.set(__self__, "applicable_patch_collections", applicable_patch_collections)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if wls_domain_id and not isinstance(wls_domain_id, str):
            raise TypeError("Expected argument 'wls_domain_id' to be a str")
        pulumi.set(__self__, "wls_domain_id", wls_domain_id)

    @_builtins.property
    @pulumi.getter(name="applicablePatchCollections")
    def applicable_patch_collections(self) -> Sequence['outputs.GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionResult']:
        """
        The list of applicable_patch_collection.
        """
        return pulumi.get(self, "applicable_patch_collections")

    @_builtins.property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetWlmsWlsDomainApplicablePatchesFilterResult']]:
        return pulumi.get(self, "filters")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="wlsDomainId")
    def wls_domain_id(self) -> _builtins.str:
        return pulumi.get(self, "wls_domain_id")


class AwaitableGetWlmsWlsDomainApplicablePatchesResult(GetWlmsWlsDomainApplicablePatchesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWlmsWlsDomainApplicablePatchesResult(
            applicable_patch_collections=self.applicable_patch_collections,
            filters=self.filters,
            id=self.id,
            wls_domain_id=self.wls_domain_id)


def get_wlms_wls_domain_applicable_patches(filters: Optional[Sequence[Union['GetWlmsWlsDomainApplicablePatchesFilterArgs', 'GetWlmsWlsDomainApplicablePatchesFilterArgsDict']]] = None,
                                           wls_domain_id: Optional[_builtins.str] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWlmsWlsDomainApplicablePatchesResult:
    """
    This data source provides the list of Wls Domain Applicable Patches in Oracle Cloud Infrastructure Wlms service.

    Gets the latest patches that can be installed to the WebLogic domains.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_wls_domain_applicable_patches = oci.oci.get_wlms_wls_domain_applicable_patches(wls_domain_id=test_wls_domain["id"])
    ```


    :param _builtins.str wls_domain_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['wlsDomainId'] = wls_domain_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:oci/getWlmsWlsDomainApplicablePatches:getWlmsWlsDomainApplicablePatches', __args__, opts=opts, typ=GetWlmsWlsDomainApplicablePatchesResult).value

    return AwaitableGetWlmsWlsDomainApplicablePatchesResult(
        applicable_patch_collections=pulumi.get(__ret__, 'applicable_patch_collections'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        wls_domain_id=pulumi.get(__ret__, 'wls_domain_id'))
def get_wlms_wls_domain_applicable_patches_output(filters: Optional[pulumi.Input[Optional[Sequence[Union['GetWlmsWlsDomainApplicablePatchesFilterArgs', 'GetWlmsWlsDomainApplicablePatchesFilterArgsDict']]]]] = None,
                                                  wls_domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetWlmsWlsDomainApplicablePatchesResult]:
    """
    This data source provides the list of Wls Domain Applicable Patches in Oracle Cloud Infrastructure Wlms service.

    Gets the latest patches that can be installed to the WebLogic domains.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_wls_domain_applicable_patches = oci.oci.get_wlms_wls_domain_applicable_patches(wls_domain_id=test_wls_domain["id"])
    ```


    :param _builtins.str wls_domain_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['wlsDomainId'] = wls_domain_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:oci/getWlmsWlsDomainApplicablePatches:getWlmsWlsDomainApplicablePatches', __args__, opts=opts, typ=GetWlmsWlsDomainApplicablePatchesResult)
    return __ret__.apply(lambda __response__: GetWlmsWlsDomainApplicablePatchesResult(
        applicable_patch_collections=pulumi.get(__response__, 'applicable_patch_collections'),
        filters=pulumi.get(__response__, 'filters'),
        id=pulumi.get(__response__, 'id'),
        wls_domain_id=pulumi.get(__response__, 'wls_domain_id')))
