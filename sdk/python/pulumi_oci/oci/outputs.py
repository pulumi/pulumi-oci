# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'ApiaccesscontrolPrivilegedApiControlPrivilegedOperationList',
    'ApiaccesscontrolPrivilegedApiRequestApproverDetail',
    'ApiaccesscontrolPrivilegedApiRequestPrivilegedOperationList',
    'DbmulticloudMultiCloudResourceDiscoveryResource',
    'DbmulticloudOracleDbAzureConnectorArcAgentNode',
    'GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionResult',
    'GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemResult',
    'GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemApiMetadataResult',
    'GetApiaccesscontrolApiMetadataByEntityTypesFilterResult',
    'GetApiaccesscontrolApiMetadatasApiMetadataCollectionResult',
    'GetApiaccesscontrolApiMetadatasApiMetadataCollectionItemResult',
    'GetApiaccesscontrolApiMetadatasFilterResult',
    'GetApiaccesscontrolPrivilegedApiControlPrivilegedOperationListResult',
    'GetApiaccesscontrolPrivilegedApiControlsFilterResult',
    'GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionResult',
    'GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionItemResult',
    'GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionItemPrivilegedOperationListResult',
    'GetApiaccesscontrolPrivilegedApiRequestApproverDetailResult',
    'GetApiaccesscontrolPrivilegedApiRequestPrivilegedOperationListResult',
    'GetApiaccesscontrolPrivilegedApiRequestsFilterResult',
    'GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionResult',
    'GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemResult',
    'GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetailResult',
    'GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationListResult',
    'GetDbmulticloudMultiCloudResourceDiscoveriesFilterResult',
    'GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionResult',
    'GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionItemResult',
    'GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionItemResourceResult',
    'GetDbmulticloudMultiCloudResourceDiscoveryResourceResult',
    'GetDbmulticloudOracleDbAzureBlobContainersFilterResult',
    'GetDbmulticloudOracleDbAzureBlobContainersOracleDbAzureBlobContainerSummaryCollectionResult',
    'GetDbmulticloudOracleDbAzureBlobContainersOracleDbAzureBlobContainerSummaryCollectionItemResult',
    'GetDbmulticloudOracleDbAzureBlobMountsFilterResult',
    'GetDbmulticloudOracleDbAzureBlobMountsOracleDbAzureBlobMountSummaryCollectionResult',
    'GetDbmulticloudOracleDbAzureBlobMountsOracleDbAzureBlobMountSummaryCollectionItemResult',
    'GetDbmulticloudOracleDbAzureConnectorArcAgentNodeResult',
    'GetDbmulticloudOracleDbAzureConnectorsFilterResult',
    'GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionResult',
    'GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionItemResult',
    'GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionItemArcAgentNodeResult',
    'GetDbmulticloudOracleDbAzureKeysFilterResult',
    'GetDbmulticloudOracleDbAzureKeysOracleDbAzureKeySummaryCollectionResult',
    'GetDbmulticloudOracleDbAzureKeysOracleDbAzureKeySummaryCollectionItemResult',
    'GetDbmulticloudOracleDbAzureVaultAssociationsFilterResult',
    'GetDbmulticloudOracleDbAzureVaultAssociationsOracleDbAzureVaultAssociationSummaryCollectionResult',
    'GetDbmulticloudOracleDbAzureVaultAssociationsOracleDbAzureVaultAssociationSummaryCollectionItemResult',
    'GetDbmulticloudOracleDbAzureVaultsFilterResult',
    'GetDbmulticloudOracleDbAzureVaultsOracleDbAzureVaultSummaryCollectionResult',
    'GetDbmulticloudOracleDbAzureVaultsOracleDbAzureVaultSummaryCollectionItemResult',
    'GetWlmsManagedInstanceConfigurationResult',
    'GetWlmsManagedInstanceScanResultsFilterResult',
    'GetWlmsManagedInstanceScanResultsScanResultCollectionResult',
    'GetWlmsManagedInstanceScanResultsScanResultCollectionItemResult',
    'GetWlmsManagedInstanceServerInstalledPatchesFilterResult',
    'GetWlmsManagedInstanceServerInstalledPatchesInstalledPatchCollectionResult',
    'GetWlmsManagedInstanceServerInstalledPatchesInstalledPatchCollectionItemResult',
    'GetWlmsManagedInstanceServersFilterResult',
    'GetWlmsManagedInstanceServersServerCollectionResult',
    'GetWlmsManagedInstanceServersServerCollectionItemResult',
    'GetWlmsManagedInstancesFilterResult',
    'GetWlmsManagedInstancesManagedInstanceCollectionResult',
    'GetWlmsManagedInstancesManagedInstanceCollectionItemResult',
    'GetWlmsManagedInstancesManagedInstanceCollectionItemConfigurationResult',
    'GetWlmsWlsDomainAgreementRecordsAgreementRecordCollectionResult',
    'GetWlmsWlsDomainAgreementRecordsAgreementRecordCollectionItemResult',
    'GetWlmsWlsDomainAgreementRecordsFilterResult',
    'GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionResult',
    'GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItemResult',
    'GetWlmsWlsDomainApplicablePatchesFilterResult',
    'GetWlmsWlsDomainConfigurationResult',
    'GetWlmsWlsDomainScanResultsFilterResult',
    'GetWlmsWlsDomainScanResultsScanResultCollectionResult',
    'GetWlmsWlsDomainScanResultsScanResultCollectionItemResult',
    'GetWlmsWlsDomainServerBackupContentMiddlewareResult',
    'GetWlmsWlsDomainServerBackupContentMiddlewarePatchResult',
    'GetWlmsWlsDomainServerBackupsBackupCollectionResult',
    'GetWlmsWlsDomainServerBackupsBackupCollectionItemResult',
    'GetWlmsWlsDomainServerBackupsFilterResult',
    'GetWlmsWlsDomainServerInstalledPatchesFilterResult',
    'GetWlmsWlsDomainServerInstalledPatchesInstalledPatchCollectionResult',
    'GetWlmsWlsDomainServerInstalledPatchesInstalledPatchCollectionItemResult',
    'GetWlmsWlsDomainServersFilterResult',
    'GetWlmsWlsDomainServersServerCollectionResult',
    'GetWlmsWlsDomainServersServerCollectionItemResult',
    'GetWlmsWlsDomainsFilterResult',
    'GetWlmsWlsDomainsWlsDomainCollectionResult',
    'GetWlmsWlsDomainsWlsDomainCollectionItemResult',
    'GetWlmsWlsDomainsWlsDomainCollectionItemConfigurationResult',
]

@pulumi.output_type
class ApiaccesscontrolPrivilegedApiControlPrivilegedOperationList(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "apiName":
            suggest = "api_name"
        elif key == "attributeNames":
            suggest = "attribute_names"
        elif key == "entityType":
            suggest = "entity_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ApiaccesscontrolPrivilegedApiControlPrivilegedOperationList. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ApiaccesscontrolPrivilegedApiControlPrivilegedOperationList.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ApiaccesscontrolPrivilegedApiControlPrivilegedOperationList.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 api_name: _builtins.str,
                 attribute_names: Optional[Sequence[_builtins.str]] = None,
                 entity_type: Optional[_builtins.str] = None):
        """
        :param _builtins.str api_name: (Updatable) name of the api which needs to be protected.
        :param Sequence[_builtins.str] attribute_names: (Updatable) list of attributes belonging to the above api which needs to be protected.
        :param _builtins.str entity_type: (Updatable) type of the entity which needs to be protected.
        """
        pulumi.set(__self__, "api_name", api_name)
        if attribute_names is not None:
            pulumi.set(__self__, "attribute_names", attribute_names)
        if entity_type is not None:
            pulumi.set(__self__, "entity_type", entity_type)

    @_builtins.property
    @pulumi.getter(name="apiName")
    def api_name(self) -> _builtins.str:
        """
        (Updatable) name of the api which needs to be protected.
        """
        return pulumi.get(self, "api_name")

    @_builtins.property
    @pulumi.getter(name="attributeNames")
    def attribute_names(self) -> Optional[Sequence[_builtins.str]]:
        """
        (Updatable) list of attributes belonging to the above api which needs to be protected.
        """
        return pulumi.get(self, "attribute_names")

    @_builtins.property
    @pulumi.getter(name="entityType")
    def entity_type(self) -> Optional[_builtins.str]:
        """
        (Updatable) type of the entity which needs to be protected.
        """
        return pulumi.get(self, "entity_type")


@pulumi.output_type
class ApiaccesscontrolPrivilegedApiRequestApproverDetail(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "approvalAction":
            suggest = "approval_action"
        elif key == "approvalComment":
            suggest = "approval_comment"
        elif key == "approverId":
            suggest = "approver_id"
        elif key == "timeApprovedForAccess":
            suggest = "time_approved_for_access"
        elif key == "timeOfAuthorization":
            suggest = "time_of_authorization"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ApiaccesscontrolPrivilegedApiRequestApproverDetail. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ApiaccesscontrolPrivilegedApiRequestApproverDetail.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ApiaccesscontrolPrivilegedApiRequestApproverDetail.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 approval_action: Optional[_builtins.str] = None,
                 approval_comment: Optional[_builtins.str] = None,
                 approver_id: Optional[_builtins.str] = None,
                 time_approved_for_access: Optional[_builtins.str] = None,
                 time_of_authorization: Optional[_builtins.str] = None):
        """
        :param _builtins.str approval_action: The action done by the approver.
        :param _builtins.str approval_comment: Comment specified by the approver of the request.
        :param _builtins.str approver_id: The userId of the approver.
        :param _builtins.str time_approved_for_access: Time for when the privilegedApi request should start that is authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_of_authorization: Time when the privilegedApi request was authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        """
        if approval_action is not None:
            pulumi.set(__self__, "approval_action", approval_action)
        if approval_comment is not None:
            pulumi.set(__self__, "approval_comment", approval_comment)
        if approver_id is not None:
            pulumi.set(__self__, "approver_id", approver_id)
        if time_approved_for_access is not None:
            pulumi.set(__self__, "time_approved_for_access", time_approved_for_access)
        if time_of_authorization is not None:
            pulumi.set(__self__, "time_of_authorization", time_of_authorization)

    @_builtins.property
    @pulumi.getter(name="approvalAction")
    def approval_action(self) -> Optional[_builtins.str]:
        """
        The action done by the approver.
        """
        return pulumi.get(self, "approval_action")

    @_builtins.property
    @pulumi.getter(name="approvalComment")
    def approval_comment(self) -> Optional[_builtins.str]:
        """
        Comment specified by the approver of the request.
        """
        return pulumi.get(self, "approval_comment")

    @_builtins.property
    @pulumi.getter(name="approverId")
    def approver_id(self) -> Optional[_builtins.str]:
        """
        The userId of the approver.
        """
        return pulumi.get(self, "approver_id")

    @_builtins.property
    @pulumi.getter(name="timeApprovedForAccess")
    def time_approved_for_access(self) -> Optional[_builtins.str]:
        """
        Time for when the privilegedApi request should start that is authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_approved_for_access")

    @_builtins.property
    @pulumi.getter(name="timeOfAuthorization")
    def time_of_authorization(self) -> Optional[_builtins.str]:
        """
        Time when the privilegedApi request was authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_of_authorization")


@pulumi.output_type
class ApiaccesscontrolPrivilegedApiRequestPrivilegedOperationList(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "apiName":
            suggest = "api_name"
        elif key == "attributeNames":
            suggest = "attribute_names"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ApiaccesscontrolPrivilegedApiRequestPrivilegedOperationList. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ApiaccesscontrolPrivilegedApiRequestPrivilegedOperationList.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ApiaccesscontrolPrivilegedApiRequestPrivilegedOperationList.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 api_name: _builtins.str,
                 attribute_names: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str api_name: name of the api which needs to be protected.
        :param Sequence[_builtins.str] attribute_names: list of attributes belonging to the above api which needs to be protected.
        """
        pulumi.set(__self__, "api_name", api_name)
        if attribute_names is not None:
            pulumi.set(__self__, "attribute_names", attribute_names)

    @_builtins.property
    @pulumi.getter(name="apiName")
    def api_name(self) -> _builtins.str:
        """
        name of the api which needs to be protected.
        """
        return pulumi.get(self, "api_name")

    @_builtins.property
    @pulumi.getter(name="attributeNames")
    def attribute_names(self) -> Optional[Sequence[_builtins.str]]:
        """
        list of attributes belonging to the above api which needs to be protected.
        """
        return pulumi.get(self, "attribute_names")


@pulumi.output_type
class DbmulticloudMultiCloudResourceDiscoveryResource(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "resourceGroup":
            suggest = "resource_group"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DbmulticloudMultiCloudResourceDiscoveryResource. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DbmulticloudMultiCloudResourceDiscoveryResource.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DbmulticloudMultiCloudResourceDiscoveryResource.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 id: Optional[_builtins.str] = None,
                 location: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None,
                 properties: Optional[Mapping[str, _builtins.str]] = None,
                 resource_group: Optional[_builtins.str] = None,
                 type: Optional[_builtins.str] = None):
        """
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Discovered Resource.
        :param _builtins.str location: Discovered Resource Location.
        :param _builtins.str name: Discovered Resource Name.
        :param Mapping[str, _builtins.str] properties: Discovered Resource's properties.
        :param _builtins.str resource_group: Discovered Resource Group Name.
        :param _builtins.str type: Discovered Resource Type.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if properties is not None:
            pulumi.set(__self__, "properties", properties)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Discovered Resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def location(self) -> Optional[_builtins.str]:
        """
        Discovered Resource Location.
        """
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        Discovered Resource Name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def properties(self) -> Optional[Mapping[str, _builtins.str]]:
        """
        Discovered Resource's properties.
        """
        return pulumi.get(self, "properties")

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[_builtins.str]:
        """
        Discovered Resource Group Name.
        """
        return pulumi.get(self, "resource_group")

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[_builtins.str]:
        """
        Discovered Resource Type.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class DbmulticloudOracleDbAzureConnectorArcAgentNode(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "currentArcAgentVersion":
            suggest = "current_arc_agent_version"
        elif key == "hostId":
            suggest = "host_id"
        elif key == "hostName":
            suggest = "host_name"
        elif key == "timeLastChecked":
            suggest = "time_last_checked"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DbmulticloudOracleDbAzureConnectorArcAgentNode. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DbmulticloudOracleDbAzureConnectorArcAgentNode.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DbmulticloudOracleDbAzureConnectorArcAgentNode.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 current_arc_agent_version: Optional[_builtins.str] = None,
                 host_id: Optional[_builtins.str] = None,
                 host_name: Optional[_builtins.str] = None,
                 status: Optional[_builtins.str] = None,
                 time_last_checked: Optional[_builtins.str] = None):
        """
        :param _builtins.str current_arc_agent_version: Current Arc Agent Version installed on this node of VM Cluster.
        :param _builtins.str host_id: Host ID.
        :param _builtins.str host_name: Host Name or Azure Arc Agent Name.
        :param _builtins.str status: The current status of the Azure Arc Agent Resource.
        :param _builtins.str time_last_checked: time when the Azure Arc Agent's status was checked [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        if current_arc_agent_version is not None:
            pulumi.set(__self__, "current_arc_agent_version", current_arc_agent_version)
        if host_id is not None:
            pulumi.set(__self__, "host_id", host_id)
        if host_name is not None:
            pulumi.set(__self__, "host_name", host_name)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if time_last_checked is not None:
            pulumi.set(__self__, "time_last_checked", time_last_checked)

    @_builtins.property
    @pulumi.getter(name="currentArcAgentVersion")
    def current_arc_agent_version(self) -> Optional[_builtins.str]:
        """
        Current Arc Agent Version installed on this node of VM Cluster.
        """
        return pulumi.get(self, "current_arc_agent_version")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional[_builtins.str]:
        """
        Host ID.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[_builtins.str]:
        """
        Host Name or Azure Arc Agent Name.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The current status of the Azure Arc Agent Resource.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="timeLastChecked")
    def time_last_checked(self) -> Optional[_builtins.str]:
        """
        time when the Azure Arc Agent's status was checked [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_last_checked")


@pulumi.output_type
class GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemResult']):
        """
        :param Sequence['GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemArgs'] items: List of apiMetadataByEntityTypeSummary.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemResult']:
        """
        List of apiMetadataByEntityTypeSummary.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemResult(dict):
    def __init__(__self__, *,
                 api_metadatas: Sequence['outputs.GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemApiMetadataResult'],
                 defined_tags: Mapping[str, _builtins.str],
                 entity_type: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 system_tags: Mapping[str, _builtins.str]):
        """
        :param Sequence['GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemApiMetadataArgs'] api_metadatas: List of apiMetadataSummary.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str entity_type: The entity Type to which the Api belongs to.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        pulumi.set(__self__, "api_metadatas", api_metadatas)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "entity_type", entity_type)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "system_tags", system_tags)

    @_builtins.property
    @pulumi.getter(name="apiMetadatas")
    def api_metadatas(self) -> Sequence['outputs.GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemApiMetadataResult']:
        """
        List of apiMetadataSummary.
        """
        return pulumi.get(self, "api_metadatas")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="entityType")
    def entity_type(self) -> _builtins.str:
        """
        The entity Type to which the Api belongs to.
        """
        return pulumi.get(self, "entity_type")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")


@pulumi.output_type
class GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionItemApiMetadataResult(dict):
    def __init__(__self__, *,
                 api_name: _builtins.str,
                 attributes: Sequence[_builtins.str],
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 entity_type: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 lifecycle_details: _builtins.str,
                 service_name: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param _builtins.str api_name: The name of the api to execute the api request.
        :param Sequence[_builtins.str] attributes: List of the fields that is use while calling post or put for the data.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: A filter to return only resources that match the given display name exactly.
        :param _builtins.str entity_type: The entity Type to which the Api belongs to.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ApiDetail.
        :param _builtins.str lifecycle_details: A message that describes the current state of the ApiMetadata in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        :param _builtins.str service_name: The service Name to which the Api belongs to.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: The date and time the PrivilegedApiControl was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_updated: The date and time the PrivilegedApiControl was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "attributes", attributes)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "entity_type", entity_type)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        pulumi.set(__self__, "service_name", service_name)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="apiName")
    def api_name(self) -> _builtins.str:
        """
        The name of the api to execute the api request.
        """
        return pulumi.get(self, "api_name")

    @_builtins.property
    @pulumi.getter
    def attributes(self) -> Sequence[_builtins.str]:
        """
        List of the fields that is use while calling post or put for the data.
        """
        return pulumi.get(self, "attributes")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the given display name exactly.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="entityType")
    def entity_type(self) -> _builtins.str:
        """
        The entity Type to which the Api belongs to.
        """
        return pulumi.get(self, "entity_type")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ApiDetail.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> _builtins.str:
        """
        A message that describes the current state of the ApiMetadata in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        """
        return pulumi.get(self, "lifecycle_details")

    @_builtins.property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> _builtins.str:
        """
        The service Name to which the Api belongs to.
        """
        return pulumi.get(self, "service_name")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the PrivilegedApiControl was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        The date and time the PrivilegedApiControl was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetApiaccesscontrolApiMetadataByEntityTypesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetApiaccesscontrolApiMetadatasApiMetadataCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetApiaccesscontrolApiMetadatasApiMetadataCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetApiaccesscontrolApiMetadatasApiMetadataCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetApiaccesscontrolApiMetadatasApiMetadataCollectionItemResult(dict):
    def __init__(__self__, *,
                 api_name: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 entity_type: _builtins.str,
                 fields: Sequence[_builtins.str],
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 lifecycle_details: _builtins.str,
                 path: _builtins.str,
                 service_name: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_deleted: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param _builtins.str api_name: The name of the api to execute the api request.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: A filter to return only resources that match the given display name exactly.
        :param _builtins.str entity_type: ResourceType to which the apiMetadata belongs to.
        :param Sequence[_builtins.str] fields: List of the fields that is use while calling post or put for the data.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ApiDetail.
        :param _builtins.str lifecycle_details: A message that describes the current state of the ApiMetadata in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        :param _builtins.str path: rest path of the api.
        :param _builtins.str service_name: The service Name to which the api belongs to.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: The date and time the PrivilegedApiControl was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_deleted: The date and time the PrivilegedApiControl was marked for delete, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_updated: The date and time the PrivilegedApiControl was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "entity_type", entity_type)
        pulumi.set(__self__, "fields", fields)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "service_name", service_name)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_deleted", time_deleted)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="apiName")
    def api_name(self) -> _builtins.str:
        """
        The name of the api to execute the api request.
        """
        return pulumi.get(self, "api_name")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the given display name exactly.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="entityType")
    def entity_type(self) -> _builtins.str:
        """
        ResourceType to which the apiMetadata belongs to.
        """
        return pulumi.get(self, "entity_type")

    @_builtins.property
    @pulumi.getter
    def fields(self) -> Sequence[_builtins.str]:
        """
        List of the fields that is use while calling post or put for the data.
        """
        return pulumi.get(self, "fields")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ApiDetail.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> _builtins.str:
        """
        A message that describes the current state of the ApiMetadata in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        """
        return pulumi.get(self, "lifecycle_details")

    @_builtins.property
    @pulumi.getter
    def path(self) -> _builtins.str:
        """
        rest path of the api.
        """
        return pulumi.get(self, "path")

    @_builtins.property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> _builtins.str:
        """
        The service Name to which the api belongs to.
        """
        return pulumi.get(self, "service_name")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the PrivilegedApiControl was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeDeleted")
    def time_deleted(self) -> _builtins.str:
        """
        The date and time the PrivilegedApiControl was marked for delete, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_deleted")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        The date and time the PrivilegedApiControl was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetApiaccesscontrolApiMetadatasFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiControlPrivilegedOperationListResult(dict):
    def __init__(__self__, *,
                 api_name: _builtins.str,
                 attribute_names: Sequence[_builtins.str],
                 entity_type: _builtins.str):
        """
        :param _builtins.str api_name: name of the api which needs to be protected.
        :param Sequence[_builtins.str] attribute_names: list of attributes belonging to the above api which needs to be protected.
        :param _builtins.str entity_type: type of the entity which needs to be protected.
        """
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "attribute_names", attribute_names)
        pulumi.set(__self__, "entity_type", entity_type)

    @_builtins.property
    @pulumi.getter(name="apiName")
    def api_name(self) -> _builtins.str:
        """
        name of the api which needs to be protected.
        """
        return pulumi.get(self, "api_name")

    @_builtins.property
    @pulumi.getter(name="attributeNames")
    def attribute_names(self) -> Sequence[_builtins.str]:
        """
        list of attributes belonging to the above api which needs to be protected.
        """
        return pulumi.get(self, "attribute_names")

    @_builtins.property
    @pulumi.getter(name="entityType")
    def entity_type(self) -> _builtins.str:
        """
        type of the entity which needs to be protected.
        """
        return pulumi.get(self, "entity_type")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiControlsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionItemResult(dict):
    def __init__(__self__, *,
                 approver_group_id_lists: Sequence[_builtins.str],
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 description: _builtins.str,
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 lifecycle_details: _builtins.str,
                 notification_topic_id: _builtins.str,
                 number_of_approvers: _builtins.int,
                 privileged_operation_lists: Sequence['outputs.GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionItemPrivilegedOperationListResult'],
                 resource_type: _builtins.str,
                 resources: Sequence[_builtins.str],
                 state: _builtins.str,
                 state_details: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_deleted: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param Sequence[_builtins.str] approver_group_id_lists: List of IAM user group ids who can approve an privilegedApi request associated with a target resource under the governance of this operator control.
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str description: Description of privilegedApi control.
        :param _builtins.str display_name: A filter to return only resources that match the given display name exactly.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
        :param _builtins.str lifecycle_details: A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        :param _builtins.str notification_topic_id: The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Privileged Api Control.
        :param _builtins.int number_of_approvers: Number of approvers required to approve an privilegedApi request.
        :param Sequence['GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionItemPrivilegedOperationListArgs'] privileged_operation_lists: List of privileged operations/apis. These operations/apis will be treaated as secured, once enabled by the Privileged API Managment for a resource. Any of these operations, if needs to be executed, needs to be raised as a PrivilegedApi Request which needs to be approved by customers or it can be pre-approved.
        :param _builtins.str resource_type: A filter to return only lists of resources that match the entire given service type.
        :param Sequence[_builtins.str] resources: contains Resource details
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param _builtins.str state_details: A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: The date and time the PrivilegedApiControl was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_deleted: The date and time the PrivilegedApiControl was marked for delete, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_updated: The date and time the PrivilegedApiControl was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        pulumi.set(__self__, "approver_group_id_lists", approver_group_id_lists)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        pulumi.set(__self__, "notification_topic_id", notification_topic_id)
        pulumi.set(__self__, "number_of_approvers", number_of_approvers)
        pulumi.set(__self__, "privileged_operation_lists", privileged_operation_lists)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "resources", resources)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "state_details", state_details)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_deleted", time_deleted)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="approverGroupIdLists")
    def approver_group_id_lists(self) -> Sequence[_builtins.str]:
        """
        List of IAM user group ids who can approve an privilegedApi request associated with a target resource under the governance of this operator control.
        """
        return pulumi.get(self, "approver_group_id_lists")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        Description of privilegedApi control.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the given display name exactly.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> _builtins.str:
        """
        A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        """
        return pulumi.get(self, "lifecycle_details")

    @_builtins.property
    @pulumi.getter(name="notificationTopicId")
    def notification_topic_id(self) -> _builtins.str:
        """
        The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Privileged Api Control.
        """
        return pulumi.get(self, "notification_topic_id")

    @_builtins.property
    @pulumi.getter(name="numberOfApprovers")
    def number_of_approvers(self) -> _builtins.int:
        """
        Number of approvers required to approve an privilegedApi request.
        """
        return pulumi.get(self, "number_of_approvers")

    @_builtins.property
    @pulumi.getter(name="privilegedOperationLists")
    def privileged_operation_lists(self) -> Sequence['outputs.GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionItemPrivilegedOperationListResult']:
        """
        List of privileged operations/apis. These operations/apis will be treaated as secured, once enabled by the Privileged API Managment for a resource. Any of these operations, if needs to be executed, needs to be raised as a PrivilegedApi Request which needs to be approved by customers or it can be pre-approved.
        """
        return pulumi.get(self, "privileged_operation_lists")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> _builtins.str:
        """
        A filter to return only lists of resources that match the entire given service type.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def resources(self) -> Sequence[_builtins.str]:
        """
        contains Resource details
        """
        return pulumi.get(self, "resources")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="stateDetails")
    def state_details(self) -> _builtins.str:
        """
        A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        """
        return pulumi.get(self, "state_details")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the PrivilegedApiControl was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeDeleted")
    def time_deleted(self) -> _builtins.str:
        """
        The date and time the PrivilegedApiControl was marked for delete, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_deleted")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        The date and time the PrivilegedApiControl was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionItemPrivilegedOperationListResult(dict):
    def __init__(__self__, *,
                 api_name: _builtins.str,
                 attribute_names: Sequence[_builtins.str],
                 entity_type: _builtins.str):
        """
        :param _builtins.str api_name: name of the api which needs to be protected.
        :param Sequence[_builtins.str] attribute_names: list of attributes belonging to the above api which needs to be protected.
        :param _builtins.str entity_type: type of the entity which needs to be protected.
        """
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "attribute_names", attribute_names)
        pulumi.set(__self__, "entity_type", entity_type)

    @_builtins.property
    @pulumi.getter(name="apiName")
    def api_name(self) -> _builtins.str:
        """
        name of the api which needs to be protected.
        """
        return pulumi.get(self, "api_name")

    @_builtins.property
    @pulumi.getter(name="attributeNames")
    def attribute_names(self) -> Sequence[_builtins.str]:
        """
        list of attributes belonging to the above api which needs to be protected.
        """
        return pulumi.get(self, "attribute_names")

    @_builtins.property
    @pulumi.getter(name="entityType")
    def entity_type(self) -> _builtins.str:
        """
        type of the entity which needs to be protected.
        """
        return pulumi.get(self, "entity_type")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiRequestApproverDetailResult(dict):
    def __init__(__self__, *,
                 approval_action: _builtins.str,
                 approval_comment: _builtins.str,
                 approver_id: _builtins.str,
                 time_approved_for_access: _builtins.str,
                 time_of_authorization: _builtins.str):
        """
        :param _builtins.str approval_action: The action done by the approver.
        :param _builtins.str approval_comment: Comment specified by the approver of the request.
        :param _builtins.str approver_id: The userId of the approver.
        :param _builtins.str time_approved_for_access: Time for when the privilegedApi request should start that is authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_of_authorization: Time when the privilegedApi request was authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "approval_action", approval_action)
        pulumi.set(__self__, "approval_comment", approval_comment)
        pulumi.set(__self__, "approver_id", approver_id)
        pulumi.set(__self__, "time_approved_for_access", time_approved_for_access)
        pulumi.set(__self__, "time_of_authorization", time_of_authorization)

    @_builtins.property
    @pulumi.getter(name="approvalAction")
    def approval_action(self) -> _builtins.str:
        """
        The action done by the approver.
        """
        return pulumi.get(self, "approval_action")

    @_builtins.property
    @pulumi.getter(name="approvalComment")
    def approval_comment(self) -> _builtins.str:
        """
        Comment specified by the approver of the request.
        """
        return pulumi.get(self, "approval_comment")

    @_builtins.property
    @pulumi.getter(name="approverId")
    def approver_id(self) -> _builtins.str:
        """
        The userId of the approver.
        """
        return pulumi.get(self, "approver_id")

    @_builtins.property
    @pulumi.getter(name="timeApprovedForAccess")
    def time_approved_for_access(self) -> _builtins.str:
        """
        Time for when the privilegedApi request should start that is authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_approved_for_access")

    @_builtins.property
    @pulumi.getter(name="timeOfAuthorization")
    def time_of_authorization(self) -> _builtins.str:
        """
        Time when the privilegedApi request was authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_of_authorization")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiRequestPrivilegedOperationListResult(dict):
    def __init__(__self__, *,
                 api_name: _builtins.str,
                 attribute_names: Sequence[_builtins.str]):
        """
        :param _builtins.str api_name: name of the api which needs to be protected.
        :param Sequence[_builtins.str] attribute_names: list of attributes belonging to the above api which needs to be protected.
        """
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "attribute_names", attribute_names)

    @_builtins.property
    @pulumi.getter(name="apiName")
    def api_name(self) -> _builtins.str:
        """
        name of the api which needs to be protected.
        """
        return pulumi.get(self, "api_name")

    @_builtins.property
    @pulumi.getter(name="attributeNames")
    def attribute_names(self) -> Sequence[_builtins.str]:
        """
        list of attributes belonging to the above api which needs to be protected.
        """
        return pulumi.get(self, "attribute_names")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiRequestsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemResult(dict):
    def __init__(__self__, *,
                 approver_details: Sequence['outputs.GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetailResult'],
                 closure_comment: _builtins.str,
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 duration_in_hrs: _builtins.int,
                 entity_type: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 lifecycle_details: _builtins.str,
                 notification_topic_id: _builtins.str,
                 number_of_approvers_required: _builtins.int,
                 privileged_api_control_id: _builtins.str,
                 privileged_api_control_name: _builtins.str,
                 privileged_operation_lists: Sequence['outputs.GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationListResult'],
                 reason_detail: _builtins.str,
                 reason_summary: _builtins.str,
                 request_id: _builtins.str,
                 requested_bies: Sequence[_builtins.str],
                 resource_id: _builtins.str,
                 resource_name: _builtins.str,
                 resource_type: _builtins.str,
                 severity: _builtins.str,
                 state: _builtins.str,
                 state_details: _builtins.str,
                 sub_resource_name_lists: Sequence[_builtins.str],
                 system_tags: Mapping[str, _builtins.str],
                 ticket_numbers: Sequence[_builtins.str],
                 time_created: _builtins.str,
                 time_requested_for_future_access: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param Sequence['GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetailArgs'] approver_details: Contains the approver details who have approved the privilegedApi Request during the initial request.
        :param _builtins.str closure_comment: The comment entered by the operator while closing the request.
        :param _builtins.str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: A filter to return only resources that match the given display name exactly.
        :param _builtins.int duration_in_hrs: Duration in hours for which access is sought on the target resource.
        :param _builtins.str entity_type: entityType of resource for which the AccessRequest is applicable
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiRequest.
        :param _builtins.str lifecycle_details: more in detail about the lifeCycleState.
        :param _builtins.str notification_topic_id: The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this privileged api request.
        :param _builtins.int number_of_approvers_required: Number of approvers required to approve an privilegedApi request.
        :param _builtins.str privileged_api_control_id: The OCID of the privilegedApi control governing the target resource.
        :param _builtins.str privileged_api_control_name: Name of the privilegedApi control governing the target resource.
        :param Sequence['GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationListArgs'] privileged_operation_lists: List of api names, attributes for which approval is sought by the user.
        :param _builtins.str reason_detail: Reason in Detail for which the operator is requesting access on the target resource.
        :param _builtins.str reason_summary: Summary comment by the operator creating the access request.
        :param _builtins.str request_id: This is an automatic identifier generated by the system which is easier for human comprehension.
        :param Sequence[_builtins.str] requested_bies: List of Users who has created this privilegedApiRequest.
        :param _builtins.str resource_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource .
        :param _builtins.str resource_name: resourceName for which the PrivilegedApiRequest is applicable
        :param _builtins.str resource_type: A filter to return only lists of resources that match the entire given service type.
        :param _builtins.str severity: Priority assigned to the access request by the operator
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param _builtins.str state_details: A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        :param Sequence[_builtins.str] sub_resource_name_lists: The subresource names requested for approval.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param Sequence[_builtins.str] ticket_numbers: A list of ticket numbers related to this Privileged Api Access Request, e.g. Service Request (SR) number and JIRA ticket number.
        :param _builtins.str time_created: Time when the privilegedApi request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_requested_for_future_access: Time in future when the user for the privilegedApi request needs to be created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_updated: Time when the privilegedApi request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "approver_details", approver_details)
        pulumi.set(__self__, "closure_comment", closure_comment)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "duration_in_hrs", duration_in_hrs)
        pulumi.set(__self__, "entity_type", entity_type)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        pulumi.set(__self__, "notification_topic_id", notification_topic_id)
        pulumi.set(__self__, "number_of_approvers_required", number_of_approvers_required)
        pulumi.set(__self__, "privileged_api_control_id", privileged_api_control_id)
        pulumi.set(__self__, "privileged_api_control_name", privileged_api_control_name)
        pulumi.set(__self__, "privileged_operation_lists", privileged_operation_lists)
        pulumi.set(__self__, "reason_detail", reason_detail)
        pulumi.set(__self__, "reason_summary", reason_summary)
        pulumi.set(__self__, "request_id", request_id)
        pulumi.set(__self__, "requested_bies", requested_bies)
        pulumi.set(__self__, "resource_id", resource_id)
        pulumi.set(__self__, "resource_name", resource_name)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "severity", severity)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "state_details", state_details)
        pulumi.set(__self__, "sub_resource_name_lists", sub_resource_name_lists)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "ticket_numbers", ticket_numbers)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_requested_for_future_access", time_requested_for_future_access)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="approverDetails")
    def approver_details(self) -> Sequence['outputs.GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetailResult']:
        """
        Contains the approver details who have approved the privilegedApi Request during the initial request.
        """
        return pulumi.get(self, "approver_details")

    @_builtins.property
    @pulumi.getter(name="closureComment")
    def closure_comment(self) -> _builtins.str:
        """
        The comment entered by the operator while closing the request.
        """
        return pulumi.get(self, "closure_comment")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return only resources that match the given display name exactly.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="durationInHrs")
    def duration_in_hrs(self) -> _builtins.int:
        """
        Duration in hours for which access is sought on the target resource.
        """
        return pulumi.get(self, "duration_in_hrs")

    @_builtins.property
    @pulumi.getter(name="entityType")
    def entity_type(self) -> _builtins.str:
        """
        entityType of resource for which the AccessRequest is applicable
        """
        return pulumi.get(self, "entity_type")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiRequest.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> _builtins.str:
        """
        more in detail about the lifeCycleState.
        """
        return pulumi.get(self, "lifecycle_details")

    @_builtins.property
    @pulumi.getter(name="notificationTopicId")
    def notification_topic_id(self) -> _builtins.str:
        """
        The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this privileged api request.
        """
        return pulumi.get(self, "notification_topic_id")

    @_builtins.property
    @pulumi.getter(name="numberOfApproversRequired")
    def number_of_approvers_required(self) -> _builtins.int:
        """
        Number of approvers required to approve an privilegedApi request.
        """
        return pulumi.get(self, "number_of_approvers_required")

    @_builtins.property
    @pulumi.getter(name="privilegedApiControlId")
    def privileged_api_control_id(self) -> _builtins.str:
        """
        The OCID of the privilegedApi control governing the target resource.
        """
        return pulumi.get(self, "privileged_api_control_id")

    @_builtins.property
    @pulumi.getter(name="privilegedApiControlName")
    def privileged_api_control_name(self) -> _builtins.str:
        """
        Name of the privilegedApi control governing the target resource.
        """
        return pulumi.get(self, "privileged_api_control_name")

    @_builtins.property
    @pulumi.getter(name="privilegedOperationLists")
    def privileged_operation_lists(self) -> Sequence['outputs.GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationListResult']:
        """
        List of api names, attributes for which approval is sought by the user.
        """
        return pulumi.get(self, "privileged_operation_lists")

    @_builtins.property
    @pulumi.getter(name="reasonDetail")
    def reason_detail(self) -> _builtins.str:
        """
        Reason in Detail for which the operator is requesting access on the target resource.
        """
        return pulumi.get(self, "reason_detail")

    @_builtins.property
    @pulumi.getter(name="reasonSummary")
    def reason_summary(self) -> _builtins.str:
        """
        Summary comment by the operator creating the access request.
        """
        return pulumi.get(self, "reason_summary")

    @_builtins.property
    @pulumi.getter(name="requestId")
    def request_id(self) -> _builtins.str:
        """
        This is an automatic identifier generated by the system which is easier for human comprehension.
        """
        return pulumi.get(self, "request_id")

    @_builtins.property
    @pulumi.getter(name="requestedBies")
    def requested_bies(self) -> Sequence[_builtins.str]:
        """
        List of Users who has created this privilegedApiRequest.
        """
        return pulumi.get(self, "requested_bies")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource .
        """
        return pulumi.get(self, "resource_id")

    @_builtins.property
    @pulumi.getter(name="resourceName")
    def resource_name(self) -> _builtins.str:
        """
        resourceName for which the PrivilegedApiRequest is applicable
        """
        return pulumi.get(self, "resource_name")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> _builtins.str:
        """
        A filter to return only lists of resources that match the entire given service type.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def severity(self) -> _builtins.str:
        """
        Priority assigned to the access request by the operator
        """
        return pulumi.get(self, "severity")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="stateDetails")
    def state_details(self) -> _builtins.str:
        """
        A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        """
        return pulumi.get(self, "state_details")

    @_builtins.property
    @pulumi.getter(name="subResourceNameLists")
    def sub_resource_name_lists(self) -> Sequence[_builtins.str]:
        """
        The subresource names requested for approval.
        """
        return pulumi.get(self, "sub_resource_name_lists")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="ticketNumbers")
    def ticket_numbers(self) -> Sequence[_builtins.str]:
        """
        A list of ticket numbers related to this Privileged Api Access Request, e.g. Service Request (SR) number and JIRA ticket number.
        """
        return pulumi.get(self, "ticket_numbers")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        Time when the privilegedApi request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeRequestedForFutureAccess")
    def time_requested_for_future_access(self) -> _builtins.str:
        """
        Time in future when the user for the privilegedApi request needs to be created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_requested_for_future_access")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        Time when the privilegedApi request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetailResult(dict):
    def __init__(__self__, *,
                 approval_action: _builtins.str,
                 approval_comment: _builtins.str,
                 approver_id: _builtins.str,
                 time_approved_for_access: _builtins.str,
                 time_of_authorization: _builtins.str):
        """
        :param _builtins.str approval_action: The action done by the approver.
        :param _builtins.str approval_comment: Comment specified by the approver of the request.
        :param _builtins.str approver_id: The userId of the approver.
        :param _builtins.str time_approved_for_access: Time for when the privilegedApi request should start that is authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_of_authorization: Time when the privilegedApi request was authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "approval_action", approval_action)
        pulumi.set(__self__, "approval_comment", approval_comment)
        pulumi.set(__self__, "approver_id", approver_id)
        pulumi.set(__self__, "time_approved_for_access", time_approved_for_access)
        pulumi.set(__self__, "time_of_authorization", time_of_authorization)

    @_builtins.property
    @pulumi.getter(name="approvalAction")
    def approval_action(self) -> _builtins.str:
        """
        The action done by the approver.
        """
        return pulumi.get(self, "approval_action")

    @_builtins.property
    @pulumi.getter(name="approvalComment")
    def approval_comment(self) -> _builtins.str:
        """
        Comment specified by the approver of the request.
        """
        return pulumi.get(self, "approval_comment")

    @_builtins.property
    @pulumi.getter(name="approverId")
    def approver_id(self) -> _builtins.str:
        """
        The userId of the approver.
        """
        return pulumi.get(self, "approver_id")

    @_builtins.property
    @pulumi.getter(name="timeApprovedForAccess")
    def time_approved_for_access(self) -> _builtins.str:
        """
        Time for when the privilegedApi request should start that is authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_approved_for_access")

    @_builtins.property
    @pulumi.getter(name="timeOfAuthorization")
    def time_of_authorization(self) -> _builtins.str:
        """
        Time when the privilegedApi request was authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_of_authorization")


@pulumi.output_type
class GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationListResult(dict):
    def __init__(__self__, *,
                 api_name: _builtins.str,
                 attribute_names: Sequence[_builtins.str]):
        """
        :param _builtins.str api_name: name of the api which needs to be protected.
        :param Sequence[_builtins.str] attribute_names: list of attributes belonging to the above api which needs to be protected.
        """
        pulumi.set(__self__, "api_name", api_name)
        pulumi.set(__self__, "attribute_names", attribute_names)

    @_builtins.property
    @pulumi.getter(name="apiName")
    def api_name(self) -> _builtins.str:
        """
        name of the api which needs to be protected.
        """
        return pulumi.get(self, "api_name")

    @_builtins.property
    @pulumi.getter(name="attributeNames")
    def attribute_names(self) -> Sequence[_builtins.str]:
        """
        list of attributes belonging to the above api which needs to be protected.
        """
        return pulumi.get(self, "attribute_names")


@pulumi.output_type
class GetDbmulticloudMultiCloudResourceDiscoveriesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        """
        :param _builtins.str name: Discovered Resource Name.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Discovered Resource Name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 last_modification: _builtins.str,
                 lifecycle_state_details: _builtins.str,
                 oracle_db_connector_id: _builtins.str,
                 resource_type: _builtins.str,
                 resources: Sequence['outputs.GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionItemResourceResult'],
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param _builtins.str compartment_id: The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: Display Name of the Multi Cloud Discovery Resource.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Discovered Resource.
        :param _builtins.str last_modification: Description of the latest modification of the Multi Cloud Discovery Resource.
        :param _builtins.str lifecycle_state_details: Description of the current lifecycle state in more detail.
        :param _builtins.str oracle_db_connector_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Connector Resource.
        :param _builtins.str resource_type: The type of Multi Cloud Resource.
        :param Sequence['GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionItemResourceArgs'] resources: List of All Discovered resources.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: Time when the Multi Cloud Discovery Resource was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_updated: Time when the Multi Cloud Discovery Resource was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_modification", last_modification)
        pulumi.set(__self__, "lifecycle_state_details", lifecycle_state_details)
        pulumi.set(__self__, "oracle_db_connector_id", oracle_db_connector_id)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "resources", resources)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        Display Name of the Multi Cloud Discovery Resource.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Discovered Resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastModification")
    def last_modification(self) -> _builtins.str:
        """
        Description of the latest modification of the Multi Cloud Discovery Resource.
        """
        return pulumi.get(self, "last_modification")

    @_builtins.property
    @pulumi.getter(name="lifecycleStateDetails")
    def lifecycle_state_details(self) -> _builtins.str:
        """
        Description of the current lifecycle state in more detail.
        """
        return pulumi.get(self, "lifecycle_state_details")

    @_builtins.property
    @pulumi.getter(name="oracleDbConnectorId")
    def oracle_db_connector_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Connector Resource.
        """
        return pulumi.get(self, "oracle_db_connector_id")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> _builtins.str:
        """
        The type of Multi Cloud Resource.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def resources(self) -> Sequence['outputs.GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionItemResourceResult']:
        """
        List of All Discovered resources.
        """
        return pulumi.get(self, "resources")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        Time when the Multi Cloud Discovery Resource was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        Time when the Multi Cloud Discovery Resource was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionItemResourceResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 location: _builtins.str,
                 name: _builtins.str,
                 properties: Mapping[str, _builtins.str],
                 resource_group: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Discovered Resource.
        :param _builtins.str location: Discovered Resource Location.
        :param _builtins.str name: Discovered Resource Name.
        :param Mapping[str, _builtins.str] properties: Discovered Resource's properties.
        :param _builtins.str resource_group: Discovered Resource Group Name.
        :param _builtins.str type: Discovered Resource Type.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "location", location)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "properties", properties)
        pulumi.set(__self__, "resource_group", resource_group)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Discovered Resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def location(self) -> _builtins.str:
        """
        Discovered Resource Location.
        """
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Discovered Resource Name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def properties(self) -> Mapping[str, _builtins.str]:
        """
        Discovered Resource's properties.
        """
        return pulumi.get(self, "properties")

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> _builtins.str:
        """
        Discovered Resource Group Name.
        """
        return pulumi.get(self, "resource_group")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        Discovered Resource Type.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDbmulticloudMultiCloudResourceDiscoveryResourceResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 location: _builtins.str,
                 name: _builtins.str,
                 properties: Mapping[str, _builtins.str],
                 resource_group: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Discovered Resource.
        :param _builtins.str location: Discovered Resource Location.
        :param _builtins.str name: Discovered Resource Name.
        :param Mapping[str, _builtins.str] properties: Discovered Resource's properties.
        :param _builtins.str resource_group: Discovered Resource Group Name.
        :param _builtins.str type: Discovered Resource Type.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "location", location)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "properties", properties)
        pulumi.set(__self__, "resource_group", resource_group)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Discovered Resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def location(self) -> _builtins.str:
        """
        Discovered Resource Location.
        """
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Discovered Resource Name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def properties(self) -> Mapping[str, _builtins.str]:
        """
        Discovered Resource's properties.
        """
        return pulumi.get(self, "properties")

    @_builtins.property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> _builtins.str:
        """
        Discovered Resource Group Name.
        """
        return pulumi.get(self, "resource_group")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        Discovered Resource Type.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureBlobContainersFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureBlobContainersOracleDbAzureBlobContainerSummaryCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDbmulticloudOracleDbAzureBlobContainersOracleDbAzureBlobContainerSummaryCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDbmulticloudOracleDbAzureBlobContainersOracleDbAzureBlobContainerSummaryCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureBlobContainersOracleDbAzureBlobContainerSummaryCollectionItemResult(dict):
    def __init__(__self__, *,
                 azure_storage_account_name: _builtins.str,
                 azure_storage_container_name: _builtins.str,
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 last_modification: _builtins.str,
                 lifecycle_state_details: _builtins.str,
                 private_endpoint_dns_alias: _builtins.str,
                 private_endpoint_ip_address: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param _builtins.str azure_storage_account_name: A filter to return Azure Blob Containers.
        :param _builtins.str azure_storage_container_name: A filter to return Azure Blob containers.
        :param _builtins.str compartment_id: The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: A filter to return Azure Containers.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The ID of the compartment that contains Oracle DB Azure Blob Container Resource.
        :param _builtins.str last_modification: Description of the latest modification of the Oracle DB Azure Blob Container Resource.
        :param _builtins.str lifecycle_state_details: Description of the current lifecycle state in more detail.
        :param _builtins.str private_endpoint_dns_alias: Private endpoint DNS Alias.
        :param _builtins.str private_endpoint_ip_address: Private endpoint IP.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: Time when the Oracle DB Azure Blob Container was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_updated: Time when the Oracle DB Azure Blob Container was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "azure_storage_account_name", azure_storage_account_name)
        pulumi.set(__self__, "azure_storage_container_name", azure_storage_container_name)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_modification", last_modification)
        pulumi.set(__self__, "lifecycle_state_details", lifecycle_state_details)
        pulumi.set(__self__, "private_endpoint_dns_alias", private_endpoint_dns_alias)
        pulumi.set(__self__, "private_endpoint_ip_address", private_endpoint_ip_address)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="azureStorageAccountName")
    def azure_storage_account_name(self) -> _builtins.str:
        """
        A filter to return Azure Blob Containers.
        """
        return pulumi.get(self, "azure_storage_account_name")

    @_builtins.property
    @pulumi.getter(name="azureStorageContainerName")
    def azure_storage_container_name(self) -> _builtins.str:
        """
        A filter to return Azure Blob containers.
        """
        return pulumi.get(self, "azure_storage_container_name")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return Azure Containers.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the compartment that contains Oracle DB Azure Blob Container Resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastModification")
    def last_modification(self) -> _builtins.str:
        """
        Description of the latest modification of the Oracle DB Azure Blob Container Resource.
        """
        return pulumi.get(self, "last_modification")

    @_builtins.property
    @pulumi.getter(name="lifecycleStateDetails")
    def lifecycle_state_details(self) -> _builtins.str:
        """
        Description of the current lifecycle state in more detail.
        """
        return pulumi.get(self, "lifecycle_state_details")

    @_builtins.property
    @pulumi.getter(name="privateEndpointDnsAlias")
    def private_endpoint_dns_alias(self) -> _builtins.str:
        """
        Private endpoint DNS Alias.
        """
        return pulumi.get(self, "private_endpoint_dns_alias")

    @_builtins.property
    @pulumi.getter(name="privateEndpointIpAddress")
    def private_endpoint_ip_address(self) -> _builtins.str:
        """
        Private endpoint IP.
        """
        return pulumi.get(self, "private_endpoint_ip_address")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Blob Container was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Blob Container was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureBlobMountsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureBlobMountsOracleDbAzureBlobMountSummaryCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDbmulticloudOracleDbAzureBlobMountsOracleDbAzureBlobMountSummaryCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDbmulticloudOracleDbAzureBlobMountsOracleDbAzureBlobMountSummaryCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureBlobMountsOracleDbAzureBlobMountSummaryCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 last_modification: _builtins.str,
                 lifecycle_state_details: _builtins.str,
                 mount_path: _builtins.str,
                 oracle_db_azure_blob_container_id: _builtins.str,
                 oracle_db_azure_connector_id: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param _builtins.str compartment_id: The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: A filter to return Oracle DB Azure Blob Mount Resources.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The OCID for the new Oracle DB Azure Blob Mount resource.
        :param _builtins.str last_modification: Description of the latest modification of the Oracle DB Azure Blob Mount Resource.
        :param _builtins.str lifecycle_state_details: Description of the current lifecycle state in more detail.
        :param _builtins.str mount_path: Azure Container mount path.
        :param _builtins.str oracle_db_azure_blob_container_id: A filter to return Oracle DB Azure Blob Mount Resources.
        :param _builtins.str oracle_db_azure_connector_id: A filter to return Oracle DB Azure Blob Mount Resources.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: Time when the Oracle DB Azure Blob Mount was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_updated: Time when the Oracle DB Azure Blob Mount was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_modification", last_modification)
        pulumi.set(__self__, "lifecycle_state_details", lifecycle_state_details)
        pulumi.set(__self__, "mount_path", mount_path)
        pulumi.set(__self__, "oracle_db_azure_blob_container_id", oracle_db_azure_blob_container_id)
        pulumi.set(__self__, "oracle_db_azure_connector_id", oracle_db_azure_connector_id)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return Oracle DB Azure Blob Mount Resources.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The OCID for the new Oracle DB Azure Blob Mount resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastModification")
    def last_modification(self) -> _builtins.str:
        """
        Description of the latest modification of the Oracle DB Azure Blob Mount Resource.
        """
        return pulumi.get(self, "last_modification")

    @_builtins.property
    @pulumi.getter(name="lifecycleStateDetails")
    def lifecycle_state_details(self) -> _builtins.str:
        """
        Description of the current lifecycle state in more detail.
        """
        return pulumi.get(self, "lifecycle_state_details")

    @_builtins.property
    @pulumi.getter(name="mountPath")
    def mount_path(self) -> _builtins.str:
        """
        Azure Container mount path.
        """
        return pulumi.get(self, "mount_path")

    @_builtins.property
    @pulumi.getter(name="oracleDbAzureBlobContainerId")
    def oracle_db_azure_blob_container_id(self) -> _builtins.str:
        """
        A filter to return Oracle DB Azure Blob Mount Resources.
        """
        return pulumi.get(self, "oracle_db_azure_blob_container_id")

    @_builtins.property
    @pulumi.getter(name="oracleDbAzureConnectorId")
    def oracle_db_azure_connector_id(self) -> _builtins.str:
        """
        A filter to return Oracle DB Azure Blob Mount Resources.
        """
        return pulumi.get(self, "oracle_db_azure_connector_id")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Blob Mount was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Blob Mount was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureConnectorArcAgentNodeResult(dict):
    def __init__(__self__, *,
                 current_arc_agent_version: _builtins.str,
                 host_id: _builtins.str,
                 host_name: _builtins.str,
                 status: _builtins.str,
                 time_last_checked: _builtins.str):
        """
        :param _builtins.str current_arc_agent_version: Current Arc Agent Version installed on this node of VM Cluster.
        :param _builtins.str host_id: Host ID.
        :param _builtins.str host_name: Host Name or Azure Arc Agent Name.
        :param _builtins.str status: The current status of the Azure Arc Agent Resource.
        :param _builtins.str time_last_checked: time when the Azure Arc Agent's status was checked [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "current_arc_agent_version", current_arc_agent_version)
        pulumi.set(__self__, "host_id", host_id)
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "time_last_checked", time_last_checked)

    @_builtins.property
    @pulumi.getter(name="currentArcAgentVersion")
    def current_arc_agent_version(self) -> _builtins.str:
        """
        Current Arc Agent Version installed on this node of VM Cluster.
        """
        return pulumi.get(self, "current_arc_agent_version")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> _builtins.str:
        """
        Host ID.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        Host Name or Azure Arc Agent Name.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The current status of the Azure Arc Agent Resource.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="timeLastChecked")
    def time_last_checked(self) -> _builtins.str:
        """
        time when the Azure Arc Agent's status was checked [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_last_checked")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureConnectorsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionItemResult(dict):
    def __init__(__self__, *,
                 access_token: _builtins.str,
                 arc_agent_nodes: Sequence['outputs.GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionItemArcAgentNodeResult'],
                 azure_identity_mechanism: _builtins.str,
                 azure_resource_group: _builtins.str,
                 azure_subscription_id: _builtins.str,
                 azure_tenant_id: _builtins.str,
                 compartment_id: _builtins.str,
                 db_cluster_resource_id: _builtins.str,
                 display_name: _builtins.str,
                 id: _builtins.str,
                 last_modification: _builtins.str,
                 lifecycle_state_details: _builtins.str,
                 state: _builtins.str,
                 time_created: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param _builtins.str access_token: Azure bearer access token. If bearer access token is provided then Service Principal detail is not required.
        :param Sequence['GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionItemArcAgentNodeArgs'] arc_agent_nodes: List of All VMs where Arc Agent is Install under VMCluster.
        :param _builtins.str azure_identity_mechanism: Azure Identity Mechanism.
        :param _builtins.str azure_resource_group: Azure Resource Group Name.
        :param _builtins.str azure_subscription_id: Azure Subscription ID.
        :param _builtins.str azure_tenant_id: Azure Tenant ID.
        :param _builtins.str compartment_id: The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param _builtins.str db_cluster_resource_id: The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Resource.
        :param _builtins.str display_name: A filter to return Oracle DB Azure Connector Resource that match the given display name.
        :param _builtins.str id: The ID of the Oracle DB Azure Connector resource.
        :param _builtins.str last_modification: Description of the latest modification of the Oracle DB Azure Connector Resource.
        :param _builtins.str lifecycle_state_details: Description of the current lifecycle state in more detail.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param _builtins.str time_created: Time when the Oracle DB Azure Connector Resource was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_updated: Time when the Oracle DB Azure Connector Resource was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "access_token", access_token)
        pulumi.set(__self__, "arc_agent_nodes", arc_agent_nodes)
        pulumi.set(__self__, "azure_identity_mechanism", azure_identity_mechanism)
        pulumi.set(__self__, "azure_resource_group", azure_resource_group)
        pulumi.set(__self__, "azure_subscription_id", azure_subscription_id)
        pulumi.set(__self__, "azure_tenant_id", azure_tenant_id)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "db_cluster_resource_id", db_cluster_resource_id)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_modification", last_modification)
        pulumi.set(__self__, "lifecycle_state_details", lifecycle_state_details)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="accessToken")
    def access_token(self) -> _builtins.str:
        """
        Azure bearer access token. If bearer access token is provided then Service Principal detail is not required.
        """
        return pulumi.get(self, "access_token")

    @_builtins.property
    @pulumi.getter(name="arcAgentNodes")
    def arc_agent_nodes(self) -> Sequence['outputs.GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionItemArcAgentNodeResult']:
        """
        List of All VMs where Arc Agent is Install under VMCluster.
        """
        return pulumi.get(self, "arc_agent_nodes")

    @_builtins.property
    @pulumi.getter(name="azureIdentityMechanism")
    def azure_identity_mechanism(self) -> _builtins.str:
        """
        Azure Identity Mechanism.
        """
        return pulumi.get(self, "azure_identity_mechanism")

    @_builtins.property
    @pulumi.getter(name="azureResourceGroup")
    def azure_resource_group(self) -> _builtins.str:
        """
        Azure Resource Group Name.
        """
        return pulumi.get(self, "azure_resource_group")

    @_builtins.property
    @pulumi.getter(name="azureSubscriptionId")
    def azure_subscription_id(self) -> _builtins.str:
        """
        Azure Subscription ID.
        """
        return pulumi.get(self, "azure_subscription_id")

    @_builtins.property
    @pulumi.getter(name="azureTenantId")
    def azure_tenant_id(self) -> _builtins.str:
        """
        Azure Tenant ID.
        """
        return pulumi.get(self, "azure_tenant_id")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="dbClusterResourceId")
    def db_cluster_resource_id(self) -> _builtins.str:
        """
        The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Resource.
        """
        return pulumi.get(self, "db_cluster_resource_id")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return Oracle DB Azure Connector Resource that match the given display name.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the Oracle DB Azure Connector resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastModification")
    def last_modification(self) -> _builtins.str:
        """
        Description of the latest modification of the Oracle DB Azure Connector Resource.
        """
        return pulumi.get(self, "last_modification")

    @_builtins.property
    @pulumi.getter(name="lifecycleStateDetails")
    def lifecycle_state_details(self) -> _builtins.str:
        """
        Description of the current lifecycle state in more detail.
        """
        return pulumi.get(self, "lifecycle_state_details")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Connector Resource was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Connector Resource was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionItemArcAgentNodeResult(dict):
    def __init__(__self__, *,
                 current_arc_agent_version: _builtins.str,
                 host_id: _builtins.str,
                 host_name: _builtins.str,
                 status: _builtins.str,
                 time_last_checked: _builtins.str):
        """
        :param _builtins.str current_arc_agent_version: Current Arc Agent Version installed on this node of VM Cluster.
        :param _builtins.str host_id: Host ID.
        :param _builtins.str host_name: Host Name or Azure Arc Agent Name.
        :param _builtins.str status: The current status of the Azure Arc Agent Resource.
        :param _builtins.str time_last_checked: time when the Azure Arc Agent's status was checked [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "current_arc_agent_version", current_arc_agent_version)
        pulumi.set(__self__, "host_id", host_id)
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "time_last_checked", time_last_checked)

    @_builtins.property
    @pulumi.getter(name="currentArcAgentVersion")
    def current_arc_agent_version(self) -> _builtins.str:
        """
        Current Arc Agent Version installed on this node of VM Cluster.
        """
        return pulumi.get(self, "current_arc_agent_version")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> _builtins.str:
        """
        Host ID.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        Host Name or Azure Arc Agent Name.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The current status of the Azure Arc Agent Resource.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="timeLastChecked")
    def time_last_checked(self) -> _builtins.str:
        """
        time when the Azure Arc Agent's status was checked [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_last_checked")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureKeysFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureKeysOracleDbAzureKeySummaryCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDbmulticloudOracleDbAzureKeysOracleDbAzureKeySummaryCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDbmulticloudOracleDbAzureKeysOracleDbAzureKeySummaryCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureKeysOracleDbAzureKeySummaryCollectionItemResult(dict):
    def __init__(__self__, *,
                 azure_key_id: _builtins.str,
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 last_modification: _builtins.str,
                 lifecycle_state_details: _builtins.str,
                 oracle_db_azure_vault_id: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param _builtins.str azure_key_id: The Azure ID of the Azure Key, Azure Key URL.
        :param _builtins.str compartment_id: The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: A filter to return Azure Vault Keys.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Azure Vault Key Resource.
        :param _builtins.str last_modification: Description of the latest modification of the Oracle DB Azure Vault Key Resource.
        :param _builtins.str lifecycle_state_details: Description of the current lifecycle state in more detail.
        :param _builtins.str oracle_db_azure_vault_id: A filter to return Oracle DB Azure Vault Resources.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: Time when the Oracle DB Azure Vault Key was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_updated: Time when the Oracle DB Azure Vault Key was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "azure_key_id", azure_key_id)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_modification", last_modification)
        pulumi.set(__self__, "lifecycle_state_details", lifecycle_state_details)
        pulumi.set(__self__, "oracle_db_azure_vault_id", oracle_db_azure_vault_id)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="azureKeyId")
    def azure_key_id(self) -> _builtins.str:
        """
        The Azure ID of the Azure Key, Azure Key URL.
        """
        return pulumi.get(self, "azure_key_id")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return Azure Vault Keys.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Azure Vault Key Resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastModification")
    def last_modification(self) -> _builtins.str:
        """
        Description of the latest modification of the Oracle DB Azure Vault Key Resource.
        """
        return pulumi.get(self, "last_modification")

    @_builtins.property
    @pulumi.getter(name="lifecycleStateDetails")
    def lifecycle_state_details(self) -> _builtins.str:
        """
        Description of the current lifecycle state in more detail.
        """
        return pulumi.get(self, "lifecycle_state_details")

    @_builtins.property
    @pulumi.getter(name="oracleDbAzureVaultId")
    def oracle_db_azure_vault_id(self) -> _builtins.str:
        """
        A filter to return Oracle DB Azure Vault Resources.
        """
        return pulumi.get(self, "oracle_db_azure_vault_id")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Vault Key was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Vault Key was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureVaultAssociationsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureVaultAssociationsOracleDbAzureVaultAssociationSummaryCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDbmulticloudOracleDbAzureVaultAssociationsOracleDbAzureVaultAssociationSummaryCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDbmulticloudOracleDbAzureVaultAssociationsOracleDbAzureVaultAssociationSummaryCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureVaultAssociationsOracleDbAzureVaultAssociationSummaryCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 is_resource_accessible: _builtins.bool,
                 last_modification: _builtins.str,
                 lifecycle_state_details: _builtins.str,
                 oracle_db_azure_connector_id: _builtins.str,
                 oracle_db_azure_vault_id: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param _builtins.str compartment_id: The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: A filter to return Azure Vault Association.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Azure Vault Association Resource.
        :param _builtins.bool is_resource_accessible: The Associated Resources are accessible or not.
        :param _builtins.str last_modification: Description of the latest modification of the Oracle DB Azure Vault Association Resource.
        :param _builtins.str lifecycle_state_details: Description of the current lifecycle state in more detail.
        :param _builtins.str oracle_db_azure_connector_id: A filter to return Oracle DB Azure Blob Mount Resources.
        :param _builtins.str oracle_db_azure_vault_id: A filter to return Oracle DB Azure Vault Resources.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: Time when the Oracle DB Azure Vault Association was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        :param _builtins.str time_updated: Time when the Oracle DB Azure Vault Association was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_resource_accessible", is_resource_accessible)
        pulumi.set(__self__, "last_modification", last_modification)
        pulumi.set(__self__, "lifecycle_state_details", lifecycle_state_details)
        pulumi.set(__self__, "oracle_db_azure_connector_id", oracle_db_azure_connector_id)
        pulumi.set(__self__, "oracle_db_azure_vault_id", oracle_db_azure_vault_id)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return Azure Vault Association.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Azure Vault Association Resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="isResourceAccessible")
    def is_resource_accessible(self) -> _builtins.bool:
        """
        The Associated Resources are accessible or not.
        """
        return pulumi.get(self, "is_resource_accessible")

    @_builtins.property
    @pulumi.getter(name="lastModification")
    def last_modification(self) -> _builtins.str:
        """
        Description of the latest modification of the Oracle DB Azure Vault Association Resource.
        """
        return pulumi.get(self, "last_modification")

    @_builtins.property
    @pulumi.getter(name="lifecycleStateDetails")
    def lifecycle_state_details(self) -> _builtins.str:
        """
        Description of the current lifecycle state in more detail.
        """
        return pulumi.get(self, "lifecycle_state_details")

    @_builtins.property
    @pulumi.getter(name="oracleDbAzureConnectorId")
    def oracle_db_azure_connector_id(self) -> _builtins.str:
        """
        A filter to return Oracle DB Azure Blob Mount Resources.
        """
        return pulumi.get(self, "oracle_db_azure_connector_id")

    @_builtins.property
    @pulumi.getter(name="oracleDbAzureVaultId")
    def oracle_db_azure_vault_id(self) -> _builtins.str:
        """
        A filter to return Oracle DB Azure Vault Resources.
        """
        return pulumi.get(self, "oracle_db_azure_vault_id")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Vault Association was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        Time when the Oracle DB Azure Vault Association was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureVaultsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureVaultsOracleDbAzureVaultSummaryCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetDbmulticloudOracleDbAzureVaultsOracleDbAzureVaultSummaryCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetDbmulticloudOracleDbAzureVaultsOracleDbAzureVaultSummaryCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetDbmulticloudOracleDbAzureVaultsOracleDbAzureVaultSummaryCollectionItemResult(dict):
    def __init__(__self__, *,
                 azure_vault_id: _builtins.str,
                 compartment_id: _builtins.str,
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 last_modification: _builtins.str,
                 lifecycle_state_details: _builtins.str,
                 location: _builtins.str,
                 oracle_db_azure_resource_group: _builtins.str,
                 oracle_db_connector_id: _builtins.str,
                 properties: Mapping[str, _builtins.str],
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_updated: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str azure_vault_id: Azure Vault Id.
        :param _builtins.str compartment_id: The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: A filter to return Azure Vaults.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB Azure Vault Resource.
        :param _builtins.str last_modification: Description of the latest modification of the DB Azure Vault Resource.
        :param _builtins.str lifecycle_state_details: Description of the current lifecycle state in more detail.
        :param _builtins.str location: Vault Resource Location.
        :param _builtins.str oracle_db_azure_resource_group: A filter to return Azure Vaults.
        :param _builtins.str oracle_db_connector_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB Connector Resource.
        :param Mapping[str, _builtins.str] properties: Resource's properties.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: Time when the DB Azure Vault was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-23T21:10:29.600Z'
        :param _builtins.str time_updated: Time when the DB Azure Vault was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-23T21:10:29.600Z'
        :param _builtins.str type: Vault Resource Type.
        """
        pulumi.set(__self__, "azure_vault_id", azure_vault_id)
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_modification", last_modification)
        pulumi.set(__self__, "lifecycle_state_details", lifecycle_state_details)
        pulumi.set(__self__, "location", location)
        pulumi.set(__self__, "oracle_db_azure_resource_group", oracle_db_azure_resource_group)
        pulumi.set(__self__, "oracle_db_connector_id", oracle_db_connector_id)
        pulumi.set(__self__, "properties", properties)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter(name="azureVaultId")
    def azure_vault_id(self) -> _builtins.str:
        """
        Azure Vault Id.
        """
        return pulumi.get(self, "azure_vault_id")

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        A filter to return Azure Vaults.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB Azure Vault Resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastModification")
    def last_modification(self) -> _builtins.str:
        """
        Description of the latest modification of the DB Azure Vault Resource.
        """
        return pulumi.get(self, "last_modification")

    @_builtins.property
    @pulumi.getter(name="lifecycleStateDetails")
    def lifecycle_state_details(self) -> _builtins.str:
        """
        Description of the current lifecycle state in more detail.
        """
        return pulumi.get(self, "lifecycle_state_details")

    @_builtins.property
    @pulumi.getter
    def location(self) -> _builtins.str:
        """
        Vault Resource Location.
        """
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter(name="oracleDbAzureResourceGroup")
    def oracle_db_azure_resource_group(self) -> _builtins.str:
        """
        A filter to return Azure Vaults.
        """
        return pulumi.get(self, "oracle_db_azure_resource_group")

    @_builtins.property
    @pulumi.getter(name="oracleDbConnectorId")
    def oracle_db_connector_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB Connector Resource.
        """
        return pulumi.get(self, "oracle_db_connector_id")

    @_builtins.property
    @pulumi.getter
    def properties(self) -> Mapping[str, _builtins.str]:
        """
        Resource's properties.
        """
        return pulumi.get(self, "properties")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        Time when the DB Azure Vault was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-23T21:10:29.600Z'
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        Time when the DB Azure Vault was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-23T21:10:29.600Z'
        """
        return pulumi.get(self, "time_updated")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        Vault Resource Type.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetWlmsManagedInstanceConfigurationResult(dict):
    def __init__(__self__, *,
                 discovery_interval: _builtins.int,
                 domain_search_paths: Sequence[_builtins.str]):
        """
        :param _builtins.int discovery_interval: Frequency of domain discovery to be run on the managed instance. The unit is in hours.
        :param Sequence[_builtins.str] domain_search_paths: The whitelisted paths which domain discovery are run against.
        """
        pulumi.set(__self__, "discovery_interval", discovery_interval)
        pulumi.set(__self__, "domain_search_paths", domain_search_paths)

    @_builtins.property
    @pulumi.getter(name="discoveryInterval")
    def discovery_interval(self) -> _builtins.int:
        """
        Frequency of domain discovery to be run on the managed instance. The unit is in hours.
        """
        return pulumi.get(self, "discovery_interval")

    @_builtins.property
    @pulumi.getter(name="domainSearchPaths")
    def domain_search_paths(self) -> Sequence[_builtins.str]:
        """
        The whitelisted paths which domain discovery are run against.
        """
        return pulumi.get(self, "domain_search_paths")


@pulumi.output_type
class GetWlmsManagedInstanceScanResultsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsManagedInstanceScanResultsScanResultCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsManagedInstanceScanResultsScanResultCollectionItemResult']):
        """
        :param Sequence['GetWlmsManagedInstanceScanResultsScanResultCollectionItemArgs'] items: List of scan results.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsManagedInstanceScanResultsScanResultCollectionItemResult']:
        """
        List of scan results.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsManagedInstanceScanResultsScanResultCollectionItemResult(dict):
    def __init__(__self__, *,
                 server_check_name: _builtins.str,
                 server_check_result: _builtins.str,
                 server_check_result_id: _builtins.str,
                 server_check_status: _builtins.str,
                 server_name: _builtins.str,
                 time_of_server_check: _builtins.str,
                 wls_domain_id: _builtins.str):
        """
        :param _builtins.str server_check_name: The name of the check performed.
        :param _builtins.str server_check_result: The result of the server check.
        :param _builtins.str server_check_result_id: The identifier of the the server check result.
        :param _builtins.str server_check_status: The status of the server check which is OK, FAILURE, or WARNING.
        :param _builtins.str server_name: The name of the server.
        :param _builtins.str time_of_server_check: The date when the WebLogic server health check is performed (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str wls_domain_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        """
        pulumi.set(__self__, "server_check_name", server_check_name)
        pulumi.set(__self__, "server_check_result", server_check_result)
        pulumi.set(__self__, "server_check_result_id", server_check_result_id)
        pulumi.set(__self__, "server_check_status", server_check_status)
        pulumi.set(__self__, "server_name", server_name)
        pulumi.set(__self__, "time_of_server_check", time_of_server_check)
        pulumi.set(__self__, "wls_domain_id", wls_domain_id)

    @_builtins.property
    @pulumi.getter(name="serverCheckName")
    def server_check_name(self) -> _builtins.str:
        """
        The name of the check performed.
        """
        return pulumi.get(self, "server_check_name")

    @_builtins.property
    @pulumi.getter(name="serverCheckResult")
    def server_check_result(self) -> _builtins.str:
        """
        The result of the server check.
        """
        return pulumi.get(self, "server_check_result")

    @_builtins.property
    @pulumi.getter(name="serverCheckResultId")
    def server_check_result_id(self) -> _builtins.str:
        """
        The identifier of the the server check result.
        """
        return pulumi.get(self, "server_check_result_id")

    @_builtins.property
    @pulumi.getter(name="serverCheckStatus")
    def server_check_status(self) -> _builtins.str:
        """
        The status of the server check which is OK, FAILURE, or WARNING.
        """
        return pulumi.get(self, "server_check_status")

    @_builtins.property
    @pulumi.getter(name="serverName")
    def server_name(self) -> _builtins.str:
        """
        The name of the server.
        """
        return pulumi.get(self, "server_name")

    @_builtins.property
    @pulumi.getter(name="timeOfServerCheck")
    def time_of_server_check(self) -> _builtins.str:
        """
        The date when the WebLogic server health check is performed (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_of_server_check")

    @_builtins.property
    @pulumi.getter(name="wlsDomainId")
    def wls_domain_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        """
        return pulumi.get(self, "wls_domain_id")


@pulumi.output_type
class GetWlmsManagedInstanceServerInstalledPatchesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsManagedInstanceServerInstalledPatchesInstalledPatchCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsManagedInstanceServerInstalledPatchesInstalledPatchCollectionItemResult']):
        """
        :param Sequence['GetWlmsManagedInstanceServerInstalledPatchesInstalledPatchCollectionItemArgs'] items: List of installed patches per server
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsManagedInstanceServerInstalledPatchesInstalledPatchCollectionItemResult']:
        """
        List of installed patches per server
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsManagedInstanceServerInstalledPatchesInstalledPatchCollectionItemResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 display_name: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str description: The description of the WebLogic patch.
        :param _builtins.str display_name: The name of the WebLogic patch.
        :param _builtins.str id: The ID of the WebLogic patch.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The description of the WebLogic patch.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the WebLogic patch.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the WebLogic patch.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetWlmsManagedInstanceServersFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        """
        :param _builtins.str name: The name of the resource.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsManagedInstanceServersServerCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsManagedInstanceServersServerCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsManagedInstanceServersServerCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsManagedInstanceServersServerCollectionItemResult(dict):
    def __init__(__self__, *,
                 host_name: _builtins.str,
                 id: _builtins.str,
                 is_admin: _builtins.bool,
                 jdk_path: _builtins.str,
                 jdk_version: _builtins.str,
                 latest_patches_status: _builtins.str,
                 managed_instance_id: _builtins.str,
                 middleware_path: _builtins.str,
                 middleware_type: _builtins.str,
                 name: _builtins.str,
                 patch_readiness_status: _builtins.str,
                 restart_order: _builtins.int,
                 status: _builtins.str,
                 time_created: _builtins.str,
                 time_updated: _builtins.str,
                 weblogic_version: _builtins.str,
                 wls_domain_id: _builtins.str,
                 wls_domain_name: _builtins.str,
                 wls_domain_path: _builtins.str):
        """
        :param _builtins.str host_name: The name of the server.
        :param _builtins.str id: The unique identifier of the server.
        :param _builtins.bool is_admin: Whether or not the server is an admin node.
        :param _builtins.str jdk_path: The JDK path on the server.
        :param _builtins.str jdk_version: The JDK version on the server.
        :param _builtins.str latest_patches_status: Whether or not the server has installed the latest patches.
        :param _builtins.str managed_instance_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
        :param _builtins.str middleware_path: The middleware path on the server.
        :param _builtins.str middleware_type: The middleware type on the server.
        :param _builtins.str name: The name of the resource.
        :param _builtins.str patch_readiness_status: The patch readiness status of the server.
        :param _builtins.int restart_order: The restart order assigned to the server.
        :param _builtins.str status: The status of the server.
        :param _builtins.str time_created: The date and time the server was first reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_updated: The date and time the server was last reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str weblogic_version: The version of the WebLogic domain of the server
        :param _builtins.str wls_domain_id: The ID of the WebLogic domain to which the server belongs.
        :param _builtins.str wls_domain_name: The name of the WebLogic domain to which the server belongs.
        :param _builtins.str wls_domain_path: The path of the WebLogic domain to which the server belongs.
        """
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_admin", is_admin)
        pulumi.set(__self__, "jdk_path", jdk_path)
        pulumi.set(__self__, "jdk_version", jdk_version)
        pulumi.set(__self__, "latest_patches_status", latest_patches_status)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "middleware_path", middleware_path)
        pulumi.set(__self__, "middleware_type", middleware_type)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "patch_readiness_status", patch_readiness_status)
        pulumi.set(__self__, "restart_order", restart_order)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)
        pulumi.set(__self__, "weblogic_version", weblogic_version)
        pulumi.set(__self__, "wls_domain_id", wls_domain_id)
        pulumi.set(__self__, "wls_domain_name", wls_domain_name)
        pulumi.set(__self__, "wls_domain_path", wls_domain_path)

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        The name of the server.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The unique identifier of the server.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="isAdmin")
    def is_admin(self) -> _builtins.bool:
        """
        Whether or not the server is an admin node.
        """
        return pulumi.get(self, "is_admin")

    @_builtins.property
    @pulumi.getter(name="jdkPath")
    def jdk_path(self) -> _builtins.str:
        """
        The JDK path on the server.
        """
        return pulumi.get(self, "jdk_path")

    @_builtins.property
    @pulumi.getter(name="jdkVersion")
    def jdk_version(self) -> _builtins.str:
        """
        The JDK version on the server.
        """
        return pulumi.get(self, "jdk_version")

    @_builtins.property
    @pulumi.getter(name="latestPatchesStatus")
    def latest_patches_status(self) -> _builtins.str:
        """
        Whether or not the server has installed the latest patches.
        """
        return pulumi.get(self, "latest_patches_status")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="middlewarePath")
    def middleware_path(self) -> _builtins.str:
        """
        The middleware path on the server.
        """
        return pulumi.get(self, "middleware_path")

    @_builtins.property
    @pulumi.getter(name="middlewareType")
    def middleware_type(self) -> _builtins.str:
        """
        The middleware type on the server.
        """
        return pulumi.get(self, "middleware_type")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="patchReadinessStatus")
    def patch_readiness_status(self) -> _builtins.str:
        """
        The patch readiness status of the server.
        """
        return pulumi.get(self, "patch_readiness_status")

    @_builtins.property
    @pulumi.getter(name="restartOrder")
    def restart_order(self) -> _builtins.int:
        """
        The restart order assigned to the server.
        """
        return pulumi.get(self, "restart_order")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the server.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the server was first reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        The date and time the server was last reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_updated")

    @_builtins.property
    @pulumi.getter(name="weblogicVersion")
    def weblogic_version(self) -> _builtins.str:
        """
        The version of the WebLogic domain of the server
        """
        return pulumi.get(self, "weblogic_version")

    @_builtins.property
    @pulumi.getter(name="wlsDomainId")
    def wls_domain_id(self) -> _builtins.str:
        """
        The ID of the WebLogic domain to which the server belongs.
        """
        return pulumi.get(self, "wls_domain_id")

    @_builtins.property
    @pulumi.getter(name="wlsDomainName")
    def wls_domain_name(self) -> _builtins.str:
        """
        The name of the WebLogic domain to which the server belongs.
        """
        return pulumi.get(self, "wls_domain_name")

    @_builtins.property
    @pulumi.getter(name="wlsDomainPath")
    def wls_domain_path(self) -> _builtins.str:
        """
        The path of the WebLogic domain to which the server belongs.
        """
        return pulumi.get(self, "wls_domain_path")


@pulumi.output_type
class GetWlmsManagedInstancesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsManagedInstancesManagedInstanceCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsManagedInstancesManagedInstanceCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsManagedInstancesManagedInstanceCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsManagedInstancesManagedInstanceCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: _builtins.str,
                 configurations: Sequence['outputs.GetWlmsManagedInstancesManagedInstanceCollectionItemConfigurationResult'],
                 display_name: _builtins.str,
                 host_name: _builtins.str,
                 id: _builtins.str,
                 os_arch: _builtins.str,
                 os_name: _builtins.str,
                 plugin_status: _builtins.str,
                 server_count: _builtins.int,
                 time_created: _builtins.str,
                 time_updated: _builtins.str):
        """
        :param _builtins.str compartment_id: The OCID of the compartment that contains the resources to list. This filter returns  only resources contained within the specified compartment.
        :param Sequence['GetWlmsManagedInstancesManagedInstanceCollectionItemConfigurationArgs'] configurations: The configuration for a managed instance.
        :param _builtins.str display_name: The display name.
        :param _builtins.str host_name: The FQDN of the managed instance.
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
        :param _builtins.str os_arch: The operating system architecture on the managed instance.
        :param _builtins.str os_name: The operating system name on the managed instance.
        :param _builtins.str plugin_status: The plugin status of the managed instance.
        :param _builtins.int server_count: The number of servers running in the managed instance.
        :param _builtins.str time_created: The date and time the managed instance was first reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_updated: The date and time the managed instance was last report (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "configurations", configurations)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "os_arch", os_arch)
        pulumi.set(__self__, "os_name", os_name)
        pulumi.set(__self__, "plugin_status", plugin_status)
        pulumi.set(__self__, "server_count", server_count)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The OCID of the compartment that contains the resources to list. This filter returns  only resources contained within the specified compartment.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter
    def configurations(self) -> Sequence['outputs.GetWlmsManagedInstancesManagedInstanceCollectionItemConfigurationResult']:
        """
        The configuration for a managed instance.
        """
        return pulumi.get(self, "configurations")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The display name.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        The FQDN of the managed instance.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="osArch")
    def os_arch(self) -> _builtins.str:
        """
        The operating system architecture on the managed instance.
        """
        return pulumi.get(self, "os_arch")

    @_builtins.property
    @pulumi.getter(name="osName")
    def os_name(self) -> _builtins.str:
        """
        The operating system name on the managed instance.
        """
        return pulumi.get(self, "os_name")

    @_builtins.property
    @pulumi.getter(name="pluginStatus")
    def plugin_status(self) -> _builtins.str:
        """
        The plugin status of the managed instance.
        """
        return pulumi.get(self, "plugin_status")

    @_builtins.property
    @pulumi.getter(name="serverCount")
    def server_count(self) -> _builtins.int:
        """
        The number of servers running in the managed instance.
        """
        return pulumi.get(self, "server_count")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the managed instance was first reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        The date and time the managed instance was last report (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_updated")


@pulumi.output_type
class GetWlmsManagedInstancesManagedInstanceCollectionItemConfigurationResult(dict):
    def __init__(__self__, *,
                 discovery_interval: _builtins.int,
                 domain_search_paths: Sequence[_builtins.str]):
        """
        :param _builtins.int discovery_interval: Frequency of domain discovery to be run on the managed instance. The unit is in hours.
        :param Sequence[_builtins.str] domain_search_paths: The whitelisted paths which domain discovery are run against.
        """
        pulumi.set(__self__, "discovery_interval", discovery_interval)
        pulumi.set(__self__, "domain_search_paths", domain_search_paths)

    @_builtins.property
    @pulumi.getter(name="discoveryInterval")
    def discovery_interval(self) -> _builtins.int:
        """
        Frequency of domain discovery to be run on the managed instance. The unit is in hours.
        """
        return pulumi.get(self, "discovery_interval")

    @_builtins.property
    @pulumi.getter(name="domainSearchPaths")
    def domain_search_paths(self) -> Sequence[_builtins.str]:
        """
        The whitelisted paths which domain discovery are run against.
        """
        return pulumi.get(self, "domain_search_paths")


@pulumi.output_type
class GetWlmsWlsDomainAgreementRecordsAgreementRecordCollectionResult(dict):
    def __init__(__self__, *,
                 agreement_signature: _builtins.str,
                 agreement_uuid: _builtins.str,
                 items: Sequence['outputs.GetWlmsWlsDomainAgreementRecordsAgreementRecordCollectionItemResult'],
                 time_accepted: _builtins.str,
                 wls_domain_id: _builtins.str):
        """
        :param _builtins.str agreement_signature: The agreement signature.
        :param _builtins.str agreement_uuid: The ID of the accepted agreement.
        :param Sequence['GetWlmsWlsDomainAgreementRecordsAgreementRecordCollectionItemArgs'] items: List of agreement records.
        :param _builtins.str time_accepted: The accepted time for the agreement record.
        :param _builtins.str wls_domain_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        """
        pulumi.set(__self__, "agreement_signature", agreement_signature)
        pulumi.set(__self__, "agreement_uuid", agreement_uuid)
        pulumi.set(__self__, "items", items)
        pulumi.set(__self__, "time_accepted", time_accepted)
        pulumi.set(__self__, "wls_domain_id", wls_domain_id)

    @_builtins.property
    @pulumi.getter(name="agreementSignature")
    def agreement_signature(self) -> _builtins.str:
        """
        The agreement signature.
        """
        return pulumi.get(self, "agreement_signature")

    @_builtins.property
    @pulumi.getter(name="agreementUuid")
    def agreement_uuid(self) -> _builtins.str:
        """
        The ID of the accepted agreement.
        """
        return pulumi.get(self, "agreement_uuid")

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsWlsDomainAgreementRecordsAgreementRecordCollectionItemResult']:
        """
        List of agreement records.
        """
        return pulumi.get(self, "items")

    @_builtins.property
    @pulumi.getter(name="timeAccepted")
    def time_accepted(self) -> _builtins.str:
        """
        The accepted time for the agreement record.
        """
        return pulumi.get(self, "time_accepted")

    @_builtins.property
    @pulumi.getter(name="wlsDomainId")
    def wls_domain_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        """
        return pulumi.get(self, "wls_domain_id")


@pulumi.output_type
class GetWlmsWlsDomainAgreementRecordsAgreementRecordCollectionItemResult(dict):
    def __init__(__self__, *,
                 agreement_signature: _builtins.str,
                 agreement_uuid: _builtins.str,
                 time_accepted: _builtins.str):
        """
        :param _builtins.str agreement_signature: The agreement signature.
        :param _builtins.str agreement_uuid: The ID of the accepted agreement.
        :param _builtins.str time_accepted: The accepted time for the agreement record.
        """
        pulumi.set(__self__, "agreement_signature", agreement_signature)
        pulumi.set(__self__, "agreement_uuid", agreement_uuid)
        pulumi.set(__self__, "time_accepted", time_accepted)

    @_builtins.property
    @pulumi.getter(name="agreementSignature")
    def agreement_signature(self) -> _builtins.str:
        """
        The agreement signature.
        """
        return pulumi.get(self, "agreement_signature")

    @_builtins.property
    @pulumi.getter(name="agreementUuid")
    def agreement_uuid(self) -> _builtins.str:
        """
        The ID of the accepted agreement.
        """
        return pulumi.get(self, "agreement_uuid")

    @_builtins.property
    @pulumi.getter(name="timeAccepted")
    def time_accepted(self) -> _builtins.str:
        """
        The accepted time for the agreement record.
        """
        return pulumi.get(self, "time_accepted")


@pulumi.output_type
class GetWlmsWlsDomainAgreementRecordsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItemResult']):
        """
        :param Sequence['GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItemArgs'] items: List of patches per WebLogic version and middleware type.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItemResult']:
        """
        List of patches per WebLogic version and middleware type.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItemResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 display_name: _builtins.str,
                 id: _builtins.str,
                 middleware_types: Sequence[_builtins.str],
                 os_arch: _builtins.str,
                 weblogic_version: _builtins.str):
        """
        :param _builtins.str description: The description of the WebLogic patch.
        :param _builtins.str display_name: The name of the WebLogic patch.
        :param _builtins.str id: The ID of the WebLogic patch.
        :param Sequence[_builtins.str] middleware_types: The type of middleware for which this patch is applicable. A patch can be applicable to more than one type of middleware.
        :param _builtins.str os_arch: The operating system architecture for which the patch can be applied.
        :param _builtins.str weblogic_version: The WebLogic version for this patch. The patch can be installed to domains with this version.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "middleware_types", middleware_types)
        pulumi.set(__self__, "os_arch", os_arch)
        pulumi.set(__self__, "weblogic_version", weblogic_version)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The description of the WebLogic patch.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the WebLogic patch.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the WebLogic patch.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="middlewareTypes")
    def middleware_types(self) -> Sequence[_builtins.str]:
        """
        The type of middleware for which this patch is applicable. A patch can be applicable to more than one type of middleware.
        """
        return pulumi.get(self, "middleware_types")

    @_builtins.property
    @pulumi.getter(name="osArch")
    def os_arch(self) -> _builtins.str:
        """
        The operating system architecture for which the patch can be applied.
        """
        return pulumi.get(self, "os_arch")

    @_builtins.property
    @pulumi.getter(name="weblogicVersion")
    def weblogic_version(self) -> _builtins.str:
        """
        The WebLogic version for this patch. The patch can be installed to domains with this version.
        """
        return pulumi.get(self, "weblogic_version")


@pulumi.output_type
class GetWlmsWlsDomainApplicablePatchesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsWlsDomainConfigurationResult(dict):
    def __init__(__self__, *,
                 admin_server_control_mode: _builtins.str,
                 admin_server_start_script_path: _builtins.str,
                 admin_server_stop_script_path: _builtins.str,
                 is_patch_enabled: _builtins.bool,
                 is_rollback_on_failure: _builtins.bool,
                 managed_server_control_mode: _builtins.str,
                 managed_server_start_script_path: _builtins.str,
                 managed_server_stop_script_path: _builtins.str,
                 servers_shutdown_timeout: _builtins.int):
        """
        :param _builtins.str admin_server_control_mode: Whether to manage the admin server using Node Manager or scripts.
        :param _builtins.str admin_server_start_script_path: Path to admin server start script.
        :param _builtins.str admin_server_stop_script_path: Path to admin server stop script.
        :param _builtins.bool is_patch_enabled: Whether or not the WebLogic domain is enabled for patching.
        :param _builtins.bool is_rollback_on_failure: Whether or not to rollback on failure during patching of WebLogic domain.
        :param _builtins.str managed_server_control_mode: Whether to manage the managed server using Node Manager or scripts.
        :param _builtins.str managed_server_start_script_path: Path to managed server start script.
        :param _builtins.str managed_server_stop_script_path: Path to managed server stop script.
        :param _builtins.int servers_shutdown_timeout: Servers shutdown timeout.
        """
        pulumi.set(__self__, "admin_server_control_mode", admin_server_control_mode)
        pulumi.set(__self__, "admin_server_start_script_path", admin_server_start_script_path)
        pulumi.set(__self__, "admin_server_stop_script_path", admin_server_stop_script_path)
        pulumi.set(__self__, "is_patch_enabled", is_patch_enabled)
        pulumi.set(__self__, "is_rollback_on_failure", is_rollback_on_failure)
        pulumi.set(__self__, "managed_server_control_mode", managed_server_control_mode)
        pulumi.set(__self__, "managed_server_start_script_path", managed_server_start_script_path)
        pulumi.set(__self__, "managed_server_stop_script_path", managed_server_stop_script_path)
        pulumi.set(__self__, "servers_shutdown_timeout", servers_shutdown_timeout)

    @_builtins.property
    @pulumi.getter(name="adminServerControlMode")
    def admin_server_control_mode(self) -> _builtins.str:
        """
        Whether to manage the admin server using Node Manager or scripts.
        """
        return pulumi.get(self, "admin_server_control_mode")

    @_builtins.property
    @pulumi.getter(name="adminServerStartScriptPath")
    def admin_server_start_script_path(self) -> _builtins.str:
        """
        Path to admin server start script.
        """
        return pulumi.get(self, "admin_server_start_script_path")

    @_builtins.property
    @pulumi.getter(name="adminServerStopScriptPath")
    def admin_server_stop_script_path(self) -> _builtins.str:
        """
        Path to admin server stop script.
        """
        return pulumi.get(self, "admin_server_stop_script_path")

    @_builtins.property
    @pulumi.getter(name="isPatchEnabled")
    def is_patch_enabled(self) -> _builtins.bool:
        """
        Whether or not the WebLogic domain is enabled for patching.
        """
        return pulumi.get(self, "is_patch_enabled")

    @_builtins.property
    @pulumi.getter(name="isRollbackOnFailure")
    def is_rollback_on_failure(self) -> _builtins.bool:
        """
        Whether or not to rollback on failure during patching of WebLogic domain.
        """
        return pulumi.get(self, "is_rollback_on_failure")

    @_builtins.property
    @pulumi.getter(name="managedServerControlMode")
    def managed_server_control_mode(self) -> _builtins.str:
        """
        Whether to manage the managed server using Node Manager or scripts.
        """
        return pulumi.get(self, "managed_server_control_mode")

    @_builtins.property
    @pulumi.getter(name="managedServerStartScriptPath")
    def managed_server_start_script_path(self) -> _builtins.str:
        """
        Path to managed server start script.
        """
        return pulumi.get(self, "managed_server_start_script_path")

    @_builtins.property
    @pulumi.getter(name="managedServerStopScriptPath")
    def managed_server_stop_script_path(self) -> _builtins.str:
        """
        Path to managed server stop script.
        """
        return pulumi.get(self, "managed_server_stop_script_path")

    @_builtins.property
    @pulumi.getter(name="serversShutdownTimeout")
    def servers_shutdown_timeout(self) -> _builtins.int:
        """
        Servers shutdown timeout.
        """
        return pulumi.get(self, "servers_shutdown_timeout")


@pulumi.output_type
class GetWlmsWlsDomainScanResultsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsWlsDomainScanResultsScanResultCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsWlsDomainScanResultsScanResultCollectionItemResult']):
        """
        :param Sequence['GetWlmsWlsDomainScanResultsScanResultCollectionItemArgs'] items: List of scan results.
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsWlsDomainScanResultsScanResultCollectionItemResult']:
        """
        List of scan results.
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsWlsDomainScanResultsScanResultCollectionItemResult(dict):
    def __init__(__self__, *,
                 server_check_name: _builtins.str,
                 server_check_result: _builtins.str,
                 server_check_result_id: _builtins.str,
                 server_check_status: _builtins.str,
                 server_name: _builtins.str,
                 time_of_server_check: _builtins.str,
                 wls_domain_id: _builtins.str):
        """
        :param _builtins.str server_check_name: The name of the check performed.
        :param _builtins.str server_check_result: The result of the server check.
        :param _builtins.str server_check_result_id: The identifier of the the server check result.
        :param _builtins.str server_check_status: The status of the server check which is OK, FAILURE, or WARNING.
        :param _builtins.str server_name: The name of the server.
        :param _builtins.str time_of_server_check: The date when the WebLogic server health check is performed (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str wls_domain_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        """
        pulumi.set(__self__, "server_check_name", server_check_name)
        pulumi.set(__self__, "server_check_result", server_check_result)
        pulumi.set(__self__, "server_check_result_id", server_check_result_id)
        pulumi.set(__self__, "server_check_status", server_check_status)
        pulumi.set(__self__, "server_name", server_name)
        pulumi.set(__self__, "time_of_server_check", time_of_server_check)
        pulumi.set(__self__, "wls_domain_id", wls_domain_id)

    @_builtins.property
    @pulumi.getter(name="serverCheckName")
    def server_check_name(self) -> _builtins.str:
        """
        The name of the check performed.
        """
        return pulumi.get(self, "server_check_name")

    @_builtins.property
    @pulumi.getter(name="serverCheckResult")
    def server_check_result(self) -> _builtins.str:
        """
        The result of the server check.
        """
        return pulumi.get(self, "server_check_result")

    @_builtins.property
    @pulumi.getter(name="serverCheckResultId")
    def server_check_result_id(self) -> _builtins.str:
        """
        The identifier of the the server check result.
        """
        return pulumi.get(self, "server_check_result_id")

    @_builtins.property
    @pulumi.getter(name="serverCheckStatus")
    def server_check_status(self) -> _builtins.str:
        """
        The status of the server check which is OK, FAILURE, or WARNING.
        """
        return pulumi.get(self, "server_check_status")

    @_builtins.property
    @pulumi.getter(name="serverName")
    def server_name(self) -> _builtins.str:
        """
        The name of the server.
        """
        return pulumi.get(self, "server_name")

    @_builtins.property
    @pulumi.getter(name="timeOfServerCheck")
    def time_of_server_check(self) -> _builtins.str:
        """
        The date when the WebLogic server health check is performed (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_of_server_check")

    @_builtins.property
    @pulumi.getter(name="wlsDomainId")
    def wls_domain_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        """
        return pulumi.get(self, "wls_domain_id")


@pulumi.output_type
class GetWlmsWlsDomainServerBackupContentMiddlewareResult(dict):
    def __init__(__self__, *,
                 patches: Sequence['outputs.GetWlmsWlsDomainServerBackupContentMiddlewarePatchResult'],
                 version: _builtins.str):
        """
        :param Sequence['GetWlmsWlsDomainServerBackupContentMiddlewarePatchArgs'] patches: The list of patches installed in the middleware included in the backup.
        :param _builtins.str version: The version of the middleware binaries included in the backup.
        """
        pulumi.set(__self__, "patches", patches)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def patches(self) -> Sequence['outputs.GetWlmsWlsDomainServerBackupContentMiddlewarePatchResult']:
        """
        The list of patches installed in the middleware included in the backup.
        """
        return pulumi.get(self, "patches")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        The version of the middleware binaries included in the backup.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetWlmsWlsDomainServerBackupContentMiddlewarePatchResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 display_name: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str description: The description of the WebLogic patch.
        :param _builtins.str display_name: The display name of the WebLogic patch.
        :param _builtins.str id: The ID of the WebLogic patch.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The description of the WebLogic patch.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The display name of the WebLogic patch.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the WebLogic patch.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetWlmsWlsDomainServerBackupsBackupCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsWlsDomainServerBackupsBackupCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsWlsDomainServerBackupsBackupCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsWlsDomainServerBackupsBackupCollectionItemResult(dict):
    def __init__(__self__, *,
                 backup_location: _builtins.str,
                 content_type: _builtins.str,
                 id: _builtins.str,
                 managed_instance_id: _builtins.str,
                 time_created: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str backup_location: The location of the backup. For backups of type LOCAL_FILE this is the absolute path of the backup file.
        :param _builtins.str content_type: The type of content of the backup.
        :param _builtins.str id: The unique identifier of the backup.
        :param _builtins.str managed_instance_id: The managed instance ID of the server for which the backup was created.
        :param _builtins.str time_created: The date and time when the backup was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str type: The type of the backup.
        """
        pulumi.set(__self__, "backup_location", backup_location)
        pulumi.set(__self__, "content_type", content_type)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter(name="backupLocation")
    def backup_location(self) -> _builtins.str:
        """
        The location of the backup. For backups of type LOCAL_FILE this is the absolute path of the backup file.
        """
        return pulumi.get(self, "backup_location")

    @_builtins.property
    @pulumi.getter(name="contentType")
    def content_type(self) -> _builtins.str:
        """
        The type of content of the backup.
        """
        return pulumi.get(self, "content_type")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The unique identifier of the backup.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The managed instance ID of the server for which the backup was created.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time when the backup was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The type of the backup.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetWlmsWlsDomainServerBackupsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsWlsDomainServerInstalledPatchesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsWlsDomainServerInstalledPatchesInstalledPatchCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsWlsDomainServerInstalledPatchesInstalledPatchCollectionItemResult']):
        """
        :param Sequence['GetWlmsWlsDomainServerInstalledPatchesInstalledPatchCollectionItemArgs'] items: List of installed patches per server
        """
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsWlsDomainServerInstalledPatchesInstalledPatchCollectionItemResult']:
        """
        List of installed patches per server
        """
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsWlsDomainServerInstalledPatchesInstalledPatchCollectionItemResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 display_name: _builtins.str,
                 id: _builtins.str):
        """
        :param _builtins.str description: The description of the WebLogic patch.
        :param _builtins.str display_name: The name of the WebLogic patch.
        :param _builtins.str id: The ID of the WebLogic patch.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The description of the WebLogic patch.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The name of the WebLogic patch.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the WebLogic patch.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetWlmsWlsDomainServersFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        """
        :param _builtins.str name: The name of the resource.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsWlsDomainServersServerCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsWlsDomainServersServerCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsWlsDomainServersServerCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsWlsDomainServersServerCollectionItemResult(dict):
    def __init__(__self__, *,
                 host_name: _builtins.str,
                 id: _builtins.str,
                 is_admin: _builtins.bool,
                 jdk_path: _builtins.str,
                 jdk_version: _builtins.str,
                 latest_patches_status: _builtins.str,
                 managed_instance_id: _builtins.str,
                 middleware_path: _builtins.str,
                 middleware_type: _builtins.str,
                 name: _builtins.str,
                 patch_readiness_status: _builtins.str,
                 restart_order: _builtins.int,
                 status: _builtins.str,
                 time_created: _builtins.str,
                 time_updated: _builtins.str,
                 weblogic_version: _builtins.str,
                 wls_domain_id: _builtins.str,
                 wls_domain_name: _builtins.str,
                 wls_domain_path: _builtins.str):
        """
        :param _builtins.str host_name: The name of the server.
        :param _builtins.str id: The unique identifier of the server.
        :param _builtins.bool is_admin: Whether or not the server is an admin node.
        :param _builtins.str jdk_path: The JDK path on the server.
        :param _builtins.str jdk_version: The JDK version on the server.
        :param _builtins.str latest_patches_status: Whether or not the server has installed the latest patches.
        :param _builtins.str managed_instance_id: The managed instance ID of the server.
        :param _builtins.str middleware_path: The middleware path on the server.
        :param _builtins.str middleware_type: The middleware type on the server.
        :param _builtins.str name: The name of the resource.
        :param _builtins.str patch_readiness_status: The patch readiness status of the server.
        :param _builtins.int restart_order: The restart order assigned to the server.
        :param _builtins.str status: The status of the server.
        :param _builtins.str time_created: The date and time the server was first reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_updated: The date and time the server was last reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str weblogic_version: The version of the WebLogic domain of the server
        :param _builtins.str wls_domain_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        :param _builtins.str wls_domain_name: The name of the WebLogic domain to which the server belongs.
        :param _builtins.str wls_domain_path: The path of the WebLogic domain to which the server belongs.
        """
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_admin", is_admin)
        pulumi.set(__self__, "jdk_path", jdk_path)
        pulumi.set(__self__, "jdk_version", jdk_version)
        pulumi.set(__self__, "latest_patches_status", latest_patches_status)
        pulumi.set(__self__, "managed_instance_id", managed_instance_id)
        pulumi.set(__self__, "middleware_path", middleware_path)
        pulumi.set(__self__, "middleware_type", middleware_type)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "patch_readiness_status", patch_readiness_status)
        pulumi.set(__self__, "restart_order", restart_order)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)
        pulumi.set(__self__, "weblogic_version", weblogic_version)
        pulumi.set(__self__, "wls_domain_id", wls_domain_id)
        pulumi.set(__self__, "wls_domain_name", wls_domain_name)
        pulumi.set(__self__, "wls_domain_path", wls_domain_path)

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        The name of the server.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The unique identifier of the server.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="isAdmin")
    def is_admin(self) -> _builtins.bool:
        """
        Whether or not the server is an admin node.
        """
        return pulumi.get(self, "is_admin")

    @_builtins.property
    @pulumi.getter(name="jdkPath")
    def jdk_path(self) -> _builtins.str:
        """
        The JDK path on the server.
        """
        return pulumi.get(self, "jdk_path")

    @_builtins.property
    @pulumi.getter(name="jdkVersion")
    def jdk_version(self) -> _builtins.str:
        """
        The JDK version on the server.
        """
        return pulumi.get(self, "jdk_version")

    @_builtins.property
    @pulumi.getter(name="latestPatchesStatus")
    def latest_patches_status(self) -> _builtins.str:
        """
        Whether or not the server has installed the latest patches.
        """
        return pulumi.get(self, "latest_patches_status")

    @_builtins.property
    @pulumi.getter(name="managedInstanceId")
    def managed_instance_id(self) -> _builtins.str:
        """
        The managed instance ID of the server.
        """
        return pulumi.get(self, "managed_instance_id")

    @_builtins.property
    @pulumi.getter(name="middlewarePath")
    def middleware_path(self) -> _builtins.str:
        """
        The middleware path on the server.
        """
        return pulumi.get(self, "middleware_path")

    @_builtins.property
    @pulumi.getter(name="middlewareType")
    def middleware_type(self) -> _builtins.str:
        """
        The middleware type on the server.
        """
        return pulumi.get(self, "middleware_type")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="patchReadinessStatus")
    def patch_readiness_status(self) -> _builtins.str:
        """
        The patch readiness status of the server.
        """
        return pulumi.get(self, "patch_readiness_status")

    @_builtins.property
    @pulumi.getter(name="restartOrder")
    def restart_order(self) -> _builtins.int:
        """
        The restart order assigned to the server.
        """
        return pulumi.get(self, "restart_order")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the server.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the server was first reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        The date and time the server was last reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_updated")

    @_builtins.property
    @pulumi.getter(name="weblogicVersion")
    def weblogic_version(self) -> _builtins.str:
        """
        The version of the WebLogic domain of the server
        """
        return pulumi.get(self, "weblogic_version")

    @_builtins.property
    @pulumi.getter(name="wlsDomainId")
    def wls_domain_id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        """
        return pulumi.get(self, "wls_domain_id")

    @_builtins.property
    @pulumi.getter(name="wlsDomainName")
    def wls_domain_name(self) -> _builtins.str:
        """
        The name of the WebLogic domain to which the server belongs.
        """
        return pulumi.get(self, "wls_domain_name")

    @_builtins.property
    @pulumi.getter(name="wlsDomainPath")
    def wls_domain_path(self) -> _builtins.str:
        """
        The path of the WebLogic domain to which the server belongs.
        """
        return pulumi.get(self, "wls_domain_path")


@pulumi.output_type
class GetWlmsWlsDomainsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str],
                 regex: Optional[_builtins.bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter
    def regex(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetWlmsWlsDomainsWlsDomainCollectionResult(dict):
    def __init__(__self__, *,
                 items: Sequence['outputs.GetWlmsWlsDomainsWlsDomainCollectionItemResult']):
        pulumi.set(__self__, "items", items)

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetWlmsWlsDomainsWlsDomainCollectionItemResult']:
        return pulumi.get(self, "items")


@pulumi.output_type
class GetWlmsWlsDomainsWlsDomainCollectionItemResult(dict):
    def __init__(__self__, *,
                 compartment_id: _builtins.str,
                 configurations: Sequence['outputs.GetWlmsWlsDomainsWlsDomainCollectionItemConfigurationResult'],
                 defined_tags: Mapping[str, _builtins.str],
                 display_name: _builtins.str,
                 freeform_tags: Mapping[str, _builtins.str],
                 id: _builtins.str,
                 is_accepted_terms_and_conditions: _builtins.bool,
                 lifecycle_details: _builtins.str,
                 middleware_type: _builtins.str,
                 patch_readiness_status: _builtins.str,
                 state: _builtins.str,
                 system_tags: Mapping[str, _builtins.str],
                 time_created: _builtins.str,
                 time_updated: _builtins.str,
                 weblogic_version: _builtins.str):
        """
        :param _builtins.str compartment_id: The OCID of the compartment that contains the resources to list. This filter returns  only resources contained within the specified compartment.
        :param Sequence['GetWlmsWlsDomainsWlsDomainCollectionItemConfigurationArgs'] configurations: The WebLogic domain configuration.
        :param Mapping[str, _builtins.str] defined_tags: Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        :param _builtins.str display_name: The display name.
        :param Mapping[str, _builtins.str] freeform_tags: Free-form tags for this resource. Each tag is a key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        :param _builtins.str id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        :param _builtins.bool is_accepted_terms_and_conditions: Whether or not the terms of use agreement has been accepted for the WebLogic domain.
        :param _builtins.str lifecycle_details: A message that describes the current state of the WebLogic domain in more detail. For example, it can be used to provide actionable information for a resource in the Failed state.
        :param _builtins.str middleware_type: A filter to return WebLogic domains based on the type of middleware of the WebLogic domain.
        :param _builtins.str patch_readiness_status: A filter to return domains based on the patch readiness status.
        :param _builtins.str state: A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        :param Mapping[str, _builtins.str] system_tags: System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param _builtins.str time_created: The date and time the WebLogic domain was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str time_updated: The date and time the WebLogic domain was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        :param _builtins.str weblogic_version: A filter to return WebLogic domains based on the WebLogic version.
        """
        pulumi.set(__self__, "compartment_id", compartment_id)
        pulumi.set(__self__, "configurations", configurations)
        pulumi.set(__self__, "defined_tags", defined_tags)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "freeform_tags", freeform_tags)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_accepted_terms_and_conditions", is_accepted_terms_and_conditions)
        pulumi.set(__self__, "lifecycle_details", lifecycle_details)
        pulumi.set(__self__, "middleware_type", middleware_type)
        pulumi.set(__self__, "patch_readiness_status", patch_readiness_status)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "system_tags", system_tags)
        pulumi.set(__self__, "time_created", time_created)
        pulumi.set(__self__, "time_updated", time_updated)
        pulumi.set(__self__, "weblogic_version", weblogic_version)

    @_builtins.property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> _builtins.str:
        """
        The OCID of the compartment that contains the resources to list. This filter returns  only resources contained within the specified compartment.
        """
        return pulumi.get(self, "compartment_id")

    @_builtins.property
    @pulumi.getter
    def configurations(self) -> Sequence['outputs.GetWlmsWlsDomainsWlsDomainCollectionItemConfigurationResult']:
        """
        The WebLogic domain configuration.
        """
        return pulumi.get(self, "configurations")

    @_builtins.property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Mapping[str, _builtins.str]:
        """
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        """
        return pulumi.get(self, "defined_tags")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        The display name.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Mapping[str, _builtins.str]:
        """
        Free-form tags for this resource. Each tag is a key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        """
        return pulumi.get(self, "freeform_tags")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="isAcceptedTermsAndConditions")
    def is_accepted_terms_and_conditions(self) -> _builtins.bool:
        """
        Whether or not the terms of use agreement has been accepted for the WebLogic domain.
        """
        return pulumi.get(self, "is_accepted_terms_and_conditions")

    @_builtins.property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> _builtins.str:
        """
        A message that describes the current state of the WebLogic domain in more detail. For example, it can be used to provide actionable information for a resource in the Failed state.
        """
        return pulumi.get(self, "lifecycle_details")

    @_builtins.property
    @pulumi.getter(name="middlewareType")
    def middleware_type(self) -> _builtins.str:
        """
        A filter to return WebLogic domains based on the type of middleware of the WebLogic domain.
        """
        return pulumi.get(self, "middleware_type")

    @_builtins.property
    @pulumi.getter(name="patchReadinessStatus")
    def patch_readiness_status(self) -> _builtins.str:
        """
        A filter to return domains based on the patch readiness status.
        """
        return pulumi.get(self, "patch_readiness_status")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Mapping[str, _builtins.str]:
        """
        System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @_builtins.property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> _builtins.str:
        """
        The date and time the WebLogic domain was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_created")

    @_builtins.property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> _builtins.str:
        """
        The date and time the WebLogic domain was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        """
        return pulumi.get(self, "time_updated")

    @_builtins.property
    @pulumi.getter(name="weblogicVersion")
    def weblogic_version(self) -> _builtins.str:
        """
        A filter to return WebLogic domains based on the WebLogic version.
        """
        return pulumi.get(self, "weblogic_version")


@pulumi.output_type
class GetWlmsWlsDomainsWlsDomainCollectionItemConfigurationResult(dict):
    def __init__(__self__, *,
                 admin_server_control_mode: _builtins.str,
                 admin_server_start_script_path: _builtins.str,
                 admin_server_stop_script_path: _builtins.str,
                 is_patch_enabled: _builtins.bool,
                 is_rollback_on_failure: _builtins.bool,
                 managed_server_control_mode: _builtins.str,
                 managed_server_start_script_path: _builtins.str,
                 managed_server_stop_script_path: _builtins.str,
                 servers_shutdown_timeout: _builtins.int):
        """
        :param _builtins.str admin_server_control_mode: Whether to manage the admin server using Node Manager or scripts.
        :param _builtins.str admin_server_start_script_path: Path to admin server start script.
        :param _builtins.str admin_server_stop_script_path: Path to admin server stop script.
        :param _builtins.bool is_patch_enabled: Whether or not the WebLogic domain is enabled for patching.
        :param _builtins.bool is_rollback_on_failure: Whether or not to rollback on failure during patching of WebLogic domain.
        :param _builtins.str managed_server_control_mode: Whether to manage the managed server using Node Manager or scripts.
        :param _builtins.str managed_server_start_script_path: Path to managed server start script.
        :param _builtins.str managed_server_stop_script_path: Path to managed server stop script.
        :param _builtins.int servers_shutdown_timeout: Servers shutdown timeout.
        """
        pulumi.set(__self__, "admin_server_control_mode", admin_server_control_mode)
        pulumi.set(__self__, "admin_server_start_script_path", admin_server_start_script_path)
        pulumi.set(__self__, "admin_server_stop_script_path", admin_server_stop_script_path)
        pulumi.set(__self__, "is_patch_enabled", is_patch_enabled)
        pulumi.set(__self__, "is_rollback_on_failure", is_rollback_on_failure)
        pulumi.set(__self__, "managed_server_control_mode", managed_server_control_mode)
        pulumi.set(__self__, "managed_server_start_script_path", managed_server_start_script_path)
        pulumi.set(__self__, "managed_server_stop_script_path", managed_server_stop_script_path)
        pulumi.set(__self__, "servers_shutdown_timeout", servers_shutdown_timeout)

    @_builtins.property
    @pulumi.getter(name="adminServerControlMode")
    def admin_server_control_mode(self) -> _builtins.str:
        """
        Whether to manage the admin server using Node Manager or scripts.
        """
        return pulumi.get(self, "admin_server_control_mode")

    @_builtins.property
    @pulumi.getter(name="adminServerStartScriptPath")
    def admin_server_start_script_path(self) -> _builtins.str:
        """
        Path to admin server start script.
        """
        return pulumi.get(self, "admin_server_start_script_path")

    @_builtins.property
    @pulumi.getter(name="adminServerStopScriptPath")
    def admin_server_stop_script_path(self) -> _builtins.str:
        """
        Path to admin server stop script.
        """
        return pulumi.get(self, "admin_server_stop_script_path")

    @_builtins.property
    @pulumi.getter(name="isPatchEnabled")
    def is_patch_enabled(self) -> _builtins.bool:
        """
        Whether or not the WebLogic domain is enabled for patching.
        """
        return pulumi.get(self, "is_patch_enabled")

    @_builtins.property
    @pulumi.getter(name="isRollbackOnFailure")
    def is_rollback_on_failure(self) -> _builtins.bool:
        """
        Whether or not to rollback on failure during patching of WebLogic domain.
        """
        return pulumi.get(self, "is_rollback_on_failure")

    @_builtins.property
    @pulumi.getter(name="managedServerControlMode")
    def managed_server_control_mode(self) -> _builtins.str:
        """
        Whether to manage the managed server using Node Manager or scripts.
        """
        return pulumi.get(self, "managed_server_control_mode")

    @_builtins.property
    @pulumi.getter(name="managedServerStartScriptPath")
    def managed_server_start_script_path(self) -> _builtins.str:
        """
        Path to managed server start script.
        """
        return pulumi.get(self, "managed_server_start_script_path")

    @_builtins.property
    @pulumi.getter(name="managedServerStopScriptPath")
    def managed_server_stop_script_path(self) -> _builtins.str:
        """
        Path to managed server stop script.
        """
        return pulumi.get(self, "managed_server_stop_script_path")

    @_builtins.property
    @pulumi.getter(name="serversShutdownTimeout")
    def servers_shutdown_timeout(self) -> _builtins.int:
        """
        Servers shutdown timeout.
        """
        return pulumi.get(self, "servers_shutdown_timeout")


