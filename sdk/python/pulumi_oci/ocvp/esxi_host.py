# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['EsxiHostArgs', 'EsxiHost']

@pulumi.input_type
class EsxiHostArgs:
    def __init__(__self__, *,
                 billing_donor_host_id: Optional[pulumi.Input[str]] = None,
                 capacity_reservation_id: Optional[pulumi.Input[str]] = None,
                 compute_availability_domain: Optional[pulumi.Input[str]] = None,
                 current_sku: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 failed_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 host_ocpu_count: Optional[pulumi.Input[float]] = None,
                 host_shape_name: Optional[pulumi.Input[str]] = None,
                 next_sku: Optional[pulumi.Input[str]] = None,
                 non_upgraded_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 sddc_id: Optional[pulumi.Input[str]] = None,
                 swap_billing_host_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a EsxiHost resource.
        """
        if billing_donor_host_id is not None:
            warnings.warn("""This 'billing_donor_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
            pulumi.log.warn("""billing_donor_host_id is deprecated: This 'billing_donor_host_id' argument has been deprecated and will be computed only.""")
        if billing_donor_host_id is not None:
            pulumi.set(__self__, "billing_donor_host_id", billing_donor_host_id)
        if capacity_reservation_id is not None:
            pulumi.set(__self__, "capacity_reservation_id", capacity_reservation_id)
        if compute_availability_domain is not None:
            pulumi.set(__self__, "compute_availability_domain", compute_availability_domain)
        if current_sku is not None:
            warnings.warn("""The 'current_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
            pulumi.log.warn("""current_sku is deprecated: The 'current_sku' field has been deprecated. It is no longer supported.""")
        if current_sku is not None:
            pulumi.set(__self__, "current_sku", current_sku)
        if defined_tags is not None:
            pulumi.set(__self__, "defined_tags", defined_tags)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if failed_esxi_host_id is not None:
            warnings.warn("""This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
            pulumi.log.warn("""failed_esxi_host_id is deprecated: This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""")
        if failed_esxi_host_id is not None:
            pulumi.set(__self__, "failed_esxi_host_id", failed_esxi_host_id)
        if freeform_tags is not None:
            pulumi.set(__self__, "freeform_tags", freeform_tags)
        if host_ocpu_count is not None:
            pulumi.set(__self__, "host_ocpu_count", host_ocpu_count)
        if host_shape_name is not None:
            pulumi.set(__self__, "host_shape_name", host_shape_name)
        if next_sku is not None:
            warnings.warn("""The 'next_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
            pulumi.log.warn("""next_sku is deprecated: The 'next_sku' field has been deprecated. It is no longer supported.""")
        if next_sku is not None:
            pulumi.set(__self__, "next_sku", next_sku)
        if non_upgraded_esxi_host_id is not None:
            warnings.warn("""This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
            pulumi.log.warn("""non_upgraded_esxi_host_id is deprecated: This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""")
        if non_upgraded_esxi_host_id is not None:
            pulumi.set(__self__, "non_upgraded_esxi_host_id", non_upgraded_esxi_host_id)
        if sddc_id is not None:
            warnings.warn("""The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""", DeprecationWarning)
            pulumi.log.warn("""sddc_id is deprecated: The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""")
        if sddc_id is not None:
            pulumi.set(__self__, "sddc_id", sddc_id)
        if swap_billing_host_id is not None:
            pulumi.set(__self__, "swap_billing_host_id", swap_billing_host_id)

    @property
    @pulumi.getter(name="billingDonorHostId")
    def billing_donor_host_id(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""This 'billing_donor_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
        pulumi.log.warn("""billing_donor_host_id is deprecated: This 'billing_donor_host_id' argument has been deprecated and will be computed only.""")

        return pulumi.get(self, "billing_donor_host_id")

    @billing_donor_host_id.setter
    def billing_donor_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "billing_donor_host_id", value)

    @property
    @pulumi.getter(name="capacityReservationId")
    def capacity_reservation_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "capacity_reservation_id")

    @capacity_reservation_id.setter
    def capacity_reservation_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "capacity_reservation_id", value)

    @property
    @pulumi.getter(name="computeAvailabilityDomain")
    def compute_availability_domain(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "compute_availability_domain")

    @compute_availability_domain.setter
    def compute_availability_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compute_availability_domain", value)

    @property
    @pulumi.getter(name="currentSku")
    def current_sku(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""The 'current_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
        pulumi.log.warn("""current_sku is deprecated: The 'current_sku' field has been deprecated. It is no longer supported.""")

        return pulumi.get(self, "current_sku")

    @current_sku.setter
    def current_sku(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "current_sku", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="failedEsxiHostId")
    def failed_esxi_host_id(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
        pulumi.log.warn("""failed_esxi_host_id is deprecated: This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""")

        return pulumi.get(self, "failed_esxi_host_id")

    @failed_esxi_host_id.setter
    def failed_esxi_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "failed_esxi_host_id", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="hostOcpuCount")
    def host_ocpu_count(self) -> Optional[pulumi.Input[float]]:
        return pulumi.get(self, "host_ocpu_count")

    @host_ocpu_count.setter
    def host_ocpu_count(self, value: Optional[pulumi.Input[float]]):
        pulumi.set(self, "host_ocpu_count", value)

    @property
    @pulumi.getter(name="hostShapeName")
    def host_shape_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "host_shape_name")

    @host_shape_name.setter
    def host_shape_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_shape_name", value)

    @property
    @pulumi.getter(name="nextSku")
    def next_sku(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""The 'next_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
        pulumi.log.warn("""next_sku is deprecated: The 'next_sku' field has been deprecated. It is no longer supported.""")

        return pulumi.get(self, "next_sku")

    @next_sku.setter
    def next_sku(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "next_sku", value)

    @property
    @pulumi.getter(name="nonUpgradedEsxiHostId")
    def non_upgraded_esxi_host_id(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
        pulumi.log.warn("""non_upgraded_esxi_host_id is deprecated: This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""")

        return pulumi.get(self, "non_upgraded_esxi_host_id")

    @non_upgraded_esxi_host_id.setter
    def non_upgraded_esxi_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "non_upgraded_esxi_host_id", value)

    @property
    @pulumi.getter(name="sddcId")
    def sddc_id(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""", DeprecationWarning)
        pulumi.log.warn("""sddc_id is deprecated: The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""")

        return pulumi.get(self, "sddc_id")

    @sddc_id.setter
    def sddc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sddc_id", value)

    @property
    @pulumi.getter(name="swapBillingHostId")
    def swap_billing_host_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "swap_billing_host_id")

    @swap_billing_host_id.setter
    def swap_billing_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "swap_billing_host_id", value)


@pulumi.input_type
class _EsxiHostState:
    def __init__(__self__, *,
                 billing_contract_end_date: Optional[pulumi.Input[str]] = None,
                 billing_donor_host_id: Optional[pulumi.Input[str]] = None,
                 capacity_reservation_id: Optional[pulumi.Input[str]] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 compute_availability_domain: Optional[pulumi.Input[str]] = None,
                 compute_instance_id: Optional[pulumi.Input[str]] = None,
                 current_sku: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 failed_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 grace_period_end_date: Optional[pulumi.Input[str]] = None,
                 host_ocpu_count: Optional[pulumi.Input[float]] = None,
                 host_shape_name: Optional[pulumi.Input[str]] = None,
                 is_billing_continuation_in_progress: Optional[pulumi.Input[bool]] = None,
                 is_billing_swapping_in_progress: Optional[pulumi.Input[bool]] = None,
                 next_sku: Optional[pulumi.Input[str]] = None,
                 non_upgraded_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 replacement_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 sddc_id: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 swap_billing_host_id: Optional[pulumi.Input[str]] = None,
                 time_created: Optional[pulumi.Input[str]] = None,
                 time_updated: Optional[pulumi.Input[str]] = None,
                 upgraded_replacement_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 vmware_software_version: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering EsxiHost resources.
        """
        if billing_contract_end_date is not None:
            pulumi.set(__self__, "billing_contract_end_date", billing_contract_end_date)
        if billing_donor_host_id is not None:
            warnings.warn("""This 'billing_donor_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
            pulumi.log.warn("""billing_donor_host_id is deprecated: This 'billing_donor_host_id' argument has been deprecated and will be computed only.""")
        if billing_donor_host_id is not None:
            pulumi.set(__self__, "billing_donor_host_id", billing_donor_host_id)
        if capacity_reservation_id is not None:
            pulumi.set(__self__, "capacity_reservation_id", capacity_reservation_id)
        if compartment_id is not None:
            pulumi.set(__self__, "compartment_id", compartment_id)
        if compute_availability_domain is not None:
            pulumi.set(__self__, "compute_availability_domain", compute_availability_domain)
        if compute_instance_id is not None:
            pulumi.set(__self__, "compute_instance_id", compute_instance_id)
        if current_sku is not None:
            warnings.warn("""The 'current_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
            pulumi.log.warn("""current_sku is deprecated: The 'current_sku' field has been deprecated. It is no longer supported.""")
        if current_sku is not None:
            pulumi.set(__self__, "current_sku", current_sku)
        if defined_tags is not None:
            pulumi.set(__self__, "defined_tags", defined_tags)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if failed_esxi_host_id is not None:
            warnings.warn("""This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
            pulumi.log.warn("""failed_esxi_host_id is deprecated: This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""")
        if failed_esxi_host_id is not None:
            pulumi.set(__self__, "failed_esxi_host_id", failed_esxi_host_id)
        if freeform_tags is not None:
            pulumi.set(__self__, "freeform_tags", freeform_tags)
        if grace_period_end_date is not None:
            pulumi.set(__self__, "grace_period_end_date", grace_period_end_date)
        if host_ocpu_count is not None:
            pulumi.set(__self__, "host_ocpu_count", host_ocpu_count)
        if host_shape_name is not None:
            pulumi.set(__self__, "host_shape_name", host_shape_name)
        if is_billing_continuation_in_progress is not None:
            pulumi.set(__self__, "is_billing_continuation_in_progress", is_billing_continuation_in_progress)
        if is_billing_swapping_in_progress is not None:
            pulumi.set(__self__, "is_billing_swapping_in_progress", is_billing_swapping_in_progress)
        if next_sku is not None:
            warnings.warn("""The 'next_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
            pulumi.log.warn("""next_sku is deprecated: The 'next_sku' field has been deprecated. It is no longer supported.""")
        if next_sku is not None:
            pulumi.set(__self__, "next_sku", next_sku)
        if non_upgraded_esxi_host_id is not None:
            warnings.warn("""This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
            pulumi.log.warn("""non_upgraded_esxi_host_id is deprecated: This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""")
        if non_upgraded_esxi_host_id is not None:
            pulumi.set(__self__, "non_upgraded_esxi_host_id", non_upgraded_esxi_host_id)
        if replacement_esxi_host_id is not None:
            pulumi.set(__self__, "replacement_esxi_host_id", replacement_esxi_host_id)
        if sddc_id is not None:
            warnings.warn("""The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""", DeprecationWarning)
            pulumi.log.warn("""sddc_id is deprecated: The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""")
        if sddc_id is not None:
            pulumi.set(__self__, "sddc_id", sddc_id)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if swap_billing_host_id is not None:
            pulumi.set(__self__, "swap_billing_host_id", swap_billing_host_id)
        if time_created is not None:
            pulumi.set(__self__, "time_created", time_created)
        if time_updated is not None:
            pulumi.set(__self__, "time_updated", time_updated)
        if upgraded_replacement_esxi_host_id is not None:
            pulumi.set(__self__, "upgraded_replacement_esxi_host_id", upgraded_replacement_esxi_host_id)
        if vmware_software_version is not None:
            pulumi.set(__self__, "vmware_software_version", vmware_software_version)

    @property
    @pulumi.getter(name="billingContractEndDate")
    def billing_contract_end_date(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "billing_contract_end_date")

    @billing_contract_end_date.setter
    def billing_contract_end_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "billing_contract_end_date", value)

    @property
    @pulumi.getter(name="billingDonorHostId")
    def billing_donor_host_id(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""This 'billing_donor_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
        pulumi.log.warn("""billing_donor_host_id is deprecated: This 'billing_donor_host_id' argument has been deprecated and will be computed only.""")

        return pulumi.get(self, "billing_donor_host_id")

    @billing_donor_host_id.setter
    def billing_donor_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "billing_donor_host_id", value)

    @property
    @pulumi.getter(name="capacityReservationId")
    def capacity_reservation_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "capacity_reservation_id")

    @capacity_reservation_id.setter
    def capacity_reservation_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "capacity_reservation_id", value)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="computeAvailabilityDomain")
    def compute_availability_domain(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "compute_availability_domain")

    @compute_availability_domain.setter
    def compute_availability_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compute_availability_domain", value)

    @property
    @pulumi.getter(name="computeInstanceId")
    def compute_instance_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "compute_instance_id")

    @compute_instance_id.setter
    def compute_instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compute_instance_id", value)

    @property
    @pulumi.getter(name="currentSku")
    def current_sku(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""The 'current_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
        pulumi.log.warn("""current_sku is deprecated: The 'current_sku' field has been deprecated. It is no longer supported.""")

        return pulumi.get(self, "current_sku")

    @current_sku.setter
    def current_sku(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "current_sku", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="failedEsxiHostId")
    def failed_esxi_host_id(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
        pulumi.log.warn("""failed_esxi_host_id is deprecated: This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""")

        return pulumi.get(self, "failed_esxi_host_id")

    @failed_esxi_host_id.setter
    def failed_esxi_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "failed_esxi_host_id", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="gracePeriodEndDate")
    def grace_period_end_date(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "grace_period_end_date")

    @grace_period_end_date.setter
    def grace_period_end_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grace_period_end_date", value)

    @property
    @pulumi.getter(name="hostOcpuCount")
    def host_ocpu_count(self) -> Optional[pulumi.Input[float]]:
        return pulumi.get(self, "host_ocpu_count")

    @host_ocpu_count.setter
    def host_ocpu_count(self, value: Optional[pulumi.Input[float]]):
        pulumi.set(self, "host_ocpu_count", value)

    @property
    @pulumi.getter(name="hostShapeName")
    def host_shape_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "host_shape_name")

    @host_shape_name.setter
    def host_shape_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_shape_name", value)

    @property
    @pulumi.getter(name="isBillingContinuationInProgress")
    def is_billing_continuation_in_progress(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "is_billing_continuation_in_progress")

    @is_billing_continuation_in_progress.setter
    def is_billing_continuation_in_progress(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_billing_continuation_in_progress", value)

    @property
    @pulumi.getter(name="isBillingSwappingInProgress")
    def is_billing_swapping_in_progress(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "is_billing_swapping_in_progress")

    @is_billing_swapping_in_progress.setter
    def is_billing_swapping_in_progress(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_billing_swapping_in_progress", value)

    @property
    @pulumi.getter(name="nextSku")
    def next_sku(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""The 'next_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
        pulumi.log.warn("""next_sku is deprecated: The 'next_sku' field has been deprecated. It is no longer supported.""")

        return pulumi.get(self, "next_sku")

    @next_sku.setter
    def next_sku(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "next_sku", value)

    @property
    @pulumi.getter(name="nonUpgradedEsxiHostId")
    def non_upgraded_esxi_host_id(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
        pulumi.log.warn("""non_upgraded_esxi_host_id is deprecated: This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""")

        return pulumi.get(self, "non_upgraded_esxi_host_id")

    @non_upgraded_esxi_host_id.setter
    def non_upgraded_esxi_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "non_upgraded_esxi_host_id", value)

    @property
    @pulumi.getter(name="replacementEsxiHostId")
    def replacement_esxi_host_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "replacement_esxi_host_id")

    @replacement_esxi_host_id.setter
    def replacement_esxi_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "replacement_esxi_host_id", value)

    @property
    @pulumi.getter(name="sddcId")
    def sddc_id(self) -> Optional[pulumi.Input[str]]:
        warnings.warn("""The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""", DeprecationWarning)
        pulumi.log.warn("""sddc_id is deprecated: The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""")

        return pulumi.get(self, "sddc_id")

    @sddc_id.setter
    def sddc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sddc_id", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter(name="swapBillingHostId")
    def swap_billing_host_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "swap_billing_host_id")

    @swap_billing_host_id.setter
    def swap_billing_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "swap_billing_host_id", value)

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "time_created")

    @time_created.setter
    def time_created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_created", value)

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "time_updated")

    @time_updated.setter
    def time_updated(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_updated", value)

    @property
    @pulumi.getter(name="upgradedReplacementEsxiHostId")
    def upgraded_replacement_esxi_host_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "upgraded_replacement_esxi_host_id")

    @upgraded_replacement_esxi_host_id.setter
    def upgraded_replacement_esxi_host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "upgraded_replacement_esxi_host_id", value)

    @property
    @pulumi.getter(name="vmwareSoftwareVersion")
    def vmware_software_version(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vmware_software_version")

    @vmware_software_version.setter
    def vmware_software_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vmware_software_version", value)


class EsxiHost(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 billing_donor_host_id: Optional[pulumi.Input[str]] = None,
                 capacity_reservation_id: Optional[pulumi.Input[str]] = None,
                 compute_availability_domain: Optional[pulumi.Input[str]] = None,
                 current_sku: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 failed_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 host_ocpu_count: Optional[pulumi.Input[float]] = None,
                 host_shape_name: Optional[pulumi.Input[str]] = None,
                 next_sku: Optional[pulumi.Input[str]] = None,
                 non_upgraded_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 sddc_id: Optional[pulumi.Input[str]] = None,
                 swap_billing_host_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a EsxiHost resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[EsxiHostArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a EsxiHost resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param EsxiHostArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EsxiHostArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 billing_donor_host_id: Optional[pulumi.Input[str]] = None,
                 capacity_reservation_id: Optional[pulumi.Input[str]] = None,
                 compute_availability_domain: Optional[pulumi.Input[str]] = None,
                 current_sku: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 failed_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 host_ocpu_count: Optional[pulumi.Input[float]] = None,
                 host_shape_name: Optional[pulumi.Input[str]] = None,
                 next_sku: Optional[pulumi.Input[str]] = None,
                 non_upgraded_esxi_host_id: Optional[pulumi.Input[str]] = None,
                 sddc_id: Optional[pulumi.Input[str]] = None,
                 swap_billing_host_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EsxiHostArgs.__new__(EsxiHostArgs)

            __props__.__dict__["billing_donor_host_id"] = billing_donor_host_id
            __props__.__dict__["capacity_reservation_id"] = capacity_reservation_id
            __props__.__dict__["compute_availability_domain"] = compute_availability_domain
            __props__.__dict__["current_sku"] = current_sku
            __props__.__dict__["defined_tags"] = defined_tags
            __props__.__dict__["display_name"] = display_name
            __props__.__dict__["failed_esxi_host_id"] = failed_esxi_host_id
            __props__.__dict__["freeform_tags"] = freeform_tags
            __props__.__dict__["host_ocpu_count"] = host_ocpu_count
            __props__.__dict__["host_shape_name"] = host_shape_name
            __props__.__dict__["next_sku"] = next_sku
            __props__.__dict__["non_upgraded_esxi_host_id"] = non_upgraded_esxi_host_id
            __props__.__dict__["sddc_id"] = sddc_id
            __props__.__dict__["swap_billing_host_id"] = swap_billing_host_id
            __props__.__dict__["billing_contract_end_date"] = None
            __props__.__dict__["compartment_id"] = None
            __props__.__dict__["compute_instance_id"] = None
            __props__.__dict__["grace_period_end_date"] = None
            __props__.__dict__["is_billing_continuation_in_progress"] = None
            __props__.__dict__["is_billing_swapping_in_progress"] = None
            __props__.__dict__["replacement_esxi_host_id"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["time_created"] = None
            __props__.__dict__["time_updated"] = None
            __props__.__dict__["upgraded_replacement_esxi_host_id"] = None
            __props__.__dict__["vmware_software_version"] = None
        super(EsxiHost, __self__).__init__(
            'oci:Ocvp/esxiHost:EsxiHost',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            billing_contract_end_date: Optional[pulumi.Input[str]] = None,
            billing_donor_host_id: Optional[pulumi.Input[str]] = None,
            capacity_reservation_id: Optional[pulumi.Input[str]] = None,
            compartment_id: Optional[pulumi.Input[str]] = None,
            compute_availability_domain: Optional[pulumi.Input[str]] = None,
            compute_instance_id: Optional[pulumi.Input[str]] = None,
            current_sku: Optional[pulumi.Input[str]] = None,
            defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            display_name: Optional[pulumi.Input[str]] = None,
            failed_esxi_host_id: Optional[pulumi.Input[str]] = None,
            freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            grace_period_end_date: Optional[pulumi.Input[str]] = None,
            host_ocpu_count: Optional[pulumi.Input[float]] = None,
            host_shape_name: Optional[pulumi.Input[str]] = None,
            is_billing_continuation_in_progress: Optional[pulumi.Input[bool]] = None,
            is_billing_swapping_in_progress: Optional[pulumi.Input[bool]] = None,
            next_sku: Optional[pulumi.Input[str]] = None,
            non_upgraded_esxi_host_id: Optional[pulumi.Input[str]] = None,
            replacement_esxi_host_id: Optional[pulumi.Input[str]] = None,
            sddc_id: Optional[pulumi.Input[str]] = None,
            state: Optional[pulumi.Input[str]] = None,
            swap_billing_host_id: Optional[pulumi.Input[str]] = None,
            time_created: Optional[pulumi.Input[str]] = None,
            time_updated: Optional[pulumi.Input[str]] = None,
            upgraded_replacement_esxi_host_id: Optional[pulumi.Input[str]] = None,
            vmware_software_version: Optional[pulumi.Input[str]] = None) -> 'EsxiHost':
        """
        Get an existing EsxiHost resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EsxiHostState.__new__(_EsxiHostState)

        __props__.__dict__["billing_contract_end_date"] = billing_contract_end_date
        __props__.__dict__["billing_donor_host_id"] = billing_donor_host_id
        __props__.__dict__["capacity_reservation_id"] = capacity_reservation_id
        __props__.__dict__["compartment_id"] = compartment_id
        __props__.__dict__["compute_availability_domain"] = compute_availability_domain
        __props__.__dict__["compute_instance_id"] = compute_instance_id
        __props__.__dict__["current_sku"] = current_sku
        __props__.__dict__["defined_tags"] = defined_tags
        __props__.__dict__["display_name"] = display_name
        __props__.__dict__["failed_esxi_host_id"] = failed_esxi_host_id
        __props__.__dict__["freeform_tags"] = freeform_tags
        __props__.__dict__["grace_period_end_date"] = grace_period_end_date
        __props__.__dict__["host_ocpu_count"] = host_ocpu_count
        __props__.__dict__["host_shape_name"] = host_shape_name
        __props__.__dict__["is_billing_continuation_in_progress"] = is_billing_continuation_in_progress
        __props__.__dict__["is_billing_swapping_in_progress"] = is_billing_swapping_in_progress
        __props__.__dict__["next_sku"] = next_sku
        __props__.__dict__["non_upgraded_esxi_host_id"] = non_upgraded_esxi_host_id
        __props__.__dict__["replacement_esxi_host_id"] = replacement_esxi_host_id
        __props__.__dict__["sddc_id"] = sddc_id
        __props__.__dict__["state"] = state
        __props__.__dict__["swap_billing_host_id"] = swap_billing_host_id
        __props__.__dict__["time_created"] = time_created
        __props__.__dict__["time_updated"] = time_updated
        __props__.__dict__["upgraded_replacement_esxi_host_id"] = upgraded_replacement_esxi_host_id
        __props__.__dict__["vmware_software_version"] = vmware_software_version
        return EsxiHost(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="billingContractEndDate")
    def billing_contract_end_date(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "billing_contract_end_date")

    @property
    @pulumi.getter(name="billingDonorHostId")
    def billing_donor_host_id(self) -> pulumi.Output[Optional[str]]:
        warnings.warn("""This 'billing_donor_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
        pulumi.log.warn("""billing_donor_host_id is deprecated: This 'billing_donor_host_id' argument has been deprecated and will be computed only.""")

        return pulumi.get(self, "billing_donor_host_id")

    @property
    @pulumi.getter(name="capacityReservationId")
    def capacity_reservation_id(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "capacity_reservation_id")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="computeAvailabilityDomain")
    def compute_availability_domain(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "compute_availability_domain")

    @property
    @pulumi.getter(name="computeInstanceId")
    def compute_instance_id(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "compute_instance_id")

    @property
    @pulumi.getter(name="currentSku")
    def current_sku(self) -> pulumi.Output[Optional[str]]:
        warnings.warn("""The 'current_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
        pulumi.log.warn("""current_sku is deprecated: The 'current_sku' field has been deprecated. It is no longer supported.""")

        return pulumi.get(self, "current_sku")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> pulumi.Output[Optional[Mapping[str, Any]]]:
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="failedEsxiHostId")
    def failed_esxi_host_id(self) -> pulumi.Output[Optional[str]]:
        warnings.warn("""This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
        pulumi.log.warn("""failed_esxi_host_id is deprecated: This 'failed_esxi_host_id' argument has been deprecated and will be computed only.""")

        return pulumi.get(self, "failed_esxi_host_id")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> pulumi.Output[Optional[Mapping[str, Any]]]:
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter(name="gracePeriodEndDate")
    def grace_period_end_date(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "grace_period_end_date")

    @property
    @pulumi.getter(name="hostOcpuCount")
    def host_ocpu_count(self) -> pulumi.Output[Optional[float]]:
        return pulumi.get(self, "host_ocpu_count")

    @property
    @pulumi.getter(name="hostShapeName")
    def host_shape_name(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "host_shape_name")

    @property
    @pulumi.getter(name="isBillingContinuationInProgress")
    def is_billing_continuation_in_progress(self) -> pulumi.Output[Optional[bool]]:
        return pulumi.get(self, "is_billing_continuation_in_progress")

    @property
    @pulumi.getter(name="isBillingSwappingInProgress")
    def is_billing_swapping_in_progress(self) -> pulumi.Output[Optional[bool]]:
        return pulumi.get(self, "is_billing_swapping_in_progress")

    @property
    @pulumi.getter(name="nextSku")
    def next_sku(self) -> pulumi.Output[Optional[str]]:
        warnings.warn("""The 'next_sku' field has been deprecated. It is no longer supported.""", DeprecationWarning)
        pulumi.log.warn("""next_sku is deprecated: The 'next_sku' field has been deprecated. It is no longer supported.""")

        return pulumi.get(self, "next_sku")

    @property
    @pulumi.getter(name="nonUpgradedEsxiHostId")
    def non_upgraded_esxi_host_id(self) -> pulumi.Output[Optional[str]]:
        warnings.warn("""This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""", DeprecationWarning)
        pulumi.log.warn("""non_upgraded_esxi_host_id is deprecated: This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only.""")

        return pulumi.get(self, "non_upgraded_esxi_host_id")

    @property
    @pulumi.getter(name="replacementEsxiHostId")
    def replacement_esxi_host_id(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "replacement_esxi_host_id")

    @property
    @pulumi.getter(name="sddcId")
    def sddc_id(self) -> pulumi.Output[Optional[str]]:
        warnings.warn("""The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""", DeprecationWarning)
        pulumi.log.warn("""sddc_id is deprecated: The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead.""")

        return pulumi.get(self, "sddc_id")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="swapBillingHostId")
    def swap_billing_host_id(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "swap_billing_host_id")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "time_updated")

    @property
    @pulumi.getter(name="upgradedReplacementEsxiHostId")
    def upgraded_replacement_esxi_host_id(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "upgraded_replacement_esxi_host_id")

    @property
    @pulumi.getter(name="vmwareSoftwareVersion")
    def vmware_software_version(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "vmware_software_version")

