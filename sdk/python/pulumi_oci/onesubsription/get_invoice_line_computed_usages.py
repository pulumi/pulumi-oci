# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetInvoiceLineComputedUsagesResult',
    'AwaitableGetInvoiceLineComputedUsagesResult',
    'get_invoice_line_computed_usages',
    'get_invoice_line_computed_usages_output',
]

@pulumi.output_type
class GetInvoiceLineComputedUsagesResult:
    """
    A collection of values returned by getInvoiceLineComputedUsages.
    """
    def __init__(__self__, compartment_id=None, fields=None, filters=None, id=None, invoice_line_id=None, invoiceline_computed_usages=None):
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if fields and not isinstance(fields, list):
            raise TypeError("Expected argument 'fields' to be a list")
        pulumi.set(__self__, "fields", fields)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if invoice_line_id and not isinstance(invoice_line_id, str):
            raise TypeError("Expected argument 'invoice_line_id' to be a str")
        pulumi.set(__self__, "invoice_line_id", invoice_line_id)
        if invoiceline_computed_usages and not isinstance(invoiceline_computed_usages, list):
            raise TypeError("Expected argument 'invoiceline_computed_usages' to be a list")
        pulumi.set(__self__, "invoiceline_computed_usages", invoiceline_computed_usages)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter
    def fields(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "fields")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetInvoiceLineComputedUsagesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="invoiceLineId")
    def invoice_line_id(self) -> str:
        return pulumi.get(self, "invoice_line_id")

    @property
    @pulumi.getter(name="invoicelineComputedUsages")
    def invoiceline_computed_usages(self) -> Sequence['outputs.GetInvoiceLineComputedUsagesInvoicelineComputedUsageResult']:
        """
        The list of invoiceline_computed_usages.
        """
        return pulumi.get(self, "invoiceline_computed_usages")


class AwaitableGetInvoiceLineComputedUsagesResult(GetInvoiceLineComputedUsagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInvoiceLineComputedUsagesResult(
            compartment_id=self.compartment_id,
            fields=self.fields,
            filters=self.filters,
            id=self.id,
            invoice_line_id=self.invoice_line_id,
            invoiceline_computed_usages=self.invoiceline_computed_usages)


def get_invoice_line_computed_usages(compartment_id: Optional[str] = None,
                                     fields: Optional[Sequence[str]] = None,
                                     filters: Optional[Sequence[pulumi.InputType['GetInvoiceLineComputedUsagesFilterArgs']]] = None,
                                     invoice_line_id: Optional[str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInvoiceLineComputedUsagesResult:
    """
    This data source provides the list of Invoice Line Computed Usages in Oracle Cloud Infrastructure Onesubscription service.

    This is a collection API which returns a list of Invoiced Computed Usages for given Invoiceline id.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_invoice_line_computed_usages = oci.OneSubsription.get_invoice_line_computed_usages(compartment_id=var["compartment_id"],
        invoice_line_id=oci_onesubscription_invoice_line["test_invoice_line"]["id"],
        fields=var["invoice_line_computed_usage_fields"])
    ```


    :param str compartment_id: The OCID of the root compartment.
    :param Sequence[str] fields: Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
    :param str invoice_line_id: Invoice Line Identifier - Primary Key SPM
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['fields'] = fields
    __args__['filters'] = filters
    __args__['invoiceLineId'] = invoice_line_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:OneSubsription/getInvoiceLineComputedUsages:getInvoiceLineComputedUsages', __args__, opts=opts, typ=GetInvoiceLineComputedUsagesResult).value

    return AwaitableGetInvoiceLineComputedUsagesResult(
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        fields=pulumi.get(__ret__, 'fields'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        invoice_line_id=pulumi.get(__ret__, 'invoice_line_id'),
        invoiceline_computed_usages=pulumi.get(__ret__, 'invoiceline_computed_usages'))


@_utilities.lift_output_func(get_invoice_line_computed_usages)
def get_invoice_line_computed_usages_output(compartment_id: Optional[pulumi.Input[str]] = None,
                                            fields: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                                            filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetInvoiceLineComputedUsagesFilterArgs']]]]] = None,
                                            invoice_line_id: Optional[pulumi.Input[str]] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInvoiceLineComputedUsagesResult]:
    """
    This data source provides the list of Invoice Line Computed Usages in Oracle Cloud Infrastructure Onesubscription service.

    This is a collection API which returns a list of Invoiced Computed Usages for given Invoiceline id.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_invoice_line_computed_usages = oci.OneSubsription.get_invoice_line_computed_usages(compartment_id=var["compartment_id"],
        invoice_line_id=oci_onesubscription_invoice_line["test_invoice_line"]["id"],
        fields=var["invoice_line_computed_usage_fields"])
    ```


    :param str compartment_id: The OCID of the root compartment.
    :param Sequence[str] fields: Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
    :param str invoice_line_id: Invoice Line Identifier - Primary Key SPM
    """
    ...
