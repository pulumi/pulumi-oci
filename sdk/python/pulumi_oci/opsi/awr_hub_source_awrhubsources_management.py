# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['AwrHubSourceAwrhubsourcesManagementArgs', 'AwrHubSourceAwrhubsourcesManagement']

@pulumi.input_type
class AwrHubSourceAwrhubsourcesManagementArgs:
    def __init__(__self__, *,
                 awr_hub_source_id: pulumi.Input[str],
                 enable_awrhubsource: pulumi.Input[bool]):
        """
        The set of arguments for constructing a AwrHubSourceAwrhubsourcesManagement resource.
        :param pulumi.Input[str] awr_hub_source_id: Unique Awr Hub Source identifier
        :param pulumi.Input[bool] enable_awrhubsource: (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        pulumi.set(__self__, "awr_hub_source_id", awr_hub_source_id)
        pulumi.set(__self__, "enable_awrhubsource", enable_awrhubsource)

    @property
    @pulumi.getter(name="awrHubSourceId")
    def awr_hub_source_id(self) -> pulumi.Input[str]:
        """
        Unique Awr Hub Source identifier
        """
        return pulumi.get(self, "awr_hub_source_id")

    @awr_hub_source_id.setter
    def awr_hub_source_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "awr_hub_source_id", value)

    @property
    @pulumi.getter(name="enableAwrhubsource")
    def enable_awrhubsource(self) -> pulumi.Input[bool]:
        """
        (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "enable_awrhubsource")

    @enable_awrhubsource.setter
    def enable_awrhubsource(self, value: pulumi.Input[bool]):
        pulumi.set(self, "enable_awrhubsource", value)


@pulumi.input_type
class _AwrHubSourceAwrhubsourcesManagementState:
    def __init__(__self__, *,
                 awr_hub_source_id: Optional[pulumi.Input[str]] = None,
                 enable_awrhubsource: Optional[pulumi.Input[bool]] = None):
        """
        Input properties used for looking up and filtering AwrHubSourceAwrhubsourcesManagement resources.
        :param pulumi.Input[str] awr_hub_source_id: Unique Awr Hub Source identifier
        :param pulumi.Input[bool] enable_awrhubsource: (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        if awr_hub_source_id is not None:
            pulumi.set(__self__, "awr_hub_source_id", awr_hub_source_id)
        if enable_awrhubsource is not None:
            pulumi.set(__self__, "enable_awrhubsource", enable_awrhubsource)

    @property
    @pulumi.getter(name="awrHubSourceId")
    def awr_hub_source_id(self) -> Optional[pulumi.Input[str]]:
        """
        Unique Awr Hub Source identifier
        """
        return pulumi.get(self, "awr_hub_source_id")

    @awr_hub_source_id.setter
    def awr_hub_source_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awr_hub_source_id", value)

    @property
    @pulumi.getter(name="enableAwrhubsource")
    def enable_awrhubsource(self) -> Optional[pulumi.Input[bool]]:
        """
        (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "enable_awrhubsource")

    @enable_awrhubsource.setter
    def enable_awrhubsource(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_awrhubsource", value)


class AwrHubSourceAwrhubsourcesManagement(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 awr_hub_source_id: Optional[pulumi.Input[str]] = None,
                 enable_awrhubsource: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        """
        This resource provides the Awr Hub Source Awrhubsources Management resource in Oracle Cloud Infrastructure Opsi service.

        Enables a Awr Hub source database in Operations Insights. This will resume the Awr data flow for the given Awr Hub source if it was stopped earlier.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_awr_hub_source_awrhubsources_management = oci.opsi.AwrHubSourceAwrhubsourcesManagement("testAwrHubSourceAwrhubsourcesManagement",
            awr_hub_source_id=oci_opsi_awr_hub_source["test_awr_hub_source"]["id"],
            enable_awrhubsource=var["enable_awrhubsource"])
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] awr_hub_source_id: Unique Awr Hub Source identifier
        :param pulumi.Input[bool] enable_awrhubsource: (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AwrHubSourceAwrhubsourcesManagementArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource provides the Awr Hub Source Awrhubsources Management resource in Oracle Cloud Infrastructure Opsi service.

        Enables a Awr Hub source database in Operations Insights. This will resume the Awr data flow for the given Awr Hub source if it was stopped earlier.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_awr_hub_source_awrhubsources_management = oci.opsi.AwrHubSourceAwrhubsourcesManagement("testAwrHubSourceAwrhubsourcesManagement",
            awr_hub_source_id=oci_opsi_awr_hub_source["test_awr_hub_source"]["id"],
            enable_awrhubsource=var["enable_awrhubsource"])
        ```

        :param str resource_name: The name of the resource.
        :param AwrHubSourceAwrhubsourcesManagementArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AwrHubSourceAwrhubsourcesManagementArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 awr_hub_source_id: Optional[pulumi.Input[str]] = None,
                 enable_awrhubsource: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AwrHubSourceAwrhubsourcesManagementArgs.__new__(AwrHubSourceAwrhubsourcesManagementArgs)

            if awr_hub_source_id is None and not opts.urn:
                raise TypeError("Missing required property 'awr_hub_source_id'")
            __props__.__dict__["awr_hub_source_id"] = awr_hub_source_id
            if enable_awrhubsource is None and not opts.urn:
                raise TypeError("Missing required property 'enable_awrhubsource'")
            __props__.__dict__["enable_awrhubsource"] = enable_awrhubsource
        super(AwrHubSourceAwrhubsourcesManagement, __self__).__init__(
            'oci:Opsi/awrHubSourceAwrhubsourcesManagement:AwrHubSourceAwrhubsourcesManagement',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            awr_hub_source_id: Optional[pulumi.Input[str]] = None,
            enable_awrhubsource: Optional[pulumi.Input[bool]] = None) -> 'AwrHubSourceAwrhubsourcesManagement':
        """
        Get an existing AwrHubSourceAwrhubsourcesManagement resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] awr_hub_source_id: Unique Awr Hub Source identifier
        :param pulumi.Input[bool] enable_awrhubsource: (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
               
               
               ** IMPORTANT **
               Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AwrHubSourceAwrhubsourcesManagementState.__new__(_AwrHubSourceAwrhubsourcesManagementState)

        __props__.__dict__["awr_hub_source_id"] = awr_hub_source_id
        __props__.__dict__["enable_awrhubsource"] = enable_awrhubsource
        return AwrHubSourceAwrhubsourcesManagement(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="awrHubSourceId")
    def awr_hub_source_id(self) -> pulumi.Output[str]:
        """
        Unique Awr Hub Source identifier
        """
        return pulumi.get(self, "awr_hub_source_id")

    @property
    @pulumi.getter(name="enableAwrhubsource")
    def enable_awrhubsource(self) -> pulumi.Output[bool]:
        """
        (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.


        ** IMPORTANT **
        Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        """
        return pulumi.get(self, "enable_awrhubsource")

