# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAwrHubAwrSourcesSummaryResult',
    'AwaitableGetAwrHubAwrSourcesSummaryResult',
    'get_awr_hub_awr_sources_summary',
    'get_awr_hub_awr_sources_summary_output',
]

@pulumi.output_type
class GetAwrHubAwrSourcesSummaryResult:
    """
    A collection of values returned by getAwrHubAwrSourcesSummary.
    """
    def __init__(__self__, awr_hub_id=None, compartment_id=None, id=None, items=None, name=None):
        if awr_hub_id and not isinstance(awr_hub_id, str):
            raise TypeError("Expected argument 'awr_hub_id' to be a str")
        pulumi.set(__self__, "awr_hub_id", awr_hub_id)
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="awrHubId")
    def awr_hub_id(self) -> str:
        return pulumi.get(self, "awr_hub_id")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[str]:
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def items(self) -> Optional[Sequence['outputs.GetAwrHubAwrSourcesSummaryItemResult']]:
        return pulumi.get(self, "items")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")


class AwaitableGetAwrHubAwrSourcesSummaryResult(GetAwrHubAwrSourcesSummaryResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAwrHubAwrSourcesSummaryResult(
            awr_hub_id=self.awr_hub_id,
            compartment_id=self.compartment_id,
            id=self.id,
            items=self.items,
            name=self.name)


def get_awr_hub_awr_sources_summary(awr_hub_id: Optional[str] = None,
                                    compartment_id: Optional[str] = None,
                                    name: Optional[str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAwrHubAwrSourcesSummaryResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['awrHubId'] = awr_hub_id
    __args__['compartmentId'] = compartment_id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Opsi/getAwrHubAwrSourcesSummary:getAwrHubAwrSourcesSummary', __args__, opts=opts, typ=GetAwrHubAwrSourcesSummaryResult).value

    return AwaitableGetAwrHubAwrSourcesSummaryResult(
        awr_hub_id=pulumi.get(__ret__, 'awr_hub_id'),
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        id=pulumi.get(__ret__, 'id'),
        items=pulumi.get(__ret__, 'items'),
        name=pulumi.get(__ret__, 'name'))


@_utilities.lift_output_func(get_awr_hub_awr_sources_summary)
def get_awr_hub_awr_sources_summary_output(awr_hub_id: Optional[pulumi.Input[str]] = None,
                                           compartment_id: Optional[pulumi.Input[Optional[str]]] = None,
                                           name: Optional[pulumi.Input[Optional[str]]] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAwrHubAwrSourcesSummaryResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
