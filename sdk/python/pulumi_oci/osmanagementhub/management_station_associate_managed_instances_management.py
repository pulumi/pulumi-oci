# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ManagementStationAssociateManagedInstancesManagementArgs', 'ManagementStationAssociateManagedInstancesManagement']

@pulumi.input_type
class ManagementStationAssociateManagedInstancesManagementArgs:
    def __init__(__self__, *,
                 managed_instances: pulumi.Input[Sequence[pulumi.Input[str]]],
                 management_station_id: pulumi.Input[str],
                 work_request_details: Optional[pulumi.Input['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs']] = None):
        """
        The set of arguments for constructing a ManagementStationAssociateManagedInstancesManagement resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] managed_instances: List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to associate to the management station.
        :param pulumi.Input[str] management_station_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
        :param pulumi.Input['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs'] work_request_details: Provides the name and description of the job.
        """
        pulumi.set(__self__, "managed_instances", managed_instances)
        pulumi.set(__self__, "management_station_id", management_station_id)
        if work_request_details is not None:
            pulumi.set(__self__, "work_request_details", work_request_details)

    @property
    @pulumi.getter(name="managedInstances")
    def managed_instances(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to associate to the management station.
        """
        return pulumi.get(self, "managed_instances")

    @managed_instances.setter
    def managed_instances(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "managed_instances", value)

    @property
    @pulumi.getter(name="managementStationId")
    def management_station_id(self) -> pulumi.Input[str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
        """
        return pulumi.get(self, "management_station_id")

    @management_station_id.setter
    def management_station_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "management_station_id", value)

    @property
    @pulumi.getter(name="workRequestDetails")
    def work_request_details(self) -> Optional[pulumi.Input['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs']]:
        """
        Provides the name and description of the job.
        """
        return pulumi.get(self, "work_request_details")

    @work_request_details.setter
    def work_request_details(self, value: Optional[pulumi.Input['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs']]):
        pulumi.set(self, "work_request_details", value)


@pulumi.input_type
class _ManagementStationAssociateManagedInstancesManagementState:
    def __init__(__self__, *,
                 managed_instances: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 management_station_id: Optional[pulumi.Input[str]] = None,
                 work_request_details: Optional[pulumi.Input['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs']] = None):
        """
        Input properties used for looking up and filtering ManagementStationAssociateManagedInstancesManagement resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] managed_instances: List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to associate to the management station.
        :param pulumi.Input[str] management_station_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
        :param pulumi.Input['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs'] work_request_details: Provides the name and description of the job.
        """
        if managed_instances is not None:
            pulumi.set(__self__, "managed_instances", managed_instances)
        if management_station_id is not None:
            pulumi.set(__self__, "management_station_id", management_station_id)
        if work_request_details is not None:
            pulumi.set(__self__, "work_request_details", work_request_details)

    @property
    @pulumi.getter(name="managedInstances")
    def managed_instances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to associate to the management station.
        """
        return pulumi.get(self, "managed_instances")

    @managed_instances.setter
    def managed_instances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "managed_instances", value)

    @property
    @pulumi.getter(name="managementStationId")
    def management_station_id(self) -> Optional[pulumi.Input[str]]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
        """
        return pulumi.get(self, "management_station_id")

    @management_station_id.setter
    def management_station_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "management_station_id", value)

    @property
    @pulumi.getter(name="workRequestDetails")
    def work_request_details(self) -> Optional[pulumi.Input['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs']]:
        """
        Provides the name and description of the job.
        """
        return pulumi.get(self, "work_request_details")

    @work_request_details.setter
    def work_request_details(self, value: Optional[pulumi.Input['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs']]):
        pulumi.set(self, "work_request_details", value)


class ManagementStationAssociateManagedInstancesManagement(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 managed_instances: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 management_station_id: Optional[pulumi.Input[str]] = None,
                 work_request_details: Optional[pulumi.Input[Union['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs', 'ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgsDict']]] = None,
                 __props__=None):
        """
        This resource provides the Management Station Associate Managed Instances Management resource in Oracle Cloud Infrastructure Os Management Hub service.

        Associates managed instances to the specified management station

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_management_station_associate_managed_instances_management = oci.os_management_hub.ManagementStationAssociateManagedInstancesManagement("test_management_station_associate_managed_instances_management",
            managed_instances=management_station_associate_managed_instances_management_managed_instances,
            management_station_id=test_management_station["id"],
            work_request_details={
                "description": management_station_associate_managed_instances_management_work_request_details_description,
                "display_name": management_station_associate_managed_instances_management_work_request_details_display_name,
            })
        ```

        ## Import

        ManagementStationAssociateManagedInstancesManagement can be imported using the `id`, e.g.

        ```sh
        $ pulumi import oci:OsManagementHub/managementStationAssociateManagedInstancesManagement:ManagementStationAssociateManagedInstancesManagement test_management_station_associate_managed_instances_management "id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] managed_instances: List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to associate to the management station.
        :param pulumi.Input[str] management_station_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
        :param pulumi.Input[Union['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs', 'ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgsDict']] work_request_details: Provides the name and description of the job.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ManagementStationAssociateManagedInstancesManagementArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource provides the Management Station Associate Managed Instances Management resource in Oracle Cloud Infrastructure Os Management Hub service.

        Associates managed instances to the specified management station

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_management_station_associate_managed_instances_management = oci.os_management_hub.ManagementStationAssociateManagedInstancesManagement("test_management_station_associate_managed_instances_management",
            managed_instances=management_station_associate_managed_instances_management_managed_instances,
            management_station_id=test_management_station["id"],
            work_request_details={
                "description": management_station_associate_managed_instances_management_work_request_details_description,
                "display_name": management_station_associate_managed_instances_management_work_request_details_display_name,
            })
        ```

        ## Import

        ManagementStationAssociateManagedInstancesManagement can be imported using the `id`, e.g.

        ```sh
        $ pulumi import oci:OsManagementHub/managementStationAssociateManagedInstancesManagement:ManagementStationAssociateManagedInstancesManagement test_management_station_associate_managed_instances_management "id"
        ```

        :param str resource_name: The name of the resource.
        :param ManagementStationAssociateManagedInstancesManagementArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ManagementStationAssociateManagedInstancesManagementArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 managed_instances: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 management_station_id: Optional[pulumi.Input[str]] = None,
                 work_request_details: Optional[pulumi.Input[Union['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs', 'ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ManagementStationAssociateManagedInstancesManagementArgs.__new__(ManagementStationAssociateManagedInstancesManagementArgs)

            if managed_instances is None and not opts.urn:
                raise TypeError("Missing required property 'managed_instances'")
            __props__.__dict__["managed_instances"] = managed_instances
            if management_station_id is None and not opts.urn:
                raise TypeError("Missing required property 'management_station_id'")
            __props__.__dict__["management_station_id"] = management_station_id
            __props__.__dict__["work_request_details"] = work_request_details
        super(ManagementStationAssociateManagedInstancesManagement, __self__).__init__(
            'oci:OsManagementHub/managementStationAssociateManagedInstancesManagement:ManagementStationAssociateManagedInstancesManagement',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            managed_instances: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            management_station_id: Optional[pulumi.Input[str]] = None,
            work_request_details: Optional[pulumi.Input[Union['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs', 'ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgsDict']]] = None) -> 'ManagementStationAssociateManagedInstancesManagement':
        """
        Get an existing ManagementStationAssociateManagedInstancesManagement resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] managed_instances: List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to associate to the management station.
        :param pulumi.Input[str] management_station_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
        :param pulumi.Input[Union['ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgs', 'ManagementStationAssociateManagedInstancesManagementWorkRequestDetailsArgsDict']] work_request_details: Provides the name and description of the job.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ManagementStationAssociateManagedInstancesManagementState.__new__(_ManagementStationAssociateManagedInstancesManagementState)

        __props__.__dict__["managed_instances"] = managed_instances
        __props__.__dict__["management_station_id"] = management_station_id
        __props__.__dict__["work_request_details"] = work_request_details
        return ManagementStationAssociateManagedInstancesManagement(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="managedInstances")
    def managed_instances(self) -> pulumi.Output[Sequence[str]]:
        """
        List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to associate to the management station.
        """
        return pulumi.get(self, "managed_instances")

    @property
    @pulumi.getter(name="managementStationId")
    def management_station_id(self) -> pulumi.Output[str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
        """
        return pulumi.get(self, "management_station_id")

    @property
    @pulumi.getter(name="workRequestDetails")
    def work_request_details(self) -> pulumi.Output['outputs.ManagementStationAssociateManagedInstancesManagementWorkRequestDetails']:
        """
        Provides the name and description of the job.
        """
        return pulumi.get(self, "work_request_details")

