# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetBillingScheduleBillingScheduleResult',
    'GetBillingScheduleBillingScheduleProductResult',
    'GetBillingScheduleFilterResult',
]

@pulumi.output_type
class GetBillingScheduleBillingScheduleResult(dict):
    def __init__(__self__, *,
                 amount: Optional[str] = None,
                 ar_customer_transaction_id: Optional[str] = None,
                 ar_invoice_number: Optional[str] = None,
                 billing_frequency: Optional[str] = None,
                 invoice_status: Optional[str] = None,
                 net_unit_price: Optional[str] = None,
                 order_number: Optional[str] = None,
                 products: Optional[Sequence['outputs.GetBillingScheduleBillingScheduleProductResult']] = None,
                 quantity: Optional[str] = None,
                 time_end: Optional[str] = None,
                 time_invoicing: Optional[str] = None,
                 time_start: Optional[str] = None):
        if amount is not None:
            pulumi.set(__self__, "amount", amount)
        if ar_customer_transaction_id is not None:
            pulumi.set(__self__, "ar_customer_transaction_id", ar_customer_transaction_id)
        if ar_invoice_number is not None:
            pulumi.set(__self__, "ar_invoice_number", ar_invoice_number)
        if billing_frequency is not None:
            pulumi.set(__self__, "billing_frequency", billing_frequency)
        if invoice_status is not None:
            pulumi.set(__self__, "invoice_status", invoice_status)
        if net_unit_price is not None:
            pulumi.set(__self__, "net_unit_price", net_unit_price)
        if order_number is not None:
            pulumi.set(__self__, "order_number", order_number)
        if products is not None:
            pulumi.set(__self__, "products", products)
        if quantity is not None:
            pulumi.set(__self__, "quantity", quantity)
        if time_end is not None:
            pulumi.set(__self__, "time_end", time_end)
        if time_invoicing is not None:
            pulumi.set(__self__, "time_invoicing", time_invoicing)
        if time_start is not None:
            pulumi.set(__self__, "time_start", time_start)

    @property
    @pulumi.getter
    def amount(self) -> Optional[str]:
        return pulumi.get(self, "amount")

    @property
    @pulumi.getter(name="arCustomerTransactionId")
    def ar_customer_transaction_id(self) -> Optional[str]:
        return pulumi.get(self, "ar_customer_transaction_id")

    @property
    @pulumi.getter(name="arInvoiceNumber")
    def ar_invoice_number(self) -> Optional[str]:
        return pulumi.get(self, "ar_invoice_number")

    @property
    @pulumi.getter(name="billingFrequency")
    def billing_frequency(self) -> Optional[str]:
        return pulumi.get(self, "billing_frequency")

    @property
    @pulumi.getter(name="invoiceStatus")
    def invoice_status(self) -> Optional[str]:
        return pulumi.get(self, "invoice_status")

    @property
    @pulumi.getter(name="netUnitPrice")
    def net_unit_price(self) -> Optional[str]:
        return pulumi.get(self, "net_unit_price")

    @property
    @pulumi.getter(name="orderNumber")
    def order_number(self) -> Optional[str]:
        return pulumi.get(self, "order_number")

    @property
    @pulumi.getter
    def products(self) -> Optional[Sequence['outputs.GetBillingScheduleBillingScheduleProductResult']]:
        return pulumi.get(self, "products")

    @property
    @pulumi.getter
    def quantity(self) -> Optional[str]:
        return pulumi.get(self, "quantity")

    @property
    @pulumi.getter(name="timeEnd")
    def time_end(self) -> Optional[str]:
        return pulumi.get(self, "time_end")

    @property
    @pulumi.getter(name="timeInvoicing")
    def time_invoicing(self) -> Optional[str]:
        return pulumi.get(self, "time_invoicing")

    @property
    @pulumi.getter(name="timeStart")
    def time_start(self) -> Optional[str]:
        return pulumi.get(self, "time_start")


@pulumi.output_type
class GetBillingScheduleBillingScheduleProductResult(dict):
    def __init__(__self__, *,
                 name: Optional[str] = None,
                 part_number: Optional[str] = None):
        if name is not None:
            pulumi.set(__self__, "name", name)
        if part_number is not None:
            pulumi.set(__self__, "part_number", part_number)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="partNumber")
    def part_number(self) -> Optional[str]:
        return pulumi.get(self, "part_number")


@pulumi.output_type
class GetBillingScheduleFilterResult(dict):
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")


