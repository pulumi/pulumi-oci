# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetOrganizationSubscriptionsFilterResult',
    'GetOrganizationSubscriptionsSubscriptionResult',
    'GetOrganizationSubscriptionsSubscriptionCurrencyResult',
]

@pulumi.output_type
class GetOrganizationSubscriptionsFilterResult(dict):
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 regex: Optional[bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if regex is not None:
            pulumi.set(__self__, "regex", regex)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter
    def regex(self) -> Optional[bool]:
        return pulumi.get(self, "regex")


@pulumi.output_type
class GetOrganizationSubscriptionsSubscriptionResult(dict):
    def __init__(__self__, *,
                 currencies: Optional[Sequence['outputs.GetOrganizationSubscriptionsSubscriptionCurrencyResult']] = None,
                 id: Optional[str] = None,
                 service_name: Optional[str] = None,
                 status: Optional[str] = None,
                 time_end: Optional[str] = None,
                 time_start: Optional[str] = None,
                 total_value: Optional[str] = None,
                 type: Optional[str] = None):
        if currencies is not None:
            pulumi.set(__self__, "currencies", currencies)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if service_name is not None:
            pulumi.set(__self__, "service_name", service_name)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if time_end is not None:
            pulumi.set(__self__, "time_end", time_end)
        if time_start is not None:
            pulumi.set(__self__, "time_start", time_start)
        if total_value is not None:
            pulumi.set(__self__, "total_value", total_value)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def currencies(self) -> Optional[Sequence['outputs.GetOrganizationSubscriptionsSubscriptionCurrencyResult']]:
        return pulumi.get(self, "currencies")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> Optional[str]:
        return pulumi.get(self, "service_name")

    @property
    @pulumi.getter
    def status(self) -> Optional[str]:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="timeEnd")
    def time_end(self) -> Optional[str]:
        return pulumi.get(self, "time_end")

    @property
    @pulumi.getter(name="timeStart")
    def time_start(self) -> Optional[str]:
        return pulumi.get(self, "time_start")

    @property
    @pulumi.getter(name="totalValue")
    def total_value(self) -> Optional[str]:
        return pulumi.get(self, "total_value")

    @property
    @pulumi.getter
    def type(self) -> Optional[str]:
        return pulumi.get(self, "type")


@pulumi.output_type
class GetOrganizationSubscriptionsSubscriptionCurrencyResult(dict):
    def __init__(__self__, *,
                 iso_code: Optional[str] = None,
                 name: Optional[str] = None,
                 std_precision: Optional[str] = None):
        if iso_code is not None:
            pulumi.set(__self__, "iso_code", iso_code)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if std_precision is not None:
            pulumi.set(__self__, "std_precision", std_precision)

    @property
    @pulumi.getter(name="isoCode")
    def iso_code(self) -> Optional[str]:
        return pulumi.get(self, "iso_code")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="stdPrecision")
    def std_precision(self) -> Optional[str]:
        return pulumi.get(self, "std_precision")


