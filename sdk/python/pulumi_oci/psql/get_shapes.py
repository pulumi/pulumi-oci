# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetShapesResult',
    'AwaitableGetShapesResult',
    'get_shapes',
    'get_shapes_output',
]

@pulumi.output_type
class GetShapesResult:
    """
    A collection of values returned by getShapes.
    """
    def __init__(__self__, compartment_id=None, filters=None, id=None, shape_collections=None):
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if shape_collections and not isinstance(shape_collections, list):
            raise TypeError("Expected argument 'shape_collections' to be a list")
        pulumi.set(__self__, "shape_collections", shape_collections)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[str]:
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetShapesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        Unique identifier for the shape
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="shapeCollections")
    def shape_collections(self) -> Sequence['outputs.GetShapesShapeCollectionResult']:
        """
        The list of shape_collection.
        """
        return pulumi.get(self, "shape_collections")


class AwaitableGetShapesResult(GetShapesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetShapesResult(
            compartment_id=self.compartment_id,
            filters=self.filters,
            id=self.id,
            shape_collections=self.shape_collections)


def get_shapes(compartment_id: Optional[str] = None,
               filters: Optional[Sequence[pulumi.InputType['GetShapesFilterArgs']]] = None,
               id: Optional[str] = None,
               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetShapesResult:
    """
    This data source provides the list of Shapes in Oracle Cloud Infrastructure Psql service.

    Returns the list of shapes allowed in the region.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_shapes = oci.Psql.get_shapes(compartment_id=var["compartment_id"],
        id=var["shape_id"])
    ```


    :param str compartment_id: The ID of the compartment in which to list resources.
    :param str id: A filter to return the feature by the shape name.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['filters'] = filters
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Psql/getShapes:getShapes', __args__, opts=opts, typ=GetShapesResult).value

    return AwaitableGetShapesResult(
        compartment_id=pulumi.get(__ret__, 'compartment_id'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        shape_collections=pulumi.get(__ret__, 'shape_collections'))


@_utilities.lift_output_func(get_shapes)
def get_shapes_output(compartment_id: Optional[pulumi.Input[Optional[str]]] = None,
                      filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetShapesFilterArgs']]]]] = None,
                      id: Optional[pulumi.Input[Optional[str]]] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetShapesResult]:
    """
    This data source provides the list of Shapes in Oracle Cloud Infrastructure Psql service.

    Returns the list of shapes allowed in the region.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_shapes = oci.Psql.get_shapes(compartment_id=var["compartment_id"],
        id=var["shape_id"])
    ```


    :param str compartment_id: The ID of the compartment in which to list resources.
    :param str id: A filter to return the feature by the shape name.
    """
    ...
