# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IngressGatewayRouteTableArgs', 'IngressGatewayRouteTable']

@pulumi.input_type
class IngressGatewayRouteTableArgs:
    def __init__(__self__, *,
                 compartment_id: pulumi.Input[str],
                 ingress_gateway_id: pulumi.Input[str],
                 route_rules: pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]],
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a IngressGatewayRouteTable resource.
        :param pulumi.Input[str] compartment_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param pulumi.Input[str] ingress_gateway_id: The OCID of the service mesh in which this access policy is created.
        :param pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]] route_rules: (Updatable) The route rules for the ingress gateway.
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        :param pulumi.Input[str] description: (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        :param pulumi.Input[str] name: (Updatable) Name of the ingress gateway host that this route should apply to.
        :param pulumi.Input[int] priority: (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
        """
        IngressGatewayRouteTableArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            compartment_id=compartment_id,
            ingress_gateway_id=ingress_gateway_id,
            route_rules=route_rules,
            defined_tags=defined_tags,
            description=description,
            freeform_tags=freeform_tags,
            name=name,
            priority=priority,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             compartment_id: pulumi.Input[str],
             ingress_gateway_id: pulumi.Input[str],
             route_rules: pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]],
             defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             description: Optional[pulumi.Input[str]] = None,
             freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             name: Optional[pulumi.Input[str]] = None,
             priority: Optional[pulumi.Input[int]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'compartmentId' in kwargs:
            compartment_id = kwargs['compartmentId']
        if 'ingressGatewayId' in kwargs:
            ingress_gateway_id = kwargs['ingressGatewayId']
        if 'routeRules' in kwargs:
            route_rules = kwargs['routeRules']
        if 'definedTags' in kwargs:
            defined_tags = kwargs['definedTags']
        if 'freeformTags' in kwargs:
            freeform_tags = kwargs['freeformTags']

        _setter("compartment_id", compartment_id)
        _setter("ingress_gateway_id", ingress_gateway_id)
        _setter("route_rules", route_rules)
        if defined_tags is not None:
            _setter("defined_tags", defined_tags)
        if description is not None:
            _setter("description", description)
        if freeform_tags is not None:
            _setter("freeform_tags", freeform_tags)
        if name is not None:
            _setter("name", name)
        if priority is not None:
            _setter("priority", priority)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Input[str]:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="ingressGatewayId")
    def ingress_gateway_id(self) -> pulumi.Input[str]:
        """
        The OCID of the service mesh in which this access policy is created.
        """
        return pulumi.get(self, "ingress_gateway_id")

    @ingress_gateway_id.setter
    def ingress_gateway_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "ingress_gateway_id", value)

    @property
    @pulumi.getter(name="routeRules")
    def route_rules(self) -> pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]]:
        """
        (Updatable) The route rules for the ingress gateway.
        """
        return pulumi.get(self, "route_rules")

    @route_rules.setter
    def route_rules(self, value: pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]]):
        pulumi.set(self, "route_rules", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the ingress gateway host that this route should apply to.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)


@pulumi.input_type
class _IngressGatewayRouteTableState:
    def __init__(__self__, *,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 ingress_gateway_id: Optional[pulumi.Input[str]] = None,
                 lifecycle_details: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 route_rules: Optional[pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 system_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 time_created: Optional[pulumi.Input[str]] = None,
                 time_updated: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering IngressGatewayRouteTable resources.
        :param pulumi.Input[str] compartment_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        :param pulumi.Input[str] description: (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        :param pulumi.Input[str] ingress_gateway_id: The OCID of the service mesh in which this access policy is created.
        :param pulumi.Input[str] lifecycle_details: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
        :param pulumi.Input[str] name: (Updatable) Name of the ingress gateway host that this route should apply to.
        :param pulumi.Input[int] priority: (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
        :param pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]] route_rules: (Updatable) The route rules for the ingress gateway.
        :param pulumi.Input[str] state: The current state of the Resource.
        :param pulumi.Input[Mapping[str, Any]] system_tags: Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param pulumi.Input[str] time_created: The time when this resource was created in an RFC3339 formatted datetime string.
        :param pulumi.Input[str] time_updated: The time when this resource was updated in an RFC3339 formatted datetime string.
        """
        _IngressGatewayRouteTableState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            compartment_id=compartment_id,
            defined_tags=defined_tags,
            description=description,
            freeform_tags=freeform_tags,
            ingress_gateway_id=ingress_gateway_id,
            lifecycle_details=lifecycle_details,
            name=name,
            priority=priority,
            route_rules=route_rules,
            state=state,
            system_tags=system_tags,
            time_created=time_created,
            time_updated=time_updated,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             compartment_id: Optional[pulumi.Input[str]] = None,
             defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             description: Optional[pulumi.Input[str]] = None,
             freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             ingress_gateway_id: Optional[pulumi.Input[str]] = None,
             lifecycle_details: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             priority: Optional[pulumi.Input[int]] = None,
             route_rules: Optional[pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]]] = None,
             state: Optional[pulumi.Input[str]] = None,
             system_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             time_created: Optional[pulumi.Input[str]] = None,
             time_updated: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'compartmentId' in kwargs:
            compartment_id = kwargs['compartmentId']
        if 'definedTags' in kwargs:
            defined_tags = kwargs['definedTags']
        if 'freeformTags' in kwargs:
            freeform_tags = kwargs['freeformTags']
        if 'ingressGatewayId' in kwargs:
            ingress_gateway_id = kwargs['ingressGatewayId']
        if 'lifecycleDetails' in kwargs:
            lifecycle_details = kwargs['lifecycleDetails']
        if 'routeRules' in kwargs:
            route_rules = kwargs['routeRules']
        if 'systemTags' in kwargs:
            system_tags = kwargs['systemTags']
        if 'timeCreated' in kwargs:
            time_created = kwargs['timeCreated']
        if 'timeUpdated' in kwargs:
            time_updated = kwargs['timeUpdated']

        if compartment_id is not None:
            _setter("compartment_id", compartment_id)
        if defined_tags is not None:
            _setter("defined_tags", defined_tags)
        if description is not None:
            _setter("description", description)
        if freeform_tags is not None:
            _setter("freeform_tags", freeform_tags)
        if ingress_gateway_id is not None:
            _setter("ingress_gateway_id", ingress_gateway_id)
        if lifecycle_details is not None:
            _setter("lifecycle_details", lifecycle_details)
        if name is not None:
            _setter("name", name)
        if priority is not None:
            _setter("priority", priority)
        if route_rules is not None:
            _setter("route_rules", route_rules)
        if state is not None:
            _setter("state", state)
        if system_tags is not None:
            _setter("system_tags", system_tags)
        if time_created is not None:
            _setter("time_created", time_created)
        if time_updated is not None:
            _setter("time_updated", time_updated)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @compartment_id.setter
    def compartment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compartment_id", value)

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        """
        return pulumi.get(self, "defined_tags")

    @defined_tags.setter
    def defined_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "defined_tags", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        """
        return pulumi.get(self, "freeform_tags")

    @freeform_tags.setter
    def freeform_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "freeform_tags", value)

    @property
    @pulumi.getter(name="ingressGatewayId")
    def ingress_gateway_id(self) -> Optional[pulumi.Input[str]]:
        """
        The OCID of the service mesh in which this access policy is created.
        """
        return pulumi.get(self, "ingress_gateway_id")

    @ingress_gateway_id.setter
    def ingress_gateway_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ingress_gateway_id", value)

    @property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> Optional[pulumi.Input[str]]:
        """
        A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
        """
        return pulumi.get(self, "lifecycle_details")

    @lifecycle_details.setter
    def lifecycle_details(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "lifecycle_details", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        (Updatable) Name of the ingress gateway host that this route should apply to.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)

    @property
    @pulumi.getter(name="routeRules")
    def route_rules(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]]]:
        """
        (Updatable) The route rules for the ingress gateway.
        """
        return pulumi.get(self, "route_rules")

    @route_rules.setter
    def route_rules(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IngressGatewayRouteTableRouteRuleArgs']]]]):
        pulumi.set(self, "route_rules", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        """
        The current state of the Resource.
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @system_tags.setter
    def system_tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "system_tags", value)

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> Optional[pulumi.Input[str]]:
        """
        The time when this resource was created in an RFC3339 formatted datetime string.
        """
        return pulumi.get(self, "time_created")

    @time_created.setter
    def time_created(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_created", value)

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> Optional[pulumi.Input[str]]:
        """
        The time when this resource was updated in an RFC3339 formatted datetime string.
        """
        return pulumi.get(self, "time_updated")

    @time_updated.setter
    def time_updated(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_updated", value)


class IngressGatewayRouteTable(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 ingress_gateway_id: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 route_rules: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IngressGatewayRouteTableRouteRuleArgs']]]]] = None,
                 __props__=None):
        """
        This resource provides the Ingress Gateway Route Table resource in Oracle Cloud Infrastructure Service Mesh service.

        Creates a new IngressGatewayRouteTable.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_ingress_gateway_route_table = oci.service_mesh.IngressGatewayRouteTable("testIngressGatewayRouteTable",
            compartment_id=var["compartment_id"],
            ingress_gateway_id=oci_service_mesh_ingress_gateway["test_ingress_gateway"]["id"],
            route_rules=[oci.service_mesh.IngressGatewayRouteTableRouteRuleArgs(
                destinations=[oci.service_mesh.IngressGatewayRouteTableRouteRuleDestinationArgs(
                    virtual_service_id=oci_service_mesh_virtual_service["test_virtual_service"]["id"],
                    port=var["ingress_gateway_route_table_route_rules_destinations_port"],
                    weight=var["ingress_gateway_route_table_route_rules_destinations_weight"],
                )],
                type=var["ingress_gateway_route_table_route_rules_type"],
                ingress_gateway_host=oci.service_mesh.IngressGatewayRouteTableRouteRuleIngressGatewayHostArgs(
                    name=var["ingress_gateway_route_table_route_rules_ingress_gateway_host_name"],
                    port=var["ingress_gateway_route_table_route_rules_ingress_gateway_host_port"],
                ),
                is_grpc=var["ingress_gateway_route_table_route_rules_is_grpc"],
                is_host_rewrite_enabled=var["ingress_gateway_route_table_route_rules_is_host_rewrite_enabled"],
                is_path_rewrite_enabled=var["ingress_gateway_route_table_route_rules_is_path_rewrite_enabled"],
                path=var["ingress_gateway_route_table_route_rules_path"],
                path_type=var["ingress_gateway_route_table_route_rules_path_type"],
                request_timeout_in_ms=var["ingress_gateway_route_table_route_rules_request_timeout_in_ms"],
            )],
            defined_tags={
                "foo-namespace.bar-key": "value",
            },
            description=var["ingress_gateway_route_table_description"],
            freeform_tags={
                "bar-key": "value",
            },
            priority=var["ingress_gateway_route_table_priority"])
        ```

        ## Import

        IngressGatewayRouteTables can be imported using the `id`, e.g.

        ```sh
         $ pulumi import oci:ServiceMesh/ingressGatewayRouteTable:IngressGatewayRouteTable test_ingress_gateway_route_table "id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compartment_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        :param pulumi.Input[str] description: (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        :param pulumi.Input[str] ingress_gateway_id: The OCID of the service mesh in which this access policy is created.
        :param pulumi.Input[str] name: (Updatable) Name of the ingress gateway host that this route should apply to.
        :param pulumi.Input[int] priority: (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IngressGatewayRouteTableRouteRuleArgs']]]] route_rules: (Updatable) The route rules for the ingress gateway.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IngressGatewayRouteTableArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource provides the Ingress Gateway Route Table resource in Oracle Cloud Infrastructure Service Mesh service.

        Creates a new IngressGatewayRouteTable.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_oci as oci

        test_ingress_gateway_route_table = oci.service_mesh.IngressGatewayRouteTable("testIngressGatewayRouteTable",
            compartment_id=var["compartment_id"],
            ingress_gateway_id=oci_service_mesh_ingress_gateway["test_ingress_gateway"]["id"],
            route_rules=[oci.service_mesh.IngressGatewayRouteTableRouteRuleArgs(
                destinations=[oci.service_mesh.IngressGatewayRouteTableRouteRuleDestinationArgs(
                    virtual_service_id=oci_service_mesh_virtual_service["test_virtual_service"]["id"],
                    port=var["ingress_gateway_route_table_route_rules_destinations_port"],
                    weight=var["ingress_gateway_route_table_route_rules_destinations_weight"],
                )],
                type=var["ingress_gateway_route_table_route_rules_type"],
                ingress_gateway_host=oci.service_mesh.IngressGatewayRouteTableRouteRuleIngressGatewayHostArgs(
                    name=var["ingress_gateway_route_table_route_rules_ingress_gateway_host_name"],
                    port=var["ingress_gateway_route_table_route_rules_ingress_gateway_host_port"],
                ),
                is_grpc=var["ingress_gateway_route_table_route_rules_is_grpc"],
                is_host_rewrite_enabled=var["ingress_gateway_route_table_route_rules_is_host_rewrite_enabled"],
                is_path_rewrite_enabled=var["ingress_gateway_route_table_route_rules_is_path_rewrite_enabled"],
                path=var["ingress_gateway_route_table_route_rules_path"],
                path_type=var["ingress_gateway_route_table_route_rules_path_type"],
                request_timeout_in_ms=var["ingress_gateway_route_table_route_rules_request_timeout_in_ms"],
            )],
            defined_tags={
                "foo-namespace.bar-key": "value",
            },
            description=var["ingress_gateway_route_table_description"],
            freeform_tags={
                "bar-key": "value",
            },
            priority=var["ingress_gateway_route_table_priority"])
        ```

        ## Import

        IngressGatewayRouteTables can be imported using the `id`, e.g.

        ```sh
         $ pulumi import oci:ServiceMesh/ingressGatewayRouteTable:IngressGatewayRouteTable test_ingress_gateway_route_table "id"
        ```

        :param str resource_name: The name of the resource.
        :param IngressGatewayRouteTableArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IngressGatewayRouteTableArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            IngressGatewayRouteTableArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 compartment_id: Optional[pulumi.Input[str]] = None,
                 defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 ingress_gateway_id: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 route_rules: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IngressGatewayRouteTableRouteRuleArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IngressGatewayRouteTableArgs.__new__(IngressGatewayRouteTableArgs)

            if compartment_id is None and not opts.urn:
                raise TypeError("Missing required property 'compartment_id'")
            __props__.__dict__["compartment_id"] = compartment_id
            __props__.__dict__["defined_tags"] = defined_tags
            __props__.__dict__["description"] = description
            __props__.__dict__["freeform_tags"] = freeform_tags
            if ingress_gateway_id is None and not opts.urn:
                raise TypeError("Missing required property 'ingress_gateway_id'")
            __props__.__dict__["ingress_gateway_id"] = ingress_gateway_id
            __props__.__dict__["name"] = name
            __props__.__dict__["priority"] = priority
            if route_rules is None and not opts.urn:
                raise TypeError("Missing required property 'route_rules'")
            __props__.__dict__["route_rules"] = route_rules
            __props__.__dict__["lifecycle_details"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["system_tags"] = None
            __props__.__dict__["time_created"] = None
            __props__.__dict__["time_updated"] = None
        super(IngressGatewayRouteTable, __self__).__init__(
            'oci:ServiceMesh/ingressGatewayRouteTable:IngressGatewayRouteTable',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            compartment_id: Optional[pulumi.Input[str]] = None,
            defined_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            description: Optional[pulumi.Input[str]] = None,
            freeform_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            ingress_gateway_id: Optional[pulumi.Input[str]] = None,
            lifecycle_details: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            priority: Optional[pulumi.Input[int]] = None,
            route_rules: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IngressGatewayRouteTableRouteRuleArgs']]]]] = None,
            state: Optional[pulumi.Input[str]] = None,
            system_tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            time_created: Optional[pulumi.Input[str]] = None,
            time_updated: Optional[pulumi.Input[str]] = None) -> 'IngressGatewayRouteTable':
        """
        Get an existing IngressGatewayRouteTable resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compartment_id: (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        :param pulumi.Input[Mapping[str, Any]] defined_tags: (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        :param pulumi.Input[str] description: (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        :param pulumi.Input[Mapping[str, Any]] freeform_tags: (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        :param pulumi.Input[str] ingress_gateway_id: The OCID of the service mesh in which this access policy is created.
        :param pulumi.Input[str] lifecycle_details: A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
        :param pulumi.Input[str] name: (Updatable) Name of the ingress gateway host that this route should apply to.
        :param pulumi.Input[int] priority: (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IngressGatewayRouteTableRouteRuleArgs']]]] route_rules: (Updatable) The route rules for the ingress gateway.
        :param pulumi.Input[str] state: The current state of the Resource.
        :param pulumi.Input[Mapping[str, Any]] system_tags: Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        :param pulumi.Input[str] time_created: The time when this resource was created in an RFC3339 formatted datetime string.
        :param pulumi.Input[str] time_updated: The time when this resource was updated in an RFC3339 formatted datetime string.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IngressGatewayRouteTableState.__new__(_IngressGatewayRouteTableState)

        __props__.__dict__["compartment_id"] = compartment_id
        __props__.__dict__["defined_tags"] = defined_tags
        __props__.__dict__["description"] = description
        __props__.__dict__["freeform_tags"] = freeform_tags
        __props__.__dict__["ingress_gateway_id"] = ingress_gateway_id
        __props__.__dict__["lifecycle_details"] = lifecycle_details
        __props__.__dict__["name"] = name
        __props__.__dict__["priority"] = priority
        __props__.__dict__["route_rules"] = route_rules
        __props__.__dict__["state"] = state
        __props__.__dict__["system_tags"] = system_tags
        __props__.__dict__["time_created"] = time_created
        __props__.__dict__["time_updated"] = time_updated
        return IngressGatewayRouteTable(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> pulumi.Output[str]:
        """
        (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter(name="definedTags")
    def defined_tags(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        """
        return pulumi.get(self, "defined_tags")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="freeformTags")
    def freeform_tags(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        """
        return pulumi.get(self, "freeform_tags")

    @property
    @pulumi.getter(name="ingressGatewayId")
    def ingress_gateway_id(self) -> pulumi.Output[str]:
        """
        The OCID of the service mesh in which this access policy is created.
        """
        return pulumi.get(self, "ingress_gateway_id")

    @property
    @pulumi.getter(name="lifecycleDetails")
    def lifecycle_details(self) -> pulumi.Output[str]:
        """
        A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
        """
        return pulumi.get(self, "lifecycle_details")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        (Updatable) Name of the ingress gateway host that this route should apply to.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def priority(self) -> pulumi.Output[int]:
        """
        (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
        """
        return pulumi.get(self, "priority")

    @property
    @pulumi.getter(name="routeRules")
    def route_rules(self) -> pulumi.Output[Sequence['outputs.IngressGatewayRouteTableRouteRule']]:
        """
        (Updatable) The route rules for the ingress gateway.
        """
        return pulumi.get(self, "route_rules")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[str]:
        """
        The current state of the Resource.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="systemTags")
    def system_tags(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        """
        return pulumi.get(self, "system_tags")

    @property
    @pulumi.getter(name="timeCreated")
    def time_created(self) -> pulumi.Output[str]:
        """
        The time when this resource was created in an RFC3339 formatted datetime string.
        """
        return pulumi.get(self, "time_created")

    @property
    @pulumi.getter(name="timeUpdated")
    def time_updated(self) -> pulumi.Output[str]:
        """
        The time when this resource was updated in an RFC3339 formatted datetime string.
        """
        return pulumi.get(self, "time_updated")

