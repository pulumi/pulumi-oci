# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetAssignedSubscriptionLineItemsResult',
    'AwaitableGetAssignedSubscriptionLineItemsResult',
    'get_assigned_subscription_line_items',
    'get_assigned_subscription_line_items_output',
]

@pulumi.output_type
class GetAssignedSubscriptionLineItemsResult:
    """
    A collection of values returned by getAssignedSubscriptionLineItems.
    """
    def __init__(__self__, assigned_subscription_id=None, assigned_subscription_line_item_collections=None, filters=None, id=None):
        if assigned_subscription_id and not isinstance(assigned_subscription_id, str):
            raise TypeError("Expected argument 'assigned_subscription_id' to be a str")
        pulumi.set(__self__, "assigned_subscription_id", assigned_subscription_id)
        if assigned_subscription_line_item_collections and not isinstance(assigned_subscription_line_item_collections, list):
            raise TypeError("Expected argument 'assigned_subscription_line_item_collections' to be a list")
        pulumi.set(__self__, "assigned_subscription_line_item_collections", assigned_subscription_line_item_collections)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="assignedSubscriptionId")
    def assigned_subscription_id(self) -> str:
        return pulumi.get(self, "assigned_subscription_id")

    @property
    @pulumi.getter(name="assignedSubscriptionLineItemCollections")
    def assigned_subscription_line_item_collections(self) -> Sequence['outputs.GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionResult']:
        """
        The list of assigned_subscription_line_item_collection.
        """
        return pulumi.get(self, "assigned_subscription_line_item_collections")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetAssignedSubscriptionLineItemsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetAssignedSubscriptionLineItemsResult(GetAssignedSubscriptionLineItemsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAssignedSubscriptionLineItemsResult(
            assigned_subscription_id=self.assigned_subscription_id,
            assigned_subscription_line_item_collections=self.assigned_subscription_line_item_collections,
            filters=self.filters,
            id=self.id)


def get_assigned_subscription_line_items(assigned_subscription_id: Optional[str] = None,
                                         filters: Optional[Sequence[Union['GetAssignedSubscriptionLineItemsFilterArgs', 'GetAssignedSubscriptionLineItemsFilterArgsDict']]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAssignedSubscriptionLineItemsResult:
    """
    This data source provides the list of Assigned Subscription Line Items in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.

    List line item summaries that a assigned subscription owns.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_assigned_subscription_line_items = oci.Tenantmanagercontrolplane.get_assigned_subscription_line_items(assigned_subscription_id=test_assigned_subscription["id"])
    ```


    :param str assigned_subscription_id: OCID of the assigned Oracle Cloud Subscription.
    """
    __args__ = dict()
    __args__['assignedSubscriptionId'] = assigned_subscription_id
    __args__['filters'] = filters
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('oci:Tenantmanagercontrolplane/getAssignedSubscriptionLineItems:getAssignedSubscriptionLineItems', __args__, opts=opts, typ=GetAssignedSubscriptionLineItemsResult).value

    return AwaitableGetAssignedSubscriptionLineItemsResult(
        assigned_subscription_id=pulumi.get(__ret__, 'assigned_subscription_id'),
        assigned_subscription_line_item_collections=pulumi.get(__ret__, 'assigned_subscription_line_item_collections'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'))
def get_assigned_subscription_line_items_output(assigned_subscription_id: Optional[pulumi.Input[str]] = None,
                                                filters: Optional[pulumi.Input[Optional[Sequence[Union['GetAssignedSubscriptionLineItemsFilterArgs', 'GetAssignedSubscriptionLineItemsFilterArgsDict']]]]] = None,
                                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAssignedSubscriptionLineItemsResult]:
    """
    This data source provides the list of Assigned Subscription Line Items in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.

    List line item summaries that a assigned subscription owns.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_assigned_subscription_line_items = oci.Tenantmanagercontrolplane.get_assigned_subscription_line_items(assigned_subscription_id=test_assigned_subscription["id"])
    ```


    :param str assigned_subscription_id: OCID of the assigned Oracle Cloud Subscription.
    """
    __args__ = dict()
    __args__['assignedSubscriptionId'] = assigned_subscription_id
    __args__['filters'] = filters
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('oci:Tenantmanagercontrolplane/getAssignedSubscriptionLineItems:getAssignedSubscriptionLineItems', __args__, opts=opts, typ=GetAssignedSubscriptionLineItemsResult)
    return __ret__.apply(lambda __response__: GetAssignedSubscriptionLineItemsResult(
        assigned_subscription_id=pulumi.get(__response__, 'assigned_subscription_id'),
        assigned_subscription_line_item_collections=pulumi.get(__response__, 'assigned_subscription_line_item_collections'),
        filters=pulumi.get(__response__, 'filters'),
        id=pulumi.get(__response__, 'id')))
